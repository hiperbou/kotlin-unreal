@file:Suppress("INTERFACE_WITH_SUPERCLASS", "OVERRIDING_FINAL_MEMBER", "RETURN_TYPE_MISMATCH_ON_OVERRIDE", "CONFLICTING_OVERLOADS")
package ue

import kotlin.js.*
import org.khronos.webgl.*
import org.w3c.dom.*
import org.w3c.dom.events.*
import org.w3c.dom.parsing.*
import org.w3c.dom.svg.*
import org.w3c.dom.url.*
import org.w3c.fetch.*
import org.w3c.files.*
import org.w3c.notifications.*
import org.w3c.performance.*
import org.w3c.workers.*
import org.w3c.xhr.*

external open class MaterialExpressionTime : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var bIgnorePause: Boolean
    open var bOverride_Period: Boolean
    open var Period: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionTime
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionTime
        fun GetDefaultObject(): MaterialExpressionTime
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionTime
        fun C(Other: UObject): MaterialExpressionTime
        fun C(Other: Any): MaterialExpressionTime
    }
}

external object EMaterialVectorCoordTransformSource {
    var TRANSFORMSOURCE_Tangent: String /* "TRANSFORMSOURCE_Tangent" */
    var TRANSFORMSOURCE_Local: String /* "TRANSFORMSOURCE_Local" */
    var TRANSFORMSOURCE_World: String /* "TRANSFORMSOURCE_World" */
    var TRANSFORMSOURCE_View: String /* "TRANSFORMSOURCE_View" */
    var TRANSFORMSOURCE_Camera: String /* "TRANSFORMSOURCE_Camera" */
    var TRANSFORMSOURCE_ParticleWorld: String /* "TRANSFORMSOURCE_ParticleWorld" */
    var TRANSFORMSOURCE_MAX: String /* "TRANSFORMSOURCE_MAX" */
}

external object EMaterialVectorCoordTransform {
    var TRANSFORM_Tangent: String /* "TRANSFORM_Tangent" */
    var TRANSFORM_Local: String /* "TRANSFORM_Local" */
    var TRANSFORM_World: String /* "TRANSFORM_World" */
    var TRANSFORM_View: String /* "TRANSFORM_View" */
    var TRANSFORM_Camera: String /* "TRANSFORM_Camera" */
    var TRANSFORM_ParticleWorld: String /* "TRANSFORM_ParticleWorld" */
    var TRANSFORM_MAX: String /* "TRANSFORM_MAX" */
}

external open class MaterialExpressionTransform : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput
    open var TransformSourceType: String /* "TRANSFORMSOURCE_Tangent" | "TRANSFORMSOURCE_Local" | "TRANSFORMSOURCE_World" | "TRANSFORMSOURCE_View" | "TRANSFORMSOURCE_Camera" | "TRANSFORMSOURCE_ParticleWorld" | "TRANSFORMSOURCE_MAX" */
    open var TransformType: String /* "TRANSFORM_Tangent" | "TRANSFORM_Local" | "TRANSFORM_World" | "TRANSFORM_View" | "TRANSFORM_Camera" | "TRANSFORM_ParticleWorld" | "TRANSFORM_MAX" */

    companion object {
        fun Load(ResourceName: String): MaterialExpressionTransform
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionTransform
        fun GetDefaultObject(): MaterialExpressionTransform
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionTransform
        fun C(Other: UObject): MaterialExpressionTransform
        fun C(Other: Any): MaterialExpressionTransform
    }
}

external object EMaterialPositionTransformSource {
    var TRANSFORMPOSSOURCE_Local: String /* "TRANSFORMPOSSOURCE_Local" */
    var TRANSFORMPOSSOURCE_World: String /* "TRANSFORMPOSSOURCE_World" */
    var TRANSFORMPOSSOURCE_TranslatedWorld: String /* "TRANSFORMPOSSOURCE_TranslatedWorld" */
    var TRANSFORMPOSSOURCE_View: String /* "TRANSFORMPOSSOURCE_View" */
    var TRANSFORMPOSSOURCE_Camera: String /* "TRANSFORMPOSSOURCE_Camera" */
    var TRANSFORMPOSSOURCE_Particle: String /* "TRANSFORMPOSSOURCE_Particle" */
    var TRANSFORMPOSSOURCE_MAX: String /* "TRANSFORMPOSSOURCE_MAX" */
}

external open class MaterialExpressionTransformPosition : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput
    open var TransformSourceType: String /* "TRANSFORMPOSSOURCE_Local" | "TRANSFORMPOSSOURCE_World" | "TRANSFORMPOSSOURCE_TranslatedWorld" | "TRANSFORMPOSSOURCE_View" | "TRANSFORMPOSSOURCE_Camera" | "TRANSFORMPOSSOURCE_Particle" | "TRANSFORMPOSSOURCE_MAX" */
    open var TransformType: String /* "TRANSFORMPOSSOURCE_Local" | "TRANSFORMPOSSOURCE_World" | "TRANSFORMPOSSOURCE_TranslatedWorld" | "TRANSFORMPOSSOURCE_View" | "TRANSFORMPOSSOURCE_Camera" | "TRANSFORMPOSSOURCE_Particle" | "TRANSFORMPOSSOURCE_MAX" */

    companion object {
        fun Load(ResourceName: String): MaterialExpressionTransformPosition
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionTransformPosition
        fun GetDefaultObject(): MaterialExpressionTransformPosition
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionTransformPosition
        fun C(Other: UObject): MaterialExpressionTransformPosition
        fun C(Other: Any): MaterialExpressionTransformPosition
    }
}

external open class MaterialExpressionTruncate : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionTruncate
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionTruncate
        fun GetDefaultObject(): MaterialExpressionTruncate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionTruncate
        fun C(Other: UObject): MaterialExpressionTruncate
        fun C(Other: Any): MaterialExpressionTruncate
    }
}

external open class MaterialExpressionTwoSidedSign : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionTwoSidedSign
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionTwoSidedSign
        fun GetDefaultObject(): MaterialExpressionTwoSidedSign
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionTwoSidedSign
        fun C(Other: UObject): MaterialExpressionTwoSidedSign
        fun C(Other: Any): MaterialExpressionTwoSidedSign
    }
}

external object EVectorNoiseFunction {
    var VNF_CellnoiseALU: String /* "VNF_CellnoiseALU" */
    var VNF_VectorALU: String /* "VNF_VectorALU" */
    var VNF_GradientALU: String /* "VNF_GradientALU" */
    var VNF_CurlALU: String /* "VNF_CurlALU" */
    var VNF_VoronoiALU: String /* "VNF_VoronoiALU" */
    var VNF_MAX: String /* "VNF_MAX" */
}

external open class MaterialExpressionVectorNoise : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Position: ExpressionInput
    open var NoiseFunction: String /* "VNF_CellnoiseALU" | "VNF_VectorALU" | "VNF_GradientALU" | "VNF_CurlALU" | "VNF_VoronoiALU" | "VNF_MAX" */
    open var Quality: Number
    open var bTiling: Boolean
    open var TileSize: Any

    companion object {
        fun Load(ResourceName: String): MaterialExpressionVectorNoise
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionVectorNoise
        fun GetDefaultObject(): MaterialExpressionVectorNoise
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionVectorNoise
        fun C(Other: UObject): MaterialExpressionVectorNoise
        fun C(Other: Any): MaterialExpressionVectorNoise
    }
}

external open class MaterialExpressionVertexColor : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionVertexColor
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionVertexColor
        fun GetDefaultObject(): MaterialExpressionVertexColor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionVertexColor
        fun C(Other: UObject): MaterialExpressionVertexColor
        fun C(Other: Any): MaterialExpressionVertexColor
    }
}

external open class MaterialExpressionVertexInterpolator : MaterialExpressionCustomOutput {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionVertexInterpolator
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionVertexInterpolator
        fun GetDefaultObject(): MaterialExpressionVertexInterpolator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionVertexInterpolator
        fun C(Other: UObject): MaterialExpressionVertexInterpolator
        fun C(Other: Any): MaterialExpressionVertexInterpolator
    }
}

external open class MaterialExpressionVertexNormalWS : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionVertexNormalWS
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionVertexNormalWS
        fun GetDefaultObject(): MaterialExpressionVertexNormalWS
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionVertexNormalWS
        fun C(Other: UObject): MaterialExpressionVertexNormalWS
        fun C(Other: Any): MaterialExpressionVertexNormalWS
    }
}

external object EMaterialExposedViewProperty {
    var MEVP_BufferSize: String /* "MEVP_BufferSize" */
    var MEVP_FieldOfView: String /* "MEVP_FieldOfView" */
    var MEVP_TanHalfFieldOfView: String /* "MEVP_TanHalfFieldOfView" */
    var MEVP_ViewSize: String /* "MEVP_ViewSize" */
    var MEVP_WorldSpaceViewPosition: String /* "MEVP_WorldSpaceViewPosition" */
    var MEVP_WorldSpaceCameraPosition: String /* "MEVP_WorldSpaceCameraPosition" */
    var MEVP_ViewportOffset: String /* "MEVP_ViewportOffset" */
    var MEVP_TemporalSampleCount: String /* "MEVP_TemporalSampleCount" */
    var MEVP_TemporalSampleIndex: String /* "MEVP_TemporalSampleIndex" */
    var MEVP_TemporalSampleOffset: String /* "MEVP_TemporalSampleOffset" */
    var MEVP_RuntimeVirtualTextureOutputLevel: String /* "MEVP_RuntimeVirtualTextureOutputLevel" */
    var MEVP_RuntimeVirtualTextureOutputDerivative: String /* "MEVP_RuntimeVirtualTextureOutputDerivative" */
    var MEVP_MAX: String /* "MEVP_MAX" */
}

external open class MaterialExpressionViewProperty : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Property: String /* "MEVP_BufferSize" | "MEVP_FieldOfView" | "MEVP_TanHalfFieldOfView" | "MEVP_ViewSize" | "MEVP_WorldSpaceViewPosition" | "MEVP_WorldSpaceCameraPosition" | "MEVP_ViewportOffset" | "MEVP_TemporalSampleCount" | "MEVP_TemporalSampleIndex" | "MEVP_TemporalSampleOffset" | "MEVP_RuntimeVirtualTextureOutputLevel" | "MEVP_RuntimeVirtualTextureOutputDerivative" | "MEVP_MAX" */

    companion object {
        fun Load(ResourceName: String): MaterialExpressionViewProperty
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionViewProperty
        fun GetDefaultObject(): MaterialExpressionViewProperty
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionViewProperty
        fun C(Other: UObject): MaterialExpressionViewProperty
        fun C(Other: Any): MaterialExpressionViewProperty
    }
}

external open class MaterialExpressionViewSize : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionViewSize
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionViewSize
        fun GetDefaultObject(): MaterialExpressionViewSize
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionViewSize
        fun C(Other: UObject): MaterialExpressionViewSize
        fun C(Other: Any): MaterialExpressionViewSize
    }
}

external open class MaterialExpressionVirtualTextureFeatureSwitch : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var No: ExpressionInput
    open var Yes: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionVirtualTextureFeatureSwitch
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionVirtualTextureFeatureSwitch
        fun GetDefaultObject(): MaterialExpressionVirtualTextureFeatureSwitch
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionVirtualTextureFeatureSwitch
        fun C(Other: UObject): MaterialExpressionVirtualTextureFeatureSwitch
        fun C(Other: Any): MaterialExpressionVirtualTextureFeatureSwitch
    }
}

external object EWorldPositionIncludedOffsets {
    var WPT_Default: String /* "WPT_Default" */
    var WPT_ExcludeAllShaderOffsets: String /* "WPT_ExcludeAllShaderOffsets" */
    var WPT_CameraRelative: String /* "WPT_CameraRelative" */
    var WPT_CameraRelativeNoOffsets: String /* "WPT_CameraRelativeNoOffsets" */
    var WPT_MAX: String /* "WPT_MAX" */
}

external open class MaterialExpressionWorldPosition : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var WorldPositionShaderOffset: String /* "WPT_Default" | "WPT_ExcludeAllShaderOffsets" | "WPT_CameraRelative" | "WPT_CameraRelativeNoOffsets" | "WPT_MAX" */

    companion object {
        fun Load(ResourceName: String): MaterialExpressionWorldPosition
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionWorldPosition
        fun GetDefaultObject(): MaterialExpressionWorldPosition
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionWorldPosition
        fun C(Other: UObject): MaterialExpressionWorldPosition
        fun C(Other: Any): MaterialExpressionWorldPosition
    }
}

external open class MaterialFunctionMaterialLayer : MaterialFunction {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialFunctionMaterialLayer
        fun Find(Outer: UObject, ResourceName: String): MaterialFunctionMaterialLayer
        fun GetDefaultObject(): MaterialFunctionMaterialLayer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialFunctionMaterialLayer
        fun C(Other: UObject): MaterialFunctionMaterialLayer
        fun C(Other: Any): MaterialFunctionMaterialLayer
    }
}

external open class MaterialFunctionMaterialLayerInstance : MaterialFunctionInstance {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialFunctionMaterialLayerInstance
        fun Find(Outer: UObject, ResourceName: String): MaterialFunctionMaterialLayerInstance
        fun GetDefaultObject(): MaterialFunctionMaterialLayerInstance
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialFunctionMaterialLayerInstance
        fun C(Other: UObject): MaterialFunctionMaterialLayerInstance
        fun C(Other: Any): MaterialFunctionMaterialLayerInstance
    }
}

external open class MaterialFunctionMaterialLayerBlend : MaterialFunction {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialFunctionMaterialLayerBlend
        fun Find(Outer: UObject, ResourceName: String): MaterialFunctionMaterialLayerBlend
        fun GetDefaultObject(): MaterialFunctionMaterialLayerBlend
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialFunctionMaterialLayerBlend
        fun C(Other: UObject): MaterialFunctionMaterialLayerBlend
        fun C(Other: Any): MaterialFunctionMaterialLayerBlend
    }
}

external open class MaterialFunctionMaterialLayerBlendInstance : MaterialFunctionInstance {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialFunctionMaterialLayerBlendInstance
        fun Find(Outer: UObject, ResourceName: String): MaterialFunctionMaterialLayerBlendInstance
        fun GetDefaultObject(): MaterialFunctionMaterialLayerBlendInstance
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialFunctionMaterialLayerBlendInstance
        fun C(Other: UObject): MaterialFunctionMaterialLayerBlendInstance
        fun C(Other: Any): MaterialFunctionMaterialLayerBlendInstance
    }
}

external open class MaterialInstanceActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var TargetActors: Array<Actor>

    companion object {
        fun GetDefaultObject(): MaterialInstanceActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialInstanceActor
        fun C(Other: UObject): MaterialInstanceActor
        fun C(Other: Any): MaterialInstanceActor
    }
}

external open class MatineeActorCameraAnim(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : MatineeActor {
    open var CameraAnim: CameraAnim

    companion object {
        fun GetDefaultObject(): MatineeActorCameraAnim
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MatineeActorCameraAnim
        fun C(Other: UObject): MatineeActorCameraAnim
        fun C(Other: Any): MatineeActorCameraAnim
    }
}

external open class MatineeAnimInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MatineeAnimInterface
        fun Find(Outer: UObject, ResourceName: String): MatineeAnimInterface
        fun GetDefaultObject(): MatineeAnimInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MatineeAnimInterface
        fun C(Other: UObject): MatineeAnimInterface
        fun C(Other: Any): MatineeAnimInterface
    }
}

external open class MatineeInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MatineeInterface
        fun Find(Outer: UObject, ResourceName: String): MatineeInterface
        fun GetDefaultObject(): MatineeInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MatineeInterface
        fun C(Other: UObject): MatineeInterface
        fun C(Other: Any): MatineeInterface
    }
}

external open class MeshMergeCullingVolume(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Volume {
    companion object {
        fun GetDefaultObject(): MeshMergeCullingVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MeshMergeCullingVolume
        fun C(Other: UObject): MeshMergeCullingVolume
        fun C(Other: Any): MeshMergeCullingVolume
    }
}

external open class MeshSimplificationSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var MeshReductionModuleName: String

    companion object {
        fun Load(ResourceName: String): MeshSimplificationSettings
        fun Find(Outer: UObject, ResourceName: String): MeshSimplificationSettings
        fun GetDefaultObject(): MeshSimplificationSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MeshSimplificationSettings
        fun C(Other: UObject): MeshSimplificationSettings
        fun C(Other: Any): MeshSimplificationSettings
    }
}

external open class MeshVertexPainterKismetLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MeshVertexPainterKismetLibrary
        fun Find(Outer: UObject, ResourceName: String): MeshVertexPainterKismetLibrary
        fun GetDefaultObject(): MeshVertexPainterKismetLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MeshVertexPainterKismetLibrary
        fun RemovePaintedVertices(StaticMeshComponent: StaticMeshComponent)
        fun PaintVerticesSingleColor(StaticMeshComponent: StaticMeshComponent, FillColor: LinearColor, bConvertToSRGB: Boolean)
        fun PaintVerticesLerpAlongAxis(StaticMeshComponent: StaticMeshComponent, StartColor: LinearColor, EndColor: LinearColor, Axis: String /* "X" | "Y" | "Z" | "EVertexPaintAxis_MAX" */, bConvertToSRGB: Boolean)
        fun C(Other: UObject): MeshVertexPainterKismetLibrary
        fun C(Other: Any): MeshVertexPainterKismetLibrary
    }
}

external open class PurchaseInfo {
    open var Identifier: String
    open var DisplayName: String
    open var DisplayDescription: String
    open var DisplayPrice: String
    open fun clone(): PurchaseInfo

    companion object {
        fun C(Other: UObject): PurchaseInfo
        fun C(Other: Any): PurchaseInfo
    }
}

external open class MicroTransactionBase : PlatformInterfaceBase {
    constructor()
    constructor(Outer: UObject)
    open var AvailableProducts: Array<PurchaseInfo>
    open var LastError: String
    open var LastErrorSolution: String

    companion object {
        fun Load(ResourceName: String): MicroTransactionBase
        fun Find(Outer: UObject, ResourceName: String): MicroTransactionBase
        fun GetDefaultObject(): MicroTransactionBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MicroTransactionBase
        fun C(Other: UObject): MicroTransactionBase
        fun C(Other: Any): MicroTransactionBase
    }
}

external open class NavAgentInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NavAgentInterface
        fun Find(Outer: UObject, ResourceName: String): NavAgentInterface
        fun GetDefaultObject(): NavAgentInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavAgentInterface
        fun C(Other: UObject): NavAgentInterface
        fun C(Other: Any): NavAgentInterface
    }
}

external open class NavEdgeProviderInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NavEdgeProviderInterface
        fun Find(Outer: UObject, ResourceName: String): NavEdgeProviderInterface
        fun GetDefaultObject(): NavEdgeProviderInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavEdgeProviderInterface
        fun C(Other: UObject): NavEdgeProviderInterface
        fun C(Other: Any): NavEdgeProviderInterface
    }
}

external open class NavigationDataInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NavigationDataInterface
        fun Find(Outer: UObject, ResourceName: String): NavigationDataInterface
        fun GetDefaultObject(): NavigationDataInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavigationDataInterface
        fun C(Other: UObject): NavigationDataInterface
        fun C(Other: Any): NavigationDataInterface
    }
}

external open class NavigationSystem : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NavigationSystem
        fun Find(Outer: UObject, ResourceName: String): NavigationSystem
        fun GetDefaultObject(): NavigationSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavigationSystem
        fun SimpleMoveToLocation(Controller: Controller, Goal: Vector)
        fun SimpleMoveToActor(Controller: Controller, Goal: Actor)
        fun C(Other: UObject): NavigationSystem
        fun C(Other: Any): NavigationSystem
    }
}

external open class NullNavSysConfig : NavigationSystemConfig {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NullNavSysConfig
        fun Find(Outer: UObject, ResourceName: String): NullNavSysConfig
        fun GetDefaultObject(): NullNavSysConfig
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NullNavSysConfig
        fun C(Other: UObject): NullNavSysConfig
        fun C(Other: Any): NullNavSysConfig
    }
}

external open class NavPathObserverInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NavPathObserverInterface
        fun Find(Outer: UObject, ResourceName: String): NavPathObserverInterface
        fun GetDefaultObject(): NavPathObserverInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavPathObserverInterface
        fun C(Other: UObject): NavPathObserverInterface
        fun C(Other: Any): NavPathObserverInterface
    }
}

external open class NavRelevantInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NavRelevantInterface
        fun Find(Outer: UObject, ResourceName: String): NavRelevantInterface
        fun GetDefaultObject(): NavRelevantInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavRelevantInterface
        fun C(Other: UObject): NavRelevantInterface
        fun C(Other: Any): NavRelevantInterface
    }
}

external open class SimulatedClientNetConnection : NetConnection {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SimulatedClientNetConnection
        fun Find(Outer: UObject, ResourceName: String): SimulatedClientNetConnection
        fun GetDefaultObject(): SimulatedClientNetConnection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SimulatedClientNetConnection
        fun C(Other: UObject): SimulatedClientNetConnection
        fun C(Other: Any): SimulatedClientNetConnection
    }
}

external open class NetworkPredictionInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NetworkPredictionInterface
        fun Find(Outer: UObject, ResourceName: String): NetworkPredictionInterface
        fun GetDefaultObject(): NetworkPredictionInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NetworkPredictionInterface
        fun C(Other: UObject): NetworkPredictionInterface
        fun C(Other: Any): NetworkPredictionInterface
    }
}

external open class NetworkSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var bVerifyPeer: Boolean
    open var bEnableMultiplayerWorldOriginRebasing: Boolean
    open var MaxRepArraySize: Number
    open var MaxRepArrayMemory: Number

    companion object {
        fun Load(ResourceName: String): NetworkSettings
        fun Find(Outer: UObject, ResourceName: String): NetworkSettings
        fun GetDefaultObject(): NetworkSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NetworkSettings
        fun C(Other: UObject): NetworkSettings
        fun C(Other: Any): NetworkSettings
    }
}

external open class NodeMappingProviderInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NodeMappingProviderInterface
        fun Find(Outer: UObject, ResourceName: String): NodeMappingProviderInterface
        fun GetDefaultObject(): NodeMappingProviderInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NodeMappingProviderInterface
        fun C(Other: UObject): NodeMappingProviderInterface
        fun C(Other: Any): NodeMappingProviderInterface
    }
}

external open class Note(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var text: String
    open var SpriteComponent: BillboardComponent
    open var ArrowComponent: ArrowComponent

    companion object {
        fun GetDefaultObject(): Note
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Note
        fun C(Other: UObject): Note
        fun C(Other: Any): Note
    }
}

external open class ObjectLibrary : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ObjectBaseClass: UnrealEngineClass
    open var bHasBlueprintClasses: Boolean
    open var Objects: Array<UObject>
    open var WeakObjects: Array<Any>
    open var bUseWeakReferences: Boolean
    open var bIsFullyLoaded: Boolean

    companion object {
        fun Load(ResourceName: String): ObjectLibrary
        fun Find(Outer: UObject, ResourceName: String): ObjectLibrary
        fun GetDefaultObject(): ObjectLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ObjectLibrary
        fun C(Other: UObject): ObjectLibrary
        fun C(Other: Any): ObjectLibrary
    }
}

external open class ObjectReferencer : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ReferencedObjects: Array<UObject>

    companion object {
        fun Load(ResourceName: String): ObjectReferencer
        fun Find(Outer: UObject, ResourceName: String): ObjectReferencer
        fun GetDefaultObject(): ObjectReferencer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ObjectReferencer
        fun C(Other: UObject): ObjectReferencer
        fun C(Other: Any): ObjectReferencer
    }
}

external open class OnlineBlueprintCallProxyBase : UObject {
    constructor()
    constructor(Outer: UObject)
    open fun Activate()

    companion object {
        fun Load(ResourceName: String): OnlineBlueprintCallProxyBase
        fun Find(Outer: UObject, ResourceName: String): OnlineBlueprintCallProxyBase
        fun GetDefaultObject(): OnlineBlueprintCallProxyBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): OnlineBlueprintCallProxyBase
        fun C(Other: UObject): OnlineBlueprintCallProxyBase
        fun C(Other: Any): OnlineBlueprintCallProxyBase
    }
}

external open class OnlineEngineInterface : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): OnlineEngineInterface
        fun Find(Outer: UObject, ResourceName: String): OnlineEngineInterface
        fun GetDefaultObject(): OnlineEngineInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): OnlineEngineInterface
        fun C(Other: UObject): OnlineEngineInterface
        fun C(Other: Any): OnlineEngineInterface
    }
}

external open class PackageMapClient : PackageMap {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PackageMapClient
        fun Find(Outer: UObject, ResourceName: String): PackageMapClient
        fun GetDefaultObject(): PackageMapClient
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PackageMapClient
        fun C(Other: UObject): PackageMapClient
        fun C(Other: Any): PackageMapClient
    }
}

external open class PainCausingVolume(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : PhysicsVolume {
    open var bPainCausing: Boolean
    open var DamagePerSec: Number
    open var DamageType: UnrealEngineClass
    open var PainInterval: Number
    open var bEntryPain: Boolean
    open var BACKUP_bPainCausing: Boolean
    open var DamageInstigator: Controller

    companion object {
        fun GetDefaultObject(): PainCausingVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PainCausingVolume
        fun C(Other: UObject): PainCausingVolume
        fun C(Other: Any): PainCausingVolume
    }
}

external open class ParticleModuleAccelerationBase : ParticleModule {
    constructor()
    constructor(Outer: UObject)
    open var bAlwaysInWorldSpace: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleAccelerationBase
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleAccelerationBase
        fun GetDefaultObject(): ParticleModuleAccelerationBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleAccelerationBase
        fun C(Other: UObject): ParticleModuleAccelerationBase
        fun C(Other: Any): ParticleModuleAccelerationBase
    }
}

external open class ParticleModuleAcceleration : ParticleModuleAccelerationBase {
    constructor()
    constructor(Outer: UObject)
    open var Acceleration: RawDistributionVector
    open var bApplyOwnerScale: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleAcceleration
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleAcceleration
        fun GetDefaultObject(): ParticleModuleAcceleration
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleAcceleration
        fun C(Other: UObject): ParticleModuleAcceleration
        fun C(Other: Any): ParticleModuleAcceleration
    }
}

external open class ParticleModuleAccelerationConstant : ParticleModuleAccelerationBase {
    constructor()
    constructor(Outer: UObject)
    open var Acceleration: Vector

    companion object {
        fun Load(ResourceName: String): ParticleModuleAccelerationConstant
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleAccelerationConstant
        fun GetDefaultObject(): ParticleModuleAccelerationConstant
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleAccelerationConstant
        fun C(Other: UObject): ParticleModuleAccelerationConstant
        fun C(Other: Any): ParticleModuleAccelerationConstant
    }
}

external open class ParticleModuleAccelerationDrag : ParticleModuleAccelerationBase {
    constructor()
    constructor(Outer: UObject)
    open var DragCoefficient: DistributionFloat
    open var DragCoefficientRaw: RawDistributionFloat

    companion object {
        fun Load(ResourceName: String): ParticleModuleAccelerationDrag
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleAccelerationDrag
        fun GetDefaultObject(): ParticleModuleAccelerationDrag
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleAccelerationDrag
        fun C(Other: UObject): ParticleModuleAccelerationDrag
        fun C(Other: Any): ParticleModuleAccelerationDrag
    }
}

external open class ParticleModuleAccelerationDragScaleOverLife : ParticleModuleAccelerationBase {
    constructor()
    constructor(Outer: UObject)
    open var DragScale: DistributionFloat
    open var DragScaleRaw: RawDistributionFloat

    companion object {
        fun Load(ResourceName: String): ParticleModuleAccelerationDragScaleOverLife
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleAccelerationDragScaleOverLife
        fun GetDefaultObject(): ParticleModuleAccelerationDragScaleOverLife
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleAccelerationDragScaleOverLife
        fun C(Other: UObject): ParticleModuleAccelerationDragScaleOverLife
        fun C(Other: Any): ParticleModuleAccelerationDragScaleOverLife
    }
}

external open class ParticleModuleAccelerationOverLifetime : ParticleModuleAccelerationBase {
    constructor()
    constructor(Outer: UObject)
    open var AccelOverLife: RawDistributionVector

    companion object {
        fun Load(ResourceName: String): ParticleModuleAccelerationOverLifetime
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleAccelerationOverLifetime
        fun GetDefaultObject(): ParticleModuleAccelerationOverLifetime
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleAccelerationOverLifetime
        fun C(Other: UObject): ParticleModuleAccelerationOverLifetime
        fun C(Other: Any): ParticleModuleAccelerationOverLifetime
    }
}

external open class ParticleModuleAttractorBase : ParticleModule {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ParticleModuleAttractorBase
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleAttractorBase
        fun GetDefaultObject(): ParticleModuleAttractorBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleAttractorBase
        fun C(Other: UObject): ParticleModuleAttractorBase
        fun C(Other: Any): ParticleModuleAttractorBase
    }
}

external open class ParticleModuleAttractorLine : ParticleModuleAttractorBase {
    constructor()
    constructor(Outer: UObject)
    open var EndPoint0: Vector
    open var EndPoint1: Vector
    open var Range: RawDistributionFloat
    open var Strength: RawDistributionFloat

    companion object {
        fun Load(ResourceName: String): ParticleModuleAttractorLine
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleAttractorLine
        fun GetDefaultObject(): ParticleModuleAttractorLine
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleAttractorLine
        fun C(Other: UObject): ParticleModuleAttractorLine
        fun C(Other: Any): ParticleModuleAttractorLine
    }
}

external object EAttractorParticleSelectionMethod {
    var EAPSM_Random: String /* "EAPSM_Random" */
    var EAPSM_Sequential: String /* "EAPSM_Sequential" */
    var EAPSM_MAX: String /* "EAPSM_MAX" */
}

external open class ParticleModuleAttractorParticle : ParticleModuleAttractorBase {
    constructor()
    constructor(Outer: UObject)
    open var EmitterName: String
    open var Range: RawDistributionFloat
    open var bStrengthByDistance: Boolean
    open var Strength: RawDistributionFloat
    open var bAffectBaseVelocity: Boolean
    open var SelectionMethod: String /* "EAPSM_Random" | "EAPSM_Sequential" | "EAPSM_MAX" */
    open var bRenewSource: Boolean
    open var bInheritSourceVel: Boolean
    open var LastSelIndex: Number

    companion object {
        fun Load(ResourceName: String): ParticleModuleAttractorParticle
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleAttractorParticle
        fun GetDefaultObject(): ParticleModuleAttractorParticle
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleAttractorParticle
        fun C(Other: UObject): ParticleModuleAttractorParticle
        fun C(Other: Any): ParticleModuleAttractorParticle
    }
}

external open class ParticleModuleAttractorPoint : ParticleModuleAttractorBase {
    constructor()
    constructor(Outer: UObject)
    open var Position: RawDistributionVector
    open var Range: RawDistributionFloat
    open var Strength: RawDistributionFloat
    open var StrengthByDistance: Boolean
    open var bAffectBaseVelocity: Boolean
    open var bOverrideVelocity: Boolean
    open var bUseWorldSpacePosition: Boolean
    open var Positive_X: Boolean
    open var Positive_Y: Boolean
    open var Positive_Z: Boolean
    open var Negative_X: Boolean
    open var Negative_Y: Boolean
    open var Negative_Z: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleAttractorPoint
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleAttractorPoint
        fun GetDefaultObject(): ParticleModuleAttractorPoint
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleAttractorPoint
        fun C(Other: UObject): ParticleModuleAttractorPoint
        fun C(Other: Any): ParticleModuleAttractorPoint
    }
}

external open class ParticleModuleAttractorPointGravity : ParticleModuleAttractorBase {
    constructor()
    constructor(Outer: UObject)
    open var Position: Vector
    open var Radius: Number
    open var Strength: DistributionFloat
    open var StrengthRaw: RawDistributionFloat

    companion object {
        fun Load(ResourceName: String): ParticleModuleAttractorPointGravity
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleAttractorPointGravity
        fun GetDefaultObject(): ParticleModuleAttractorPointGravity
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleAttractorPointGravity
        fun C(Other: UObject): ParticleModuleAttractorPointGravity
        fun C(Other: Any): ParticleModuleAttractorPointGravity
    }
}

external open class ParticleModuleBeamBase : ParticleModule {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ParticleModuleBeamBase
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleBeamBase
        fun GetDefaultObject(): ParticleModuleBeamBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleBeamBase
        fun C(Other: UObject): ParticleModuleBeamBase
        fun C(Other: Any): ParticleModuleBeamBase
    }
}

external object BeamModifierType {
    var PEB2MT_Source: String /* "PEB2MT_Source" */
    var PEB2MT_Target: String /* "PEB2MT_Target" */
    var PEB2MT_MAX: String /* "PEB2MT_MAX" */
}

external open class BeamModifierOptions {
    open var bModify: Boolean
    open var bScale: Boolean
    open var bLock: Boolean
    open fun clone(): BeamModifierOptions

    companion object {
        fun C(Other: UObject): BeamModifierOptions
        fun C(Other: Any): BeamModifierOptions
    }
}

external open class ParticleModuleBeamModifier : ParticleModuleBeamBase {
    constructor()
    constructor(Outer: UObject)
    open var ModifierType: String /* "PEB2MT_Source" | "PEB2MT_Target" | "PEB2MT_MAX" */
    open var PositionOptions: BeamModifierOptions
    open var Position: RawDistributionVector
    open var TangentOptions: BeamModifierOptions
    open var Tangent: RawDistributionVector
    open var bAbsoluteTangent: Boolean
    open var StrengthOptions: BeamModifierOptions
    open var Strength: RawDistributionFloat

    companion object {
        fun Load(ResourceName: String): ParticleModuleBeamModifier
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleBeamModifier
        fun GetDefaultObject(): ParticleModuleBeamModifier
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleBeamModifier
        fun C(Other: UObject): ParticleModuleBeamModifier
        fun C(Other: Any): ParticleModuleBeamModifier
    }
}

external open class ParticleModuleBeamNoise : ParticleModuleBeamBase {
    constructor()
    constructor(Outer: UObject)
    open var bLowFreq_Enabled: Boolean
    open var Frequency: Number
    open var Frequency_LowRange: Number
    open var NoiseRange: RawDistributionVector
    open var NoiseRangeScale: RawDistributionFloat
    open var bNRScaleEmitterTime: Boolean
    open var NoiseSpeed: RawDistributionVector
    open var bSmooth: Boolean
    open var NoiseLockRadius: Number
    open var bNoiseLock: Boolean
    open var bOscillate: Boolean
    open var NoiseLockTime: Number
    open var NoiseTension: Number
    open var bUseNoiseTangents: Boolean
    open var NoiseTangentStrength: RawDistributionFloat
    open var NoiseTessellation: Number
    open var bTargetNoise: Boolean
    open var FrequencyDistance: Number
    open var bApplyNoiseScale: Boolean
    open var NoiseScale: RawDistributionFloat

    companion object {
        fun Load(ResourceName: String): ParticleModuleBeamNoise
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleBeamNoise
        fun GetDefaultObject(): ParticleModuleBeamNoise
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleBeamNoise
        fun C(Other: UObject): ParticleModuleBeamNoise
        fun C(Other: Any): ParticleModuleBeamNoise
    }
}

external object Beam2SourceTargetMethod {
    var PEB2STM_Default: String /* "PEB2STM_Default" */
    var PEB2STM_UserSet: String /* "PEB2STM_UserSet" */
    var PEB2STM_Emitter: String /* "PEB2STM_Emitter" */
    var PEB2STM_Particle: String /* "PEB2STM_Particle" */
    var PEB2STM_Actor: String /* "PEB2STM_Actor" */
    var PEB2STM_MAX: String /* "PEB2STM_MAX" */
}

external object Beam2SourceTargetTangentMethod {
    var PEB2STTM_Direct: String /* "PEB2STTM_Direct" */
    var PEB2STTM_UserSet: String /* "PEB2STTM_UserSet" */
    var PEB2STTM_Distribution: String /* "PEB2STTM_Distribution" */
    var PEB2STTM_Emitter: String /* "PEB2STTM_Emitter" */
    var PEB2STTM_MAX: String /* "PEB2STTM_MAX" */
}

external open class ParticleModuleBeamSource : ParticleModuleBeamBase {
    constructor()
    constructor(Outer: UObject)
    open var SourceMethod: String /* "PEB2STM_Default" | "PEB2STM_UserSet" | "PEB2STM_Emitter" | "PEB2STM_Particle" | "PEB2STM_Actor" | "PEB2STM_MAX" */
    open var SourceName: String
    open var bSourceAbsolute: Boolean
    open var Source: RawDistributionVector
    open var bLockSource: Boolean
    open var SourceTangentMethod: String /* "PEB2STTM_Direct" | "PEB2STTM_UserSet" | "PEB2STTM_Distribution" | "PEB2STTM_Emitter" | "PEB2STTM_MAX" */
    open var SourceTangent: RawDistributionVector
    open var bLockSourceTangent: Boolean
    open var SourceStrength: RawDistributionFloat
    open var bLockSourceStength: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleBeamSource
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleBeamSource
        fun GetDefaultObject(): ParticleModuleBeamSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleBeamSource
        fun C(Other: UObject): ParticleModuleBeamSource
        fun C(Other: Any): ParticleModuleBeamSource
    }
}

external open class ParticleModuleBeamTarget : ParticleModuleBeamBase {
    constructor()
    constructor(Outer: UObject)
    open var TargetMethod: String /* "PEB2STM_Default" | "PEB2STM_UserSet" | "PEB2STM_Emitter" | "PEB2STM_Particle" | "PEB2STM_Actor" | "PEB2STM_MAX" */
    open var TargetName: String
    open var Target: RawDistributionVector
    open var bTargetAbsolute: Boolean
    open var bLockTarget: Boolean
    open var TargetTangentMethod: String /* "PEB2STTM_Direct" | "PEB2STTM_UserSet" | "PEB2STTM_Distribution" | "PEB2STTM_Emitter" | "PEB2STTM_MAX" */
    open var TargetTangent: RawDistributionVector
    open var bLockTargetTangent: Boolean
    open var TargetStrength: RawDistributionFloat
    open var bLockTargetStength: Boolean
    open var LockRadius: Number

    companion object {
        fun Load(ResourceName: String): ParticleModuleBeamTarget
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleBeamTarget
        fun GetDefaultObject(): ParticleModuleBeamTarget
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleBeamTarget
        fun C(Other: UObject): ParticleModuleBeamTarget
        fun C(Other: Any): ParticleModuleBeamTarget
    }
}

external open class ParticleModuleCameraBase : ParticleModule {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ParticleModuleCameraBase
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleCameraBase
        fun GetDefaultObject(): ParticleModuleCameraBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleCameraBase
        fun C(Other: UObject): ParticleModuleCameraBase
        fun C(Other: Any): ParticleModuleCameraBase
    }
}

external object EParticleCameraOffsetUpdateMethod {
    var EPCOUM_DirectSet: String /* "EPCOUM_DirectSet" */
    var EPCOUM_Additive: String /* "EPCOUM_Additive" */
    var EPCOUM_Scalar: String /* "EPCOUM_Scalar" */
    var EPCOUM_MAX: String /* "EPCOUM_MAX" */
}

external open class ParticleModuleCameraOffset : ParticleModuleCameraBase {
    constructor()
    constructor(Outer: UObject)
    open var CameraOffset: RawDistributionFloat
    open var bSpawnTimeOnly: Boolean
    open var UpdateMethod: String /* "EPCOUM_DirectSet" | "EPCOUM_Additive" | "EPCOUM_Scalar" | "EPCOUM_MAX" */

    companion object {
        fun Load(ResourceName: String): ParticleModuleCameraOffset
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleCameraOffset
        fun GetDefaultObject(): ParticleModuleCameraOffset
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleCameraOffset
        fun C(Other: UObject): ParticleModuleCameraOffset
        fun C(Other: Any): ParticleModuleCameraOffset
    }
}

external open class ParticleModuleCollisionBase : ParticleModule {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ParticleModuleCollisionBase
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleCollisionBase
        fun GetDefaultObject(): ParticleModuleCollisionBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleCollisionBase
        fun C(Other: UObject): ParticleModuleCollisionBase
        fun C(Other: Any): ParticleModuleCollisionBase
    }
}

external object EParticleCollisionComplete {
    var EPCC_Kill: String /* "EPCC_Kill" */
    var EPCC_Freeze: String /* "EPCC_Freeze" */
    var EPCC_HaltCollisions: String /* "EPCC_HaltCollisions" */
    var EPCC_FreezeTranslation: String /* "EPCC_FreezeTranslation" */
    var EPCC_FreezeRotation: String /* "EPCC_FreezeRotation" */
    var EPCC_FreezeMovement: String /* "EPCC_FreezeMovement" */
    var EPCC_MAX: String /* "EPCC_MAX" */
}

external open class ParticleModuleCollision : ParticleModuleCollisionBase {
    constructor()
    constructor(Outer: UObject)
    open var DampingFactor: RawDistributionVector
    open var DampingFactorRotation: RawDistributionVector
    open var MaxCollisions: RawDistributionFloat
    open var CollisionCompletionOption: String /* "EPCC_Kill" | "EPCC_Freeze" | "EPCC_HaltCollisions" | "EPCC_FreezeTranslation" | "EPCC_FreezeRotation" | "EPCC_FreezeMovement" | "EPCC_MAX" */
    open var CollisionTypes: Array<String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */>
    open var bApplyPhysics: Boolean
    open var bIgnoreTriggerVolumes: Boolean
    open var ParticleMass: RawDistributionFloat
    open var DirScalar: Number
    open var bPawnsDoNotDecrementCount: Boolean
    open var bOnlyVerticalNormalsDecrementCount: Boolean
    open var VerticalFudgeFactor: Number
    open var DelayAmount: RawDistributionFloat
    open var bDropDetail: Boolean
    open var bCollideOnlyIfVisible: Boolean
    open var bIgnoreSourceActor: Boolean
    open var MaxCollisionDistance: Number

    companion object {
        fun Load(ResourceName: String): ParticleModuleCollision
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleCollision
        fun GetDefaultObject(): ParticleModuleCollision
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleCollision
        fun C(Other: UObject): ParticleModuleCollision
        fun C(Other: Any): ParticleModuleCollision
    }
}

external object EParticleCollisionResponse {
    var Bounce: String /* "Bounce" */
    var Stop: String /* "Stop" */
    var Kill: String /* "Kill" */
    var EParticleCollisionResponse_MAX: String /* "EParticleCollisionResponse_MAX" */
}

external object EParticleCollisionMode {
    var SceneDepth: String /* "SceneDepth" */
    var DistanceField: String /* "DistanceField" */
    var EParticleCollisionMode_MAX: String /* "EParticleCollisionMode_MAX" */
}

external open class ParticleModuleCollisionGPU : ParticleModuleCollisionBase {
    constructor()
    constructor(Outer: UObject)
    open var Resilience: RawDistributionFloat
    open var ResilienceScaleOverLife: RawDistributionFloat
    open var Friction: Number
    open var RandomSpread: Number
    open var RandomDistribution: Number
    open var RadiusScale: Number
    open var RadiusBias: Number
    open var Response: String /* "Bounce" | "Stop" | "Kill" | "EParticleCollisionResponse_MAX" */
    open var CollisionMode: String /* "SceneDepth" | "DistanceField" | "EParticleCollisionMode_MAX" */

    companion object {
        fun Load(ResourceName: String): ParticleModuleCollisionGPU
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleCollisionGPU
        fun GetDefaultObject(): ParticleModuleCollisionGPU
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleCollisionGPU
        fun C(Other: UObject): ParticleModuleCollisionGPU
        fun C(Other: Any): ParticleModuleCollisionGPU
    }
}

external open class ParticleModuleColorBase : ParticleModule {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ParticleModuleColorBase
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleColorBase
        fun GetDefaultObject(): ParticleModuleColorBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleColorBase
        fun C(Other: UObject): ParticleModuleColorBase
        fun C(Other: Any): ParticleModuleColorBase
    }
}

external open class ParticleModuleColor : ParticleModuleColorBase {
    constructor()
    constructor(Outer: UObject)
    open var StartColor: RawDistributionVector
    open var StartAlpha: RawDistributionFloat
    open var bClampAlpha: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleColor
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleColor
        fun GetDefaultObject(): ParticleModuleColor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleColor
        fun C(Other: UObject): ParticleModuleColor
        fun C(Other: Any): ParticleModuleColor
    }
}

external open class ParticleRandomSeedInfo {
    open var ParameterName: String
    open var bGetSeedFromInstance: Boolean
    open var bInstanceSeedIsIndex: Boolean
    open var bResetSeedOnEmitterLooping: Boolean
    open var bRandomlySelectSeedArray: Boolean
    open var RandomSeeds: Array<Number>
    open fun clone(): ParticleRandomSeedInfo

    companion object {
        fun C(Other: UObject): ParticleRandomSeedInfo
        fun C(Other: Any): ParticleRandomSeedInfo
    }
}

external open class ParticleModuleColor_Seeded : ParticleModuleColor {
    constructor()
    constructor(Outer: UObject)
    open var RandomSeedInfo: ParticleRandomSeedInfo

    companion object {
        fun Load(ResourceName: String): ParticleModuleColor_Seeded
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleColor_Seeded
        fun GetDefaultObject(): ParticleModuleColor_Seeded
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleColor_Seeded
        fun C(Other: UObject): ParticleModuleColor_Seeded
        fun C(Other: Any): ParticleModuleColor_Seeded
    }
}

external open class ParticleModuleColorOverLife : ParticleModuleColorBase {
    constructor()
    constructor(Outer: UObject)
    open var ColorOverLife: RawDistributionVector
    open var AlphaOverLife: RawDistributionFloat
    open var bClampAlpha: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleColorOverLife
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleColorOverLife
        fun GetDefaultObject(): ParticleModuleColorOverLife
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleColorOverLife
        fun C(Other: UObject): ParticleModuleColorOverLife
        fun C(Other: Any): ParticleModuleColorOverLife
    }
}

external open class ParticleModuleColorScaleOverLife : ParticleModuleColorBase {
    constructor()
    constructor(Outer: UObject)
    open var ColorScaleOverLife: RawDistributionVector
    open var AlphaScaleOverLife: RawDistributionFloat
    open var bEmitterTime: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleColorScaleOverLife
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleColorScaleOverLife
        fun GetDefaultObject(): ParticleModuleColorScaleOverLife
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleColorScaleOverLife
        fun C(Other: UObject): ParticleModuleColorScaleOverLife
        fun C(Other: Any): ParticleModuleColorScaleOverLife
    }
}

external open class ParticleModuleEventReceiverKillParticles : ParticleModuleEventReceiverBase {
    constructor()
    constructor(Outer: UObject)
    open var bStopSpawning: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleEventReceiverKillParticles
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleEventReceiverKillParticles
        fun GetDefaultObject(): ParticleModuleEventReceiverKillParticles
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleEventReceiverKillParticles
        fun C(Other: UObject): ParticleModuleEventReceiverKillParticles
        fun C(Other: Any): ParticleModuleEventReceiverKillParticles
    }
}

external open class ParticleModuleEventReceiverSpawn : ParticleModuleEventReceiverBase {
    constructor()
    constructor(Outer: UObject)
    open var SpawnCount: RawDistributionFloat
    open var bUseParticleTime: Boolean
    open var bUsePSysLocation: Boolean
    open var bInheritVelocity: Boolean
    open var InheritVelocityScale: RawDistributionVector
    open var PhysicalMaterials: Array<PhysicalMaterial>
    open var bBanPhysicalMaterials: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleEventReceiverSpawn
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleEventReceiverSpawn
        fun GetDefaultObject(): ParticleModuleEventReceiverSpawn
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleEventReceiverSpawn
        fun C(Other: UObject): ParticleModuleEventReceiverSpawn
        fun C(Other: Any): ParticleModuleEventReceiverSpawn
    }
}

external open class ParticleModuleKillBase : ParticleModule {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ParticleModuleKillBase
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleKillBase
        fun GetDefaultObject(): ParticleModuleKillBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleKillBase
        fun C(Other: UObject): ParticleModuleKillBase
        fun C(Other: Any): ParticleModuleKillBase
    }
}

external open class ParticleModuleKillBox : ParticleModuleKillBase {
    constructor()
    constructor(Outer: UObject)
    open var LowerLeftCorner: RawDistributionVector
    open var UpperRightCorner: RawDistributionVector
    open var bAbsolute: Boolean
    open var bKillInside: Boolean
    open var bAxisAlignedAndFixedSize: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleKillBox
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleKillBox
        fun GetDefaultObject(): ParticleModuleKillBox
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleKillBox
        fun C(Other: UObject): ParticleModuleKillBox
        fun C(Other: Any): ParticleModuleKillBox
    }
}

external open class ParticleModuleKillHeight : ParticleModuleKillBase {
    constructor()
    constructor(Outer: UObject)
    open var Height: RawDistributionFloat
    open var bAbsolute: Boolean
    open var bFloor: Boolean
    open var bApplyPSysScale: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleKillHeight
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleKillHeight
        fun GetDefaultObject(): ParticleModuleKillHeight
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleKillHeight
        fun C(Other: UObject): ParticleModuleKillHeight
        fun C(Other: Any): ParticleModuleKillHeight
    }
}

external open class ParticleModuleLifetimeBase : ParticleModule {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ParticleModuleLifetimeBase
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleLifetimeBase
        fun GetDefaultObject(): ParticleModuleLifetimeBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleLifetimeBase
        fun C(Other: UObject): ParticleModuleLifetimeBase
        fun C(Other: Any): ParticleModuleLifetimeBase
    }
}

external open class ParticleModuleLifetime : ParticleModuleLifetimeBase {
    constructor()
    constructor(Outer: UObject)
    open var LifeTime: RawDistributionFloat

    companion object {
        fun Load(ResourceName: String): ParticleModuleLifetime
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleLifetime
        fun GetDefaultObject(): ParticleModuleLifetime
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleLifetime
        fun C(Other: UObject): ParticleModuleLifetime
        fun C(Other: Any): ParticleModuleLifetime
    }
}

external open class ParticleModuleLifetime_Seeded : ParticleModuleLifetime {
    constructor()
    constructor(Outer: UObject)
    open var RandomSeedInfo: ParticleRandomSeedInfo

    companion object {
        fun Load(ResourceName: String): ParticleModuleLifetime_Seeded
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleLifetime_Seeded
        fun GetDefaultObject(): ParticleModuleLifetime_Seeded
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleLifetime_Seeded
        fun C(Other: UObject): ParticleModuleLifetime_Seeded
        fun C(Other: Any): ParticleModuleLifetime_Seeded
    }
}

external open class ParticleModuleLightBase : ParticleModule {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ParticleModuleLightBase
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleLightBase
        fun GetDefaultObject(): ParticleModuleLightBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleLightBase
        fun C(Other: UObject): ParticleModuleLightBase
        fun C(Other: Any): ParticleModuleLightBase
    }
}

external open class ParticleModuleLight : ParticleModuleLightBase {
    constructor()
    constructor(Outer: UObject)
    open var bUseInverseSquaredFalloff: Boolean
    open var bAffectsTranslucency: Boolean
    open var bPreviewLightRadius: Boolean
    open var SpawnFraction: Number
    open var ColorScaleOverLife: RawDistributionVector
    open var BrightnessOverLife: RawDistributionFloat
    open var RadiusScale: RawDistributionFloat
    open var LightExponent: RawDistributionFloat
    open var LightingChannels: LightingChannels
    open var VolumetricScatteringIntensity: Number
    open var bHighQualityLights: Boolean
    open var bShadowCastingLights: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleLight
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleLight
        fun GetDefaultObject(): ParticleModuleLight
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleLight
        fun C(Other: UObject): ParticleModuleLight
        fun C(Other: Any): ParticleModuleLight
    }
}

external open class ParticleModuleLight_Seeded : ParticleModuleLight {
    constructor()
    constructor(Outer: UObject)
    open var RandomSeedInfo: ParticleRandomSeedInfo

    companion object {
        fun Load(ResourceName: String): ParticleModuleLight_Seeded
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleLight_Seeded
        fun GetDefaultObject(): ParticleModuleLight_Seeded
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleLight_Seeded
        fun C(Other: UObject): ParticleModuleLight_Seeded
        fun C(Other: Any): ParticleModuleLight_Seeded
    }
}

external open class ParticleModuleLocationBase : ParticleModule {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ParticleModuleLocationBase
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleLocationBase
        fun GetDefaultObject(): ParticleModuleLocationBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleLocationBase
        fun C(Other: UObject): ParticleModuleLocationBase
        fun C(Other: Any): ParticleModuleLocationBase
    }
}

external open class ParticleModuleLocation : ParticleModuleLocationBase {
    constructor()
    constructor(Outer: UObject)
    open var StartLocation: RawDistributionVector
    open var DistributeOverNPoints: Number
    open var DistributeThreshold: Number

    companion object {
        fun Load(ResourceName: String): ParticleModuleLocation
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleLocation
        fun GetDefaultObject(): ParticleModuleLocation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleLocation
        fun C(Other: UObject): ParticleModuleLocation
        fun C(Other: Any): ParticleModuleLocation
    }
}

external open class ParticleModuleLocation_Seeded : ParticleModuleLocation {
    constructor()
    constructor(Outer: UObject)
    open var RandomSeedInfo: ParticleRandomSeedInfo

    companion object {
        fun Load(ResourceName: String): ParticleModuleLocation_Seeded
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleLocation_Seeded
        fun GetDefaultObject(): ParticleModuleLocation_Seeded
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleLocation_Seeded
        fun C(Other: UObject): ParticleModuleLocation_Seeded
        fun C(Other: Any): ParticleModuleLocation_Seeded
    }
}

external object ELocationBoneSocketSource {
    var BONESOCKETSOURCE_Bones: String /* "BONESOCKETSOURCE_Bones" */
    var BONESOCKETSOURCE_Sockets: String /* "BONESOCKETSOURCE_Sockets" */
    var BONESOCKETSOURCE_MAX: String /* "BONESOCKETSOURCE_MAX" */
}

external open class LocationBoneSocketInfo {
    open var BoneSocketName: String
    open var Offset: Vector
    open fun clone(): LocationBoneSocketInfo

    companion object {
        fun C(Other: UObject): LocationBoneSocketInfo
        fun C(Other: Any): LocationBoneSocketInfo
    }
}

external object ELocationBoneSocketSelectionMethod {
    var BONESOCKETSEL_Sequential: String /* "BONESOCKETSEL_Sequential" */
    var BONESOCKETSEL_Random: String /* "BONESOCKETSEL_Random" */
    var BONESOCKETSEL_MAX: String /* "BONESOCKETSEL_MAX" */
}

external open class ParticleModuleLocationBoneSocket : ParticleModuleLocationBase {
    constructor()
    constructor(Outer: UObject)
    open var SourceType: String /* "BONESOCKETSOURCE_Bones" | "BONESOCKETSOURCE_Sockets" | "BONESOCKETSOURCE_MAX" */
    open var UniversalOffset: Vector
    open var SourceLocations: Array<LocationBoneSocketInfo>
    open var SelectionMethod: String /* "BONESOCKETSEL_Sequential" | "BONESOCKETSEL_Random" | "BONESOCKETSEL_MAX" */
    open var bUpdatePositionEachFrame: Boolean
    open var bOrientMeshEmitters: Boolean
    open var bInheritBoneVelocity: Boolean
    open var InheritVelocityScale: Number
    open var SkelMeshActorParamName: String
    open var NumPreSelectedIndices: Number
    open var EditorSkelMesh: SkeletalMesh

    companion object {
        fun Load(ResourceName: String): ParticleModuleLocationBoneSocket
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleLocationBoneSocket
        fun GetDefaultObject(): ParticleModuleLocationBoneSocket
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleLocationBoneSocket
        fun C(Other: UObject): ParticleModuleLocationBoneSocket
        fun C(Other: Any): ParticleModuleLocationBoneSocket
    }
}

external open class ParticleModuleLocationDirect : ParticleModuleLocationBase {
    constructor()
    constructor(Outer: UObject)
    open var Location: RawDistributionVector
    open var LocationOffset: RawDistributionVector
    open var ScaleFactor: RawDistributionVector
    open var Direction: RawDistributionVector

    companion object {
        fun Load(ResourceName: String): ParticleModuleLocationDirect
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleLocationDirect
        fun GetDefaultObject(): ParticleModuleLocationDirect
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleLocationDirect
        fun C(Other: UObject): ParticleModuleLocationDirect
        fun C(Other: Any): ParticleModuleLocationDirect
    }
}

external object ELocationEmitterSelectionMethod {
    var ELESM_Random: String /* "ELESM_Random" */
    var ELESM_Sequential: String /* "ELESM_Sequential" */
    var ELESM_MAX: String /* "ELESM_MAX" */
}

external open class ParticleModuleLocationEmitter : ParticleModuleLocationBase {
    constructor()
    constructor(Outer: UObject)
    open var EmitterName: String
    open var SelectionMethod: String /* "ELESM_Random" | "ELESM_Sequential" | "ELESM_MAX" */
    open var InheritSourceVelocity: Boolean
    open var InheritSourceVelocityScale: Number
    open var bInheritSourceRotation: Boolean
    open var InheritSourceRotationScale: Number

    companion object {
        fun Load(ResourceName: String): ParticleModuleLocationEmitter
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleLocationEmitter
        fun GetDefaultObject(): ParticleModuleLocationEmitter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleLocationEmitter
        fun C(Other: UObject): ParticleModuleLocationEmitter
        fun C(Other: Any): ParticleModuleLocationEmitter
    }
}

external open class ParticleModuleLocationEmitterDirect : ParticleModuleLocationBase {
    constructor()
    constructor(Outer: UObject)
    open var EmitterName: String

    companion object {
        fun Load(ResourceName: String): ParticleModuleLocationEmitterDirect
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleLocationEmitterDirect
        fun GetDefaultObject(): ParticleModuleLocationEmitterDirect
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleLocationEmitterDirect
        fun C(Other: UObject): ParticleModuleLocationEmitterDirect
        fun C(Other: Any): ParticleModuleLocationEmitterDirect
    }
}

external open class ParticleModuleLocationPrimitiveBase : ParticleModuleLocationBase {
    constructor()
    constructor(Outer: UObject)
    open var Positive_X: Boolean
    open var Positive_Y: Boolean
    open var Positive_Z: Boolean
    open var Negative_X: Boolean
    open var Negative_Y: Boolean
    open var Negative_Z: Boolean
    open var SurfaceOnly: Boolean
    open var Velocity: Boolean
    open var VelocityScale: RawDistributionFloat
    open var StartLocation: RawDistributionVector

    companion object {
        fun Load(ResourceName: String): ParticleModuleLocationPrimitiveBase
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleLocationPrimitiveBase
        fun GetDefaultObject(): ParticleModuleLocationPrimitiveBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleLocationPrimitiveBase
        fun C(Other: UObject): ParticleModuleLocationPrimitiveBase
        fun C(Other: Any): ParticleModuleLocationPrimitiveBase
    }
}

external object CylinderHeightAxis {
    var PMLPC_HEIGHTAXIS_X: String /* "PMLPC_HEIGHTAXIS_X" */
    var PMLPC_HEIGHTAXIS_Y: String /* "PMLPC_HEIGHTAXIS_Y" */
    var PMLPC_HEIGHTAXIS_Z: String /* "PMLPC_HEIGHTAXIS_Z" */
    var PMLPC_HEIGHTAXIS_MAX: String /* "PMLPC_HEIGHTAXIS_MAX" */
}

external open class ParticleModuleLocationPrimitiveCylinder : ParticleModuleLocationPrimitiveBase {
    constructor()
    constructor(Outer: UObject)
    open var RadialVelocity: Boolean
    open var StartRadius: RawDistributionFloat
    open var StartHeight: RawDistributionFloat
    open var HeightAxis: String /* "PMLPC_HEIGHTAXIS_X" | "PMLPC_HEIGHTAXIS_Y" | "PMLPC_HEIGHTAXIS_Z" | "PMLPC_HEIGHTAXIS_MAX" */

    companion object {
        fun Load(ResourceName: String): ParticleModuleLocationPrimitiveCylinder
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleLocationPrimitiveCylinder
        fun GetDefaultObject(): ParticleModuleLocationPrimitiveCylinder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleLocationPrimitiveCylinder
        fun C(Other: UObject): ParticleModuleLocationPrimitiveCylinder
        fun C(Other: Any): ParticleModuleLocationPrimitiveCylinder
    }
}

external open class ParticleModuleLocationPrimitiveCylinder_Seeded : ParticleModuleLocationPrimitiveCylinder {
    constructor()
    constructor(Outer: UObject)
    open var RandomSeedInfo: ParticleRandomSeedInfo

    companion object {
        fun Load(ResourceName: String): ParticleModuleLocationPrimitiveCylinder_Seeded
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleLocationPrimitiveCylinder_Seeded
        fun GetDefaultObject(): ParticleModuleLocationPrimitiveCylinder_Seeded
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleLocationPrimitiveCylinder_Seeded
        fun C(Other: UObject): ParticleModuleLocationPrimitiveCylinder_Seeded
        fun C(Other: Any): ParticleModuleLocationPrimitiveCylinder_Seeded
    }
}

external open class ParticleModuleLocationPrimitiveSphere : ParticleModuleLocationPrimitiveBase {
    constructor()
    constructor(Outer: UObject)
    open var StartRadius: RawDistributionFloat

    companion object {
        fun Load(ResourceName: String): ParticleModuleLocationPrimitiveSphere
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleLocationPrimitiveSphere
        fun GetDefaultObject(): ParticleModuleLocationPrimitiveSphere
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleLocationPrimitiveSphere
        fun C(Other: UObject): ParticleModuleLocationPrimitiveSphere
        fun C(Other: Any): ParticleModuleLocationPrimitiveSphere
    }
}

external open class ParticleModuleLocationPrimitiveSphere_Seeded : ParticleModuleLocationPrimitiveSphere {
    constructor()
    constructor(Outer: UObject)
    open var RandomSeedInfo: ParticleRandomSeedInfo

    companion object {
        fun Load(ResourceName: String): ParticleModuleLocationPrimitiveSphere_Seeded
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleLocationPrimitiveSphere_Seeded
        fun GetDefaultObject(): ParticleModuleLocationPrimitiveSphere_Seeded
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleLocationPrimitiveSphere_Seeded
        fun C(Other: UObject): ParticleModuleLocationPrimitiveSphere_Seeded
        fun C(Other: Any): ParticleModuleLocationPrimitiveSphere_Seeded
    }
}

external open class ParticleModuleLocationPrimitiveTriangle : ParticleModuleLocationBase {
    constructor()
    constructor(Outer: UObject)
    open var StartOffset: RawDistributionVector
    open var Height: RawDistributionFloat
    open var Angle: RawDistributionFloat
    open var Thickness: RawDistributionFloat

    companion object {
        fun Load(ResourceName: String): ParticleModuleLocationPrimitiveTriangle
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleLocationPrimitiveTriangle
        fun GetDefaultObject(): ParticleModuleLocationPrimitiveTriangle
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleLocationPrimitiveTriangle
        fun C(Other: UObject): ParticleModuleLocationPrimitiveTriangle
        fun C(Other: Any): ParticleModuleLocationPrimitiveTriangle
    }
}

external object ELocationSkelVertSurfaceSource {
    var VERTSURFACESOURCE_Vert: String /* "VERTSURFACESOURCE_Vert" */
    var VERTSURFACESOURCE_Surface: String /* "VERTSURFACESOURCE_Surface" */
    var VERTSURFACESOURCE_MAX: String /* "VERTSURFACESOURCE_MAX" */
}

external open class ParticleModuleLocationSkelVertSurface : ParticleModuleLocationBase {
    constructor()
    constructor(Outer: UObject)
    open var SourceType: String /* "VERTSURFACESOURCE_Vert" | "VERTSURFACESOURCE_Surface" | "VERTSURFACESOURCE_MAX" */
    open var UniversalOffset: Vector
    open var bUpdatePositionEachFrame: Boolean
    open var bOrientMeshEmitters: Boolean
    open var bInheritBoneVelocity: Boolean
    open var InheritVelocityScale: Number
    open var SkelMeshActorParamName: String
    open var EditorSkelMesh: SkeletalMesh
    open var ValidAssociatedBones: Array<String>
    open var bEnforceNormalCheck: Boolean
    open var NormalToCompare: Vector
    open var NormalCheckToleranceDegrees: Number
    open var NormalCheckTolerance: Number
    open var ValidMaterialIndices: Array<Number>
    open var bInheritVertexColor: Boolean
    open var bInheritUV: Boolean
    open var InheritUVChannel: Any

    companion object {
        fun Load(ResourceName: String): ParticleModuleLocationSkelVertSurface
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleLocationSkelVertSurface
        fun GetDefaultObject(): ParticleModuleLocationSkelVertSurface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleLocationSkelVertSurface
        fun C(Other: UObject): ParticleModuleLocationSkelVertSurface
        fun C(Other: Any): ParticleModuleLocationSkelVertSurface
    }
}

external open class ParticleModuleLocationWorldOffset : ParticleModuleLocation {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ParticleModuleLocationWorldOffset
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleLocationWorldOffset
        fun GetDefaultObject(): ParticleModuleLocationWorldOffset
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleLocationWorldOffset
        fun C(Other: UObject): ParticleModuleLocationWorldOffset
        fun C(Other: Any): ParticleModuleLocationWorldOffset
    }
}

external open class ParticleModuleLocationWorldOffset_Seeded : ParticleModuleLocationWorldOffset {
    constructor()
    constructor(Outer: UObject)
    open var RandomSeedInfo: ParticleRandomSeedInfo

    companion object {
        fun Load(ResourceName: String): ParticleModuleLocationWorldOffset_Seeded
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleLocationWorldOffset_Seeded
        fun GetDefaultObject(): ParticleModuleLocationWorldOffset_Seeded
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleLocationWorldOffset_Seeded
        fun C(Other: UObject): ParticleModuleLocationWorldOffset_Seeded
        fun C(Other: Any): ParticleModuleLocationWorldOffset_Seeded
    }
}

external open class ParticleModuleMaterialBase : ParticleModule {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ParticleModuleMaterialBase
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleMaterialBase
        fun GetDefaultObject(): ParticleModuleMaterialBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleMaterialBase
        fun C(Other: UObject): ParticleModuleMaterialBase
        fun C(Other: Any): ParticleModuleMaterialBase
    }
}

external open class ParticleModuleMeshMaterial : ParticleModuleMaterialBase {
    constructor()
    constructor(Outer: UObject)
    open var MeshMaterials: Array<MaterialInterface>

    companion object {
        fun Load(ResourceName: String): ParticleModuleMeshMaterial
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleMeshMaterial
        fun GetDefaultObject(): ParticleModuleMeshMaterial
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleMeshMaterial
        fun C(Other: UObject): ParticleModuleMeshMaterial
        fun C(Other: Any): ParticleModuleMeshMaterial
    }
}

external open class ParticleModuleRotationBase : ParticleModule {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ParticleModuleRotationBase
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleRotationBase
        fun GetDefaultObject(): ParticleModuleRotationBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleRotationBase
        fun C(Other: UObject): ParticleModuleRotationBase
        fun C(Other: Any): ParticleModuleRotationBase
    }
}

external open class ParticleModuleMeshRotation : ParticleModuleRotationBase {
    constructor()
    constructor(Outer: UObject)
    open var StartRotation: RawDistributionVector
    open var bInheritParent: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleMeshRotation
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleMeshRotation
        fun GetDefaultObject(): ParticleModuleMeshRotation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleMeshRotation
        fun C(Other: UObject): ParticleModuleMeshRotation
        fun C(Other: Any): ParticleModuleMeshRotation
    }
}

external open class ParticleModuleMeshRotation_Seeded : ParticleModuleMeshRotation {
    constructor()
    constructor(Outer: UObject)
    open var RandomSeedInfo: ParticleRandomSeedInfo

    companion object {
        fun Load(ResourceName: String): ParticleModuleMeshRotation_Seeded
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleMeshRotation_Seeded
        fun GetDefaultObject(): ParticleModuleMeshRotation_Seeded
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleMeshRotation_Seeded
        fun C(Other: UObject): ParticleModuleMeshRotation_Seeded
        fun C(Other: Any): ParticleModuleMeshRotation_Seeded
    }
}

external open class ParticleModuleRotationRateBase : ParticleModule {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ParticleModuleRotationRateBase
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleRotationRateBase
        fun GetDefaultObject(): ParticleModuleRotationRateBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleRotationRateBase
        fun C(Other: UObject): ParticleModuleRotationRateBase
        fun C(Other: Any): ParticleModuleRotationRateBase
    }
}

external open class ParticleModuleMeshRotationRate : ParticleModuleRotationRateBase {
    constructor()
    constructor(Outer: UObject)
    open var StartRotationRate: RawDistributionVector

    companion object {
        fun Load(ResourceName: String): ParticleModuleMeshRotationRate
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleMeshRotationRate
        fun GetDefaultObject(): ParticleModuleMeshRotationRate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleMeshRotationRate
        fun C(Other: UObject): ParticleModuleMeshRotationRate
        fun C(Other: Any): ParticleModuleMeshRotationRate
    }
}

external open class ParticleModuleMeshRotationRate_Seeded : ParticleModuleMeshRotationRate {
    constructor()
    constructor(Outer: UObject)
    open var RandomSeedInfo: ParticleRandomSeedInfo

    companion object {
        fun Load(ResourceName: String): ParticleModuleMeshRotationRate_Seeded
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleMeshRotationRate_Seeded
        fun GetDefaultObject(): ParticleModuleMeshRotationRate_Seeded
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleMeshRotationRate_Seeded
        fun C(Other: UObject): ParticleModuleMeshRotationRate_Seeded
        fun C(Other: Any): ParticleModuleMeshRotationRate_Seeded
    }
}

external open class ParticleModuleMeshRotationRateMultiplyLife : ParticleModuleRotationRateBase {
    constructor()
    constructor(Outer: UObject)
    open var LifeMultiplier: RawDistributionVector

    companion object {
        fun Load(ResourceName: String): ParticleModuleMeshRotationRateMultiplyLife
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleMeshRotationRateMultiplyLife
        fun GetDefaultObject(): ParticleModuleMeshRotationRateMultiplyLife
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleMeshRotationRateMultiplyLife
        fun C(Other: UObject): ParticleModuleMeshRotationRateMultiplyLife
        fun C(Other: Any): ParticleModuleMeshRotationRateMultiplyLife
    }
}

external open class ParticleModuleMeshRotationRateOverLife : ParticleModuleRotationRateBase {
    constructor()
    constructor(Outer: UObject)
    open var RotRate: RawDistributionVector
    open var bScaleRotRate: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleMeshRotationRateOverLife
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleMeshRotationRateOverLife
        fun GetDefaultObject(): ParticleModuleMeshRotationRateOverLife
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleMeshRotationRateOverLife
        fun C(Other: UObject): ParticleModuleMeshRotationRateOverLife
        fun C(Other: Any): ParticleModuleMeshRotationRateOverLife
    }
}

external open class ParticleModuleOrientationBase : ParticleModule {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ParticleModuleOrientationBase
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleOrientationBase
        fun GetDefaultObject(): ParticleModuleOrientationBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleOrientationBase
        fun C(Other: UObject): ParticleModuleOrientationBase
        fun C(Other: Any): ParticleModuleOrientationBase
    }
}

external object EParticleAxisLock {
    var EPAL_NONE: String /* "EPAL_NONE" */
    var EPAL_X: String /* "EPAL_X" */
    var EPAL_Y: String /* "EPAL_Y" */
    var EPAL_Z: String /* "EPAL_Z" */
    var EPAL_NEGATIVE_X: String /* "EPAL_NEGATIVE_X" */
    var EPAL_NEGATIVE_Y: String /* "EPAL_NEGATIVE_Y" */
    var EPAL_NEGATIVE_Z: String /* "EPAL_NEGATIVE_Z" */
    var EPAL_ROTATE_X: String /* "EPAL_ROTATE_X" */
    var EPAL_ROTATE_Y: String /* "EPAL_ROTATE_Y" */
    var EPAL_ROTATE_Z: String /* "EPAL_ROTATE_Z" */
    var EPAL_MAX: String /* "EPAL_MAX" */
}

external open class ParticleModuleOrientationAxisLock : ParticleModuleOrientationBase {
    constructor()
    constructor(Outer: UObject)
    open var LockAxisFlags: String /* "EPAL_NONE" | "EPAL_X" | "EPAL_Y" | "EPAL_Z" | "EPAL_NEGATIVE_X" | "EPAL_NEGATIVE_Y" | "EPAL_NEGATIVE_Z" | "EPAL_ROTATE_X" | "EPAL_ROTATE_Y" | "EPAL_ROTATE_Z" | "EPAL_MAX" */

    companion object {
        fun Load(ResourceName: String): ParticleModuleOrientationAxisLock
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleOrientationAxisLock
        fun GetDefaultObject(): ParticleModuleOrientationAxisLock
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleOrientationAxisLock
        fun C(Other: UObject): ParticleModuleOrientationAxisLock
        fun C(Other: Any): ParticleModuleOrientationAxisLock
    }
}

external open class ParticleModuleParameterBase : ParticleModule {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ParticleModuleParameterBase
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleParameterBase
        fun GetDefaultObject(): ParticleModuleParameterBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleParameterBase
        fun C(Other: UObject): ParticleModuleParameterBase
        fun C(Other: Any): ParticleModuleParameterBase
    }
}

external object EEmitterDynamicParameterValue {
    var EDPV_UserSet: String /* "EDPV_UserSet" */
    var EDPV_AutoSet: String /* "EDPV_AutoSet" */
    var EDPV_VelocityX: String /* "EDPV_VelocityX" */
    var EDPV_VelocityY: String /* "EDPV_VelocityY" */
    var EDPV_VelocityZ: String /* "EDPV_VelocityZ" */
    var EDPV_VelocityMag: String /* "EDPV_VelocityMag" */
    var EDPV_MAX: String /* "EDPV_MAX" */
}

external open class EmitterDynamicParameter {
    open var ParamName: String
    open var bUseEmitterTime: Boolean
    open var bSpawnTimeOnly: Boolean
    open var ValueMethod: String /* "EDPV_UserSet" | "EDPV_AutoSet" | "EDPV_VelocityX" | "EDPV_VelocityY" | "EDPV_VelocityZ" | "EDPV_VelocityMag" | "EDPV_MAX" */
    open var bScaleVelocityByParamValue: Boolean
    open var ParamValue: RawDistributionFloat
    open fun clone(): EmitterDynamicParameter

    companion object {
        fun C(Other: UObject): EmitterDynamicParameter
        fun C(Other: Any): EmitterDynamicParameter
    }
}

external open class ParticleModuleParameterDynamic : ParticleModuleParameterBase {
    constructor()
    constructor(Outer: UObject)
    open var DynamicParams: Array<EmitterDynamicParameter>
    open var UpdateFlags: Number
    open var bUsesVelocity: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleParameterDynamic
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleParameterDynamic
        fun GetDefaultObject(): ParticleModuleParameterDynamic
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleParameterDynamic
        fun C(Other: UObject): ParticleModuleParameterDynamic
        fun C(Other: Any): ParticleModuleParameterDynamic
    }
}

external open class ParticleModuleParameterDynamic_Seeded : ParticleModuleParameterDynamic {
    constructor()
    constructor(Outer: UObject)
    open var RandomSeedInfo: ParticleRandomSeedInfo

    companion object {
        fun Load(ResourceName: String): ParticleModuleParameterDynamic_Seeded
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleParameterDynamic_Seeded
        fun GetDefaultObject(): ParticleModuleParameterDynamic_Seeded
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleParameterDynamic_Seeded
        fun C(Other: UObject): ParticleModuleParameterDynamic_Seeded
        fun C(Other: Any): ParticleModuleParameterDynamic_Seeded
    }
}

external open class ParticleModulePivotOffset : ParticleModuleLocationBase {
    constructor()
    constructor(Outer: UObject)
    open var PivotOffset: Vector2D

    companion object {
        fun Load(ResourceName: String): ParticleModulePivotOffset
        fun Find(Outer: UObject, ResourceName: String): ParticleModulePivotOffset
        fun GetDefaultObject(): ParticleModulePivotOffset
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModulePivotOffset
        fun C(Other: UObject): ParticleModulePivotOffset
        fun C(Other: Any): ParticleModulePivotOffset
    }
}

external open class ParticleModuleRotation : ParticleModuleRotationBase {
    constructor()
    constructor(Outer: UObject)
    open var StartRotation: RawDistributionFloat

    companion object {
        fun Load(ResourceName: String): ParticleModuleRotation
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleRotation
        fun GetDefaultObject(): ParticleModuleRotation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleRotation
        fun C(Other: UObject): ParticleModuleRotation
        fun C(Other: Any): ParticleModuleRotation
    }
}

external open class ParticleModuleRotation_Seeded : ParticleModuleRotation {
    constructor()
    constructor(Outer: UObject)
    open var RandomSeedInfo: ParticleRandomSeedInfo

    companion object {
        fun Load(ResourceName: String): ParticleModuleRotation_Seeded
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleRotation_Seeded
        fun GetDefaultObject(): ParticleModuleRotation_Seeded
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleRotation_Seeded
        fun C(Other: UObject): ParticleModuleRotation_Seeded
        fun C(Other: Any): ParticleModuleRotation_Seeded
    }
}

external open class ParticleModuleRotationOverLifetime : ParticleModuleRotationBase {
    constructor()
    constructor(Outer: UObject)
    open var RotationOverLife: RawDistributionFloat
    open var Scale: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleRotationOverLifetime
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleRotationOverLifetime
        fun GetDefaultObject(): ParticleModuleRotationOverLifetime
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleRotationOverLifetime
        fun C(Other: UObject): ParticleModuleRotationOverLifetime
        fun C(Other: Any): ParticleModuleRotationOverLifetime
    }
}

external open class ParticleModuleRotationRate : ParticleModuleRotationRateBase {
    constructor()
    constructor(Outer: UObject)
    open var StartRotationRate: RawDistributionFloat

    companion object {
        fun Load(ResourceName: String): ParticleModuleRotationRate
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleRotationRate
        fun GetDefaultObject(): ParticleModuleRotationRate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleRotationRate
        fun C(Other: UObject): ParticleModuleRotationRate
        fun C(Other: Any): ParticleModuleRotationRate
    }
}

external open class ParticleModuleRotationRate_Seeded : ParticleModuleRotationRate {
    constructor()
    constructor(Outer: UObject)
    open var RandomSeedInfo: ParticleRandomSeedInfo

    companion object {
        fun Load(ResourceName: String): ParticleModuleRotationRate_Seeded
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleRotationRate_Seeded
        fun GetDefaultObject(): ParticleModuleRotationRate_Seeded
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleRotationRate_Seeded
        fun C(Other: UObject): ParticleModuleRotationRate_Seeded
        fun C(Other: Any): ParticleModuleRotationRate_Seeded
    }
}

external open class ParticleModuleRotationRateMultiplyLife : ParticleModuleRotationRateBase {
    constructor()
    constructor(Outer: UObject)
    open var LifeMultiplier: RawDistributionFloat

    companion object {
        fun Load(ResourceName: String): ParticleModuleRotationRateMultiplyLife
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleRotationRateMultiplyLife
        fun GetDefaultObject(): ParticleModuleRotationRateMultiplyLife
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleRotationRateMultiplyLife
        fun C(Other: UObject): ParticleModuleRotationRateMultiplyLife
        fun C(Other: Any): ParticleModuleRotationRateMultiplyLife
    }
}

external open class ParticleModuleSizeBase : ParticleModule {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ParticleModuleSizeBase
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleSizeBase
        fun GetDefaultObject(): ParticleModuleSizeBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleSizeBase
        fun C(Other: UObject): ParticleModuleSizeBase
        fun C(Other: Any): ParticleModuleSizeBase
    }
}

external open class ParticleModuleSize : ParticleModuleSizeBase {
    constructor()
    constructor(Outer: UObject)
    open var StartSize: RawDistributionVector

    companion object {
        fun Load(ResourceName: String): ParticleModuleSize
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleSize
        fun GetDefaultObject(): ParticleModuleSize
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleSize
        fun C(Other: UObject): ParticleModuleSize
        fun C(Other: Any): ParticleModuleSize
    }
}

external open class ParticleModuleSize_Seeded : ParticleModuleSize {
    constructor()
    constructor(Outer: UObject)
    open var RandomSeedInfo: ParticleRandomSeedInfo

    companion object {
        fun Load(ResourceName: String): ParticleModuleSize_Seeded
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleSize_Seeded
        fun GetDefaultObject(): ParticleModuleSize_Seeded
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleSize_Seeded
        fun C(Other: UObject): ParticleModuleSize_Seeded
        fun C(Other: Any): ParticleModuleSize_Seeded
    }
}

external open class ParticleModuleSizeMultiplyLife : ParticleModuleSizeBase {
    constructor()
    constructor(Outer: UObject)
    open var LifeMultiplier: RawDistributionVector
    open var MultiplyX: Boolean
    open var MultiplyY: Boolean
    open var MultiplyZ: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleSizeMultiplyLife
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleSizeMultiplyLife
        fun GetDefaultObject(): ParticleModuleSizeMultiplyLife
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleSizeMultiplyLife
        fun C(Other: UObject): ParticleModuleSizeMultiplyLife
        fun C(Other: Any): ParticleModuleSizeMultiplyLife
    }
}

external open class ParticleModuleSizeScale : ParticleModuleSizeBase {
    constructor()
    constructor(Outer: UObject)
    open var SizeScale: RawDistributionVector
    open var EnableX: Boolean
    open var EnableY: Boolean
    open var EnableZ: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleSizeScale
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleSizeScale
        fun GetDefaultObject(): ParticleModuleSizeScale
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleSizeScale
        fun C(Other: UObject): ParticleModuleSizeScale
        fun C(Other: Any): ParticleModuleSizeScale
    }
}

external open class ParticleModuleSizeScaleBySpeed : ParticleModuleSizeBase {
    constructor()
    constructor(Outer: UObject)
    open var SpeedScale: Vector2D
    open var MaxScale: Vector2D

    companion object {
        fun Load(ResourceName: String): ParticleModuleSizeScaleBySpeed
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleSizeScaleBySpeed
        fun GetDefaultObject(): ParticleModuleSizeScaleBySpeed
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleSizeScaleBySpeed
        fun C(Other: UObject): ParticleModuleSizeScaleBySpeed
        fun C(Other: Any): ParticleModuleSizeScaleBySpeed
    }
}

external open class ParticleModuleSourceMovement : ParticleModuleLocationBase {
    constructor()
    constructor(Outer: UObject)
    open var SourceMovementScale: RawDistributionVector

    companion object {
        fun Load(ResourceName: String): ParticleModuleSourceMovement
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleSourceMovement
        fun GetDefaultObject(): ParticleModuleSourceMovement
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleSourceMovement
        fun C(Other: UObject): ParticleModuleSourceMovement
        fun C(Other: Any): ParticleModuleSourceMovement
    }
}

external open class ParticleModuleSpawnPerUnit : ParticleModuleSpawnBase {
    constructor()
    constructor(Outer: UObject)
    open var UnitScalar: Number
    open var SpawnPerUnit: RawDistributionFloat
    open var bIgnoreSpawnRateWhenMoving: Boolean
    open var MovementTolerance: Number
    open var MaxFrameDistance: Number
    open var bIgnoreMovementAlongX: Boolean
    open var bIgnoreMovementAlongY: Boolean
    open var bIgnoreMovementAlongZ: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleSpawnPerUnit
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleSpawnPerUnit
        fun GetDefaultObject(): ParticleModuleSpawnPerUnit
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleSpawnPerUnit
        fun C(Other: UObject): ParticleModuleSpawnPerUnit
        fun C(Other: Any): ParticleModuleSpawnPerUnit
    }
}

external open class ParticleModuleSubUVBase : ParticleModule {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ParticleModuleSubUVBase
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleSubUVBase
        fun GetDefaultObject(): ParticleModuleSubUVBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleSubUVBase
        fun C(Other: UObject): ParticleModuleSubUVBase
        fun C(Other: Any): ParticleModuleSubUVBase
    }
}

external open class SubUVAnimation : UObject {
    constructor()
    constructor(Outer: UObject)
    open var SubUVTexture: Texture2D
    open var SubImages_Horizontal: Number
    open var SubImages_Vertical: Number
    open var BoundingMode: String /* "BVC_FourVertices" | "BVC_EightVertices" | "BVC_MAX" */
    open var OpacitySourceMode: String /* "OSM_Alpha" | "OSM_ColorBrightness" | "OSM_RedChannel" | "OSM_GreenChannel" | "OSM_BlueChannel" | "OSM_MAX" */
    open var AlphaThreshold: Number

    companion object {
        fun Load(ResourceName: String): SubUVAnimation
        fun Find(Outer: UObject, ResourceName: String): SubUVAnimation
        fun GetDefaultObject(): SubUVAnimation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SubUVAnimation
        fun C(Other: UObject): SubUVAnimation
        fun C(Other: Any): SubUVAnimation
    }
}

external open class ParticleModuleSubUV : ParticleModuleSubUVBase {
    constructor()
    constructor(Outer: UObject)
    open var Animation: SubUVAnimation
    open var SubImageIndex: RawDistributionFloat
    open var bUseRealTime: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleSubUV
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleSubUV
        fun GetDefaultObject(): ParticleModuleSubUV
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleSubUV
        fun C(Other: UObject): ParticleModuleSubUV
        fun C(Other: Any): ParticleModuleSubUV
    }
}

external open class ParticleModuleSubUVMovie : ParticleModuleSubUV {
    constructor()
    constructor(Outer: UObject)
    open var bUseEmitterTime: Boolean
    open var FrameRate: RawDistributionFloat
    open var StartingFrame: Number

    companion object {
        fun Load(ResourceName: String): ParticleModuleSubUVMovie
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleSubUVMovie
        fun GetDefaultObject(): ParticleModuleSubUVMovie
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleSubUVMovie
        fun C(Other: UObject): ParticleModuleSubUVMovie
        fun C(Other: Any): ParticleModuleSubUVMovie
    }
}

external open class ParticleModuleTrailBase : ParticleModule {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ParticleModuleTrailBase
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleTrailBase
        fun GetDefaultObject(): ParticleModuleTrailBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleTrailBase
        fun C(Other: UObject): ParticleModuleTrailBase
        fun C(Other: Any): ParticleModuleTrailBase
    }
}

external object ETrail2SourceMethod {
    var PET2SRCM_Default: String /* "PET2SRCM_Default" */
    var PET2SRCM_Particle: String /* "PET2SRCM_Particle" */
    var PET2SRCM_Actor: String /* "PET2SRCM_Actor" */
    var PET2SRCM_MAX: String /* "PET2SRCM_MAX" */
}

external object EParticleSourceSelectionMethod {
    var EPSSM_Random: String /* "EPSSM_Random" */
    var EPSSM_Sequential: String /* "EPSSM_Sequential" */
    var EPSSM_MAX: String /* "EPSSM_MAX" */
}

external open class ParticleModuleTrailSource : ParticleModuleTrailBase {
    constructor()
    constructor(Outer: UObject)
    open var SourceMethod: String /* "PET2SRCM_Default" | "PET2SRCM_Particle" | "PET2SRCM_Actor" | "PET2SRCM_MAX" */
    open var SourceName: String
    open var SourceStrength: RawDistributionFloat
    open var bLockSourceStength: Boolean
    open var SourceOffsetCount: Number
    open var SourceOffsetDefaults: Array<Vector>
    open var SelectionMethod: String /* "EPSSM_Random" | "EPSSM_Sequential" | "EPSSM_MAX" */
    open var bInheritRotation: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleTrailSource
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleTrailSource
        fun GetDefaultObject(): ParticleModuleTrailSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleTrailSource
        fun C(Other: UObject): ParticleModuleTrailSource
        fun C(Other: Any): ParticleModuleTrailSource
    }
}

external open class ParticleModuleTypeDataAnimTrail : ParticleModuleTypeDataBase {
    constructor()
    constructor(Outer: UObject)
    open var bDeadTrailsOnDeactivate: Boolean
    open var bEnablePreviousTangentRecalculation: Boolean
    open var bTangentRecalculationEveryFrame: Boolean
    open var TilingDistance: Number
    open var DistanceTessellationStepSize: Number
    open var TangentTessellationStepSize: Number
    open var WidthTessellationStepSize: Number

    companion object {
        fun Load(ResourceName: String): ParticleModuleTypeDataAnimTrail
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleTypeDataAnimTrail
        fun GetDefaultObject(): ParticleModuleTypeDataAnimTrail
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleTypeDataAnimTrail
        fun C(Other: UObject): ParticleModuleTypeDataAnimTrail
        fun C(Other: Any): ParticleModuleTypeDataAnimTrail
    }
}

external object EBeam2Method {
    var PEB2M_Distance: String /* "PEB2M_Distance" */
    var PEB2M_Target: String /* "PEB2M_Target" */
    var PEB2M_Branch: String /* "PEB2M_Branch" */
    var PEB2M_MAX: String /* "PEB2M_MAX" */
}

external object EBeamTaperMethod {
    var PEBTM_None: String /* "PEBTM_None" */
    var PEBTM_Full: String /* "PEBTM_Full" */
    var PEBTM_Partial: String /* "PEBTM_Partial" */
    var PEBTM_MAX: String /* "PEBTM_MAX" */
}

external open class ParticleModuleTypeDataBeam2 : ParticleModuleTypeDataBase {
    constructor()
    constructor(Outer: UObject)
    open var BeamMethod: String /* "PEB2M_Distance" | "PEB2M_Target" | "PEB2M_Branch" | "PEB2M_MAX" */
    open var TextureTile: Number
    open var TextureTileDistance: Number
    open var Sheets: Number
    open var MaxBeamCount: Number
    open var Speed: Number
    open var InterpolationPoints: Number
    open var bAlwaysOn: Boolean
    open var UpVectorStepSize: Number
    open var BranchParentName: String
    open var Distance: RawDistributionFloat
    open var TaperMethod: String /* "PEBTM_None" | "PEBTM_Full" | "PEBTM_Partial" | "PEBTM_MAX" */
    open var TaperFactor: RawDistributionFloat
    open var TaperScale: RawDistributionFloat
    open var RenderGeometry: Boolean
    open var RenderDirectLine: Boolean
    open var RenderLines: Boolean
    open var RenderTessellation: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleTypeDataBeam2
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleTypeDataBeam2
        fun GetDefaultObject(): ParticleModuleTypeDataBeam2
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleTypeDataBeam2
        fun C(Other: UObject): ParticleModuleTypeDataBeam2
        fun C(Other: Any): ParticleModuleTypeDataBeam2
    }
}

external open class VectorField : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Bounds: Box
    open var Intensity: Number

    companion object {
        fun Load(ResourceName: String): VectorField
        fun Find(Outer: UObject, ResourceName: String): VectorField
        fun GetDefaultObject(): VectorField
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VectorField
        fun C(Other: UObject): VectorField
        fun C(Other: Any): VectorField
    }
}

external open class GPUSpriteLocalVectorFieldInfo {
    open var Field: VectorField
    open var Transform: Transform
    open var MinInitialRotation: Rotator
    open var MaxInitialRotation: Rotator
    open var RotationRate: Rotator
    open var Intensity: Number
    open var Tightness: Number
    open var bIgnoreComponentTransform: Boolean
    open var bTileX: Boolean
    open var bTileY: Boolean
    open var bTileZ: Boolean
    open var bUseFixDT: Boolean
    open fun clone(): GPUSpriteLocalVectorFieldInfo

    companion object {
        fun C(Other: UObject): GPUSpriteLocalVectorFieldInfo
        fun C(Other: Any): GPUSpriteLocalVectorFieldInfo
    }
}

external open class FloatDistribution {
    open var Table: DistributionLookupTable
    open fun clone(): FloatDistribution

    companion object {
        fun C(Other: UObject): FloatDistribution
        fun C(Other: Any): FloatDistribution
    }
}

external open class GPUSpriteEmitterInfo {
    open var RequiredModule: ParticleModuleRequired
    open var SpawnModule: ParticleModuleSpawn
    open var SpawnPerUnitModule: ParticleModuleSpawnPerUnit
    open var SpawnModules: Array<ParticleModule>
    open var LocalVectorField: GPUSpriteLocalVectorFieldInfo
    open var VectorFieldScale: FloatDistribution
    open var DragCoefficient: FloatDistribution
    open var PointAttractorStrength: FloatDistribution
    open var Resilience: FloatDistribution
    open var ConstantAcceleration: Vector
    open var PointAttractorPosition: Vector
    open var PointAttractorRadiusSq: Number
    open var OrbitOffsetBase: Vector
    open var OrbitOffsetRange: Vector
    open var InvMaxSize: Vector2D
    open var InvRotationRateScale: Number
    open var MaxLifetime: Number
    open var MaxParticleCount: Number
    open var ScreenAlignment: String /* "PSA_FacingCameraPosition" | "PSA_Square" | "PSA_Rectangle" | "PSA_Velocity" | "PSA_AwayFromCenter" | "PSA_TypeSpecific" | "PSA_FacingCameraDistanceBlend" | "PSA_MAX" */
    open var LockAxisFlag: String /* "EPAL_NONE" | "EPAL_X" | "EPAL_Y" | "EPAL_Z" | "EPAL_NEGATIVE_X" | "EPAL_NEGATIVE_Y" | "EPAL_NEGATIVE_Z" | "EPAL_ROTATE_X" | "EPAL_ROTATE_Y" | "EPAL_ROTATE_Z" | "EPAL_MAX" */
    open var bEnableCollision: Boolean
    open var CollisionMode: String /* "SceneDepth" | "DistanceField" | "EParticleCollisionMode_MAX" */
    open var bRemoveHMDRoll: Boolean
    open var MinFacingCameraBlendDistance: Number
    open var MaxFacingCameraBlendDistance: Number
    open var DynamicColor: RawDistributionVector
    open var DynamicAlpha: RawDistributionFloat
    open var DynamicColorScale: RawDistributionVector
    open var DynamicAlphaScale: RawDistributionFloat
    open fun clone(): GPUSpriteEmitterInfo

    companion object {
        fun C(Other: UObject): GPUSpriteEmitterInfo
        fun C(Other: Any): GPUSpriteEmitterInfo
    }
}

external open class GPUSpriteResourceData {
    open var QuantizedColorSamples: Array<Color>
    open var QuantizedMiscSamples: Array<Color>
    open var QuantizedSimulationAttrSamples: Array<Color>
    open var ColorScale: Vector4
    open var ColorBias: Vector4
    open var MiscScale: Vector4
    open var MiscBias: Vector4
    open var SimulationAttrCurveScale: Vector4
    open var SimulationAttrCurveBias: Vector4
    open var SubImageSize: Vector4
    open var SizeBySpeed: Vector4
    open var ConstantAcceleration: Vector
    open var OrbitOffsetBase: Vector
    open var OrbitOffsetRange: Vector
    open var OrbitFrequencyBase: Vector
    open var OrbitFrequencyRange: Vector
    open var OrbitPhaseBase: Vector
    open var OrbitPhaseRange: Vector
    open var GlobalVectorFieldScale: Number
    open var GlobalVectorFieldTightness: Number
    open var PerParticleVectorFieldScale: Number
    open var PerParticleVectorFieldBias: Number
    open var DragCoefficientScale: Number
    open var DragCoefficientBias: Number
    open var ResilienceScale: Number
    open var ResilienceBias: Number
    open var CollisionRadiusScale: Number
    open var CollisionRadiusBias: Number
    open var CollisionTimeBias: Number
    open var CollisionRandomSpread: Number
    open var CollisionRandomDistribution: Number
    open var OneMinusFriction: Number
    open var RotationRateScale: Number
    open var CameraMotionBlurAmount: Number
    open var ScreenAlignment: String /* "PSA_FacingCameraPosition" | "PSA_Square" | "PSA_Rectangle" | "PSA_Velocity" | "PSA_AwayFromCenter" | "PSA_TypeSpecific" | "PSA_FacingCameraDistanceBlend" | "PSA_MAX" */
    open var LockAxisFlag: String /* "EPAL_NONE" | "EPAL_X" | "EPAL_Y" | "EPAL_Z" | "EPAL_NEGATIVE_X" | "EPAL_NEGATIVE_Y" | "EPAL_NEGATIVE_Z" | "EPAL_ROTATE_X" | "EPAL_ROTATE_Y" | "EPAL_ROTATE_Z" | "EPAL_MAX" */
    open var PivotOffset: Vector2D
    open var bRemoveHMDRoll: Boolean
    open var MinFacingCameraBlendDistance: Number
    open var MaxFacingCameraBlendDistance: Number
    open fun clone(): GPUSpriteResourceData

    companion object {
        fun C(Other: UObject): GPUSpriteResourceData
        fun C(Other: Any): GPUSpriteResourceData
    }
}

external open class ParticleModuleTypeDataGpu : ParticleModuleTypeDataBase {
    constructor()
    constructor(Outer: UObject)
    open var EmitterInfo: GPUSpriteEmitterInfo
    open var ResourceData: GPUSpriteResourceData
    open var CameraMotionBlurAmount: Number
    open var bClearExistingParticlesOnInit: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleTypeDataGpu
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleTypeDataGpu
        fun GetDefaultObject(): ParticleModuleTypeDataGpu
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleTypeDataGpu
        fun C(Other: UObject): ParticleModuleTypeDataGpu
        fun C(Other: Any): ParticleModuleTypeDataGpu
    }
}

external object EMeshScreenAlignment {
    var PSMA_MeshFaceCameraWithRoll: String /* "PSMA_MeshFaceCameraWithRoll" */
    var PSMA_MeshFaceCameraWithSpin: String /* "PSMA_MeshFaceCameraWithSpin" */
    var PSMA_MeshFaceCameraWithLockedAxis: String /* "PSMA_MeshFaceCameraWithLockedAxis" */
    var PSMA_MAX: String /* "PSMA_MAX" */
}

external object EMeshCameraFacingUpAxis {
    var CameraFacing_NoneUP: String /* "CameraFacing_NoneUP" */
    var CameraFacing_ZUp: String /* "CameraFacing_ZUp" */
    var CameraFacing_NegativeZUp: String /* "CameraFacing_NegativeZUp" */
    var CameraFacing_YUp: String /* "CameraFacing_YUp" */
    var CameraFacing_NegativeYUp: String /* "CameraFacing_NegativeYUp" */
    var CameraFacing_MAX: String /* "CameraFacing_MAX" */
}

external object EMeshCameraFacingOptions {
    var XAxisFacing_NoUp: String /* "XAxisFacing_NoUp" */
    var XAxisFacing_ZUp: String /* "XAxisFacing_ZUp" */
    var XAxisFacing_NegativeZUp: String /* "XAxisFacing_NegativeZUp" */
    var XAxisFacing_YUp: String /* "XAxisFacing_YUp" */
    var XAxisFacing_NegativeYUp: String /* "XAxisFacing_NegativeYUp" */
    var LockedAxis_ZAxisFacing: String /* "LockedAxis_ZAxisFacing" */
    var LockedAxis_NegativeZAxisFacing: String /* "LockedAxis_NegativeZAxisFacing" */
    var LockedAxis_YAxisFacing: String /* "LockedAxis_YAxisFacing" */
    var LockedAxis_NegativeYAxisFacing: String /* "LockedAxis_NegativeYAxisFacing" */
    var VelocityAligned_ZAxisFacing: String /* "VelocityAligned_ZAxisFacing" */
    var VelocityAligned_NegativeZAxisFacing: String /* "VelocityAligned_NegativeZAxisFacing" */
    var VelocityAligned_YAxisFacing: String /* "VelocityAligned_YAxisFacing" */
    var VelocityAligned_NegativeYAxisFacing: String /* "VelocityAligned_NegativeYAxisFacing" */
    var EMeshCameraFacingOptions_MAX: String /* "EMeshCameraFacingOptions_MAX" */
}

external open class ParticleModuleTypeDataMesh : ParticleModuleTypeDataBase {
    constructor()
    constructor(Outer: UObject)
    open var Mesh: StaticMesh
    open var bUseStaticMeshLODs: Boolean
    open var LODSizeScale: Number
    open var CastShadows: Boolean
    open var DoCollisions: Boolean
    open var MeshAlignment: String /* "PSMA_MeshFaceCameraWithRoll" | "PSMA_MeshFaceCameraWithSpin" | "PSMA_MeshFaceCameraWithLockedAxis" | "PSMA_MAX" */
    open var bOverrideMaterial: Boolean
    open var bOverrideDefaultMotionBlurSettings: Boolean
    open var bEnableMotionBlur: Boolean
    open var Pitch: Number
    open var Roll: Number
    open var Yaw: Number
    open var RollPitchYawRange: RawDistributionVector
    open var AxisLockOption: String /* "EPAL_NONE" | "EPAL_X" | "EPAL_Y" | "EPAL_Z" | "EPAL_NEGATIVE_X" | "EPAL_NEGATIVE_Y" | "EPAL_NEGATIVE_Z" | "EPAL_ROTATE_X" | "EPAL_ROTATE_Y" | "EPAL_ROTATE_Z" | "EPAL_MAX" */
    open var bCameraFacing: Boolean
    open var CameraFacingUpAxisOption: String /* "CameraFacing_NoneUP" | "CameraFacing_ZUp" | "CameraFacing_NegativeZUp" | "CameraFacing_YUp" | "CameraFacing_NegativeYUp" | "CameraFacing_MAX" */
    open var CameraFacingOption: String /* "XAxisFacing_NoUp" | "XAxisFacing_ZUp" | "XAxisFacing_NegativeZUp" | "XAxisFacing_YUp" | "XAxisFacing_NegativeYUp" | "LockedAxis_ZAxisFacing" | "LockedAxis_NegativeZAxisFacing" | "LockedAxis_YAxisFacing" | "LockedAxis_NegativeYAxisFacing" | "VelocityAligned_ZAxisFacing" | "VelocityAligned_NegativeZAxisFacing" | "VelocityAligned_YAxisFacing" | "VelocityAligned_NegativeYAxisFacing" | "EMeshCameraFacingOptions_MAX" */
    open var bApplyParticleRotationAsSpin: Boolean
    open var bFaceCameraDirectionRatherThanPosition: Boolean
    open var bCollisionsConsiderPartilceSize: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleTypeDataMesh
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleTypeDataMesh
        fun GetDefaultObject(): ParticleModuleTypeDataMesh
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleTypeDataMesh
        fun C(Other: UObject): ParticleModuleTypeDataMesh
        fun C(Other: Any): ParticleModuleTypeDataMesh
    }
}

external object ETrailsRenderAxisOption {
    var Trails_CameraUp: String /* "Trails_CameraUp" */
    var Trails_SourceUp: String /* "Trails_SourceUp" */
    var Trails_WorldUp: String /* "Trails_WorldUp" */
    var Trails_MAX: String /* "Trails_MAX" */
}

external open class ParticleModuleTypeDataRibbon : ParticleModuleTypeDataBase {
    constructor()
    constructor(Outer: UObject)
    open var MaxTessellationBetweenParticles: Number
    open var SheetsPerTrail: Number
    open var MaxTrailCount: Number
    open var MaxParticleInTrailCount: Number
    open var bDeadTrailsOnDeactivate: Boolean
    open var bDeadTrailsOnSourceLoss: Boolean
    open var bClipSourceSegement: Boolean
    open var bEnablePreviousTangentRecalculation: Boolean
    open var bTangentRecalculationEveryFrame: Boolean
    open var bSpawnInitialParticle: Boolean
    open var RenderAxis: String /* "Trails_CameraUp" | "Trails_SourceUp" | "Trails_WorldUp" | "Trails_MAX" */
    open var TangentSpawningScalar: Number
    open var bRenderGeometry: Boolean
    open var bRenderSpawnPoints: Boolean
    open var bRenderTangents: Boolean
    open var bRenderTessellation: Boolean
    open var TilingDistance: Number
    open var DistanceTessellationStepSize: Number
    open var bEnableTangentDiffInterpScale: Boolean
    open var TangentTessellationScalar: Number

    companion object {
        fun Load(ResourceName: String): ParticleModuleTypeDataRibbon
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleTypeDataRibbon
        fun GetDefaultObject(): ParticleModuleTypeDataRibbon
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleTypeDataRibbon
        fun C(Other: UObject): ParticleModuleTypeDataRibbon
        fun C(Other: Any): ParticleModuleTypeDataRibbon
    }
}

external open class ParticleModuleVectorFieldBase : ParticleModule {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ParticleModuleVectorFieldBase
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleVectorFieldBase
        fun GetDefaultObject(): ParticleModuleVectorFieldBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleVectorFieldBase
        fun C(Other: UObject): ParticleModuleVectorFieldBase
        fun C(Other: Any): ParticleModuleVectorFieldBase
    }
}

external open class ParticleModuleVectorFieldGlobal : ParticleModuleVectorFieldBase {
    constructor()
    constructor(Outer: UObject)
    open var bOverrideGlobalVectorFieldTightness: Boolean
    open var GlobalVectorFieldScale: Number
    open var GlobalVectorFieldTightness: Number

    companion object {
        fun Load(ResourceName: String): ParticleModuleVectorFieldGlobal
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleVectorFieldGlobal
        fun GetDefaultObject(): ParticleModuleVectorFieldGlobal
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleVectorFieldGlobal
        fun C(Other: UObject): ParticleModuleVectorFieldGlobal
        fun C(Other: Any): ParticleModuleVectorFieldGlobal
    }
}

external open class ParticleModuleVectorFieldLocal : ParticleModuleVectorFieldBase {
    constructor()
    constructor(Outer: UObject)
    open var VectorField: VectorField
    open var RelativeTranslation: Vector
    open var RelativeRotation: Rotator
    open var RelativeScale3D: Vector
    open var Intensity: Number
    open var Tightness: Number
    open var bIgnoreComponentTransform: Boolean
    open var bTileX: Boolean
    open var bTileY: Boolean
    open var bTileZ: Boolean
    open var bUseFixDT: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleVectorFieldLocal
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleVectorFieldLocal
        fun GetDefaultObject(): ParticleModuleVectorFieldLocal
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleVectorFieldLocal
        fun C(Other: UObject): ParticleModuleVectorFieldLocal
        fun C(Other: Any): ParticleModuleVectorFieldLocal
    }
}

external open class ParticleModuleVectorFieldRotation : ParticleModuleVectorFieldBase {
    constructor()
    constructor(Outer: UObject)
    open var MinInitialRotation: Vector
    open var MaxInitialRotation: Vector

    companion object {
        fun Load(ResourceName: String): ParticleModuleVectorFieldRotation
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleVectorFieldRotation
        fun GetDefaultObject(): ParticleModuleVectorFieldRotation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleVectorFieldRotation
        fun C(Other: UObject): ParticleModuleVectorFieldRotation
        fun C(Other: Any): ParticleModuleVectorFieldRotation
    }
}

external open class ParticleModuleVectorFieldRotationRate : ParticleModuleVectorFieldBase {
    constructor()
    constructor(Outer: UObject)
    open var RotationRate: Vector

    companion object {
        fun Load(ResourceName: String): ParticleModuleVectorFieldRotationRate
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleVectorFieldRotationRate
        fun GetDefaultObject(): ParticleModuleVectorFieldRotationRate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleVectorFieldRotationRate
        fun C(Other: UObject): ParticleModuleVectorFieldRotationRate
        fun C(Other: Any): ParticleModuleVectorFieldRotationRate
    }
}

external open class ParticleModuleVectorFieldScale : ParticleModuleVectorFieldBase {
    constructor()
    constructor(Outer: UObject)
    open var VectorFieldScale: DistributionFloat
    open var VectorFieldScaleRaw: RawDistributionFloat

    companion object {
        fun Load(ResourceName: String): ParticleModuleVectorFieldScale
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleVectorFieldScale
        fun GetDefaultObject(): ParticleModuleVectorFieldScale
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleVectorFieldScale
        fun C(Other: UObject): ParticleModuleVectorFieldScale
        fun C(Other: Any): ParticleModuleVectorFieldScale
    }
}

external open class ParticleModuleVectorFieldScaleOverLife : ParticleModuleVectorFieldBase {
    constructor()
    constructor(Outer: UObject)
    open var VectorFieldScaleOverLife: DistributionFloat
    open var VectorFieldScaleOverLifeRaw: RawDistributionFloat

    companion object {
        fun Load(ResourceName: String): ParticleModuleVectorFieldScaleOverLife
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleVectorFieldScaleOverLife
        fun GetDefaultObject(): ParticleModuleVectorFieldScaleOverLife
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleVectorFieldScaleOverLife
        fun C(Other: UObject): ParticleModuleVectorFieldScaleOverLife
        fun C(Other: Any): ParticleModuleVectorFieldScaleOverLife
    }
}

external open class ParticleModuleVelocityBase : ParticleModule {
    constructor()
    constructor(Outer: UObject)
    open var bInWorldSpace: Boolean
    open var bApplyOwnerScale: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleVelocityBase
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleVelocityBase
        fun GetDefaultObject(): ParticleModuleVelocityBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleVelocityBase
        fun C(Other: UObject): ParticleModuleVelocityBase
        fun C(Other: Any): ParticleModuleVelocityBase
    }
}

external open class ParticleModuleVelocity : ParticleModuleVelocityBase {
    constructor()
    constructor(Outer: UObject)
    open var StartVelocity: RawDistributionVector
    open var StartVelocityRadial: RawDistributionFloat

    companion object {
        fun Load(ResourceName: String): ParticleModuleVelocity
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleVelocity
        fun GetDefaultObject(): ParticleModuleVelocity
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleVelocity
        fun C(Other: UObject): ParticleModuleVelocity
        fun C(Other: Any): ParticleModuleVelocity
    }
}

external open class ParticleModuleVelocity_Seeded : ParticleModuleVelocity {
    constructor()
    constructor(Outer: UObject)
    open var RandomSeedInfo: ParticleRandomSeedInfo

    companion object {
        fun Load(ResourceName: String): ParticleModuleVelocity_Seeded
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleVelocity_Seeded
        fun GetDefaultObject(): ParticleModuleVelocity_Seeded
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleVelocity_Seeded
        fun C(Other: UObject): ParticleModuleVelocity_Seeded
        fun C(Other: Any): ParticleModuleVelocity_Seeded
    }
}

external open class ParticleModuleVelocityCone : ParticleModuleVelocityBase {
    constructor()
    constructor(Outer: UObject)
    open var Angle: RawDistributionFloat
    open var Velocity: RawDistributionFloat
    open var Direction: Vector

    companion object {
        fun Load(ResourceName: String): ParticleModuleVelocityCone
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleVelocityCone
        fun GetDefaultObject(): ParticleModuleVelocityCone
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleVelocityCone
        fun C(Other: UObject): ParticleModuleVelocityCone
        fun C(Other: Any): ParticleModuleVelocityCone
    }
}

external open class ParticleModuleVelocityInheritParent : ParticleModuleVelocityBase {
    constructor()
    constructor(Outer: UObject)
    open var Scale: RawDistributionVector

    companion object {
        fun Load(ResourceName: String): ParticleModuleVelocityInheritParent
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleVelocityInheritParent
        fun GetDefaultObject(): ParticleModuleVelocityInheritParent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleVelocityInheritParent
        fun C(Other: UObject): ParticleModuleVelocityInheritParent
        fun C(Other: Any): ParticleModuleVelocityInheritParent
    }
}

external open class ParticleModuleVelocityOverLifetime : ParticleModuleVelocityBase {
    constructor()
    constructor(Outer: UObject)
    open var VelOverLife: RawDistributionVector
    open var Absolute: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleVelocityOverLifetime
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleVelocityOverLifetime
        fun GetDefaultObject(): ParticleModuleVelocityOverLifetime
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleVelocityOverLifetime
        fun C(Other: UObject): ParticleModuleVelocityOverLifetime
        fun C(Other: Any): ParticleModuleVelocityOverLifetime
    }
}

external open class ParticleSpriteEmitter : ParticleEmitter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ParticleSpriteEmitter
        fun Find(Outer: UObject, ResourceName: String): ParticleSpriteEmitter
        fun GetDefaultObject(): ParticleSpriteEmitter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleSpriteEmitter
        fun C(Other: UObject): ParticleSpriteEmitter
        fun C(Other: Any): ParticleSpriteEmitter
    }
}

external open class PathFollowingAgentInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PathFollowingAgentInterface
        fun Find(Outer: UObject, ResourceName: String): PathFollowingAgentInterface
        fun GetDefaultObject(): PathFollowingAgentInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PathFollowingAgentInterface
        fun C(Other: UObject): PathFollowingAgentInterface
        fun C(Other: Any): PathFollowingAgentInterface
    }
}

external open class PawnNoiseEmitterComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var bAIPerceptionSystemCompatibilityMode: Boolean
    open var LastRemoteNoisePosition: Vector
    open var NoiseLifetime: Number
    open var LastRemoteNoiseVolume: Number
    open var LastRemoteNoiseTime: Number
    open var LastLocalNoiseVolume: Number
    open var LastLocalNoiseTime: Number
    open fun MakeNoise(NoiseMaker: Actor, Loudness: Number, NoiseLocation: Vector)

    companion object {
        fun Load(ResourceName: String): PawnNoiseEmitterComponent
        fun Find(Outer: UObject, ResourceName: String): PawnNoiseEmitterComponent
        fun GetDefaultObject(): PawnNoiseEmitterComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PawnNoiseEmitterComponent
        fun C(Other: UObject): PawnNoiseEmitterComponent
        fun C(Other: Any): PawnNoiseEmitterComponent
    }
}

external open class PhysicalAnimationComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var StrengthMultiplyer: Number
    open var SkeletalMeshComponent: SkeletalMeshComponent
    open fun SetStrengthMultiplyer(InStrengthMultiplyer: Number)
    open fun SetSkeletalMeshComponent(InSkeletalMeshComponent: SkeletalMeshComponent)
    open fun GetBodyTargetTransform(BodyName: String): Transform
    open fun ApplyPhysicalAnimationSettingsBelow(BodyName: String, PhysicalAnimationData: PhysicalAnimationData, bIncludeSelf: Boolean)
    open fun ApplyPhysicalAnimationSettings(BodyName: String, PhysicalAnimationData: PhysicalAnimationData)
    open fun ApplyPhysicalAnimationProfileBelow(BodyName: String, ProfileName: String, bIncludeSelf: Boolean, bClearNotFound: Boolean)

    companion object {
        fun Load(ResourceName: String): PhysicalAnimationComponent
        fun Find(Outer: UObject, ResourceName: String): PhysicalAnimationComponent
        fun GetDefaultObject(): PhysicalAnimationComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PhysicalAnimationComponent
        fun C(Other: UObject): PhysicalAnimationComponent
        fun C(Other: Any): PhysicalAnimationComponent
    }
}

external open class RigidBodyBase(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    companion object {
        fun GetDefaultObject(): RigidBodyBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RigidBodyBase
        fun C(Other: UObject): RigidBodyBase
        fun C(Other: Any): RigidBodyBase
    }
}

external open class ConstrainComponentPropName {
    open var ComponentName: String
    open fun clone(): ConstrainComponentPropName

    companion object {
        fun C(Other: UObject): ConstrainComponentPropName
        fun C(Other: Any): ConstrainComponentPropName
    }
}

external object EConstraintFrame {
    var Frame1: String /* "Frame1" */
    var Frame2: String /* "Frame2" */
    var EConstraintFrame_MAX: String /* "EConstraintFrame_MAX" */
}

external interface `T$0` {
    var OutLinearForce: Vector
    var OutAngularForce: Vector
}

external open class PhysicsConstraintComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var ConstraintActor1: Actor
    open var ComponentName1: ConstrainComponentPropName
    open var ConstraintActor2: Actor
    open var ComponentName2: ConstrainComponentPropName
    open var ConstraintSetup: PhysicsConstraintTemplate
    open var OnConstraintBroken: UnrealEngineMulticastDelegate<(ConstraintIndex: Number) -> Unit>
    open var ConstraintInstance: ConstraintInstance
    open fun SetOrientationDriveTwistAndSwing(bEnableTwistDrive: Boolean, bEnableSwingDrive: Boolean)
    open fun SetOrientationDriveSLERP(bEnableSLERP: Boolean)
    open fun SetLinearZLimit(ConstraintType: String /* "LCM_Free" | "LCM_Limited" | "LCM_Locked" | "LCM_MAX" */, LimitSize: Number)
    open fun SetLinearYLimit(ConstraintType: String /* "LCM_Free" | "LCM_Limited" | "LCM_Locked" | "LCM_MAX" */, LimitSize: Number)
    open fun SetLinearXLimit(ConstraintType: String /* "LCM_Free" | "LCM_Limited" | "LCM_Locked" | "LCM_MAX" */, LimitSize: Number)
    open fun SetLinearVelocityTarget(InVelTarget: Vector)
    open fun SetLinearVelocityDrive(bEnableDriveX: Boolean, bEnableDriveY: Boolean, bEnableDriveZ: Boolean)
    open fun SetLinearPositionTarget(InPosTarget: Vector)
    open fun SetLinearPositionDrive(bEnableDriveX: Boolean, bEnableDriveY: Boolean, bEnableDriveZ: Boolean)
    open fun SetLinearDriveParams(PositionStrength: Number, VelocityStrength: Number, InForceLimit: Number)
    open fun SetLinearBreakable(bLinearBreakable: Boolean, LinearBreakThreshold: Number)
    open fun SetDisableCollision(bDisableCollision: Boolean)
    open fun SetConstraintReferencePosition(Frame: String /* "Frame1" | "Frame2" | "EConstraintFrame_MAX" */, RefPosition: Vector)
    open fun SetConstraintReferenceOrientation(Frame: String /* "Frame1" | "Frame2" | "EConstraintFrame_MAX" */, PriAxis: Vector, SecAxis: Vector)
    open fun SetConstraintReferenceFrame(Frame: String /* "Frame1" | "Frame2" | "EConstraintFrame_MAX" */, RefFrame: Transform)
    open fun SetConstrainedComponents(Component1: PrimitiveComponent, BoneName1: String, Component2: PrimitiveComponent, BoneName2: String)
    open fun SetAngularVelocityTarget(InVelTarget: Vector)
    open fun SetAngularVelocityDriveTwistAndSwing(bEnableTwistDrive: Boolean, bEnableSwingDrive: Boolean)
    open fun SetAngularVelocityDriveSLERP(bEnableSLERP: Boolean)
    open fun SetAngularVelocityDrive(bEnableSwingDrive: Boolean, bEnableTwistDrive: Boolean)
    open fun SetAngularTwistLimit(ConstraintType: String /* "ACM_Free" | "ACM_Limited" | "ACM_Locked" | "ACM_MAX" */, TwistLimitAngle: Number)
    open fun SetAngularSwing2Limit(MotionType: String /* "ACM_Free" | "ACM_Limited" | "ACM_Locked" | "ACM_MAX" */, Swing2LimitAngle: Number)
    open fun SetAngularSwing1Limit(MotionType: String /* "ACM_Free" | "ACM_Limited" | "ACM_Locked" | "ACM_MAX" */, Swing1LimitAngle: Number)
    open fun SetAngularOrientationTarget(InPosTarget: Rotator)
    open fun SetAngularOrientationDrive(bEnableSwingDrive: Boolean, bEnableTwistDrive: Boolean)
    open fun SetAngularDriveParams(PositionStrength: Number, VelocityStrength: Number, InForceLimit: Number)
    open fun SetAngularDriveMode(DriveMode: String /* "SLERP" | "TwistAndSwing" | "EAngularDriveMode_MAX" */)
    open fun SetAngularBreakable(bAngularBreakable: Boolean, AngularBreakThreshold: Number)
    open fun IsBroken(): Boolean
    open fun GetCurrentTwist(): Number
    open fun GetCurrentSwing2(): Number
    open fun GetCurrentSwing1(): Number
    open fun GetConstraintForce(OutLinearForce: Vector = definedExternally, OutAngularForce: Vector = definedExternally): `T$0`
    open fun BreakConstraint()

    companion object {
        fun Load(ResourceName: String): PhysicsConstraintComponent
        fun Find(Outer: UObject, ResourceName: String): PhysicsConstraintComponent
        fun GetDefaultObject(): PhysicsConstraintComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PhysicsConstraintComponent
        fun C(Other: UObject): PhysicsConstraintComponent
        fun C(Other: Any): PhysicsConstraintComponent
    }
}

external open class PhysicsConstraintActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : RigidBodyBase {
    open var ConstraintComp: PhysicsConstraintComponent
    open var ConstraintActor1: Actor
    open var ConstraintActor2: Actor
    open var bDisableCollision: Boolean

    companion object {
        fun GetDefaultObject(): PhysicsConstraintActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PhysicsConstraintActor
        fun C(Other: UObject): PhysicsConstraintActor
        fun C(Other: Any): PhysicsConstraintActor
    }
}

external interface `T$1` {
    var TargetLocation: Vector
    var TargetRotation: Rotator
}

external open class PhysicsHandleComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var GrabbedComponent: PrimitiveComponent
    open var bSoftAngularConstraint: Boolean
    open var bSoftLinearConstraint: Boolean
    open var bInterpolateTarget: Boolean
    open var LinearDamping: Number
    open var LinearStiffness: Number
    open var AngularDamping: Number
    open var AngularStiffness: Number
    open var InterpolationSpeed: Number
    open fun SetTargetRotation(NewRotation: Rotator)
    open fun SetTargetLocationAndRotation(NewLocation: Vector, NewRotation: Rotator)
    open fun SetTargetLocation(NewLocation: Vector)
    open fun SetLinearStiffness(NewLinearStiffness: Number)
    open fun SetLinearDamping(NewLinearDamping: Number)
    open fun SetInterpolationSpeed(NewInterpolationSpeed: Number)
    open fun SetAngularStiffness(NewAngularStiffness: Number)
    open fun SetAngularDamping(NewAngularDamping: Number)
    open fun ReleaseComponent()
    open fun GrabComponentAtLocationWithRotation(Component: PrimitiveComponent, InBoneName: String, Location: Vector, Rotation: Rotator)
    open fun GrabComponentAtLocation(Component: PrimitiveComponent, InBoneName: String, GrabLocation: Vector)
    open fun GrabComponent(Component: PrimitiveComponent, InBoneName: String, GrabLocation: Vector, bConstrainRotation: Boolean)
    open fun GetTargetLocationAndRotation(TargetLocation: Vector = definedExternally, TargetRotation: Rotator = definedExternally): `T$1`
    open fun GetGrabbedComponent(): PrimitiveComponent

    companion object {
        fun Load(ResourceName: String): PhysicsHandleComponent
        fun Find(Outer: UObject, ResourceName: String): PhysicsHandleComponent
        fun GetDefaultObject(): PhysicsHandleComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PhysicsHandleComponent
        fun C(Other: UObject): PhysicsHandleComponent
        fun C(Other: Any): PhysicsHandleComponent
    }
}

external open class RigidBodyErrorCorrection {
    open var PingExtrapolation: Number
    open var PingLimit: Number
    open var ErrorPerLinearDifference: Number
    open var ErrorPerAngularDifference: Number
    open var MaxRestoredStateError: Number
    open var MaxLinearHardSnapDistance: Number
    open var PositionLerp: Number
    open var AngleLerp: Number
    open var LinearVelocityCoefficient: Number
    open var AngularVelocityCoefficient: Number
    open var ErrorAccumulationSeconds: Number
    open var ErrorAccumulationDistanceSq: Number
    open var ErrorAccumulationSimilarity: Number
    open fun clone(): RigidBodyErrorCorrection

    companion object {
        fun C(Other: UObject): RigidBodyErrorCorrection
        fun C(Other: Any): RigidBodyErrorCorrection
    }
}

external object ESettingsLockedAxis {
    var None: String /* "None" */
    var X: String /* "X" */
    var Y: String /* "Y" */
    var Z: String /* "Z" */
    var Invalid: String /* "Invalid" */
    var ESettingsLockedAxis_MAX: String /* "ESettingsLockedAxis_MAX" */
}

external object ESettingsDOF {
    var Full3D: String /* "Full3D" */
    var YZPlane: String /* "YZPlane" */
    var XZPlane: String /* "XZPlane" */
    var XYPlane: String /* "XYPlane" */
    var ESettingsDOF_MAX: String /* "ESettingsDOF_MAX" */
}

external open class PhysicalSurfaceName {
    open var Type: String /* "SurfaceType_Default" | "SurfaceType1" | "SurfaceType2" | "SurfaceType3" | "SurfaceType4" | "SurfaceType5" | "SurfaceType6" | "SurfaceType7" | "SurfaceType8" | "SurfaceType9" | "SurfaceType10" | "SurfaceType11" | "SurfaceType12" | "SurfaceType13" | "SurfaceType14" | "SurfaceType15" | "SurfaceType16" | "SurfaceType17" | "SurfaceType18" | "SurfaceType19" | "SurfaceType20" | "SurfaceType21" | "SurfaceType22" | "SurfaceType23" | "SurfaceType24" | "SurfaceType25" | "SurfaceType26" | "SurfaceType27" | "SurfaceType28" | "SurfaceType29" | "SurfaceType30" | "SurfaceType31" | "SurfaceType32" | "SurfaceType33" | "SurfaceType34" | "SurfaceType35" | "SurfaceType36" | "SurfaceType37" | "SurfaceType38" | "SurfaceType39" | "SurfaceType40" | "SurfaceType41" | "SurfaceType42" | "SurfaceType43" | "SurfaceType44" | "SurfaceType45" | "SurfaceType46" | "SurfaceType47" | "SurfaceType48" | "SurfaceType49" | "SurfaceType50" | "SurfaceType51" | "SurfaceType52" | "SurfaceType53" | "SurfaceType54" | "SurfaceType55" | "SurfaceType56" | "SurfaceType57" | "SurfaceType58" | "SurfaceType59" | "SurfaceType60" | "SurfaceType61" | "SurfaceType62" | "SurfaceType_Max" | "EPhysicalSurface_MAX" */
    open var Name: String
    open fun clone(): PhysicalSurfaceName

    companion object {
        fun C(Other: UObject): PhysicalSurfaceName
        fun C(Other: Any): PhysicalSurfaceName
    }
}

external object EChaosThreadingMode {
    var DedicatedThread: String /* "DedicatedThread" */
    var TaskGraph: String /* "TaskGraph" */
    var SingleThread: String /* "SingleThread" */
    var Num: String /* "Num" */
    var Invalid: String /* "Invalid" */
    var EChaosThreadingMode_MAX: String /* "EChaosThreadingMode_MAX" */
}

external object EChaosSolverTickMode {
    var Fixed: String /* "Fixed" */
    var Variable: String /* "Variable" */
    var VariableCapped: String /* "VariableCapped" */
    var VariableCappedWithTarget: String /* "VariableCappedWithTarget" */
    var EChaosSolverTickMode_MAX: String /* "EChaosSolverTickMode_MAX" */
}

external object EChaosBufferMode {
    var Double: String /* "Double" */
    var Triple: String /* "Triple" */
    var Num: String /* "Num" */
    var Invalid: String /* "Invalid" */
    var EChaosBufferMode_MAX: String /* "EChaosBufferMode_MAX" */
}

external open class ChaosPhysicsSettings {
    open var DefaultThreadingModel: String /* "DedicatedThread" | "TaskGraph" | "SingleThread" | "Num" | "Invalid" | "EChaosThreadingMode_MAX" */
    open var DedicatedThreadTickMode: String /* "Fixed" | "Variable" | "VariableCapped" | "VariableCappedWithTarget" | "EChaosSolverTickMode_MAX" */
    open var DedicatedThreadBufferMode: String /* "Double" | "Triple" | "Num" | "Invalid" | "EChaosBufferMode_MAX" */
    open fun clone(): ChaosPhysicsSettings

    companion object {
        fun C(Other: UObject): ChaosPhysicsSettings
        fun C(Other: Any): ChaosPhysicsSettings
    }
}

external open class PhysicsSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var DefaultGravityZ: Number
    open var DefaultTerminalVelocity: Number
    open var DefaultFluidFriction: Number
    open var SimulateScratchMemorySize: Number
    open var RagdollAggregateThreshold: Number
    open var TriangleMeshTriangleMinAreaThreshold: Number
    open var bEnableShapeSharing: Boolean
    open var bEnablePCM: Boolean
    open var bEnableStabilization: Boolean
    open var bWarnMissingLocks: Boolean
    open var bEnable2DPhysics: Boolean
    open var PhysicErrorCorrection: RigidBodyErrorCorrection
    open var LockedAxis: String /* "None" | "X" | "Y" | "Z" | "Invalid" | "ESettingsLockedAxis_MAX" */
    open var DefaultDegreesOfFreedom: String /* "Full3D" | "YZPlane" | "XZPlane" | "XYPlane" | "ESettingsDOF_MAX" */
    open var BounceThresholdVelocity: Number
    open var FrictionCombineMode: String /* "Average" | "Min" | "Multiply" | "Max" | "EFrictionCombineMode_MAX" */
    open var RestitutionCombineMode: String /* "Average" | "Min" | "Multiply" | "Max" | "EFrictionCombineMode_MAX" */
    open var MaxAngularVelocity: Number
    open var MaxDepenetrationVelocity: Number
    open var ContactOffsetMultiplier: Number
    open var MinContactOffset: Number
    open var MaxContactOffset: Number
    open var bSimulateSkeletalMeshOnDedicatedServer: Boolean
    open var DefaultShapeComplexity: String /* "CTF_UseDefault" | "CTF_UseSimpleAndComplex" | "CTF_UseSimpleAsComplex" | "CTF_UseComplexAsSimple" | "CTF_MAX" */
    open var bDefaultHasComplexCollision: Boolean
    open var bSuppressFaceRemapTable: Boolean
    open var bSupportUVFromHitResults: Boolean
    open var bDisableActiveActors: Boolean
    open var bDisableKinematicStaticPairs: Boolean
    open var bDisableKinematicKinematicPairs: Boolean
    open var bDisableCCD: Boolean
    open var bEnableEnhancedDeterminism: Boolean
    open var AnimPhysicsMinDeltaTime: Number
    open var bSimulateAnimPhysicsAfterReset: Boolean
    open var MaxPhysicsDeltaTime: Number
    open var bSubstepping: Boolean
    open var bSubsteppingAsync: Boolean
    open var MaxSubstepDeltaTime: Number
    open var MaxSubsteps: Number
    open var SyncSceneSmoothingFactor: Number
    open var InitialAverageFrameRate: Number
    open var PhysXTreeRebuildRate: Number
    open var PhysicalSurfaces: Array<PhysicalSurfaceName>
    open var DefaultBroadphaseSettings: BroadphaseSettings
    open var ChaosSettings: ChaosPhysicsSettings

    companion object {
        fun Load(ResourceName: String): PhysicsSettings
        fun Find(Outer: UObject, ResourceName: String): PhysicsSettings
        fun GetDefaultObject(): PhysicsSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PhysicsSettings
        fun C(Other: UObject): PhysicsSettings
        fun C(Other: Any): PhysicsSettings
    }
}

external open class PhysicsSpringComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var SpringStiffness: Number
    open var SpringDamping: Number
    open var SpringLengthAtRest: Number
    open var SpringRadius: Number
    open var SpringChannel: String /* "ECC_WorldStatic" | "ECC_WorldDynamic" | "ECC_Pawn" | "ECC_Visibility" | "ECC_Camera" | "ECC_PhysicsBody" | "ECC_Vehicle" | "ECC_Destructible" | "ECC_EngineTraceChannel1" | "ECC_EngineTraceChannel2" | "ECC_EngineTraceChannel3" | "ECC_EngineTraceChannel4" | "ECC_EngineTraceChannel5" | "ECC_EngineTraceChannel6" | "ECC_GameTraceChannel1" | "ECC_GameTraceChannel2" | "ECC_GameTraceChannel3" | "ECC_GameTraceChannel4" | "ECC_GameTraceChannel5" | "ECC_GameTraceChannel6" | "ECC_GameTraceChannel7" | "ECC_GameTraceChannel8" | "ECC_GameTraceChannel9" | "ECC_GameTraceChannel10" | "ECC_GameTraceChannel11" | "ECC_GameTraceChannel12" | "ECC_GameTraceChannel13" | "ECC_GameTraceChannel14" | "ECC_GameTraceChannel15" | "ECC_GameTraceChannel16" | "ECC_GameTraceChannel17" | "ECC_GameTraceChannel18" | "ECC_OverlapAll_Deprecated" | "ECC_MAX" */
    open var bIgnoreSelf: Boolean
    open var SpringCompression: Number
    open fun GetSpringRestingPoint(): Vector
    open fun GetSpringDirection(): Vector
    open fun GetSpringCurrentEndPoint(): Vector
    open fun GetNormalizedCompressionScalar(): Number

    companion object {
        fun Load(ResourceName: String): PhysicsSpringComponent
        fun Find(Outer: UObject, ResourceName: String): PhysicsSpringComponent
        fun GetDefaultObject(): PhysicsSpringComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PhysicsSpringComponent
        fun C(Other: UObject): PhysicsSpringComponent
        fun C(Other: Any): PhysicsSpringComponent
    }
}

external open class PhysicsThrusterComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var ThrustStrength: Number

    companion object {
        fun Load(ResourceName: String): PhysicsThrusterComponent
        fun Find(Outer: UObject, ResourceName: String): PhysicsThrusterComponent
        fun GetDefaultObject(): PhysicsThrusterComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PhysicsThrusterComponent
        fun C(Other: UObject): PhysicsThrusterComponent
        fun C(Other: Any): PhysicsThrusterComponent
    }
}

external open class PhysicsThruster(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : RigidBodyBase {
    open var ThrusterComponent: PhysicsThrusterComponent
    open var ArrowComponent: ArrowComponent

    companion object {
        fun GetDefaultObject(): PhysicsThruster
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PhysicsThruster
        fun C(Other: UObject): PhysicsThruster
        fun C(Other: Any): PhysicsThruster
    }
}

external open class SceneCapture(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var MeshComp: StaticMeshComponent
    open var SceneComponent: SceneComponent

    companion object {
        fun GetDefaultObject(): SceneCapture
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SceneCapture
        fun C(Other: UObject): SceneCapture
        fun C(Other: Any): SceneCapture
    }
}

external object ESceneCapturePrimitiveRenderMode {
    var PRM_LegacySceneCapture: String /* "PRM_LegacySceneCapture" */
    var PRM_RenderScenePrimitives: String /* "PRM_RenderScenePrimitives" */
    var PRM_UseShowOnlyList: String /* "PRM_UseShowOnlyList" */
    var PRM_MAX: String /* "PRM_MAX" */
}

external object ESceneCaptureSource {
    var SCS_SceneColorHDR: String /* "SCS_SceneColorHDR" */
    var SCS_SceneColorHDRNoAlpha: String /* "SCS_SceneColorHDRNoAlpha" */
    var SCS_FinalColorLDR: String /* "SCS_FinalColorLDR" */
    var SCS_SceneColorSceneDepth: String /* "SCS_SceneColorSceneDepth" */
    var SCS_SceneDepth: String /* "SCS_SceneDepth" */
    var SCS_DeviceDepth: String /* "SCS_DeviceDepth" */
    var SCS_Normal: String /* "SCS_Normal" */
    var SCS_BaseColor: String /* "SCS_BaseColor" */
    var SCS_FinalColorHDR: String /* "SCS_FinalColorHDR" */
    var SCS_MAX: String /* "SCS_MAX" */
}

external open class EngineShowFlagsSetting {
    open var ShowFlagName: String
    open var Enabled: Boolean
    open fun clone(): EngineShowFlagsSetting

    companion object {
        fun C(Other: UObject): EngineShowFlagsSetting
        fun C(Other: Any): EngineShowFlagsSetting
    }
}

external open class SceneCaptureComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var PrimitiveRenderMode: String /* "PRM_LegacySceneCapture" | "PRM_RenderScenePrimitives" | "PRM_UseShowOnlyList" | "PRM_MAX" */
    open var CaptureSource: String /* "SCS_SceneColorHDR" | "SCS_SceneColorHDRNoAlpha" | "SCS_FinalColorLDR" | "SCS_SceneColorSceneDepth" | "SCS_SceneDepth" | "SCS_DeviceDepth" | "SCS_Normal" | "SCS_BaseColor" | "SCS_FinalColorHDR" | "SCS_MAX" */
    open var HiddenComponents: Array<Any>
    open var HiddenActors: Array<Actor>
    open var ShowOnlyComponents: Array<Any>
    open var ShowOnlyActors: Array<Actor>
    open var bCaptureEveryFrame: Boolean
    open var bCaptureOnMovement: Boolean
    open var bAlwaysPersistRenderingState: Boolean
    open var LODDistanceFactor: Number
    open var MaxViewDistanceOverride: Number
    open var CaptureSortPriority: Number
    open var ShowFlagSettings: Array<EngineShowFlagsSetting>
    open var ProfilingEventName: String
    open var CaptureMesh: StaticMesh
    open fun ShowOnlyComponent(InComponent: PrimitiveComponent)
    open fun ShowOnlyActorComponents(InActor: Actor)
    open fun SetCaptureSortPriority(NewCaptureSortPriority: Number)
    open fun RemoveShowOnlyComponent(InComponent: PrimitiveComponent)
    open fun RemoveShowOnlyActorComponents(InActor: Actor)
    open fun HideComponent(InComponent: PrimitiveComponent)
    open fun HideActorComponents(InActor: Actor)
    open fun ClearShowOnlyComponents()
    open fun ClearHiddenComponents()

    companion object {
        fun Load(ResourceName: String): SceneCaptureComponent
        fun Find(Outer: UObject, ResourceName: String): SceneCaptureComponent
        fun GetDefaultObject(): SceneCaptureComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SceneCaptureComponent
        fun C(Other: UObject): SceneCaptureComponent
        fun C(Other: Any): SceneCaptureComponent
    }
}

external open class PlanarReflectionComponent : SceneCaptureComponent {
    constructor()
    constructor(Outer: UObject)
    open var PreviewBox: BoxComponent
    open var NormalDistortionStrength: Number
    open var PrefilterRoughness: Number
    open var PrefilterRoughnessDistance: Number
    open var ScreenPercentage: Number
    open var ExtraFOV: Number
    open var DistanceFromPlaneFadeStart: Number
    open var DistanceFromPlaneFadeEnd: Number
    open var DistanceFromPlaneFadeoutStart: Number
    open var DistanceFromPlaneFadeoutEnd: Number
    open var AngleFromPlaneFadeStart: Number
    open var AngleFromPlaneFadeEnd: Number
    open var bShowPreviewPlane: Boolean
    open var bRenderSceneTwoSided: Boolean
    open var CaptureMaterial: Material

    companion object {
        fun Load(ResourceName: String): PlanarReflectionComponent
        fun Find(Outer: UObject, ResourceName: String): PlanarReflectionComponent
        fun GetDefaultObject(): PlanarReflectionComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PlanarReflectionComponent
        fun C(Other: UObject): PlanarReflectionComponent
        fun C(Other: Any): PlanarReflectionComponent
    }
}

external open class PlanarReflection(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : SceneCapture {
    open var PlanarReflectionComponent: PlanarReflectionComponent
    open var SpriteComponent: BillboardComponent
    open var bShowPreviewPlane: Boolean
    open fun OnInterpToggle(bEnable: Boolean)

    companion object {
        fun GetDefaultObject(): PlanarReflection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PlanarReflection
        fun C(Other: UObject): PlanarReflection
        fun C(Other: Any): PlanarReflection
    }
}

external open class PlaneReflectionCapture(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : ReflectionCapture {
    companion object {
        fun GetDefaultObject(): PlaneReflectionCapture
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PlaneReflectionCapture
        fun C(Other: UObject): PlaneReflectionCapture
        fun C(Other: Any): PlaneReflectionCapture
    }
}

external open class PlaneReflectionCaptureComponent : ReflectionCaptureComponent {
    constructor()
    constructor(Outer: UObject)
    open var InfluenceRadiusScale: Number
    open var PreviewInfluenceRadius: DrawSphereComponent
    open var PreviewCaptureBox: BoxComponent

    companion object {
        fun Load(ResourceName: String): PlaneReflectionCaptureComponent
        fun Find(Outer: UObject, ResourceName: String): PlaneReflectionCaptureComponent
        fun GetDefaultObject(): PlaneReflectionCaptureComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PlaneReflectionCaptureComponent
        fun C(Other: UObject): PlaneReflectionCaptureComponent
        fun C(Other: Any): PlaneReflectionCaptureComponent
    }
}

external open class PlatformEventsComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var PlatformChangedToLaptopModeDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var PlatformChangedToTabletModeDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open fun SupportsConvertibleLaptops(): Boolean
    open fun IsInTabletMode(): Boolean
    open fun IsInLaptopMode(): Boolean

    companion object {
        fun Load(ResourceName: String): PlatformEventsComponent
        fun Find(Outer: UObject, ResourceName: String): PlatformEventsComponent
        fun GetDefaultObject(): PlatformEventsComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PlatformEventsComponent
        fun C(Other: UObject): PlatformEventsComponent
        fun C(Other: Any): PlatformEventsComponent
    }
}

external interface `T$2` {
    var Header: String
    var Value: String
}

external open class PlatformInterfaceWebResponse : UObject {
    constructor()
    constructor(Outer: UObject)
    open var OriginalURL: String
    open var ResponseCode: Number
    open var Tag: Number
    open var StringResponse: String
    open var BinaryResponse: Array<Number>
    open fun GetNumHeaders(): Number
    open fun GetHeaderValue(HeaderName: String): String
    open fun GetHeader(HeaderIndex: Number, Header: String = definedExternally, Value: String = definedExternally): `T$2`

    companion object {
        fun Load(ResourceName: String): PlatformInterfaceWebResponse
        fun Find(Outer: UObject, ResourceName: String): PlatformInterfaceWebResponse
        fun GetDefaultObject(): PlatformInterfaceWebResponse
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PlatformInterfaceWebResponse
        fun C(Other: UObject): PlatformInterfaceWebResponse
        fun C(Other: Any): PlatformInterfaceWebResponse
    }
}

external open class PlayerStart(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : NavigationObjectBase {
    open var PlayerStartTag: String
    open var ArrowComponent: ArrowComponent

    companion object {
        fun GetDefaultObject(): PlayerStart
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PlayerStart
        fun C(Other: UObject): PlayerStart
        fun C(Other: Any): PlayerStart
    }
}

external open class PlayerStartPIE(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : PlayerStart {
    companion object {
        fun GetDefaultObject(): PlayerStartPIE
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PlayerStartPIE
        fun C(Other: UObject): PlayerStartPIE
        fun C(Other: Any): PlayerStartPIE
    }
}

external open class PluginCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PluginCommandlet
        fun Find(Outer: UObject, ResourceName: String): PluginCommandlet
        fun GetDefaultObject(): PluginCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PluginCommandlet
        fun C(Other: UObject): PluginCommandlet
        fun C(Other: Any): PluginCommandlet
    }
}

external open class PointLight(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Light {
    open var PointLightComponent: PointLightComponent
    open fun SetRadius(NewRadius: Number)
    open fun SetLightFalloffExponent(NewLightFalloffExponent: Number)

    companion object {
        fun GetDefaultObject(): PointLight
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PointLight
        fun C(Other: UObject): PointLight
        fun C(Other: Any): PointLight
    }
}

external open class Polys : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): Polys
        fun Find(Outer: UObject, ResourceName: String): Polys
        fun GetDefaultObject(): Polys
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Polys
        fun C(Other: UObject): Polys
        fun C(Other: Any): Polys
    }
}

external object EBoneSpaces {
    var WorldSpace: String /* "WorldSpace" */
    var ComponentSpace: String /* "ComponentSpace" */
    var EBoneSpaces_MAX: String /* "EBoneSpaces_MAX" */
}

external open class PoseableMeshComponent : SkinnedMeshComponent {
    constructor()
    constructor(Outer: UObject)
    open fun SetBoneTransformByName(BoneName: String, InTransform: Transform, BoneSpace: String /* "WorldSpace" | "ComponentSpace" | "EBoneSpaces_MAX" */)
    open fun SetBoneScaleByName(BoneName: String, InScale3D: Vector, BoneSpace: String /* "WorldSpace" | "ComponentSpace" | "EBoneSpaces_MAX" */)
    open fun SetBoneRotationByName(BoneName: String, InRotation: Rotator, BoneSpace: String /* "WorldSpace" | "ComponentSpace" | "EBoneSpaces_MAX" */)
    open fun SetBoneLocationByName(BoneName: String, InLocation: Vector, BoneSpace: String /* "WorldSpace" | "ComponentSpace" | "EBoneSpaces_MAX" */)
    open fun ResetBoneTransformByName(BoneName: String)
    open fun GetBoneTransformByName(BoneName: String, BoneSpace: String /* "WorldSpace" | "ComponentSpace" | "EBoneSpaces_MAX" */): Transform
    open fun GetBoneScaleByName(BoneName: String, BoneSpace: String /* "WorldSpace" | "ComponentSpace" | "EBoneSpaces_MAX" */): Vector
    open fun GetBoneRotationByName(BoneName: String, BoneSpace: String /* "WorldSpace" | "ComponentSpace" | "EBoneSpaces_MAX" */): Rotator
    open fun GetBoneLocationByName(BoneName: String, BoneSpace: String /* "WorldSpace" | "ComponentSpace" | "EBoneSpaces_MAX" */): Vector
    open fun CopyPoseFromSkeletalComponent(InComponentToCopy: SkeletalMeshComponent)

    companion object {
        fun Load(ResourceName: String): PoseableMeshComponent
        fun Find(Outer: UObject, ResourceName: String): PoseableMeshComponent
        fun GetDefaultObject(): PoseableMeshComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PoseableMeshComponent
        fun C(Other: UObject): PoseableMeshComponent
        fun C(Other: Any): PoseableMeshComponent
    }
}

external open class PostProcessVolume(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Volume {
    open var Settings: PostProcessSettings
    open var Priority: Number
    open var BlendRadius: Number
    open var BlendWeight: Number
    open var bEnabled: Boolean
    open var bUnbound: Boolean

    companion object {
        fun GetDefaultObject(): PostProcessVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PostProcessVolume
        fun C(Other: UObject): PostProcessVolume
        fun C(Other: Any): PostProcessVolume
    }
}

external open class PrecomputedVisibilityOverrideVolume(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Volume {
    open var OverrideVisibleActors: Array<Actor>
    open var OverrideInvisibleActors: Array<Actor>
    open var OverrideInvisibleLevels: Array<String>

    companion object {
        fun GetDefaultObject(): PrecomputedVisibilityOverrideVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PrecomputedVisibilityOverrideVolume
        fun C(Other: UObject): PrecomputedVisibilityOverrideVolume
        fun C(Other: Any): PrecomputedVisibilityOverrideVolume
    }
}

external open class PrecomputedVisibilityVolume(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Volume {
    companion object {
        fun GetDefaultObject(): PrecomputedVisibilityVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PrecomputedVisibilityVolume
        fun C(Other: UObject): PrecomputedVisibilityVolume
        fun C(Other: Any): PrecomputedVisibilityVolume
    }
}

external open class PreviewCollectionInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PreviewCollectionInterface
        fun Find(Outer: UObject, ResourceName: String): PreviewCollectionInterface
        fun GetDefaultObject(): PreviewCollectionInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PreviewCollectionInterface
        fun C(Other: UObject): PreviewCollectionInterface
        fun C(Other: Any): PreviewCollectionInterface
    }
}

external open class PreviewMeshCollectionEntry {
    open var SkeletalMesh: SkeletalMesh
    open fun clone(): PreviewMeshCollectionEntry

    companion object {
        fun C(Other: UObject): PreviewMeshCollectionEntry
        fun C(Other: Any): PreviewMeshCollectionEntry
    }
}

external open class PreviewMeshCollection : DataAsset {
    constructor()
    constructor(Outer: UObject)
    open var Skeleton: Skeleton
    open var SkeletalMeshes: Array<PreviewMeshCollectionEntry>

    companion object {
        fun Load(ResourceName: String): PreviewMeshCollection
        fun Find(Outer: UObject, ResourceName: String): PreviewMeshCollection
        fun GetDefaultObject(): PreviewMeshCollection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PreviewMeshCollection
        fun C(Other: UObject): PreviewMeshCollection
        fun C(Other: Any): PreviewMeshCollection
    }
}

external open class CollectionReference {
    open var CollectionName: String
    open fun clone(): CollectionReference

    companion object {
        fun C(Other: UObject): CollectionReference
        fun C(Other: Any): CollectionReference
    }
}

external open class PrimaryAssetLabel : PrimaryDataAsset {
    constructor()
    constructor(Outer: UObject)
    open var Rules: PrimaryAssetRules
    open var bLabelAssetsInMyDirectory: Boolean
    open var bIsRuntimeLabel: Boolean
    open var ExplicitAssets: Array<UObject>
    open var ExplicitBlueprints: Array<Class>
    open var AssetCollection: CollectionReference

    companion object {
        fun Load(ResourceName: String): PrimaryAssetLabel
        fun Find(Outer: UObject, ResourceName: String): PrimaryAssetLabel
        fun GetDefaultObject(): PrimaryAssetLabel
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PrimaryAssetLabel
        fun C(Other: UObject): PrimaryAssetLabel
        fun C(Other: Any): PrimaryAssetLabel
    }
}

external open class ProjectileMovementComponent : MovementComponent {
    constructor()
    constructor(Outer: UObject)
    open var InitialSpeed: Number
    open var MaxSpeed: Number
    open var bRotationFollowsVelocity: Boolean
    open var bRotationRemainsVertical: Boolean
    open var bShouldBounce: Boolean
    open var bInitialVelocityInLocalSpace: Boolean
    open var bForceSubStepping: Boolean
    open var bSimulationEnabled: Boolean
    open var bSweepCollision: Boolean
    open var bIsHomingProjectile: Boolean
    open var bBounceAngleAffectsFriction: Boolean
    open var bIsSliding: Boolean
    open var bInterpMovement: Boolean
    open var bInterpRotation: Boolean
    open var PreviousHitTime: Number
    open var PreviousHitNormal: Vector
    open var ProjectileGravityScale: Number
    open var Buoyancy: Number
    open var Bounciness: Number
    open var Friction: Number
    open var BounceVelocityStopSimulatingThreshold: Number
    open var MinFrictionFraction: Number
    open var OnProjectileBounce: UnrealEngineMulticastDelegate<(ImpactResult: HitResult, ImpactVelocity: Vector) -> Unit>
    open var OnProjectileStop: UnrealEngineMulticastDelegate<(ImpactResult: HitResult) -> Unit>
    open var HomingAccelerationMagnitude: Number
    open var HomingTargetComponent: Any
    open var MaxSimulationTimeStep: Number
    open var MaxSimulationIterations: Number
    open var BounceAdditionalIterations: Number
    open var InterpLocationTime: Number
    open var InterpRotationTime: Number
    open var InterpLocationMaxLagDistance: Number
    open var InterpLocationSnapToTargetDistance: Number
    open fun StopSimulating(HitResult: HitResult)
    open fun SetVelocityInLocalSpace(NewVelocity: Vector)
    open fun SetInterpolatedComponent(Component: SceneComponent)
    open fun ResetInterpolation()
    open fun MoveInterpolationTarget(NewLocation: Vector, NewRotation: Rotator)
    open fun LimitVelocity(NewVelocity: Vector): Vector
    open fun IsVelocityUnderSimulationThreshold(): Boolean
    open fun IsInterpolationComplete(): Boolean

    companion object {
        fun Load(ResourceName: String): ProjectileMovementComponent
        fun Find(Outer: UObject, ResourceName: String): ProjectileMovementComponent
        fun GetDefaultObject(): ProjectileMovementComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ProjectileMovementComponent
        fun C(Other: UObject): ProjectileMovementComponent
        fun C(Other: Any): ProjectileMovementComponent
    }
}

external open class ProxyLODMeshSimplificationSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var ProxyLODMeshReductionModuleName: String

    companion object {
        fun Load(ResourceName: String): ProxyLODMeshSimplificationSettings
        fun Find(Outer: UObject, ResourceName: String): ProxyLODMeshSimplificationSettings
        fun GetDefaultObject(): ProxyLODMeshSimplificationSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ProxyLODMeshSimplificationSettings
        fun C(Other: UObject): ProxyLODMeshSimplificationSettings
        fun C(Other: Any): ProxyLODMeshSimplificationSettings
    }
}

external open class RadialForceComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var Radius: Number
    open var Falloff: String /* "RIF_Constant" | "RIF_Linear" | "RIF_MAX" */
    open var ImpulseStrength: Number
    open var bImpulseVelChange: Boolean
    open var bIgnoreOwningActor: Boolean
    open var ForceStrength: Number
    open var DestructibleDamage: Number
    open var ObjectTypesToAffect: Array<String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */>
    open fun RemoveObjectTypeToAffect(ObjectType: String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */)
    open fun FireImpulse()
    open fun AddObjectTypeToAffect(ObjectType: String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */)

    companion object {
        fun Load(ResourceName: String): RadialForceComponent
        fun Find(Outer: UObject, ResourceName: String): RadialForceComponent
        fun GetDefaultObject(): RadialForceComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RadialForceComponent
        fun C(Other: UObject): RadialForceComponent
        fun C(Other: Any): RadialForceComponent
    }
}

external open class RadialForceActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : RigidBodyBase {
    open var ForceComponent: RadialForceComponent
    open var SpriteComponent: BillboardComponent
    open fun ToggleForce()
    open fun FireImpulse()
    open fun EnableForce()
    open fun DisableForce()

    companion object {
        fun GetDefaultObject(): RadialForceActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RadialForceActor
        fun C(Other: UObject): RadialForceActor
        fun C(Other: Any): RadialForceActor
    }
}

external open class RectLightComponent : LocalLightComponent {
    constructor()
    constructor(Outer: UObject)
    open var SourceWidth: Number
    open var SourceHeight: Number
    open var BarnDoorAngle: Number
    open var BarnDoorLength: Number
    open var SourceTexture: Texture
    open fun SetSourceWidth(bNewValue: Number)
    open fun SetSourceTexture(bNewValue: Texture)
    open fun SetSourceHeight(NewValue: Number)
    open fun SetBarnDoorLength(NewValue: Number)
    open fun SetBarnDoorAngle(NewValue: Number)

    companion object {
        fun Load(ResourceName: String): RectLightComponent
        fun Find(Outer: UObject, ResourceName: String): RectLightComponent
        fun GetDefaultObject(): RectLightComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RectLightComponent
        fun C(Other: UObject): RectLightComponent
        fun C(Other: Any): RectLightComponent
    }
}

external open class RectLight(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Light {
    open var RectLightComponent: RectLightComponent

    companion object {
        fun GetDefaultObject(): RectLight
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RectLight
        fun C(Other: UObject): RectLight
        fun C(Other: Any): RectLight
    }
}

external object EMobileMSAASampleCount {
    var One: String /* "One" */
    var Two: String /* "Two" */
    var Four: String /* "Four" */
    var Eight: String /* "Eight" */
    var EMobileMSAASampleCount_MAX: String /* "EMobileMSAASampleCount_MAX" */
}

external object ETranslucentSortPolicy {
    var SortByDistance: String /* "SortByDistance" */
    var SortByProjectedZ: String /* "SortByProjectedZ" */
    var SortAlongAxis: String /* "SortAlongAxis" */
    var ETranslucentSortPolicy_MAX: String /* "ETranslucentSortPolicy_MAX" */
}

external object ECustomDepthStencil {
    var Disabled: String /* "Disabled" */
    var Enabled: String /* "Enabled" */
    var EnabledOnDemand: String /* "EnabledOnDemand" */
    var EnabledWithStencil: String /* "EnabledWithStencil" */
    var ECustomDepthStencil_MAX: String /* "ECustomDepthStencil_MAX" */
}

external object EAlphaChannelMode {
    var Disabled: String /* "Disabled" */
    var LinearColorSpaceOnly: String /* "LinearColorSpaceOnly" */
    var AllowThroughTonemapper: String /* "AllowThroughTonemapper" */
    var EAlphaChannelMode_MAX: String /* "EAlphaChannelMode_MAX" */
}

external object EAutoExposureMethodUI {
    var AEM_Histogram: String /* "AEM_Histogram" */
    var AEM_Basic: String /* "AEM_Basic" */
    var AEM_Manual: String /* "AEM_Manual" */
    var AEM_MAX: String /* "AEM_MAX" */
}

external object EAntiAliasingMethod {
    var AAM_None: String /* "AAM_None" */
    var AAM_FXAA: String /* "AAM_FXAA" */
    var AAM_TemporalAA: String /* "AAM_TemporalAA" */
    var AAM_MSAA: String /* "AAM_MSAA" */
    var AAM_MAX: String /* "AAM_MAX" */
}

external object EDefaultBackBufferPixelFormat {
    var DBBPF_B8G8R8A8: String /* "DBBPF_B8G8R8A8" */
    var DBBPF_A16B16G16R16_DEPRECATED: String /* "DBBPF_A16B16G16R16_DEPRECATED" */
    var DBBPF_FloatRGB_DEPRECATED: String /* "DBBPF_FloatRGB_DEPRECATED" */
    var DBBPF_FloatRGBA: String /* "DBBPF_FloatRGBA" */
    var DBBPF_A2B10G10R10: String /* "DBBPF_A2B10G10R10" */
    var DBBPF_MAX: String /* "DBBPF_MAX" */
}

external object EEarlyZPass {
    var None: String /* "None" */
    var OpaqueOnly: String /* "OpaqueOnly" */
    var OpaqueAndMasked: String /* "OpaqueAndMasked" */
    var Auto: String /* "Auto" */
    var EEarlyZPass_MAX: String /* "EEarlyZPass_MAX" */
}

external object EClearSceneOptions {
    var NoClear: String /* "NoClear" */
    var HardwareClear: String /* "HardwareClear" */
    var QuadAtMaxZ: String /* "QuadAtMaxZ" */
    var EClearSceneOptions_MAX: String /* "EClearSceneOptions_MAX" */
}

external object EGBufferFormat {
    var Force8BitsPerChannel: String /* "Force8BitsPerChannel" */
    var Default: String /* "Default" */
    var HighPrecisionNormals: String /* "HighPrecisionNormals" */
    var Force16BitsPerChannel: String /* "Force16BitsPerChannel" */
    var EGBufferFormat_MAX: String /* "EGBufferFormat_MAX" */
}

external open class RendererSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var bMobileHDR: Boolean
    open var bMobileDisableVertexFog: Boolean
    open var MaxMobileCascades: Number
    open var MobileMSAASampleCount: String /* "One" | "Two" | "Four" | "Eight" | "EMobileMSAASampleCount_MAX" */
    open var bMobileUseLegacyShadingModel: Boolean
    open var bMobileUseHWsRGBEncoding: Boolean
    open var bMobileAllowDitheredLODTransition: Boolean
    open var bMobileAllowSoftwareOcclusionCulling: Boolean
    open var bDiscardUnusedQualityLevels: Boolean
    open var bOcclusionCulling: Boolean
    open var MinScreenRadiusForLights: Number
    open var MinScreenRadiusForEarlyZPass: Number
    open var MinScreenRadiusForCSMdepth: Number
    open var bPrecomputedVisibilityWarning: Boolean
    open var bTextureStreaming: Boolean
    open var bUseDXT5NormalMaps: Boolean
    open var bVirtualTextures: Boolean
    open var bVirtualTexturedLightmaps: Boolean
    open var VirtualTextureTileSize: Any
    open var VirtualTextureTileBorderSize: Any
    open var VirtualTextureFeedbackFactor: Any
    open var bVirtualTextureEnableCompressZlib: Boolean
    open var bVirtualTextureEnableCompressCrunch: Boolean
    open var bClearCoatEnableSecondNormal: Boolean
    open var ReflectionCaptureResolution: Number
    open var ReflectionEnvironmentLightmapMixBasedOnRoughness: Boolean
    open var bForwardShading: Boolean
    open var bVertexFoggingForOpaque: Boolean
    open var bAllowStaticLighting: Boolean
    open var bUseNormalMapsForStaticLighting: Boolean
    open var bGenerateMeshDistanceFields: Boolean
    open var bEightBitMeshDistanceFields: Boolean
    open var bGenerateLandscapeGIData: Boolean
    open var bCompressMeshDistanceFields: Boolean
    open var TessellationAdaptivePixelsPerTriangle: Number
    open var bSeparateTranslucency: Boolean
    open var TranslucentSortPolicy: String /* "SortByDistance" | "SortByProjectedZ" | "SortAlongAxis" | "ETranslucentSortPolicy_MAX" */
    open var TranslucentSortAxis: Vector
    open var CustomDepthStencil: String /* "Disabled" | "Enabled" | "EnabledOnDemand" | "EnabledWithStencil" | "ECustomDepthStencil_MAX" */
    open var bCustomDepthTaaJitter: Boolean
    open var bEnableAlphaChannelInPostProcessing: String /* "Disabled" | "LinearColorSpaceOnly" | "AllowThroughTonemapper" | "EAlphaChannelMode_MAX" */
    open var bDefaultFeatureBloom: Boolean
    open var bDefaultFeatureAmbientOcclusion: Boolean
    open var bDefaultFeatureAmbientOcclusionStaticFraction: Boolean
    open var bDefaultFeatureAutoExposure: Boolean
    open var DefaultFeatureAutoExposure: String /* "AEM_Histogram" | "AEM_Basic" | "AEM_Manual" | "AEM_MAX" */
    open var bExtendDefaultLuminanceRangeInAutoExposureSettings: Boolean
    open var bUsePreExposure: Boolean
    open var bEnablePreExposureOnlyInTheEditor: Boolean
    open var bDefaultFeatureMotionBlur: Boolean
    open var bDefaultFeatureLensFlare: Boolean
    open var bTemporalUpsampling: Boolean
    open var DefaultFeatureAntiAliasing: String /* "AAM_None" | "AAM_FXAA" | "AAM_TemporalAA" | "AAM_MSAA" | "AAM_MAX" */
    open var DefaultLightUnits: String /* "Unitless" | "Candelas" | "Lumens" | "ELightUnits_MAX" */
    open var DefaultBackBufferPixelFormat: String /* "DBBPF_B8G8R8A8" | "DBBPF_A16B16G16R16_DEPRECATED" | "DBBPF_FloatRGB_DEPRECATED" | "DBBPF_FloatRGBA" | "DBBPF_A2B10G10R10" | "DBBPF_MAX" */
    open var bRenderUnbuiltPreviewShadowsInGame: Boolean
    open var bStencilForLODDither: Boolean
    open var EarlyZPass: String /* "None" | "OpaqueOnly" | "OpaqueAndMasked" | "Auto" | "EEarlyZPass_MAX" */
    open var bEarlyZPassOnlyMaterialMasking: Boolean
    open var bDBuffer: Boolean
    open var ClearSceneMethod: String /* "NoClear" | "HardwareClear" | "QuadAtMaxZ" | "EClearSceneOptions_MAX" */
    open var bBasePassOutputsVelocity: Boolean
    open var bSelectiveBasePassOutputs: Boolean
    open var bDefaultParticleCutouts: Boolean
    open var GPUSimulationTextureSizeX: Number
    open var GPUSimulationTextureSizeY: Number
    open var bGlobalClipPlane: Boolean
    open var GBufferFormat: String /* "Force8BitsPerChannel" | "Default" | "HighPrecisionNormals" | "Force16BitsPerChannel" | "EGBufferFormat_MAX" */
    open var bUseGPUMorphTargets: Boolean
    open var bNvidiaAftermathEnabled: Boolean
    open var bInstancedStereo: Boolean
    open var bMultiView: Boolean
    open var bMobileMultiView: Boolean
    open var bMobileMultiViewDirect: Boolean
    open var bRoundRobinOcclusion: Boolean
    open var bODSCapture: Boolean
    open var WireframeCullThreshold: Number
    open var bEnableRayTracing: Boolean
    open var bSupportStationarySkylight: Boolean
    open var bSupportLowQualityLightmaps: Boolean
    open var bSupportPointLightWholeSceneShadows: Boolean
    open var bSupportAtmosphericFog: Boolean
    open var bSupportSkinCacheShaders: Boolean
    open var bMobileEnableStaticAndCSMShadowReceivers: Boolean
    open var bMobileEnableMovableLightCSMShaderCulling: Boolean
    open var bMobileAllowDistanceFieldShadows: Boolean
    open var bMobileAllowMovableDirectionalLights: Boolean
    open var MobileNumDynamicPointLights: Any
    open var bMobileDynamicPointLightsUseStaticBranch: Boolean
    open var bMobileAllowMovableSpotlights: Boolean
    open var SkinCacheSceneMemoryLimitInMB: Number
    open var bGPUSkinLimit2BoneInfluences: Boolean
    open var bSupportDepthOnlyIndexBuffers: Boolean
    open var bSupportReversedIndexBuffers: Boolean
    open var bSupportMaterialLayers: Boolean

    companion object {
        fun Load(ResourceName: String): RendererSettings
        fun Find(Outer: UObject, ResourceName: String): RendererSettings
        fun GetDefaultObject(): RendererSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RendererSettings
        fun C(Other: UObject): RendererSettings
        fun C(Other: Any): RendererSettings
    }
}

external open class RendererOverrideSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var bSupportAllShaderPermutations: Boolean
    open var bForceRecomputeTangents: Boolean

    companion object {
        fun Load(ResourceName: String): RendererOverrideSettings
        fun Find(Outer: UObject, ResourceName: String): RendererOverrideSettings
        fun GetDefaultObject(): RendererOverrideSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RendererOverrideSettings
        fun C(Other: UObject): RendererOverrideSettings
        fun C(Other: Any): RendererOverrideSettings
    }
}

external open class ReplicationConnectionDriver : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ReplicationConnectionDriver
        fun Find(Outer: UObject, ResourceName: String): ReplicationConnectionDriver
        fun GetDefaultObject(): ReplicationConnectionDriver
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ReplicationConnectionDriver
        fun C(Other: UObject): ReplicationConnectionDriver
        fun C(Other: Any): ReplicationConnectionDriver
    }
}

external open class RotatingMovementComponent : MovementComponent {
    constructor()
    constructor(Outer: UObject)
    open var RotationRate: Rotator
    open var PivotTranslation: Vector
    open var bRotationInLocalSpace: Boolean

    companion object {
        fun Load(ResourceName: String): RotatingMovementComponent
        fun Find(Outer: UObject, ResourceName: String): RotatingMovementComponent
        fun GetDefaultObject(): RotatingMovementComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RotatingMovementComponent
        fun C(Other: UObject): RotatingMovementComponent
        fun C(Other: Any): RotatingMovementComponent
    }
}

external open class RuntimeOptionsBase : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): RuntimeOptionsBase
        fun Find(Outer: UObject, ResourceName: String): RuntimeOptionsBase
        fun GetDefaultObject(): RuntimeOptionsBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RuntimeOptionsBase
        fun C(Other: UObject): RuntimeOptionsBase
        fun C(Other: Any): RuntimeOptionsBase
    }
}

external open class RuntimeVirtualTextureComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var VirtualTexture: RuntimeVirtualTexture
    open var BoundsSourceActor: Actor

    companion object {
        fun Load(ResourceName: String): RuntimeVirtualTextureComponent
        fun Find(Outer: UObject, ResourceName: String): RuntimeVirtualTextureComponent
        fun GetDefaultObject(): RuntimeVirtualTextureComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RuntimeVirtualTextureComponent
        fun C(Other: UObject): RuntimeVirtualTextureComponent
        fun C(Other: Any): RuntimeVirtualTextureComponent
    }
}

external open class RuntimeVirtualTextureVolume(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var VirtualTextureComponent: RuntimeVirtualTextureComponent
    open var Box: BoxComponent

    companion object {
        fun GetDefaultObject(): RuntimeVirtualTextureVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RuntimeVirtualTextureVolume
        fun C(Other: UObject): RuntimeVirtualTextureVolume
        fun C(Other: Any): RuntimeVirtualTextureVolume
    }
}

external open class RVOAvoidanceInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): RVOAvoidanceInterface
        fun Find(Outer: UObject, ResourceName: String): RVOAvoidanceInterface
        fun GetDefaultObject(): RVOAvoidanceInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RVOAvoidanceInterface
        fun C(Other: UObject): RVOAvoidanceInterface
        fun C(Other: Any): RVOAvoidanceInterface
    }
}

external open class Scene : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): Scene
        fun Find(Outer: UObject, ResourceName: String): Scene
        fun GetDefaultObject(): Scene
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Scene
        fun C(Other: UObject): Scene
        fun C(Other: Any): Scene
    }
}

external object ESceneCaptureCompositeMode {
    var SCCM_Overwrite: String /* "SCCM_Overwrite" */
    var SCCM_Additive: String /* "SCCM_Additive" */
    var SCCM_Composite: String /* "SCCM_Composite" */
    var SCCM_MAX: String /* "SCCM_MAX" */
}

external open class SceneCaptureComponent2D : SceneCaptureComponent {
    constructor()
    constructor(Outer: UObject)
    open var ProjectionType: String /* "Perspective" | "Orthographic" | "ECameraProjectionMode_MAX" */
    open var FOVAngle: Number
    open var OrthoWidth: Number
    open var TextureTarget: TextureRenderTarget2D
    open var CompositeMode: String /* "SCCM_Overwrite" | "SCCM_Additive" | "SCCM_Composite" | "SCCM_MAX" */
    open var PostProcessSettings: PostProcessSettings
    open var PostProcessBlendWeight: Number
    open var bOverride_CustomNearClippingPlane: Boolean
    open var CustomNearClippingPlane: Number
    open var bUseCustomProjectionMatrix: Boolean
    open var CustomProjectionMatrix: Matrix
    open var bEnableClipPlane: Boolean
    open var ClipPlaneBase: Vector
    open var ClipPlaneNormal: Vector
    open var bCameraCutThisFrame: Boolean
    open var bConsiderUnrenderedOpaquePixelAsFullyTranslucent: Boolean
    open fun CaptureScene()

    companion object {
        fun Load(ResourceName: String): SceneCaptureComponent2D
        fun Find(Outer: UObject, ResourceName: String): SceneCaptureComponent2D
        fun GetDefaultObject(): SceneCaptureComponent2D
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SceneCaptureComponent2D
        fun C(Other: UObject): SceneCaptureComponent2D
        fun C(Other: Any): SceneCaptureComponent2D
    }
}

external open class SceneCapture2D(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : SceneCapture {
    open var CaptureComponent2D: SceneCaptureComponent2D
    open fun OnInterpToggle(bEnable: Boolean)

    companion object {
        fun GetDefaultObject(): SceneCapture2D
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SceneCapture2D
        fun C(Other: UObject): SceneCapture2D
        fun C(Other: Any): SceneCapture2D
    }
}

external open class TextureRenderTargetCube : TextureRenderTarget {
    constructor()
    constructor(Outer: UObject)
    open var SizeX: Number
    open var ClearColor: LinearColor
    open var OverrideFormat: String /* "PF_Unknown" | "PF_A32B32G32R32F" | "PF_B8G8R8A8" | "PF_G8" | "PF_G16" | "PF_DXT1" | "PF_DXT3" | "PF_DXT5" | "PF_UYVY" | "PF_FloatRGB" | "PF_FloatRGBA" | "PF_DepthStencil" | "PF_ShadowDepth" | "PF_R32_FLOAT" | "PF_G16R16" | "PF_G16R16F" | "PF_G16R16F_FILTER" | "PF_G32R32F" | "PF_A2B10G10R10" | "PF_A16B16G16R16" | "PF_D24" | "PF_R16F" | "PF_R16F_FILTER" | "PF_BC5" | "PF_V8U8" | "PF_A1" | "PF_FloatR11G11B10" | "PF_A8" | "PF_R32_UINT" | "PF_R32_SINT" | "PF_PVRTC2" | "PF_PVRTC4" | "PF_R16_UINT" | "PF_R16_SINT" | "PF_R16G16B16A16_UINT" | "PF_R16G16B16A16_SINT" | "PF_R5G6B5_UNORM" | "PF_R8G8B8A8" | "PF_A8R8G8B8" | "PF_BC4" | "PF_R8G8" | "PF_ATC_RGB" | "PF_ATC_RGBA_E" | "PF_ATC_RGBA_I" | "PF_X24_G8" | "PF_ETC1" | "PF_ETC2_RGB" | "PF_ETC2_RGBA" | "PF_R32G32B32A32_UINT" | "PF_R16G16_UINT" | "PF_ASTC_4x4" | "PF_ASTC_6x6" | "PF_ASTC_8x8" | "PF_ASTC_10x10" | "PF_ASTC_12x12" | "PF_BC6H" | "PF_BC7" | "PF_R8_UINT" | "PF_L8" | "PF_XGXR8" | "PF_R8G8B8A8_UINT" | "PF_R8G8B8A8_SNORM" | "PF_R16G16B16A16_UNORM" | "PF_R16G16B16A16_SNORM" | "PF_PLATFORM_HDR_0" | "PF_PLATFORM_HDR_1" | "PF_PLATFORM_HDR_2" | "PF_NV12" | "PF_R32G32_UINT" | "PF_MAX" */
    open var bHDR: Boolean
    open var bForceLinearGamma: Boolean

    companion object {
        fun Load(ResourceName: String): TextureRenderTargetCube
        fun Find(Outer: UObject, ResourceName: String): TextureRenderTargetCube
        fun GetDefaultObject(): TextureRenderTargetCube
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextureRenderTargetCube
        fun C(Other: UObject): TextureRenderTargetCube
        fun C(Other: Any): TextureRenderTargetCube
    }
}

external open class SceneCaptureComponentCube : SceneCaptureComponent {
    constructor()
    constructor(Outer: UObject)
    open var TextureTarget: TextureRenderTargetCube
    open var bCaptureRotation: Boolean
    open var TextureTargetLeft: TextureRenderTargetCube
    open var TextureTargetRight: TextureRenderTargetCube
    open var TextureTargetODS: TextureRenderTarget2D
    open var IPD: Number
    open fun CaptureScene()

    companion object {
        fun Load(ResourceName: String): SceneCaptureComponentCube
        fun Find(Outer: UObject, ResourceName: String): SceneCaptureComponentCube
        fun GetDefaultObject(): SceneCaptureComponentCube
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SceneCaptureComponentCube
        fun C(Other: UObject): SceneCaptureComponentCube
        fun C(Other: Any): SceneCaptureComponentCube
    }
}

external open class SceneCaptureCube(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : SceneCapture {
    open var CaptureComponentCube: SceneCaptureComponentCube
    open fun OnInterpToggle(bEnable: Boolean)

    companion object {
        fun GetDefaultObject(): SceneCaptureCube
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SceneCaptureCube
        fun C(Other: UObject): SceneCaptureCube
        fun C(Other: Any): SceneCaptureCube
    }
}

external object EShadowMapFlags {
    var SMF_None: String /* "SMF_None" */
    var SMF_Streamed: String /* "SMF_Streamed" */
    var SMF_MAX: String /* "SMF_MAX" */
}

external open class ShadowMapTexture2D : Texture2D {
    constructor()
    constructor(Outer: UObject)
    open var ShadowmapFlags: String /* "SMF_None" | "SMF_Streamed" | "SMF_MAX" */

    companion object {
        fun Load(ResourceName: String): ShadowMapTexture2D
        fun Find(Outer: UObject, ResourceName: String): ShadowMapTexture2D
        fun GetDefaultObject(): ShadowMapTexture2D
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ShadowMapTexture2D
        fun C(Other: UObject): ShadowMapTexture2D
        fun C(Other: Any): ShadowMapTexture2D
    }
}

external open class SkeletalMeshSimplificationSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var SkeletalMeshReductionModuleName: String

    companion object {
        fun Load(ResourceName: String): SkeletalMeshSimplificationSettings
        fun Find(Outer: UObject, ResourceName: String): SkeletalMeshSimplificationSettings
        fun GetDefaultObject(): SkeletalMeshSimplificationSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SkeletalMeshSimplificationSettings
        fun C(Other: UObject): SkeletalMeshSimplificationSettings
        fun C(Other: Any): SkeletalMeshSimplificationSettings
    }
}

external open class SlateTextureAtlasInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SlateTextureAtlasInterface
        fun Find(Outer: UObject, ResourceName: String): SlateTextureAtlasInterface
        fun GetDefaultObject(): SlateTextureAtlasInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SlateTextureAtlasInterface
        fun C(Other: UObject): SlateTextureAtlasInterface
        fun C(Other: Any): SlateTextureAtlasInterface
    }
}

external open class SmokeTestCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SmokeTestCommandlet
        fun Find(Outer: UObject, ResourceName: String): SmokeTestCommandlet
        fun GetDefaultObject(): SmokeTestCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SmokeTestCommandlet
        fun C(Other: UObject): SmokeTestCommandlet
        fun C(Other: Any): SmokeTestCommandlet
    }
}

external open class SoundGroup {
    open var SoundGroup: String /* "SOUNDGROUP_Default" | "SOUNDGROUP_Effects" | "SOUNDGROUP_UI" | "SOUNDGROUP_Music" | "SOUNDGROUP_Voice" | "SOUNDGROUP_GameSoundGroup1" | "SOUNDGROUP_GameSoundGroup2" | "SOUNDGROUP_GameSoundGroup3" | "SOUNDGROUP_GameSoundGroup4" | "SOUNDGROUP_GameSoundGroup5" | "SOUNDGROUP_GameSoundGroup6" | "SOUNDGROUP_GameSoundGroup7" | "SOUNDGROUP_GameSoundGroup8" | "SOUNDGROUP_GameSoundGroup9" | "SOUNDGROUP_GameSoundGroup10" | "SOUNDGROUP_GameSoundGroup11" | "SOUNDGROUP_GameSoundGroup12" | "SOUNDGROUP_GameSoundGroup13" | "SOUNDGROUP_GameSoundGroup14" | "SOUNDGROUP_GameSoundGroup15" | "SOUNDGROUP_GameSoundGroup16" | "SOUNDGROUP_GameSoundGroup17" | "SOUNDGROUP_GameSoundGroup18" | "SOUNDGROUP_GameSoundGroup19" | "SOUNDGROUP_GameSoundGroup20" | "SOUNDGROUP_MAX" */
    open var DisplayName: String
    open var bAlwaysDecompressOnLoad: Boolean
    open var DecompressedDuration: Number
    open fun clone(): SoundGroup

    companion object {
        fun C(Other: UObject): SoundGroup
        fun C(Other: Any): SoundGroup
    }
}

external open class SoundGroups : UObject {
    constructor()
    constructor(Outer: UObject)
    open var SoundGroupProfiles: Array<SoundGroup>

    companion object {
        fun Load(ResourceName: String): SoundGroups
        fun Find(Outer: UObject, ResourceName: String): SoundGroups
        fun GetDefaultObject(): SoundGroups
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundGroups
        fun C(Other: UObject): SoundGroups
        fun C(Other: Any): SoundGroups
    }
}

external open class SoundNodeAssetReferencer : SoundNode {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundNodeAssetReferencer
        fun Find(Outer: UObject, ResourceName: String): SoundNodeAssetReferencer
        fun GetDefaultObject(): SoundNodeAssetReferencer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNodeAssetReferencer
        fun C(Other: UObject): SoundNodeAssetReferencer
        fun C(Other: Any): SoundNodeAssetReferencer
    }
}

external open class SoundNodeAttenuation : SoundNode {
    constructor()
    constructor(Outer: UObject)
    open var AttenuationSettings: SoundAttenuation
    open var AttenuationOverrides: SoundAttenuationSettings
    open var bOverrideAttenuation: Boolean

    companion object {
        fun Load(ResourceName: String): SoundNodeAttenuation
        fun Find(Outer: UObject, ResourceName: String): SoundNodeAttenuation
        fun GetDefaultObject(): SoundNodeAttenuation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNodeAttenuation
        fun C(Other: UObject): SoundNodeAttenuation
        fun C(Other: Any): SoundNodeAttenuation
    }
}

external open class SoundNodeBranch : SoundNode {
    constructor()
    constructor(Outer: UObject)
    open var BoolParameterName: String

    companion object {
        fun Load(ResourceName: String): SoundNodeBranch
        fun Find(Outer: UObject, ResourceName: String): SoundNodeBranch
        fun GetDefaultObject(): SoundNodeBranch
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNodeBranch
        fun C(Other: UObject): SoundNodeBranch
        fun C(Other: Any): SoundNodeBranch
    }
}

external open class SoundNodeConcatenator : SoundNode {
    constructor()
    constructor(Outer: UObject)
    open var InputVolume: Array<Number>

    companion object {
        fun Load(ResourceName: String): SoundNodeConcatenator
        fun Find(Outer: UObject, ResourceName: String): SoundNodeConcatenator
        fun GetDefaultObject(): SoundNodeConcatenator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNodeConcatenator
        fun C(Other: UObject): SoundNodeConcatenator
        fun C(Other: Any): SoundNodeConcatenator
    }
}

external open class SoundNodeDelay : SoundNode {
    constructor()
    constructor(Outer: UObject)
    open var DelayMin: Number
    open var DelayMax: Number

    companion object {
        fun Load(ResourceName: String): SoundNodeDelay
        fun Find(Outer: UObject, ResourceName: String): SoundNodeDelay
        fun GetDefaultObject(): SoundNodeDelay
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNodeDelay
        fun C(Other: UObject): SoundNodeDelay
        fun C(Other: Any): SoundNodeDelay
    }
}

external open class DialogueWaveParameter {
    open var DialogueWave: DialogueWave
    open var Context: DialogueContext
    open fun clone(): DialogueWaveParameter

    companion object {
        fun C(Other: UObject): DialogueWaveParameter
        fun C(Other: Any): DialogueWaveParameter
    }
}

external open class SoundNodeDialoguePlayer : SoundNode {
    constructor()
    constructor(Outer: UObject)
    open var DialogueWaveParameter: DialogueWaveParameter
    open var bLooping: Boolean

    companion object {
        fun Load(ResourceName: String): SoundNodeDialoguePlayer
        fun Find(Outer: UObject, ResourceName: String): SoundNodeDialoguePlayer
        fun GetDefaultObject(): SoundNodeDialoguePlayer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNodeDialoguePlayer
        fun C(Other: UObject): SoundNodeDialoguePlayer
        fun C(Other: Any): SoundNodeDialoguePlayer
    }
}

external open class DistanceDatum {
    open var FadeInDistanceStart: Number
    open var FadeInDistanceEnd: Number
    open var FadeOutDistanceStart: Number
    open var FadeOutDistanceEnd: Number
    open var Volume: Number
    open fun clone(): DistanceDatum

    companion object {
        fun C(Other: UObject): DistanceDatum
        fun C(Other: Any): DistanceDatum
    }
}

external open class SoundNodeDistanceCrossFade : SoundNode {
    constructor()
    constructor(Outer: UObject)
    open var CrossFadeInput: Array<DistanceDatum>

    companion object {
        fun Load(ResourceName: String): SoundNodeDistanceCrossFade
        fun Find(Outer: UObject, ResourceName: String): SoundNodeDistanceCrossFade
        fun GetDefaultObject(): SoundNodeDistanceCrossFade
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNodeDistanceCrossFade
        fun C(Other: UObject): SoundNodeDistanceCrossFade
        fun C(Other: Any): SoundNodeDistanceCrossFade
    }
}

external open class SoundNodeDoppler : SoundNode {
    constructor()
    constructor(Outer: UObject)
    open var DopplerIntensity: Number
    open var bUseSmoothing: Boolean
    open var SmoothingInterpSpeed: Number

    companion object {
        fun Load(ResourceName: String): SoundNodeDoppler
        fun Find(Outer: UObject, ResourceName: String): SoundNodeDoppler
        fun GetDefaultObject(): SoundNodeDoppler
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNodeDoppler
        fun C(Other: UObject): SoundNodeDoppler
        fun C(Other: Any): SoundNodeDoppler
    }
}

external open class SoundNodeEnveloper : SoundNode {
    constructor()
    constructor(Outer: UObject)
    open var LoopStart: Number
    open var LoopEnd: Number
    open var DurationAfterLoop: Number
    open var LoopCount: Number
    open var bLoopIndefinitely: Boolean
    open var bLoop: Boolean
    open var VolumeInterpCurve: DistributionFloatConstantCurve
    open var PitchInterpCurve: DistributionFloatConstantCurve
    open var VolumeCurve: RuntimeFloatCurve
    open var PitchCurve: RuntimeFloatCurve
    open var PitchMin: Number
    open var PitchMax: Number
    open var VolumeMin: Number
    open var VolumeMax: Number

    companion object {
        fun Load(ResourceName: String): SoundNodeEnveloper
        fun Find(Outer: UObject, ResourceName: String): SoundNodeEnveloper
        fun GetDefaultObject(): SoundNodeEnveloper
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNodeEnveloper
        fun C(Other: UObject): SoundNodeEnveloper
        fun C(Other: Any): SoundNodeEnveloper
    }
}

external open class SoundNodeGroupControl : SoundNode {
    constructor()
    constructor(Outer: UObject)
    open var GroupSizes: Array<Number>

    companion object {
        fun Load(ResourceName: String): SoundNodeGroupControl
        fun Find(Outer: UObject, ResourceName: String): SoundNodeGroupControl
        fun GetDefaultObject(): SoundNodeGroupControl
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNodeGroupControl
        fun C(Other: UObject): SoundNodeGroupControl
        fun C(Other: Any): SoundNodeGroupControl
    }
}

external open class SoundNodeLooping : SoundNode {
    constructor()
    constructor(Outer: UObject)
    open var LoopCount: Number
    open var bLoopIndefinitely: Boolean

    companion object {
        fun Load(ResourceName: String): SoundNodeLooping
        fun Find(Outer: UObject, ResourceName: String): SoundNodeLooping
        fun GetDefaultObject(): SoundNodeLooping
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNodeLooping
        fun C(Other: UObject): SoundNodeLooping
        fun C(Other: Any): SoundNodeLooping
    }
}

external open class SoundNodeMature : SoundNode {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundNodeMature
        fun Find(Outer: UObject, ResourceName: String): SoundNodeMature
        fun GetDefaultObject(): SoundNodeMature
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNodeMature
        fun C(Other: UObject): SoundNodeMature
        fun C(Other: Any): SoundNodeMature
    }
}

external open class SoundNodeMixer : SoundNode {
    constructor()
    constructor(Outer: UObject)
    open var InputVolume: Array<Number>

    companion object {
        fun Load(ResourceName: String): SoundNodeMixer
        fun Find(Outer: UObject, ResourceName: String): SoundNodeMixer
        fun GetDefaultObject(): SoundNodeMixer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNodeMixer
        fun C(Other: UObject): SoundNodeMixer
        fun C(Other: Any): SoundNodeMixer
    }
}

external open class SoundNodeModulator : SoundNode {
    constructor()
    constructor(Outer: UObject)
    open var PitchMin: Number
    open var PitchMax: Number
    open var VolumeMin: Number
    open var VolumeMax: Number

    companion object {
        fun Load(ResourceName: String): SoundNodeModulator
        fun Find(Outer: UObject, ResourceName: String): SoundNodeModulator
        fun GetDefaultObject(): SoundNodeModulator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNodeModulator
        fun C(Other: UObject): SoundNodeModulator
        fun C(Other: Any): SoundNodeModulator
    }
}

external object ModulationParamMode {
    var MPM_Normal: String /* "MPM_Normal" */
    var MPM_Abs: String /* "MPM_Abs" */
    var MPM_Direct: String /* "MPM_Direct" */
    var MPM_MAX: String /* "MPM_MAX" */
}

external open class ModulatorContinuousParams {
    open var ParameterName: String
    open var Default: Number
    open var MinInput: Number
    open var MaxInput: Number
    open var MinOutput: Number
    open var MaxOutput: Number
    open var ParamMode: String /* "MPM_Normal" | "MPM_Abs" | "MPM_Direct" | "MPM_MAX" */
    open fun clone(): ModulatorContinuousParams

    companion object {
        fun C(Other: UObject): ModulatorContinuousParams
        fun C(Other: Any): ModulatorContinuousParams
    }
}

external open class SoundNodeModulatorContinuous : SoundNode {
    constructor()
    constructor(Outer: UObject)
    open var PitchModulationParams: ModulatorContinuousParams
    open var VolumeModulationParams: ModulatorContinuousParams

    companion object {
        fun Load(ResourceName: String): SoundNodeModulatorContinuous
        fun Find(Outer: UObject, ResourceName: String): SoundNodeModulatorContinuous
        fun GetDefaultObject(): SoundNodeModulatorContinuous
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNodeModulatorContinuous
        fun C(Other: UObject): SoundNodeModulatorContinuous
        fun C(Other: Any): SoundNodeModulatorContinuous
    }
}

external open class SoundNodeOscillator : SoundNode {
    constructor()
    constructor(Outer: UObject)
    open var bModulateVolume: Boolean
    open var bModulatePitch: Boolean
    open var AmplitudeMin: Number
    open var AmplitudeMax: Number
    open var FrequencyMin: Number
    open var FrequencyMax: Number
    open var OffsetMin: Number
    open var OffsetMax: Number
    open var CenterMin: Number
    open var CenterMax: Number

    companion object {
        fun Load(ResourceName: String): SoundNodeOscillator
        fun Find(Outer: UObject, ResourceName: String): SoundNodeOscillator
        fun GetDefaultObject(): SoundNodeOscillator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNodeOscillator
        fun C(Other: UObject): SoundNodeOscillator
        fun C(Other: Any): SoundNodeOscillator
    }
}

external open class SoundNodeParamCrossFade : SoundNodeDistanceCrossFade {
    constructor()
    constructor(Outer: UObject)
    open var ParamName: String

    companion object {
        fun Load(ResourceName: String): SoundNodeParamCrossFade
        fun Find(Outer: UObject, ResourceName: String): SoundNodeParamCrossFade
        fun GetDefaultObject(): SoundNodeParamCrossFade
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNodeParamCrossFade
        fun C(Other: UObject): SoundNodeParamCrossFade
        fun C(Other: Any): SoundNodeParamCrossFade
    }
}

external open class SoundNodeQualityLevel : SoundNode {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundNodeQualityLevel
        fun Find(Outer: UObject, ResourceName: String): SoundNodeQualityLevel
        fun GetDefaultObject(): SoundNodeQualityLevel
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNodeQualityLevel
        fun C(Other: UObject): SoundNodeQualityLevel
        fun C(Other: Any): SoundNodeQualityLevel
    }
}

external open class SoundNodeRandom : SoundNode {
    constructor()
    constructor(Outer: UObject)
    open var Weights: Array<Number>
    open var PreselectAtLevelLoad: Number
    open var bShouldExcludeFromBranchCulling: Boolean
    open var bSoundCueExcludedFromBranchCulling: Boolean
    open var bRandomizeWithoutReplacement: Boolean
    open var HasBeenUsed: Array<Boolean>
    open var NumRandomUsed: Number
    open var PIEHiddenNodes: Array<Number>

    companion object {
        fun Load(ResourceName: String): SoundNodeRandom
        fun Find(Outer: UObject, ResourceName: String): SoundNodeRandom
        fun GetDefaultObject(): SoundNodeRandom
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNodeRandom
        fun C(Other: UObject): SoundNodeRandom
        fun C(Other: Any): SoundNodeRandom
    }
}

external open class SoundNodeSoundClass : SoundNode {
    constructor()
    constructor(Outer: UObject)
    open var SoundClassOverride: SoundClass

    companion object {
        fun Load(ResourceName: String): SoundNodeSoundClass
        fun Find(Outer: UObject, ResourceName: String): SoundNodeSoundClass
        fun GetDefaultObject(): SoundNodeSoundClass
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNodeSoundClass
        fun C(Other: UObject): SoundNodeSoundClass
        fun C(Other: Any): SoundNodeSoundClass
    }
}

external open class SoundNodeSwitch : SoundNode {
    constructor()
    constructor(Outer: UObject)
    open var IntParameterName: String

    companion object {
        fun Load(ResourceName: String): SoundNodeSwitch
        fun Find(Outer: UObject, ResourceName: String): SoundNodeSwitch
        fun GetDefaultObject(): SoundNodeSwitch
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNodeSwitch
        fun C(Other: UObject): SoundNodeSwitch
        fun C(Other: Any): SoundNodeSwitch
    }
}

external open class SoundNodeWaveParam : SoundNode {
    constructor()
    constructor(Outer: UObject)
    open var WaveParameterName: String

    companion object {
        fun Load(ResourceName: String): SoundNodeWaveParam
        fun Find(Outer: UObject, ResourceName: String): SoundNodeWaveParam
        fun GetDefaultObject(): SoundNodeWaveParam
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNodeWaveParam
        fun C(Other: UObject): SoundNodeWaveParam
        fun C(Other: Any): SoundNodeWaveParam
    }
}

external open class SoundNodeWavePlayer : SoundNodeAssetReferencer {
    constructor()
    constructor(Outer: UObject)
    open var SoundWaveAssetPtr: SoundWave
    open var SoundWave: SoundWave
    open var bLooping: Boolean

    companion object {
        fun Load(ResourceName: String): SoundNodeWavePlayer
        fun Find(Outer: UObject, ResourceName: String): SoundNodeWavePlayer
        fun GetDefaultObject(): SoundNodeWavePlayer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNodeWavePlayer
        fun C(Other: UObject): SoundNodeWavePlayer
        fun C(Other: Any): SoundNodeWavePlayer
    }
}

external open class SpectatorPawnMovement : FloatingPawnMovement {
    constructor()
    constructor(Outer: UObject)
    open var bIgnoreTimeDilation: Boolean

    companion object {
        fun Load(ResourceName: String): SpectatorPawnMovement
        fun Find(Outer: UObject, ResourceName: String): SpectatorPawnMovement
        fun GetDefaultObject(): SpectatorPawnMovement
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SpectatorPawnMovement
        fun C(Other: UObject): SpectatorPawnMovement
        fun C(Other: Any): SpectatorPawnMovement
    }
}

external open class SphereReflectionCapture(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : ReflectionCapture {
    open var DrawCaptureRadius: DrawSphereComponent

    companion object {
        fun GetDefaultObject(): SphereReflectionCapture
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SphereReflectionCapture
        fun C(Other: UObject): SphereReflectionCapture
        fun C(Other: Any): SphereReflectionCapture
    }
}

external open class SphereReflectionCaptureComponent : ReflectionCaptureComponent {
    constructor()
    constructor(Outer: UObject)
    open var InfluenceRadius: Number
    open var CaptureDistanceScale: Number
    open var PreviewInfluenceRadius: DrawSphereComponent

    companion object {
        fun Load(ResourceName: String): SphereReflectionCaptureComponent
        fun Find(Outer: UObject, ResourceName: String): SphereReflectionCaptureComponent
        fun GetDefaultObject(): SphereReflectionCaptureComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SphereReflectionCaptureComponent
        fun C(Other: UObject): SphereReflectionCaptureComponent
        fun C(Other: Any): SphereReflectionCaptureComponent
    }
}

external open class SplineMeshActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var SplineMeshComponent: SplineMeshComponent

    companion object {
        fun GetDefaultObject(): SplineMeshActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SplineMeshActor
        fun C(Other: UObject): SplineMeshActor
        fun C(Other: Any): SplineMeshActor
    }
}

external open class SpringArmComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var TargetArmLength: Number
    open var SocketOffset: Vector
    open var TargetOffset: Vector
    open var ProbeSize: Number
    open var ProbeChannel: String /* "ECC_WorldStatic" | "ECC_WorldDynamic" | "ECC_Pawn" | "ECC_Visibility" | "ECC_Camera" | "ECC_PhysicsBody" | "ECC_Vehicle" | "ECC_Destructible" | "ECC_EngineTraceChannel1" | "ECC_EngineTraceChannel2" | "ECC_EngineTraceChannel3" | "ECC_EngineTraceChannel4" | "ECC_EngineTraceChannel5" | "ECC_EngineTraceChannel6" | "ECC_GameTraceChannel1" | "ECC_GameTraceChannel2" | "ECC_GameTraceChannel3" | "ECC_GameTraceChannel4" | "ECC_GameTraceChannel5" | "ECC_GameTraceChannel6" | "ECC_GameTraceChannel7" | "ECC_GameTraceChannel8" | "ECC_GameTraceChannel9" | "ECC_GameTraceChannel10" | "ECC_GameTraceChannel11" | "ECC_GameTraceChannel12" | "ECC_GameTraceChannel13" | "ECC_GameTraceChannel14" | "ECC_GameTraceChannel15" | "ECC_GameTraceChannel16" | "ECC_GameTraceChannel17" | "ECC_GameTraceChannel18" | "ECC_OverlapAll_Deprecated" | "ECC_MAX" */
    open var bDoCollisionTest: Boolean
    open var bUsePawnControlRotation: Boolean
    open var bInheritPitch: Boolean
    open var bInheritYaw: Boolean
    open var bInheritRoll: Boolean
    open var bEnableCameraLag: Boolean
    open var bEnableCameraRotationLag: Boolean
    open var bUseCameraLagSubstepping: Boolean
    open var bDrawDebugLagMarkers: Boolean
    open var CameraLagSpeed: Number
    open var CameraRotationLagSpeed: Number
    open var CameraLagMaxTimeStep: Number
    open var CameraLagMaxDistance: Number
    open fun IsCollisionFixApplied(): Boolean
    open fun GetUnfixedCameraPosition(): Vector
    open fun GetTargetRotation(): Rotator

    companion object {
        fun Load(ResourceName: String): SpringArmComponent
        fun Find(Outer: UObject, ResourceName: String): SpringArmComponent
        fun GetDefaultObject(): SpringArmComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SpringArmComponent
        fun C(Other: UObject): SpringArmComponent
        fun C(Other: Any): SpringArmComponent
    }
}

external object EStereoLayerType {
    var SLT_WorldLocked: String /* "SLT_WorldLocked" */
    var SLT_TrackerLocked: String /* "SLT_TrackerLocked" */
    var SLT_FaceLocked: String /* "SLT_FaceLocked" */
    var SLT_MAX: String /* "SLT_MAX" */
}

external object EStereoLayerShape {
    var SLSH_QuadLayer: String /* "SLSH_QuadLayer" */
    var SLSH_CylinderLayer: String /* "SLSH_CylinderLayer" */
    var SLSH_CubemapLayer: String /* "SLSH_CubemapLayer" */
    var SLSH_MAX: String /* "SLSH_MAX" */
}

external open class StereoLayerComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var bLiveTexture: Boolean
    open var bSupportsDepth: Boolean
    open var bNoAlphaChannel: Boolean
    open var Texture: Texture
    open var LeftTexture: Texture
    open var bQuadPreserveTextureRatio: Boolean
    open var QuadSize: Vector2D
    open var UVRect: Box2D
    open var CylinderRadius: Number
    open var CylinderOverlayArc: Number
    open var CylinderHeight: Number
    open var StereoLayerType: String /* "SLT_WorldLocked" | "SLT_TrackerLocked" | "SLT_FaceLocked" | "SLT_MAX" */
    open var StereoLayerShape: String /* "SLSH_QuadLayer" | "SLSH_CylinderLayer" | "SLSH_CubemapLayer" | "SLSH_MAX" */
    open var Priority: Number
    open fun SetUVRect(InUVRect: Box2D)
    open fun SetTexture(InTexture: Texture)
    open fun SetQuadSize(InQuadSize: Vector2D)
    open fun SetPriority(InPriority: Number)
    open fun SetLeftTexture(InTexture: Texture)
    open fun MarkTextureForUpdate()
    open fun GetUVRect(): Box2D
    open fun GetTexture(): Texture
    open fun GetQuadSize(): Vector2D
    open fun GetPriority(): Number
    open fun GetLeftTexture(): Texture

    companion object {
        fun Load(ResourceName: String): StereoLayerComponent
        fun Find(Outer: UObject, ResourceName: String): StereoLayerComponent
        fun GetDefaultObject(): StereoLayerComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): StereoLayerComponent
        fun C(Other: UObject): StereoLayerComponent
        fun C(Other: Any): StereoLayerComponent
    }
}

external open class StereoLayerFunctionLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): StereoLayerFunctionLibrary
        fun Find(Outer: UObject, ResourceName: String): StereoLayerFunctionLibrary
        fun GetDefaultObject(): StereoLayerFunctionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): StereoLayerFunctionLibrary
        fun ShowSplashScreen()
        fun SetSplashScreen(Texture: Texture, Scale: Vector2D, Offset: Vector, bShowLoadingMovie: Boolean, bShowOnSet: Boolean)
        fun HideSplashScreen()
        fun EnableAutoLoadingSplashScreen(InAutoShowEnabled: Boolean)
        fun C(Other: UObject): StereoLayerFunctionLibrary
        fun C(Other: Any): StereoLayerFunctionLibrary
    }
}

external open class StringTable : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): StringTable
        fun Find(Outer: UObject, ResourceName: String): StringTable
        fun GetDefaultObject(): StringTable
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): StringTable
        fun C(Other: UObject): StringTable
        fun C(Other: Any): StringTable
    }
}

external open class SubsystemBlueprintLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SubsystemBlueprintLibrary
        fun Find(Outer: UObject, ResourceName: String): SubsystemBlueprintLibrary
        fun GetDefaultObject(): SubsystemBlueprintLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SubsystemBlueprintLibrary
        fun GetLocalPlayerSubSystemFromPlayerController(PlayerController: PlayerController, Class: UnrealEngineClass): LocalPlayerSubsystem
        fun GetLocalPlayerSubsystem(ContextObject: UObject, Class: UnrealEngineClass): LocalPlayerSubsystem
        fun GetGameInstanceSubsystem(ContextObject: UObject, Class: UnrealEngineClass): GameInstanceSubsystem
        fun GetEngineSubsystem(Class: UnrealEngineClass): EngineSubsystem
        fun C(Other: UObject): SubsystemBlueprintLibrary
        fun C(Other: Any): SubsystemBlueprintLibrary
    }
}

external open class SystemTimeTimecodeProvider : TimecodeProvider {
    constructor()
    constructor(Outer: UObject)
    open var FrameRate: FrameRate
    open fun SetFrameRate(InFrameRate: FrameRate)

    companion object {
        fun Load(ResourceName: String): SystemTimeTimecodeProvider
        fun Find(Outer: UObject, ResourceName: String): SystemTimeTimecodeProvider
        fun GetDefaultObject(): SystemTimeTimecodeProvider
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SystemTimeTimecodeProvider
        fun C(Other: UObject): SystemTimeTimecodeProvider
        fun C(Other: Any): SystemTimeTimecodeProvider
    }
}

external open class TargetPoint(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var SpriteComponent: BillboardComponent
    open var ArrowComponent: ArrowComponent

    companion object {
        fun GetDefaultObject(): TargetPoint
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TargetPoint
        fun C(Other: UObject): TargetPoint
        fun C(Other: Any): TargetPoint
    }
}

external open class TextPropertyTestObject : UObject {
    constructor()
    constructor(Outer: UObject)
    open var DefaultedText: String
    open var UndefaultedText: String
    open var TransientText: String

    companion object {
        fun Load(ResourceName: String): TextPropertyTestObject
        fun Find(Outer: UObject, ResourceName: String): TextPropertyTestObject
        fun GetDefaultObject(): TextPropertyTestObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextPropertyTestObject
        fun C(Other: UObject): TextPropertyTestObject
        fun C(Other: Any): TextPropertyTestObject
    }
}

external open class TextRenderActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var TextRender: TextRenderComponent
    open var SpriteComponent: BillboardComponent

    companion object {
        fun GetDefaultObject(): TextRenderActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextRenderActor
        fun C(Other: UObject): TextRenderActor
        fun C(Other: Any): TextRenderActor
    }
}

external open class TimelineEventEntry {
    open var Time: Number
    open var EventFunc: UnrealEngineDelegate<() -> Unit>
    open fun clone(): TimelineEventEntry

    companion object {
        fun C(Other: UObject): TimelineEventEntry
        fun C(Other: Any): TimelineEventEntry
    }
}

external open class TimelineVectorTrack {
    open var VectorCurve: CurveVector
    open var InterpFunc: UnrealEngineDelegate<(Output: Vector) -> Unit>
    open var TrackName: String
    open var VectorPropertyName: String
    open var VectorProperty: StructProperty
    open fun clone(): TimelineVectorTrack

    companion object {
        fun C(Other: UObject): TimelineVectorTrack
        fun C(Other: Any): TimelineVectorTrack
    }
}

external open class TimelineFloatTrack {
    open var FloatCurve: CurveFloat
    open var InterpFunc: UnrealEngineDelegate<(Output: Number) -> Unit>
    open var TrackName: String
    open var FloatPropertyName: String
    open var FloatProperty: FloatProperty
    open fun clone(): TimelineFloatTrack

    companion object {
        fun C(Other: UObject): TimelineFloatTrack
        fun C(Other: Any): TimelineFloatTrack
    }
}

external open class TimelineLinearColorTrack {
    open var LinearColorCurve: CurveLinearColor
    open var InterpFunc: UnrealEngineDelegate<(Output: LinearColor) -> Unit>
    open var TrackName: String
    open var LinearColorPropertyName: String
    open var LinearColorProperty: StructProperty
    open fun clone(): TimelineLinearColorTrack

    companion object {
        fun C(Other: UObject): TimelineLinearColorTrack
        fun C(Other: Any): TimelineLinearColorTrack
    }
}

external open class Timeline {
    open var LengthMode: String /* "TL_TimelineLength" | "TL_LastKeyFrame" | "TL_MAX" */
    open var bLooping: Boolean
    open var bReversePlayback: Boolean
    open var bPlaying: Boolean
    open var Length: Number
    open var PlayRate: Number
    open var Position: Number
    open var Events: Array<TimelineEventEntry>
    open var InterpVectors: Array<TimelineVectorTrack>
    open var InterpFloats: Array<TimelineFloatTrack>
    open var InterpLinearColors: Array<TimelineLinearColorTrack>
    open var TimelinePostUpdateFunc: UnrealEngineDelegate<() -> Unit>
    open var TimelineFinishedFunc: UnrealEngineDelegate<() -> Unit>
    open var PropertySetObject: Any
    open var DirectionPropertyName: String
    open var DirectionProperty: Property
    open fun clone(): Timeline

    companion object {
        fun C(Other: UObject): Timeline
        fun C(Other: Any): Timeline
    }
}

external open class TimelineComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var TheTimeline: Timeline
    open var bIgnoreTimeDilation: Boolean
    open fun Stop()
    open fun SetVectorCurve(NewVectorCurve: CurveVector, VectorTrackName: String)
    open fun SetTimelineLengthMode(NewLengthMode: String /* "TL_TimelineLength" | "TL_LastKeyFrame" | "TL_MAX" */)
    open fun SetTimelineLength(NewLength: Number)
    open fun SetPlayRate(NewRate: Number)
    open fun SetPlaybackPosition(NewPosition: Number, bFireEvents: Boolean, bFireUpdate: Boolean)
    open fun SetNewTime(NewTime: Number)
    open fun SetLooping(bNewLooping: Boolean)
    open fun SetLinearColorCurve(NewLinearColorCurve: CurveLinearColor, LinearColorTrackName: String)
    open fun SetIgnoreTimeDilation(bNewIgnoreTimeDilation: Boolean)
    open fun SetFloatCurve(NewFloatCurve: CurveFloat, FloatTrackName: String)
    open fun ReverseFromEnd()
    open fun Reverse()
    open fun PlayFromStart()
    open fun Play()
    open fun OnRep_Timeline()
    open fun IsReversing(): Boolean
    open fun IsPlaying(): Boolean
    open fun IsLooping(): Boolean
    open fun GetTimelineLength(): Number
    open fun GetPlayRate(): Number
    open fun GetPlaybackPosition(): Number
    open fun GetIgnoreTimeDilation(): Boolean

    companion object {
        fun Load(ResourceName: String): TimelineComponent
        fun Find(Outer: UObject, ResourceName: String): TimelineComponent
        fun GetDefaultObject(): TimelineComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TimelineComponent
        fun C(Other: UObject): TimelineComponent
        fun C(Other: Any): TimelineComponent
    }
}

external open class TriggerBase(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var CollisionComponent: ShapeComponent
    open var SpriteComponent: BillboardComponent

    companion object {
        fun GetDefaultObject(): TriggerBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TriggerBase
        fun C(Other: UObject): TriggerBase
        fun C(Other: Any): TriggerBase
    }
}

external open class TriggerBox(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : TriggerBase {
    companion object {
        fun GetDefaultObject(): TriggerBox
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TriggerBox
        fun C(Other: UObject): TriggerBox
        fun C(Other: Any): TriggerBox
    }
}

external open class TriggerCapsule(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : TriggerBase {
    companion object {
        fun GetDefaultObject(): TriggerCapsule
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TriggerCapsule
        fun C(Other: UObject): TriggerCapsule
        fun C(Other: Any): TriggerCapsule
    }
}

external open class TriggerSphere(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : TriggerBase {
    companion object {
        fun GetDefaultObject(): TriggerSphere
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TriggerSphere
        fun C(Other: UObject): TriggerSphere
        fun C(Other: Any): TriggerSphere
    }
}

external open class TriggerVolume(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Volume {
    companion object {
        fun GetDefaultObject(): TriggerVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TriggerVolume
        fun C(Other: UObject): TriggerVolume
        fun C(Other: Any): TriggerVolume
    }
}

external object ETwitterRequestMethod {
    var TRM_Get: String /* "TRM_Get" */
    var TRM_Post: String /* "TRM_Post" */
    var TRM_Delete: String /* "TRM_Delete" */
    var TRM_MAX: String /* "TRM_MAX" */
}

external open class TwitterIntegrationBase : PlatformInterfaceBase {
    constructor()
    constructor(Outer: UObject)
    open fun TwitterRequest(URL: String, ParamKeysAndValues: Array<String>, RequestMethod: String /* "TRM_Get" | "TRM_Post" | "TRM_Delete" | "TRM_MAX" */, AccountIndex: Number): Boolean
    open fun ShowTweetUI(InitialMessage: String, URL: String, Picture: String): Boolean
    open fun Init()
    open fun GetNumAccounts(): Number
    open fun GetAccountName(AccountIndex: Number): String
    open fun CanShowTweetUI(): Boolean
    open fun AuthorizeAccounts(): Boolean

    companion object {
        fun Load(ResourceName: String): TwitterIntegrationBase
        fun Find(Outer: UObject, ResourceName: String): TwitterIntegrationBase
        fun GetDefaultObject(): TwitterIntegrationBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TwitterIntegrationBase
        fun C(Other: UObject): TwitterIntegrationBase
        fun C(Other: Any): TwitterIntegrationBase
    }
}

external open class UserDefinedEnum : Enum {
    constructor()
    constructor(Outer: UObject)
    open var UniqueNameIndex: Any
    open var EnumDescription: String
    open var DisplayNameMap: Any

    companion object {
        fun Load(ResourceName: String): UserDefinedEnum
        fun Find(Outer: UObject, ResourceName: String): UserDefinedEnum
        fun GetDefaultObject(): UserDefinedEnum
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UserDefinedEnum
        fun C(Other: UObject): UserDefinedEnum
        fun C(Other: Any): UserDefinedEnum
    }
}

external object EUserDefinedStructureStatus {
    var UDSS_UpToDate: String /* "UDSS_UpToDate" */
    var UDSS_Dirty: String /* "UDSS_Dirty" */
    var UDSS_Error: String /* "UDSS_Error" */
    var UDSS_Duplicate: String /* "UDSS_Duplicate" */
    var UDSS_MAX: String /* "UDSS_MAX" */
}

external open class UserDefinedStruct : ScriptStruct {
    constructor()
    constructor(Outer: UObject)
    open var PrimaryStruct: Any
    open var ErrorMessage: String
    open var EditorData: UObject
    open var Status: String /* "UDSS_UpToDate" | "UDSS_Dirty" | "UDSS_Error" | "UDSS_Duplicate" | "UDSS_MAX" */
    open var Guid: Guid

    companion object {
        fun Load(ResourceName: String): UserDefinedStruct
        fun Find(Outer: UObject, ResourceName: String): UserDefinedStruct
        fun GetDefaultObject(): UserDefinedStruct
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UserDefinedStruct
        fun C(Other: UObject): UserDefinedStruct
        fun C(Other: Any): UserDefinedStruct
    }
}

external object ERenderFocusRule {
    var Always: String /* "Always" */
    var NonPointer: String /* "NonPointer" */
    var NavigationOnly: String /* "NavigationOnly" */
    var Never: String /* "Never" */
    var ERenderFocusRule_MAX: String /* "ERenderFocusRule_MAX" */
}

external object EUIScalingRule {
    var ShortestSide: String /* "ShortestSide" */
    var LongestSide: String /* "LongestSide" */
    var Horizontal: String /* "Horizontal" */
    var Vertical: String /* "Vertical" */
    var Custom: String /* "Custom" */
    var EUIScalingRule_MAX: String /* "EUIScalingRule_MAX" */
}

external open class UserInterfaceSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var RenderFocusRule: String /* "Always" | "NonPointer" | "NavigationOnly" | "Never" | "ERenderFocusRule_MAX" */
    open var HardwareCursors: Any
    open var SoftwareCursors: Any
    open var DefaultCursor: SoftClassPath
    open var TextEditBeamCursor: SoftClassPath
    open var CrosshairsCursor: SoftClassPath
    open var HandCursor: SoftClassPath
    open var GrabHandCursor: SoftClassPath
    open var GrabHandClosedCursor: SoftClassPath
    open var SlashedCircleCursor: SoftClassPath
    open var ApplicationScale: Number
    open var UIScaleRule: String /* "ShortestSide" | "LongestSide" | "Horizontal" | "Vertical" | "Custom" | "EUIScalingRule_MAX" */
    open var CustomScalingRuleClass: SoftClassPath
    open var UIScaleCurve: RuntimeFloatCurve
    open var bAllowHighDPIInGameMode: Boolean
    open var bLoadWidgetsOnDedicatedServer: Boolean
    open var CursorClasses: Array<UObject>
    open var CustomScalingRuleClassInstance: UnrealEngineClass
    open var CustomScalingRule: DPICustomScalingRule

    companion object {
        fun Load(ResourceName: String): UserInterfaceSettings
        fun Find(Outer: UObject, ResourceName: String): UserInterfaceSettings
        fun GetDefaultObject(): UserInterfaceSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UserInterfaceSettings
        fun C(Other: UObject): UserInterfaceSettings
        fun C(Other: Any): UserInterfaceSettings
    }
}

external object EVectorFieldConstructionOp {
    var VFCO_Extrude: String /* "VFCO_Extrude" */
    var VFCO_Revolve: String /* "VFCO_Revolve" */
    var VFCO_MAX: String /* "VFCO_MAX" */
}

external open class VectorFieldStatic : VectorField {
    constructor()
    constructor(Outer: UObject)
    open var SizeX: Number
    open var SizeY: Number
    open var SizeZ: Number
    open var bAllowCPUAccess: Boolean
    open var CPUData: Array<Vector4>
    open var SourceFilePath: String
    open var AssetImportData: AssetImportData

    companion object {
        fun Load(ResourceName: String): VectorFieldStatic
        fun Find(Outer: UObject, ResourceName: String): VectorFieldStatic
        fun GetDefaultObject(): VectorFieldStatic
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VectorFieldStatic
        fun C(Other: UObject): VectorFieldStatic
        fun C(Other: Any): VectorFieldStatic
    }
}

external open class VectorFieldAnimated : VectorField {
    constructor()
    constructor(Outer: UObject)
    open var Texture: Texture2D
    open var ConstructionOp: String /* "VFCO_Extrude" | "VFCO_Revolve" | "VFCO_MAX" */
    open var VolumeSizeX: Number
    open var VolumeSizeY: Number
    open var VolumeSizeZ: Number
    open var SubImagesX: Number
    open var SubImagesY: Number
    open var FrameCount: Number
    open var FramesPerSecond: Number
    open var bLoop: Boolean
    open var NoiseField: VectorFieldStatic
    open var NoiseScale: Number
    open var NoiseMax: Number

    companion object {
        fun Load(ResourceName: String): VectorFieldAnimated
        fun Find(Outer: UObject, ResourceName: String): VectorFieldAnimated
        fun GetDefaultObject(): VectorFieldAnimated
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VectorFieldAnimated
        fun C(Other: UObject): VectorFieldAnimated
        fun C(Other: Any): VectorFieldAnimated
    }
}

external open class VectorFieldComponent : PrimitiveComponent {
    constructor()
    constructor(Outer: UObject)
    open var VectorField: VectorField
    open var Intensity: Number
    open var Tightness: Number
    open var bPreviewVectorField: Boolean
    open fun SetIntensity(NewIntensity: Number)

    companion object {
        fun Load(ResourceName: String): VectorFieldComponent
        fun Find(Outer: UObject, ResourceName: String): VectorFieldComponent
        fun GetDefaultObject(): VectorFieldComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VectorFieldComponent
        fun C(Other: UObject): VectorFieldComponent
        fun C(Other: Any): VectorFieldComponent
    }
}

external open class VectorFieldVolume(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var VectorFieldComponent: VectorFieldComponent
    open var SpriteComponent: BillboardComponent

    companion object {
        fun GetDefaultObject(): VectorFieldVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VectorFieldVolume
        fun C(Other: UObject): VectorFieldVolume
        fun C(Other: Any): VectorFieldVolume
    }
}

external open class VirtualTexture : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): VirtualTexture
        fun Find(Outer: UObject, ResourceName: String): VirtualTexture
        fun GetDefaultObject(): VirtualTexture
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VirtualTexture
        fun C(Other: UObject): VirtualTexture
        fun C(Other: Any): VirtualTexture
    }
}

external open class LightMapVirtualTexture : VirtualTexture {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LightMapVirtualTexture
        fun Find(Outer: UObject, ResourceName: String): LightMapVirtualTexture
        fun GetDefaultObject(): LightMapVirtualTexture
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LightMapVirtualTexture
        fun C(Other: UObject): LightMapVirtualTexture
        fun C(Other: Any): LightMapVirtualTexture
    }
}

external open class LightMapVirtualTexture2D : Texture2D {
    constructor()
    constructor(Outer: UObject)
    open var TypeToLayer: Array<Any>

    companion object {
        fun Load(ResourceName: String): LightMapVirtualTexture2D
        fun Find(Outer: UObject, ResourceName: String): LightMapVirtualTexture2D
        fun GetDefaultObject(): LightMapVirtualTexture2D
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LightMapVirtualTexture2D
        fun C(Other: UObject): LightMapVirtualTexture2D
        fun C(Other: Any): LightMapVirtualTexture2D
    }
}

external open class VirtualTextureSpacePoolConfig {
    open var SizeInMegabyte: Number
    open var TileSize: Number
    open var Format: String /* "PF_Unknown" | "PF_A32B32G32R32F" | "PF_B8G8R8A8" | "PF_G8" | "PF_G16" | "PF_DXT1" | "PF_DXT3" | "PF_DXT5" | "PF_UYVY" | "PF_FloatRGB" | "PF_FloatRGBA" | "PF_DepthStencil" | "PF_ShadowDepth" | "PF_R32_FLOAT" | "PF_G16R16" | "PF_G16R16F" | "PF_G16R16F_FILTER" | "PF_G32R32F" | "PF_A2B10G10R10" | "PF_A16B16G16R16" | "PF_D24" | "PF_R16F" | "PF_R16F_FILTER" | "PF_BC5" | "PF_V8U8" | "PF_A1" | "PF_FloatR11G11B10" | "PF_A8" | "PF_R32_UINT" | "PF_R32_SINT" | "PF_PVRTC2" | "PF_PVRTC4" | "PF_R16_UINT" | "PF_R16_SINT" | "PF_R16G16B16A16_UINT" | "PF_R16G16B16A16_SINT" | "PF_R5G6B5_UNORM" | "PF_R8G8B8A8" | "PF_A8R8G8B8" | "PF_BC4" | "PF_R8G8" | "PF_ATC_RGB" | "PF_ATC_RGBA_E" | "PF_ATC_RGBA_I" | "PF_X24_G8" | "PF_ETC1" | "PF_ETC2_RGB" | "PF_ETC2_RGBA" | "PF_R32G32B32A32_UINT" | "PF_R16G16_UINT" | "PF_ASTC_4x4" | "PF_ASTC_6x6" | "PF_ASTC_8x8" | "PF_ASTC_10x10" | "PF_ASTC_12x12" | "PF_BC6H" | "PF_BC7" | "PF_R8_UINT" | "PF_L8" | "PF_XGXR8" | "PF_R8G8B8A8_UINT" | "PF_R8G8B8A8_SNORM" | "PF_R16G16B16A16_UNORM" | "PF_R16G16B16A16_SNORM" | "PF_PLATFORM_HDR_0" | "PF_PLATFORM_HDR_1" | "PF_PLATFORM_HDR_2" | "PF_NV12" | "PF_R32G32_UINT" | "PF_MAX" */
    open fun clone(): VirtualTextureSpacePoolConfig

    companion object {
        fun C(Other: UObject): VirtualTextureSpacePoolConfig
        fun C(Other: Any): VirtualTextureSpacePoolConfig
    }
}

external open class VirtualTexturePoolConfig : UObject {
    constructor()
    constructor(Outer: UObject)
    open var DefaultSizeInMegabyte: Number
    open var Pools: Array<VirtualTextureSpacePoolConfig>

    companion object {
        fun Load(ResourceName: String): VirtualTexturePoolConfig
        fun Find(Outer: UObject, ResourceName: String): VirtualTexturePoolConfig
        fun GetDefaultObject(): VirtualTexturePoolConfig
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VirtualTexturePoolConfig
        fun C(Other: UObject): VirtualTexturePoolConfig
        fun C(Other: Any): VirtualTexturePoolConfig
    }
}

external open class VisualLoggerAutomationTests : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): VisualLoggerAutomationTests
        fun Find(Outer: UObject, ResourceName: String): VisualLoggerAutomationTests
        fun GetDefaultObject(): VisualLoggerAutomationTests
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VisualLoggerAutomationTests
        fun C(Other: UObject): VisualLoggerAutomationTests
        fun C(Other: Any): VisualLoggerAutomationTests
    }
}

external open class VisualLoggerDebugSnapshotInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): VisualLoggerDebugSnapshotInterface
        fun Find(Outer: UObject, ResourceName: String): VisualLoggerDebugSnapshotInterface
        fun GetDefaultObject(): VisualLoggerDebugSnapshotInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VisualLoggerDebugSnapshotInterface
        fun C(Other: UObject): VisualLoggerDebugSnapshotInterface
        fun C(Other: Any): VisualLoggerDebugSnapshotInterface
    }
}

external open class VisualLoggerKismetLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): VisualLoggerKismetLibrary
        fun Find(Outer: UObject, ResourceName: String): VisualLoggerKismetLibrary
        fun GetDefaultObject(): VisualLoggerKismetLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VisualLoggerKismetLibrary
        fun RedirectVislog(SourceOwner: UObject, DestinationOwner: UObject)
        fun LogText(WorldContextObject: UObject, text: String, LogCategory: String, bAddToMessageLog: Boolean)
        fun LogSegment(WorldContextObject: UObject, SegmentStart: Vector, SegmentEnd: Vector, text: String, ObjectColor: LinearColor, Thickness: Number, CategoryName: String, bAddToMessageLog: Boolean)
        fun LogLocation(WorldContextObject: UObject, Location: Vector, text: String, ObjectColor: LinearColor, Radius: Number, LogCategory: String, bAddToMessageLog: Boolean)
        fun LogBox(WorldContextObject: UObject, BoxShape: Box, text: String, ObjectColor: LinearColor, LogCategory: String, bAddToMessageLog: Boolean)
        fun EnableRecording(bEnabled: Boolean)
        fun C(Other: UObject): VisualLoggerKismetLibrary
        fun C(Other: Any): VisualLoggerKismetLibrary
    }
}

external open class VoiceChannel : Channel {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): VoiceChannel
        fun Find(Outer: UObject, ResourceName: String): VoiceChannel
        fun GetDefaultObject(): VoiceChannel
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VoiceChannel
        fun C(Other: UObject): VoiceChannel
        fun C(Other: Any): VoiceChannel
    }
}

external open class VoiceSettings {
    open var ComponentToAttachTo: SceneComponent
    open var AttenuationSettings: SoundAttenuation
    open var SourceEffectChain: SoundEffectSourcePresetChain
    open fun clone(): VoiceSettings

    companion object {
        fun C(Other: UObject): VoiceSettings
        fun C(Other: Any): VoiceSettings
    }
}

external open class VOIPTalker : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var Settings: VoiceSettings
    open fun RegisterWithPlayerState(OwningState: PlayerState)
    open fun GetVoiceLevel(): Number
    open fun BPOnTalkingEnd()
    open fun BPOnTalkingBegin(AudioComponent: AudioComponent)

    companion object {
        fun Load(ResourceName: String): VOIPTalker
        fun Find(Outer: UObject, ResourceName: String): VOIPTalker
        fun GetDefaultObject(): VOIPTalker
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VOIPTalker
        fun CreateTalkerForPlayer(OwningState: PlayerState): VOIPTalker
        fun C(Other: UObject): VOIPTalker
        fun C(Other: Any): VOIPTalker
    }
}

external open class VOIPStatics : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): VOIPStatics
        fun Find(Outer: UObject, ResourceName: String): VOIPStatics
        fun GetDefaultObject(): VOIPStatics
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VOIPStatics
        fun SetMicThreshold(InThreshold: Number)
        fun C(Other: UObject): VOIPStatics
        fun C(Other: Any): VOIPStatics
    }
}

external open class VolumeTexture : Texture {
    constructor()
    constructor(Outer: UObject)
    open var Source2DTexture: Texture2D
    open var SourceLightingGuid: Guid
    open var Source2DTileSizeX: Number
    open var Source2DTileSizeY: Number

    companion object {
        fun Load(ResourceName: String): VolumeTexture
        fun Find(Outer: UObject, ResourceName: String): VolumeTexture
        fun GetDefaultObject(): VolumeTexture
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VolumeTexture
        fun C(Other: UObject): VolumeTexture
        fun C(Other: Any): VolumeTexture
    }
}

external open class VolumetricLightmapDensityVolume(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Volume {
    open var AllowedMipLevelRange: Int32Interval

    companion object {
        fun GetDefaultObject(): VolumetricLightmapDensityVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VolumetricLightmapDensityVolume
        fun C(Other: UObject): VolumetricLightmapDensityVolume
        fun C(Other: Any): VolumetricLightmapDensityVolume
    }
}

external object EWindSourceType {
    var Directional: String /* "Directional" */
    var Point: String /* "Point" */
    var EWindSourceType_MAX: String /* "EWindSourceType_MAX" */
}

external open class WindDirectionalSourceComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var Strength: Number
    open var Speed: Number
    open var MinGustAmount: Number
    open var MaxGustAmount: Number
    open var Radius: Number
    open var bPointWind: Boolean
    open fun SetWindType(InNewType: String /* "Directional" | "Point" | "EWindSourceType_MAX" */)
    open fun SetStrength(InNewStrength: Number)
    open fun SetSpeed(InNewSpeed: Number)
    open fun SetRadius(InNewRadius: Number)
    open fun SetMinimumGustAmount(InNewMinGust: Number)
    open fun SetMaximumGustAmount(InNewMaxGust: Number)

    companion object {
        fun Load(ResourceName: String): WindDirectionalSourceComponent
        fun Find(Outer: UObject, ResourceName: String): WindDirectionalSourceComponent
        fun GetDefaultObject(): WindDirectionalSourceComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WindDirectionalSourceComponent
        fun C(Other: UObject): WindDirectionalSourceComponent
        fun C(Other: Any): WindDirectionalSourceComponent
    }
}

external open class WindDirectionalSource(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Info {
    open var Component: WindDirectionalSourceComponent
    open var ArrowComponent: ArrowComponent

    companion object {
        fun GetDefaultObject(): WindDirectionalSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WindDirectionalSource
        fun C(Other: UObject): WindDirectionalSource
        fun C(Other: Any): WindDirectionalSource
    }
}

external open class HierarchicalLODSetup : UObject {
    constructor()
    constructor(Outer: UObject)
    open var HierarchicalLODSetup: Array<HierarchicalSimplification>
    open var OverrideBaseMaterial: MaterialInterface

    companion object {
        fun Load(ResourceName: String): HierarchicalLODSetup
        fun Find(Outer: UObject, ResourceName: String): HierarchicalLODSetup
        fun GetDefaultObject(): HierarchicalLODSetup
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): HierarchicalLODSetup
        fun C(Other: UObject): HierarchicalLODSetup
        fun C(Other: Any): HierarchicalLODSetup
    }
}

external open class MoviePlayerSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bWaitForMoviesToComplete: Boolean
    open var bMoviesAreSkippable: Boolean
    open var StartupMovies: Array<String>

    companion object {
        fun Load(ResourceName: String): MoviePlayerSettings
        fun Find(Outer: UObject, ResourceName: String): MoviePlayerSettings
        fun GetDefaultObject(): MoviePlayerSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MoviePlayerSettings
        fun C(Other: UObject): MoviePlayerSettings
        fun C(Other: Any): MoviePlayerSettings
    }
}

external open class SHAHashData {
    open var Hash: Number
    open fun clone(): SHAHashData

    companion object {
        fun C(Other: UObject): SHAHashData
        fun C(Other: Any): SHAHashData
    }
}

external open class ChunkPartData {
    open var Guid: Guid
    open var Offset: Any
    open var Size: Any
    open fun clone(): ChunkPartData

    companion object {
        fun C(Other: UObject): ChunkPartData
        fun C(Other: Any): ChunkPartData
    }
}

external open class FileManifestData {
    open var Filename: String
    open var FileHash: SHAHashData
    open var FileChunkParts: Array<ChunkPartData>
    open var InstallTags: Array<String>
    open var bIsUnixExecutable: Boolean
    open var SymlinkTarget: String
    open var bIsReadOnly: Boolean
    open var bIsCompressed: Boolean
    open fun clone(): FileManifestData

    companion object {
        fun C(Other: UObject): FileManifestData
        fun C(Other: Any): FileManifestData
    }
}

external open class ChunkInfoData {
    open var Guid: Guid
    open var Hash: Any
    open var ShaHash: SHAHashData
    open var FileSize: Any
    open var GroupNumber: Number
    open fun clone(): ChunkInfoData

    companion object {
        fun C(Other: UObject): ChunkInfoData
        fun C(Other: Any): ChunkInfoData
    }
}

external open class CustomFieldData {
    open var Key: String
    open var Value: String
    open fun clone(): CustomFieldData

    companion object {
        fun C(Other: UObject): CustomFieldData
        fun C(Other: Any): CustomFieldData
    }
}

external open class BuildPatchManifest : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ManifestFileVersion: Number
    open var bIsFileData: Boolean
    open var AppID: Any
    open var AppName: String
    open var BuildVersion: String
    open var LaunchExe: String
    open var LaunchCommand: String
    open var PrereqIds: Any
    open var PrereqName: String
    open var PrereqPath: String
    open var PrereqArgs: String
    open var FileManifestList: Array<FileManifestData>
    open var ChunkList: Array<ChunkInfoData>
    open var CustomFields: Array<CustomFieldData>

    companion object {
        fun Load(ResourceName: String): BuildPatchManifest
        fun Find(Outer: UObject, ResourceName: String): BuildPatchManifest
        fun GetDefaultObject(): BuildPatchManifest
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BuildPatchManifest
        fun C(Other: UObject): BuildPatchManifest
        fun C(Other: Any): BuildPatchManifest
    }
}

external open class SoundFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var bAutoCreateCue: Boolean
    open var bIncludeAttenuationNode: Boolean
    open var bIncludeLoopingNode: Boolean
    open var bIncludeModulatorNode: Boolean
    open var CueVolume: Number
    open var CuePackageSuffix: String

    companion object {
        fun Load(ResourceName: String): SoundFactory
        fun Find(Outer: UObject, ResourceName: String): SoundFactory
        fun GetDefaultObject(): SoundFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundFactory
        fun C(Other: UObject): SoundFactory
        fun C(Other: Any): SoundFactory
    }
}

external open class ReimportSoundFactory : SoundFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ReimportSoundFactory
        fun Find(Outer: UObject, ResourceName: String): ReimportSoundFactory
        fun GetDefaultObject(): ReimportSoundFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ReimportSoundFactory
        fun C(Other: UObject): ReimportSoundFactory
        fun C(Other: Any): ReimportSoundFactory
    }
}

external open class SoundSurroundFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var CueVolume: Number

    companion object {
        fun Load(ResourceName: String): SoundSurroundFactory
        fun Find(Outer: UObject, ResourceName: String): SoundSurroundFactory
        fun GetDefaultObject(): SoundSurroundFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundSurroundFactory
        fun C(Other: UObject): SoundSurroundFactory
        fun C(Other: Any): SoundSurroundFactory
    }
}

external open class ReimportSoundSurroundFactory : SoundSurroundFactory {
    constructor()
    constructor(Outer: UObject)
    open var ReimportPaths: Array<String>

    companion object {
        fun Load(ResourceName: String): ReimportSoundSurroundFactory
        fun Find(Outer: UObject, ResourceName: String): ReimportSoundSurroundFactory
        fun GetDefaultObject(): ReimportSoundSurroundFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ReimportSoundSurroundFactory
        fun C(Other: UObject): ReimportSoundSurroundFactory
        fun C(Other: Any): ReimportSoundSurroundFactory
    }
}

external open class MacTargetSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var TargetedRHIs: Array<String>
    open var MaxShaderLanguageVersion: Number
    open var UseFastIntrinsics: Boolean
    open var ForceFloats: Boolean
    open var EnableMathOptimisations: Boolean
    open var AudioSampleRate: Number
    open var AudioCallbackBufferFrameSize: Number
    open var AudioNumBuffersToEnqueue: Number
    open var AudioMaxChannels: Number
    open var AudioNumSourceWorkers: Number
    open var SpatializationPlugin: String
    open var ReverbPlugin: String
    open var OcclusionPlugin: String

    companion object {
        fun Load(ResourceName: String): MacTargetSettings
        fun Find(Outer: UObject, ResourceName: String): MacTargetSettings
        fun GetDefaultObject(): MacTargetSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MacTargetSettings
        fun C(Other: UObject): MacTargetSettings
        fun C(Other: Any): MacTargetSettings
    }
}

external open class LinuxTargetSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var SpatializationPlugin: String
    open var ReverbPlugin: String
    open var OcclusionPlugin: String
    open var TargetedRHIs: Array<String>

    companion object {
        fun Load(ResourceName: String): LinuxTargetSettings
        fun Find(Outer: UObject, ResourceName: String): LinuxTargetSettings
        fun GetDefaultObject(): LinuxTargetSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LinuxTargetSettings
        fun C(Other: UObject): LinuxTargetSettings
        fun C(Other: Any): LinuxTargetSettings
    }
}

external open class DialogueVoiceFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DialogueVoiceFactory
        fun Find(Outer: UObject, ResourceName: String): DialogueVoiceFactory
        fun GetDefaultObject(): DialogueVoiceFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DialogueVoiceFactory
        fun C(Other: UObject): DialogueVoiceFactory
        fun C(Other: Any): DialogueVoiceFactory
    }
}

external open class DialogueWaveFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var InitialSoundWave: SoundWave
    open var InitialSpeakerVoice: DialogueVoice
    open var HasSetInitialTargetVoice: Boolean
    open var InitialTargetVoices: Array<DialogueVoice>

    companion object {
        fun Load(ResourceName: String): DialogueWaveFactory
        fun Find(Outer: UObject, ResourceName: String): DialogueWaveFactory
        fun GetDefaultObject(): DialogueWaveFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DialogueWaveFactory
        fun C(Other: UObject): DialogueWaveFactory
        fun C(Other: Any): DialogueWaveFactory
    }
}

external open class ReverbEffectFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ReverbEffectFactory
        fun Find(Outer: UObject, ResourceName: String): ReverbEffectFactory
        fun GetDefaultObject(): ReverbEffectFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ReverbEffectFactory
        fun C(Other: UObject): ReverbEffectFactory
        fun C(Other: Any): ReverbEffectFactory
    }
}

external open class SoundAttenuationFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundAttenuationFactory
        fun Find(Outer: UObject, ResourceName: String): SoundAttenuationFactory
        fun GetDefaultObject(): SoundAttenuationFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundAttenuationFactory
        fun C(Other: UObject): SoundAttenuationFactory
        fun C(Other: Any): SoundAttenuationFactory
    }
}

external open class SoundClassFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundClassFactory
        fun Find(Outer: UObject, ResourceName: String): SoundClassFactory
        fun GetDefaultObject(): SoundClassFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundClassFactory
        fun C(Other: UObject): SoundClassFactory
        fun C(Other: Any): SoundClassFactory
    }
}

external open class SoundClassGraph : EdGraph {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundClassGraph
        fun Find(Outer: UObject, ResourceName: String): SoundClassGraph
        fun GetDefaultObject(): SoundClassGraph
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundClassGraph
        fun C(Other: UObject): SoundClassGraph
        fun C(Other: Any): SoundClassGraph
    }
}

external open class SoundClassGraphNode : EdGraphNode {
    constructor()
    constructor(Outer: UObject)
    open var SoundClass: SoundClass

    companion object {
        fun Load(ResourceName: String): SoundClassGraphNode
        fun Find(Outer: UObject, ResourceName: String): SoundClassGraphNode
        fun GetDefaultObject(): SoundClassGraphNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundClassGraphNode
        fun C(Other: UObject): SoundClassGraphNode
        fun C(Other: Any): SoundClassGraphNode
    }
}

external open class SoundClassGraphSchema : EdGraphSchema {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundClassGraphSchema
        fun Find(Outer: UObject, ResourceName: String): SoundClassGraphSchema
        fun GetDefaultObject(): SoundClassGraphSchema
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundClassGraphSchema
        fun C(Other: UObject): SoundClassGraphSchema
        fun C(Other: Any): SoundClassGraphSchema
    }
}

external open class SoundConcurrencyFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundConcurrencyFactory
        fun Find(Outer: UObject, ResourceName: String): SoundConcurrencyFactory
        fun GetDefaultObject(): SoundConcurrencyFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundConcurrencyFactory
        fun C(Other: UObject): SoundConcurrencyFactory
        fun C(Other: Any): SoundConcurrencyFactory
    }
}

external open class SoundCueFactoryNew : Factory {
    constructor()
    constructor(Outer: UObject)
    open var InitialSoundWave: SoundWave
    open var InitialDialogueWave: DialogueWave

    companion object {
        fun Load(ResourceName: String): SoundCueFactoryNew
        fun Find(Outer: UObject, ResourceName: String): SoundCueFactoryNew
        fun GetDefaultObject(): SoundCueFactoryNew
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundCueFactoryNew
        fun C(Other: UObject): SoundCueFactoryNew
        fun C(Other: Any): SoundCueFactoryNew
    }
}

external open class SoundCueGraph : EdGraph {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundCueGraph
        fun Find(Outer: UObject, ResourceName: String): SoundCueGraph
        fun GetDefaultObject(): SoundCueGraph
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundCueGraph
        fun C(Other: UObject): SoundCueGraph
        fun C(Other: Any): SoundCueGraph
    }
}

external open class SoundCueGraphNode_Base : EdGraphNode {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundCueGraphNode_Base
        fun Find(Outer: UObject, ResourceName: String): SoundCueGraphNode_Base
        fun GetDefaultObject(): SoundCueGraphNode_Base
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundCueGraphNode_Base
        fun C(Other: UObject): SoundCueGraphNode_Base
        fun C(Other: Any): SoundCueGraphNode_Base
    }
}

external open class SoundCueGraphNode : SoundCueGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var SoundNode: SoundNode

    companion object {
        fun Load(ResourceName: String): SoundCueGraphNode
        fun Find(Outer: UObject, ResourceName: String): SoundCueGraphNode
        fun GetDefaultObject(): SoundCueGraphNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundCueGraphNode
        fun C(Other: UObject): SoundCueGraphNode
        fun C(Other: Any): SoundCueGraphNode
    }
}

external open class SoundCueGraphNode_Root : SoundCueGraphNode_Base {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundCueGraphNode_Root
        fun Find(Outer: UObject, ResourceName: String): SoundCueGraphNode_Root
        fun GetDefaultObject(): SoundCueGraphNode_Root
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundCueGraphNode_Root
        fun C(Other: UObject): SoundCueGraphNode_Root
        fun C(Other: Any): SoundCueGraphNode_Root
    }
}

external open class SoundCueGraphSchema : EdGraphSchema {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundCueGraphSchema
        fun Find(Outer: UObject, ResourceName: String): SoundCueGraphSchema
        fun GetDefaultObject(): SoundCueGraphSchema
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundCueGraphSchema
        fun C(Other: UObject): SoundCueGraphSchema
        fun C(Other: Any): SoundCueGraphSchema
    }
}

external open class SoundMixFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundMixFactory
        fun Find(Outer: UObject, ResourceName: String): SoundMixFactory
        fun GetDefaultObject(): SoundMixFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundMixFactory
        fun C(Other: UObject): SoundMixFactory
        fun C(Other: Any): SoundMixFactory
    }
}

external open class SoundSourceBusFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundSourceBusFactory
        fun Find(Outer: UObject, ResourceName: String): SoundSourceBusFactory
        fun GetDefaultObject(): SoundSourceBusFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundSourceBusFactory
        fun C(Other: UObject): SoundSourceBusFactory
        fun C(Other: Any): SoundSourceBusFactory
    }
}

external open class SoundSourceEffectFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var SoundEffectSourcepresetClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): SoundSourceEffectFactory
        fun Find(Outer: UObject, ResourceName: String): SoundSourceEffectFactory
        fun GetDefaultObject(): SoundSourceEffectFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundSourceEffectFactory
        fun C(Other: UObject): SoundSourceEffectFactory
        fun C(Other: Any): SoundSourceEffectFactory
    }
}

external open class SoundSourceEffectChainFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundSourceEffectChainFactory
        fun Find(Outer: UObject, ResourceName: String): SoundSourceEffectChainFactory
        fun GetDefaultObject(): SoundSourceEffectChainFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundSourceEffectChainFactory
        fun C(Other: UObject): SoundSourceEffectChainFactory
        fun C(Other: Any): SoundSourceEffectChainFactory
    }
}

external open class SoundSubmixEffectFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var SoundEffectSubmixPresetClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): SoundSubmixEffectFactory
        fun Find(Outer: UObject, ResourceName: String): SoundSubmixEffectFactory
        fun GetDefaultObject(): SoundSubmixEffectFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundSubmixEffectFactory
        fun C(Other: UObject): SoundSubmixEffectFactory
        fun C(Other: Any): SoundSubmixEffectFactory
    }
}

external open class SoundSubmixFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundSubmixFactory
        fun Find(Outer: UObject, ResourceName: String): SoundSubmixFactory
        fun GetDefaultObject(): SoundSubmixFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundSubmixFactory
        fun C(Other: UObject): SoundSubmixFactory
        fun C(Other: Any): SoundSubmixFactory
    }
}

external open class SoundSubmixGraph : EdGraph {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundSubmixGraph
        fun Find(Outer: UObject, ResourceName: String): SoundSubmixGraph
        fun GetDefaultObject(): SoundSubmixGraph
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundSubmixGraph
        fun C(Other: UObject): SoundSubmixGraph
        fun C(Other: Any): SoundSubmixGraph
    }
}

external open class SoundSubmixGraphNode : EdGraphNode {
    constructor()
    constructor(Outer: UObject)
    open var SoundSubmix: SoundSubmix

    companion object {
        fun Load(ResourceName: String): SoundSubmixGraphNode
        fun Find(Outer: UObject, ResourceName: String): SoundSubmixGraphNode
        fun GetDefaultObject(): SoundSubmixGraphNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundSubmixGraphNode
        fun C(Other: UObject): SoundSubmixGraphNode
        fun C(Other: Any): SoundSubmixGraphNode
    }
}

external open class SoundSubmixGraphSchema : EdGraphSchema {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundSubmixGraphSchema
        fun Find(Outer: UObject, ResourceName: String): SoundSubmixGraphSchema
        fun GetDefaultObject(): SoundSubmixGraphSchema
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundSubmixGraphSchema
        fun C(Other: UObject): SoundSubmixGraphSchema
        fun C(Other: Any): SoundSubmixGraphSchema
    }
}

external interface `T$3` {
    var IsValid: Boolean
}

external interface `T$4` {
    var Times: Array<Number>
    var Values: Array<Vector>
}

external interface `T$5` {
    var MarkerNames: Array<String>
}

external interface `T$6` {
    var Times: Array<Number>
    var Values: Array<Transform>
}

external interface `T$7` {
    var Time: Number
}

external interface `T$8` {
    var Length: Number
}

external interface `T$9` {
    var LockType: String /* "RefPose" | "AnimFirstFrame" | "Zero" | "ERootMotionRootLock_MAX" */
}

external interface `T$10` {
    var ScaleData: Array<Vector>
}

external interface `T$11` {
    var RotationData: Array<Quat>
}

external interface `T$12` {
    var PositionData: Array<Vector>
}

external interface `T$13` {
    var PositionKeys: Array<Vector>
    var RotationKeys: Array<Quat>
    var ScalingKeys: Array<Vector>
}

external interface `T$14` {
    var RateScale: Number
}

external interface `T$15` {
    var NumFrames: Number
}

external interface `T$16` {
    var Frame: Number
}

external interface `T$17` {
    var Times: Array<Number>
    var Values: Array<Number>
}

external interface `T$18` {
    var CompressionScheme: AnimCompress
}

external interface `T$19` {
    var Poses: Array<Transform>
}

external interface `T$20` {
    var Poses: Array<Transform>
}

external interface `T$21` {
    var Pose: Transform
}

external interface `T$22` {
    var TrackNames: Array<String>
}

external interface `T$23` {
    var Markers: Array<AnimSyncMarker>
}

external interface `T$24` {
    var Markers: Array<AnimSyncMarker>
}

external interface `T$25` {
    var TrackNames: Array<String>
}

external interface `T$26` {
    var Events: Array<AnimNotifyEvent>
}

external interface `T$27` {
    var NotifyEvents: Array<AnimNotifyEvent>
}

external interface `T$28` {
    var EventNames: Array<String>
}

external interface `T$29` {
    var InterpolationType: String /* "Linear" | "Step" | "EAnimInterpolationType_MAX" */
}

external interface `T$30` {
    var AdditiveBasePoseType: String /* "ABPT_None" | "ABPT_RefPose" | "ABPT_AnimScaled" | "ABPT_AnimFrame" | "ABPT_MAX" */
}

external interface `T$31` {
    var AdditiveAnimationType: String /* "AAT_None" | "AAT_LocalSpaceBase" | "AAT_RotationOffsetMeshSpace" | "AAT_MAX" */
}

external interface `T$32` {
    var BonePath: Array<String>
}

external interface `T$33` {
    var bExists: Boolean
}

external interface `T$34` {
    var VirtualBoneName: String
}

external open class AnimationBlueprintLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimationBlueprintLibrary
        fun Find(Outer: UObject, ResourceName: String): AnimationBlueprintLibrary
        fun GetDefaultObject(): AnimationBlueprintLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationBlueprintLibrary
        fun SetRootMotionLockType(AnimationSequence: AnimSequence, RootMotionLockType: String /* "RefPose" | "AnimFirstFrame" | "Zero" | "ERootMotionRootLock_MAX" */)
        fun SetRootMotionEnabled(AnimationSequence: AnimSequence, bEnabled: Boolean)
        fun SetRateScale(AnimationSequence: AnimSequence, RateScale: Number)
        fun SetIsRootMotionLockForced(AnimationSequence: AnimSequence, bForced: Boolean)
        fun SetCompressionScheme(AnimationSequence: AnimSequence, CompressionScheme: AnimCompress)
        fun SetAnimationInterpolationType(AnimationSequence: AnimSequence, InterpolationType: String /* "Linear" | "Step" | "EAnimInterpolationType_MAX" */)
        fun SetAdditiveBasePoseType(AnimationSequence: AnimSequence, AdditiveBasePoseType: String /* "ABPT_None" | "ABPT_RefPose" | "ABPT_AnimScaled" | "ABPT_AnimFrame" | "ABPT_MAX" */)
        fun SetAdditiveAnimationType(AnimationSequence: AnimSequence, AdditiveAnimationType: String /* "AAT_None" | "AAT_LocalSpaceBase" | "AAT_RotationOffsetMeshSpace" | "AAT_MAX" */)
        fun RemoveVirtualBones(AnimationSequence: AnimSequence, VirtualBoneNames: Array<String>)
        fun RemoveVirtualBone(AnimationSequence: AnimSequence, VirtualBoneName: String)
        fun RemoveMetaDataOfClass(AnimationSequence: AnimSequence, MetaDataClass: UnrealEngineClass)
        fun RemoveMetaData(AnimationSequence: AnimSequence, MetaDataObject: AnimMetaData)
        fun RemoveCurve(AnimationSequence: AnimSequence, CurveName: String, bRemoveNameFromSkeleton: Boolean)
        fun RemoveBoneAnimation(AnimationSequence: AnimSequence, BoneName: String, bIncludeChildren: Boolean, bFinalize: Boolean)
        fun RemoveAnimationSyncMarkersByTrack(AnimationSequence: AnimSequence, NotifyTrackName: String): Number
        fun RemoveAnimationSyncMarkersByName(AnimationSequence: AnimSequence, MarkerName: String): Number
        fun RemoveAnimationNotifyTrack(AnimationSequence: AnimSequence, NotifyTrackName: String)
        fun RemoveAnimationNotifyEventsByTrack(AnimationSequence: AnimSequence, NotifyTrackName: String): Number
        fun RemoveAnimationNotifyEventsByName(AnimationSequence: AnimSequence, NotifyName: String): Number
        fun RemoveAllVirtualBones(AnimationSequence: AnimSequence)
        fun RemoveAllMetaData(AnimationSequence: AnimSequence)
        fun RemoveAllCurveData(AnimationSequence: AnimSequence)
        fun RemoveAllBoneAnimation(AnimationSequence: AnimSequence)
        fun RemoveAllAnimationSyncMarkers(AnimationSequence: AnimSequence)
        fun RemoveAllAnimationNotifyTracks(AnimationSequence: AnimSequence)
        fun IsValidTime(AnimationSequence: AnimSequence, Time: Number, IsValid: Boolean = definedExternally): `T$3`
        fun IsValidRawAnimationTrackName(AnimationSequence: AnimSequence, TrackName: String): Boolean
        fun IsValidAnimNotifyTrackName(AnimationSequence: AnimSequence, NotifyTrackName: String): Boolean
        fun IsValidAnimationSyncMarkerName(AnimationSequence: AnimSequence, MarkerName: String): Boolean
        fun IsRootMotionLockForced(AnimationSequence: AnimSequence): Boolean
        fun IsRootMotionEnabled(AnimationSequence: AnimSequence): Boolean
        fun GetVectorKeys(AnimationSequence: AnimSequence, CurveName: String, Times: Array<Number> = definedExternally, Values: Array<Vector> = definedExternally): `T$4`
        fun GetUniqueMarkerNames(AnimationSequence: AnimSequence, MarkerNames: Array<String> = definedExternally): `T$5`
        fun GetTransformationKeys(AnimationSequence: AnimSequence, CurveName: String, Times: Array<Number> = definedExternally, Values: Array<Transform> = definedExternally): `T$6`
        fun GetTimeAtFrame(AnimationSequence: AnimSequence, Frame: Number, Time: Number = definedExternally): `T$7`
        fun GetSequenceLength(AnimationSequence: AnimSequence, Length: Number = definedExternally): `T$8`
        fun GetRootMotionLockType(AnimationSequence: AnimSequence, LockType: String /* "RefPose" | "AnimFirstFrame" | "Zero" | "ERootMotionRootLock_MAX" */ = definedExternally): `T$9`
        fun GetRawTrackScaleData(AnimationSequence: AnimSequence, TrackName: String, ScaleData: Array<Vector> = definedExternally): `T$10`
        fun GetRawTrackRotationData(AnimationSequence: AnimSequence, TrackName: String, RotationData: Array<Quat> = definedExternally): `T$11`
        fun GetRawTrackPositionData(AnimationSequence: AnimSequence, TrackName: String, PositionData: Array<Vector> = definedExternally): `T$12`
        fun GetRawTrackData(AnimationSequence: AnimSequence, TrackName: String, PositionKeys: Array<Vector> = definedExternally, RotationKeys: Array<Quat> = definedExternally, ScalingKeys: Array<Vector> = definedExternally): `T$13`
        fun GetRateScale(AnimationSequence: AnimSequence, RateScale: Number = definedExternally): `T$14`
        fun GetNumFrames(AnimationSequence: AnimSequence, NumFrames: Number = definedExternally): `T$15`
        fun GetMetaDataOfClass(AnimationSequence: AnimSequence, MetaDataClass: UnrealEngineClass, MetaDataOfClass: Array<AnimMetaData>)
        fun GetMetaData(AnimationSequence: AnimSequence, MetaData: Array<AnimMetaData>)
        fun GetFrameAtTime(AnimationSequence: AnimSequence, Time: Number, Frame: Number = definedExternally): `T$16`
        fun GetFloatKeys(AnimationSequence: AnimSequence, CurveName: String, Times: Array<Number> = definedExternally, Values: Array<Number> = definedExternally): `T$17`
        fun GetCompressionScheme(AnimationSequence: AnimSequence, CompressionScheme: AnimCompress = definedExternally): `T$18`
        fun GetBonePosesForTime(AnimationSequence: AnimSequence, BoneNames: Array<String>, Time: Number, bExtractRootMotion: Boolean, Poses: Array<Transform> = definedExternally, PreviewMesh: SkeletalMesh = definedExternally): `T$19`
        fun GetBonePosesForFrame(AnimationSequence: AnimSequence, BoneNames: Array<String>, Frame: Number, bExtractRootMotion: Boolean, Poses: Array<Transform> = definedExternally, PreviewMesh: SkeletalMesh = definedExternally): `T$20`
        fun GetBonePoseForTime(AnimationSequence: AnimSequence, BoneName: String, Time: Number, bExtractRootMotion: Boolean, Pose: Transform = definedExternally): `T$21`
        fun GetBonePoseForFrame(AnimationSequence: AnimSequence, BoneName: String, Frame: Number, bExtractRootMotion: Boolean, Pose: Transform = definedExternally): `T$21`
        fun GetAnimNotifyEventTriggerTime(NotifyEvent: AnimNotifyEvent): Number
        fun GetAnimationTrackNames(AnimationSequence: AnimSequence, TrackNames: Array<String> = definedExternally): `T$22`
        fun GetAnimationSyncMarkersForTrack(AnimationSequence: AnimSequence, NotifyTrackName: String, Markers: Array<AnimSyncMarker> = definedExternally): `T$23`
        fun GetAnimationSyncMarkers(AnimationSequence: AnimSequence, Markers: Array<AnimSyncMarker> = definedExternally): `T$24`
        fun GetAnimationNotifyTrackNames(AnimationSequence: AnimSequence, TrackNames: Array<String> = definedExternally): `T$25`
        fun GetAnimationNotifyEventsForTrack(AnimationSequence: AnimSequence, NotifyTrackName: String, Events: Array<AnimNotifyEvent> = definedExternally): `T$26`
        fun GetAnimationNotifyEvents(AnimationSequence: AnimSequence, NotifyEvents: Array<AnimNotifyEvent> = definedExternally): `T$27`
        fun GetAnimationNotifyEventNames(AnimationSequence: AnimSequence, EventNames: Array<String> = definedExternally): `T$28`
        fun GetAnimationInterpolationType(AnimationSequence: AnimSequence, InterpolationType: String /* "Linear" | "Step" | "EAnimInterpolationType_MAX" */ = definedExternally): `T$29`
        fun GetAdditiveBasePoseType(AnimationSequence: AnimSequence, AdditiveBasePoseType: String /* "ABPT_None" | "ABPT_RefPose" | "ABPT_AnimScaled" | "ABPT_AnimFrame" | "ABPT_MAX" */ = definedExternally): `T$30`
        fun GetAdditiveAnimationType(AnimationSequence: AnimSequence, AdditiveAnimationType: String /* "AAT_None" | "AAT_LocalSpaceBase" | "AAT_RotationOffsetMeshSpace" | "AAT_MAX" */ = definedExternally): `T$31`
        fun FindBonePathToRoot(AnimationSequence: AnimSequence, BoneName: String, BonePath: Array<String> = definedExternally): `T$32`
        fun FinalizeBoneAnimation(AnimationSequence: AnimSequence)
        fun DoesCurveExist(AnimationSequence: AnimSequence, CurveName: String, CurveType: String /* "RCT_Float" | "RCT_Vector" | "RCT_Transform" | "RCT_MAX" */): Boolean
        fun DoesBoneNameExist(AnimationSequence: AnimSequence, BoneName: String, bExists: Boolean = definedExternally): `T$33`
        fun CopyAnimNotifiesFromSequence(SrcAnimSequence: AnimSequence, DestAnimSequence: AnimSequence)
        fun ContainsMetaDataOfClass(AnimationSequence: AnimSequence, MetaDataClass: UnrealEngineClass): Boolean
        fun AddVirtualBone(AnimationSequence: AnimSequence, SourceBoneName: String, TargetBoneName: String, VirtualBoneName: String = definedExternally): `T$34`
        fun AddVectorCurveKeys(AnimationSequence: AnimSequence, CurveName: String, Times: Array<Number>, Vectors: Array<Vector>)
        fun AddVectorCurveKey(AnimationSequence: AnimSequence, CurveName: String, Time: Number, Vector: Vector)
        fun AddTransformationCurveKeys(AnimationSequence: AnimSequence, CurveName: String, Times: Array<Number>, Transforms: Array<Transform>)
        fun AddTransformationCurveKey(AnimationSequence: AnimSequence, CurveName: String, Time: Number, Transform: Transform)
        fun AddMetaDataObject(AnimationSequence: AnimSequence, MetaDataObject: AnimMetaData)
        fun AddMetaData(AnimationSequence: AnimSequence, MetaDataClass: UnrealEngineClass, MetaDataInstance: AnimMetaData)
        fun AddFloatCurveKeys(AnimationSequence: AnimSequence, CurveName: String, Times: Array<Number>, Values: Array<Number>)
        fun AddFloatCurveKey(AnimationSequence: AnimSequence, CurveName: String, Time: Number, Value: Number)
        fun AddCurve(AnimationSequence: AnimSequence, CurveName: String, CurveType: String /* "RCT_Float" | "RCT_Vector" | "RCT_Transform" | "RCT_MAX" */, bMetaDataCurve: Boolean)
        fun AddAnimationSyncMarker(AnimationSequence: AnimSequence, MarkerName: String, Time: Number, NotifyTrackName: String)
        fun AddAnimationNotifyTrack(AnimationSequence: AnimSequence, NotifyTrackName: String, TrackColor: LinearColor)
        fun AddAnimationNotifyStateEventObject(AnimationSequence: AnimSequence, StartTime: Number, Duration: Number, NotifyState: AnimNotifyState, NotifyTrackName: String)
        fun AddAnimationNotifyStateEvent(AnimationSequence: AnimSequence, NotifyTrackName: String, StartTime: Number, Duration: Number, NotifyStateClass: UnrealEngineClass): AnimNotifyState
        fun AddAnimationNotifyEventObject(AnimationSequence: AnimSequence, StartTime: Number, Notify: AnimNotify, NotifyTrackName: String)
        fun AddAnimationNotifyEvent(AnimationSequence: AnimSequence, NotifyTrackName: String, StartTime: Number, NotifyClass: UnrealEngineClass): AnimNotify
        fun C(Other: UObject): AnimationBlueprintLibrary
        fun C(Other: Any): AnimationBlueprintLibrary
    }
}

external open class AnimationModifier : UObject {
    constructor()
    constructor(Outer: UObject)
    open var RevisionGuid: Guid
    open var AppliedGuid: Guid
    open var StoredNativeRevision: Number
    open fun OnRevert(AnimationSequence: AnimSequence)
    open fun OnApply(AnimationSequence: AnimSequence)

    companion object {
        fun Load(ResourceName: String): AnimationModifier
        fun Find(Outer: UObject, ResourceName: String): AnimationModifier
        fun GetDefaultObject(): AnimationModifier
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationModifier
        fun C(Other: UObject): AnimationModifier
        fun C(Other: Any): AnimationModifier
    }
}

external open class AnimationModifiersAssetUserData : AssetUserData {
    constructor()
    constructor(Outer: UObject)
    open var AnimationModifierInstances: Array<AnimationModifier>

    companion object {
        fun Load(ResourceName: String): AnimationModifiersAssetUserData
        fun Find(Outer: UObject, ResourceName: String): AnimationModifiersAssetUserData
        fun GetDefaultObject(): AnimationModifiersAssetUserData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationModifiersAssetUserData
        fun C(Other: UObject): AnimationModifiersAssetUserData
        fun C(Other: Any): AnimationModifiersAssetUserData
    }
}

external open class GameplayDebuggerNetPack {
    open fun clone(): GameplayDebuggerNetPack

    companion object {
        fun C(Other: UObject): GameplayDebuggerNetPack
        fun C(Other: Any): GameplayDebuggerNetPack
    }
}

external open class GameplayDebuggerDebugActor {
    open var Actor: Actor
    open var ActorName: String
    open var SyncCounter: Number
    open fun clone(): GameplayDebuggerDebugActor

    companion object {
        fun C(Other: UObject): GameplayDebuggerDebugActor
        fun C(Other: Any): GameplayDebuggerDebugActor
    }
}

external open class GameplayDebuggerRenderingComponent : PrimitiveComponent {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GameplayDebuggerRenderingComponent
        fun Find(Outer: UObject, ResourceName: String): GameplayDebuggerRenderingComponent
        fun GetDefaultObject(): GameplayDebuggerRenderingComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayDebuggerRenderingComponent
        fun C(Other: UObject): GameplayDebuggerRenderingComponent
        fun C(Other: Any): GameplayDebuggerRenderingComponent
    }
}

external open class GameplayDebuggerCategoryReplicator(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var OwnerPC: PlayerController
    open var bIsEnabled: Boolean
    open var ReplicatedData: GameplayDebuggerNetPack
    open var DebugActor: GameplayDebuggerDebugActor
    open var RenderingComp: GameplayDebuggerRenderingComponent
    open fun ServerSetEnabled(bEnable: Boolean)
    open fun ServerSetDebugActor(Actor: Actor, bSelectInEditor: Boolean)
    open fun ServerSetCategoryEnabled(CategoryId: Number, bEnable: Boolean)
    open fun ServerSendExtensionInputEvent(ExtensionId: Number, HandlerId: Number)
    open fun ServerSendCategoryInputEvent(CategoryId: Number, HandlerId: Number)

    companion object {
        fun GetDefaultObject(): GameplayDebuggerCategoryReplicator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayDebuggerCategoryReplicator
        fun C(Other: UObject): GameplayDebuggerCategoryReplicator
        fun C(Other: Any): GameplayDebuggerCategoryReplicator
    }
}

external object EGameplayDebuggerOverrideMode {
    var Enable: String /* "Enable" */
    var Disable: String /* "Disable" */
    var UseDefault: String /* "UseDefault" */
    var EGameplayDebuggerOverrideMode_MAX: String /* "EGameplayDebuggerOverrideMode_MAX" */
}

external open class GameplayDebuggerInputConfig {
    open var ConfigName: String
    open var Key: Key
    open var bModShift: Boolean
    open var bModCtrl: Boolean
    open var bModAlt: Boolean
    open var bModCmd: Boolean
    open fun clone(): GameplayDebuggerInputConfig

    companion object {
        fun C(Other: UObject): GameplayDebuggerInputConfig
        fun C(Other: Any): GameplayDebuggerInputConfig
    }
}

external open class GameplayDebuggerCategoryConfig {
    open var CategoryName: String
    open var SlotIdx: Number
    open var ActiveInGame: String /* "Enable" | "Disable" | "UseDefault" | "EGameplayDebuggerOverrideMode_MAX" */
    open var ActiveInSimulate: String /* "Enable" | "Disable" | "UseDefault" | "EGameplayDebuggerOverrideMode_MAX" */
    open var Hidden: String /* "Enable" | "Disable" | "UseDefault" | "EGameplayDebuggerOverrideMode_MAX" */
    open var bOverrideSlotIdx: Boolean
    open var InputHandlers: Array<GameplayDebuggerInputConfig>
    open fun clone(): GameplayDebuggerCategoryConfig

    companion object {
        fun C(Other: UObject): GameplayDebuggerCategoryConfig
        fun C(Other: Any): GameplayDebuggerCategoryConfig
    }
}

external open class GameplayDebuggerExtensionConfig {
    open var ExtensionName: String
    open var UseExtension: String /* "Enable" | "Disable" | "UseDefault" | "EGameplayDebuggerOverrideMode_MAX" */
    open var InputHandlers: Array<GameplayDebuggerInputConfig>
    open fun clone(): GameplayDebuggerExtensionConfig

    companion object {
        fun C(Other: UObject): GameplayDebuggerExtensionConfig
        fun C(Other: Any): GameplayDebuggerExtensionConfig
    }
}

external open class GameplayDebuggerConfig : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ActivationKey: Key
    open var CategoryRowNextKey: Key
    open var CategoryRowPrevKey: Key
    open var CategorySlot0: Key
    open var CategorySlot1: Key
    open var CategorySlot2: Key
    open var CategorySlot3: Key
    open var CategorySlot4: Key
    open var CategorySlot5: Key
    open var CategorySlot6: Key
    open var CategorySlot7: Key
    open var CategorySlot8: Key
    open var CategorySlot9: Key
    open var DebugCanvasPaddingLeft: Number
    open var DebugCanvasPaddingRight: Number
    open var DebugCanvasPaddingTop: Number
    open var DebugCanvasPaddingBottom: Number
    open var Categories: Array<GameplayDebuggerCategoryConfig>
    open var Extensions: Array<GameplayDebuggerExtensionConfig>

    companion object {
        fun Load(ResourceName: String): GameplayDebuggerConfig
        fun Find(Outer: UObject, ResourceName: String): GameplayDebuggerConfig
        fun GetDefaultObject(): GameplayDebuggerConfig
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayDebuggerConfig
        fun C(Other: UObject): GameplayDebuggerConfig
        fun C(Other: Any): GameplayDebuggerConfig
    }
}

external open class GameplayDebuggerPlayerData {
    open var Controller: GameplayDebuggerLocalController
    open var InputComponent: InputComponent
    open var Replicator: GameplayDebuggerCategoryReplicator
    open fun clone(): GameplayDebuggerPlayerData

    companion object {
        fun C(Other: UObject): GameplayDebuggerPlayerData
        fun C(Other: Any): GameplayDebuggerPlayerData
    }
}

external open class GameplayDebuggerPlayerManager(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var PlayerData: Array<GameplayDebuggerPlayerData>
    open var PendingRegistrations: Array<GameplayDebuggerCategoryReplicator>

    companion object {
        fun GetDefaultObject(): GameplayDebuggerPlayerManager
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayDebuggerPlayerManager
        fun C(Other: UObject): GameplayDebuggerPlayerManager
        fun C(Other: Any): GameplayDebuggerPlayerManager
    }
}

external open class GameplayDebuggerLocalController : UObject {
    constructor()
    constructor(Outer: UObject)
    open var CachedReplicator: GameplayDebuggerCategoryReplicator
    open var CachedPlayerManager: GameplayDebuggerPlayerManager
    open var DebugActorCandidate: Actor

    companion object {
        fun Load(ResourceName: String): GameplayDebuggerLocalController
        fun Find(Outer: UObject, ResourceName: String): GameplayDebuggerLocalController
        fun GetDefaultObject(): GameplayDebuggerLocalController
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayDebuggerLocalController
        fun C(Other: UObject): GameplayDebuggerLocalController
        fun C(Other: Any): GameplayDebuggerLocalController
    }
}

external open class GameplayTask_ClaimResource : GameplayTask {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GameplayTask_ClaimResource
        fun Find(Outer: UObject, ResourceName: String): GameplayTask_ClaimResource
        fun GetDefaultObject(): GameplayTask_ClaimResource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayTask_ClaimResource
        fun C(Other: UObject): GameplayTask_ClaimResource
        fun C(Other: Any): GameplayTask_ClaimResource
    }
}

external interface `T$35` {
    var SpawnedActor: Actor
    var `$`: Boolean
}

external open class GameplayTask_SpawnActor : GameplayTask {
    constructor()
    constructor(Outer: UObject)
    open var Success: UnrealEngineMulticastDelegate<(SpawnedActor: Actor) -> Unit>
    open var DidNotSpawn: UnrealEngineMulticastDelegate<(SpawnedActor: Actor) -> Unit>
    open var ClassToSpawn: UnrealEngineClass
    open fun FinishSpawningActor(WorldContextObject: UObject, SpawnedActor: Actor)
    open fun BeginSpawningActor(WorldContextObject: UObject, SpawnedActor: Actor = definedExternally): `T$35`

    companion object {
        fun Load(ResourceName: String): GameplayTask_SpawnActor
        fun Find(Outer: UObject, ResourceName: String): GameplayTask_SpawnActor
        fun GetDefaultObject(): GameplayTask_SpawnActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayTask_SpawnActor
        fun C(Other: UObject): GameplayTask_SpawnActor
        fun C(Other: Any): GameplayTask_SpawnActor
    }
}

external open class GameplayTask_TimeLimitedExecution : GameplayTask {
    constructor()
    constructor(Outer: UObject)
    open var OnFinished: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnTimeExpired: UnrealEngineMulticastDelegate<() -> Unit>

    companion object {
        fun Load(ResourceName: String): GameplayTask_TimeLimitedExecution
        fun Find(Outer: UObject, ResourceName: String): GameplayTask_TimeLimitedExecution
        fun GetDefaultObject(): GameplayTask_TimeLimitedExecution
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayTask_TimeLimitedExecution
        fun C(Other: UObject): GameplayTask_TimeLimitedExecution
        fun C(Other: Any): GameplayTask_TimeLimitedExecution
    }
}

external open class GameplayTask_WaitDelay : GameplayTask {
    constructor()
    constructor(Outer: UObject)
    open var OnFinish: UnrealEngineMulticastDelegate<() -> Unit>

    companion object {
        fun Load(ResourceName: String): GameplayTask_WaitDelay
        fun Find(Outer: UObject, ResourceName: String): GameplayTask_WaitDelay
        fun GetDefaultObject(): GameplayTask_WaitDelay
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayTask_WaitDelay
        fun C(Other: UObject): GameplayTask_WaitDelay
        fun C(Other: Any): GameplayTask_WaitDelay
    }
}

external open class GameplayTaskOwnerInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GameplayTaskOwnerInterface
        fun Find(Outer: UObject, ResourceName: String): GameplayTaskOwnerInterface
        fun GetDefaultObject(): GameplayTaskOwnerInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayTaskOwnerInterface
        fun C(Other: UObject): GameplayTaskOwnerInterface
        fun C(Other: Any): GameplayTaskOwnerInterface
    }
}

external open class AIBlueprintHelperLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AIBlueprintHelperLibrary
        fun Find(Outer: UObject, ResourceName: String): AIBlueprintHelperLibrary
        fun GetDefaultObject(): AIBlueprintHelperLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AIBlueprintHelperLibrary
        fun UnlockAIResourcesWithAnimation(AnimInstance: AnimInstance, bUnlockMovement: Boolean, UnlockAILogic: Boolean)
        fun SpawnAIFromClass(WorldContextObject: UObject, PawnClass: UnrealEngineClass, BehaviorTree: BehaviorTree, Location: Vector, Rotation: Rotator, bNoCollisionFail: Boolean): Pawn
        fun SimpleMoveToLocation(Controller: Controller, Goal: Vector)
        fun SimpleMoveToActor(Controller: Controller, Goal: Actor)
        fun SendAIMessage(Target: Pawn, Message: String, MessageSource: UObject, bSuccess: Boolean)
        fun LockAIResourcesWithAnimation(AnimInstance: AnimInstance, bLockMovement: Boolean, LockAILogic: Boolean)
        fun IsValidAIRotation(Rotation: Rotator): Boolean
        fun IsValidAILocation(Location: Vector): Boolean
        fun IsValidAIDirection(DirectionVector: Vector): Boolean
        fun GetCurrentPath(Controller: Controller): NavigationPath
        fun GetBlackboard(Target: Actor): BlackboardComponent
        fun GetAIController(ControlledActor: Actor): AIController
        fun CreateMoveToProxyObject(WorldContextObject: UObject, Pawn: Pawn, Destination: Vector, TargetActor: Actor, AcceptanceRadius: Number, bStopOnOverlap: Boolean): AIAsyncTaskBlueprintProxy
        fun C(Other: UObject): AIBlueprintHelperLibrary
        fun C(Other: Any): AIBlueprintHelperLibrary
    }
}

external open class AIDataProvider_QueryParams : AIDataProvider {
    constructor()
    constructor(Outer: UObject)
    open var ParamName: String
    open var FloatValue: Number
    open var IntValue: Number
    open var BoolValue: Boolean

    companion object {
        fun Load(ResourceName: String): AIDataProvider_QueryParams
        fun Find(Outer: UObject, ResourceName: String): AIDataProvider_QueryParams
        fun GetDefaultObject(): AIDataProvider_QueryParams
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AIDataProvider_QueryParams
        fun C(Other: UObject): AIDataProvider_QueryParams
        fun C(Other: Any): AIDataProvider_QueryParams
    }
}

external open class AIDataProvider_Random : AIDataProvider_QueryParams {
    constructor()
    constructor(Outer: UObject)
    open var Min: Number
    open var Max: Number
    open var bInteger: Boolean

    companion object {
        fun Load(ResourceName: String): AIDataProvider_Random
        fun Find(Outer: UObject, ResourceName: String): AIDataProvider_Random
        fun GetDefaultObject(): AIDataProvider_Random
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AIDataProvider_Random
        fun C(Other: UObject): AIDataProvider_Random
        fun C(Other: Any): AIDataProvider_Random
    }
}

external open class AIPerceptionListenerInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AIPerceptionListenerInterface
        fun Find(Outer: UObject, ResourceName: String): AIPerceptionListenerInterface
        fun GetDefaultObject(): AIPerceptionListenerInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AIPerceptionListenerInterface
        fun C(Other: UObject): AIPerceptionListenerInterface
        fun C(Other: Any): AIPerceptionListenerInterface
    }
}

external open class AIPerceptionStimuliSourceComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var bAutoRegisterAsSource: Boolean
    open var RegisterAsSourceForSenses: Array<UnrealEngineClass>
    open fun UnregisterFromSense(SenseClass: UnrealEngineClass)
    open fun UnregisterFromPerceptionSystem()
    open fun RegisterWithPerceptionSystem()
    open fun RegisterForSense(SenseClass: UnrealEngineClass)

    companion object {
        fun Load(ResourceName: String): AIPerceptionStimuliSourceComponent
        fun Find(Outer: UObject, ResourceName: String): AIPerceptionStimuliSourceComponent
        fun GetDefaultObject(): AIPerceptionStimuliSourceComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AIPerceptionStimuliSourceComponent
        fun C(Other: UObject): AIPerceptionStimuliSourceComponent
        fun C(Other: Any): AIPerceptionStimuliSourceComponent
    }
}

external open class AIResourceInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AIResourceInterface
        fun Find(Outer: UObject, ResourceName: String): AIResourceInterface
        fun GetDefaultObject(): AIResourceInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AIResourceInterface
        fun C(Other: UObject): AIResourceInterface
        fun C(Other: Any): AIResourceInterface
    }
}

external open class AIResource_Movement : GameplayTaskResource {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AIResource_Movement
        fun Find(Outer: UObject, ResourceName: String): AIResource_Movement
        fun GetDefaultObject(): AIResource_Movement
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AIResource_Movement
        fun C(Other: UObject): AIResource_Movement
        fun C(Other: Any): AIResource_Movement
    }
}

external open class AIResource_Logic : GameplayTaskResource {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AIResource_Logic
        fun Find(Outer: UObject, ResourceName: String): AIResource_Logic
        fun GetDefaultObject(): AIResource_Logic
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AIResource_Logic
        fun C(Other: UObject): AIResource_Logic
        fun C(Other: Any): AIResource_Logic
    }
}

external interface `T$36` {
    var ListenerComponents: Array<AIPerceptionComponent>
}

external interface `T$37` {
    var ListenerActors: Array<Actor>
}

external open class AISense_Blueprint : AISense {
    constructor()
    constructor(Outer: UObject)
    open var ListenerDataType: UnrealEngineClass
    open var ListenerContainer: Array<AIPerceptionComponent>
    open var UnprocessedEvents: Array<AISenseEvent>
    open fun OnUpdate(EventsToProcess: Array<AISenseEvent>): Number
    open fun OnListenerUpdated(ActorListener: Actor, PerceptionComponent: AIPerceptionComponent)
    open fun OnListenerUnregistered(ActorListener: Actor, PerceptionComponent: AIPerceptionComponent)
    open fun OnListenerRegistered(ActorListener: Actor, PerceptionComponent: AIPerceptionComponent)
    open fun K2_OnNewPawn(NewPawn: Pawn)
    open fun GetAllListenerComponents(ListenerComponents: Array<AIPerceptionComponent> = definedExternally): `T$36`
    open fun GetAllListenerActors(ListenerActors: Array<Actor> = definedExternally): `T$37`

    companion object {
        fun Load(ResourceName: String): AISense_Blueprint
        fun Find(Outer: UObject, ResourceName: String): AISense_Blueprint
        fun GetDefaultObject(): AISense_Blueprint
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISense_Blueprint
        fun C(Other: UObject): AISense_Blueprint
        fun C(Other: Any): AISense_Blueprint
    }
}

external open class AIDamageEvent {
    open var Amount: Number
    open var Location: Vector
    open var HitLocation: Vector
    open var DamagedActor: Actor
    open var Instigator: Actor
    open fun clone(): AIDamageEvent

    companion object {
        fun C(Other: UObject): AIDamageEvent
        fun C(Other: Any): AIDamageEvent
    }
}

external open class AISense_Damage : AISense {
    constructor()
    constructor(Outer: UObject)
    open var RegisteredEvents: Array<AIDamageEvent>

    companion object {
        fun Load(ResourceName: String): AISense_Damage
        fun Find(Outer: UObject, ResourceName: String): AISense_Damage
        fun GetDefaultObject(): AISense_Damage
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISense_Damage
        fun ReportDamageEvent(WorldContextObject: UObject, DamagedActor: Actor, Instigator: Actor, DamageAmount: Number, EventLocation: Vector, HitLocation: Vector)
        fun C(Other: UObject): AISense_Damage
        fun C(Other: Any): AISense_Damage
    }
}

external open class AINoiseEvent {
    open var NoiseLocation: Vector
    open var Loudness: Number
    open var MaxRange: Number
    open var Instigator: Actor
    open var Tag: String
    open fun clone(): AINoiseEvent

    companion object {
        fun C(Other: UObject): AINoiseEvent
        fun C(Other: Any): AINoiseEvent
    }
}

external open class AISense_Hearing : AISense {
    constructor()
    constructor(Outer: UObject)
    open var NoiseEvents: Array<AINoiseEvent>
    open var SpeedOfSoundSq: Number

    companion object {
        fun Load(ResourceName: String): AISense_Hearing
        fun Find(Outer: UObject, ResourceName: String): AISense_Hearing
        fun GetDefaultObject(): AISense_Hearing
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISense_Hearing
        fun ReportNoiseEvent(WorldContextObject: UObject, NoiseLocation: Vector, Loudness: Number, Instigator: Actor, MaxRange: Number, Tag: String)
        fun C(Other: UObject): AISense_Hearing
        fun C(Other: Any): AISense_Hearing
    }
}

external open class AIPredictionEvent {
    open var Requestor: Actor
    open var PredictedActor: Actor
    open fun clone(): AIPredictionEvent

    companion object {
        fun C(Other: UObject): AIPredictionEvent
        fun C(Other: Any): AIPredictionEvent
    }
}

external open class AISense_Prediction : AISense {
    constructor()
    constructor(Outer: UObject)
    open var RegisteredEvents: Array<AIPredictionEvent>

    companion object {
        fun Load(ResourceName: String): AISense_Prediction
        fun Find(Outer: UObject, ResourceName: String): AISense_Prediction
        fun GetDefaultObject(): AISense_Prediction
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISense_Prediction
        fun RequestPawnPredictionEvent(Requestor: Pawn, PredictedActor: Actor, PredictionTime: Number)
        fun RequestControllerPredictionEvent(Requestor: AIController, PredictedActor: Actor, PredictionTime: Number)
        fun C(Other: UObject): AISense_Prediction
        fun C(Other: Any): AISense_Prediction
    }
}

external open class AISense_Sight : AISense {
    constructor()
    constructor(Outer: UObject)
    open var MaxTracesPerTick: Number
    open var MinQueriesPerTimeSliceCheck: Number
    open var MaxTimeSlicePerTick: Any
    open var HighImportanceQueryDistanceThreshold: Number
    open var MaxQueryImportance: Number
    open var SightLimitQueryImportance: Number

    companion object {
        fun Load(ResourceName: String): AISense_Sight
        fun Find(Outer: UObject, ResourceName: String): AISense_Sight
        fun GetDefaultObject(): AISense_Sight
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISense_Sight
        fun C(Other: UObject): AISense_Sight
        fun C(Other: Any): AISense_Sight
    }
}

external open class AITeamStimulusEvent {
    open var Broadcaster: Actor
    open var Enemy: Actor
    open fun clone(): AITeamStimulusEvent

    companion object {
        fun C(Other: UObject): AITeamStimulusEvent
        fun C(Other: Any): AITeamStimulusEvent
    }
}

external open class AISense_Team : AISense {
    constructor()
    constructor(Outer: UObject)
    open var RegisteredEvents: Array<AITeamStimulusEvent>

    companion object {
        fun Load(ResourceName: String): AISense_Team
        fun Find(Outer: UObject, ResourceName: String): AISense_Team
        fun GetDefaultObject(): AISense_Team
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISense_Team
        fun C(Other: UObject): AISense_Team
        fun C(Other: Any): AISense_Team
    }
}

external open class AITouchEvent {
    open var TouchReceiver: Actor
    open var OtherActor: Actor
    open fun clone(): AITouchEvent

    companion object {
        fun C(Other: UObject): AITouchEvent
        fun C(Other: Any): AITouchEvent
    }
}

external open class AISense_Touch : AISense {
    constructor()
    constructor(Outer: UObject)
    open var RegisteredEvents: Array<AITouchEvent>

    companion object {
        fun Load(ResourceName: String): AISense_Touch
        fun Find(Outer: UObject, ResourceName: String): AISense_Touch
        fun GetDefaultObject(): AISense_Touch
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISense_Touch
        fun C(Other: UObject): AISense_Touch
        fun C(Other: Any): AISense_Touch
    }
}

external open class AISenseBlueprintListener : UserDefinedStruct {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AISenseBlueprintListener
        fun Find(Outer: UObject, ResourceName: String): AISenseBlueprintListener
        fun GetDefaultObject(): AISenseBlueprintListener
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISenseBlueprintListener
        fun C(Other: UObject): AISenseBlueprintListener
        fun C(Other: Any): AISenseBlueprintListener
    }
}

external open class AISenseConfig_Blueprint : AISenseConfig {
    constructor()
    constructor(Outer: UObject)
    open var Implementation: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): AISenseConfig_Blueprint
        fun Find(Outer: UObject, ResourceName: String): AISenseConfig_Blueprint
        fun GetDefaultObject(): AISenseConfig_Blueprint
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISenseConfig_Blueprint
        fun C(Other: UObject): AISenseConfig_Blueprint
        fun C(Other: Any): AISenseConfig_Blueprint
    }
}

external open class AISenseConfig_Damage : AISenseConfig {
    constructor()
    constructor(Outer: UObject)
    open var Implementation: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): AISenseConfig_Damage
        fun Find(Outer: UObject, ResourceName: String): AISenseConfig_Damage
        fun GetDefaultObject(): AISenseConfig_Damage
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISenseConfig_Damage
        fun C(Other: UObject): AISenseConfig_Damage
        fun C(Other: Any): AISenseConfig_Damage
    }
}

external open class AISenseAffiliationFilter {
    open var bDetectEnemies: Boolean
    open var bDetectNeutrals: Boolean
    open var bDetectFriendlies: Boolean
    open fun clone(): AISenseAffiliationFilter

    companion object {
        fun C(Other: UObject): AISenseAffiliationFilter
        fun C(Other: Any): AISenseAffiliationFilter
    }
}

external open class AISenseConfig_Hearing : AISenseConfig {
    constructor()
    constructor(Outer: UObject)
    open var Implementation: UnrealEngineClass
    open var HearingRange: Number
    open var LoSHearingRange: Number
    open var bUseLoSHearing: Boolean
    open var DetectionByAffiliation: AISenseAffiliationFilter

    companion object {
        fun Load(ResourceName: String): AISenseConfig_Hearing
        fun Find(Outer: UObject, ResourceName: String): AISenseConfig_Hearing
        fun GetDefaultObject(): AISenseConfig_Hearing
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISenseConfig_Hearing
        fun C(Other: UObject): AISenseConfig_Hearing
        fun C(Other: Any): AISenseConfig_Hearing
    }
}

external open class AISenseConfig_Prediction : AISenseConfig {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AISenseConfig_Prediction
        fun Find(Outer: UObject, ResourceName: String): AISenseConfig_Prediction
        fun GetDefaultObject(): AISenseConfig_Prediction
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISenseConfig_Prediction
        fun C(Other: UObject): AISenseConfig_Prediction
        fun C(Other: Any): AISenseConfig_Prediction
    }
}

external open class AISenseConfig_Sight : AISenseConfig {
    constructor()
    constructor(Outer: UObject)
    open var Implementation: UnrealEngineClass
    open var SightRadius: Number
    open var LoseSightRadius: Number
    open var PeripheralVisionAngleDegrees: Number
    open var DetectionByAffiliation: AISenseAffiliationFilter
    open var AutoSuccessRangeFromLastSeenLocation: Number

    companion object {
        fun Load(ResourceName: String): AISenseConfig_Sight
        fun Find(Outer: UObject, ResourceName: String): AISenseConfig_Sight
        fun GetDefaultObject(): AISenseConfig_Sight
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISenseConfig_Sight
        fun C(Other: UObject): AISenseConfig_Sight
        fun C(Other: Any): AISenseConfig_Sight
    }
}

external open class AISenseConfig_Team : AISenseConfig {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AISenseConfig_Team
        fun Find(Outer: UObject, ResourceName: String): AISenseConfig_Team
        fun GetDefaultObject(): AISenseConfig_Team
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISenseConfig_Team
        fun C(Other: UObject): AISenseConfig_Team
        fun C(Other: Any): AISenseConfig_Team
    }
}

external open class AISenseConfig_Touch : AISenseConfig {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AISenseConfig_Touch
        fun Find(Outer: UObject, ResourceName: String): AISenseConfig_Touch
        fun GetDefaultObject(): AISenseConfig_Touch
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISenseConfig_Touch
        fun C(Other: UObject): AISenseConfig_Touch
        fun C(Other: Any): AISenseConfig_Touch
    }
}

external open class AISenseEvent_Damage : AISenseEvent {
    constructor()
    constructor(Outer: UObject)
    open var Event: AIDamageEvent

    companion object {
        fun Load(ResourceName: String): AISenseEvent_Damage
        fun Find(Outer: UObject, ResourceName: String): AISenseEvent_Damage
        fun GetDefaultObject(): AISenseEvent_Damage
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISenseEvent_Damage
        fun C(Other: UObject): AISenseEvent_Damage
        fun C(Other: Any): AISenseEvent_Damage
    }
}

external open class AISenseEvent_Hearing : AISenseEvent {
    constructor()
    constructor(Outer: UObject)
    open var Event: AINoiseEvent

    companion object {
        fun Load(ResourceName: String): AISenseEvent_Hearing
        fun Find(Outer: UObject, ResourceName: String): AISenseEvent_Hearing
        fun GetDefaultObject(): AISenseEvent_Hearing
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISenseEvent_Hearing
        fun C(Other: UObject): AISenseEvent_Hearing
        fun C(Other: Any): AISenseEvent_Hearing
    }
}

external open class AISightTargetInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AISightTargetInterface
        fun Find(Outer: UObject, ResourceName: String): AISightTargetInterface
        fun GetDefaultObject(): AISightTargetInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISightTargetInterface
        fun C(Other: UObject): AISightTargetInterface
        fun C(Other: Any): AISightTargetInterface
    }
}

external open class AITask : GameplayTask {
    constructor()
    constructor(Outer: UObject)
    open var OwnerController: AIController

    companion object {
        fun Load(ResourceName: String): AITask
        fun Find(Outer: UObject, ResourceName: String): AITask
        fun GetDefaultObject(): AITask
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AITask
        fun C(Other: UObject): AITask
        fun C(Other: Any): AITask
    }
}

external open class AITask_LockLogic : AITask {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AITask_LockLogic
        fun Find(Outer: UObject, ResourceName: String): AITask_LockLogic
        fun GetDefaultObject(): AITask_LockLogic
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AITask_LockLogic
        fun C(Other: UObject): AITask_LockLogic
        fun C(Other: Any): AITask_LockLogic
    }
}

external open class AIMoveRequest {
    open var GoalActor: Actor
    open fun clone(): AIMoveRequest

    companion object {
        fun C(Other: UObject): AIMoveRequest
        fun C(Other: Any): AIMoveRequest
    }
}

external object EAIOptionFlag {
    var Default: String /* "Default" */
    var Enable: String /* "Enable" */
    var Disable: String /* "Disable" */
    var MAX: String /* "MAX" */
}

external open class AITask_MoveTo : AITask {
    constructor()
    constructor(Outer: UObject)
    open var OnRequestFailed: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnMoveFinished: UnrealEngineMulticastDelegate<(Result: String /* "Success" | "Blocked" | "OffPath" | "Aborted" | "Skipped_DEPRECATED" | "Invalid" | "EPathFollowingResult_MAX" */, AIController: AIController) -> Unit>
    open var MoveRequest: AIMoveRequest

    companion object {
        fun Load(ResourceName: String): AITask_MoveTo
        fun Find(Outer: UObject, ResourceName: String): AITask_MoveTo
        fun GetDefaultObject(): AITask_MoveTo
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AITask_MoveTo
        fun AIMoveTo(Controller: AIController, GoalLocation: Vector, GoalActor: Actor, AcceptanceRadius: Number, StopOnOverlap: String /* "Default" | "Enable" | "Disable" | "MAX" */, AcceptPartialPath: String /* "Default" | "Enable" | "Disable" | "MAX" */, bUsePathfinding: Boolean, bLockAILogic: Boolean, bUseContinuosGoalTracking: Boolean, ProjectGoalOnNavigation: String /* "Default" | "Enable" | "Disable" | "MAX" */): AITask_MoveTo
        fun C(Other: UObject): AITask_MoveTo
        fun C(Other: Any): AITask_MoveTo
    }
}

external open class AITask_RunEQS : AITask {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AITask_RunEQS
        fun Find(Outer: UObject, ResourceName: String): AITask_RunEQS
        fun GetDefaultObject(): AITask_RunEQS
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AITask_RunEQS
        fun RunEQS(Controller: AIController, QueryTemplate: EnvQuery): AITask_RunEQS
        fun C(Other: UObject): AITask_RunEQS
        fun C(Other: Any): AITask_RunEQS
    }
}

external open class BehaviorTreeTypes : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BehaviorTreeTypes
        fun Find(Outer: UObject, ResourceName: String): BehaviorTreeTypes
        fun GetDefaultObject(): BehaviorTreeTypes
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BehaviorTreeTypes
        fun C(Other: UObject): BehaviorTreeTypes
        fun C(Other: Any): BehaviorTreeTypes
    }
}

external open class BlackboardKeyType_Bool : BlackboardKeyType {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlackboardKeyType_Bool
        fun Find(Outer: UObject, ResourceName: String): BlackboardKeyType_Bool
        fun GetDefaultObject(): BlackboardKeyType_Bool
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlackboardKeyType_Bool
        fun C(Other: UObject): BlackboardKeyType_Bool
        fun C(Other: Any): BlackboardKeyType_Bool
    }
}

external open class BlackboardKeyType_Class : BlackboardKeyType {
    constructor()
    constructor(Outer: UObject)
    open var BaseClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): BlackboardKeyType_Class
        fun Find(Outer: UObject, ResourceName: String): BlackboardKeyType_Class
        fun GetDefaultObject(): BlackboardKeyType_Class
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlackboardKeyType_Class
        fun C(Other: UObject): BlackboardKeyType_Class
        fun C(Other: Any): BlackboardKeyType_Class
    }
}

external open class BlackboardKeyType_Enum : BlackboardKeyType {
    constructor()
    constructor(Outer: UObject)
    open var EnumType: Enum
    open var EnumName: String
    open var bIsEnumNameValid: Boolean

    companion object {
        fun Load(ResourceName: String): BlackboardKeyType_Enum
        fun Find(Outer: UObject, ResourceName: String): BlackboardKeyType_Enum
        fun GetDefaultObject(): BlackboardKeyType_Enum
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlackboardKeyType_Enum
        fun C(Other: UObject): BlackboardKeyType_Enum
        fun C(Other: Any): BlackboardKeyType_Enum
    }
}

external open class BlackboardKeyType_Float : BlackboardKeyType {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlackboardKeyType_Float
        fun Find(Outer: UObject, ResourceName: String): BlackboardKeyType_Float
        fun GetDefaultObject(): BlackboardKeyType_Float
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlackboardKeyType_Float
        fun C(Other: UObject): BlackboardKeyType_Float
        fun C(Other: Any): BlackboardKeyType_Float
    }
}

external open class BlackboardKeyType_Int : BlackboardKeyType {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlackboardKeyType_Int
        fun Find(Outer: UObject, ResourceName: String): BlackboardKeyType_Int
        fun GetDefaultObject(): BlackboardKeyType_Int
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlackboardKeyType_Int
        fun C(Other: UObject): BlackboardKeyType_Int
        fun C(Other: Any): BlackboardKeyType_Int
    }
}

external open class BlackboardKeyType_Name : BlackboardKeyType {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlackboardKeyType_Name
        fun Find(Outer: UObject, ResourceName: String): BlackboardKeyType_Name
        fun GetDefaultObject(): BlackboardKeyType_Name
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlackboardKeyType_Name
        fun C(Other: UObject): BlackboardKeyType_Name
        fun C(Other: Any): BlackboardKeyType_Name
    }
}

external open class BlackboardKeyType_NativeEnum : BlackboardKeyType {
    constructor()
    constructor(Outer: UObject)
    open var EnumName: String
    open var EnumType: Enum

    companion object {
        fun Load(ResourceName: String): BlackboardKeyType_NativeEnum
        fun Find(Outer: UObject, ResourceName: String): BlackboardKeyType_NativeEnum
        fun GetDefaultObject(): BlackboardKeyType_NativeEnum
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlackboardKeyType_NativeEnum
        fun C(Other: UObject): BlackboardKeyType_NativeEnum
        fun C(Other: Any): BlackboardKeyType_NativeEnum
    }
}

external open class BlackboardKeyType_Object : BlackboardKeyType {
    constructor()
    constructor(Outer: UObject)
    open var BaseClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): BlackboardKeyType_Object
        fun Find(Outer: UObject, ResourceName: String): BlackboardKeyType_Object
        fun GetDefaultObject(): BlackboardKeyType_Object
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlackboardKeyType_Object
        fun C(Other: UObject): BlackboardKeyType_Object
        fun C(Other: Any): BlackboardKeyType_Object
    }
}

external open class BlackboardKeyType_Rotator : BlackboardKeyType {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlackboardKeyType_Rotator
        fun Find(Outer: UObject, ResourceName: String): BlackboardKeyType_Rotator
        fun GetDefaultObject(): BlackboardKeyType_Rotator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlackboardKeyType_Rotator
        fun C(Other: UObject): BlackboardKeyType_Rotator
        fun C(Other: Any): BlackboardKeyType_Rotator
    }
}

external open class BlackboardKeyType_String : BlackboardKeyType {
    constructor()
    constructor(Outer: UObject)
    open var StringValue: String

    companion object {
        fun Load(ResourceName: String): BlackboardKeyType_String
        fun Find(Outer: UObject, ResourceName: String): BlackboardKeyType_String
        fun GetDefaultObject(): BlackboardKeyType_String
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlackboardKeyType_String
        fun C(Other: UObject): BlackboardKeyType_String
        fun C(Other: Any): BlackboardKeyType_String
    }
}

external open class BlackboardKeyType_Vector : BlackboardKeyType {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlackboardKeyType_Vector
        fun Find(Outer: UObject, ResourceName: String): BlackboardKeyType_Vector
        fun GetDefaultObject(): BlackboardKeyType_Vector
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlackboardKeyType_Vector
        fun C(Other: UObject): BlackboardKeyType_Vector
        fun C(Other: Any): BlackboardKeyType_Vector
    }
}

external open class BTComposite_Selector : BTCompositeNode {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BTComposite_Selector
        fun Find(Outer: UObject, ResourceName: String): BTComposite_Selector
        fun GetDefaultObject(): BTComposite_Selector
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTComposite_Selector
        fun C(Other: UObject): BTComposite_Selector
        fun C(Other: Any): BTComposite_Selector
    }
}

external open class BTComposite_Sequence : BTCompositeNode {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BTComposite_Sequence
        fun Find(Outer: UObject, ResourceName: String): BTComposite_Sequence
        fun GetDefaultObject(): BTComposite_Sequence
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTComposite_Sequence
        fun C(Other: UObject): BTComposite_Sequence
        fun C(Other: Any): BTComposite_Sequence
    }
}

external object EBTParallelMode {
    var AbortBackground: String /* "AbortBackground" */
    var WaitForBackground: String /* "WaitForBackground" */
    var EBTParallelMode_MAX: String /* "EBTParallelMode_MAX" */
}

external open class BTComposite_SimpleParallel : BTCompositeNode {
    constructor()
    constructor(Outer: UObject)
    open var FinishMode: String /* "AbortBackground" | "WaitForBackground" | "EBTParallelMode_MAX" */

    companion object {
        fun Load(ResourceName: String): BTComposite_SimpleParallel
        fun Find(Outer: UObject, ResourceName: String): BTComposite_SimpleParallel
        fun GetDefaultObject(): BTComposite_SimpleParallel
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTComposite_SimpleParallel
        fun C(Other: UObject): BTComposite_SimpleParallel
        fun C(Other: Any): BTComposite_SimpleParallel
    }
}

external open class BTDecorator_BlackboardBase : BTDecorator {
    constructor()
    constructor(Outer: UObject)
    open var BlackboardKey: BlackboardKeySelector

    companion object {
        fun Load(ResourceName: String): BTDecorator_BlackboardBase
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_BlackboardBase
        fun GetDefaultObject(): BTDecorator_BlackboardBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_BlackboardBase
        fun C(Other: UObject): BTDecorator_BlackboardBase
        fun C(Other: Any): BTDecorator_BlackboardBase
    }
}

external object EBTBlackboardRestart {
    var ValueChange: String /* "ValueChange" */
    var ResultChange: String /* "ResultChange" */
    var EBTBlackboardRestart_MAX: String /* "EBTBlackboardRestart_MAX" */
}

external object EBasicKeyOperation {
    var Set: String /* "Set" */
    var NotSet: String /* "NotSet" */
    var EBasicKeyOperation_MAX: String /* "EBasicKeyOperation_MAX" */
}

external object EArithmeticKeyOperation {
    var Equal: String /* "Equal" */
    var NotEqual: String /* "NotEqual" */
    var Less: String /* "Less" */
    var LessOrEqual: String /* "LessOrEqual" */
    var Greater: String /* "Greater" */
    var GreaterOrEqual: String /* "GreaterOrEqual" */
    var EArithmeticKeyOperation_MAX: String /* "EArithmeticKeyOperation_MAX" */
}

external object ETextKeyOperation {
    var Equal: String /* "Equal" */
    var NotEqual: String /* "NotEqual" */
    var Contain: String /* "Contain" */
    var NotContain: String /* "NotContain" */
    var ETextKeyOperation_MAX: String /* "ETextKeyOperation_MAX" */
}

external open class BTDecorator_Blackboard : BTDecorator_BlackboardBase {
    constructor()
    constructor(Outer: UObject)
    open var IntValue: Number
    open var FloatValue: Number
    open var StringValue: String
    open var CachedDescription: String
    open var OperationType: Number
    open var NotifyObserver: String /* "ValueChange" | "ResultChange" | "EBTBlackboardRestart_MAX" */
    open var BasicOperation: String /* "Set" | "NotSet" | "EBasicKeyOperation_MAX" */
    open var ArithmeticOperation: String /* "Equal" | "NotEqual" | "Less" | "LessOrEqual" | "Greater" | "GreaterOrEqual" | "EArithmeticKeyOperation_MAX" */
    open var TextOperation: String /* "Equal" | "NotEqual" | "Contain" | "NotContain" | "ETextKeyOperation_MAX" */

    companion object {
        fun Load(ResourceName: String): BTDecorator_Blackboard
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_Blackboard
        fun GetDefaultObject(): BTDecorator_Blackboard
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_Blackboard
        fun C(Other: UObject): BTDecorator_Blackboard
        fun C(Other: Any): BTDecorator_Blackboard
    }
}

external object EBTNodeResult {
    var Succeeded: String /* "Succeeded" */
    var Failed: String /* "Failed" */
    var Aborted: String /* "Aborted" */
    var InProgress: String /* "InProgress" */
    var EBTNodeResult_MAX: String /* "EBTNodeResult_MAX" */
}

external open class BTDecorator_BlueprintBase : BTDecorator {
    constructor()
    constructor(Outer: UObject)
    open var AIOwner: AIController
    open var ActorOwner: Actor
    open var ObservedKeyNames: Array<String>
    open var bShowPropertyDetails: Boolean
    open var bCheckConditionOnlyBlackBoardChanges: Boolean
    open var bIsObservingBB: Boolean
    open fun ReceiveTickAI(OwnerController: AIController, ControlledPawn: Pawn, DeltaSeconds: Number)
    open fun ReceiveTick(OwnerActor: Actor, DeltaSeconds: Number)
    open fun ReceiveObserverDeactivatedAI(OwnerController: AIController, ControlledPawn: Pawn)
    open fun ReceiveObserverDeactivated(OwnerActor: Actor)
    open fun ReceiveObserverActivatedAI(OwnerController: AIController, ControlledPawn: Pawn)
    open fun ReceiveObserverActivated(OwnerActor: Actor)
    open fun ReceiveExecutionStartAI(OwnerController: AIController, ControlledPawn: Pawn)
    open fun ReceiveExecutionStart(OwnerActor: Actor)
    open fun ReceiveExecutionFinishAI(OwnerController: AIController, ControlledPawn: Pawn, NodeResult: String /* "Succeeded" | "Failed" | "Aborted" | "InProgress" | "EBTNodeResult_MAX" */)
    open fun ReceiveExecutionFinish(OwnerActor: Actor, NodeResult: String /* "Succeeded" | "Failed" | "Aborted" | "InProgress" | "EBTNodeResult_MAX" */)
    open fun PerformConditionCheckAI(OwnerController: AIController, ControlledPawn: Pawn): Boolean
    open fun PerformConditionCheck(OwnerActor: Actor): Boolean
    open fun IsDecoratorObserverActive(): Boolean
    open fun IsDecoratorExecutionActive(): Boolean

    companion object {
        fun Load(ResourceName: String): BTDecorator_BlueprintBase
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_BlueprintBase
        fun GetDefaultObject(): BTDecorator_BlueprintBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_BlueprintBase
        fun C(Other: UObject): BTDecorator_BlueprintBase
        fun C(Other: Any): BTDecorator_BlueprintBase
    }
}

external object EGameplayContainerMatchType {
    var Any: String /* "Any" */
    var All: String /* "All" */
    var EGameplayContainerMatchType_MAX: String /* "EGameplayContainerMatchType_MAX" */
}

external open class BTDecorator_CheckGameplayTagsOnActor : BTDecorator {
    constructor()
    constructor(Outer: UObject)
    open var ActorToCheck: BlackboardKeySelector
    open var TagsToMatch: String /* "Any" | "All" | "EGameplayContainerMatchType_MAX" */
    open var GameplayTags: GameplayTagContainer
    open var CachedDescription: String

    companion object {
        fun Load(ResourceName: String): BTDecorator_CheckGameplayTagsOnActor
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_CheckGameplayTagsOnActor
        fun GetDefaultObject(): BTDecorator_CheckGameplayTagsOnActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_CheckGameplayTagsOnActor
        fun C(Other: UObject): BTDecorator_CheckGameplayTagsOnActor
        fun C(Other: Any): BTDecorator_CheckGameplayTagsOnActor
    }
}

external object EBlackBoardEntryComparison {
    var Equal: String /* "Equal" */
    var NotEqual: String /* "NotEqual" */
    var EBlackBoardEntryComparison_MAX: String /* "EBlackBoardEntryComparison_MAX" */
}

external open class BTDecorator_CompareBBEntries : BTDecorator {
    constructor()
    constructor(Outer: UObject)
    open var Operator: String /* "Equal" | "NotEqual" | "EBlackBoardEntryComparison_MAX" */
    open var BlackboardKeyA: BlackboardKeySelector
    open var BlackboardKeyB: BlackboardKeySelector

    companion object {
        fun Load(ResourceName: String): BTDecorator_CompareBBEntries
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_CompareBBEntries
        fun GetDefaultObject(): BTDecorator_CompareBBEntries
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_CompareBBEntries
        fun C(Other: UObject): BTDecorator_CompareBBEntries
        fun C(Other: Any): BTDecorator_CompareBBEntries
    }
}

external open class BTDecorator_ConditionalLoop : BTDecorator_Blackboard {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BTDecorator_ConditionalLoop
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_ConditionalLoop
        fun GetDefaultObject(): BTDecorator_ConditionalLoop
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_ConditionalLoop
        fun C(Other: UObject): BTDecorator_ConditionalLoop
        fun C(Other: Any): BTDecorator_ConditionalLoop
    }
}

external open class BTDecorator_ConeCheck : BTDecorator {
    constructor()
    constructor(Outer: UObject)
    open var ConeHalfAngle: Number
    open var ConeOrigin: BlackboardKeySelector
    open var ConeDirection: BlackboardKeySelector
    open var Observed: BlackboardKeySelector

    companion object {
        fun Load(ResourceName: String): BTDecorator_ConeCheck
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_ConeCheck
        fun GetDefaultObject(): BTDecorator_ConeCheck
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_ConeCheck
        fun C(Other: UObject): BTDecorator_ConeCheck
        fun C(Other: Any): BTDecorator_ConeCheck
    }
}

external open class BTDecorator_Cooldown : BTDecorator {
    constructor()
    constructor(Outer: UObject)
    open var CoolDownTime: Number

    companion object {
        fun Load(ResourceName: String): BTDecorator_Cooldown
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_Cooldown
        fun GetDefaultObject(): BTDecorator_Cooldown
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_Cooldown
        fun C(Other: UObject): BTDecorator_Cooldown
        fun C(Other: Any): BTDecorator_Cooldown
    }
}

external object EPathExistanceQueryType {
    var NavmeshRaycast2D: String /* "NavmeshRaycast2D" */
    var HierarchicalQuery: String /* "HierarchicalQuery" */
    var RegularPathFinding: String /* "RegularPathFinding" */
    var EPathExistanceQueryType_MAX: String /* "EPathExistanceQueryType_MAX" */
}

external open class BTDecorator_DoesPathExist : BTDecorator {
    constructor()
    constructor(Outer: UObject)
    open var BlackboardKeyA: BlackboardKeySelector
    open var BlackboardKeyB: BlackboardKeySelector
    open var bUseSelf: Boolean
    open var PathQueryType: String /* "NavmeshRaycast2D" | "HierarchicalQuery" | "RegularPathFinding" | "EPathExistanceQueryType_MAX" */
    open var FilterClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): BTDecorator_DoesPathExist
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_DoesPathExist
        fun GetDefaultObject(): BTDecorator_DoesPathExist
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_DoesPathExist
        fun C(Other: UObject): BTDecorator_DoesPathExist
        fun C(Other: Any): BTDecorator_DoesPathExist
    }
}

external open class BTDecorator_ForceSuccess : BTDecorator {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BTDecorator_ForceSuccess
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_ForceSuccess
        fun GetDefaultObject(): BTDecorator_ForceSuccess
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_ForceSuccess
        fun C(Other: UObject): BTDecorator_ForceSuccess
        fun C(Other: Any): BTDecorator_ForceSuccess
    }
}

external object FAIDistanceType {
    var Distance3D: String /* "Distance3D" */
    var Distance2D: String /* "Distance2D" */
    var DistanceZ: String /* "DistanceZ" */
    var MAX: String /* "MAX" */
}

external open class BTDecorator_IsAtLocation : BTDecorator_BlackboardBase {
    constructor()
    constructor(Outer: UObject)
    open var AcceptableRadius: Number
    open var ParametrizedAcceptableRadius: AIDataProviderFloatValue
    open var GeometricDistanceType: String /* "Distance3D" | "Distance2D" | "DistanceZ" | "MAX" */
    open var bUseParametrizedRadius: Boolean
    open var bUseNavAgentGoalLocation: Boolean
    open var bPathFindingBasedTest: Boolean

    companion object {
        fun Load(ResourceName: String): BTDecorator_IsAtLocation
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_IsAtLocation
        fun GetDefaultObject(): BTDecorator_IsAtLocation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_IsAtLocation
        fun C(Other: UObject): BTDecorator_IsAtLocation
        fun C(Other: Any): BTDecorator_IsAtLocation
    }
}

external open class BTDecorator_IsBBEntryOfClass : BTDecorator_BlackboardBase {
    constructor()
    constructor(Outer: UObject)
    open var TestClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): BTDecorator_IsBBEntryOfClass
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_IsBBEntryOfClass
        fun GetDefaultObject(): BTDecorator_IsBBEntryOfClass
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_IsBBEntryOfClass
        fun C(Other: UObject): BTDecorator_IsBBEntryOfClass
        fun C(Other: Any): BTDecorator_IsBBEntryOfClass
    }
}

external open class BTDecorator_KeepInCone : BTDecorator {
    constructor()
    constructor(Outer: UObject)
    open var ConeHalfAngle: Number
    open var ConeOrigin: BlackboardKeySelector
    open var Observed: BlackboardKeySelector
    open var bUseSelfAsOrigin: Boolean
    open var bUseSelfAsObserved: Boolean

    companion object {
        fun Load(ResourceName: String): BTDecorator_KeepInCone
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_KeepInCone
        fun GetDefaultObject(): BTDecorator_KeepInCone
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_KeepInCone
        fun C(Other: UObject): BTDecorator_KeepInCone
        fun C(Other: Any): BTDecorator_KeepInCone
    }
}

external open class BTDecorator_Loop : BTDecorator {
    constructor()
    constructor(Outer: UObject)
    open var NumLoops: Number
    open var bInfiniteLoop: Boolean
    open var InfiniteLoopTimeoutTime: Number

    companion object {
        fun Load(ResourceName: String): BTDecorator_Loop
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_Loop
        fun GetDefaultObject(): BTDecorator_Loop
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_Loop
        fun C(Other: UObject): BTDecorator_Loop
        fun C(Other: Any): BTDecorator_Loop
    }
}

external open class BTDecorator_ReachedMoveGoal : BTDecorator {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BTDecorator_ReachedMoveGoal
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_ReachedMoveGoal
        fun GetDefaultObject(): BTDecorator_ReachedMoveGoal
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_ReachedMoveGoal
        fun C(Other: UObject): BTDecorator_ReachedMoveGoal
        fun C(Other: Any): BTDecorator_ReachedMoveGoal
    }
}

external open class BTDecorator_SetTagCooldown : BTDecorator {
    constructor()
    constructor(Outer: UObject)
    open var CooldownTag: GameplayTag
    open var CooldownDuration: Number
    open var bAddToExistingDuration: Boolean

    companion object {
        fun Load(ResourceName: String): BTDecorator_SetTagCooldown
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_SetTagCooldown
        fun GetDefaultObject(): BTDecorator_SetTagCooldown
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_SetTagCooldown
        fun C(Other: UObject): BTDecorator_SetTagCooldown
        fun C(Other: Any): BTDecorator_SetTagCooldown
    }
}

external open class BTDecorator_TagCooldown : BTDecorator {
    constructor()
    constructor(Outer: UObject)
    open var CooldownTag: GameplayTag
    open var CooldownDuration: Number
    open var bAddToExistingDuration: Boolean
    open var bActivatesCooldown: Boolean

    companion object {
        fun Load(ResourceName: String): BTDecorator_TagCooldown
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_TagCooldown
        fun GetDefaultObject(): BTDecorator_TagCooldown
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_TagCooldown
        fun C(Other: UObject): BTDecorator_TagCooldown
        fun C(Other: Any): BTDecorator_TagCooldown
    }
}

external open class BTDecorator_TimeLimit : BTDecorator {
    constructor()
    constructor(Outer: UObject)
    open var TimeLimit: Number

    companion object {
        fun Load(ResourceName: String): BTDecorator_TimeLimit
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_TimeLimit
        fun GetDefaultObject(): BTDecorator_TimeLimit
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_TimeLimit
        fun C(Other: UObject): BTDecorator_TimeLimit
        fun C(Other: Any): BTDecorator_TimeLimit
    }
}

external open class BTFunctionLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BTFunctionLibrary
        fun Find(Outer: UObject, ResourceName: String): BTFunctionLibrary
        fun GetDefaultObject(): BTFunctionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTFunctionLibrary
        fun StopUsingExternalEvent(NodeOwner: BTNode)
        fun StartUsingExternalEvent(NodeOwner: BTNode, OwningActor: Actor)
        fun SetBlackboardValueAsVector(NodeOwner: BTNode, Key: BlackboardKeySelector, Value: Vector)
        fun SetBlackboardValueAsString(NodeOwner: BTNode, Key: BlackboardKeySelector, Value: String)
        fun SetBlackboardValueAsRotator(NodeOwner: BTNode, Key: BlackboardKeySelector, Value: Rotator)
        fun SetBlackboardValueAsObject(NodeOwner: BTNode, Key: BlackboardKeySelector, Value: UObject)
        fun SetBlackboardValueAsName(NodeOwner: BTNode, Key: BlackboardKeySelector, Value: String)
        fun SetBlackboardValueAsInt(NodeOwner: BTNode, Key: BlackboardKeySelector, Value: Number)
        fun SetBlackboardValueAsFloat(NodeOwner: BTNode, Key: BlackboardKeySelector, Value: Number)
        fun SetBlackboardValueAsEnum(NodeOwner: BTNode, Key: BlackboardKeySelector, Value: Number)
        fun SetBlackboardValueAsClass(NodeOwner: BTNode, Key: BlackboardKeySelector, Value: UnrealEngineClass)
        fun SetBlackboardValueAsBool(NodeOwner: BTNode, Key: BlackboardKeySelector, Value: Boolean)
        fun GetOwnersBlackboard(NodeOwner: BTNode): BlackboardComponent
        fun GetOwnerComponent(NodeOwner: BTNode): BehaviorTreeComponent
        fun GetBlackboardValueAsVector(NodeOwner: BTNode, Key: BlackboardKeySelector): Vector
        fun GetBlackboardValueAsString(NodeOwner: BTNode, Key: BlackboardKeySelector): String
        fun GetBlackboardValueAsRotator(NodeOwner: BTNode, Key: BlackboardKeySelector): Rotator
        fun GetBlackboardValueAsObject(NodeOwner: BTNode, Key: BlackboardKeySelector): UObject
        fun GetBlackboardValueAsName(NodeOwner: BTNode, Key: BlackboardKeySelector): String
        fun GetBlackboardValueAsInt(NodeOwner: BTNode, Key: BlackboardKeySelector): Number
        fun GetBlackboardValueAsFloat(NodeOwner: BTNode, Key: BlackboardKeySelector): Number
        fun GetBlackboardValueAsEnum(NodeOwner: BTNode, Key: BlackboardKeySelector): Number
        fun GetBlackboardValueAsClass(NodeOwner: BTNode, Key: BlackboardKeySelector): UnrealEngineClass
        fun GetBlackboardValueAsBool(NodeOwner: BTNode, Key: BlackboardKeySelector): Boolean
        fun GetBlackboardValueAsActor(NodeOwner: BTNode, Key: BlackboardKeySelector): Actor
        fun ClearBlackboardValueAsVector(NodeOwner: BTNode, Key: BlackboardKeySelector)
        fun ClearBlackboardValue(NodeOwner: BTNode, Key: BlackboardKeySelector)
        fun C(Other: UObject): BTFunctionLibrary
        fun C(Other: Any): BTFunctionLibrary
    }
}

external open class BTService_BlackboardBase : BTService {
    constructor()
    constructor(Outer: UObject)
    open var BlackboardKey: BlackboardKeySelector

    companion object {
        fun Load(ResourceName: String): BTService_BlackboardBase
        fun Find(Outer: UObject, ResourceName: String): BTService_BlackboardBase
        fun GetDefaultObject(): BTService_BlackboardBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTService_BlackboardBase
        fun C(Other: UObject): BTService_BlackboardBase
        fun C(Other: Any): BTService_BlackboardBase
    }
}

external open class BTService_BlueprintBase : BTService {
    constructor()
    constructor(Outer: UObject)
    open var AIOwner: AIController
    open var ActorOwner: Actor
    open var bShowPropertyDetails: Boolean
    open var bShowEventDetails: Boolean
    open fun ReceiveTickAI(OwnerController: AIController, ControlledPawn: Pawn, DeltaSeconds: Number)
    open fun ReceiveTick(OwnerActor: Actor, DeltaSeconds: Number)
    open fun ReceiveSearchStartAI(OwnerController: AIController, ControlledPawn: Pawn)
    open fun ReceiveSearchStart(OwnerActor: Actor)
    open fun ReceiveDeactivationAI(OwnerController: AIController, ControlledPawn: Pawn)
    open fun ReceiveDeactivation(OwnerActor: Actor)
    open fun ReceiveActivationAI(OwnerController: AIController, ControlledPawn: Pawn)
    open fun ReceiveActivation(OwnerActor: Actor)
    open fun IsServiceActive(): Boolean

    companion object {
        fun Load(ResourceName: String): BTService_BlueprintBase
        fun Find(Outer: UObject, ResourceName: String): BTService_BlueprintBase
        fun GetDefaultObject(): BTService_BlueprintBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTService_BlueprintBase
        fun C(Other: UObject): BTService_BlueprintBase
        fun C(Other: Any): BTService_BlueprintBase
    }
}

external open class BTService_DefaultFocus : BTService_BlackboardBase {
    constructor()
    constructor(Outer: UObject)
    open var FocusPriority: Number

    companion object {
        fun Load(ResourceName: String): BTService_DefaultFocus
        fun Find(Outer: UObject, ResourceName: String): BTService_DefaultFocus
        fun GetDefaultObject(): BTService_DefaultFocus
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTService_DefaultFocus
        fun C(Other: UObject): BTService_DefaultFocus
        fun C(Other: Any): BTService_DefaultFocus
    }
}

external object EAIParamType {
    var Float: String /* "Float" */
    var Int: String /* "Int" */
    var Bool: String /* "Bool" */
    var MAX: String /* "MAX" */
}

external open class AIDynamicParam {
    open var ParamName: String
    open var ParamType: String /* "Float" | "Int" | "Bool" | "MAX" */
    open var Value: Number
    open var BBKey: BlackboardKeySelector
    open fun clone(): AIDynamicParam

    companion object {
        fun C(Other: UObject): AIDynamicParam
        fun C(Other: Any): AIDynamicParam
    }
}

external open class EQSParametrizedQueryExecutionRequest {
    open var QueryTemplate: EnvQuery
    open var QueryConfig: Array<AIDynamicParam>
    open var EQSQueryBlackboardKey: BlackboardKeySelector
    open var RunMode: String /* "SingleResult" | "RandomBest5Pct" | "RandomBest25Pct" | "AllMatching" | "EEnvQueryRunMode_MAX" */
    open var bUseBBKeyForQueryTemplate: Boolean
    open fun clone(): EQSParametrizedQueryExecutionRequest

    companion object {
        fun C(Other: UObject): EQSParametrizedQueryExecutionRequest
        fun C(Other: Any): EQSParametrizedQueryExecutionRequest
    }
}

external open class BTService_RunEQS : BTService_BlackboardBase {
    constructor()
    constructor(Outer: UObject)
    open var EQSRequest: EQSParametrizedQueryExecutionRequest

    companion object {
        fun Load(ResourceName: String): BTService_RunEQS
        fun Find(Outer: UObject, ResourceName: String): BTService_RunEQS
        fun GetDefaultObject(): BTService_RunEQS
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTService_RunEQS
        fun C(Other: UObject): BTService_RunEQS
        fun C(Other: Any): BTService_RunEQS
    }
}

external open class BTTask_BlackboardBase : BTTaskNode {
    constructor()
    constructor(Outer: UObject)
    open var BlackboardKey: BlackboardKeySelector

    companion object {
        fun Load(ResourceName: String): BTTask_BlackboardBase
        fun Find(Outer: UObject, ResourceName: String): BTTask_BlackboardBase
        fun GetDefaultObject(): BTTask_BlackboardBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_BlackboardBase
        fun C(Other: UObject): BTTask_BlackboardBase
        fun C(Other: Any): BTTask_BlackboardBase
    }
}

external open class BTTask_BlueprintBase : BTTaskNode {
    constructor()
    constructor(Outer: UObject)
    open var AIOwner: AIController
    open var ActorOwner: Actor
    open var bShowPropertyDetails: Boolean
    open fun SetFinishOnMessageWithId(MessageName: String, RequestID: Number)
    open fun SetFinishOnMessage(MessageName: String)
    open fun ReceiveTickAI(OwnerController: AIController, ControlledPawn: Pawn, DeltaSeconds: Number)
    open fun ReceiveTick(OwnerActor: Actor, DeltaSeconds: Number)
    open fun ReceiveExecuteAI(OwnerController: AIController, ControlledPawn: Pawn)
    open fun ReceiveExecute(OwnerActor: Actor)
    open fun ReceiveAbortAI(OwnerController: AIController, ControlledPawn: Pawn)
    open fun ReceiveAbort(OwnerActor: Actor)
    open fun IsTaskExecuting(): Boolean
    open fun IsTaskAborting(): Boolean
    open fun FinishExecute(bSuccess: Boolean)
    open fun FinishAbort()

    companion object {
        fun Load(ResourceName: String): BTTask_BlueprintBase
        fun Find(Outer: UObject, ResourceName: String): BTTask_BlueprintBase
        fun GetDefaultObject(): BTTask_BlueprintBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_BlueprintBase
        fun C(Other: UObject): BTTask_BlueprintBase
        fun C(Other: Any): BTTask_BlueprintBase
    }
}

external open class BTTask_FinishWithResult : BTTaskNode {
    constructor()
    constructor(Outer: UObject)
    open var Result: String /* "Succeeded" | "Failed" | "Aborted" | "InProgress" | "EBTNodeResult_MAX" */

    companion object {
        fun Load(ResourceName: String): BTTask_FinishWithResult
        fun Find(Outer: UObject, ResourceName: String): BTTask_FinishWithResult
        fun GetDefaultObject(): BTTask_FinishWithResult
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_FinishWithResult
        fun C(Other: UObject): BTTask_FinishWithResult
        fun C(Other: Any): BTTask_FinishWithResult
    }
}

external open class BTTask_GameplayTaskBase : BTTaskNode {
    constructor()
    constructor(Outer: UObject)
    open var bWaitForGameplayTask: Boolean

    companion object {
        fun Load(ResourceName: String): BTTask_GameplayTaskBase
        fun Find(Outer: UObject, ResourceName: String): BTTask_GameplayTaskBase
        fun GetDefaultObject(): BTTask_GameplayTaskBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_GameplayTaskBase
        fun C(Other: UObject): BTTask_GameplayTaskBase
        fun C(Other: Any): BTTask_GameplayTaskBase
    }
}

external open class BTTask_MakeNoise : BTTaskNode {
    constructor()
    constructor(Outer: UObject)
    open var Loudnes: Number

    companion object {
        fun Load(ResourceName: String): BTTask_MakeNoise
        fun Find(Outer: UObject, ResourceName: String): BTTask_MakeNoise
        fun GetDefaultObject(): BTTask_MakeNoise
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_MakeNoise
        fun C(Other: UObject): BTTask_MakeNoise
        fun C(Other: Any): BTTask_MakeNoise
    }
}

external open class BTTask_MoveTo : BTTask_BlackboardBase {
    constructor()
    constructor(Outer: UObject)
    open var AcceptableRadius: Number
    open var FilterClass: UnrealEngineClass
    open var ObservedBlackboardValueTolerance: Number
    open var bObserveBlackboardValue: Boolean
    open var bAllowStrafe: Boolean
    open var bAllowPartialPath: Boolean
    open var bTrackMovingGoal: Boolean
    open var bProjectGoalLocation: Boolean
    open var bReachTestIncludesAgentRadius: Boolean
    open var bReachTestIncludesGoalRadius: Boolean
    open var bStopOnOverlap: Boolean
    open var bStopOnOverlapNeedsUpdate: Boolean

    companion object {
        fun Load(ResourceName: String): BTTask_MoveTo
        fun Find(Outer: UObject, ResourceName: String): BTTask_MoveTo
        fun GetDefaultObject(): BTTask_MoveTo
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_MoveTo
        fun C(Other: UObject): BTTask_MoveTo
        fun C(Other: Any): BTTask_MoveTo
    }
}

external open class BTTask_MoveDirectlyToward : BTTask_MoveTo {
    constructor()
    constructor(Outer: UObject)
    open var bDisablePathUpdateOnGoalLocationChange: Boolean
    open var bProjectVectorGoalToNavigation: Boolean
    open var bUpdatedDeprecatedProperties: Boolean

    companion object {
        fun Load(ResourceName: String): BTTask_MoveDirectlyToward
        fun Find(Outer: UObject, ResourceName: String): BTTask_MoveDirectlyToward
        fun GetDefaultObject(): BTTask_MoveDirectlyToward
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_MoveDirectlyToward
        fun C(Other: UObject): BTTask_MoveDirectlyToward
        fun C(Other: Any): BTTask_MoveDirectlyToward
    }
}

external open class BTTask_PawnActionBase : BTTaskNode {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BTTask_PawnActionBase
        fun Find(Outer: UObject, ResourceName: String): BTTask_PawnActionBase
        fun GetDefaultObject(): BTTask_PawnActionBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_PawnActionBase
        fun C(Other: UObject): BTTask_PawnActionBase
        fun C(Other: Any): BTTask_PawnActionBase
    }
}

external open class BTTask_PlayAnimation : BTTaskNode {
    constructor()
    constructor(Outer: UObject)
    open var AnimationToPlay: AnimationAsset
    open var bLooping: Boolean
    open var bNonBlocking: Boolean
    open var MyOwnerComp: BehaviorTreeComponent
    open var CachedSkelMesh: SkeletalMeshComponent

    companion object {
        fun Load(ResourceName: String): BTTask_PlayAnimation
        fun Find(Outer: UObject, ResourceName: String): BTTask_PlayAnimation
        fun GetDefaultObject(): BTTask_PlayAnimation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_PlayAnimation
        fun C(Other: UObject): BTTask_PlayAnimation
        fun C(Other: Any): BTTask_PlayAnimation
    }
}

external open class BTTask_PlaySound : BTTaskNode {
    constructor()
    constructor(Outer: UObject)
    open var SoundToPlay: SoundCue

    companion object {
        fun Load(ResourceName: String): BTTask_PlaySound
        fun Find(Outer: UObject, ResourceName: String): BTTask_PlaySound
        fun GetDefaultObject(): BTTask_PlaySound
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_PlaySound
        fun C(Other: UObject): BTTask_PlaySound
        fun C(Other: Any): BTTask_PlaySound
    }
}

external open class BTTask_PushPawnAction : BTTask_PawnActionBase {
    constructor()
    constructor(Outer: UObject)
    open var Action: PawnAction

    companion object {
        fun Load(ResourceName: String): BTTask_PushPawnAction
        fun Find(Outer: UObject, ResourceName: String): BTTask_PushPawnAction
        fun GetDefaultObject(): BTTask_PushPawnAction
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_PushPawnAction
        fun C(Other: UObject): BTTask_PushPawnAction
        fun C(Other: Any): BTTask_PushPawnAction
    }
}

external open class BTTask_RotateToFaceBBEntry : BTTask_BlackboardBase {
    constructor()
    constructor(Outer: UObject)
    open var Precision: Number

    companion object {
        fun Load(ResourceName: String): BTTask_RotateToFaceBBEntry
        fun Find(Outer: UObject, ResourceName: String): BTTask_RotateToFaceBBEntry
        fun GetDefaultObject(): BTTask_RotateToFaceBBEntry
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_RotateToFaceBBEntry
        fun C(Other: UObject): BTTask_RotateToFaceBBEntry
        fun C(Other: Any): BTTask_RotateToFaceBBEntry
    }
}

external open class BTTask_RunBehavior : BTTaskNode {
    constructor()
    constructor(Outer: UObject)
    open var BehaviorAsset: BehaviorTree

    companion object {
        fun Load(ResourceName: String): BTTask_RunBehavior
        fun Find(Outer: UObject, ResourceName: String): BTTask_RunBehavior
        fun GetDefaultObject(): BTTask_RunBehavior
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_RunBehavior
        fun C(Other: UObject): BTTask_RunBehavior
        fun C(Other: Any): BTTask_RunBehavior
    }
}

external open class BTTask_RunBehaviorDynamic : BTTaskNode {
    constructor()
    constructor(Outer: UObject)
    open var InjectionTag: GameplayTag
    open var DefaultBehaviorAsset: BehaviorTree
    open var BehaviorAsset: BehaviorTree

    companion object {
        fun Load(ResourceName: String): BTTask_RunBehaviorDynamic
        fun Find(Outer: UObject, ResourceName: String): BTTask_RunBehaviorDynamic
        fun GetDefaultObject(): BTTask_RunBehaviorDynamic
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_RunBehaviorDynamic
        fun C(Other: UObject): BTTask_RunBehaviorDynamic
        fun C(Other: Any): BTTask_RunBehaviorDynamic
    }
}

external open class EnvNamedValue {
    open var ParamName: String
    open var ParamType: String /* "Float" | "Int" | "Bool" | "MAX" */
    open var Value: Number
    open fun clone(): EnvNamedValue

    companion object {
        fun C(Other: UObject): EnvNamedValue
        fun C(Other: Any): EnvNamedValue
    }
}

external open class BTTask_RunEQSQuery : BTTask_BlackboardBase {
    constructor()
    constructor(Outer: UObject)
    open var QueryTemplate: EnvQuery
    open var QueryParams: Array<EnvNamedValue>
    open var QueryConfig: Array<AIDynamicParam>
    open var RunMode: String /* "SingleResult" | "RandomBest5Pct" | "RandomBest25Pct" | "AllMatching" | "EEnvQueryRunMode_MAX" */
    open var EQSQueryBlackboardKey: BlackboardKeySelector
    open var bUseBBKey: Boolean
    open var EQSRequest: EQSParametrizedQueryExecutionRequest

    companion object {
        fun Load(ResourceName: String): BTTask_RunEQSQuery
        fun Find(Outer: UObject, ResourceName: String): BTTask_RunEQSQuery
        fun GetDefaultObject(): BTTask_RunEQSQuery
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_RunEQSQuery
        fun C(Other: UObject): BTTask_RunEQSQuery
        fun C(Other: Any): BTTask_RunEQSQuery
    }
}

external open class BTTask_SetTagCooldown : BTTaskNode {
    constructor()
    constructor(Outer: UObject)
    open var CooldownTag: GameplayTag
    open var bAddToExistingDuration: Boolean
    open var CooldownDuration: Number

    companion object {
        fun Load(ResourceName: String): BTTask_SetTagCooldown
        fun Find(Outer: UObject, ResourceName: String): BTTask_SetTagCooldown
        fun GetDefaultObject(): BTTask_SetTagCooldown
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_SetTagCooldown
        fun C(Other: UObject): BTTask_SetTagCooldown
        fun C(Other: Any): BTTask_SetTagCooldown
    }
}

external open class BTTask_Wait : BTTaskNode {
    constructor()
    constructor(Outer: UObject)
    open var WaitTime: Number
    open var RandomDeviation: Number

    companion object {
        fun Load(ResourceName: String): BTTask_Wait
        fun Find(Outer: UObject, ResourceName: String): BTTask_Wait
        fun GetDefaultObject(): BTTask_Wait
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_Wait
        fun C(Other: UObject): BTTask_Wait
        fun C(Other: Any): BTTask_Wait
    }
}

external open class BTTask_WaitBlackboardTime : BTTask_Wait {
    constructor()
    constructor(Outer: UObject)
    open var BlackboardKey: BlackboardKeySelector

    companion object {
        fun Load(ResourceName: String): BTTask_WaitBlackboardTime
        fun Find(Outer: UObject, ResourceName: String): BTTask_WaitBlackboardTime
        fun GetDefaultObject(): BTTask_WaitBlackboardTime
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_WaitBlackboardTime
        fun C(Other: UObject): BTTask_WaitBlackboardTime
        fun C(Other: Any): BTTask_WaitBlackboardTime
    }
}

external open class CrowdAgentInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CrowdAgentInterface
        fun Find(Outer: UObject, ResourceName: String): CrowdAgentInterface
        fun GetDefaultObject(): CrowdAgentInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CrowdAgentInterface
        fun C(Other: UObject): CrowdAgentInterface
        fun C(Other: Any): CrowdAgentInterface
    }
}

external open class CrowdFollowingComponent : PathFollowingComponent {
    constructor()
    constructor(Outer: UObject)
    open var CharacterMovement: CharacterMovementComponent
    open var CrowdAgentMoveDirection: Vector
    open var AvoidanceGroup: NavAvoidanceMask
    open var GroupsToAvoid: NavAvoidanceMask
    open var GroupsToIgnore: NavAvoidanceMask
    open fun SuspendCrowdSteering(bSuspend: Boolean)

    companion object {
        fun Load(ResourceName: String): CrowdFollowingComponent
        fun Find(Outer: UObject, ResourceName: String): CrowdFollowingComponent
        fun GetDefaultObject(): CrowdFollowingComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CrowdFollowingComponent
        fun C(Other: UObject): CrowdFollowingComponent
        fun C(Other: Any): CrowdFollowingComponent
    }
}

external open class CrowdAvoidanceConfig {
    open var VelocityBias: Number
    open var DesiredVelocityWeight: Number
    open var CurrentVelocityWeight: Number
    open var SideBiasWeight: Number
    open var ImpactTimeWeight: Number
    open var ImpactTimeRange: Number
    open var CustomPatternIdx: Number
    open var AdaptiveDivisions: Number
    open var AdaptiveRings: Number
    open var AdaptiveDepth: Number
    open fun clone(): CrowdAvoidanceConfig

    companion object {
        fun C(Other: UObject): CrowdAvoidanceConfig
        fun C(Other: Any): CrowdAvoidanceConfig
    }
}

external open class CrowdAvoidanceSamplingPattern {
    open var Angles: Array<Number>
    open var Radii: Array<Number>
    open fun clone(): CrowdAvoidanceSamplingPattern

    companion object {
        fun C(Other: UObject): CrowdAvoidanceSamplingPattern
        fun C(Other: Any): CrowdAvoidanceSamplingPattern
    }
}

external open class CrowdManager : CrowdManagerBase {
    constructor()
    constructor(Outer: UObject)
    open var MyNavData: NavigationData
    open var AvoidanceConfig: Array<CrowdAvoidanceConfig>
    open var SamplingPatterns: Array<CrowdAvoidanceSamplingPattern>
    open var MaxAgents: Number
    open var MaxAgentRadius: Number
    open var MaxAvoidedAgents: Number
    open var MaxAvoidedWalls: Number
    open var NavmeshCheckInterval: Number
    open var PathOptimizationInterval: Number
    open var SeparationDirClamp: Number
    open var PathOffsetRadiusMultiplier: Number
    open var bResolveCollisions: Boolean

    companion object {
        fun Load(ResourceName: String): CrowdManager
        fun Find(Outer: UObject, ResourceName: String): CrowdManager
        fun GetDefaultObject(): CrowdManager
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CrowdManager
        fun C(Other: UObject): CrowdManager
        fun C(Other: Any): CrowdManager
    }
}

external open class DetourCrowdAIController(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : AIController {
    companion object {
        fun GetDefaultObject(): DetourCrowdAIController
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DetourCrowdAIController
        fun C(Other: UObject): DetourCrowdAIController
        fun C(Other: Any): DetourCrowdAIController
    }
}

external interface `T$38` {
    var ResultingLocation: Vector
}

external interface `T$39` {
    var ResultingActor: Actor
}

external interface `T$40` {
    var ResultingLocationSet: Array<Vector>
}

external interface `T$41` {
    var ResultingActorsSet: Array<Actor>
}

external open class EnvQueryContext_BlueprintBase : EnvQueryContext {
    constructor()
    constructor(Outer: UObject)
    open fun ProvideSingleLocation(QuerierObject: UObject, QuerierActor: Actor, ResultingLocation: Vector = definedExternally): `T$38`
    open fun ProvideSingleActor(QuerierObject: UObject, QuerierActor: Actor, ResultingActor: Actor = definedExternally): `T$39`
    open fun ProvideLocationsSet(QuerierObject: UObject, QuerierActor: Actor, ResultingLocationSet: Array<Vector> = definedExternally): `T$40`
    open fun ProvideActorsSet(QuerierObject: UObject, QuerierActor: Actor, ResultingActorsSet: Array<Actor> = definedExternally): `T$41`

    companion object {
        fun Load(ResourceName: String): EnvQueryContext_BlueprintBase
        fun Find(Outer: UObject, ResourceName: String): EnvQueryContext_BlueprintBase
        fun GetDefaultObject(): EnvQueryContext_BlueprintBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryContext_BlueprintBase
        fun C(Other: UObject): EnvQueryContext_BlueprintBase
        fun C(Other: Any): EnvQueryContext_BlueprintBase
    }
}

external open class EnvQueryContext_Item : EnvQueryContext {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EnvQueryContext_Item
        fun Find(Outer: UObject, ResourceName: String): EnvQueryContext_Item
        fun GetDefaultObject(): EnvQueryContext_Item
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryContext_Item
        fun C(Other: UObject): EnvQueryContext_Item
        fun C(Other: Any): EnvQueryContext_Item
    }
}

external open class EnvQueryContext_Querier : EnvQueryContext {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EnvQueryContext_Querier
        fun Find(Outer: UObject, ResourceName: String): EnvQueryContext_Querier
        fun GetDefaultObject(): EnvQueryContext_Querier
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryContext_Querier
        fun C(Other: UObject): EnvQueryContext_Querier
        fun C(Other: Any): EnvQueryContext_Querier
    }
}

external open class EnvQueryDebugHelpers : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EnvQueryDebugHelpers
        fun Find(Outer: UObject, ResourceName: String): EnvQueryDebugHelpers
        fun GetDefaultObject(): EnvQueryDebugHelpers
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryDebugHelpers
        fun C(Other: UObject): EnvQueryDebugHelpers
        fun C(Other: Any): EnvQueryDebugHelpers
    }
}

external open class EnvQueryGenerator_ActorsOfClass : EnvQueryGenerator {
    constructor()
    constructor(Outer: UObject)
    open var SearchedActorClass: UnrealEngineClass
    open var GenerateOnlyActorsInRadius: AIDataProviderBoolValue
    open var SearchRadius: AIDataProviderFloatValue
    open var SearchCenter: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): EnvQueryGenerator_ActorsOfClass
        fun Find(Outer: UObject, ResourceName: String): EnvQueryGenerator_ActorsOfClass
        fun GetDefaultObject(): EnvQueryGenerator_ActorsOfClass
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryGenerator_ActorsOfClass
        fun C(Other: UObject): EnvQueryGenerator_ActorsOfClass
        fun C(Other: Any): EnvQueryGenerator_ActorsOfClass
    }
}

external open class EnvQueryGenerator_BlueprintBase : EnvQueryGenerator {
    constructor()
    constructor(Outer: UObject)
    open var GeneratorsActionDescription: String
    open var Context: UnrealEngineClass
    open var GeneratedItemType: UnrealEngineClass
    open fun GetQuerier(): UObject
    open fun DoItemGeneration(ContextLocations: Array<Vector>)
    open fun AddGeneratedVector(GeneratedVector: Vector)
    open fun AddGeneratedActor(GeneratedActor: Actor)

    companion object {
        fun Load(ResourceName: String): EnvQueryGenerator_BlueprintBase
        fun Find(Outer: UObject, ResourceName: String): EnvQueryGenerator_BlueprintBase
        fun GetDefaultObject(): EnvQueryGenerator_BlueprintBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryGenerator_BlueprintBase
        fun C(Other: UObject): EnvQueryGenerator_BlueprintBase
        fun C(Other: Any): EnvQueryGenerator_BlueprintBase
    }
}

external open class EnvQueryGenerator_Composite : EnvQueryGenerator {
    constructor()
    constructor(Outer: UObject)
    open var Generators: Array<EnvQueryGenerator>
    open var bAllowDifferentItemTypes: Boolean
    open var bHasMatchingItemType: Boolean
    open var ForcedItemType: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): EnvQueryGenerator_Composite
        fun Find(Outer: UObject, ResourceName: String): EnvQueryGenerator_Composite
        fun GetDefaultObject(): EnvQueryGenerator_Composite
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryGenerator_Composite
        fun C(Other: UObject): EnvQueryGenerator_Composite
        fun C(Other: Any): EnvQueryGenerator_Composite
    }
}

external object EEnvTraceShape {
    var Line: String /* "Line" */
    var Box: String /* "Box" */
    var Sphere: String /* "Sphere" */
    var Capsule: String /* "Capsule" */
    var EEnvTraceShape_MAX: String /* "EEnvTraceShape_MAX" */
}

external object EEnvQueryTrace {
    var None: String /* "None" */
    var Navigation: String /* "Navigation" */
    var Geometry: String /* "Geometry" */
    var NavigationOverLedges: String /* "NavigationOverLedges" */
    var EEnvQueryTrace_MAX: String /* "EEnvQueryTrace_MAX" */
}

external open class EnvTraceData {
    open var VersionNum: Number
    open var NavigationFilter: UnrealEngineClass
    open var ProjectDown: Number
    open var ProjectUp: Number
    open var ExtentX: Number
    open var ExtentY: Number
    open var ExtentZ: Number
    open var PostProjectionVerticalOffset: Number
    open var TraceChannel: String /* "TraceTypeQuery1" | "TraceTypeQuery2" | "TraceTypeQuery3" | "TraceTypeQuery4" | "TraceTypeQuery5" | "TraceTypeQuery6" | "TraceTypeQuery7" | "TraceTypeQuery8" | "TraceTypeQuery9" | "TraceTypeQuery10" | "TraceTypeQuery11" | "TraceTypeQuery12" | "TraceTypeQuery13" | "TraceTypeQuery14" | "TraceTypeQuery15" | "TraceTypeQuery16" | "TraceTypeQuery17" | "TraceTypeQuery18" | "TraceTypeQuery19" | "TraceTypeQuery20" | "TraceTypeQuery21" | "TraceTypeQuery22" | "TraceTypeQuery23" | "TraceTypeQuery24" | "TraceTypeQuery25" | "TraceTypeQuery26" | "TraceTypeQuery27" | "TraceTypeQuery28" | "TraceTypeQuery29" | "TraceTypeQuery30" | "TraceTypeQuery31" | "TraceTypeQuery32" | "TraceTypeQuery_MAX" | "ETraceTypeQuery_MAX" */
    open var SerializedChannel: String /* "ECC_WorldStatic" | "ECC_WorldDynamic" | "ECC_Pawn" | "ECC_Visibility" | "ECC_Camera" | "ECC_PhysicsBody" | "ECC_Vehicle" | "ECC_Destructible" | "ECC_EngineTraceChannel1" | "ECC_EngineTraceChannel2" | "ECC_EngineTraceChannel3" | "ECC_EngineTraceChannel4" | "ECC_EngineTraceChannel5" | "ECC_EngineTraceChannel6" | "ECC_GameTraceChannel1" | "ECC_GameTraceChannel2" | "ECC_GameTraceChannel3" | "ECC_GameTraceChannel4" | "ECC_GameTraceChannel5" | "ECC_GameTraceChannel6" | "ECC_GameTraceChannel7" | "ECC_GameTraceChannel8" | "ECC_GameTraceChannel9" | "ECC_GameTraceChannel10" | "ECC_GameTraceChannel11" | "ECC_GameTraceChannel12" | "ECC_GameTraceChannel13" | "ECC_GameTraceChannel14" | "ECC_GameTraceChannel15" | "ECC_GameTraceChannel16" | "ECC_GameTraceChannel17" | "ECC_GameTraceChannel18" | "ECC_OverlapAll_Deprecated" | "ECC_MAX" */
    open var TraceShape: String /* "Line" | "Box" | "Sphere" | "Capsule" | "EEnvTraceShape_MAX" */
    open var TraceMode: String /* "None" | "Navigation" | "Geometry" | "NavigationOverLedges" | "EEnvQueryTrace_MAX" */
    open var bTraceComplex: Boolean
    open var bOnlyBlockingHits: Boolean
    open var bCanTraceOnNavMesh: Boolean
    open var bCanTraceOnGeometry: Boolean
    open var bCanDisableTrace: Boolean
    open var bCanProjectDown: Boolean
    open fun clone(): EnvTraceData

    companion object {
        fun C(Other: UObject): EnvTraceData
        fun C(Other: Any): EnvTraceData
    }
}

external open class EnvQueryGenerator_ProjectedPoints : EnvQueryGenerator {
    constructor()
    constructor(Outer: UObject)
    open var ProjectionData: EnvTraceData

    companion object {
        fun Load(ResourceName: String): EnvQueryGenerator_ProjectedPoints
        fun Find(Outer: UObject, ResourceName: String): EnvQueryGenerator_ProjectedPoints
        fun GetDefaultObject(): EnvQueryGenerator_ProjectedPoints
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryGenerator_ProjectedPoints
        fun C(Other: UObject): EnvQueryGenerator_ProjectedPoints
        fun C(Other: Any): EnvQueryGenerator_ProjectedPoints
    }
}

external open class EnvQueryGenerator_Cone : EnvQueryGenerator_ProjectedPoints {
    constructor()
    constructor(Outer: UObject)
    open var AlignedPointsDistance: AIDataProviderFloatValue
    open var ConeDegrees: AIDataProviderFloatValue
    open var AngleStep: AIDataProviderFloatValue
    open var Range: AIDataProviderFloatValue
    open var CenterActor: UnrealEngineClass
    open var bIncludeContextLocation: Boolean

    companion object {
        fun Load(ResourceName: String): EnvQueryGenerator_Cone
        fun Find(Outer: UObject, ResourceName: String): EnvQueryGenerator_Cone
        fun GetDefaultObject(): EnvQueryGenerator_Cone
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryGenerator_Cone
        fun C(Other: UObject): EnvQueryGenerator_Cone
        fun C(Other: Any): EnvQueryGenerator_Cone
    }
}

external open class EnvQueryGenerator_CurrentLocation : EnvQueryGenerator {
    constructor()
    constructor(Outer: UObject)
    open var QueryContext: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): EnvQueryGenerator_CurrentLocation
        fun Find(Outer: UObject, ResourceName: String): EnvQueryGenerator_CurrentLocation
        fun GetDefaultObject(): EnvQueryGenerator_CurrentLocation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryGenerator_CurrentLocation
        fun C(Other: UObject): EnvQueryGenerator_CurrentLocation
        fun C(Other: Any): EnvQueryGenerator_CurrentLocation
    }
}

external open class AIDataProviderIntValue : AIDataProviderTypedValue {
    open var DefaultValue: Number
    override fun clone(): AIDataProviderIntValue

    companion object {
        fun C(Other: UObject): AIDataProviderIntValue
        fun C(Other: Any): AIDataProviderIntValue
    }
}

external object EEnvDirection {
    var TwoPoints: String /* "TwoPoints" */
    var Rotation: String /* "Rotation" */
    var EEnvDirection_MAX: String /* "EEnvDirection_MAX" */
}

external open class EnvDirection {
    open var LineFrom: UnrealEngineClass
    open var LineTo: UnrealEngineClass
    open var Rotation: UnrealEngineClass
    open var DirMode: String /* "TwoPoints" | "Rotation" | "EEnvDirection_MAX" */
    open fun clone(): EnvDirection

    companion object {
        fun C(Other: UObject): EnvDirection
        fun C(Other: Any): EnvDirection
    }
}

external open class EnvQueryGenerator_Donut : EnvQueryGenerator_ProjectedPoints {
    constructor()
    constructor(Outer: UObject)
    open var InnerRadius: AIDataProviderFloatValue
    open var OuterRadius: AIDataProviderFloatValue
    open var NumberOfRings: AIDataProviderIntValue
    open var PointsPerRing: AIDataProviderIntValue
    open var ArcDirection: EnvDirection
    open var ArcAngle: AIDataProviderFloatValue
    open var bUseSpiralPattern: Boolean
    open var Center: UnrealEngineClass
    open var bDefineArc: Boolean

    companion object {
        fun Load(ResourceName: String): EnvQueryGenerator_Donut
        fun Find(Outer: UObject, ResourceName: String): EnvQueryGenerator_Donut
        fun GetDefaultObject(): EnvQueryGenerator_Donut
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryGenerator_Donut
        fun C(Other: UObject): EnvQueryGenerator_Donut
        fun C(Other: Any): EnvQueryGenerator_Donut
    }
}

external object EPointOnCircleSpacingMethod {
    var BySpaceBetween: String /* "BySpaceBetween" */
    var ByNumberOfPoints: String /* "ByNumberOfPoints" */
    var EPointOnCircleSpacingMethod_MAX: String /* "EPointOnCircleSpacingMethod_MAX" */
}

external open class EnvQueryGenerator_OnCircle : EnvQueryGenerator_ProjectedPoints {
    constructor()
    constructor(Outer: UObject)
    open var CircleRadius: AIDataProviderFloatValue
    open var SpaceBetween: AIDataProviderFloatValue
    open var NumberOfPoints: AIDataProviderIntValue
    open var PointOnCircleSpacingMethod: String /* "BySpaceBetween" | "ByNumberOfPoints" | "EPointOnCircleSpacingMethod_MAX" */
    open var ArcDirection: EnvDirection
    open var ArcAngle: AIDataProviderFloatValue
    open var AngleRadians: Number
    open var CircleCenter: UnrealEngineClass
    open var bIgnoreAnyContextActorsWhenGeneratingCircle: Boolean
    open var CircleCenterZOffset: AIDataProviderFloatValue
    open var TraceData: EnvTraceData
    open var bDefineArc: Boolean

    companion object {
        fun Load(ResourceName: String): EnvQueryGenerator_OnCircle
        fun Find(Outer: UObject, ResourceName: String): EnvQueryGenerator_OnCircle
        fun GetDefaultObject(): EnvQueryGenerator_OnCircle
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryGenerator_OnCircle
        fun C(Other: UObject): EnvQueryGenerator_OnCircle
        fun C(Other: Any): EnvQueryGenerator_OnCircle
    }
}

external open class EnvQueryGenerator_SimpleGrid : EnvQueryGenerator_ProjectedPoints {
    constructor()
    constructor(Outer: UObject)
    open var GridSize: AIDataProviderFloatValue
    open var SpaceBetween: AIDataProviderFloatValue
    open var GenerateAround: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): EnvQueryGenerator_SimpleGrid
        fun Find(Outer: UObject, ResourceName: String): EnvQueryGenerator_SimpleGrid
        fun GetDefaultObject(): EnvQueryGenerator_SimpleGrid
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryGenerator_SimpleGrid
        fun C(Other: UObject): EnvQueryGenerator_SimpleGrid
        fun C(Other: Any): EnvQueryGenerator_SimpleGrid
    }
}

external open class EnvQueryGenerator_PathingGrid : EnvQueryGenerator_SimpleGrid {
    constructor()
    constructor(Outer: UObject)
    open var PathToItem: AIDataProviderBoolValue
    open var NavigationFilter: UnrealEngineClass
    open var ScanRangeMultiplier: AIDataProviderFloatValue

    companion object {
        fun Load(ResourceName: String): EnvQueryGenerator_PathingGrid
        fun Find(Outer: UObject, ResourceName: String): EnvQueryGenerator_PathingGrid
        fun GetDefaultObject(): EnvQueryGenerator_PathingGrid
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryGenerator_PathingGrid
        fun C(Other: UObject): EnvQueryGenerator_PathingGrid
        fun C(Other: Any): EnvQueryGenerator_PathingGrid
    }
}

external open class EnvQueryItemType_VectorBase : EnvQueryItemType {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EnvQueryItemType_VectorBase
        fun Find(Outer: UObject, ResourceName: String): EnvQueryItemType_VectorBase
        fun GetDefaultObject(): EnvQueryItemType_VectorBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryItemType_VectorBase
        fun C(Other: UObject): EnvQueryItemType_VectorBase
        fun C(Other: Any): EnvQueryItemType_VectorBase
    }
}

external open class EnvQueryItemType_ActorBase : EnvQueryItemType_VectorBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EnvQueryItemType_ActorBase
        fun Find(Outer: UObject, ResourceName: String): EnvQueryItemType_ActorBase
        fun GetDefaultObject(): EnvQueryItemType_ActorBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryItemType_ActorBase
        fun C(Other: UObject): EnvQueryItemType_ActorBase
        fun C(Other: Any): EnvQueryItemType_ActorBase
    }
}

external open class EnvQueryItemType_Actor : EnvQueryItemType_ActorBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EnvQueryItemType_Actor
        fun Find(Outer: UObject, ResourceName: String): EnvQueryItemType_Actor
        fun GetDefaultObject(): EnvQueryItemType_Actor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryItemType_Actor
        fun C(Other: UObject): EnvQueryItemType_Actor
        fun C(Other: Any): EnvQueryItemType_Actor
    }
}

external open class EnvQueryItemType_Direction : EnvQueryItemType_VectorBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EnvQueryItemType_Direction
        fun Find(Outer: UObject, ResourceName: String): EnvQueryItemType_Direction
        fun GetDefaultObject(): EnvQueryItemType_Direction
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryItemType_Direction
        fun C(Other: UObject): EnvQueryItemType_Direction
        fun C(Other: Any): EnvQueryItemType_Direction
    }
}

external open class EnvQueryItemType_Point : EnvQueryItemType_VectorBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EnvQueryItemType_Point
        fun Find(Outer: UObject, ResourceName: String): EnvQueryItemType_Point
        fun GetDefaultObject(): EnvQueryItemType_Point
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryItemType_Point
        fun C(Other: UObject): EnvQueryItemType_Point
        fun C(Other: Any): EnvQueryItemType_Point
    }
}

external object EEnvTestDistance {
    var Distance3D: String /* "Distance3D" */
    var Distance2D: String /* "Distance2D" */
    var DistanceZ: String /* "DistanceZ" */
    var DistanceAbsoluteZ: String /* "DistanceAbsoluteZ" */
    var EEnvTestDistance_MAX: String /* "EEnvTestDistance_MAX" */
}

external open class EnvQueryTest_Distance : EnvQueryTest {
    constructor()
    constructor(Outer: UObject)
    open var TestMode: String /* "Distance3D" | "Distance2D" | "DistanceZ" | "DistanceAbsoluteZ" | "EEnvTestDistance_MAX" */
    open var DistanceTo: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): EnvQueryTest_Distance
        fun Find(Outer: UObject, ResourceName: String): EnvQueryTest_Distance
        fun GetDefaultObject(): EnvQueryTest_Distance
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryTest_Distance
        fun C(Other: UObject): EnvQueryTest_Distance
        fun C(Other: Any): EnvQueryTest_Distance
    }
}

external object EEnvTestDot {
    var Dot3D: String /* "Dot3D" */
    var Dot2D: String /* "Dot2D" */
    var EEnvTestDot_MAX: String /* "EEnvTestDot_MAX" */
}

external open class EnvQueryTest_Dot : EnvQueryTest {
    constructor()
    constructor(Outer: UObject)
    open var LineA: EnvDirection
    open var LineB: EnvDirection
    open var TestMode: String /* "Dot3D" | "Dot2D" | "EEnvTestDot_MAX" */
    open var bAbsoluteValue: Boolean

    companion object {
        fun Load(ResourceName: String): EnvQueryTest_Dot
        fun Find(Outer: UObject, ResourceName: String): EnvQueryTest_Dot
        fun GetDefaultObject(): EnvQueryTest_Dot
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryTest_Dot
        fun C(Other: UObject): EnvQueryTest_Dot
        fun C(Other: Any): EnvQueryTest_Dot
    }
}

external open class EnvQueryTest_GameplayTags : EnvQueryTest {
    constructor()
    constructor(Outer: UObject)
    open var TagQueryToMatch: GameplayTagQuery
    open var bUpdatedToUseQuery: Boolean
    open var TagsToMatch: String /* "Any" | "All" | "EGameplayContainerMatchType_MAX" */
    open var GameplayTags: GameplayTagContainer

    companion object {
        fun Load(ResourceName: String): EnvQueryTest_GameplayTags
        fun Find(Outer: UObject, ResourceName: String): EnvQueryTest_GameplayTags
        fun GetDefaultObject(): EnvQueryTest_GameplayTags
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryTest_GameplayTags
        fun C(Other: UObject): EnvQueryTest_GameplayTags
        fun C(Other: Any): EnvQueryTest_GameplayTags
    }
}

external object EEnvOverlapShape {
    var Box: String /* "Box" */
    var Sphere: String /* "Sphere" */
    var Capsule: String /* "Capsule" */
    var EEnvOverlapShape_MAX: String /* "EEnvOverlapShape_MAX" */
}

external open class EnvOverlapData {
    open var ExtentX: Number
    open var ExtentY: Number
    open var ExtentZ: Number
    open var ShapeOffset: Vector
    open var OverlapChannel: String /* "ECC_WorldStatic" | "ECC_WorldDynamic" | "ECC_Pawn" | "ECC_Visibility" | "ECC_Camera" | "ECC_PhysicsBody" | "ECC_Vehicle" | "ECC_Destructible" | "ECC_EngineTraceChannel1" | "ECC_EngineTraceChannel2" | "ECC_EngineTraceChannel3" | "ECC_EngineTraceChannel4" | "ECC_EngineTraceChannel5" | "ECC_EngineTraceChannel6" | "ECC_GameTraceChannel1" | "ECC_GameTraceChannel2" | "ECC_GameTraceChannel3" | "ECC_GameTraceChannel4" | "ECC_GameTraceChannel5" | "ECC_GameTraceChannel6" | "ECC_GameTraceChannel7" | "ECC_GameTraceChannel8" | "ECC_GameTraceChannel9" | "ECC_GameTraceChannel10" | "ECC_GameTraceChannel11" | "ECC_GameTraceChannel12" | "ECC_GameTraceChannel13" | "ECC_GameTraceChannel14" | "ECC_GameTraceChannel15" | "ECC_GameTraceChannel16" | "ECC_GameTraceChannel17" | "ECC_GameTraceChannel18" | "ECC_OverlapAll_Deprecated" | "ECC_MAX" */
    open var OverlapShape: String /* "Box" | "Sphere" | "Capsule" | "EEnvOverlapShape_MAX" */
    open var bOnlyBlockingHits: Boolean
    open var bOverlapComplex: Boolean
    open var bSkipOverlapQuerier: Boolean
    open fun clone(): EnvOverlapData

    companion object {
        fun C(Other: UObject): EnvOverlapData
        fun C(Other: Any): EnvOverlapData
    }
}

external open class EnvQueryTest_Overlap : EnvQueryTest {
    constructor()
    constructor(Outer: UObject)
    open var OverlapData: EnvOverlapData

    companion object {
        fun Load(ResourceName: String): EnvQueryTest_Overlap
        fun Find(Outer: UObject, ResourceName: String): EnvQueryTest_Overlap
        fun GetDefaultObject(): EnvQueryTest_Overlap
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryTest_Overlap
        fun C(Other: UObject): EnvQueryTest_Overlap
        fun C(Other: Any): EnvQueryTest_Overlap
    }
}

external object EEnvTestPathfinding {
    var PathExist: String /* "PathExist" */
    var PathCost: String /* "PathCost" */
    var PathLength: String /* "PathLength" */
    var EEnvTestPathfinding_MAX: String /* "EEnvTestPathfinding_MAX" */
}

external open class EnvQueryTest_Pathfinding : EnvQueryTest {
    constructor()
    constructor(Outer: UObject)
    open var TestMode: String /* "PathExist" | "PathCost" | "PathLength" | "EEnvTestPathfinding_MAX" */
    open var Context: UnrealEngineClass
    open var PathFromContext: AIDataProviderBoolValue
    open var SkipUnreachable: AIDataProviderBoolValue
    open var FilterClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): EnvQueryTest_Pathfinding
        fun Find(Outer: UObject, ResourceName: String): EnvQueryTest_Pathfinding
        fun GetDefaultObject(): EnvQueryTest_Pathfinding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryTest_Pathfinding
        fun C(Other: UObject): EnvQueryTest_Pathfinding
        fun C(Other: Any): EnvQueryTest_Pathfinding
    }
}

external open class EnvQueryTest_PathfindingBatch : EnvQueryTest_Pathfinding {
    constructor()
    constructor(Outer: UObject)
    open var ScanRangeMultiplier: AIDataProviderFloatValue

    companion object {
        fun Load(ResourceName: String): EnvQueryTest_PathfindingBatch
        fun Find(Outer: UObject, ResourceName: String): EnvQueryTest_PathfindingBatch
        fun GetDefaultObject(): EnvQueryTest_PathfindingBatch
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryTest_PathfindingBatch
        fun C(Other: UObject): EnvQueryTest_PathfindingBatch
        fun C(Other: Any): EnvQueryTest_PathfindingBatch
    }
}

external open class EnvQueryTest_Project : EnvQueryTest {
    constructor()
    constructor(Outer: UObject)
    open var ProjectionData: EnvTraceData

    companion object {
        fun Load(ResourceName: String): EnvQueryTest_Project
        fun Find(Outer: UObject, ResourceName: String): EnvQueryTest_Project
        fun GetDefaultObject(): EnvQueryTest_Project
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryTest_Project
        fun C(Other: UObject): EnvQueryTest_Project
        fun C(Other: Any): EnvQueryTest_Project
    }
}

external open class EnvQueryTest_Random : EnvQueryTest {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EnvQueryTest_Random
        fun Find(Outer: UObject, ResourceName: String): EnvQueryTest_Random
        fun GetDefaultObject(): EnvQueryTest_Random
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryTest_Random
        fun C(Other: UObject): EnvQueryTest_Random
        fun C(Other: Any): EnvQueryTest_Random
    }
}

external open class EnvQueryTest_Trace : EnvQueryTest {
    constructor()
    constructor(Outer: UObject)
    open var TraceData: EnvTraceData
    open var TraceFromContext: AIDataProviderBoolValue
    open var ItemHeightOffset: AIDataProviderFloatValue
    open var ContextHeightOffset: AIDataProviderFloatValue
    open var Context: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): EnvQueryTest_Trace
        fun Find(Outer: UObject, ResourceName: String): EnvQueryTest_Trace
        fun GetDefaultObject(): EnvQueryTest_Trace
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryTest_Trace
        fun C(Other: UObject): EnvQueryTest_Trace
        fun C(Other: Any): EnvQueryTest_Trace
    }
}

external open class EnvQueryTest_Volume : EnvQueryTest {
    constructor()
    constructor(Outer: UObject)
    open var VolumeContext: UnrealEngineClass
    open var VolumeClass: UnrealEngineClass
    open var bDoComplexVolumeTest: Boolean

    companion object {
        fun Load(ResourceName: String): EnvQueryTest_Volume
        fun Find(Outer: UObject, ResourceName: String): EnvQueryTest_Volume
        fun GetDefaultObject(): EnvQueryTest_Volume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryTest_Volume
        fun C(Other: UObject): EnvQueryTest_Volume
        fun C(Other: Any): EnvQueryTest_Volume
    }
}

external open class EnvQueryTypes : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EnvQueryTypes
        fun Find(Outer: UObject, ResourceName: String): EnvQueryTypes
        fun GetDefaultObject(): EnvQueryTypes
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryTypes
        fun C(Other: UObject): EnvQueryTypes
        fun C(Other: Any): EnvQueryTypes
    }
}

external open class EQSQueryResultSourceInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EQSQueryResultSourceInterface
        fun Find(Outer: UObject, ResourceName: String): EQSQueryResultSourceInterface
        fun GetDefaultObject(): EQSQueryResultSourceInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EQSQueryResultSourceInterface
        fun C(Other: UObject): EQSQueryResultSourceInterface
        fun C(Other: Any): EQSQueryResultSourceInterface
    }
}

external open class EQSRenderingComponent : PrimitiveComponent {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EQSRenderingComponent
        fun Find(Outer: UObject, ResourceName: String): EQSRenderingComponent
        fun GetDefaultObject(): EQSRenderingComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EQSRenderingComponent
        fun C(Other: UObject): EQSRenderingComponent
        fun C(Other: Any): EQSRenderingComponent
    }
}

external object EEnvQueryHightlightMode {
    var All: String /* "All" */
    var Best5Pct: String /* "Best5Pct" */
    var Best25Pct: String /* "Best25Pct" */
    var EEnvQueryHightlightMode_MAX: String /* "EEnvQueryHightlightMode_MAX" */
}

external open class EQSTestingPawn(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Character {
    open var QueryTemplate: EnvQuery
    open var QueryParams: Array<EnvNamedValue>
    open var QueryConfig: Array<AIDynamicParam>
    open var TimeLimitPerStep: Number
    open var StepToDebugDraw: Number
    open var HighlightMode: String /* "All" | "Best5Pct" | "Best25Pct" | "EEnvQueryHightlightMode_MAX" */
    open var bDrawLabels: Boolean
    open var bDrawFailedItems: Boolean
    open var bReRunQueryOnlyOnFinishedMove: Boolean
    open var bShouldBeVisibleInGame: Boolean
    open var bTickDuringGame: Boolean
    open var QueryingMode: String /* "SingleResult" | "RandomBest5Pct" | "RandomBest25Pct" | "AllMatching" | "EEnvQueryRunMode_MAX" */
    open var NavAgentProperties: NavAgentProperties
    open var EdRenderComp: EQSRenderingComponent

    companion object {
        fun GetDefaultObject(): EQSTestingPawn
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EQSTestingPawn
        fun C(Other: UObject): EQSTestingPawn
        fun C(Other: Any): EQSTestingPawn
    }
}

external open class GenericTeamAgentInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GenericTeamAgentInterface
        fun Find(Outer: UObject, ResourceName: String): GenericTeamAgentInterface
        fun GetDefaultObject(): GenericTeamAgentInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GenericTeamAgentInterface
        fun C(Other: UObject): GenericTeamAgentInterface
        fun C(Other: Any): GenericTeamAgentInterface
    }
}

external open class GridPathAIController(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : AIController {
    companion object {
        fun GetDefaultObject(): GridPathAIController
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GridPathAIController
        fun C(Other: UObject): GridPathAIController
        fun C(Other: Any): GridPathAIController
    }
}

external open class GridPathFollowingComponent : PathFollowingComponent {
    constructor()
    constructor(Outer: UObject)
    open var GridManager: NavLocalGridManager

    companion object {
        fun Load(ResourceName: String): GridPathFollowingComponent
        fun Find(Outer: UObject, ResourceName: String): GridPathFollowingComponent
        fun GetDefaultObject(): GridPathFollowingComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GridPathFollowingComponent
        fun C(Other: UObject): GridPathFollowingComponent
        fun C(Other: Any): GridPathFollowingComponent
    }
}

external open class NavFilter_AIControllerDefault : NavigationQueryFilter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NavFilter_AIControllerDefault
        fun Find(Outer: UObject, ResourceName: String): NavFilter_AIControllerDefault
        fun GetDefaultObject(): NavFilter_AIControllerDefault
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavFilter_AIControllerDefault
        fun C(Other: UObject): NavFilter_AIControllerDefault
        fun C(Other: Any): NavFilter_AIControllerDefault
    }
}

external open class NavLinkProxy(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var PointLinks: Array<NavigationLink>
    open var SegmentLinks: Array<NavigationSegmentLink>
    open var SmartLinkComp: NavLinkCustomComponent
    open var bSmartLinkIsRelevant: Boolean
    open var EdRenderComp: NavLinkRenderingComponent
    open var SpriteComponent: BillboardComponent
    open var OnSmartLinkReached: UnrealEngineMulticastDelegate<(MovingActor: Actor, DestinationPoint: Vector) -> Unit>
    open fun SetSmartLinkEnabled(bEnabled: Boolean)
    open fun ResumePathFollowing(Agent: Actor)
    open fun ReceiveSmartLinkReached(Agent: Actor, Destination: Vector)
    open fun IsSmartLinkEnabled(): Boolean
    open fun HasMovingAgents(): Boolean

    companion object {
        fun GetDefaultObject(): NavLinkProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavLinkProxy
        fun C(Other: UObject): NavLinkProxy
        fun C(Other: Any): NavLinkProxy
    }
}

external open class PathFollowingManager : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PathFollowingManager
        fun Find(Outer: UObject, ResourceName: String): PathFollowingManager
        fun GetDefaultObject(): PathFollowingManager
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PathFollowingManager
        fun C(Other: UObject): PathFollowingManager
        fun C(Other: Any): PathFollowingManager
    }
}

external open class PawnAction_BlueprintBase : PawnAction {
    constructor()
    constructor(Outer: UObject)
    open fun ActionTick(ControlledPawn: Pawn, DeltaSeconds: Number)
    open fun ActionStart(ControlledPawn: Pawn)
    open fun ActionResume(ControlledPawn: Pawn)
    open fun ActionPause(ControlledPawn: Pawn)
    open fun ActionFinished(ControlledPawn: Pawn, WithResult: String /* "NotStarted" | "InProgress" | "Success" | "Failed" | "Aborted" | "EPawnActionResult_MAX" */)

    companion object {
        fun Load(ResourceName: String): PawnAction_BlueprintBase
        fun Find(Outer: UObject, ResourceName: String): PawnAction_BlueprintBase
        fun GetDefaultObject(): PawnAction_BlueprintBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PawnAction_BlueprintBase
        fun C(Other: UObject): PawnAction_BlueprintBase
        fun C(Other: Any): PawnAction_BlueprintBase
    }
}

external open class PawnAction_Move : PawnAction {
    constructor()
    constructor(Outer: UObject)
    open var GoalActor: Actor
    open var GoalLocation: Vector
    open var AcceptableRadius: Number
    open var FilterClass: UnrealEngineClass
    open var bAllowStrafe: Boolean
    open var bFinishOnOverlap: Boolean
    open var bUsePathfinding: Boolean
    open var bAllowPartialPath: Boolean
    open var bProjectGoalToNavigation: Boolean
    open var bUpdatePathToGoal: Boolean
    open var bAbortChildActionOnPathChange: Boolean

    companion object {
        fun Load(ResourceName: String): PawnAction_Move
        fun Find(Outer: UObject, ResourceName: String): PawnAction_Move
        fun GetDefaultObject(): PawnAction_Move
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PawnAction_Move
        fun C(Other: UObject): PawnAction_Move
        fun C(Other: Any): PawnAction_Move
    }
}

external object EPawnActionFailHandling {
    var RequireSuccess: String /* "RequireSuccess" */
    var IgnoreFailure: String /* "IgnoreFailure" */
    var EPawnActionFailHandling_MAX: String /* "EPawnActionFailHandling_MAX" */
}

external open class PawnAction_Repeat : PawnAction {
    constructor()
    constructor(Outer: UObject)
    open var ActionToRepeat: PawnAction
    open var RecentActionCopy: PawnAction
    open var ChildFailureHandlingMode: String /* "RequireSuccess" | "IgnoreFailure" | "EPawnActionFailHandling_MAX" */

    companion object {
        fun Load(ResourceName: String): PawnAction_Repeat
        fun Find(Outer: UObject, ResourceName: String): PawnAction_Repeat
        fun GetDefaultObject(): PawnAction_Repeat
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PawnAction_Repeat
        fun C(Other: UObject): PawnAction_Repeat
        fun C(Other: Any): PawnAction_Repeat
    }
}

external open class PawnAction_Sequence : PawnAction {
    constructor()
    constructor(Outer: UObject)
    open var ActionSequence: Array<PawnAction>
    open var ChildFailureHandlingMode: String /* "RequireSuccess" | "IgnoreFailure" | "EPawnActionFailHandling_MAX" */
    open var RecentActionCopy: PawnAction

    companion object {
        fun Load(ResourceName: String): PawnAction_Sequence
        fun Find(Outer: UObject, ResourceName: String): PawnAction_Sequence
        fun GetDefaultObject(): PawnAction_Sequence
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PawnAction_Sequence
        fun C(Other: UObject): PawnAction_Sequence
        fun C(Other: Any): PawnAction_Sequence
    }
}

external open class PawnAction_Wait : PawnAction {
    constructor()
    constructor(Outer: UObject)
    open var TimeToWait: Number

    companion object {
        fun Load(ResourceName: String): PawnAction_Wait
        fun Find(Outer: UObject, ResourceName: String): PawnAction_Wait
        fun GetDefaultObject(): PawnAction_Wait
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PawnAction_Wait
        fun C(Other: UObject): PawnAction_Wait
        fun C(Other: Any): PawnAction_Wait
    }
}

external open class PawnSensingComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var HearingThreshold: Number
    open var LOSHearingThreshold: Number
    open var SightRadius: Number
    open var SensingInterval: Number
    open var HearingMaxSoundAge: Number
    open var bEnableSensingUpdates: Boolean
    open var bOnlySensePlayers: Boolean
    open var bSeePawns: Boolean
    open var bHearNoises: Boolean
    open var OnSeePawn: UnrealEngineMulticastDelegate<(Pawn: Pawn) -> Unit>
    open var OnHearNoise: UnrealEngineMulticastDelegate<(Instigator: Pawn, Location: Vector, Volume: Number) -> Unit>
    open var PeripheralVisionAngle: Number
    open var PeripheralVisionCosine: Number
    open fun SetSensingUpdatesEnabled(bEnabled: Boolean)
    open fun SetSensingInterval(NewSensingInterval: Number)
    open fun SetPeripheralVisionAngle(NewPeripheralVisionAngle: Number)
    open fun GetPeripheralVisionCosine(): Number
    open fun GetPeripheralVisionAngle(): Number

    companion object {
        fun Load(ResourceName: String): PawnSensingComponent
        fun Find(Outer: UObject, ResourceName: String): PawnSensingComponent
        fun GetDefaultObject(): PawnSensingComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PawnSensingComponent
        fun C(Other: UObject): PawnSensingComponent
        fun C(Other: Any): PawnSensingComponent
    }
}

external open class VisualLoggerExtension : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): VisualLoggerExtension
        fun Find(Outer: UObject, ResourceName: String): VisualLoggerExtension
        fun GetDefaultObject(): VisualLoggerExtension
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VisualLoggerExtension
        fun C(Other: UObject): VisualLoggerExtension
        fun C(Other: Any): VisualLoggerExtension
    }
}

external open class DatasmithObjectTemplate : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DatasmithObjectTemplate
        fun Find(Outer: UObject, ResourceName: String): DatasmithObjectTemplate
        fun GetDefaultObject(): DatasmithObjectTemplate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithObjectTemplate
        fun C(Other: UObject): DatasmithObjectTemplate
        fun C(Other: Any): DatasmithObjectTemplate
    }
}

external open class DatasmithActorTemplate : DatasmithObjectTemplate {
    constructor()
    constructor(Outer: UObject)
    open var Layers: Any
    open var Tags: Any

    companion object {
        fun Load(ResourceName: String): DatasmithActorTemplate
        fun Find(Outer: UObject, ResourceName: String): DatasmithActorTemplate
        fun GetDefaultObject(): DatasmithActorTemplate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithActorTemplate
        fun C(Other: UObject): DatasmithActorTemplate
        fun C(Other: Any): DatasmithActorTemplate
    }
}

external open class DatasmithAdditionalData : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DatasmithAdditionalData
        fun Find(Outer: UObject, ResourceName: String): DatasmithAdditionalData
        fun GetDefaultObject(): DatasmithAdditionalData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithAdditionalData
        fun C(Other: UObject): DatasmithAdditionalData
        fun C(Other: Any): DatasmithAdditionalData
    }
}

external object EDatasmithAreaLightActorType {
    var Point: String /* "Point" */
    var Spot: String /* "Spot" */
    var Rect: String /* "Rect" */
    var EDatasmithAreaLightActorType_MAX: String /* "EDatasmithAreaLightActorType_MAX" */
}

external object EDatasmithAreaLightActorShape {
    var Rectangle: String /* "Rectangle" */
    var Disc: String /* "Disc" */
    var Sphere: String /* "Sphere" */
    var Cylinder: String /* "Cylinder" */
    var None: String /* "None" */
    var EDatasmithAreaLightActorShape_MAX: String /* "EDatasmithAreaLightActorShape_MAX" */
}

external open class DatasmithAreaLightActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var LightType: String /* "Point" | "Spot" | "Rect" | "EDatasmithAreaLightActorType_MAX" */
    open var LightShape: String /* "Rectangle" | "Disc" | "Sphere" | "Cylinder" | "None" | "EDatasmithAreaLightActorShape_MAX" */
    open var Dimensions: Vector2D
    open var Intensity: Number
    open var IntensityUnits: String /* "Unitless" | "Candelas" | "Lumens" | "ELightUnits_MAX" */
    open var Color: LinearColor
    open var Temperature: Number
    open var IESTexture: TextureLightProfile
    open var bUseIESBrightness: Boolean
    open var IESBrightnessScale: Number
    open var Rotation: Rotator
    open var SourceRadius: Number
    open var SourceLength: Number
    open var AttenuationRadius: Number
    open var SpotlightInnerAngle: Number
    open var SpotlightOuterAngle: Number

    companion object {
        fun GetDefaultObject(): DatasmithAreaLightActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithAreaLightActor
        fun C(Other: UObject): DatasmithAreaLightActor
        fun C(Other: Any): DatasmithAreaLightActor
    }
}

external open class DatasmithAreaLightActorTemplate : DatasmithObjectTemplate {
    constructor()
    constructor(Outer: UObject)
    open var LightType: String /* "Point" | "Spot" | "Rect" | "EDatasmithAreaLightActorType_MAX" */
    open var LightShape: String /* "Rectangle" | "Disc" | "Sphere" | "Cylinder" | "None" | "EDatasmithAreaLightActorShape_MAX" */
    open var Dimensions: Vector2D
    open var Color: LinearColor
    open var Intensity: Number
    open var IntensityUnits: String /* "Unitless" | "Candelas" | "Lumens" | "ELightUnits_MAX" */
    open var Temperature: Number
    open var IESTexture: TextureLightProfile
    open var bUseIESBrightness: Boolean
    open var IESBrightnessScale: Number
    open var Rotation: Rotator
    open var SourceRadius: Number
    open var SourceLength: Number
    open var AttenuationRadius: Number

    companion object {
        fun Load(ResourceName: String): DatasmithAreaLightActorTemplate
        fun Find(Outer: UObject, ResourceName: String): DatasmithAreaLightActorTemplate
        fun GetDefaultObject(): DatasmithAreaLightActorTemplate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithAreaLightActorTemplate
        fun C(Other: UObject): DatasmithAreaLightActorTemplate
        fun C(Other: Any): DatasmithAreaLightActorTemplate
    }
}

external open class DatasmithAssetImportOptions {
    open var PackagePath: String
    open fun clone(): DatasmithAssetImportOptions

    companion object {
        fun C(Other: UObject): DatasmithAssetImportOptions
        fun C(Other: Any): DatasmithAssetImportOptions
    }
}

external open class DatasmithAssetImportData : AssetImportData {
    constructor()
    constructor(Outer: UObject)
    open var AssetImportOptions: DatasmithAssetImportOptions
    open var AdditionalData: Array<DatasmithAdditionalData>

    companion object {
        fun Load(ResourceName: String): DatasmithAssetImportData
        fun Find(Outer: UObject, ResourceName: String): DatasmithAssetImportData
        fun GetDefaultObject(): DatasmithAssetImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithAssetImportData
        fun C(Other: UObject): DatasmithAssetImportData
        fun C(Other: Any): DatasmithAssetImportData
    }
}

external object EDatasmithImportLightmapMin {
    var LIGHTMAP_16: String /* "LIGHTMAP_16" */
    var LIGHTMAP_32: String /* "LIGHTMAP_32" */
    var LIGHTMAP_64: String /* "LIGHTMAP_64" */
    var LIGHTMAP_128: String /* "LIGHTMAP_128" */
    var LIGHTMAP_256: String /* "LIGHTMAP_256" */
    var LIGHTMAP_512: String /* "LIGHTMAP_512" */
    var LIGHTMAP_MAX: String /* "LIGHTMAP_MAX" */
}

external object EDatasmithImportLightmapMax {
    var LIGHTMAP_64: String /* "LIGHTMAP_64" */
    var LIGHTMAP_128: String /* "LIGHTMAP_128" */
    var LIGHTMAP_256: String /* "LIGHTMAP_256" */
    var LIGHTMAP_512: String /* "LIGHTMAP_512" */
    var LIGHTMAP_1024: String /* "LIGHTMAP_1024" */
    var LIGHTMAP_2048: String /* "LIGHTMAP_2048" */
    var LIGHTMAP_4096: String /* "LIGHTMAP_4096" */
    var LIGHTMAP_MAX: String /* "LIGHTMAP_MAX" */
}

external open class DatasmithStaticMeshImportOptions {
    open var MinLightmapResolution: String /* "LIGHTMAP_16" | "LIGHTMAP_32" | "LIGHTMAP_64" | "LIGHTMAP_128" | "LIGHTMAP_256" | "LIGHTMAP_512" | "LIGHTMAP_MAX" */
    open var MaxLightmapResolution: String /* "LIGHTMAP_64" | "LIGHTMAP_128" | "LIGHTMAP_256" | "LIGHTMAP_512" | "LIGHTMAP_1024" | "LIGHTMAP_2048" | "LIGHTMAP_4096" | "LIGHTMAP_MAX" */
    open var bGenerateLightmapUVs: Boolean
    open var bRemoveDegenerates: Boolean
    open fun clone(): DatasmithStaticMeshImportOptions

    companion object {
        fun C(Other: UObject): DatasmithStaticMeshImportOptions
        fun C(Other: Any): DatasmithStaticMeshImportOptions
    }
}

external open class DatasmithStaticMeshImportData : DatasmithAssetImportData {
    constructor()
    constructor(Outer: UObject)
    open var ImportOptions: DatasmithStaticMeshImportOptions

    companion object {
        fun Load(ResourceName: String): DatasmithStaticMeshImportData
        fun Find(Outer: UObject, ResourceName: String): DatasmithStaticMeshImportData
        fun GetDefaultObject(): DatasmithStaticMeshImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithStaticMeshImportData
        fun C(Other: UObject): DatasmithStaticMeshImportData
        fun C(Other: Any): DatasmithStaticMeshImportData
    }
}

external object EDatasmithCADStitchingTechnique {
    var StitchingNone: String /* "StitchingNone" */
    var StitchingHeal: String /* "StitchingHeal" */
    var StitchingSew: String /* "StitchingSew" */
    var EDatasmithCADStitchingTechnique_MAX: String /* "EDatasmithCADStitchingTechnique_MAX" */
}

external open class DatasmithTessellationOptions {
    open var ChordTolerance: Number
    open var MaxEdgeLength: Number
    open var NormalTolerance: Number
    open var StitchingTechnique: String /* "StitchingNone" | "StitchingHeal" | "StitchingSew" | "EDatasmithCADStitchingTechnique_MAX" */
    open fun clone(): DatasmithTessellationOptions

    companion object {
        fun C(Other: UObject): DatasmithTessellationOptions
        fun C(Other: Any): DatasmithTessellationOptions
    }
}

external open class DatasmithStaticMeshCADImportData : DatasmithStaticMeshImportData {
    constructor()
    constructor(Outer: UObject)
    open var TessellationOptions: DatasmithTessellationOptions
    open var ModelUnit: Any
    open var ModelTolerance: Any
    open var ResourcePath: String
    open var ResourceFilename: String
    open var AuxiliaryFilenames: Array<String>

    companion object {
        fun Load(ResourceName: String): DatasmithStaticMeshCADImportData
        fun Find(Outer: UObject, ResourceName: String): DatasmithStaticMeshCADImportData
        fun GetDefaultObject(): DatasmithStaticMeshCADImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithStaticMeshCADImportData
        fun C(Other: UObject): DatasmithStaticMeshCADImportData
        fun C(Other: Any): DatasmithStaticMeshCADImportData
    }
}

external object EDatasmithImportScene {
    var NewLevel: String /* "NewLevel" */
    var CurrentLevel: String /* "CurrentLevel" */
    var AssetsOnly: String /* "AssetsOnly" */
    var EDatasmithImportScene_MAX: String /* "EDatasmithImportScene_MAX" */
}

external open class DatasmithImportBaseOptions {
    open var SceneHandling: String /* "NewLevel" | "CurrentLevel" | "AssetsOnly" | "EDatasmithImportScene_MAX" */
    open var bIncludeGeometry: Boolean
    open var bIncludeMaterial: Boolean
    open var bIncludeLight: Boolean
    open var bIncludeCamera: Boolean
    open var bIncludeAnimation: Boolean
    open var AssetOptions: DatasmithAssetImportOptions
    open var StaticMeshOptions: DatasmithStaticMeshImportOptions
    open fun clone(): DatasmithImportBaseOptions

    companion object {
        fun C(Other: UObject): DatasmithImportBaseOptions
        fun C(Other: Any): DatasmithImportBaseOptions
    }
}

external open class DatasmithSceneImportData : AssetImportData {
    constructor()
    constructor(Outer: UObject)
    open var BaseOptions: DatasmithImportBaseOptions

    companion object {
        fun Load(ResourceName: String): DatasmithSceneImportData
        fun Find(Outer: UObject, ResourceName: String): DatasmithSceneImportData
        fun GetDefaultObject(): DatasmithSceneImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithSceneImportData
        fun C(Other: UObject): DatasmithSceneImportData
        fun C(Other: Any): DatasmithSceneImportData
    }
}

external open class DatasmithTranslatedSceneImportData : DatasmithSceneImportData {
    constructor()
    constructor(Outer: UObject)
    open var OriginFactory: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): DatasmithTranslatedSceneImportData
        fun Find(Outer: UObject, ResourceName: String): DatasmithTranslatedSceneImportData
        fun GetDefaultObject(): DatasmithTranslatedSceneImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithTranslatedSceneImportData
        fun C(Other: UObject): DatasmithTranslatedSceneImportData
        fun C(Other: Any): DatasmithTranslatedSceneImportData
    }
}

external open class DatasmithCADImportSceneData : DatasmithSceneImportData {
    constructor()
    constructor(Outer: UObject)
    open var TessellationOptions: DatasmithTessellationOptions

    companion object {
        fun Load(ResourceName: String): DatasmithCADImportSceneData
        fun Find(Outer: UObject, ResourceName: String): DatasmithCADImportSceneData
        fun GetDefaultObject(): DatasmithCADImportSceneData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithCADImportSceneData
        fun C(Other: UObject): DatasmithCADImportSceneData
        fun C(Other: Any): DatasmithCADImportSceneData
    }
}

external open class DatasmithMDLSceneImportData : DatasmithSceneImportData {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DatasmithMDLSceneImportData
        fun Find(Outer: UObject, ResourceName: String): DatasmithMDLSceneImportData
        fun GetDefaultObject(): DatasmithMDLSceneImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithMDLSceneImportData
        fun C(Other: UObject): DatasmithMDLSceneImportData
        fun C(Other: Any): DatasmithMDLSceneImportData
    }
}

external open class DatasmithGLTFSceneImportData : DatasmithSceneImportData {
    constructor()
    constructor(Outer: UObject)
    open var Generator: String
    open var Version: Number
    open var Author: String
    open var License: String
    open var Source: String

    companion object {
        fun Load(ResourceName: String): DatasmithGLTFSceneImportData
        fun Find(Outer: UObject, ResourceName: String): DatasmithGLTFSceneImportData
        fun GetDefaultObject(): DatasmithGLTFSceneImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithGLTFSceneImportData
        fun C(Other: UObject): DatasmithGLTFSceneImportData
        fun C(Other: Any): DatasmithGLTFSceneImportData
    }
}

external open class DatasmithStaticMeshGLTFImportData : DatasmithStaticMeshImportData {
    constructor()
    constructor(Outer: UObject)
    open var SourceMeshName: String

    companion object {
        fun Load(ResourceName: String): DatasmithStaticMeshGLTFImportData
        fun Find(Outer: UObject, ResourceName: String): DatasmithStaticMeshGLTFImportData
        fun GetDefaultObject(): DatasmithStaticMeshGLTFImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithStaticMeshGLTFImportData
        fun C(Other: UObject): DatasmithStaticMeshGLTFImportData
        fun C(Other: Any): DatasmithStaticMeshGLTFImportData
    }
}

external open class DatasmithDeltaGenAssetImportData : DatasmithAssetImportData {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DatasmithDeltaGenAssetImportData
        fun Find(Outer: UObject, ResourceName: String): DatasmithDeltaGenAssetImportData
        fun GetDefaultObject(): DatasmithDeltaGenAssetImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithDeltaGenAssetImportData
        fun C(Other: UObject): DatasmithDeltaGenAssetImportData
        fun C(Other: Any): DatasmithDeltaGenAssetImportData
    }
}

external open class DatasmithDeltaGenSceneImportData : DatasmithSceneImportData {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DatasmithDeltaGenSceneImportData
        fun Find(Outer: UObject, ResourceName: String): DatasmithDeltaGenSceneImportData
        fun GetDefaultObject(): DatasmithDeltaGenSceneImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithDeltaGenSceneImportData
        fun C(Other: UObject): DatasmithDeltaGenSceneImportData
        fun C(Other: Any): DatasmithDeltaGenSceneImportData
    }
}

external open class DatasmithVREDAssetImportData : DatasmithAssetImportData {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DatasmithVREDAssetImportData
        fun Find(Outer: UObject, ResourceName: String): DatasmithVREDAssetImportData
        fun GetDefaultObject(): DatasmithVREDAssetImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithVREDAssetImportData
        fun C(Other: UObject): DatasmithVREDAssetImportData
        fun C(Other: Any): DatasmithVREDAssetImportData
    }
}

external open class DatasmithVREDSceneImportData : DatasmithSceneImportData {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DatasmithVREDSceneImportData
        fun Find(Outer: UObject, ResourceName: String): DatasmithVREDSceneImportData
        fun GetDefaultObject(): DatasmithVREDSceneImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithVREDSceneImportData
        fun C(Other: UObject): DatasmithVREDSceneImportData
        fun C(Other: Any): DatasmithVREDSceneImportData
    }
}

external open class DatasmithIFCSceneImportData : DatasmithSceneImportData {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DatasmithIFCSceneImportData
        fun Find(Outer: UObject, ResourceName: String): DatasmithIFCSceneImportData
        fun GetDefaultObject(): DatasmithIFCSceneImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithIFCSceneImportData
        fun C(Other: UObject): DatasmithIFCSceneImportData
        fun C(Other: Any): DatasmithIFCSceneImportData
    }
}

external open class DatasmithStaticMeshIFCImportData : DatasmithStaticMeshImportData {
    constructor()
    constructor(Outer: UObject)
    open var SourceGlobalId: String

    companion object {
        fun Load(ResourceName: String): DatasmithStaticMeshIFCImportData
        fun Find(Outer: UObject, ResourceName: String): DatasmithStaticMeshIFCImportData
        fun GetDefaultObject(): DatasmithStaticMeshIFCImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithStaticMeshIFCImportData
        fun C(Other: UObject): DatasmithStaticMeshIFCImportData
        fun C(Other: Any): DatasmithStaticMeshIFCImportData
    }
}

external open class DatasmithCameraLookatTrackingSettingsTemplate {
    open var bEnableLookAtTracking: Boolean
    open var bAllowRoll: Boolean
    open var ActorToTrack: Actor
    open fun clone(): DatasmithCameraLookatTrackingSettingsTemplate

    companion object {
        fun C(Other: UObject): DatasmithCameraLookatTrackingSettingsTemplate
        fun C(Other: Any): DatasmithCameraLookatTrackingSettingsTemplate
    }
}

external open class DatasmithCineCameraActorTemplate : DatasmithObjectTemplate {
    constructor()
    constructor(Outer: UObject)
    open var LookatTrackingSettings: DatasmithCameraLookatTrackingSettingsTemplate

    companion object {
        fun Load(ResourceName: String): DatasmithCineCameraActorTemplate
        fun Find(Outer: UObject, ResourceName: String): DatasmithCineCameraActorTemplate
        fun GetDefaultObject(): DatasmithCineCameraActorTemplate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithCineCameraActorTemplate
        fun C(Other: UObject): DatasmithCineCameraActorTemplate
        fun C(Other: Any): DatasmithCineCameraActorTemplate
    }
}

external open class DatasmithCameraFilmbackSettingsTemplate {
    open var SensorWidth: Number
    open var SensorHeight: Number
    open fun clone(): DatasmithCameraFilmbackSettingsTemplate

    companion object {
        fun C(Other: UObject): DatasmithCameraFilmbackSettingsTemplate
        fun C(Other: Any): DatasmithCameraFilmbackSettingsTemplate
    }
}

external open class DatasmithCameraLensSettingsTemplate {
    open var MaxFStop: Number
    open fun clone(): DatasmithCameraLensSettingsTemplate

    companion object {
        fun C(Other: UObject): DatasmithCameraLensSettingsTemplate
        fun C(Other: Any): DatasmithCameraLensSettingsTemplate
    }
}

external open class DatasmithCameraFocusSettingsTemplate {
    open var FocusMethod: String /* "None" | "Manual" | "Tracking" | "ECameraFocusMethod_MAX" */
    open var ManualFocusDistance: Number
    open fun clone(): DatasmithCameraFocusSettingsTemplate

    companion object {
        fun C(Other: UObject): DatasmithCameraFocusSettingsTemplate
        fun C(Other: Any): DatasmithCameraFocusSettingsTemplate
    }
}

external open class DatasmithPostProcessSettingsTemplate {
    open var bOverride_WhiteTemp: Boolean
    open var bOverride_ColorSaturation: Boolean
    open var bOverride_VignetteIntensity: Boolean
    open var bOverride_FilmWhitePoint: Boolean
    open var bOverride_AutoExposureMethod: Boolean
    open var bOverride_CameraISO: Boolean
    open var bOverride_CameraShutterSpeed: Boolean
    open var bOverride_DepthOfFieldFstop: Boolean
    open var WhiteTemp: Number
    open var VignetteIntensity: Number
    open var FilmWhitePoint: LinearColor
    open var ColorSaturation: Vector4
    open var AutoExposureMethod: String /* "AEM_Histogram" | "AEM_Basic" | "AEM_Manual" | "AEM_MAX" */
    open var CameraISO: Number
    open var CameraShutterSpeed: Number
    open var DepthOfFieldFstop: Number
    open fun clone(): DatasmithPostProcessSettingsTemplate

    companion object {
        fun C(Other: UObject): DatasmithPostProcessSettingsTemplate
        fun C(Other: Any): DatasmithPostProcessSettingsTemplate
    }
}

external open class DatasmithCineCameraComponentTemplate : DatasmithObjectTemplate {
    constructor()
    constructor(Outer: UObject)
    open var FilmbackSettings: DatasmithCameraFilmbackSettingsTemplate
    open var LensSettings: DatasmithCameraLensSettingsTemplate
    open var FocusSettings: DatasmithCameraFocusSettingsTemplate
    open var CurrentFocalLength: Number
    open var CurrentAperture: Number
    open var PostProcessSettings: DatasmithPostProcessSettingsTemplate

    companion object {
        fun Load(ResourceName: String): DatasmithCineCameraComponentTemplate
        fun Find(Outer: UObject, ResourceName: String): DatasmithCineCameraComponentTemplate
        fun GetDefaultObject(): DatasmithCineCameraComponentTemplate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithCineCameraComponentTemplate
        fun C(Other: UObject): DatasmithCineCameraComponentTemplate
        fun C(Other: Any): DatasmithCineCameraComponentTemplate
    }
}

external interface `T$42` {
    var OutKeys: Array<String>
    var OutValues: Array<String>
}

external interface `T$43` {
    var OutObjects: Array<UObject>
    var OutValues: Array<String>
}

external interface `T$44` {
    var OutUserData: Array<DatasmithAssetUserData>
}

external open class DatasmithContentBlueprintLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DatasmithContentBlueprintLibrary
        fun Find(Outer: UObject, ResourceName: String): DatasmithContentBlueprintLibrary
        fun GetDefaultObject(): DatasmithContentBlueprintLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithContentBlueprintLibrary
        fun GetDatasmithUserDataValueForKey(UObject: UObject, Key: String): String
        fun GetDatasmithUserDataKeysAndValuesForValue(UObject: UObject, StringToMatch: String, OutKeys: Array<String> = definedExternally, OutValues: Array<String> = definedExternally): `T$42`
        fun GetDatasmithUserData(UObject: UObject): DatasmithAssetUserData
        fun GetAllObjectsAndValuesForKey(Key: String, ObjectClass: UnrealEngineClass, OutObjects: Array<UObject> = definedExternally, OutValues: Array<String> = definedExternally): `T$43`
        fun GetAllDatasmithUserData(ObjectClass: UnrealEngineClass, OutUserData: Array<DatasmithAssetUserData> = definedExternally): `T$44`
        fun C(Other: UObject): DatasmithContentBlueprintLibrary
        fun C(Other: Any): DatasmithContentBlueprintLibrary
    }
}

external open class DatasmithCustomActionBase : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DatasmithCustomActionBase
        fun Find(Outer: UObject, ResourceName: String): DatasmithCustomActionBase
        fun GetDefaultObject(): DatasmithCustomActionBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithCustomActionBase
        fun C(Other: UObject): DatasmithCustomActionBase
        fun C(Other: Any): DatasmithCustomActionBase
    }
}

external open class DatasmithImportedSequencesActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var ImportedSequences: Array<LevelSequence>
    open fun PlayLevelSequence(SequenceToPlay: LevelSequence)

    companion object {
        fun GetDefaultObject(): DatasmithImportedSequencesActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithImportedSequencesActor
        fun C(Other: UObject): DatasmithImportedSequencesActor
        fun C(Other: Any): DatasmithImportedSequencesActor
    }
}

external open class DatasmithCommonTessellationOptions : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Options: DatasmithTessellationOptions

    companion object {
        fun Load(ResourceName: String): DatasmithCommonTessellationOptions
        fun Find(Outer: UObject, ResourceName: String): DatasmithCommonTessellationOptions
        fun GetDefaultObject(): DatasmithCommonTessellationOptions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithCommonTessellationOptions
        fun C(Other: UObject): DatasmithCommonTessellationOptions
        fun C(Other: Any): DatasmithCommonTessellationOptions
    }
}

external object EDatasmithImportSearchPackagePolicy {
    var Current: String /* "Current" */
    var All: String /* "All" */
    var EDatasmithImportSearchPackagePolicy_MAX: String /* "EDatasmithImportSearchPackagePolicy_MAX" */
}

external object EDatasmithImportAssetConflictPolicy {
    var Replace: String /* "Replace" */
    var Update: String /* "Update" */
    var Use: String /* "Use" */
    var Ignore: String /* "Ignore" */
    var EDatasmithImportAssetConflictPolicy_MAX: String /* "EDatasmithImportAssetConflictPolicy_MAX" */
}

external object EDatasmithImportActorPolicy {
    var Update: String /* "Update" */
    var Full: String /* "Full" */
    var Ignore: String /* "Ignore" */
    var EDatasmithImportActorPolicy_MAX: String /* "EDatasmithImportActorPolicy_MAX" */
}

external object EDatasmithImportMaterialQuality {
    var UseNoFresnelCurves: String /* "UseNoFresnelCurves" */
    var UseSimplifierFresnelCurves: String /* "UseSimplifierFresnelCurves" */
    var UseRealFresnelCurves: String /* "UseRealFresnelCurves" */
    var EDatasmithImportMaterialQuality_MAX: String /* "EDatasmithImportMaterialQuality_MAX" */
}

external open class DatasmithReimportOptions {
    open var bUpdateActors: Boolean
    open var bRespawnDeletedActors: Boolean
    open fun clone(): DatasmithReimportOptions

    companion object {
        fun C(Other: UObject): DatasmithReimportOptions
        fun C(Other: Any): DatasmithReimportOptions
    }
}

external open class DatasmithImportOptions : UObject {
    constructor()
    constructor(Outer: UObject)
    open var SearchPackagePolicy: String /* "Current" | "All" | "EDatasmithImportSearchPackagePolicy_MAX" */
    open var MaterialConflictPolicy: String /* "Replace" | "Update" | "Use" | "Ignore" | "EDatasmithImportAssetConflictPolicy_MAX" */
    open var TextureConflictPolicy: String /* "Replace" | "Update" | "Use" | "Ignore" | "EDatasmithImportAssetConflictPolicy_MAX" */
    open var StaticMeshActorImportPolicy: String /* "Update" | "Full" | "Ignore" | "EDatasmithImportActorPolicy_MAX" */
    open var LightImportPolicy: String /* "Update" | "Full" | "Ignore" | "EDatasmithImportActorPolicy_MAX" */
    open var CameraImportPolicy: String /* "Update" | "Full" | "Ignore" | "EDatasmithImportActorPolicy_MAX" */
    open var OtherActorImportPolicy: String /* "Update" | "Full" | "Ignore" | "EDatasmithImportActorPolicy_MAX" */
    open var MaterialQuality: String /* "UseNoFresnelCurves" | "UseSimplifierFresnelCurves" | "UseRealFresnelCurves" | "EDatasmithImportMaterialQuality_MAX" */
    open var BaseOptions: DatasmithImportBaseOptions
    open var ReimportOptions: DatasmithReimportOptions
    open var Filename: String
    open var FilePath: String

    companion object {
        fun Load(ResourceName: String): DatasmithImportOptions
        fun Find(Outer: UObject, ResourceName: String): DatasmithImportOptions
        fun GetDefaultObject(): DatasmithImportOptions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithImportOptions
        fun C(Other: UObject): DatasmithImportOptions
        fun C(Other: Any): DatasmithImportOptions
    }
}

external open class DatasmithLandscapeTemplate : DatasmithObjectTemplate {
    constructor()
    constructor(Outer: UObject)
    open var LandscapeMaterial: MaterialInterface
    open var StaticLightingLOD: Number

    companion object {
        fun Load(ResourceName: String): DatasmithLandscapeTemplate
        fun Find(Outer: UObject, ResourceName: String): DatasmithLandscapeTemplate
        fun GetDefaultObject(): DatasmithLandscapeTemplate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithLandscapeTemplate
        fun C(Other: UObject): DatasmithLandscapeTemplate
        fun C(Other: Any): DatasmithLandscapeTemplate
    }
}

external open class DatasmithLightComponentTemplate : DatasmithObjectTemplate {
    constructor()
    constructor(Outer: UObject)
    open var bVisible: Boolean
    open var CastShadows: Boolean
    open var bUseTemperature: Boolean
    open var bUseIESBrightness: Boolean
    open var Intensity: Number
    open var Temperature: Number
    open var IESBrightnessScale: Number
    open var LightColor: LinearColor
    open var LightFunctionMaterial: MaterialInterface
    open var IESTexture: TextureLightProfile

    companion object {
        fun Load(ResourceName: String): DatasmithLightComponentTemplate
        fun Find(Outer: UObject, ResourceName: String): DatasmithLightComponentTemplate
        fun GetDefaultObject(): DatasmithLightComponentTemplate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithLightComponentTemplate
        fun C(Other: UObject): DatasmithLightComponentTemplate
        fun C(Other: Any): DatasmithLightComponentTemplate
    }
}

external open class DatasmithStaticParameterSetTemplate {
    open var StaticSwitchParameters: Any
    open fun clone(): DatasmithStaticParameterSetTemplate

    companion object {
        fun C(Other: UObject): DatasmithStaticParameterSetTemplate
        fun C(Other: Any): DatasmithStaticParameterSetTemplate
    }
}

external open class DatasmithMaterialInstanceTemplate : DatasmithObjectTemplate {
    constructor()
    constructor(Outer: UObject)
    open var ScalarParameterValues: Any
    open var VectorParameterValues: Any
    open var TextureParameterValues: Any
    open var StaticParameters: DatasmithStaticParameterSetTemplate

    companion object {
        fun Load(ResourceName: String): DatasmithMaterialInstanceTemplate
        fun Find(Outer: UObject, ResourceName: String): DatasmithMaterialInstanceTemplate
        fun GetDefaultObject(): DatasmithMaterialInstanceTemplate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithMaterialInstanceTemplate
        fun C(Other: UObject): DatasmithMaterialInstanceTemplate
        fun C(Other: Any): DatasmithMaterialInstanceTemplate
    }
}

external open class DatasmithPointLightComponentTemplate : DatasmithObjectTemplate {
    constructor()
    constructor(Outer: UObject)
    open var IntensityUnits: String /* "Unitless" | "Candelas" | "Lumens" | "ELightUnits_MAX" */
    open var SourceRadius: Number
    open var SourceLength: Number
    open var AttenuationRadius: Number

    companion object {
        fun Load(ResourceName: String): DatasmithPointLightComponentTemplate
        fun Find(Outer: UObject, ResourceName: String): DatasmithPointLightComponentTemplate
        fun GetDefaultObject(): DatasmithPointLightComponentTemplate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithPointLightComponentTemplate
        fun C(Other: UObject): DatasmithPointLightComponentTemplate
        fun C(Other: Any): DatasmithPointLightComponentTemplate
    }
}

external open class DatasmithPostProcessVolumeTemplate : DatasmithObjectTemplate {
    constructor()
    constructor(Outer: UObject)
    open var Settings: DatasmithPostProcessSettingsTemplate
    open var bEnabled: Boolean
    open var bUnbound: Boolean

    companion object {
        fun Load(ResourceName: String): DatasmithPostProcessVolumeTemplate
        fun Find(Outer: UObject, ResourceName: String): DatasmithPostProcessVolumeTemplate
        fun GetDefaultObject(): DatasmithPostProcessVolumeTemplate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithPostProcessVolumeTemplate
        fun C(Other: UObject): DatasmithPostProcessVolumeTemplate
        fun C(Other: Any): DatasmithPostProcessVolumeTemplate
    }
}

external open class DatasmithScene : UObject {
    constructor()
    constructor(Outer: UObject)
    open var DataprepRecipeBP: Blueprint
    open var AssetImportData: DatasmithSceneImportData
    open var BulkDataVersion: Number
    open var StaticMeshes: Any
    open var Textures: Any
    open var Materials: Any
    open var LevelSequences: Any

    companion object {
        fun Load(ResourceName: String): DatasmithScene
        fun Find(Outer: UObject, ResourceName: String): DatasmithScene
        fun GetDefaultObject(): DatasmithScene
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithScene
        fun C(Other: UObject): DatasmithScene
        fun C(Other: Any): DatasmithScene
    }
}

external open class DatasmithSceneActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var Scene: DatasmithScene
    open var RelatedActors: Any

    companion object {
        fun GetDefaultObject(): DatasmithSceneActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithSceneActor
        fun C(Other: UObject): DatasmithSceneActor
        fun C(Other: Any): DatasmithSceneActor
    }
}

external open class DatasmithSceneComponentTemplate : DatasmithObjectTemplate {
    constructor()
    constructor(Outer: UObject)
    open var RelativeTransform: Transform
    open var Mobility: String /* "Static" | "Stationary" | "Movable" | "EComponentMobility_MAX" */
    open var AttachParent: SceneComponent
    open var Tags: Any

    companion object {
        fun Load(ResourceName: String): DatasmithSceneComponentTemplate
        fun Find(Outer: UObject, ResourceName: String): DatasmithSceneComponentTemplate
        fun GetDefaultObject(): DatasmithSceneComponentTemplate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithSceneComponentTemplate
        fun C(Other: UObject): DatasmithSceneComponentTemplate
        fun C(Other: Any): DatasmithSceneComponentTemplate
    }
}

external open class DatasmithSkyLightComponentTemplate : DatasmithObjectTemplate {
    constructor()
    constructor(Outer: UObject)
    open var SourceType: String /* "SLS_CapturedScene" | "SLS_SpecifiedCubemap" | "SLS_MAX" */
    open var CubemapResolution: Number
    open var CubeMap: TextureCube

    companion object {
        fun Load(ResourceName: String): DatasmithSkyLightComponentTemplate
        fun Find(Outer: UObject, ResourceName: String): DatasmithSkyLightComponentTemplate
        fun GetDefaultObject(): DatasmithSkyLightComponentTemplate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithSkyLightComponentTemplate
        fun C(Other: UObject): DatasmithSkyLightComponentTemplate
        fun C(Other: Any): DatasmithSkyLightComponentTemplate
    }
}

external open class DatasmithSpotLightComponentTemplate : DatasmithObjectTemplate {
    constructor()
    constructor(Outer: UObject)
    open var InnerConeAngle: Number
    open var OuterConeAngle: Number

    companion object {
        fun Load(ResourceName: String): DatasmithSpotLightComponentTemplate
        fun Find(Outer: UObject, ResourceName: String): DatasmithSpotLightComponentTemplate
        fun GetDefaultObject(): DatasmithSpotLightComponentTemplate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithSpotLightComponentTemplate
        fun C(Other: UObject): DatasmithSpotLightComponentTemplate
        fun C(Other: Any): DatasmithSpotLightComponentTemplate
    }
}

external open class DatasmithStaticMeshComponentTemplate : DatasmithObjectTemplate {
    constructor()
    constructor(Outer: UObject)
    open var StaticMesh: StaticMesh
    open var OverrideMaterials: Array<MaterialInterface>

    companion object {
        fun Load(ResourceName: String): DatasmithStaticMeshComponentTemplate
        fun Find(Outer: UObject, ResourceName: String): DatasmithStaticMeshComponentTemplate
        fun GetDefaultObject(): DatasmithStaticMeshComponentTemplate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithStaticMeshComponentTemplate
        fun C(Other: UObject): DatasmithStaticMeshComponentTemplate
        fun C(Other: Any): DatasmithStaticMeshComponentTemplate
    }
}

external open class DatasmithMeshSectionInfoMapTemplate {
    open var Map: Any
    open fun clone(): DatasmithMeshSectionInfoMapTemplate

    companion object {
        fun C(Other: UObject): DatasmithMeshSectionInfoMapTemplate
        fun C(Other: Any): DatasmithMeshSectionInfoMapTemplate
    }
}

external open class DatasmithMeshBuildSettingsTemplate {
    open var bUseMikkTSpace: Boolean
    open var bRecomputeNormals: Boolean
    open var bRecomputeTangents: Boolean
    open var bRemoveDegenerates: Boolean
    open var bBuildAdjacencyBuffer: Boolean
    open var bUseHighPrecisionTangentBasis: Boolean
    open var bUseFullPrecisionUVs: Boolean
    open var bGenerateLightmapUVs: Boolean
    open var MinLightmapResolution: Number
    open var SrcLightmapIndex: Number
    open var DstLightmapIndex: Number
    open fun clone(): DatasmithMeshBuildSettingsTemplate

    companion object {
        fun C(Other: UObject): DatasmithMeshBuildSettingsTemplate
        fun C(Other: Any): DatasmithMeshBuildSettingsTemplate
    }
}

external open class DatasmithStaticMaterialTemplate {
    open var MaterialSlotName: String
    open var MaterialInterface: MaterialInterface
    open fun clone(): DatasmithStaticMaterialTemplate

    companion object {
        fun C(Other: UObject): DatasmithStaticMaterialTemplate
        fun C(Other: Any): DatasmithStaticMaterialTemplate
    }
}

external open class DatasmithStaticMeshTemplate : DatasmithObjectTemplate {
    constructor()
    constructor(Outer: UObject)
    open var SectionInfoMap: DatasmithMeshSectionInfoMapTemplate
    open var LightMapCoordinateIndex: Number
    open var LightMapResolution: Number
    open var BuildSettings: Array<DatasmithMeshBuildSettingsTemplate>
    open var StaticMaterials: Array<DatasmithStaticMaterialTemplate>

    companion object {
        fun Load(ResourceName: String): DatasmithStaticMeshTemplate
        fun Find(Outer: UObject, ResourceName: String): DatasmithStaticMeshTemplate
        fun GetDefaultObject(): DatasmithStaticMeshTemplate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithStaticMeshTemplate
        fun C(Other: UObject): DatasmithStaticMeshTemplate
        fun C(Other: Any): DatasmithStaticMeshTemplate
    }
}

external interface `T$45` {
    var DataToRetrieve: Vector
    var `$`: Boolean
}

external interface `T$46` {
    var DataToRetrieve: Transform
    var `$`: Boolean
}

external interface `T$47` {
    var DataToRetrieve: String
    var `$`: Boolean
}

external interface `T$48` {
    var DataToRetrieve: Rotator
    var `$`: Boolean
}

external interface `T$49` {
    var DataToRetrieve: Number
    var `$`: Boolean
}

external interface `T$50` {
    var DataToRetrieve: Boolean
    var `$`: Boolean
}

external open class MagicLeapSecureStorage : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MagicLeapSecureStorage
        fun Find(Outer: UObject, ResourceName: String): MagicLeapSecureStorage
        fun GetDefaultObject(): MagicLeapSecureStorage
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MagicLeapSecureStorage
        fun PutSecureVector(Key: String, DataToStore: Vector): Boolean
        fun PutSecureTransform(Key: String, DataToStore: Transform): Boolean
        fun PutSecureString(Key: String, DataToStore: String): Boolean
        fun PutSecureRotator(Key: String, DataToStore: Rotator): Boolean
        fun PutSecureInt(Key: String, DataToStore: Number): Boolean
        fun PutSecureFloat(Key: String, DataToStore: Number): Boolean
        fun PutSecureByte(Key: String, DataToStore: Number): Boolean
        fun PutSecureBool(Key: String, DataToStore: Boolean): Boolean
        fun GetSecureVector(Key: String, DataToRetrieve: Vector = definedExternally): `T$45`
        fun GetSecureTransform(Key: String, DataToRetrieve: Transform = definedExternally): `T$46`
        fun GetSecureString(Key: String, DataToRetrieve: String = definedExternally): `T$47`
        fun GetSecureRotator(Key: String, DataToRetrieve: Rotator = definedExternally): `T$48`
        fun GetSecureInt(Key: String, DataToRetrieve: Number = definedExternally): `T$49`
        fun GetSecureFloat(Key: String, DataToRetrieve: Number = definedExternally): `T$49`
        fun GetSecureByte(Key: String, DataToRetrieve: Number = definedExternally): `T$49`
        fun GetSecureBool(Key: String, DataToRetrieve: Boolean = definedExternally): `T$50`
        fun DeleteSecureData(Key: String): Boolean
        fun C(Other: UObject): MagicLeapSecureStorage
        fun C(Other: Any): MagicLeapSecureStorage
    }
}

external open class CameraCaptureComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var CaptureLogMessage: UnrealEngineMulticastDelegate<(LogMessage: String) -> Unit>
    open fun IsCapturing(): Boolean

    companion object {
        fun Load(ResourceName: String): CameraCaptureComponent
        fun Find(Outer: UObject, ResourceName: String): CameraCaptureComponent
        fun GetDefaultObject(): CameraCaptureComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CameraCaptureComponent
        fun C(Other: UObject): CameraCaptureComponent
        fun C(Other: Any): CameraCaptureComponent
    }
}

external open class ImageTrackerComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var OnSetImageTargetSucceeded: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnSetImageTargetFailed: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnImageTargetFound: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnImageTargetLost: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnImageTargetUnreliableTracking: UnrealEngineMulticastDelegate<(LastTrackedLocation: Vector, LastTrackedRotation: Rotator, NewUnreliableLocation: Vector, NewUnreliableRotation: Rotator) -> Unit>
    open var TargetImageTexture: Texture2D
    open var Name: String
    open var LongerDimension: Number
    open var bIsStationary: Boolean
    open var bUseUnreliablePose: Boolean
    open fun SetTargetAsync(ImageTarget: Texture2D): Boolean

    companion object {
        fun Load(ResourceName: String): ImageTrackerComponent
        fun Find(Outer: UObject, ResourceName: String): ImageTrackerComponent
        fun GetDefaultObject(): ImageTrackerComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ImageTrackerComponent
        fun C(Other: UObject): ImageTrackerComponent
        fun C(Other: Any): ImageTrackerComponent
    }
}

external open class ImageTrackerFunctionLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ImageTrackerFunctionLibrary
        fun Find(Outer: UObject, ResourceName: String): ImageTrackerFunctionLibrary
        fun GetDefaultObject(): ImageTrackerFunctionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ImageTrackerFunctionLibrary
        fun SetMaxSimultaneousTargets(MaxSimultaneousTargets: Number)
        fun IsImageTrackingEnabled(): Boolean
        fun GetMaxSimultaneousTargets(): Number
        fun EnableImageTracking(bEnable: Boolean)
        fun C(Other: UObject): ImageTrackerFunctionLibrary
        fun C(Other: Any): ImageTrackerFunctionLibrary
    }
}

external object PurchaseType {
    var Consumable: String /* "Consumable" */
    var Nonconsumable: String /* "Nonconsumable" */
    var Undefined: String /* "Undefined" */
    var PurchaseType_MAX: String /* "PurchaseType_MAX" */
}

external open class PurchaseItemDetails {
    open var Price: String
    open var Name: String
    open var Type: String /* "Consumable" | "Nonconsumable" | "Undefined" | "PurchaseType_MAX" */
    open fun clone(): PurchaseItemDetails

    companion object {
        fun C(Other: UObject): PurchaseItemDetails
        fun C(Other: Any): PurchaseItemDetails
    }
}

external open class PurchaseConfirmation {
    open var PackageName: String
    open var Type: String /* "Consumable" | "Nonconsumable" | "Undefined" | "PurchaseType_MAX" */
    open fun clone(): PurchaseConfirmation

    companion object {
        fun C(Other: UObject): PurchaseConfirmation
        fun C(Other: Any): PurchaseConfirmation
    }
}

external open class InAppPurchaseComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var InAppPurchaseLogMessage: UnrealEngineMulticastDelegate<(LogMessage: String) -> Unit>
    open var GetItemsDetailsSuccess: UnrealEngineMulticastDelegate<(ItemsDetails: Array<PurchaseItemDetails>) -> Unit>
    open var GetItemsDetailsFailure: UnrealEngineMulticastDelegate<() -> Unit>
    open var PurchaseConfirmationSuccess: UnrealEngineMulticastDelegate<(PurchaseConfirmations: PurchaseConfirmation) -> Unit>
    open var PurchaseConfirmationFailure: UnrealEngineMulticastDelegate<() -> Unit>
    open var GetPurchaseHistorySuccess: UnrealEngineMulticastDelegate<(PurchaseHistory: Array<PurchaseConfirmation>) -> Unit>
    open var GetPurchaseHistoryFailure: UnrealEngineMulticastDelegate<() -> Unit>
    open fun TryPurchaseItemAsync(ItemDetails: PurchaseItemDetails): Boolean
    open fun TryGetPurchaseHistoryAsync(InNumPages: Number): Boolean
    open fun TryGetItemsDetailsAsync(ItemIDs: Array<String>): Boolean

    companion object {
        fun Load(ResourceName: String): InAppPurchaseComponent
        fun Find(Outer: UObject, ResourceName: String): InAppPurchaseComponent
        fun GetDefaultObject(): InAppPurchaseComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InAppPurchaseComponent
        fun C(Other: UObject): InAppPurchaseComponent
        fun C(Other: Any): InAppPurchaseComponent
    }
}

external open class LightingTrackingComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var UseGlobalAmbience: Boolean
    open var UseColorTemp: Boolean

    companion object {
        fun Load(ResourceName: String): LightingTrackingComponent
        fun Find(Outer: UObject, ResourceName: String): LightingTrackingComponent
        fun GetDefaultObject(): LightingTrackingComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LightingTrackingComponent
        fun C(Other: UObject): LightingTrackingComponent
        fun C(Other: Any): LightingTrackingComponent
    }
}

external interface `T$51` {
    var Count: Number
    var `$`: String /* "None" | "LowMapQuality" | "UnableToLocalize" | "Unavailable" | "PrivilegeDenied" | "InvalidParam" | "UnspecifiedFailure" | "PrivilegeRequestPending" | "EPassableWorldError_MAX" */
}

external interface `T$52` {
    var PinID: Guid
    var `$`: String /* "None" | "LowMapQuality" | "UnableToLocalize" | "Unavailable" | "PrivilegeDenied" | "InvalidParam" | "UnspecifiedFailure" | "PrivilegeRequestPending" | "EPassableWorldError_MAX" */
}

external interface `T$53` {
    var Pins: Array<Guid>
    var `$`: String /* "None" | "LowMapQuality" | "UnableToLocalize" | "Unavailable" | "PrivilegeDenied" | "InvalidParam" | "UnspecifiedFailure" | "PrivilegeRequestPending" | "EPassableWorldError_MAX" */
}

external interface `T$54` {
    var Position: Vector
    var Orientation: Rotator
    var PinFoundInEnvironment: Boolean
    var `$`: Boolean
}

external open class MagicLeapARPinFunctionLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MagicLeapARPinFunctionLibrary
        fun Find(Outer: UObject, ResourceName: String): MagicLeapARPinFunctionLibrary
        fun GetDefaultObject(): MagicLeapARPinFunctionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MagicLeapARPinFunctionLibrary
        fun GetNumAvailableARPins(Count: Number = definedExternally): `T$51`
        fun GetClosestARPin(SearchPoint: Vector, PinID: Guid = definedExternally): `T$52`
        fun GetAvailableARPins(NumRequested: Number, Pins: Array<Guid> = definedExternally): `T$53`
        fun GetARPinPositionAndOrientation(PinID: Guid, Position: Vector = definedExternally, Orientation: Rotator = definedExternally, PinFoundInEnvironment: Boolean = definedExternally): `T$54`
        fun C(Other: UObject): MagicLeapARPinFunctionLibrary
        fun C(Other: Any): MagicLeapARPinFunctionLibrary
    }
}

external object EAutoPinType {
    var OnlyOnDataRestoration: String /* "OnlyOnDataRestoration" */
    var Always: String /* "Always" */
    var Never: String /* "Never" */
    var EAutoPinType_MAX: String /* "EAutoPinType_MAX" */
}

external interface `T$55` {
    var PinID: Guid
    var `$`: Boolean
}

external open class MagicLeapARPinComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var ObjectUID: String
    open var AutoPinType: String /* "OnlyOnDataRestoration" | "Always" | "Never" | "EAutoPinType_MAX" */
    open var bShouldPinActor: Boolean
    open var OnPersistentEntityPinned: UnrealEngineMulticastDelegate<(bRestoredOrSynced: Boolean) -> Unit>
    open var PinnedCFUID: Guid
    open var PinnedSceneComponent: SceneComponent
    open fun UnPin()
    open fun PinSceneComponent(ComponentToPin: SceneComponent): Boolean
    open fun PinRestoredOrSynced(): Boolean
    open fun PinActor(ActorToPin: Actor): Boolean
    open fun IsPinned(): Boolean
    open fun GetPinnedPinID(PinID: Guid = definedExternally): `T$55`

    companion object {
        fun Load(ResourceName: String): MagicLeapARPinComponent
        fun Find(Outer: UObject, ResourceName: String): MagicLeapARPinComponent
        fun GetDefaultObject(): MagicLeapARPinComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MagicLeapARPinComponent
        fun C(Other: UObject): MagicLeapARPinComponent
        fun C(Other: Any): MagicLeapARPinComponent
    }
}

external object EHeadTrackingMode {
    var PositionAndOrientation: String /* "PositionAndOrientation" */
    var OrientationOnly: String /* "OrientationOnly" */
    var Unknown: String /* "Unknown" */
    var EHeadTrackingMode_MAX: String /* "EHeadTrackingMode_MAX" */
}

external object EHeadTrackingError {
    var None: String /* "None" */
    var NotEnoughFeatures: String /* "NotEnoughFeatures" */
    var LowLight: String /* "LowLight" */
    var Unknown: String /* "Unknown" */
    var EHeadTrackingError_MAX: String /* "EHeadTrackingError_MAX" */
}

external interface `T$56` {
    var State: HeadTrackingState
    var `$`: Boolean
}

external open class HeadTrackingState {
    open var Mode: String /* "PositionAndOrientation" | "OrientationOnly" | "Unknown" | "EHeadTrackingMode_MAX" */
    open var Error: String /* "None" | "NotEnoughFeatures" | "LowLight" | "Unknown" | "EHeadTrackingError_MAX" */
    open var Confidence: Number
    open fun clone(): HeadTrackingState
    open fun GetHeadTrackingState(): `T$56`

    companion object {
        fun C(Other: UObject): HeadTrackingState
        fun C(Other: Any): HeadTrackingState
        fun GetHeadTrackingState(State: HeadTrackingState = definedExternally): `T$56`
    }
}

external open class MagicLeapHMDFunctionLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MagicLeapHMDFunctionLibrary
        fun Find(Outer: UObject, ResourceName: String): MagicLeapHMDFunctionLibrary
        fun GetDefaultObject(): MagicLeapHMDFunctionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MagicLeapHMDFunctionLibrary
        fun SetFocusActor(InFocusActor: Actor)
        fun SetBaseRotation(InBaseRotation: Rotator)
        fun SetBasePosition(InBasePosition: Vector)
        fun SetBaseOrientation(InBaseOrientation: Quat)
        fun IsRunningOnMagicLeapHMD(): Boolean
        fun GetMLSDKVersionRevision(): Number
        fun GetMLSDKVersionMinor(): Number
        fun GetMLSDKVersionMajor(): Number
        fun GetMLSDKVersion(): String
        fun GetHeadTrackingState(State: HeadTrackingState = definedExternally): `T$56`
        fun C(Other: UObject): MagicLeapHMDFunctionLibrary
        fun C(Other: Any): MagicLeapHMDFunctionLibrary
    }
}

external object EMagicLeapPrivilege {
    var Invalid: String /* "Invalid" */
    var AudioRecognizer: String /* "AudioRecognizer" */
    var BatteryInfo: String /* "BatteryInfo" */
    var CameraCapture: String /* "CameraCapture" */
    var WorldReconstruction: String /* "WorldReconstruction" */
    var InAppPurchase: String /* "InAppPurchase" */
    var AudioCaptureMic: String /* "AudioCaptureMic" */
    var DrmCertificates: String /* "DrmCertificates" */
    var Occlusion: String /* "Occlusion" */
    var LowLatencyLightwear: String /* "LowLatencyLightwear" */
    var Internet: String /* "Internet" */
    var IdentityRead: String /* "IdentityRead" */
    var BackgroundDownload: String /* "BackgroundDownload" */
    var BackgroundUpload: String /* "BackgroundUpload" */
    var MediaDrm: String /* "MediaDrm" */
    var Media: String /* "Media" */
    var MediaMetadata: String /* "MediaMetadata" */
    var PowerInfo: String /* "PowerInfo" */
    var LocalAreaNetwork: String /* "LocalAreaNetwork" */
    var VoiceInput: String /* "VoiceInput" */
    var Documents: String /* "Documents" */
    var ConnectBackgroundMusicService: String /* "ConnectBackgroundMusicService" */
    var RegisterBackgroundMusicService: String /* "RegisterBackgroundMusicService" */
    var PwFoundObjRead: String /* "PwFoundObjRead" */
    var NormalNotificationsUsage: String /* "NormalNotificationsUsage" */
    var MusicService: String /* "MusicService" */
    var ControllerPose: String /* "ControllerPose" */
    var ScreensProvider: String /* "ScreensProvider" */
    var GesturesSubscribe: String /* "GesturesSubscribe" */
    var GesturesConfig: String /* "GesturesConfig" */
    var EMagicLeapPrivilege_MAX: String /* "EMagicLeapPrivilege_MAX" */
}

external open class MagicLeapPrivileges : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open fun RequestPrivilege(Privilege: String /* "Invalid" | "AudioRecognizer" | "BatteryInfo" | "CameraCapture" | "WorldReconstruction" | "InAppPurchase" | "AudioCaptureMic" | "DrmCertificates" | "Occlusion" | "LowLatencyLightwear" | "Internet" | "IdentityRead" | "BackgroundDownload" | "BackgroundUpload" | "MediaDrm" | "Media" | "MediaMetadata" | "PowerInfo" | "LocalAreaNetwork" | "VoiceInput" | "Documents" | "ConnectBackgroundMusicService" | "RegisterBackgroundMusicService" | "PwFoundObjRead" | "NormalNotificationsUsage" | "MusicService" | "ControllerPose" | "ScreensProvider" | "GesturesSubscribe" | "GesturesConfig" | "EMagicLeapPrivilege_MAX" */): Boolean
    open fun CheckPrivilege(Privilege: String /* "Invalid" | "AudioRecognizer" | "BatteryInfo" | "CameraCapture" | "WorldReconstruction" | "InAppPurchase" | "AudioCaptureMic" | "DrmCertificates" | "Occlusion" | "LowLatencyLightwear" | "Internet" | "IdentityRead" | "BackgroundDownload" | "BackgroundUpload" | "MediaDrm" | "Media" | "MediaMetadata" | "PowerInfo" | "LocalAreaNetwork" | "VoiceInput" | "Documents" | "ConnectBackgroundMusicService" | "RegisterBackgroundMusicService" | "PwFoundObjRead" | "NormalNotificationsUsage" | "MusicService" | "ControllerPose" | "ScreensProvider" | "GesturesSubscribe" | "GesturesConfig" | "EMagicLeapPrivilege_MAX" */): Boolean

    companion object {
        fun Load(ResourceName: String): MagicLeapPrivileges
        fun Find(Outer: UObject, ResourceName: String): MagicLeapPrivileges
        fun GetDefaultObject(): MagicLeapPrivileges
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MagicLeapPrivileges
        fun C(Other: UObject): MagicLeapPrivileges
        fun C(Other: Any): MagicLeapPrivileges
    }
}

external open class MagicLeapSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bEnableZI: Boolean
    open var bUseVulkanForZI: Boolean

    companion object {
        fun Load(ResourceName: String): MagicLeapSettings
        fun Find(Outer: UObject, ResourceName: String): MagicLeapSettings
        fun GetDefaultObject(): MagicLeapSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MagicLeapSettings
        fun C(Other: UObject): MagicLeapSettings
        fun C(Other: Any): MagicLeapSettings
    }
}

external object EMeshState {
    var New: String /* "New" */
    var Updated: String /* "Updated" */
    var Deleted: String /* "Deleted" */
    var Unchanged: String /* "Unchanged" */
    var EMeshState_MAX: String /* "EMeshState_MAX" */
}

external open class MeshBlockInfo {
    open var BlockID: Guid
    open var BlockPosition: Vector
    open var BlockOrientation: Rotator
    open var BlockDimensions: Vector
    open var Timestamp: Timespan
    open var BlockState: String /* "New" | "Updated" | "Deleted" | "Unchanged" | "EMeshState_MAX" */
    open fun clone(): MeshBlockInfo

    companion object {
        fun C(Other: UObject): MeshBlockInfo
        fun C(Other: Any): MeshBlockInfo
    }
}

external open class MLTrackingMeshInfo {
    open var Timestamp: Timespan
    open var BlockData: Array<MeshBlockInfo>
    open fun clone(): MLTrackingMeshInfo

    companion object {
        fun C(Other: UObject): MLTrackingMeshInfo
        fun C(Other: Any): MLTrackingMeshInfo
    }
}

external object EMeshLOD {
    var Minimum: String /* "Minimum" */
    var Medium: String /* "Medium" */
    var Maximum: String /* "Maximum" */
    var EMeshLOD_MAX: String /* "EMeshLOD_MAX" */
}

external open class MeshBlockRequest {
    open var BlockID: Guid
    open var LevelOfDetail: String /* "Minimum" | "Medium" | "Maximum" | "EMeshLOD_MAX" */
    open fun clone(): MeshBlockRequest

    companion object {
        fun C(Other: UObject): MeshBlockRequest
        fun C(Other: Any): MeshBlockRequest
    }
}

external interface `T$57` {
    var RequestedMesh: Array<MeshBlockRequest>
}

external open class MeshBlockSelectorInterface : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun SelectMeshBlocks(NewMeshInfo: MLTrackingMeshInfo, RequestedMesh: Array<MeshBlockRequest> = definedExternally): `T$57`

    companion object {
        fun Load(ResourceName: String): MeshBlockSelectorInterface
        fun Find(Outer: UObject, ResourceName: String): MeshBlockSelectorInterface
        fun GetDefaultObject(): MeshBlockSelectorInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MeshBlockSelectorInterface
        fun C(Other: UObject): MeshBlockSelectorInterface
        fun C(Other: Any): MeshBlockSelectorInterface
    }
}

external object EMeshType {
    var Triangles: String /* "Triangles" */
    var PointCloud: String /* "PointCloud" */
    var EMeshType_MAX: String /* "EMeshType_MAX" */
}

external object EMLMeshVertexColorMode {
    var None: String /* "None" */
    var Confidence: String /* "Confidence" */
    var Block: String /* "Block" */
    var LOD: String /* "LOD" */
    var EMLMeshVertexColorMode_MAX: String /* "EMLMeshVertexColorMode_MAX" */
}

external interface `T$58` {
    var RequestedMesh: Array<MeshBlockRequest>
}

external open class MeshTrackerComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var OnMeshTrackerUpdated: UnrealEngineMulticastDelegate<(ID: Guid, Vertices: Array<Vector>, Triangles: Array<Number>, Normals: Array<Vector>, Confidence: Array<Number>) -> Unit>
    open var ScanWorld: Boolean
    open var MeshType: String /* "Triangles" | "PointCloud" | "EMeshType_MAX" */
    open var BoundingVolume: BoxComponent
    open var LevelOfDetail: String /* "Minimum" | "Medium" | "Maximum" | "EMeshLOD_MAX" */
    open var PerimeterOfGapsToFill: Number
    open var Planarize: Boolean
    open var DisconnectedSectionArea: Number
    open var RequestNormals: Boolean
    open var RequestVertexConfidence: Boolean
    open var VertexColorMode: String /* "None" | "Confidence" | "Block" | "LOD" | "EMLMeshVertexColorMode_MAX" */
    open var BlockVertexColors: Array<Color>
    open var VertexColorFromConfidenceZero: LinearColor
    open var VertexColorFromConfidenceOne: LinearColor
    open var RemoveOverlappingTriangles: Boolean
    open var MRMesh: MRMeshComponent
    open fun SelectMeshBlocks(NewMeshInfo: MLTrackingMeshInfo, RequestedMesh: Array<MeshBlockRequest> = definedExternally): `T$58`
    open fun DisconnectMRMesh(InMRMeshPtr: MRMeshComponent)
    open fun DisconnectBlockSelector()
    open fun ConnectMRMesh(InMRMeshPtr: MRMeshComponent)

    companion object {
        fun Load(ResourceName: String): MeshTrackerComponent
        fun Find(Outer: UObject, ResourceName: String): MeshTrackerComponent
        fun GetDefaultObject(): MeshTrackerComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MeshTrackerComponent
        fun C(Other: UObject): MeshTrackerComponent
        fun C(Other: Any): MeshTrackerComponent
    }
}

external open class PlanesComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var QueryFlags: Array<String /* "Vertical" | "Horizontal" | "Arbitrary" | "OrientToGravity" | "PreferInner" | "IgnoreHoles" | "Ceiling" | "Floor" | "Wall" | "EPlaneQueryFlags_MAX" */>
    open var SearchVolume: BoxComponent
    open var MaxResults: Number
    open var MinHolePerimeter: Number
    open var MinPlaneArea: Number
    open var IgnoreBoundingVolume: Boolean

    companion object {
        fun Load(ResourceName: String): PlanesComponent
        fun Find(Outer: UObject, ResourceName: String): PlanesComponent
        fun GetDefaultObject(): PlanesComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PlanesComponent
        fun C(Other: UObject): PlanesComponent
        fun C(Other: Any): PlanesComponent
    }
}

external open class RaycastComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): RaycastComponent
        fun Find(Outer: UObject, ResourceName: String): RaycastComponent
        fun GetDefaultObject(): RaycastComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RaycastComponent
        fun C(Other: UObject): RaycastComponent
        fun C(Other: Any): RaycastComponent
    }
}

external open class WmfMediaSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var AllowNonStandardCodecs: Boolean
    open var LowLatency: Boolean
    open var NativeAudioOut: Boolean
    open var HardwareAcceleratedVideoDecoding: Boolean

    companion object {
        fun Load(ResourceName: String): WmfMediaSettings
        fun Find(Outer: UObject, ResourceName: String): WmfMediaSettings
        fun GetDefaultObject(): WmfMediaSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WmfMediaSettings
        fun C(Other: UObject): WmfMediaSettings
        fun C(Other: Any): WmfMediaSettings
    }
}

external open class NamedInterface {
    open var InterfaceName: String
    open var InterfaceObject: UObject
    open fun clone(): NamedInterface

    companion object {
        fun C(Other: UObject): NamedInterface
        fun C(Other: Any): NamedInterface
    }
}

external open class NamedInterfaceDef {
    open var InterfaceName: String
    open var InterfaceClassName: String
    open fun clone(): NamedInterfaceDef

    companion object {
        fun C(Other: UObject): NamedInterfaceDef
        fun C(Other: Any): NamedInterfaceDef
    }
}

external open class NamedInterfaces : UObject {
    constructor()
    constructor(Outer: UObject)
    open var NamedInterfaces: Array<NamedInterface>
    open var NamedInterfaceDefs: Array<NamedInterfaceDef>

    companion object {
        fun Load(ResourceName: String): NamedInterfaces
        fun Find(Outer: UObject, ResourceName: String): NamedInterfaces
        fun GetDefaultObject(): NamedInterfaces
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NamedInterfaces
        fun C(Other: UObject): NamedInterfaces
        fun C(Other: Any): NamedInterfaces
    }
}

external open class TurnBasedMatchInterface : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun OnMatchReceivedTurn(Match: String, bDidBecomeActive: Boolean)
    open fun OnMatchEnded(Match: String)

    companion object {
        fun Load(ResourceName: String): TurnBasedMatchInterface
        fun Find(Outer: UObject, ResourceName: String): TurnBasedMatchInterface
        fun GetDefaultObject(): TurnBasedMatchInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TurnBasedMatchInterface
        fun C(Other: UObject): TurnBasedMatchInterface
        fun C(Other: Any): TurnBasedMatchInterface
    }
}

external interface `T$59` {
    var bFoundID: Boolean
    var Progress: Number
}

external interface `T$60` {
    var bFoundID: Boolean
    var Title: String
    var LockedDescription: String
    var UnlockedDescription: String
    var bHidden: Boolean
}

external open class AchievementBlueprintLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AchievementBlueprintLibrary
        fun Find(Outer: UObject, ResourceName: String): AchievementBlueprintLibrary
        fun GetDefaultObject(): AchievementBlueprintLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AchievementBlueprintLibrary
        fun GetCachedAchievementProgress(WorldContextObject: UObject, PlayerController: PlayerController, AchievementID: String, bFoundID: Boolean = definedExternally, Progress: Number = definedExternally): `T$59`
        fun GetCachedAchievementDescription(WorldContextObject: UObject, PlayerController: PlayerController, AchievementID: String, bFoundID: Boolean = definedExternally, Title: String = definedExternally, LockedDescription: String = definedExternally, UnlockedDescription: String = definedExternally, bHidden: Boolean = definedExternally): `T$60`
        fun C(Other: UObject): AchievementBlueprintLibrary
        fun C(Other: Any): AchievementBlueprintLibrary
    }
}

external open class AchievementQueryCallbackProxy : OnlineBlueprintCallProxyBase {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnFailure: UnrealEngineMulticastDelegate<() -> Unit>

    companion object {
        fun Load(ResourceName: String): AchievementQueryCallbackProxy
        fun Find(Outer: UObject, ResourceName: String): AchievementQueryCallbackProxy
        fun GetDefaultObject(): AchievementQueryCallbackProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AchievementQueryCallbackProxy
        fun CacheAchievements(WorldContextObject: UObject, PlayerController: PlayerController): AchievementQueryCallbackProxy
        fun CacheAchievementDescriptions(WorldContextObject: UObject, PlayerController: PlayerController): AchievementQueryCallbackProxy
        fun C(Other: UObject): AchievementQueryCallbackProxy
        fun C(Other: Any): AchievementQueryCallbackProxy
    }
}

external open class AchievementWriteCallbackProxy : OnlineBlueprintCallProxyBase {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<(WrittenAchievementName: String, WrittenProgress: Number, WrittenUserTag: Number) -> Unit>
    open var OnFailure: UnrealEngineMulticastDelegate<(WrittenAchievementName: String, WrittenProgress: Number, WrittenUserTag: Number) -> Unit>

    companion object {
        fun Load(ResourceName: String): AchievementWriteCallbackProxy
        fun Find(Outer: UObject, ResourceName: String): AchievementWriteCallbackProxy
        fun GetDefaultObject(): AchievementWriteCallbackProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AchievementWriteCallbackProxy
        fun WriteAchievementProgress(WorldContextObject: UObject, PlayerController: PlayerController, AchievementName: String, Progress: Number, UserTag: Number): AchievementWriteCallbackProxy
        fun C(Other: UObject): AchievementWriteCallbackProxy
        fun C(Other: Any): AchievementWriteCallbackProxy
    }
}

external open class ConnectionCallbackProxy : OnlineBlueprintCallProxyBase {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<(ErrorCode: Number) -> Unit>
    open var OnFailure: UnrealEngineMulticastDelegate<(ErrorCode: Number) -> Unit>

    companion object {
        fun Load(ResourceName: String): ConnectionCallbackProxy
        fun Find(Outer: UObject, ResourceName: String): ConnectionCallbackProxy
        fun GetDefaultObject(): ConnectionCallbackProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ConnectionCallbackProxy
        fun ConnectToService(WorldContextObject: UObject, PlayerController: PlayerController): ConnectionCallbackProxy
        fun C(Other: UObject): ConnectionCallbackProxy
        fun C(Other: Any): ConnectionCallbackProxy
    }
}

external open class CreateSessionCallbackProxy : OnlineBlueprintCallProxyBase {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnFailure: UnrealEngineMulticastDelegate<() -> Unit>

    companion object {
        fun Load(ResourceName: String): CreateSessionCallbackProxy
        fun Find(Outer: UObject, ResourceName: String): CreateSessionCallbackProxy
        fun GetDefaultObject(): CreateSessionCallbackProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CreateSessionCallbackProxy
        fun CreateSession(WorldContextObject: UObject, PlayerController: PlayerController, PublicConnections: Number, bUseLAN: Boolean): CreateSessionCallbackProxy
        fun C(Other: UObject): CreateSessionCallbackProxy
        fun C(Other: Any): CreateSessionCallbackProxy
    }
}

external open class DestroySessionCallbackProxy : OnlineBlueprintCallProxyBase {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnFailure: UnrealEngineMulticastDelegate<() -> Unit>

    companion object {
        fun Load(ResourceName: String): DestroySessionCallbackProxy
        fun Find(Outer: UObject, ResourceName: String): DestroySessionCallbackProxy
        fun GetDefaultObject(): DestroySessionCallbackProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DestroySessionCallbackProxy
        fun DestroySession(WorldContextObject: UObject, PlayerController: PlayerController): DestroySessionCallbackProxy
        fun C(Other: UObject): DestroySessionCallbackProxy
        fun C(Other: Any): DestroySessionCallbackProxy
    }
}

external open class EndMatchCallbackProxy : OnlineBlueprintCallProxyBase {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnFailure: UnrealEngineMulticastDelegate<() -> Unit>

    companion object {
        fun Load(ResourceName: String): EndMatchCallbackProxy
        fun Find(Outer: UObject, ResourceName: String): EndMatchCallbackProxy
        fun GetDefaultObject(): EndMatchCallbackProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EndMatchCallbackProxy
        fun C(Other: UObject): EndMatchCallbackProxy
        fun C(Other: Any): EndMatchCallbackProxy
    }
}

external open class EndTurnCallbackProxy : OnlineBlueprintCallProxyBase {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnFailure: UnrealEngineMulticastDelegate<() -> Unit>

    companion object {
        fun Load(ResourceName: String): EndTurnCallbackProxy
        fun Find(Outer: UObject, ResourceName: String): EndTurnCallbackProxy
        fun GetDefaultObject(): EndTurnCallbackProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EndTurnCallbackProxy
        fun C(Other: UObject): EndTurnCallbackProxy
        fun C(Other: Any): EndTurnCallbackProxy
    }
}

external open class BlueprintSessionResult {
    open fun clone(): BlueprintSessionResult

    companion object {
        fun C(Other: UObject): BlueprintSessionResult
        fun C(Other: Any): BlueprintSessionResult
    }
}

external open class FindSessionsCallbackProxy : OnlineBlueprintCallProxyBase {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<(Results: Array<BlueprintSessionResult>) -> Unit>
    open var OnFailure: UnrealEngineMulticastDelegate<(Results: Array<BlueprintSessionResult>) -> Unit>

    companion object {
        fun Load(ResourceName: String): FindSessionsCallbackProxy
        fun Find(Outer: UObject, ResourceName: String): FindSessionsCallbackProxy
        fun GetDefaultObject(): FindSessionsCallbackProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FindSessionsCallbackProxy
        fun GetServerName(Result: BlueprintSessionResult): String
        fun GetPingInMs(Result: BlueprintSessionResult): Number
        fun GetMaxPlayers(Result: BlueprintSessionResult): Number
        fun GetCurrentPlayers(Result: BlueprintSessionResult): Number
        fun FindSessions(WorldContextObject: UObject, PlayerController: PlayerController, MaxResults: Number, bUseLAN: Boolean): FindSessionsCallbackProxy
        fun C(Other: UObject): FindSessionsCallbackProxy
        fun C(Other: Any): FindSessionsCallbackProxy
    }
}

external open class FindTurnBasedMatchCallbackProxy : OnlineBlueprintCallProxyBase {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<(MatchID: String) -> Unit>
    open var OnFailure: UnrealEngineMulticastDelegate<(MatchID: String) -> Unit>

    companion object {
        fun Load(ResourceName: String): FindTurnBasedMatchCallbackProxy
        fun Find(Outer: UObject, ResourceName: String): FindTurnBasedMatchCallbackProxy
        fun GetDefaultObject(): FindTurnBasedMatchCallbackProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FindTurnBasedMatchCallbackProxy
        fun C(Other: UObject): FindTurnBasedMatchCallbackProxy
        fun C(Other: Any): FindTurnBasedMatchCallbackProxy
    }
}

external object EInAppPurchaseState {
    var Unknown: String /* "Unknown" */
    var Success: String /* "Success" */
    var Failed: String /* "Failed" */
    var Cancelled: String /* "Cancelled" */
    var Invalid: String /* "Invalid" */
    var NotAllowed: String /* "NotAllowed" */
    var Restored: String /* "Restored" */
    var AlreadyOwned: String /* "AlreadyOwned" */
    var EInAppPurchaseState_MAX: String /* "EInAppPurchaseState_MAX" */
}

external open class InAppPurchaseProductInfo {
    open var Identifier: String
    open var TransactionIdentifier: String
    open var DisplayName: String
    open var DisplayDescription: String
    open var DisplayPrice: String
    open var RawPrice: Number
    open var CurrencyCode: String
    open var CurrencySymbol: String
    open var DecimalSeparator: String
    open var GroupingSeparator: String
    open var ReceiptData: String
    open fun clone(): InAppPurchaseProductInfo

    companion object {
        fun C(Other: UObject): InAppPurchaseProductInfo
        fun C(Other: Any): InAppPurchaseProductInfo
    }
}

external open class InAppPurchaseProductRequest {
    open var ProductIdentifier: String
    open var bIsConsumable: Boolean
    open fun clone(): InAppPurchaseProductRequest

    companion object {
        fun C(Other: UObject): InAppPurchaseProductRequest
        fun C(Other: Any): InAppPurchaseProductRequest
    }
}

external open class InAppPurchaseCallbackProxy : UObject {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<(CompletionStatus: String /* "Unknown" | "Success" | "Failed" | "Cancelled" | "Invalid" | "NotAllowed" | "Restored" | "AlreadyOwned" | "EInAppPurchaseState_MAX" */, InAppPurchaseInformation: InAppPurchaseProductInfo) -> Unit>
    open var OnFailure: UnrealEngineMulticastDelegate<(CompletionStatus: String /* "Unknown" | "Success" | "Failed" | "Cancelled" | "Invalid" | "NotAllowed" | "Restored" | "AlreadyOwned" | "EInAppPurchaseState_MAX" */, InAppPurchaseInformation: InAppPurchaseProductInfo) -> Unit>

    companion object {
        fun Load(ResourceName: String): InAppPurchaseCallbackProxy
        fun Find(Outer: UObject, ResourceName: String): InAppPurchaseCallbackProxy
        fun GetDefaultObject(): InAppPurchaseCallbackProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InAppPurchaseCallbackProxy
        fun CreateProxyObjectForInAppPurchase(PlayerController: PlayerController, ProductRequest: InAppPurchaseProductRequest): InAppPurchaseCallbackProxy
        fun C(Other: UObject): InAppPurchaseCallbackProxy
        fun C(Other: Any): InAppPurchaseCallbackProxy
    }
}

external open class InAppPurchaseQueryCallbackProxy : UObject {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<(InAppPurchaseInformation: Array<InAppPurchaseProductInfo>) -> Unit>
    open var OnFailure: UnrealEngineMulticastDelegate<(InAppPurchaseInformation: Array<InAppPurchaseProductInfo>) -> Unit>

    companion object {
        fun Load(ResourceName: String): InAppPurchaseQueryCallbackProxy
        fun Find(Outer: UObject, ResourceName: String): InAppPurchaseQueryCallbackProxy
        fun GetDefaultObject(): InAppPurchaseQueryCallbackProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InAppPurchaseQueryCallbackProxy
        fun CreateProxyObjectForInAppPurchaseQuery(PlayerController: PlayerController, ProductIdentifiers: Array<String>): InAppPurchaseQueryCallbackProxy
        fun C(Other: UObject): InAppPurchaseQueryCallbackProxy
        fun C(Other: Any): InAppPurchaseQueryCallbackProxy
    }
}

external open class InAppPurchaseRestoreInfo {
    open var Identifier: String
    open var ReceiptData: String
    open var TransactionIdentifier: String
    open fun clone(): InAppPurchaseRestoreInfo

    companion object {
        fun C(Other: UObject): InAppPurchaseRestoreInfo
        fun C(Other: Any): InAppPurchaseRestoreInfo
    }
}

external open class InAppPurchaseRestoreCallbackProxy : UObject {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<(CompletionStatus: String /* "Unknown" | "Success" | "Failed" | "Cancelled" | "Invalid" | "NotAllowed" | "Restored" | "AlreadyOwned" | "EInAppPurchaseState_MAX" */, InAppRestorePurchaseInformation: Array<InAppPurchaseRestoreInfo>) -> Unit>
    open var OnFailure: UnrealEngineMulticastDelegate<(CompletionStatus: String /* "Unknown" | "Success" | "Failed" | "Cancelled" | "Invalid" | "NotAllowed" | "Restored" | "AlreadyOwned" | "EInAppPurchaseState_MAX" */, InAppRestorePurchaseInformation: Array<InAppPurchaseRestoreInfo>) -> Unit>

    companion object {
        fun Load(ResourceName: String): InAppPurchaseRestoreCallbackProxy
        fun Find(Outer: UObject, ResourceName: String): InAppPurchaseRestoreCallbackProxy
        fun GetDefaultObject(): InAppPurchaseRestoreCallbackProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InAppPurchaseRestoreCallbackProxy
        fun CreateProxyObjectForInAppPurchaseRestore(ConsumableProductFlags: Array<InAppPurchaseProductRequest>, PlayerController: PlayerController): InAppPurchaseRestoreCallbackProxy
        fun C(Other: UObject): InAppPurchaseRestoreCallbackProxy
        fun C(Other: Any): InAppPurchaseRestoreCallbackProxy
    }
}

external open class IpConnection : NetConnection {
    constructor()
    constructor(Outer: UObject)
    open var SocketErrorDisconnectDelay: Number

    companion object {
        fun Load(ResourceName: String): IpConnection
        fun Find(Outer: UObject, ResourceName: String): IpConnection
        fun GetDefaultObject(): IpConnection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): IpConnection
        fun C(Other: UObject): IpConnection
        fun C(Other: Any): IpConnection
    }
}

external open class IpNetDriver : NetDriver {
    constructor()
    constructor(Outer: UObject)
    open var LogPortUnreach: Boolean
    open var AllowPlayerPortUnreach: Boolean
    open var MaxPortCountToTry: Any
    open var ServerDesiredSocketReceiveBufferBytes: Any
    open var ServerDesiredSocketSendBufferBytes: Any
    open var ClientDesiredSocketReceiveBufferBytes: Any
    open var ClientDesiredSocketSendBufferBytes: Any
    open var MaxSecondsInReceive: Any
    open var NbPacketsBetweenReceiveTimeTest: Number

    companion object {
        fun Load(ResourceName: String): IpNetDriver
        fun Find(Outer: UObject, ResourceName: String): IpNetDriver
        fun GetDefaultObject(): IpNetDriver
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): IpNetDriver
        fun C(Other: UObject): IpNetDriver
        fun C(Other: Any): IpNetDriver
    }
}

external open class JoinSessionCallbackProxy : OnlineBlueprintCallProxyBase {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnFailure: UnrealEngineMulticastDelegate<() -> Unit>

    companion object {
        fun Load(ResourceName: String): JoinSessionCallbackProxy
        fun Find(Outer: UObject, ResourceName: String): JoinSessionCallbackProxy
        fun GetDefaultObject(): JoinSessionCallbackProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JoinSessionCallbackProxy
        fun JoinSession(WorldContextObject: UObject, PlayerController: PlayerController, SearchResult: BlueprintSessionResult): JoinSessionCallbackProxy
        fun C(Other: UObject): JoinSessionCallbackProxy
        fun C(Other: Any): JoinSessionCallbackProxy
    }
}

external open class LeaderboardBlueprintLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LeaderboardBlueprintLibrary
        fun Find(Outer: UObject, ResourceName: String): LeaderboardBlueprintLibrary
        fun GetDefaultObject(): LeaderboardBlueprintLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LeaderboardBlueprintLibrary
        fun WriteLeaderboardInteger(PlayerController: PlayerController, StatName: String, StatValue: Number): Boolean
        fun C(Other: UObject): LeaderboardBlueprintLibrary
        fun C(Other: Any): LeaderboardBlueprintLibrary
    }
}

external open class LeaderboardFlushCallbackProxy : UObject {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<(SessionName: String) -> Unit>
    open var OnFailure: UnrealEngineMulticastDelegate<(SessionName: String) -> Unit>

    companion object {
        fun Load(ResourceName: String): LeaderboardFlushCallbackProxy
        fun Find(Outer: UObject, ResourceName: String): LeaderboardFlushCallbackProxy
        fun GetDefaultObject(): LeaderboardFlushCallbackProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LeaderboardFlushCallbackProxy
        fun CreateProxyObjectForFlush(PlayerController: PlayerController, SessionName: String): LeaderboardFlushCallbackProxy
        fun C(Other: UObject): LeaderboardFlushCallbackProxy
        fun C(Other: Any): LeaderboardFlushCallbackProxy
    }
}

external open class LeaderboardQueryCallbackProxy : UObject {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<(LeaderboardValue: Number) -> Unit>
    open var OnFailure: UnrealEngineMulticastDelegate<(LeaderboardValue: Number) -> Unit>

    companion object {
        fun Load(ResourceName: String): LeaderboardQueryCallbackProxy
        fun Find(Outer: UObject, ResourceName: String): LeaderboardQueryCallbackProxy
        fun GetDefaultObject(): LeaderboardQueryCallbackProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LeaderboardQueryCallbackProxy
        fun CreateProxyObjectForIntQuery(PlayerController: PlayerController, StatName: String): LeaderboardQueryCallbackProxy
        fun C(Other: UObject): LeaderboardQueryCallbackProxy
        fun C(Other: Any): LeaderboardQueryCallbackProxy
    }
}

external open class LogoutCallbackProxy : BlueprintAsyncActionBase {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<(PlayerController: PlayerController) -> Unit>
    open var OnFailure: UnrealEngineMulticastDelegate<(PlayerController: PlayerController) -> Unit>

    companion object {
        fun Load(ResourceName: String): LogoutCallbackProxy
        fun Find(Outer: UObject, ResourceName: String): LogoutCallbackProxy
        fun GetDefaultObject(): LogoutCallbackProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LogoutCallbackProxy
        fun Logout(WorldContextObject: UObject, PlayerController: PlayerController): LogoutCallbackProxy
        fun C(Other: UObject): LogoutCallbackProxy
        fun C(Other: Any): LogoutCallbackProxy
    }
}

external open class OnlineBeacon(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var BeaconConnectionInitialTimeout: Number
    open var BeaconConnectionTimeout: Number
    open var NetDriver: NetDriver

    companion object {
        fun GetDefaultObject(): OnlineBeacon
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): OnlineBeacon
        fun C(Other: UObject): OnlineBeacon
        fun C(Other: Any): OnlineBeacon
    }
}

external open class OnlineBeaconHostObject(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var BeaconTypeName: String
    open var ClientBeaconActorClass: UnrealEngineClass
    open var ClientActors: Array<OnlineBeaconClient>

    companion object {
        fun GetDefaultObject(): OnlineBeaconHostObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): OnlineBeaconHostObject
        fun C(Other: UObject): OnlineBeaconHostObject
        fun C(Other: Any): OnlineBeaconHostObject
    }
}

external object EBeaconConnectionState {
    var Invalid: String /* "Invalid" */
    var Closed: String /* "Closed" */
    var Pending: String /* "Pending" */
    var Open: String /* "Open" */
    var EBeaconConnectionState_MAX: String /* "EBeaconConnectionState_MAX" */
}

external open class OnlineBeaconClient(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : OnlineBeacon {
    open var BeaconOwner: OnlineBeaconHostObject
    open var BeaconConnection: NetConnection
    open var ConnectionState: String /* "Invalid" | "Closed" | "Pending" | "Open" | "EBeaconConnectionState_MAX" */
    open fun ClientOnConnected()

    companion object {
        fun GetDefaultObject(): OnlineBeaconClient
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): OnlineBeaconClient
        fun C(Other: UObject): OnlineBeaconClient
        fun C(Other: Any): OnlineBeaconClient
    }
}

external open class OnlineBeaconHost(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : OnlineBeacon {
    open var ListenPort: Number
    open var ClientActors: Array<OnlineBeaconClient>

    companion object {
        fun GetDefaultObject(): OnlineBeaconHost
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): OnlineBeaconHost
        fun C(Other: UObject): OnlineBeaconHost
        fun C(Other: Any): OnlineBeaconHost
    }
}

external open class OnlineEngineInterfaceImpl : OnlineEngineInterface {
    constructor()
    constructor(Outer: UObject)
    open var VoiceSubsystemNameOverride: String

    companion object {
        fun Load(ResourceName: String): OnlineEngineInterfaceImpl
        fun Find(Outer: UObject, ResourceName: String): OnlineEngineInterfaceImpl
        fun GetDefaultObject(): OnlineEngineInterfaceImpl
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): OnlineEngineInterfaceImpl
        fun C(Other: UObject): OnlineEngineInterfaceImpl
        fun C(Other: Any): OnlineEngineInterfaceImpl
    }
}

external open class PIELoginSettingsInternal {
    open var ID: String
    open var Token: String
    open var Type: String
    open var TokenBytes: Array<Number>
    open fun clone(): PIELoginSettingsInternal

    companion object {
        fun C(Other: UObject): PIELoginSettingsInternal
        fun C(Other: Any): PIELoginSettingsInternal
    }
}

external open class OnlinePIESettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var bOnlinePIEEnabled: Boolean
    open var Logins: Array<PIELoginSettingsInternal>

    companion object {
        fun Load(ResourceName: String): OnlinePIESettings
        fun Find(Outer: UObject, ResourceName: String): OnlinePIESettings
        fun GetDefaultObject(): OnlinePIESettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): OnlinePIESettings
        fun C(Other: UObject): OnlinePIESettings
        fun C(Other: Any): OnlinePIESettings
    }
}

external open class OnlineSessionClient : OnlineSession {
    constructor()
    constructor(Outer: UObject)
    open var bIsFromInvite: Boolean
    open var bHandlingDisconnect: Boolean

    companion object {
        fun Load(ResourceName: String): OnlineSessionClient
        fun Find(Outer: UObject, ResourceName: String): OnlineSessionClient
        fun GetDefaultObject(): OnlineSessionClient
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): OnlineSessionClient
        fun C(Other: UObject): OnlineSessionClient
        fun C(Other: Any): OnlineSessionClient
    }
}

external open class PlayerReservation {
    open var UniqueId: UniqueNetIdRepl
    open var ValidationStr: String
    open var Platform: String
    open var bAllowCrossplay: Boolean
    open var ElapsedTime: Number
    open fun clone(): PlayerReservation

    companion object {
        fun C(Other: UObject): PlayerReservation
        fun C(Other: Any): PlayerReservation
    }
}

external open class PartyReservation {
    open var TeamNum: Number
    open var PartyLeader: UniqueNetIdRepl
    open var PartyMembers: Array<PlayerReservation>
    open var RemovedPartyMembers: Array<PlayerReservation>
    open fun clone(): PartyReservation

    companion object {
        fun C(Other: UObject): PartyReservation
        fun C(Other: Any): PartyReservation
    }
}

external object EClientRequestType {
    var NonePending: String /* "NonePending" */
    var ExistingSessionReservation: String /* "ExistingSessionReservation" */
    var ReservationUpdate: String /* "ReservationUpdate" */
    var EmptyServerReservation: String /* "EmptyServerReservation" */
    var Reconnect: String /* "Reconnect" */
    var Abandon: String /* "Abandon" */
    var EClientRequestType_MAX: String /* "EClientRequestType_MAX" */
}

external object EPartyReservationResult {
    var NoResult: String /* "NoResult" */
    var RequestPending: String /* "RequestPending" */
    var GeneralError: String /* "GeneralError" */
    var PartyLimitReached: String /* "PartyLimitReached" */
    var IncorrectPlayerCount: String /* "IncorrectPlayerCount" */
    var RequestTimedOut: String /* "RequestTimedOut" */
    var ReservationDuplicate: String /* "ReservationDuplicate" */
    var ReservationNotFound: String /* "ReservationNotFound" */
    var ReservationAccepted: String /* "ReservationAccepted" */
    var ReservationDenied: String /* "ReservationDenied" */
    var ReservationDenied_CrossPlayRestriction: String /* "ReservationDenied_CrossPlayRestriction" */
    var ReservationDenied_Banned: String /* "ReservationDenied_Banned" */
    var ReservationRequestCanceled: String /* "ReservationRequestCanceled" */
    var ReservationInvalid: String /* "ReservationInvalid" */
    var BadSessionId: String /* "BadSessionId" */
    var ReservationDenied_ContainsExistingPlayers: String /* "ReservationDenied_ContainsExistingPlayers" */
    var EPartyReservationResult_MAX: String /* "EPartyReservationResult_MAX" */
}

external open class PartyBeaconClient(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : OnlineBeaconClient {
    open var DestSessionId: String
    open var PendingReservation: PartyReservation
    open var RequestType: String /* "NonePending" | "ExistingSessionReservation" | "ReservationUpdate" | "EmptyServerReservation" | "Reconnect" | "Abandon" | "EClientRequestType_MAX" */
    open var bPendingReservationSent: Boolean
    open var bCancelReservation: Boolean
    open fun ServerUpdateReservationRequest(SessionId: String, ReservationUpdate: PartyReservation)
    open fun ServerReservationRequest(SessionId: String, Reservation: PartyReservation)
    open fun ServerCancelReservationRequest(PartyLeader: UniqueNetIdRepl)
    open fun ClientSendReservationUpdates(NumRemainingReservations: Number)
    open fun ClientSendReservationFull()
    open fun ClientReservationResponse(ReservationResponse: String /* "NoResult" | "RequestPending" | "GeneralError" | "PartyLimitReached" | "IncorrectPlayerCount" | "RequestTimedOut" | "ReservationDuplicate" | "ReservationNotFound" | "ReservationAccepted" | "ReservationDenied" | "ReservationDenied_CrossPlayRestriction" | "ReservationDenied_Banned" | "ReservationRequestCanceled" | "ReservationInvalid" | "BadSessionId" | "ReservationDenied_ContainsExistingPlayers" | "EPartyReservationResult_MAX" */)
    open fun ClientCancelReservationResponse(ReservationResponse: String /* "NoResult" | "RequestPending" | "GeneralError" | "PartyLimitReached" | "IncorrectPlayerCount" | "RequestTimedOut" | "ReservationDuplicate" | "ReservationNotFound" | "ReservationAccepted" | "ReservationDenied" | "ReservationDenied_CrossPlayRestriction" | "ReservationDenied_Banned" | "ReservationRequestCanceled" | "ReservationInvalid" | "BadSessionId" | "ReservationDenied_ContainsExistingPlayers" | "EPartyReservationResult_MAX" */)

    companion object {
        fun GetDefaultObject(): PartyBeaconClient
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PartyBeaconClient
        fun C(Other: UObject): PartyBeaconClient
        fun C(Other: Any): PartyBeaconClient
    }
}

external open class PartyBeaconState : UObject {
    constructor()
    constructor(Outer: UObject)
    open var SessionName: String
    open var NumConsumedReservations: Number
    open var MaxReservations: Number
    open var NumTeams: Number
    open var NumPlayersPerTeam: Number
    open var TeamAssignmentMethod: String
    open var ReservedHostTeamNum: Number
    open var ForceTeamNum: Number
    open var bRestrictCrossConsole: Boolean
    open var Reservations: Array<PartyReservation>

    companion object {
        fun Load(ResourceName: String): PartyBeaconState
        fun Find(Outer: UObject, ResourceName: String): PartyBeaconState
        fun GetDefaultObject(): PartyBeaconState
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PartyBeaconState
        fun C(Other: UObject): PartyBeaconState
        fun C(Other: Any): PartyBeaconState
    }
}

external open class PartyBeaconHost(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : OnlineBeaconHostObject {
    open var State: PartyBeaconState
    open var bLogoutOnSessionTimeout: Boolean
    open var SessionTimeoutSecs: Number
    open var TravelSessionTimeoutSecs: Number

    companion object {
        fun GetDefaultObject(): PartyBeaconHost
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PartyBeaconHost
        fun C(Other: UObject): PartyBeaconHost
        fun C(Other: Any): PartyBeaconHost
    }
}

external object EMPMatchOutcome {
    var None: String /* "None" */
    var Quit: String /* "Quit" */
    var Won: String /* "Won" */
    var Lost: String /* "Lost" */
    var Tied: String /* "Tied" */
    var TimeExpired: String /* "TimeExpired" */
    var First: String /* "First" */
    var Second: String /* "Second" */
    var Third: String /* "Third" */
    var Fourth: String /* "Fourth" */
    var EMPMatchOutcome_MAX: String /* "EMPMatchOutcome_MAX" */
}

external open class QuitMatchCallbackProxy : OnlineBlueprintCallProxyBase {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnFailure: UnrealEngineMulticastDelegate<() -> Unit>

    companion object {
        fun Load(ResourceName: String): QuitMatchCallbackProxy
        fun Find(Outer: UObject, ResourceName: String): QuitMatchCallbackProxy
        fun GetDefaultObject(): QuitMatchCallbackProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): QuitMatchCallbackProxy
        fun QuitMatch(WorldContextObject: UObject, PlayerController: PlayerController, MatchID: String, Outcome: String /* "None" | "Quit" | "Won" | "Lost" | "Tied" | "TimeExpired" | "First" | "Second" | "Third" | "Fourth" | "EMPMatchOutcome_MAX" */, TurnTimeoutInSeconds: Number): QuitMatchCallbackProxy
        fun C(Other: UObject): QuitMatchCallbackProxy
        fun C(Other: Any): QuitMatchCallbackProxy
    }
}

external open class ShowLoginUICallbackProxy : BlueprintAsyncActionBase {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<(PlayerController: PlayerController) -> Unit>
    open var OnFailure: UnrealEngineMulticastDelegate<(PlayerController: PlayerController) -> Unit>

    companion object {
        fun Load(ResourceName: String): ShowLoginUICallbackProxy
        fun Find(Outer: UObject, ResourceName: String): ShowLoginUICallbackProxy
        fun GetDefaultObject(): ShowLoginUICallbackProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ShowLoginUICallbackProxy
        fun ShowExternalLoginUI(WorldContextObject: UObject, InPlayerController: PlayerController): ShowLoginUICallbackProxy
        fun C(Other: UObject): ShowLoginUICallbackProxy
        fun C(Other: Any): ShowLoginUICallbackProxy
    }
}

external open class SpectatorReservation {
    open var SpectatorId: UniqueNetIdRepl
    open var Spectator: PlayerReservation
    open fun clone(): SpectatorReservation

    companion object {
        fun C(Other: UObject): SpectatorReservation
        fun C(Other: Any): SpectatorReservation
    }
}

external object ESpectatorClientRequestType {
    var NonePending: String /* "NonePending" */
    var ExistingSessionReservation: String /* "ExistingSessionReservation" */
    var ReservationUpdate: String /* "ReservationUpdate" */
    var EmptyServerReservation: String /* "EmptyServerReservation" */
    var Reconnect: String /* "Reconnect" */
    var Abandon: String /* "Abandon" */
    var ESpectatorClientRequestType_MAX: String /* "ESpectatorClientRequestType_MAX" */
}

external object ESpectatorReservationResult {
    var NoResult: String /* "NoResult" */
    var RequestPending: String /* "RequestPending" */
    var GeneralError: String /* "GeneralError" */
    var SpectatorLimitReached: String /* "SpectatorLimitReached" */
    var IncorrectPlayerCount: String /* "IncorrectPlayerCount" */
    var RequestTimedOut: String /* "RequestTimedOut" */
    var ReservationDuplicate: String /* "ReservationDuplicate" */
    var ReservationNotFound: String /* "ReservationNotFound" */
    var ReservationAccepted: String /* "ReservationAccepted" */
    var ReservationDenied: String /* "ReservationDenied" */
    var ReservationDenied_CrossPlayRestriction: String /* "ReservationDenied_CrossPlayRestriction" */
    var ReservationDenied_Banned: String /* "ReservationDenied_Banned" */
    var ReservationRequestCanceled: String /* "ReservationRequestCanceled" */
    var ReservationInvalid: String /* "ReservationInvalid" */
    var BadSessionId: String /* "BadSessionId" */
    var ReservationDenied_ContainsExistingPlayers: String /* "ReservationDenied_ContainsExistingPlayers" */
    var ESpectatorReservationResult_MAX: String /* "ESpectatorReservationResult_MAX" */
}

external open class SpectatorBeaconClient(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : OnlineBeaconClient {
    open var DestSessionId: String
    open var PendingReservation: SpectatorReservation
    open var RequestType: String /* "NonePending" | "ExistingSessionReservation" | "ReservationUpdate" | "EmptyServerReservation" | "Reconnect" | "Abandon" | "ESpectatorClientRequestType_MAX" */
    open var bPendingReservationSent: Boolean
    open var bCancelReservation: Boolean
    open fun ServerReservationRequest(SessionId: String, Reservation: SpectatorReservation)
    open fun ServerCancelReservationRequest(Spectator: UniqueNetIdRepl)
    open fun ClientSendReservationUpdates(NumRemainingReservations: Number)
    open fun ClientSendReservationFull()
    open fun ClientReservationResponse(ReservationResponse: String /* "NoResult" | "RequestPending" | "GeneralError" | "SpectatorLimitReached" | "IncorrectPlayerCount" | "RequestTimedOut" | "ReservationDuplicate" | "ReservationNotFound" | "ReservationAccepted" | "ReservationDenied" | "ReservationDenied_CrossPlayRestriction" | "ReservationDenied_Banned" | "ReservationRequestCanceled" | "ReservationInvalid" | "BadSessionId" | "ReservationDenied_ContainsExistingPlayers" | "ESpectatorReservationResult_MAX" */)
    open fun ClientCancelReservationResponse(ReservationResponse: String /* "NoResult" | "RequestPending" | "GeneralError" | "SpectatorLimitReached" | "IncorrectPlayerCount" | "RequestTimedOut" | "ReservationDuplicate" | "ReservationNotFound" | "ReservationAccepted" | "ReservationDenied" | "ReservationDenied_CrossPlayRestriction" | "ReservationDenied_Banned" | "ReservationRequestCanceled" | "ReservationInvalid" | "BadSessionId" | "ReservationDenied_ContainsExistingPlayers" | "ESpectatorReservationResult_MAX" */)

    companion object {
        fun GetDefaultObject(): SpectatorBeaconClient
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SpectatorBeaconClient
        fun C(Other: UObject): SpectatorBeaconClient
        fun C(Other: Any): SpectatorBeaconClient
    }
}

external open class SpectatorBeaconState : UObject {
    constructor()
    constructor(Outer: UObject)
    open var SessionName: String
    open var NumConsumedReservations: Number
    open var MaxReservations: Number
    open var bRestrictCrossConsole: Boolean
    open var Reservations: Array<SpectatorReservation>

    companion object {
        fun Load(ResourceName: String): SpectatorBeaconState
        fun Find(Outer: UObject, ResourceName: String): SpectatorBeaconState
        fun GetDefaultObject(): SpectatorBeaconState
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SpectatorBeaconState
        fun C(Other: UObject): SpectatorBeaconState
        fun C(Other: Any): SpectatorBeaconState
    }
}

external open class SpectatorBeaconHost(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : OnlineBeaconHostObject {
    open var State: SpectatorBeaconState
    open var bLogoutOnSessionTimeout: Boolean
    open var SessionTimeoutSecs: Number
    open var TravelSessionTimeoutSecs: Number

    companion object {
        fun GetDefaultObject(): SpectatorBeaconHost
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SpectatorBeaconHost
        fun C(Other: UObject): SpectatorBeaconHost
        fun C(Other: Any): SpectatorBeaconHost
    }
}

external open class TestBeaconClient(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : OnlineBeaconClient {
    open fun ServerPong()
    open fun ClientPing()

    companion object {
        fun GetDefaultObject(): TestBeaconClient
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TestBeaconClient
        fun C(Other: UObject): TestBeaconClient
        fun C(Other: Any): TestBeaconClient
    }
}

external open class TestBeaconHost(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : OnlineBeaconHostObject {
    companion object {
        fun GetDefaultObject(): TestBeaconHost
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TestBeaconHost
        fun C(Other: UObject): TestBeaconHost
        fun C(Other: Any): TestBeaconHost
    }
}

external interface `T$61` {
    var PlayerDisplayName: String
}

external interface `T$62` {
    var PlayerIndex: Number
}

external interface `T$63` {
    var bIsMyTurn: Boolean
}

external open class TurnBasedBlueprintLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TurnBasedBlueprintLibrary
        fun Find(Outer: UObject, ResourceName: String): TurnBasedBlueprintLibrary
        fun GetDefaultObject(): TurnBasedBlueprintLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TurnBasedBlueprintLibrary
        fun RegisterTurnBasedMatchInterfaceObject(WorldContextObject: UObject, PlayerController: PlayerController, UObject: UObject)
        fun GetPlayerDisplayName(WorldContextObject: UObject, PlayerController: PlayerController, MatchID: String, PlayerIndex: Number, PlayerDisplayName: String = definedExternally): `T$61`
        fun GetMyPlayerIndex(WorldContextObject: UObject, PlayerController: PlayerController, MatchID: String, PlayerIndex: Number = definedExternally): `T$62`
        fun GetIsMyTurn(WorldContextObject: UObject, PlayerController: PlayerController, MatchID: String, bIsMyTurn: Boolean = definedExternally): `T$63`
        fun C(Other: UObject): TurnBasedBlueprintLibrary
        fun C(Other: Any): TurnBasedBlueprintLibrary
    }
}

external open class VoipListenerSynthComponent : SynthComponent {
    constructor()
    constructor(Outer: UObject)
    open fun IsIdling(): Boolean

    companion object {
        fun Load(ResourceName: String): VoipListenerSynthComponent
        fun Find(Outer: UObject, ResourceName: String): VoipListenerSynthComponent
        fun GetDefaultObject(): VoipListenerSynthComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VoipListenerSynthComponent
        fun C(Other: UObject): VoipListenerSynthComponent
        fun C(Other: Any): VoipListenerSynthComponent
    }
}

external open class K2Node_InAppPurchase : K2Node_BaseAsyncTask {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_InAppPurchase
        fun Find(Outer: UObject, ResourceName: String): K2Node_InAppPurchase
        fun GetDefaultObject(): K2Node_InAppPurchase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_InAppPurchase
        fun C(Other: UObject): K2Node_InAppPurchase
        fun C(Other: Any): K2Node_InAppPurchase
    }
}

external open class K2Node_InAppPurchaseQuery : K2Node_BaseAsyncTask {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_InAppPurchaseQuery
        fun Find(Outer: UObject, ResourceName: String): K2Node_InAppPurchaseQuery
        fun GetDefaultObject(): K2Node_InAppPurchaseQuery
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_InAppPurchaseQuery
        fun C(Other: UObject): K2Node_InAppPurchaseQuery
        fun C(Other: Any): K2Node_InAppPurchaseQuery
    }
}

external open class K2Node_InAppPurchaseRestore : K2Node_BaseAsyncTask {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_InAppPurchaseRestore
        fun Find(Outer: UObject, ResourceName: String): K2Node_InAppPurchaseRestore
        fun GetDefaultObject(): K2Node_InAppPurchaseRestore
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_InAppPurchaseRestore
        fun C(Other: UObject): K2Node_InAppPurchaseRestore
        fun C(Other: Any): K2Node_InAppPurchaseRestore
    }
}

external open class K2Node_LatentOnlineCall : K2Node_BaseAsyncTask {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_LatentOnlineCall
        fun Find(Outer: UObject, ResourceName: String): K2Node_LatentOnlineCall
        fun GetDefaultObject(): K2Node_LatentOnlineCall
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_LatentOnlineCall
        fun C(Other: UObject): K2Node_LatentOnlineCall
        fun C(Other: Any): K2Node_LatentOnlineCall
    }
}

external open class K2Node_LeaderboardFlush : K2Node_BaseAsyncTask {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_LeaderboardFlush
        fun Find(Outer: UObject, ResourceName: String): K2Node_LeaderboardFlush
        fun GetDefaultObject(): K2Node_LeaderboardFlush
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_LeaderboardFlush
        fun C(Other: UObject): K2Node_LeaderboardFlush
        fun C(Other: Any): K2Node_LeaderboardFlush
    }
}

external open class K2Node_LeaderboardQuery : K2Node_BaseAsyncTask {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_LeaderboardQuery
        fun Find(Outer: UObject, ResourceName: String): K2Node_LeaderboardQuery
        fun GetDefaultObject(): K2Node_LeaderboardQuery
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_LeaderboardQuery
        fun C(Other: UObject): K2Node_LeaderboardQuery
        fun C(Other: Any): K2Node_LeaderboardQuery
    }
}

external object ETiledMultiResLevel {
    var ETiledMultiResLevel_Off: String /* "ETiledMultiResLevel_Off" */
    var ETiledMultiResLevel_LMSLow: String /* "ETiledMultiResLevel_LMSLow" */
    var ETiledMultiResLevel_LMSMedium: String /* "ETiledMultiResLevel_LMSMedium" */
    var ETiledMultiResLevel_LMSHigh: String /* "ETiledMultiResLevel_LMSHigh" */
    var ETiledMultiResLevel_LMSHighTop: String /* "ETiledMultiResLevel_LMSHighTop" */
    var ETiledMultiResLevel_MAX: String /* "ETiledMultiResLevel_MAX" */
}

external open class HmdUserProfileField {
    open var FieldName: String
    open var FieldValue: String
    open fun clone(): HmdUserProfileField

    companion object {
        fun C(Other: UObject): HmdUserProfileField
        fun C(Other: Any): HmdUserProfileField
    }
}

external interface `T$64` {
    var Profile: HmdUserProfile
    var `$`: Boolean
}

external open class HmdUserProfile {
    open var Name: String
    open var Gender: String
    open var PlayerHeight: Number
    open var EyeHeight: Number
    open var IPD: Number
    open var NeckToEyeDistance: Vector2D
    open var ExtraFields: Array<HmdUserProfileField>
    open fun clone(): HmdUserProfile
    open fun GetUserProfile(): `T$64`

    companion object {
        fun C(Other: UObject): HmdUserProfile
        fun C(Other: Any): HmdUserProfile
        fun GetUserProfile(Profile: HmdUserProfile = definedExternally): `T$64`
    }
}

external interface `T$65` {
    var AngularAcceleration: Vector
    var LinearAcceleration: Vector
    var AngularVelocity: Vector
    var LinearVelocity: Vector
    var TimeInSeconds: Number
}

external interface `T$66` {
    var DeviceRotation: Rotator
    var DevicePosition: Vector
    var NeckPosition: Vector
}

external interface `T$67` {
    var TexturePath: String
    var DistanceInMeters: Vector
    var SizeInMeters: Vector2D
    var RotationAxis: Vector
    var RotationDeltaInDeg: Number
}

external interface `T$68` {
    var IsGPUAvailable: Boolean
    var GPUUtilization: Number
}

external interface `T$69` {
    var OutRot: Rotator
    var OutPosOffset: Vector
}

external interface `T$70` {
    var OutRotation: Rotator
    var OutBaseOffsetInMeters: Vector
}

external open class OculusFunctionLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): OculusFunctionLibrary
        fun Find(Outer: UObject, ResourceName: String): OculusFunctionLibrary
        fun GetDefaultObject(): OculusFunctionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): OculusFunctionLibrary
        fun ShowLoadingSplashScreen()
        fun ShowLoadingIcon(Texture: Texture2D)
        fun SetTiledMultiresLevel(Level: String /* "ETiledMultiResLevel_Off" | "ETiledMultiResLevel_LMSLow" | "ETiledMultiResLevel_LMSMedium" | "ETiledMultiResLevel_LMSHigh" | "ETiledMultiResLevel_LMSHighTop" | "ETiledMultiResLevel_MAX" */)
        fun SetReorientHMDOnControllerRecenter(recenterMode: Boolean)
        fun SetPositionScale3D(PosScale3D: Vector)
        fun SetLoadingSplashParams(TexturePath: String, DistanceInMeters: Vector, SizeInMeters: Vector2D, RotationAxis: Vector, RotationDeltaInDeg: Number)
        fun SetGuardianVisibility(GuardianVisible: Boolean)
        fun SetDisplayFrequency(RequestedFrequency: Number)
        fun SetCPUAndGPULevels(CPULevel: Number, GPULevel: Number)
        fun SetColorScaleAndOffset(ColorScale: LinearColor, ColorOffset: LinearColor, bApplyToAllLayers: Boolean)
        fun SetBaseRotationAndPositionOffset(BaseRot: Rotator, PosOffset: Vector, Options: String /* "Orientation" | "Position" | "OrientationAndPosition" | "EOrientPositionSelector_MAX" */)
        fun SetBaseRotationAndBaseOffsetInMeters(Rotation: Rotator, BaseOffsetInMeters: Vector, Options: String /* "Orientation" | "Position" | "OrientationAndPosition" | "EOrientPositionSelector_MAX" */)
        fun IsLoadingIconEnabled(): Boolean
        fun IsGuardianDisplayed(): Boolean
        fun IsGuardianConfigured(): Boolean
        fun IsDeviceTracked(DeviceType: String /* "None" | "HMD" | "LTouch" | "RTouch" | "Touch" | "DeviceObjectZero" | "All" | "ETrackedDeviceType_MAX" */): Boolean
        fun IsAutoLoadingSplashScreenEnabled(): Boolean
        fun HideLoadingSplashScreen(bClear: Boolean)
        fun HideLoadingIcon()
        fun HasSystemOverlayPresent(): Boolean
        fun HasInputFocus(): Boolean
        fun GetUserProfile(Profile: HmdUserProfile = definedExternally): `T$64`
        fun GetTiledMultiresLevel(): String /* "ETiledMultiResLevel_Off" | "ETiledMultiResLevel_LMSLow" | "ETiledMultiResLevel_LMSMedium" | "ETiledMultiResLevel_LMSHigh" | "ETiledMultiResLevel_LMSHighTop" | "ETiledMultiResLevel_MAX" */
        fun GetRawSensorData(AngularAcceleration: Vector = definedExternally, LinearAcceleration: Vector = definedExternally, AngularVelocity: Vector = definedExternally, LinearVelocity: Vector = definedExternally, TimeInSeconds: Number = definedExternally, DeviceType: String /* "None" | "HMD" | "LTouch" | "RTouch" | "Touch" | "DeviceObjectZero" | "All" | "ETrackedDeviceType_MAX" */ = definedExternally): `T$65`
        fun GetPose(DeviceRotation: Rotator = definedExternally, DevicePosition: Vector = definedExternally, NeckPosition: Vector = definedExternally, bUseOrienationForPlayerCamera: Boolean = definedExternally, bUsePositionForPlayerCamera: Boolean = definedExternally, PositionScale: Vector = definedExternally): `T$66`
        fun GetPointGuardianIntersection(Point: Vector, BoundaryType: String /* "Boundary_Outer" | "Boundary_PlayArea" | "Boundary_MAX" */): GuardianTestResult
        fun GetPlayAreaTransform(): Transform
        fun GetNodeGuardianIntersection(DeviceType: String /* "None" | "HMD" | "LTouch" | "RTouch" | "Touch" | "DeviceObjectZero" | "All" | "ETrackedDeviceType_MAX" */, BoundaryType: String /* "Boundary_Outer" | "Boundary_PlayArea" | "Boundary_MAX" */): GuardianTestResult
        fun GetLoadingSplashParams(TexturePath: String = definedExternally, DistanceInMeters: Vector = definedExternally, SizeInMeters: Vector2D = definedExternally, RotationAxis: Vector = definedExternally, RotationDeltaInDeg: Number = definedExternally): `T$67`
        fun GetGuardianPoints(BoundaryType: String /* "Boundary_Outer" | "Boundary_PlayArea" | "Boundary_MAX" */, UsePawnSpace: Boolean): Array<Vector>
        fun GetGuardianDimensions(BoundaryType: String /* "Boundary_Outer" | "Boundary_PlayArea" | "Boundary_MAX" */): Vector
        fun GetGPUUtilization(IsGPUAvailable: Boolean = definedExternally, GPUUtilization: Number = definedExternally): `T$68`
        fun GetGPUFrameTime(): Number
        fun GetDeviceName(): String
        fun GetCurrentDisplayFrequency(): Number
        fun GetBaseRotationAndPositionOffset(OutRot: Rotator = definedExternally, OutPosOffset: Vector = definedExternally): `T$69`
        fun GetBaseRotationAndBaseOffsetInMeters(OutRotation: Rotator = definedExternally, OutBaseOffsetInMeters: Vector = definedExternally): `T$70`
        fun GetAvailableDisplayFrequencies(): Array<Number>
        fun EnablePositionTracking(bPositionTracking: Boolean)
        fun EnableOrientationTracking(bOrientationTracking: Boolean)
        fun EnableAutoLoadingSplashScreen(bAutoShowEnabled: Boolean)
        fun ClearLoadingSplashScreens()
        fun AddLoadingSplashScreen(Texture: Texture2D, TranslationInMeters: Vector, Rotation: Rotator, SizeInMeters: Vector2D, DeltaRotation: Rotator, bClearBeforeAdd: Boolean)
        fun C(Other: UObject): OculusFunctionLibrary
        fun C(Other: Any): OculusFunctionLibrary
    }
}

external open class OculusSplashDesc {
    open var TexturePath: SoftObjectPath
    open var TransformInMeters: Transform
    open var QuadSizeInMeters: Vector2D
    open var DeltaRotation: Quat
    open var TextureOffset: Vector2D
    open var TextureScale: Vector2D
    open var bNoAlphaChannel: Boolean
    open fun clone(): OculusSplashDesc

    companion object {
        fun C(Other: UObject): OculusSplashDesc
        fun C(Other: Any): OculusSplashDesc
    }
}

external open class OculusHMDRuntimeSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bAutoEnabled: Boolean
    open var SplashDescs: Array<OculusSplashDesc>
    open var bSupportsDash: Boolean
    open var bCompositesDepth: Boolean
    open var bHQDistortion: Boolean
    open var PixelDensityMin: Number
    open var PixelDensityMax: Number
    open var CPULevel: Number
    open var GPULevel: Number
    open var FFRLevel: String /* "ETiledMultiResLevel_Off" | "ETiledMultiResLevel_LMSLow" | "ETiledMultiResLevel_LMSMedium" | "ETiledMultiResLevel_LMSHigh" | "ETiledMultiResLevel_LMSHighTop" | "ETiledMultiResLevel_MAX" */
    open var bChromaCorrection: Boolean
    open var bRecenterHMDWithController: Boolean

    companion object {
        fun Load(ResourceName: String): OculusHMDRuntimeSettings
        fun Find(Outer: UObject, ResourceName: String): OculusHMDRuntimeSettings
        fun GetDefaultObject(): OculusHMDRuntimeSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): OculusHMDRuntimeSettings
        fun C(Other: UObject): OculusHMDRuntimeSettings
        fun C(Other: Any): OculusHMDRuntimeSettings
    }
}

external open class OculusSceneCaptureCubemap : UObject {
    constructor()
    constructor(Outer: UObject)
    open var CaptureComponents: Array<SceneCaptureComponent2D>

    companion object {
        fun Load(ResourceName: String): OculusSceneCaptureCubemap
        fun Find(Outer: UObject, ResourceName: String): OculusSceneCaptureCubemap
        fun GetDefaultObject(): OculusSceneCaptureCubemap
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): OculusSceneCaptureCubemap
        fun C(Other: UObject): OculusSceneCaptureCubemap
        fun C(Other: Any): OculusSceneCaptureCubemap
    }
}

external interface `T$71` {
    var OutOtherHalfProcMesh: ProceduralMeshComponent
}

external interface `T$72` {
    var Vertices: Array<Vector>
    var Triangles: Array<Number>
    var Normals: Array<Vector>
    var UVs: Array<Vector2D>
    var Tangents: Array<ProcMeshTangent>
}

external interface `T$73` {
    var Vertices: Array<Vector>
    var Triangles: Array<Number>
    var Normals: Array<Vector>
    var UVs: Array<Vector2D>
    var Tangents: Array<ProcMeshTangent>
}

external interface `T$74` {
    var Vertices: Array<Vector>
    var Triangles: Array<Number>
    var Normals: Array<Vector>
    var UVs: Array<Vector2D>
    var Tangents: Array<ProcMeshTangent>
}

external interface `T$75` {
    var Triangles: Array<Number>
    var Vertices: Array<Vector>
    var UVs: Array<Vector2D>
}

external interface `T$76` {
    var Triangles: Array<Number>
}

external interface `T$77` {
    var Triangles: Array<Number>
    var Vertices: Array<Vector>
    var UVs: Array<Vector2D>
    var UV1s: Array<Vector2D>
}

external interface `T$78` {
    var Triangles: Array<Number>
}

external interface `T$79` {
    var Normals: Array<Vector>
    var Tangents: Array<ProcMeshTangent>
}

external open class KismetProceduralMeshLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): KismetProceduralMeshLibrary
        fun Find(Outer: UObject, ResourceName: String): KismetProceduralMeshLibrary
        fun GetDefaultObject(): KismetProceduralMeshLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): KismetProceduralMeshLibrary
        fun SliceProceduralMesh(InProcMesh: ProceduralMeshComponent, PlanePosition: Vector, PlaneNormal: Vector, bCreateOtherHalf: Boolean, OutOtherHalfProcMesh: ProceduralMeshComponent = definedExternally, CapOption: String /* "NoCap" | "CreateNewSectionForCap" | "UseLastSectionForCap" | "EProcMeshSliceCapOption_MAX" */ = definedExternally, CapMaterial: MaterialInterface = definedExternally): `T$71`
        fun GetSectionFromStaticMesh(InMesh: StaticMesh, LODIndex: Number, SectionIndex: Number, Vertices: Array<Vector> = definedExternally, Triangles: Array<Number> = definedExternally, Normals: Array<Vector> = definedExternally, UVs: Array<Vector2D> = definedExternally, Tangents: Array<ProcMeshTangent> = definedExternally): `T$72`
        fun GetSectionFromProceduralMesh(InProcMesh: ProceduralMeshComponent, SectionIndex: Number, Vertices: Array<Vector> = definedExternally, Triangles: Array<Number> = definedExternally, Normals: Array<Vector> = definedExternally, UVs: Array<Vector2D> = definedExternally, Tangents: Array<ProcMeshTangent> = definedExternally): `T$73`
        fun GenerateBoxMesh(BoxRadius: Vector, Vertices: Array<Vector> = definedExternally, Triangles: Array<Number> = definedExternally, Normals: Array<Vector> = definedExternally, UVs: Array<Vector2D> = definedExternally, Tangents: Array<ProcMeshTangent> = definedExternally): `T$74`
        fun CreateGridMeshWelded(NumX: Number, NumY: Number, Triangles: Array<Number> = definedExternally, Vertices: Array<Vector> = definedExternally, UVs: Array<Vector2D> = definedExternally, GridSpacing: Number = definedExternally): `T$75`
        fun CreateGridMeshTriangles(NumX: Number, NumY: Number, bWinding: Boolean, Triangles: Array<Number> = definedExternally): `T$76`
        fun CreateGridMeshSplit(NumX: Number, NumY: Number, Triangles: Array<Number> = definedExternally, Vertices: Array<Vector> = definedExternally, UVs: Array<Vector2D> = definedExternally, UV1s: Array<Vector2D> = definedExternally, GridSpacing: Number = definedExternally): `T$77`
        fun CopyProceduralMeshFromStaticMeshComponent(StaticMeshComponent: StaticMeshComponent, LODIndex: Number, ProcMeshComponent: ProceduralMeshComponent, bCreateCollision: Boolean)
        fun ConvertQuadToTriangles(Triangles: Array<Number> = definedExternally, Vert0: Number = definedExternally, Vert1: Number = definedExternally, Vert2: Number = definedExternally, Vert3: Number = definedExternally): `T$78`
        fun CalculateTangentsForMesh(Vertices: Array<Vector>, Triangles: Array<Number>, UVs: Array<Vector2D>, Normals: Array<Vector> = definedExternally, Tangents: Array<ProcMeshTangent> = definedExternally): `T$79`
        fun C(Other: UObject): KismetProceduralMeshLibrary
        fun C(Other: Any): KismetProceduralMeshLibrary
    }
}

external open class SteamVRChaperoneComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var OnLeaveBounds: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnReturnToBounds: UnrealEngineMulticastDelegate<() -> Unit>
    open fun GetBounds(): Array<Vector>

    companion object {
        fun Load(ResourceName: String): SteamVRChaperoneComponent
        fun Find(Outer: UObject, ResourceName: String): SteamVRChaperoneComponent
        fun GetDefaultObject(): SteamVRChaperoneComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SteamVRChaperoneComponent
        fun C(Other: UObject): SteamVRChaperoneComponent
        fun C(Other: Any): SteamVRChaperoneComponent
    }
}

external object ESteamVRTrackedDeviceType {
    var Controller: String /* "Controller" */
    var TrackingReference: String /* "TrackingReference" */
    var Other: String /* "Other" */
    var Invalid: String /* "Invalid" */
    var ESteamVRTrackedDeviceType_MAX: String /* "ESteamVRTrackedDeviceType_MAX" */
}

external interface `T$80` {
    var OutTrackedDeviceIds: Array<Number>
}

external interface `T$81` {
    var OutPosition: Vector
    var OutOrientation: Rotator
    var `$`: Boolean
}

external open class SteamVRFunctionLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SteamVRFunctionLibrary
        fun Find(Outer: UObject, ResourceName: String): SteamVRFunctionLibrary
        fun GetDefaultObject(): SteamVRFunctionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SteamVRFunctionLibrary
        fun GetValidTrackedDeviceIds(DeviceType: String /* "Controller" | "TrackingReference" | "Other" | "Invalid" | "ESteamVRTrackedDeviceType_MAX" */, OutTrackedDeviceIds: Array<Number> = definedExternally): `T$80`
        fun GetTrackedDevicePositionAndOrientation(DeviceID: Number, OutPosition: Vector = definedExternally, OutOrientation: Rotator = definedExternally): `T$81`
        fun GetHandPositionAndOrientation(ControllerIndex: Number, Hand: String /* "Left" | "Right" | "AnyHand" | "Pad" | "ExternalCamera" | "Gun" | "Special_1" | "Special_2" | "Special_3" | "Special_4" | "Special_5" | "Special_6" | "Special_7" | "Special_8" | "Special_9" | "Special_10" | "Special_11" | "ControllerHand_Count" | "EControllerHand_MAX" */, OutPosition: Vector = definedExternally, OutOrientation: Rotator = definedExternally): `T$81`
        fun C(Other: UObject): SteamVRFunctionLibrary
        fun C(Other: Any): SteamVRFunctionLibrary
    }
}

external object ECompilerVersion {
    var Default: String /* "Default" */
    var VisualStudio2015: String /* "VisualStudio2015" */
    var VisualStudio2017: String /* "VisualStudio2017" */
    var VisualStudio2019: String /* "VisualStudio2019" */
    var ECompilerVersion_MAX: String /* "ECompilerVersion_MAX" */
}

external object EDefaultGraphicsRHI {
    var DefaultGraphicsRHI_Default: String /* "DefaultGraphicsRHI_Default" */
    var DefaultGraphicsRHI_DX11: String /* "DefaultGraphicsRHI_DX11" */
    var DefaultGraphicsRHI_DX12: String /* "DefaultGraphicsRHI_DX12" */
    var DefaultGraphicsRHI_Vulkan: String /* "DefaultGraphicsRHI_Vulkan" */
    var DefaultGraphicsRHI_MAX: String /* "DefaultGraphicsRHI_MAX" */
}

external object EMinimumSupportedOS {
    var MSOS_Vista: String /* "MSOS_Vista" */
    var MSOS_MAX: String /* "MSOS_MAX" */
}

external open class WindowsTargetSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Compiler: String /* "Default" | "VisualStudio2015" | "VisualStudio2017" | "VisualStudio2019" | "ECompilerVersion_MAX" */
    open var TargetedRHIs: Array<String>
    open var DefaultGraphicsRHI: String /* "DefaultGraphicsRHI_Default" | "DefaultGraphicsRHI_DX11" | "DefaultGraphicsRHI_DX12" | "DefaultGraphicsRHI_Vulkan" | "DefaultGraphicsRHI_MAX" */
    open var MinimumOSVersion: String /* "MSOS_Vista" | "MSOS_MAX" */
    open var AudioSampleRate: Number
    open var AudioCallbackBufferFrameSize: Number
    open var AudioNumBuffersToEnqueue: Number
    open var AudioMaxChannels: Number
    open var AudioNumSourceWorkers: Number
    open var SpatializationPlugin: String
    open var ReverbPlugin: String
    open var OcclusionPlugin: String

    companion object {
        fun Load(ResourceName: String): WindowsTargetSettings
        fun Find(Outer: UObject, ResourceName: String): WindowsTargetSettings
        fun GetDefaultObject(): WindowsTargetSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WindowsTargetSettings
        fun C(Other: UObject): WindowsTargetSettings
        fun C(Other: Any): WindowsTargetSettings
    }
}

external open class SourceCodeAccessSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var PreferredAccessor: String

    companion object {
        fun Load(ResourceName: String): SourceCodeAccessSettings
        fun Find(Outer: UObject, ResourceName: String): SourceCodeAccessSettings
        fun GetDefaultObject(): SourceCodeAccessSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SourceCodeAccessSettings
        fun C(Other: UObject): SourceCodeAccessSettings
        fun C(Other: Any): SourceCodeAccessSettings
    }
}

external open class LandscapeBlueprintBrush(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : LandscapeBlueprintBrushBase {
    companion object {
        fun GetDefaultObject(): LandscapeBlueprintBrush
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeBlueprintBrush
        fun C(Other: UObject): LandscapeBlueprintBrush
        fun C(Other: Any): LandscapeBlueprintBrush
    }
}

external object ETimezoneSetting {
    var InternationalDateLineWest: String /* "InternationalDateLineWest" */
    var CoordinatedUniversalTimeNeg11: String /* "CoordinatedUniversalTimeNeg11" */
    var Samoa: String /* "Samoa" */
    var Hawaii: String /* "Hawaii" */
    var Alaska: String /* "Alaska" */
    var PacificTime_USCAN: String /* "PacificTime_USCAN" */
    var BajaCalifornia: String /* "BajaCalifornia" */
    var MountainTime_USCAN: String /* "MountainTime_USCAN" */
    var Chihuahua_LaPaz_Mazatlan: String /* "Chihuahua_LaPaz_Mazatlan" */
    var Arizona: String /* "Arizona" */
    var Saskatchewan: String /* "Saskatchewan" */
    var CentralAmerica: String /* "CentralAmerica" */
    var CentralTime_USCAN: String /* "CentralTime_USCAN" */
    var Guadalajara_MexicoCity_Monterrey: String /* "Guadalajara_MexicoCity_Monterrey" */
    var EasternTime_USCAN: String /* "EasternTime_USCAN" */
    var Bogota_Lima_Quito: String /* "Bogota_Lima_Quito" */
    var Indiana_US: String /* "Indiana_US" */
    var Caracas: String /* "Caracas" */
    var AtlanticTime_Canada: String /* "AtlanticTime_Canada" */
    var Cuiaba: String /* "Cuiaba" */
    var Santiago: String /* "Santiago" */
    var Georgetown_LaPaz_Manaus_SanJuan: String /* "Georgetown_LaPaz_Manaus_SanJuan" */
    var Asuncion: String /* "Asuncion" */
    var Newfoundland: String /* "Newfoundland" */
    var Brasilia: String /* "Brasilia" */
    var Greenland: String /* "Greenland" */
    var Montevideo: String /* "Montevideo" */
    var Cayenne_Fortaleza: String /* "Cayenne_Fortaleza" */
    var BuenosAires: String /* "BuenosAires" */
    var MidAtlantic: String /* "MidAtlantic" */
    var CoordinatedUniversalTimeNeg02: String /* "CoordinatedUniversalTimeNeg02" */
    var Azores: String /* "Azores" */
    var CaboVerdeIs: String /* "CaboVerdeIs" */
    var Dublin_Edinburgh_Lisbon_London: String /* "Dublin_Edinburgh_Lisbon_London" */
    var Monrovia_Reykjavik: String /* "Monrovia_Reykjavik" */
    var Casablanca: String /* "Casablanca" */
    var UTC: String /* "UTC" */
    var Belgrade_Bratislava_Budapest_Ljubljana_Prague: String /* "Belgrade_Bratislava_Budapest_Ljubljana_Prague" */
    var Sarajevo_Skopje_Warsaw_Zagreb: String /* "Sarajevo_Skopje_Warsaw_Zagreb" */
    var Brussels_Copenhagen_Madrid_Paris: String /* "Brussels_Copenhagen_Madrid_Paris" */
    var WestCentralAfrica: String /* "WestCentralAfrica" */
    var Amsterdam_Berlin_Bern_Rome_Stockholm_Vienna: String /* "Amsterdam_Berlin_Bern_Rome_Stockholm_Vienna" */
    var Windhoek: String /* "Windhoek" */
    var Minsk: String /* "Minsk" */
    var Cairo: String /* "Cairo" */
    var Helsinki_Kyiv_Riga_Sofia_Tallinn_Vilnius: String /* "Helsinki_Kyiv_Riga_Sofia_Tallinn_Vilnius" */
    var Athens_Bucharest: String /* "Athens_Bucharest" */
    var Jerusalem: String /* "Jerusalem" */
    var Amman: String /* "Amman" */
    var Beirut: String /* "Beirut" */
    var Harare_Pretoria: String /* "Harare_Pretoria" */
    var Damascus: String /* "Damascus" */
    var Istanbul: String /* "Istanbul" */
    var Kuwait_Riyadh: String /* "Kuwait_Riyadh" */
    var Baghdad: String /* "Baghdad" */
    var Nairobi: String /* "Nairobi" */
    var Kaliningrad: String /* "Kaliningrad" */
    var Tehran: String /* "Tehran" */
    var Moscow_StPetersburg_Volgograd: String /* "Moscow_StPetersburg_Volgograd" */
    var AbuDhabi_Muscat: String /* "AbuDhabi_Muscat" */
    var Baku: String /* "Baku" */
    var Yerevan: String /* "Yerevan" */
    var Tbilisi: String /* "Tbilisi" */
    var PortLouis: String /* "PortLouis" */
    var Kabul: String /* "Kabul" */
    var Tashkent: String /* "Tashkent" */
    var Islamabad_Karachi: String /* "Islamabad_Karachi" */
    var Chennai_Kolkata_Mumbai_NewDelhi: String /* "Chennai_Kolkata_Mumbai_NewDelhi" */
    var SriJayawardenepura: String /* "SriJayawardenepura" */
    var Kathmandu: String /* "Kathmandu" */
    var Ekaterinburg: String /* "Ekaterinburg" */
    var Astana: String /* "Astana" */
    var Dhaka: String /* "Dhaka" */
    var Yangon_Rangoon: String /* "Yangon_Rangoon" */
    var Novosibirsk: String /* "Novosibirsk" */
    var Bangkok_Hanoi_Jakarta: String /* "Bangkok_Hanoi_Jakarta" */
    var Krasnoyarsk: String /* "Krasnoyarsk" */
    var Beijing_Chongqing_HongKong_Urumqi: String /* "Beijing_Chongqing_HongKong_Urumqi" */
    var KualaLumpur_Singapore: String /* "KualaLumpur_Singapore" */
    var Taipei: String /* "Taipei" */
    var Perth: String /* "Perth" */
    var Ulaanbaatar: String /* "Ulaanbaatar" */
    var Irkutsk: String /* "Irkutsk" */
    var Seoul: String /* "Seoul" */
    var Osaka_Sapporo_Tokyo: String /* "Osaka_Sapporo_Tokyo" */
    var Darwin: String /* "Darwin" */
    var Adelaide: String /* "Adelaide" */
    var Yakutsk: String /* "Yakutsk" */
    var Canberra_Melbourne_Sydney: String /* "Canberra_Melbourne_Sydney" */
    var Brisbane: String /* "Brisbane" */
    var Hobart: String /* "Hobart" */
    var Guam_PortMoresby: String /* "Guam_PortMoresby" */
    var Vladivostok: String /* "Vladivostok" */
    var SolomonIs_NewCaledonia: String /* "SolomonIs_NewCaledonia" */
    var Magadan: String /* "Magadan" */
    var Fiji: String /* "Fiji" */
    var Auckland_Wellington: String /* "Auckland_Wellington" */
    var CoordinatedUniversalTime12: String /* "CoordinatedUniversalTime12" */
    var Nukualofa: String /* "Nukualofa" */
    var LocalTime: String /* "LocalTime" */
    var ETimezoneSetting_MAX: String /* "ETimezoneSetting_MAX" */
}

external open class InternationalizationSettingsModel : UObject {
    constructor()
    constructor(Outer: UObject)
    open var DisplayTimezone: String /* "InternationalDateLineWest" | "CoordinatedUniversalTimeNeg11" | "Samoa" | "Hawaii" | "Alaska" | "PacificTime_USCAN" | "BajaCalifornia" | "MountainTime_USCAN" | "Chihuahua_LaPaz_Mazatlan" | "Arizona" | "Saskatchewan" | "CentralAmerica" | "CentralTime_USCAN" | "Guadalajara_MexicoCity_Monterrey" | "EasternTime_USCAN" | "Bogota_Lima_Quito" | "Indiana_US" | "Caracas" | "AtlanticTime_Canada" | "Cuiaba" | "Santiago" | "Georgetown_LaPaz_Manaus_SanJuan" | "Asuncion" | "Newfoundland" | "Brasilia" | "Greenland" | "Montevideo" | "Cayenne_Fortaleza" | "BuenosAires" | "MidAtlantic" | "CoordinatedUniversalTimeNeg02" | "Azores" | "CaboVerdeIs" | "Dublin_Edinburgh_Lisbon_London" | "Monrovia_Reykjavik" | "Casablanca" | "UTC" | "Belgrade_Bratislava_Budapest_Ljubljana_Prague" | "Sarajevo_Skopje_Warsaw_Zagreb" | "Brussels_Copenhagen_Madrid_Paris" | "WestCentralAfrica" | "Amsterdam_Berlin_Bern_Rome_Stockholm_Vienna" | "Windhoek" | "Minsk" | "Cairo" | "Helsinki_Kyiv_Riga_Sofia_Tallinn_Vilnius" | "Athens_Bucharest" | "Jerusalem" | "Amman" | "Beirut" | "Harare_Pretoria" | "Damascus" | "Istanbul" | "Kuwait_Riyadh" | "Baghdad" | "Nairobi" | "Kaliningrad" | "Tehran" | "Moscow_StPetersburg_Volgograd" | "AbuDhabi_Muscat" | "Baku" | "Yerevan" | "Tbilisi" | "PortLouis" | "Kabul" | "Tashkent" | "Islamabad_Karachi" | "Chennai_Kolkata_Mumbai_NewDelhi" | "SriJayawardenepura" | "Kathmandu" | "Ekaterinburg" | "Astana" | "Dhaka" | "Yangon_Rangoon" | "Novosibirsk" | "Bangkok_Hanoi_Jakarta" | "Krasnoyarsk" | "Beijing_Chongqing_HongKong_Urumqi" | "KualaLumpur_Singapore" | "Taipei" | "Perth" | "Ulaanbaatar" | "Irkutsk" | "Seoul" | "Osaka_Sapporo_Tokyo" | "Darwin" | "Adelaide" | "Yakutsk" | "Canberra_Melbourne_Sydney" | "Brisbane" | "Hobart" | "Guam_PortMoresby" | "Vladivostok" | "SolomonIs_NewCaledonia" | "Magadan" | "Fiji" | "Auckland_Wellington" | "CoordinatedUniversalTime12" | "Nukualofa" | "LocalTime" | "ETimezoneSetting_MAX" */

    companion object {
        fun Load(ResourceName: String): InternationalizationSettingsModel
        fun Find(Outer: UObject, ResourceName: String): InternationalizationSettingsModel
        fun GetDefaultObject(): InternationalizationSettingsModel
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InternationalizationSettingsModel
        fun C(Other: UObject): InternationalizationSettingsModel
        fun C(Other: Any): InternationalizationSettingsModel
    }
}

external open class PropertyConfigFileDisplayRow : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ConfigFileName: String
    open var ExternalProperty: Property
    open var bIsFileWritable: Boolean

    companion object {
        fun Load(ResourceName: String): PropertyConfigFileDisplayRow
        fun Find(Outer: UObject, ResourceName: String): PropertyConfigFileDisplayRow
        fun GetDefaultObject(): PropertyConfigFileDisplayRow
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PropertyConfigFileDisplayRow
        fun C(Other: UObject): PropertyConfigFileDisplayRow
        fun C(Other: Any): PropertyConfigFileDisplayRow
    }
}

external open class ConfigHierarchyPropertyView : UObject {
    constructor()
    constructor(Outer: UObject)
    open var EditProperty: Any
    open var ConfigFilePropertyObjects: Array<PropertyConfigFileDisplayRow>

    companion object {
        fun Load(ResourceName: String): ConfigHierarchyPropertyView
        fun Find(Outer: UObject, ResourceName: String): ConfigHierarchyPropertyView
        fun GetDefaultObject(): ConfigHierarchyPropertyView
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ConfigHierarchyPropertyView
        fun C(Other: UObject): ConfigHierarchyPropertyView
        fun C(Other: Any): ConfigHierarchyPropertyView
    }
}

external object EPinnedCommandListType {
    var Command: String /* "Command" */
    var CustomWidget: String /* "CustomWidget" */
    var EPinnedCommandListType_MAX: String /* "EPinnedCommandListType_MAX" */
}

external open class PinnedCommandListCommand {
    open var Name: String
    open var Binding: String
    open var Type: String /* "Command" | "CustomWidget" | "EPinnedCommandListType_MAX" */
    open fun clone(): PinnedCommandListCommand

    companion object {
        fun C(Other: UObject): PinnedCommandListCommand
        fun C(Other: Any): PinnedCommandListCommand
    }
}

external open class PinnedCommandListContext {
    open var Name: String
    open var Commands: Array<PinnedCommandListCommand>
    open fun clone(): PinnedCommandListContext

    companion object {
        fun C(Other: UObject): PinnedCommandListContext
        fun C(Other: Any): PinnedCommandListContext
    }
}

external open class PinnedCommandListSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Contexts: Array<PinnedCommandListContext>

    companion object {
        fun Load(ResourceName: String): PinnedCommandListSettings
        fun Find(Outer: UObject, ResourceName: String): PinnedCommandListSettings
        fun GetDefaultObject(): PinnedCommandListSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PinnedCommandListSettings
        fun C(Other: UObject): PinnedCommandListSettings
        fun C(Other: Any): PinnedCommandListSettings
    }
}

external open class AnimationEditorPreviewActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    companion object {
        fun GetDefaultObject(): AnimationEditorPreviewActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationEditorPreviewActor
        fun C(Other: UObject): AnimationEditorPreviewActor
        fun C(Other: Any): AnimationEditorPreviewActor
    }
}

external open class PersonaPreviewSceneController : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PersonaPreviewSceneController
        fun Find(Outer: UObject, ResourceName: String): PersonaPreviewSceneController
        fun GetDefaultObject(): PersonaPreviewSceneController
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PersonaPreviewSceneController
        fun C(Other: UObject): PersonaPreviewSceneController
        fun C(Other: Any): PersonaPreviewSceneController
    }
}

external open class PersonaPreviewSceneAnimationController : PersonaPreviewSceneController {
    constructor()
    constructor(Outer: UObject)
    open var Animation: AnimationAsset

    companion object {
        fun Load(ResourceName: String): PersonaPreviewSceneAnimationController
        fun Find(Outer: UObject, ResourceName: String): PersonaPreviewSceneAnimationController
        fun GetDefaultObject(): PersonaPreviewSceneAnimationController
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PersonaPreviewSceneAnimationController
        fun C(Other: UObject): PersonaPreviewSceneAnimationController
        fun C(Other: Any): PersonaPreviewSceneAnimationController
    }
}

external open class PersonaPreviewSceneDefaultController : PersonaPreviewSceneController {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PersonaPreviewSceneDefaultController
        fun Find(Outer: UObject, ResourceName: String): PersonaPreviewSceneDefaultController
        fun GetDefaultObject(): PersonaPreviewSceneDefaultController
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PersonaPreviewSceneDefaultController
        fun C(Other: UObject): PersonaPreviewSceneDefaultController
        fun C(Other: Any): PersonaPreviewSceneDefaultController
    }
}

external open class PersonaPreviewSceneDescription : UObject {
    constructor()
    constructor(Outer: UObject)
    open var PreviewController: UnrealEngineClass
    open var PreviewControllerInstance: PersonaPreviewSceneController
    open var PreviewControllerInstances: Array<PersonaPreviewSceneController>
    open var PreviewMesh: SkeletalMesh
    open var AdditionalMeshes: DataAsset
    open var DefaultAdditionalMeshes: PreviewMeshCollection

    companion object {
        fun Load(ResourceName: String): PersonaPreviewSceneDescription
        fun Find(Outer: UObject, ResourceName: String): PersonaPreviewSceneDescription
        fun GetDefaultObject(): PersonaPreviewSceneDescription
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PersonaPreviewSceneDescription
        fun C(Other: UObject): PersonaPreviewSceneDescription
        fun C(Other: Any): PersonaPreviewSceneDescription
    }
}

external open class PersonaPreviewSceneRefPoseController : PersonaPreviewSceneController {
    constructor()
    constructor(Outer: UObject)
    open var bResetBoneTransforms: Boolean

    companion object {
        fun Load(ResourceName: String): PersonaPreviewSceneRefPoseController
        fun Find(Outer: UObject, ResourceName: String): PersonaPreviewSceneRefPoseController
        fun GetDefaultObject(): PersonaPreviewSceneRefPoseController
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PersonaPreviewSceneRefPoseController
        fun C(Other: UObject): PersonaPreviewSceneRefPoseController
        fun C(Other: Any): PersonaPreviewSceneRefPoseController
    }
}

external open class SkinWeightImportOptions : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ProfileName: String
    open var FilePath: String
    open var LODIndex: Number

    companion object {
        fun Load(ResourceName: String): SkinWeightImportOptions
        fun Find(Outer: UObject, ResourceName: String): SkinWeightImportOptions
        fun GetDefaultObject(): SkinWeightImportOptions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SkinWeightImportOptions
        fun C(Other: UObject): SkinWeightImportOptions
        fun C(Other: Any): SkinWeightImportOptions
    }
}

external open class Manipulator(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var AssociatedComponent: SceneComponent
    open var StaticMeshComponent: StaticMeshComponent

    companion object {
        fun GetDefaultObject(): Manipulator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Manipulator
        fun C(Other: UObject): Manipulator
        fun C(Other: Any): Manipulator
    }
}

external open class SplineMetadataDetailsFactoryBase : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SplineMetadataDetailsFactoryBase
        fun Find(Outer: UObject, ResourceName: String): SplineMetadataDetailsFactoryBase
        fun GetDefaultObject(): SplineMetadataDetailsFactoryBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SplineMetadataDetailsFactoryBase
        fun C(Other: UObject): SplineMetadataDetailsFactoryBase
        fun C(Other: Any): SplineMetadataDetailsFactoryBase
    }
}

external open class PropertyViewBase : Widget {
    constructor()
    constructor(Outer: UObject)
    open var LazyObject: Any
    open var SoftObjectPath: SoftObjectPath
    open var bAutoLoadAsset: Boolean
    open var OnPropertyChanged: UnrealEngineMulticastDelegate<(PropertyName: String) -> Unit>
    open fun SetObject(NewObject: UObject)
    open fun GetObject(): UObject

    companion object {
        fun Load(ResourceName: String): PropertyViewBase
        fun Find(Outer: UObject, ResourceName: String): PropertyViewBase
        fun GetDefaultObject(): PropertyViewBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PropertyViewBase
        fun C(Other: UObject): PropertyViewBase
        fun C(Other: Any): PropertyViewBase
    }
}

external open class DetailsView : PropertyViewBase {
    constructor()
    constructor(Outer: UObject)
    open var bAllowFiltering: Boolean
    open var bAllowFavoriteSystem: Boolean
    open var bShowModifiedPropertiesOption: Boolean
    open var bShowKeyablePropertiesOption: Boolean
    open var bShowAnimatedPropertiesOption: Boolean
    open var ColumnWidth: Number
    open var bShowScrollBar: Boolean
    open var bForceHiddenPropertyVisibility: Boolean
    open var ViewIdentifier: String
    open var CategoriesToShow: Array<String>
    open var PropertiesToShow: Array<String>
    open var bShowOnlyWhitelisted: Boolean

    companion object {
        fun Load(ResourceName: String): DetailsView
        fun Find(Outer: UObject, ResourceName: String): DetailsView
        fun GetDefaultObject(): DetailsView
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DetailsView
        fun C(Other: UObject): DetailsView
        fun C(Other: Any): DetailsView
    }
}

external open class K2Node_CreateDragDropOperation : K2Node_ConstructObjectFromClass {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_CreateDragDropOperation
        fun Find(Outer: UObject, ResourceName: String): K2Node_CreateDragDropOperation
        fun GetDefaultObject(): K2Node_CreateDragDropOperation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_CreateDragDropOperation
        fun C(Other: UObject): K2Node_CreateDragDropOperation
        fun C(Other: Any): K2Node_CreateDragDropOperation
    }
}

external open class K2Node_CreateWidget : K2Node_ConstructObjectFromClass {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_CreateWidget
        fun Find(Outer: UObject, ResourceName: String): K2Node_CreateWidget
        fun GetDefaultObject(): K2Node_CreateWidget
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_CreateWidget
        fun C(Other: UObject): K2Node_CreateWidget
        fun C(Other: Any): K2Node_CreateWidget
    }
}

external open class K2Node_PlayAnimation : K2Node_BaseAsyncTask {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_PlayAnimation
        fun Find(Outer: UObject, ResourceName: String): K2Node_PlayAnimation
        fun GetDefaultObject(): K2Node_PlayAnimation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_PlayAnimation
        fun C(Other: UObject): K2Node_PlayAnimation
        fun C(Other: Any): K2Node_PlayAnimation
    }
}

external open class K2Node_PlayAnimationTimeRange : K2Node_BaseAsyncTask {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_PlayAnimationTimeRange
        fun Find(Outer: UObject, ResourceName: String): K2Node_PlayAnimationTimeRange
        fun GetDefaultObject(): K2Node_PlayAnimationTimeRange
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_PlayAnimationTimeRange
        fun C(Other: UObject): K2Node_PlayAnimationTimeRange
        fun C(Other: Any): K2Node_PlayAnimationTimeRange
    }
}

external open class EditorPropertyPathSegment {
    open var struct: Struct
    open var MemberName: String
    open var MemberGuid: Guid
    open var IsProperty: Boolean
    open fun clone(): EditorPropertyPathSegment

    companion object {
        fun C(Other: UObject): EditorPropertyPathSegment
        fun C(Other: Any): EditorPropertyPathSegment
    }
}

external open class EditorPropertyPath {
    open var Segments: Array<EditorPropertyPathSegment>
    open fun clone(): EditorPropertyPath

    companion object {
        fun C(Other: UObject): EditorPropertyPath
        fun C(Other: Any): EditorPropertyPath
    }
}

external open class DelegateEditorBinding {
    open var ObjectName: String
    open var PropertyName: String
    open var FunctionName: String
    open var SourceProperty: String
    open var SourcePath: EditorPropertyPath
    open var MemberGuid: Guid
    open var Kind: String /* "Function" | "Property" | "EBindingKind_MAX" */
    open fun clone(): DelegateEditorBinding

    companion object {
        fun C(Other: UObject): DelegateEditorBinding
        fun C(Other: Any): DelegateEditorBinding
    }
}

external open class WidgetAnimation_DEPRECATED {
    open var MovieScene: MovieScene
    open var AnimationBindings: Array<WidgetAnimationBinding>
    open fun clone(): WidgetAnimation_DEPRECATED

    companion object {
        fun C(Other: UObject): WidgetAnimation_DEPRECATED
        fun C(Other: Any): WidgetAnimation_DEPRECATED
    }
}

external object EWidgetSupportsDynamicCreation {
    var Default: String /* "Default" */
    var Yes: String /* "Yes" */
    var No: String /* "No" */
    var EWidgetSupportsDynamicCreation_MAX: String /* "EWidgetSupportsDynamicCreation_MAX" */
}

external object EWidgetCompileTimeTickPrediction {
    var WontTick: String /* "WontTick" */
    var OnDemand: String /* "OnDemand" */
    var WillTick: String /* "WillTick" */
    var EWidgetCompileTimeTickPrediction_MAX: String /* "EWidgetCompileTimeTickPrediction_MAX" */
}

external open class WidgetBlueprint : BaseWidgetBlueprint {
    constructor()
    constructor(Outer: UObject)
    open var Bindings: Array<DelegateEditorBinding>
    open var AnimationData: Array<WidgetAnimation_DEPRECATED>
    open var Animations: Array<WidgetAnimation>
    open var PaletteCategory: String
    open var bForceSlowConstructionPath: Boolean
    open var SupportDynamicCreation: String /* "Default" | "Yes" | "No" | "EWidgetSupportsDynamicCreation_MAX" */
    open var InclusiveWidgets: Number
    open var EstimatedTemplateSize: Number
    open var TickFrequency: String /* "Never" | "Auto" | "EWidgetTickFrequency_MAX" */
    open var TickPrediction: String /* "WontTick" | "OnDemand" | "WillTick" | "EWidgetCompileTimeTickPrediction_MAX" */
    open var TickPredictionReason: String
    open var PropertyBindings: Number

    companion object {
        fun Load(ResourceName: String): WidgetBlueprint
        fun Find(Outer: UObject, ResourceName: String): WidgetBlueprint
        fun GetDefaultObject(): WidgetBlueprint
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WidgetBlueprint
        fun C(Other: UObject): WidgetBlueprint
        fun C(Other: Any): WidgetBlueprint
    }
}

external open class K2Node_WidgetAnimationEvent : K2Node_Event {
    constructor()
    constructor(Outer: UObject)
    open var Action: String /* "Started" | "Finished" | "EWidgetAnimationEvent_MAX" */
    open var AnimationPropertyName: String
    open var UserTag: String
    open var SourceWidgetBlueprint: WidgetBlueprint

    companion object {
        fun Load(ResourceName: String): K2Node_WidgetAnimationEvent
        fun Find(Outer: UObject, ResourceName: String): K2Node_WidgetAnimationEvent
        fun GetDefaultObject(): K2Node_WidgetAnimationEvent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_WidgetAnimationEvent
        fun C(Other: UObject): K2Node_WidgetAnimationEvent
        fun C(Other: Any): K2Node_WidgetAnimationEvent
    }
}

external open class SinglePropertyView : PropertyViewBase {
    constructor()
    constructor(Outer: UObject)
    open var PropertyName: String
    open var NameOverride: String
    open fun SetPropertyName(NewPropertyName: String)
    open fun GetPropertyName(): String

    companion object {
        fun Load(ResourceName: String): SinglePropertyView
        fun Find(Outer: UObject, ResourceName: String): SinglePropertyView
        fun GetDefaultObject(): SinglePropertyView
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SinglePropertyView
        fun C(Other: UObject): SinglePropertyView
        fun C(Other: Any): SinglePropertyView
    }
}

external open class SlateVectorArtDataFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SlateVectorArtDataFactory
        fun Find(Outer: UObject, ResourceName: String): SlateVectorArtDataFactory
        fun GetDefaultObject(): SlateVectorArtDataFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SlateVectorArtDataFactory
        fun C(Other: UObject): SlateVectorArtDataFactory
        fun C(Other: Any): SlateVectorArtDataFactory
    }
}

external object EPropertyBindingPermissionLevel {
    var Allow: String /* "Allow" */
    var Prevent: String /* "Prevent" */
    var PreventAndWarn: String /* "PreventAndWarn" */
    var PreventAndError: String /* "PreventAndError" */
    var EPropertyBindingPermissionLevel_MAX: String /* "EPropertyBindingPermissionLevel_MAX" */
}

external open class WidgetCompilerOptions {
    open var bCookSlowConstructionWidgetTree: Boolean
    open var bWidgetSupportsDynamicCreation: Boolean
    open var bAllowBlueprintTick: Boolean
    open var bAllowBlueprintPaint: Boolean
    open var PropertyBindingRule: String /* "Allow" | "Prevent" | "PreventAndWarn" | "PreventAndError" | "EPropertyBindingPermissionLevel_MAX" */
    open var Rules: Array<Class>
    open fun clone(): WidgetCompilerOptions

    companion object {
        fun C(Other: UObject): WidgetCompilerOptions
        fun C(Other: Any): WidgetCompilerOptions
    }
}

external open class DirectoryWidgetCompilerOptions {
    open var Directory: DirectoryPath
    open var IgnoredWidgets: Array<WidgetBlueprint>
    open var Options: WidgetCompilerOptions
    open fun clone(): DirectoryWidgetCompilerOptions

    companion object {
        fun C(Other: UObject): DirectoryWidgetCompilerOptions
        fun C(Other: Any): DirectoryWidgetCompilerOptions
    }
}

external open class DebugResolution {
    open var Width: Number
    open var Height: Number
    open var Description: String
    open var Color: LinearColor
    open fun clone(): DebugResolution

    companion object {
        fun C(Other: UObject): DebugResolution
        fun C(Other: Any): DebugResolution
    }
}

external open class UMGEditorProjectSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var DefaultCompilerOptions: WidgetCompilerOptions
    open var DirectoryCompilerOptions: Array<DirectoryWidgetCompilerOptions>
    open var bShowWidgetsFromEngineContent: Boolean
    open var bShowWidgetsFromDeveloperContent: Boolean
    open var CategoriesToHide: Array<String>
    open var WidgetClassesToHide: Array<SoftClassPath>
    open var DefaultRootWidget: UnrealEngineClass
    open var DebugResolutions: Array<DebugResolution>
    open var Version: Number
    open var bCookSlowConstructionWidgetTree: Boolean
    open var bWidgetSupportsDynamicCreation: Boolean

    companion object {
        fun Load(ResourceName: String): UMGEditorProjectSettings
        fun Find(Outer: UObject, ResourceName: String): UMGEditorProjectSettings
        fun GetDefaultObject(): UMGEditorProjectSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UMGEditorProjectSettings
        fun C(Other: UObject): UMGEditorProjectSettings
        fun C(Other: Any): UMGEditorProjectSettings
    }
}

external open class WidgetBlueprintFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var BlueprintType: String /* "BPTYPE_Normal" | "BPTYPE_Const" | "BPTYPE_MacroLibrary" | "BPTYPE_Interface" | "BPTYPE_LevelScript" | "BPTYPE_FunctionLibrary" | "BPTYPE_MAX" */
    open var ParentClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): WidgetBlueprintFactory
        fun Find(Outer: UObject, ResourceName: String): WidgetBlueprintFactory
        fun GetDefaultObject(): WidgetBlueprintFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WidgetBlueprintFactory
        fun C(Other: UObject): WidgetBlueprintFactory
        fun C(Other: Any): WidgetBlueprintFactory
    }
}

external open class WidgetCompilerRule : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): WidgetCompilerRule
        fun Find(Outer: UObject, ResourceName: String): WidgetCompilerRule
        fun GetDefaultObject(): WidgetCompilerRule
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WidgetCompilerRule
        fun C(Other: UObject): WidgetCompilerRule
        fun C(Other: Any): WidgetCompilerRule
    }
}

external open class WidgetPaletteFavorites : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Favorites: Array<String>

    companion object {
        fun Load(ResourceName: String): WidgetPaletteFavorites
        fun Find(Outer: UObject, ResourceName: String): WidgetPaletteFavorites
        fun GetDefaultObject(): WidgetPaletteFavorites
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WidgetPaletteFavorites
        fun C(Other: UObject): WidgetPaletteFavorites
        fun C(Other: Any): WidgetPaletteFavorites
    }
}

external open class WidgetDesignerSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var GridSnapEnabled: Boolean
    open var GridSnapSize: Number
    open var bLockToPanelOnDragByDefault: Boolean
    open var bShowOutlines: Boolean
    open var bExecutePreConstructEvent: Boolean
    open var bRespectLocks: Boolean
    open var Favorites: WidgetPaletteFavorites

    companion object {
        fun Load(ResourceName: String): WidgetDesignerSettings
        fun Find(Outer: UObject, ResourceName: String): WidgetDesignerSettings
        fun GetDefaultObject(): WidgetDesignerSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WidgetDesignerSettings
        fun C(Other: UObject): WidgetDesignerSettings
        fun C(Other: Any): WidgetDesignerSettings
    }
}

external open class WidgetGraphSchema : EdGraphSchema_K2 {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): WidgetGraphSchema
        fun Find(Outer: UObject, ResourceName: String): WidgetGraphSchema
        fun GetDefaultObject(): WidgetGraphSchema
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WidgetGraphSchema
        fun C(Other: UObject): WidgetGraphSchema
        fun C(Other: Any): WidgetGraphSchema
    }
}

external open class WidgetSlotPair : UObject {
    constructor()
    constructor(Outer: UObject)
    open var WidgetName: String
    open var SlotPropertyNames: Array<String>
    open var SlotPropertyValues: Array<String>

    companion object {
        fun Load(ResourceName: String): WidgetSlotPair
        fun Find(Outer: UObject, ResourceName: String): WidgetSlotPair
        fun GetDefaultObject(): WidgetSlotPair
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WidgetSlotPair
        fun C(Other: UObject): WidgetSlotPair
        fun C(Other: Any): WidgetSlotPair
    }
}

external open class AdvancedCopyCustomization : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AdvancedCopyCustomization
        fun Find(Outer: UObject, ResourceName: String): AdvancedCopyCustomization
        fun GetDefaultObject(): AdvancedCopyCustomization
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AdvancedCopyCustomization
        fun C(Other: UObject): AdvancedCopyCustomization
        fun C(Other: Any): AdvancedCopyCustomization
    }
}

external open class AssetToolsImpl : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AssetToolsImpl
        fun Find(Outer: UObject, ResourceName: String): AssetToolsImpl
        fun GetDefaultObject(): AssetToolsImpl
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AssetToolsImpl
        fun C(Other: UObject): AssetToolsImpl
        fun C(Other: Any): AssetToolsImpl
    }
}

external open class AdvancedCopyMap {
    open var ClassToCopy: SoftClassPath
    open var AdvancedCopyCustomization: SoftClassPath
    open fun clone(): AdvancedCopyMap

    companion object {
        fun C(Other: UObject): AdvancedCopyMap
        fun C(Other: Any): AdvancedCopyMap
    }
}

external open class AssetToolsSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var AdvancedCopyCustomizations: Array<AdvancedCopyMap>

    companion object {
        fun Load(ResourceName: String): AssetToolsSettings
        fun Find(Outer: UObject, ResourceName: String): AssetToolsSettings
        fun GetDefaultObject(): AssetToolsSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AssetToolsSettings
        fun C(Other: UObject): AssetToolsSettings
        fun C(Other: Any): AssetToolsSettings
    }
}

external open class AssetRenameData {
    open var Asset: Any
    open var NewPackagePath: String
    open var NewName: String
    open var OldObjectPath: SoftObjectPath
    open var NewObjectPath: SoftObjectPath
    open var bOnlyFixSoftReferences: Boolean
    open fun clone(): AssetRenameData

    companion object {
        fun C(Other: UObject): AssetRenameData
        fun C(Other: Any): AssetRenameData
    }
}

external interface `T$82` {
    var ReferencingObjects: Array<UObject>
}

external interface `T$83` {
    var OutPackageName: String
    var OutAssetName: String
}

external open class AssetTools : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun RenameReferencingSoftObjectPaths(PackagesToCheck: Array<Package>, AssetRedirectorMap: Any)
    open fun RenameAssetsWithDialog(AssetsAndNames: Array<AssetRenameData>, bAutoCheckout: Boolean)
    open fun RenameAssets(AssetsAndNames: Array<AssetRenameData>): Boolean
    open fun OpenEditorForAssets(Assets: Array<UObject>)
    open fun ImportAssetTasks(ImportTasks: Array<AssetImportTask>)
    open fun ImportAssetsWithDialog(DestinationPath: String): Array<UObject>
    open fun ImportAssetsAutomated(ImportData: AutomatedAssetImportData): Array<UObject>
    open fun FindSoftReferencesToObject(TargetObject: SoftObjectPath, ReferencingObjects: Array<UObject> = definedExternally): `T$82`
    open fun ExportAssetsWithDialog(AssetsToExport: Array<String>, bPromptForIndividualFilenames: Boolean)
    open fun ExportAssets(AssetsToExport: Array<String>, ExportPath: String)
    open fun DuplicateAssetWithDialog(AssetName: String, PackagePath: String, OriginalObject: UObject): UObject
    open fun DuplicateAsset(AssetName: String, PackagePath: String, OriginalObject: UObject): UObject
    open fun CreateUniqueAssetName(InBasePackageName: String, InSuffix: String, OutPackageName: String = definedExternally, OutAssetName: String = definedExternally): `T$83`
    open fun CreateAssetWithDialog(AssetName: String, PackagePath: String, AssetClass: UnrealEngineClass, Factory: Factory, CallingContext: String): UObject
    open fun CreateAsset(AssetName: String, PackagePath: String, AssetClass: UnrealEngineClass, Factory: Factory, CallingContext: String): UObject

    companion object {
        fun Load(ResourceName: String): AssetTools
        fun Find(Outer: UObject, ResourceName: String): AssetTools
        fun GetDefaultObject(): AssetTools
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AssetTools
        fun C(Other: UObject): AssetTools
        fun C(Other: Any): AssetTools
    }
}

external open class AssetToolsHelpers : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AssetToolsHelpers
        fun Find(Outer: UObject, ResourceName: String): AssetToolsHelpers
        fun GetDefaultObject(): AssetToolsHelpers
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AssetToolsHelpers
        fun C(Other: UObject): AssetToolsHelpers
        fun C(Other: Any): AssetToolsHelpers
    }
}

external open class AutomatedTestFilter {
    open var Contains: String
    open var MatchFromStart: Boolean
    open fun clone(): AutomatedTestFilter

    companion object {
        fun C(Other: UObject): AutomatedTestFilter
        fun C(Other: Any): AutomatedTestFilter
    }
}

external open class AutomatedTestGroup {
    open var Name: String
    open var Filters: Array<AutomatedTestFilter>
    open fun clone(): AutomatedTestGroup

    companion object {
        fun C(Other: UObject): AutomatedTestGroup
        fun C(Other: Any): AutomatedTestGroup
    }
}

external open class AutomationControllerSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Groups: Array<AutomatedTestGroup>
    open var bTreatLogErrorsAsTestErrors: Boolean
    open var bTreatLogWarningsAsTestErrors: Boolean

    companion object {
        fun Load(ResourceName: String): AutomationControllerSettings
        fun Find(Outer: UObject, ResourceName: String): AutomationControllerSettings
        fun GetDefaultObject(): AutomationControllerSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AutomationControllerSettings
        fun C(Other: UObject): AutomationControllerSettings
        fun C(Other: Any): AutomationControllerSettings
    }
}

external open class AutomationBlueprintFunctionLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AutomationBlueprintFunctionLibrary
        fun Find(Outer: UObject, ResourceName: String): AutomationBlueprintFunctionLibrary
        fun GetDefaultObject(): AutomationBlueprintFunctionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AutomationBlueprintFunctionLibrary
        fun TakeHighResScreenshot(ResX: Number, ResY: Number, Filename: String, Camera: CameraActor, bMaskEnabled: Boolean, bCaptureHDR: Boolean): Boolean
        fun TakeAutomationScreenshotOfUI(WorldContextObject: UObject, LatentInfo: LatentActionInfo, Name: String, Options: AutomationScreenshotOptions)
        fun TakeAutomationScreenshotAtCamera(WorldContextObject: UObject, LatentInfo: LatentActionInfo, Camera: CameraActor, NameOverride: String, Notes: String, Options: AutomationScreenshotOptions)
        fun TakeAutomationScreenshot(WorldContextObject: UObject, LatentInfo: LatentActionInfo, Name: String, Notes: String, Options: AutomationScreenshotOptions)
        fun SetScalabilityQualityToLow(WorldContextObject: UObject)
        fun SetScalabilityQualityToEpic(WorldContextObject: UObject)
        fun SetScalabilityQualityLevelRelativeToMax(WorldContextObject: UObject, Value: Number)
        fun GetStatIncMax(StatName: String): Number
        fun GetStatIncAverage(StatName: String): Number
        fun GetStatExcMax(StatName: String): Number
        fun GetStatExcAverage(StatName: String): Number
        fun GetStatCallCount(StatName: String): Number
        fun GetDefaultScreenshotOptionsForRendering(Tolerance: String /* "Zero" | "Low" | "Medium" | "High" | "Custom" | "EComparisonTolerance_MAX" */, Delay: Number): AutomationScreenshotOptions
        fun GetDefaultScreenshotOptionsForGameplay(Tolerance: String /* "Zero" | "Low" | "Medium" | "High" | "Custom" | "EComparisonTolerance_MAX" */, Delay: Number): AutomationScreenshotOptions
        fun EnableStatGroup(WorldContextObject: UObject, GroupName: String)
        fun DisableStatGroup(WorldContextObject: UObject, GroupName: String)
        fun AutomationWaitForLoading(WorldContextObject: UObject, LatentInfo: LatentActionInfo)
        fun AreAutomatedTestsRunning(): Boolean
        fun C(Other: UObject): AutomationBlueprintFunctionLibrary
        fun C(Other: Any): AutomationBlueprintFunctionLibrary
    }
}

external open class FuncTestRenderingComponent : PrimitiveComponent {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): FuncTestRenderingComponent
        fun Find(Outer: UObject, ResourceName: String): FuncTestRenderingComponent
        fun GetDefaultObject(): FuncTestRenderingComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FuncTestRenderingComponent
        fun C(Other: UObject): FuncTestRenderingComponent
        fun C(Other: Any): FuncTestRenderingComponent
    }
}

external object EFunctionalTestLogHandling {
    var ProjectDefault: String /* "ProjectDefault" */
    var OutputIsError: String /* "OutputIsError" */
    var OutputIgnored: String /* "OutputIgnored" */
    var EFunctionalTestLogHandling_MAX: String /* "EFunctionalTestLogHandling_MAX" */
}

external object EFunctionalTestResult {
    var Default: String /* "Default" */
    var Invalid: String /* "Invalid" */
    var Error: String /* "Error" */
    var Running: String /* "Running" */
    var Failed: String /* "Failed" */
    var Succeeded: String /* "Succeeded" */
    var EFunctionalTestResult_MAX: String /* "EFunctionalTestResult_MAX" */
}

external object EComparisonMethod {
    var Equal_To: String /* "Equal_To" */
    var Not_Equal_To: String /* "Not_Equal_To" */
    var Greater_Than_Or_Equal_To: String /* "Greater_Than_Or_Equal_To" */
    var Less_Than_Or_Equal_To: String /* "Less_Than_Or_Equal_To" */
    var Greater_Than: String /* "Greater_Than" */
    var Less_Than: String /* "Less_Than" */
    var EComparisonMethod_MAX: String /* "EComparisonMethod_MAX" */
}

external open class FunctionalTest(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var SpriteComponent: BillboardComponent
    open var bIsEnabled: Boolean
    open var LogErrorHandling: String /* "ProjectDefault" | "OutputIsError" | "OutputIgnored" | "EFunctionalTestLogHandling_MAX" */
    open var LogWarningHandling: String /* "ProjectDefault" | "OutputIsError" | "OutputIgnored" | "EFunctionalTestLogHandling_MAX" */
    open var Author: String
    open var Description: String
    open var ObservationPoint: Actor
    open var RandomNumbersStream: RandomStream
    open var Result: String /* "Default" | "Invalid" | "Error" | "Running" | "Failed" | "Succeeded" | "EFunctionalTestResult_MAX" */
    open var PreparationTimeLimit: Number
    open var TimeLimit: Number
    open var TimesUpMessage: String
    open var TimesUpResult: String /* "Default" | "Invalid" | "Error" | "Running" | "Failed" | "Succeeded" | "EFunctionalTestResult_MAX" */
    open var OnTestPrepare: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnTestStart: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnTestFinished: UnrealEngineMulticastDelegate<() -> Unit>
    open var AutoDestroyActors: Array<Actor>
    open var RenderComp: FuncTestRenderingComponent
    open var TestName: TextRenderComponent
    open var bIsRunning: Boolean
    open var TotalTime: Number
    open fun SetTimeLimit(NewTimeLimit: Number, ResultWhenTimeRunsOut: String /* "Default" | "Invalid" | "Error" | "Running" | "Failed" | "Succeeded" | "EFunctionalTestResult_MAX" */)
    open fun RegisterAutoDestroyActor(ActorToAutoDestroy: Actor)
    open fun ReceiveStartTest()
    open fun ReceivePrepareTest()
    open fun OnWantsReRunCheck(): Boolean
    open fun OnAdditionalTestFinishedMessageRequest(TestResult: String /* "Default" | "Invalid" | "Error" | "Running" | "Failed" | "Succeeded" | "EFunctionalTestResult_MAX" */): String
    open fun LogMessage(Message: String)
    open fun IsRunning(): Boolean
    open fun IsReady(): Boolean
    open fun IsEnabled(): Boolean
    open fun GetCurrentRerunReason(): String
    open fun FinishTest(TestResult: String /* "Default" | "Invalid" | "Error" | "Running" | "Failed" | "Succeeded" | "EFunctionalTestResult_MAX" */, Message: String)
    open fun DebugGatherRelevantActors(): Array<Actor>
    open fun AssertValue_Int(Actual: Number, ShouldBe: String /* "Equal_To" | "Not_Equal_To" | "Greater_Than_Or_Equal_To" | "Less_Than_Or_Equal_To" | "Greater_Than" | "Less_Than" | "EComparisonMethod_MAX" */, Expected: Number, What: String, ContextObject: UObject): Boolean
    open fun AssertValue_Float(Actual: Number, ShouldBe: String /* "Equal_To" | "Not_Equal_To" | "Greater_Than_Or_Equal_To" | "Less_Than_Or_Equal_To" | "Greater_Than" | "Less_Than" | "EComparisonMethod_MAX" */, Expected: Number, What: String, ContextObject: UObject): Boolean
    open fun AssertValue_DateTime(Actual: DateTime, ShouldBe: String /* "Equal_To" | "Not_Equal_To" | "Greater_Than_Or_Equal_To" | "Less_Than_Or_Equal_To" | "Greater_Than" | "Less_Than" | "EComparisonMethod_MAX" */, Expected: DateTime, What: String, ContextObject: UObject): Boolean
    open fun AssertTrue(Condition: Boolean, Message: String, ContextObject: UObject): Boolean
    open fun AssertNotEqual_Vector(Actual: Vector, NotExpected: Vector, What: String, ContextObject: UObject): Boolean
    open fun AssertNotEqual_Transform(Actual: Transform, NotExpected: Transform, What: String, ContextObject: UObject): Boolean
    open fun AssertNotEqual_String(Actual: String, NotExpected: String, What: String, ContextObject: UObject): Boolean
    open fun AssertNotEqual_Rotator(Actual: Rotator, NotExpected: Rotator, What: String, ContextObject: UObject): Boolean
    open fun AssertIsValid(UObject: UObject, Message: String, ContextObject: UObject): Boolean
    open fun AssertFalse(Condition: Boolean, Message: String, ContextObject: UObject): Boolean
    open fun AssertEqual_Vector(Actual: Vector, Expected: Vector, What: String, Tolerance: Number, ContextObject: UObject): Boolean
    open fun AssertEqual_Transform(Actual: Transform, Expected: Transform, What: String, Tolerance: Number, ContextObject: UObject): Boolean
    open fun AssertEqual_TraceQueryResults(Actual: TraceQueryTestResults, Expected: TraceQueryTestResults, What: String, ContextObject: UObject): Boolean
    open fun AssertEqual_String(Actual: String, Expected: String, What: String, ContextObject: UObject): Boolean
    open fun AssertEqual_Rotator(Actual: Rotator, Expected: Rotator, What: String, Tolerance: Number, ContextObject: UObject): Boolean
    open fun AssertEqual_Name(Actual: String, Expected: String, What: String, ContextObject: UObject): Boolean
    open fun AssertEqual_Int(Actual: Number, Expected: Number, What: String, ContextObject: UObject): Boolean
    open fun AssertEqual_Float(Actual: Number, Expected: Number, What: String, Tolerance: Number, ContextObject: UObject): Boolean
    open fun AssertEqual_Bool(Actual: Boolean, Expected: Boolean, What: String, ContextObject: UObject): Boolean
    open fun AddWarning(Message: String)
    open fun AddRerun(Reason: String)
    open fun AddError(Message: String)

    companion object {
        fun GetDefaultObject(): FunctionalTest
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FunctionalTest
        fun C(Other: UObject): FunctionalTest
        fun C(Other: Any): FunctionalTest
    }
}

external open class GenericTeamId {
    open var TeamID: Number
    open fun clone(): GenericTeamId

    companion object {
        fun C(Other: UObject): GenericTeamId
        fun C(Other: Any): GenericTeamId
    }
}

external open class AITestSpawnInfo {
    open var PawnClass: UnrealEngineClass
    open var ControllerClass: UnrealEngineClass
    open var TeamID: GenericTeamId
    open var BehaviorTree: BehaviorTree
    open var SpawnLocation: Actor
    open var NumberToSpawn: Number
    open var SpawnDelay: Number
    open var PreSpawnDelay: Number
    open fun clone(): AITestSpawnInfo

    companion object {
        fun C(Other: UObject): AITestSpawnInfo
        fun C(Other: Any): AITestSpawnInfo
    }
}

external open class AITestSpawnSet {
    open var SpawnInfoContainer: Array<AITestSpawnInfo>
    open var Name: String
    open var bEnabled: Boolean
    open var FallbackSpawnLocation: Actor
    open fun clone(): AITestSpawnSet

    companion object {
        fun C(Other: UObject): AITestSpawnSet
        fun C(Other: Any): AITestSpawnSet
    }
}

external open class PendingDelayedSpawn : AITestSpawnInfo {
    override fun clone(): PendingDelayedSpawn

    companion object {
        fun C(Other: UObject): PendingDelayedSpawn
        fun C(Other: Any): PendingDelayedSpawn
    }
}

external open class FunctionalAITest(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : FunctionalTest {
    open var SpawnSets: Array<AITestSpawnSet>
    open var SpawnLocationRandomizationRange: Number
    open var SpawnedPawns: Array<Pawn>
    open var PendingDelayedSpawns: Array<PendingDelayedSpawn>
    open var CurrentSpawnSetIndex: Number
    open var CurrentSpawnSetName: String
    open var OnAISpawned: UnrealEngineMulticastDelegate<(Controller: AIController, Pawn: Pawn) -> Unit>
    open var OnAllAISPawned: UnrealEngineMulticastDelegate<() -> Unit>
    open var NavMeshDebugOrigin: Vector
    open var NavMeshDebugExtent: Vector
    open var bWaitForNavMesh: Boolean
    open var bDebugNavMeshOnTimeout: Boolean
    open fun IsOneOfSpawnedPawns(Actor: Actor): Boolean

    companion object {
        fun GetDefaultObject(): FunctionalAITest
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FunctionalAITest
        fun C(Other: UObject): FunctionalAITest
        fun C(Other: Any): FunctionalAITest
    }
}

external open class AutomationPerformaceHelper : UObject {
    constructor()
    constructor(Outer: UObject)
    open fun WriteLogFile(CaptureDir: String, CaptureExtension: String)
    open fun TriggerGPUTraceIfRecordFallsBelowBudget()
    open fun Tick(DeltaSeconds: Number)
    open fun StopCPUProfiling()
    open fun StartCPUProfiling()
    open fun Sample(DeltaSeconds: Number)
    open fun OnBeginTests()
    open fun OnAllTestsComplete()
    open fun IsRecording(): Boolean
    open fun IsCurrentRecordWithinRenderThreadBudget(): Boolean
    open fun IsCurrentRecordWithinGPUBudget(): Boolean
    open fun IsCurrentRecordWithinGameThreadBudget(): Boolean
    open fun EndStatsFile()
    open fun EndRecordingBaseline()
    open fun EndRecording()
    open fun BeginStatsFile(RecordName: String)
    open fun BeginRecordingBaseline(RecordName: String)
    open fun BeginRecording(RecordName: String, InGPUBudget: Number, InRenderThreadBudget: Number, InGameThreadBudget: Number)

    companion object {
        fun Load(ResourceName: String): AutomationPerformaceHelper
        fun Find(Outer: UObject, ResourceName: String): AutomationPerformaceHelper
        fun GetDefaultObject(): AutomationPerformaceHelper
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AutomationPerformaceHelper
        fun C(Other: UObject): AutomationPerformaceHelper
        fun C(Other: Any): AutomationPerformaceHelper
    }
}

external open class FunctionalTestGameMode(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : GameModeBase {
    companion object {
        fun GetDefaultObject(): FunctionalTestGameMode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FunctionalTestGameMode
        fun C(Other: UObject): FunctionalTestGameMode
        fun C(Other: Any): FunctionalTestGameMode
    }
}

external open class FunctionalTestingManager : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)
    open var TestsLeft: Array<FunctionalTest>
    open var AllTests: Array<FunctionalTest>
    open var OnSetupTests: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnTestsComplete: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnTestsBegin: UnrealEngineMulticastDelegate<() -> Unit>

    companion object {
        fun Load(ResourceName: String): FunctionalTestingManager
        fun Find(Outer: UObject, ResourceName: String): FunctionalTestingManager
        fun GetDefaultObject(): FunctionalTestingManager
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FunctionalTestingManager
        fun RunAllFunctionalTests(WorldContextObject: UObject, bNewLog: Boolean, bRunLooped: Boolean, FailedTestsReproString: String): Boolean
        fun C(Other: UObject): FunctionalTestingManager
        fun C(Other: Any): FunctionalTestingManager
    }
}

external open class PhasedAutomationActorBase(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open fun OnFunctionalTestingComplete()
    open fun OnFunctionalTestingBegin()

    companion object {
        fun GetDefaultObject(): PhasedAutomationActorBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PhasedAutomationActorBase
        fun C(Other: UObject): PhasedAutomationActorBase
        fun C(Other: Any): PhasedAutomationActorBase
    }
}

external open class FunctionalTestLevelScript(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : LevelScriptActor {
    companion object {
        fun GetDefaultObject(): FunctionalTestLevelScript
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FunctionalTestLevelScript
        fun C(Other: UObject): FunctionalTestLevelScript
        fun C(Other: Any): FunctionalTestLevelScript
    }
}

external open class FunctionalTestUtilityLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): FunctionalTestUtilityLibrary
        fun Find(Outer: UObject, ResourceName: String): FunctionalTestUtilityLibrary
        fun GetDefaultObject(): FunctionalTestUtilityLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FunctionalTestUtilityLibrary
        fun TraceChannelTestUtil(WorldContextObject: UObject, BatchOptions: TraceChannelTestBatchOptions, Start: Vector, End: Vector, SphereCapsuleRadius: Number, CapsuleHalfHeight: Number, BoxHalfSize: Vector, Orientation: Rotator, TraceChannel: String /* "TraceTypeQuery1" | "TraceTypeQuery2" | "TraceTypeQuery3" | "TraceTypeQuery4" | "TraceTypeQuery5" | "TraceTypeQuery6" | "TraceTypeQuery7" | "TraceTypeQuery8" | "TraceTypeQuery9" | "TraceTypeQuery10" | "TraceTypeQuery11" | "TraceTypeQuery12" | "TraceTypeQuery13" | "TraceTypeQuery14" | "TraceTypeQuery15" | "TraceTypeQuery16" | "TraceTypeQuery17" | "TraceTypeQuery18" | "TraceTypeQuery19" | "TraceTypeQuery20" | "TraceTypeQuery21" | "TraceTypeQuery22" | "TraceTypeQuery23" | "TraceTypeQuery24" | "TraceTypeQuery25" | "TraceTypeQuery26" | "TraceTypeQuery27" | "TraceTypeQuery28" | "TraceTypeQuery29" | "TraceTypeQuery30" | "TraceTypeQuery31" | "TraceTypeQuery32" | "TraceTypeQuery_MAX" | "ETraceTypeQuery_MAX" */, ObjectTypes: Array<String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */>, ProfileName: String, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, bIgnoreSelf: Boolean, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, TraceColor: LinearColor, TraceHitColor: LinearColor, DrawTime: Number): TraceQueryTestResults
        fun C(Other: UObject): FunctionalTestUtilityLibrary
        fun C(Other: Any): FunctionalTestUtilityLibrary
    }
}

external open class ScreenshotFunctionalTestBase(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : FunctionalTest {
    open var Notes: String
    open var ScreenshotCamera: CameraComponent
    open var ScreenshotOptions: AutomationScreenshotOptions

    companion object {
        fun GetDefaultObject(): ScreenshotFunctionalTestBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ScreenshotFunctionalTestBase
        fun C(Other: UObject): ScreenshotFunctionalTestBase
        fun C(Other: Any): ScreenshotFunctionalTestBase
    }
}

external object EWidgetTestAppearLocation {
    var Viewport: String /* "Viewport" */
    var PlayerScreen: String /* "PlayerScreen" */
    var EWidgetTestAppearLocation_MAX: String /* "EWidgetTestAppearLocation_MAX" */
}

external open class FunctionalUIScreenshotTest(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : ScreenshotFunctionalTestBase {
    open var WidgetClass: UnrealEngineClass
    open var SpawnedWidget: UserWidget
    open var WidgetLocation: String /* "Viewport" | "PlayerScreen" | "EWidgetTestAppearLocation_MAX" */
    open var ScreenshotRT: TextureRenderTarget2D

    companion object {
        fun GetDefaultObject(): FunctionalUIScreenshotTest
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FunctionalUIScreenshotTest
        fun C(Other: UObject): FunctionalUIScreenshotTest
        fun C(Other: Any): FunctionalUIScreenshotTest
    }
}

external open class GroundTruthData : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bResetGroundTruth: Boolean
    open var ObjectData: UObject
    open fun SaveObject(GroundTruth: UObject)
    open fun LoadObject(): UObject
    open fun CanModify(): Boolean

    companion object {
        fun Load(ResourceName: String): GroundTruthData
        fun Find(Outer: UObject, ResourceName: String): GroundTruthData
        fun GetDefaultObject(): GroundTruthData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GroundTruthData
        fun C(Other: UObject): GroundTruthData
        fun C(Other: Any): GroundTruthData
    }
}

external open class ScreenshotFunctionalTest(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : ScreenshotFunctionalTestBase {
    open var bCameraCutOnScreenshotPrep: Boolean

    companion object {
        fun GetDefaultObject(): ScreenshotFunctionalTest
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ScreenshotFunctionalTest
        fun C(Other: UObject): ScreenshotFunctionalTest
        fun C(Other: Any): ScreenshotFunctionalTest
    }
}

external open class TestPhaseComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TestPhaseComponent
        fun Find(Outer: UObject, ResourceName: String): TestPhaseComponent
        fun GetDefaultObject(): TestPhaseComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TestPhaseComponent
        fun C(Other: UObject): TestPhaseComponent
        fun C(Other: Any): TestPhaseComponent
    }
}

external open class AIGraph : EdGraph {
    constructor()
    constructor(Outer: UObject)
    open var GraphVersion: Number

    companion object {
        fun Load(ResourceName: String): AIGraph
        fun Find(Outer: UObject, ResourceName: String): AIGraph
        fun GetDefaultObject(): AIGraph
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AIGraph
        fun C(Other: UObject): AIGraph
        fun C(Other: Any): AIGraph
    }
}

external open class GraphNodeClassData {
    open var AssetName: String
    open var GeneratedClassPackage: String
    open var ClassName: String
    open var Category: String
    open fun clone(): GraphNodeClassData

    companion object {
        fun C(Other: UObject): GraphNodeClassData
        fun C(Other: Any): GraphNodeClassData
    }
}

external open class AIGraphNode : EdGraphNode {
    constructor()
    constructor(Outer: UObject)
    open var ClassData: GraphNodeClassData
    open var NodeInstance: UObject
    open var ParentNode: AIGraphNode
    open var SubNodes: Array<AIGraphNode>
    open var CopySubNodeIndex: Number
    open var bIsReadOnly: Boolean
    open var bIsSubNode: Boolean
    open var ErrorMessage: String

    companion object {
        fun Load(ResourceName: String): AIGraphNode
        fun Find(Outer: UObject, ResourceName: String): AIGraphNode
        fun GetDefaultObject(): AIGraphNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AIGraphNode
        fun C(Other: UObject): AIGraphNode
        fun C(Other: Any): AIGraphNode
    }
}

external open class AIGraphSchema : EdGraphSchema {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AIGraphSchema
        fun Find(Outer: UObject, ResourceName: String): AIGraphSchema
        fun GetDefaultObject(): AIGraphSchema
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AIGraphSchema
        fun C(Other: UObject): AIGraphSchema
        fun C(Other: Any): AIGraphSchema
    }
}

external open class K2Node_AIMoveTo : K2Node_BaseAsyncTask {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_AIMoveTo
        fun Find(Outer: UObject, ResourceName: String): K2Node_AIMoveTo
        fun GetDefaultObject(): K2Node_AIMoveTo
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_AIMoveTo
        fun C(Other: UObject): K2Node_AIMoveTo
        fun C(Other: Any): K2Node_AIMoveTo
    }
}

external open class BehaviorTreeDecoratorGraph : EdGraph {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BehaviorTreeDecoratorGraph
        fun Find(Outer: UObject, ResourceName: String): BehaviorTreeDecoratorGraph
        fun GetDefaultObject(): BehaviorTreeDecoratorGraph
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BehaviorTreeDecoratorGraph
        fun C(Other: UObject): BehaviorTreeDecoratorGraph
        fun C(Other: Any): BehaviorTreeDecoratorGraph
    }
}

external open class BehaviorTreeDecoratorGraphNode : EdGraphNode {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BehaviorTreeDecoratorGraphNode
        fun Find(Outer: UObject, ResourceName: String): BehaviorTreeDecoratorGraphNode
        fun GetDefaultObject(): BehaviorTreeDecoratorGraphNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BehaviorTreeDecoratorGraphNode
        fun C(Other: UObject): BehaviorTreeDecoratorGraphNode
        fun C(Other: Any): BehaviorTreeDecoratorGraphNode
    }
}

external open class BehaviorTreeDecoratorGraphNode_Decorator : BehaviorTreeDecoratorGraphNode {
    constructor()
    constructor(Outer: UObject)
    open var NodeInstance: UObject
    open var ClassData: GraphNodeClassData

    companion object {
        fun Load(ResourceName: String): BehaviorTreeDecoratorGraphNode_Decorator
        fun Find(Outer: UObject, ResourceName: String): BehaviorTreeDecoratorGraphNode_Decorator
        fun GetDefaultObject(): BehaviorTreeDecoratorGraphNode_Decorator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BehaviorTreeDecoratorGraphNode_Decorator
        fun C(Other: UObject): BehaviorTreeDecoratorGraphNode_Decorator
        fun C(Other: Any): BehaviorTreeDecoratorGraphNode_Decorator
    }
}

external object EDecoratorLogicMode {
    var Sink: String /* "Sink" */
    var And: String /* "And" */
    var Or: String /* "Or" */
    var Not: String /* "Not" */
    var EDecoratorLogicMode_MAX: String /* "EDecoratorLogicMode_MAX" */
}

external open class BehaviorTreeDecoratorGraphNode_Logic : BehaviorTreeDecoratorGraphNode {
    constructor()
    constructor(Outer: UObject)
    open var LogicMode: String /* "Sink" | "And" | "Or" | "Not" | "EDecoratorLogicMode_MAX" */

    companion object {
        fun Load(ResourceName: String): BehaviorTreeDecoratorGraphNode_Logic
        fun Find(Outer: UObject, ResourceName: String): BehaviorTreeDecoratorGraphNode_Logic
        fun GetDefaultObject(): BehaviorTreeDecoratorGraphNode_Logic
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BehaviorTreeDecoratorGraphNode_Logic
        fun C(Other: UObject): BehaviorTreeDecoratorGraphNode_Logic
        fun C(Other: Any): BehaviorTreeDecoratorGraphNode_Logic
    }
}

external open class BehaviorTreeEditorTypes : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BehaviorTreeEditorTypes
        fun Find(Outer: UObject, ResourceName: String): BehaviorTreeEditorTypes
        fun GetDefaultObject(): BehaviorTreeEditorTypes
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BehaviorTreeEditorTypes
        fun C(Other: UObject): BehaviorTreeEditorTypes
        fun C(Other: Any): BehaviorTreeEditorTypes
    }
}

external open class BehaviorTreeFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BehaviorTreeFactory
        fun Find(Outer: UObject, ResourceName: String): BehaviorTreeFactory
        fun GetDefaultObject(): BehaviorTreeFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BehaviorTreeFactory
        fun C(Other: UObject): BehaviorTreeFactory
        fun C(Other: Any): BehaviorTreeFactory
    }
}

external open class BehaviorTreeGraph : AIGraph {
    constructor()
    constructor(Outer: UObject)
    open var ModCounter: Number
    open var bIsUsingModCounter: Boolean

    companion object {
        fun Load(ResourceName: String): BehaviorTreeGraph
        fun Find(Outer: UObject, ResourceName: String): BehaviorTreeGraph
        fun GetDefaultObject(): BehaviorTreeGraph
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BehaviorTreeGraph
        fun C(Other: UObject): BehaviorTreeGraph
        fun C(Other: Any): BehaviorTreeGraph
    }
}

external open class BehaviorTreeGraphNode : AIGraphNode {
    constructor()
    constructor(Outer: UObject)
    open var Decorators: Array<BehaviorTreeGraphNode>
    open var Services: Array<BehaviorTreeGraphNode>
    open var bInjectedNode: Boolean

    companion object {
        fun Load(ResourceName: String): BehaviorTreeGraphNode
        fun Find(Outer: UObject, ResourceName: String): BehaviorTreeGraphNode
        fun GetDefaultObject(): BehaviorTreeGraphNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BehaviorTreeGraphNode
        fun C(Other: UObject): BehaviorTreeGraphNode
        fun C(Other: Any): BehaviorTreeGraphNode
    }
}

external open class BehaviorTreeGraphNode_Composite : BehaviorTreeGraphNode {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BehaviorTreeGraphNode_Composite
        fun Find(Outer: UObject, ResourceName: String): BehaviorTreeGraphNode_Composite
        fun GetDefaultObject(): BehaviorTreeGraphNode_Composite
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BehaviorTreeGraphNode_Composite
        fun C(Other: UObject): BehaviorTreeGraphNode_Composite
        fun C(Other: Any): BehaviorTreeGraphNode_Composite
    }
}

external open class BehaviorTreeGraphNode_CompositeDecorator : BehaviorTreeGraphNode {
    constructor()
    constructor(Outer: UObject)
    open var BoundGraph: EdGraph
    open var CompositeName: String
    open var bShowOperations: Boolean
    open var bCanAbortFlow: Boolean
    open var ParentNodeInstance: BTCompositeNode
    open var CachedDescription: String

    companion object {
        fun Load(ResourceName: String): BehaviorTreeGraphNode_CompositeDecorator
        fun Find(Outer: UObject, ResourceName: String): BehaviorTreeGraphNode_CompositeDecorator
        fun GetDefaultObject(): BehaviorTreeGraphNode_CompositeDecorator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BehaviorTreeGraphNode_CompositeDecorator
        fun C(Other: UObject): BehaviorTreeGraphNode_CompositeDecorator
        fun C(Other: Any): BehaviorTreeGraphNode_CompositeDecorator
    }
}

external open class BehaviorTreeGraphNode_Decorator : BehaviorTreeGraphNode {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BehaviorTreeGraphNode_Decorator
        fun Find(Outer: UObject, ResourceName: String): BehaviorTreeGraphNode_Decorator
        fun GetDefaultObject(): BehaviorTreeGraphNode_Decorator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BehaviorTreeGraphNode_Decorator
        fun C(Other: UObject): BehaviorTreeGraphNode_Decorator
        fun C(Other: Any): BehaviorTreeGraphNode_Decorator
    }
}

external open class BehaviorTreeGraphNode_Root : BehaviorTreeGraphNode {
    constructor()
    constructor(Outer: UObject)
    open var BlackboardAsset: BlackboardData

    companion object {
        fun Load(ResourceName: String): BehaviorTreeGraphNode_Root
        fun Find(Outer: UObject, ResourceName: String): BehaviorTreeGraphNode_Root
        fun GetDefaultObject(): BehaviorTreeGraphNode_Root
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BehaviorTreeGraphNode_Root
        fun C(Other: UObject): BehaviorTreeGraphNode_Root
        fun C(Other: Any): BehaviorTreeGraphNode_Root
    }
}

external open class BehaviorTreeGraphNode_Service : BehaviorTreeGraphNode {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BehaviorTreeGraphNode_Service
        fun Find(Outer: UObject, ResourceName: String): BehaviorTreeGraphNode_Service
        fun GetDefaultObject(): BehaviorTreeGraphNode_Service
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BehaviorTreeGraphNode_Service
        fun C(Other: UObject): BehaviorTreeGraphNode_Service
        fun C(Other: Any): BehaviorTreeGraphNode_Service
    }
}

external open class BehaviorTreeGraphNode_SimpleParallel : BehaviorTreeGraphNode_Composite {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BehaviorTreeGraphNode_SimpleParallel
        fun Find(Outer: UObject, ResourceName: String): BehaviorTreeGraphNode_SimpleParallel
        fun GetDefaultObject(): BehaviorTreeGraphNode_SimpleParallel
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BehaviorTreeGraphNode_SimpleParallel
        fun C(Other: UObject): BehaviorTreeGraphNode_SimpleParallel
        fun C(Other: Any): BehaviorTreeGraphNode_SimpleParallel
    }
}

external open class BehaviorTreeGraphNode_Task : BehaviorTreeGraphNode {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BehaviorTreeGraphNode_Task
        fun Find(Outer: UObject, ResourceName: String): BehaviorTreeGraphNode_Task
        fun GetDefaultObject(): BehaviorTreeGraphNode_Task
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BehaviorTreeGraphNode_Task
        fun C(Other: UObject): BehaviorTreeGraphNode_Task
        fun C(Other: Any): BehaviorTreeGraphNode_Task
    }
}

external open class BehaviorTreeGraphNode_SubtreeTask : BehaviorTreeGraphNode_Task {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BehaviorTreeGraphNode_SubtreeTask
        fun Find(Outer: UObject, ResourceName: String): BehaviorTreeGraphNode_SubtreeTask
        fun GetDefaultObject(): BehaviorTreeGraphNode_SubtreeTask
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BehaviorTreeGraphNode_SubtreeTask
        fun C(Other: UObject): BehaviorTreeGraphNode_SubtreeTask
        fun C(Other: Any): BehaviorTreeGraphNode_SubtreeTask
    }
}

external open class BlackboardDataFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlackboardDataFactory
        fun Find(Outer: UObject, ResourceName: String): BlackboardDataFactory
        fun GetDefaultObject(): BlackboardDataFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlackboardDataFactory
        fun C(Other: UObject): BlackboardDataFactory
        fun C(Other: Any): BlackboardDataFactory
    }
}

external open class EdGraphSchema_BehaviorTree : AIGraphSchema {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EdGraphSchema_BehaviorTree
        fun Find(Outer: UObject, ResourceName: String): EdGraphSchema_BehaviorTree
        fun GetDefaultObject(): EdGraphSchema_BehaviorTree
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EdGraphSchema_BehaviorTree
        fun C(Other: UObject): EdGraphSchema_BehaviorTree
        fun C(Other: Any): EdGraphSchema_BehaviorTree
    }
}

external open class EdGraphSchema_BehaviorTreeDecorator : EdGraphSchema {
    constructor()
    constructor(Outer: UObject)
    open var PC_Boolean: String

    companion object {
        fun Load(ResourceName: String): EdGraphSchema_BehaviorTreeDecorator
        fun Find(Outer: UObject, ResourceName: String): EdGraphSchema_BehaviorTreeDecorator
        fun GetDefaultObject(): EdGraphSchema_BehaviorTreeDecorator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EdGraphSchema_BehaviorTreeDecorator
        fun C(Other: UObject): EdGraphSchema_BehaviorTreeDecorator
        fun C(Other: Any): EdGraphSchema_BehaviorTreeDecorator
    }
}

external open class K2Node_LatentGameplayTaskCall : K2Node_BaseAsyncTask {
    constructor()
    constructor(Outer: UObject)
    open var SpawnParamPins: Array<String>

    companion object {
        fun Load(ResourceName: String): K2Node_LatentGameplayTaskCall
        fun Find(Outer: UObject, ResourceName: String): K2Node_LatentGameplayTaskCall
        fun GetDefaultObject(): K2Node_LatentGameplayTaskCall
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_LatentGameplayTaskCall
        fun C(Other: UObject): K2Node_LatentGameplayTaskCall
        fun C(Other: Any): K2Node_LatentGameplayTaskCall
    }
}

external open class Overlays : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): Overlays
        fun Find(Outer: UObject, ResourceName: String): Overlays
        fun GetDefaultObject(): Overlays
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Overlays
        fun C(Other: UObject): Overlays
        fun C(Other: Any): Overlays
    }
}

external open class OverlayItem {
    open var StartTime: Timespan
    open var EndTime: Timespan
    open var text: String
    open var Position: Vector2D
    open fun clone(): OverlayItem

    companion object {
        fun C(Other: UObject): OverlayItem
        fun C(Other: Any): OverlayItem
    }
}

external open class BasicOverlays : Overlays {
    constructor()
    constructor(Outer: UObject)
    open var Overlays: Array<OverlayItem>
    open var AssetImportData: AssetImportData

    companion object {
        fun Load(ResourceName: String): BasicOverlays
        fun Find(Outer: UObject, ResourceName: String): BasicOverlays
        fun GetDefaultObject(): BasicOverlays
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BasicOverlays
        fun C(Other: UObject): BasicOverlays
        fun C(Other: Any): BasicOverlays
    }
}

external open class LocalizedOverlays : Overlays {
    constructor()
    constructor(Outer: UObject)
    open var DefaultOverlays: BasicOverlays
    open var LocaleToOverlaysMap: Any
    open var AssetImportData: AssetImportData

    companion object {
        fun Load(ResourceName: String): LocalizedOverlays
        fun Find(Outer: UObject, ResourceName: String): LocalizedOverlays
        fun GetDefaultObject(): LocalizedOverlays
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LocalizedOverlays
        fun C(Other: UObject): LocalizedOverlays
        fun C(Other: Any): LocalizedOverlays
    }
}

external open class BasicOverlaysFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BasicOverlaysFactory
        fun Find(Outer: UObject, ResourceName: String): BasicOverlaysFactory
        fun GetDefaultObject(): BasicOverlaysFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BasicOverlaysFactory
        fun C(Other: UObject): BasicOverlaysFactory
        fun C(Other: Any): BasicOverlaysFactory
    }
}

external open class BasicOverlaysFactoryNew : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BasicOverlaysFactoryNew
        fun Find(Outer: UObject, ResourceName: String): BasicOverlaysFactoryNew
        fun GetDefaultObject(): BasicOverlaysFactoryNew
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BasicOverlaysFactoryNew
        fun C(Other: UObject): BasicOverlaysFactoryNew
        fun C(Other: Any): BasicOverlaysFactoryNew
    }
}

external open class LocalizedOverlaysFactoryNew : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LocalizedOverlaysFactoryNew
        fun Find(Outer: UObject, ResourceName: String): LocalizedOverlaysFactoryNew
        fun GetDefaultObject(): LocalizedOverlaysFactoryNew
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LocalizedOverlaysFactoryNew
        fun C(Other: UObject): LocalizedOverlaysFactoryNew
        fun C(Other: Any): LocalizedOverlaysFactoryNew
    }
}

external open class ReimportBasicOverlaysFactory : BasicOverlaysFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ReimportBasicOverlaysFactory
        fun Find(Outer: UObject, ResourceName: String): ReimportBasicOverlaysFactory
        fun GetDefaultObject(): ReimportBasicOverlaysFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ReimportBasicOverlaysFactory
        fun C(Other: UObject): ReimportBasicOverlaysFactory
        fun C(Other: Any): ReimportBasicOverlaysFactory
    }
}

external open class MediaSource : UObject {
    constructor()
    constructor(Outer: UObject)
    open fun Validate(): Boolean
    open fun GetUrl(): String

    companion object {
        fun Load(ResourceName: String): MediaSource
        fun Find(Outer: UObject, ResourceName: String): MediaSource
        fun GetDefaultObject(): MediaSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MediaSource
        fun C(Other: UObject): MediaSource
        fun C(Other: Any): MediaSource
    }
}

external open class BaseMediaSource : MediaSource {
    open var PlatformPlayerNames: Any
    open var PlayerName: String
    fun <K : String> addEventListener(type: K, listener: (self: MediaSource, ev: Any) -> Any, options: Boolean)
    fun <K : String> addEventListener(type: K, listener: (self: MediaSource, ev: Any) -> Any)
    fun <K : String> addEventListener(type: K, listener: (self: MediaSource, ev: Any) -> Any, options: AddEventListenerOptions)
    fun addEventListener(type: String, listener: EventListener, options: Boolean)
    fun addEventListener(type: String, listener: EventListener)
    fun addEventListener(type: String, listener: EventListener, options: AddEventListenerOptions)
    fun addEventListener(type: String, listener: dynamic /*EventListenerObject*/, options: Boolean)
    fun addEventListener(type: String, listener: dynamic /*EventListenerObject*/)
    fun addEventListener(type: String, listener: dynamic /*EventListenerObject*/, options: AddEventListenerOptions)
    fun <K : String> removeEventListener(type: K, listener: (self: MediaSource, ev: Any) -> Any, options: Boolean)
    fun <K : String> removeEventListener(type: K, listener: (self: MediaSource, ev: Any) -> Any)
    fun <K : String> removeEventListener(type: K, listener: (self: MediaSource, ev: Any) -> Any, options: EventListenerOptions)
    fun removeEventListener(type: String, listener: EventListener, options: Boolean)
    fun removeEventListener(type: String, listener: EventListener)
    fun removeEventListener(type: String, listener: EventListener, options: EventListenerOptions)
    fun removeEventListener(type: String, listener: dynamic /*EventListenerObject*/, options: Boolean)
    fun removeEventListener(type: String, listener: dynamic /*EventListenerObject*/)
    fun removeEventListener(type: String, listener: dynamic /*EventListenerObject*/, options: EventListenerOptions)

    companion object {
        fun Load(ResourceName: String): BaseMediaSource
        fun Find(Outer: UObject, ResourceName: String): BaseMediaSource
        fun GetDefaultObject(): BaseMediaSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BaseMediaSource
        fun C(Other: UObject): BaseMediaSource
        fun C(Other: Any): BaseMediaSource
    }
}

external open class FileMediaSource : BaseMediaSource {
    open var FilePath: String
    open var PrecacheFile: Boolean
    open fun SetFilePath(Path: String)

    companion object {
        fun Load(ResourceName: String): FileMediaSource
        fun Find(Outer: UObject, ResourceName: String): FileMediaSource
        fun GetDefaultObject(): FileMediaSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FileMediaSource
        fun C(Other: UObject): FileMediaSource
        fun C(Other: Any): FileMediaSource
    }
}

external open class MediaCaptureDevice {
    open var DisplayName: String
    open var URL: String
    open fun clone(): MediaCaptureDevice

    companion object {
        fun C(Other: UObject): MediaCaptureDevice
        fun C(Other: Any): MediaCaptureDevice
    }
}

external interface `T$84` {
    var OutDevices: Array<MediaCaptureDevice>
}

external interface `T$85` {
    var OutDevices: Array<MediaCaptureDevice>
}

external interface `T$86` {
    var OutDevices: Array<MediaCaptureDevice>
}

external open class MediaBlueprintFunctionLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MediaBlueprintFunctionLibrary
        fun Find(Outer: UObject, ResourceName: String): MediaBlueprintFunctionLibrary
        fun GetDefaultObject(): MediaBlueprintFunctionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MediaBlueprintFunctionLibrary
        fun EnumerateWebcamCaptureDevices(OutDevices: Array<MediaCaptureDevice> = definedExternally, Filter: Number = definedExternally): `T$84`
        fun EnumerateVideoCaptureDevices(OutDevices: Array<MediaCaptureDevice> = definedExternally, Filter: Number = definedExternally): `T$85`
        fun EnumerateAudioCaptureDevices(OutDevices: Array<MediaCaptureDevice> = definedExternally, Filter: Number = definedExternally): `T$86`
        fun C(Other: UObject): MediaBlueprintFunctionLibrary
        fun C(Other: Any): MediaBlueprintFunctionLibrary
    }
}

external interface `T$87` {
    var OutIndex: Number
    var `$`: MediaSource
}

external interface `T$88` {
    var InOutIndex: Number
    var `$`: MediaSource
}

external open class MediaPlaylist : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Items: Array<MediaSource>
    open fun Replace(index: Number, Replacement: MediaSource): Boolean
    open fun RemoveAt(index: Number): Boolean
    open fun Remove(MediaSource: MediaSource): Boolean
    open fun Num(): Number
    open fun Insert(MediaSource: MediaSource, index: Number)
    open fun GetRandom(OutIndex: Number = definedExternally): `T$87`
    open fun GetPrevious(InOutIndex: Number = definedExternally): `T$88`
    open fun GetNext(InOutIndex: Number = definedExternally): `T$88`
    open fun Get(index: Number): MediaSource
    open fun AddUrl(URL: String): Boolean
    open fun AddFile(FilePath: String): Boolean
    open fun Add(MediaSource: MediaSource): Boolean

    companion object {
        fun Load(ResourceName: String): MediaPlaylist
        fun Find(Outer: UObject, ResourceName: String): MediaPlaylist
        fun GetDefaultObject(): MediaPlaylist
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MediaPlaylist
        fun C(Other: UObject): MediaPlaylist
        fun C(Other: Any): MediaPlaylist
    }
}

external object EMediaPlayerTrack {
    var Audio: String /* "Audio" */
    var Caption: String /* "Caption" */
    var Metadata: String /* "Metadata" */
    var Script: String /* "Script" */
    var Subtitle: String /* "Subtitle" */
    var Text: String /* "Text" */
    var Video: String /* "Video" */
    var EMediaPlayerTrack_MAX: String /* "EMediaPlayerTrack_MAX" */
}

external open class MediaPlayerTrackOptions {
    open var Audio: Number
    open var Caption: Number
    open var MetaData: Number
    open var Script: Number
    open var Subtitle: Number
    open var text: Number
    open var Video: Number
    open fun clone(): MediaPlayerTrackOptions

    companion object {
        fun C(Other: UObject): MediaPlayerTrackOptions
        fun C(Other: Any): MediaPlayerTrackOptions
    }
}

external object EMediaPlayerOptionBooleanOverride {
    var UseMediaPlayerSetting: String /* "UseMediaPlayerSetting" */
    var Enabled: String /* "Enabled" */
    var Disabled: String /* "Disabled" */
    var EMediaPlayerOptionBooleanOverride_MAX: String /* "EMediaPlayerOptionBooleanOverride_MAX" */
}

external open class MediaPlayerOptions {
    open var Tracks: MediaPlayerTrackOptions
    open var SeekTime: Timespan
    open var PlayOnOpen: String /* "UseMediaPlayerSetting" | "Enabled" | "Disabled" | "EMediaPlayerOptionBooleanOverride_MAX" */
    open var loop: String /* "UseMediaPlayerSetting" | "Enabled" | "Disabled" | "EMediaPlayerOptionBooleanOverride_MAX" */
    open fun clone(): MediaPlayerOptions

    companion object {
        fun C(Other: UObject): MediaPlayerOptions
        fun C(Other: Any): MediaPlayerOptions
    }
}

external interface `T$89` {
    var bSuccess: Boolean
}

external interface `T$90` {
    var OutRates: Array<FloatRange>
}

external open class MediaPlayer : UObject {
    constructor()
    constructor(Outer: UObject)
    open var OnEndReached: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnMediaClosed: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnMediaOpened: UnrealEngineMulticastDelegate<(OpenedUrl: String) -> Unit>
    open var OnMediaOpenFailed: UnrealEngineMulticastDelegate<(FailedUrl: String) -> Unit>
    open var OnPlaybackResumed: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnPlaybackSuspended: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnSeekCompleted: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnTracksChanged: UnrealEngineMulticastDelegate<() -> Unit>
    open var CacheAhead: Timespan
    open var CacheBehind: Timespan
    open var CacheBehindGame: Timespan
    open var NativeAudioOut: Boolean
    open var PlayOnOpen: Boolean
    open var Shuffle: Boolean
    open var loop: Boolean
    open var Playlist: MediaPlaylist
    open var PlaylistIndex: Number
    open var TimeDelay: Timespan
    open var HorizontalFieldOfView: Number
    open var VerticalFieldOfView: Number
    open var ViewRotation: Rotator
    open var PlayerGuid: Guid
    open var AffectedByPIEHandling: Boolean
    open fun SupportsSeeking(): Boolean
    open fun SupportsScrubbing(): Boolean
    open fun SupportsRate(Rate: Number, Unthinned: Boolean): Boolean
    open fun SetViewRotation(Rotation: Rotator, Absolute: Boolean): Boolean
    open fun SetViewField(Horizontal: Number, Vertical: Number, Absolute: Boolean): Boolean
    open fun SetVideoTrackFrameRate(TrackIndex: Number, FormatIndex: Number, FrameRate: Number): Boolean
    open fun SetTrackFormat(TrackType: String /* "Audio" | "Caption" | "Metadata" | "Script" | "Subtitle" | "Text" | "Video" | "EMediaPlayerTrack_MAX" */, TrackIndex: Number, FormatIndex: Number): Boolean
    open fun SetTimeDelay(TimeDelay: Timespan)
    open fun SetRate(Rate: Number): Boolean
    open fun SetNativeVolume(Volume: Number): Boolean
    open fun SetLooping(Looping: Boolean): Boolean
    open fun SetDesiredPlayerName(PlayerName: String)
    open fun SetBlockOnTime(Time: Timespan)
    open fun SelectTrack(TrackType: String /* "Audio" | "Caption" | "Metadata" | "Script" | "Subtitle" | "Text" | "Video" | "EMediaPlayerTrack_MAX" */, TrackIndex: Number): Boolean
    open fun Seek(Time: Timespan): Boolean
    open fun Rewind(): Boolean
    open fun Reopen(): Boolean
    open fun Previous(): Boolean
    open fun Play(): Boolean
    open fun Pause(): Boolean
    open fun OpenUrl(URL: String): Boolean
    open fun OpenSourceWithOptions(MediaSource: MediaSource, Options: MediaPlayerOptions): Boolean
    open fun OpenSourceLatent(WorldContextObject: UObject, LatentInfo: LatentActionInfo, MediaSource: MediaSource, Options: MediaPlayerOptions, bSuccess: Boolean = definedExternally): `T$89`
    open fun OpenSource(MediaSource: MediaSource): Boolean
    open fun OpenPlaylistIndex(InPlaylist: MediaPlaylist, index: Number): Boolean
    open fun OpenPlaylist(InPlaylist: MediaPlaylist): Boolean
    open fun OpenFile(FilePath: String): Boolean
    open fun Next(): Boolean
    open fun IsReady(): Boolean
    open fun IsPreparing(): Boolean
    open fun IsPlaying(): Boolean
    open fun IsPaused(): Boolean
    open fun IsLooping(): Boolean
    open fun IsConnecting(): Boolean
    open fun IsClosed(): Boolean
    open fun IsBuffering(): Boolean
    open fun HasError(): Boolean
    open fun GetViewRotation(): Rotator
    open fun GetVideoTrackType(TrackIndex: Number, FormatIndex: Number): String
    open fun GetVideoTrackFrameRates(TrackIndex: Number, FormatIndex: Number): FloatRange
    open fun GetVideoTrackFrameRate(TrackIndex: Number, FormatIndex: Number): Number
    open fun GetVideoTrackDimensions(TrackIndex: Number, FormatIndex: Number): IntPoint
    open fun GetVideoTrackAspectRatio(TrackIndex: Number, FormatIndex: Number): Number
    open fun GetVerticalFieldOfView(): Number
    open fun GetUrl(): String
    open fun GetTrackLanguage(TrackType: String /* "Audio" | "Caption" | "Metadata" | "Script" | "Subtitle" | "Text" | "Video" | "EMediaPlayerTrack_MAX" */, TrackIndex: Number): String
    open fun GetTrackFormat(TrackType: String /* "Audio" | "Caption" | "Metadata" | "Script" | "Subtitle" | "Text" | "Video" | "EMediaPlayerTrack_MAX" */, TrackIndex: Number): Number
    open fun GetTrackDisplayName(TrackType: String /* "Audio" | "Caption" | "Metadata" | "Script" | "Subtitle" | "Text" | "Video" | "EMediaPlayerTrack_MAX" */, TrackIndex: Number): String
    open fun GetTimeDelay(): Timespan
    open fun GetTime(): Timespan
    open fun GetSupportedRates(OutRates: Array<FloatRange> = definedExternally, Unthinned: Boolean = definedExternally): `T$90`
    open fun GetSelectedTrack(TrackType: String /* "Audio" | "Caption" | "Metadata" | "Script" | "Subtitle" | "Text" | "Video" | "EMediaPlayerTrack_MAX" */): Number
    open fun GetRate(): Number
    open fun GetPlaylistIndex(): Number
    open fun GetPlaylist(): MediaPlaylist
    open fun GetPlayerName(): String
    open fun GetNumTracks(TrackType: String /* "Audio" | "Caption" | "Metadata" | "Script" | "Subtitle" | "Text" | "Video" | "EMediaPlayerTrack_MAX" */): Number
    open fun GetNumTrackFormats(TrackType: String /* "Audio" | "Caption" | "Metadata" | "Script" | "Subtitle" | "Text" | "Video" | "EMediaPlayerTrack_MAX" */, TrackIndex: Number): Number
    open fun GetMediaName(): String
    open fun GetLastVideoSampleProcessedTime(): Timespan
    open fun GetLastAudioSampleProcessedTime(): Timespan
    open fun GetHorizontalFieldOfView(): Number
    open fun GetDuration(): Timespan
    open fun GetDesiredPlayerName(): String
    open fun GetAudioTrackType(TrackIndex: Number, FormatIndex: Number): String
    open fun GetAudioTrackSampleRate(TrackIndex: Number, FormatIndex: Number): Number
    open fun GetAudioTrackChannels(TrackIndex: Number, FormatIndex: Number): Number
    open fun Close()
    open fun CanPlayUrl(URL: String): Boolean
    open fun CanPlaySource(MediaSource: MediaSource): Boolean
    open fun CanPause(): Boolean

    companion object {
        fun Load(ResourceName: String): MediaPlayer
        fun Find(Outer: UObject, ResourceName: String): MediaPlayer
        fun GetDefaultObject(): MediaPlayer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MediaPlayer
        fun C(Other: UObject): MediaPlayer
        fun C(Other: Any): MediaPlayer
    }
}

external object EMediaSoundChannels {
    var Mono: String /* "Mono" */
    var Stereo: String /* "Stereo" */
    var Surround: String /* "Surround" */
    var EMediaSoundChannels_MAX: String /* "EMediaSoundChannels_MAX" */
}

external object EMediaSoundComponentFFTSize {
    var Min_64: String /* "Min_64" */
    var Small_256: String /* "Small_256" */
    var Medium_512: String /* "Medium_512" */
    var Large_1024: String /* "Large_1024" */
    var EMediaSoundComponentFFTSize_MAX: String /* "EMediaSoundComponentFFTSize_MAX" */
}

external open class MediaSoundComponentSpectralData {
    open var FrequencyHz: Number
    open var Magnitude: Number
    open fun clone(): MediaSoundComponentSpectralData

    companion object {
        fun C(Other: UObject): MediaSoundComponentSpectralData
        fun C(Other: Any): MediaSoundComponentSpectralData
    }
}

external interface `T$91` {
    var OutAttenuationSettings: SoundAttenuationSettings
    var `$`: Boolean
}

external open class MediaSoundComponent : SynthComponent {
    constructor()
    constructor(Outer: UObject)
    open var Channels: String /* "Mono" | "Stereo" | "Surround" | "EMediaSoundChannels_MAX" */
    open var DynamicRateAdjustment: Boolean
    open var RateAdjustmentFactor: Number
    open var RateAdjustmentRange: FloatRange
    open var MediaPlayer: MediaPlayer
    open fun SetSpectralAnalysisSettings(InFrequenciesToAnalyze: Array<Number>, InFFTSize: String /* "Min_64" | "Small_256" | "Medium_512" | "Large_1024" | "EMediaSoundComponentFFTSize_MAX" */)
    open fun SetMediaPlayer(NewMediaPlayer: MediaPlayer)
    open fun SetEnvelopeFollowingsettings(AttackTimeMsec: Number, ReleaseTimeMsec: Number)
    open fun SetEnableSpectralAnalysis(bInSpectralAnalysisEnabled: Boolean)
    open fun SetEnableEnvelopeFollowing(bInEnvelopeFollowing: Boolean)
    open fun GetSpectralData(): Array<MediaSoundComponentSpectralData>
    open fun GetMediaPlayer(): MediaPlayer
    open fun GetEnvelopeValue(): Number
    open fun BP_GetAttenuationSettingsToApply(OutAttenuationSettings: SoundAttenuationSettings = definedExternally): `T$91`

    companion object {
        fun Load(ResourceName: String): MediaSoundComponent
        fun Find(Outer: UObject, ResourceName: String): MediaSoundComponent
        fun GetDefaultObject(): MediaSoundComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MediaSoundComponent
        fun C(Other: UObject): MediaSoundComponent
        fun C(Other: Any): MediaSoundComponent
    }
}

external open class MediaTexture : Texture {
    constructor()
    constructor(Outer: UObject)
    open var AddressX: String /* "TA_Wrap" | "TA_Clamp" | "TA_Mirror" | "TA_MAX" */
    open var AddressY: String /* "TA_Wrap" | "TA_Clamp" | "TA_Mirror" | "TA_MAX" */
    open var AutoClear: Boolean
    open var ClearColor: LinearColor
    open var MediaPlayer: MediaPlayer
    open fun SetMediaPlayer(NewMediaPlayer: MediaPlayer)
    open fun GetWidth(): Number
    open fun GetMediaPlayer(): MediaPlayer
    open fun GetHeight(): Number
    open fun GetAspectRatio(): Number

    companion object {
        fun Load(ResourceName: String): MediaTexture
        fun Find(Outer: UObject, ResourceName: String): MediaTexture
        fun GetDefaultObject(): MediaTexture
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MediaTexture
        fun C(Other: UObject): MediaTexture
        fun C(Other: Any): MediaTexture
    }
}

external open class PlatformMediaSource : MediaSource {
    open var PlatformMediaSources: Any
    open var MediaSource: MediaSource
    fun <K : String> addEventListener(type: K, listener: (self: MediaSource, ev: Any) -> Any, options: Boolean)
    fun <K : String> addEventListener(type: K, listener: (self: MediaSource, ev: Any) -> Any)
    fun <K : String> addEventListener(type: K, listener: (self: MediaSource, ev: Any) -> Any, options: AddEventListenerOptions)
    fun addEventListener(type: String, listener: EventListener, options: Boolean)
    fun addEventListener(type: String, listener: EventListener)
    fun addEventListener(type: String, listener: EventListener, options: AddEventListenerOptions)
    fun addEventListener(type: String, listener: dynamic /*EventListenerObject*/, options: Boolean)
    fun addEventListener(type: String, listener: dynamic /*EventListenerObject*/)
    fun addEventListener(type: String, listener: dynamic /*EventListenerObject*/, options: AddEventListenerOptions)
    fun <K : String> removeEventListener(type: K, listener: (self: MediaSource, ev: Any) -> Any, options: Boolean)
    fun <K : String> removeEventListener(type: K, listener: (self: MediaSource, ev: Any) -> Any)
    fun <K : String> removeEventListener(type: K, listener: (self: MediaSource, ev: Any) -> Any, options: EventListenerOptions)
    fun removeEventListener(type: String, listener: EventListener, options: Boolean)
    fun removeEventListener(type: String, listener: EventListener)
    fun removeEventListener(type: String, listener: EventListener, options: EventListenerOptions)
    fun removeEventListener(type: String, listener: dynamic /*EventListenerObject*/, options: Boolean)
    fun removeEventListener(type: String, listener: dynamic /*EventListenerObject*/)
    fun removeEventListener(type: String, listener: dynamic /*EventListenerObject*/, options: EventListenerOptions)

    companion object {
        fun Load(ResourceName: String): PlatformMediaSource
        fun Find(Outer: UObject, ResourceName: String): PlatformMediaSource
        fun GetDefaultObject(): PlatformMediaSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PlatformMediaSource
        fun C(Other: UObject): PlatformMediaSource
        fun C(Other: Any): PlatformMediaSource
    }
}

external open class StreamMediaSource : BaseMediaSource {
    open var StreamUrl: String

    companion object {
        fun Load(ResourceName: String): StreamMediaSource
        fun Find(Outer: UObject, ResourceName: String): StreamMediaSource
        fun GetDefaultObject(): StreamMediaSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): StreamMediaSource
        fun C(Other: UObject): StreamMediaSource
        fun C(Other: Any): StreamMediaSource
    }
}

external open class TimeSynchronizableMediaSource : BaseMediaSource {
    open var bUseTimeSynchronization: Boolean

    companion object {
        fun Load(ResourceName: String): TimeSynchronizableMediaSource
        fun Find(Outer: UObject, ResourceName: String): TimeSynchronizableMediaSource
        fun GetDefaultObject(): TimeSynchronizableMediaSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TimeSynchronizableMediaSource
        fun C(Other: UObject): TimeSynchronizableMediaSource
        fun C(Other: Any): TimeSynchronizableMediaSource
    }
}

external open class MaterialExpressionSpriteTextureSampler : MaterialExpressionTextureSampleParameter2D {
    constructor()
    constructor(Outer: UObject)
    open var bSampleAdditionalTextures: Boolean
    open var AdditionalSlotIndex: Number
    open var SlotDisplayName: String

    companion object {
        fun Load(ResourceName: String): MaterialExpressionSpriteTextureSampler
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionSpriteTextureSampler
        fun GetDefaultObject(): MaterialExpressionSpriteTextureSampler
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionSpriteTextureSampler
        fun C(Other: UObject): MaterialExpressionSpriteTextureSampler
        fun C(Other: Any): MaterialExpressionSpriteTextureSampler
    }
}

external open class PaperSpriteSocket {
    open var LocalTransform: Transform
    open var SocketName: String
    open fun clone(): PaperSpriteSocket

    companion object {
        fun C(Other: UObject): PaperSpriteSocket
        fun C(Other: Any): PaperSpriteSocket
    }
}

external object ESpriteCollisionMode {
    var None: String /* "None" */
    var Use2DPhysics: String /* "Use2DPhysics" */
    var Use3DPhysics: String /* "Use3DPhysics" */
    var ESpriteCollisionMode_MAX: String /* "ESpriteCollisionMode_MAX" */
}

external object ESpritePivotMode {
    var Top_Left: String /* "Top_Left" */
    var Top_Center: String /* "Top_Center" */
    var Top_Right: String /* "Top_Right" */
    var Center_Left: String /* "Center_Left" */
    var Center_Center: String /* "Center_Center" */
    var Center_Right: String /* "Center_Right" */
    var Bottom_Left: String /* "Bottom_Left" */
    var Bottom_Center: String /* "Bottom_Center" */
    var Bottom_Right: String /* "Bottom_Right" */
    var Custom: String /* "Custom" */
    var ESpritePivotMode_MAX: String /* "ESpritePivotMode_MAX" */
}

external object ESpriteShapeType {
    var Box: String /* "Box" */
    var Circle: String /* "Circle" */
    var Polygon: String /* "Polygon" */
    var ESpriteShapeType_MAX: String /* "ESpriteShapeType_MAX" */
}

external open class SpriteGeometryShape {
    open var ShapeType: String /* "Box" | "Circle" | "Polygon" | "ESpriteShapeType_MAX" */
    open var Vertices: Array<Vector2D>
    open var BoxSize: Vector2D
    open var BoxPosition: Vector2D
    open var Rotation: Number
    open var bNegativeWinding: Boolean
    open fun clone(): SpriteGeometryShape

    companion object {
        fun C(Other: UObject): SpriteGeometryShape
        fun C(Other: Any): SpriteGeometryShape
    }
}

external object ESpritePolygonMode {
    var SourceBoundingBox: String /* "SourceBoundingBox" */
    var TightBoundingBox: String /* "TightBoundingBox" */
    var ShrinkWrapped: String /* "ShrinkWrapped" */
    var FullyCustom: String /* "FullyCustom" */
    var Diced: String /* "Diced" */
    var ESpritePolygonMode_MAX: String /* "ESpritePolygonMode_MAX" */
}

external open class SpriteGeometryCollection {
    open var Shapes: Array<SpriteGeometryShape>
    open var GeometryType: String /* "SourceBoundingBox" | "TightBoundingBox" | "ShrinkWrapped" | "FullyCustom" | "Diced" | "ESpritePolygonMode_MAX" */
    open var PixelsPerSubdivisionX: Number
    open var PixelsPerSubdivisionY: Number
    open var bAvoidVertexMerging: Boolean
    open var AlphaThreshold: Number
    open var DetailAmount: Number
    open var SimplifyEpsilon: Number
    open fun clone(): SpriteGeometryCollection

    companion object {
        fun C(Other: UObject): SpriteGeometryCollection
        fun C(Other: Any): SpriteGeometryCollection
    }
}

external object EPaperSpriteAtlasPadding {
    var DilateBorder: String /* "DilateBorder" */
    var PadWithZero: String /* "PadWithZero" */
    var EPaperSpriteAtlasPadding_MAX: String /* "EPaperSpriteAtlasPadding_MAX" */
}

external open class PaperSpriteAtlasSlot {
    open var SpriteRef: PaperSprite
    open var AtlasIndex: Number
    open var X: Number
    open var Y: Number
    open var Width: Number
    open var Height: Number
    open fun clone(): PaperSpriteAtlasSlot

    companion object {
        fun C(Other: UObject): PaperSpriteAtlasSlot
        fun C(Other: Any): PaperSpriteAtlasSlot
    }
}

external open class PaperSpriteAtlas : UObject {
    constructor()
    constructor(Outer: UObject)
    open var AtlasDescription: String
    open var MaxWidth: Number
    open var MaxHeight: Number
    open var MipCount: Number
    open var PaddingType: String /* "DilateBorder" | "PadWithZero" | "EPaperSpriteAtlasPadding_MAX" */
    open var Padding: Number
    open var CompressionSettings: String /* "TC_Default" | "TC_Normalmap" | "TC_Masks" | "TC_Grayscale" | "TC_Displacementmap" | "TC_VectorDisplacementmap" | "TC_HDR" | "TC_EditorIcon" | "TC_Alpha" | "TC_DistanceFieldFont" | "TC_HDR_Compressed" | "TC_BC7" | "TC_MAX" */
    open var Filter: String /* "TF_Nearest" | "TF_Bilinear" | "TF_Trilinear" | "TF_Default" | "TF_MAX" */
    open var GeneratedTextures: Array<Texture>
    open var AtlasGUID: Guid
    open var bRebuildAtlas: Boolean
    open var AtlasSlots: Array<PaperSpriteAtlasSlot>
    open var NumIncrementalBuilds: Number
    open var BuiltWidth: Number
    open var BuiltHeight: Number
    open var BuiltPadding: Number

    companion object {
        fun Load(ResourceName: String): PaperSpriteAtlas
        fun Find(Outer: UObject, ResourceName: String): PaperSpriteAtlas
        fun GetDefaultObject(): PaperSpriteAtlas
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PaperSpriteAtlas
        fun C(Other: UObject): PaperSpriteAtlas
        fun C(Other: Any): PaperSpriteAtlas
    }
}

external open class PaperSprite : UObject {
    constructor()
    constructor(Outer: UObject)
    open var OriginInSourceImageBeforeTrimming: Vector2D
    open var SourceImageDimensionBeforeTrimming: Vector2D
    open var bTrimmedInSourceImage: Boolean
    open var bRotatedInSourceImage: Boolean
    open var SourceTextureDimension: Vector2D
    open var SourceUV: Vector2D
    open var SourceDimension: Vector2D
    open var SourceTexture: Texture2D
    open var AdditionalSourceTextures: Array<Texture>
    open var BakedSourceUV: Vector2D
    open var BakedSourceDimension: Vector2D
    open var BakedSourceTexture: Texture2D
    open var DefaultMaterial: MaterialInterface
    open var AlternateMaterial: MaterialInterface
    open var Sockets: Array<PaperSpriteSocket>
    open var SpriteCollisionDomain: String /* "None" | "Use2DPhysics" | "Use3DPhysics" | "ESpriteCollisionMode_MAX" */
    open var PixelsPerUnrealUnit: Number
    open var BodySetup: BodySetup
    open var PivotMode: String /* "Top_Left" | "Top_Center" | "Top_Right" | "Center_Left" | "Center_Center" | "Center_Right" | "Bottom_Left" | "Bottom_Center" | "Bottom_Right" | "Custom" | "ESpritePivotMode_MAX" */
    open var CustomPivotPoint: Vector2D
    open var bSnapPivotToPixelGrid: Boolean
    open var CollisionGeometry: SpriteGeometryCollection
    open var CollisionThickness: Number
    open var RenderGeometry: SpriteGeometryCollection
    open var AtlasGroup: PaperSpriteAtlas
    open var AlternateMaterialSplitIndex: Number
    open var BakedRenderData: Array<Vector4>
    open fun MakeBrushFromSprite(Width: Number, Height: Number): SlateBrush

    companion object {
        fun Load(ResourceName: String): PaperSprite
        fun Find(Outer: UObject, ResourceName: String): PaperSprite
        fun GetDefaultObject(): PaperSprite
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PaperSprite
        fun C(Other: UObject): PaperSprite
        fun C(Other: Any): PaperSprite
        fun MakeBrushFromSprite(Sprite: PaperSprite, Width: Number, Height: Number): SlateBrush
    }
}

external open class PaperFlipbookKeyFrame {
    open var Sprite: PaperSprite
    open var FrameRun: Number
    open fun clone(): PaperFlipbookKeyFrame

    companion object {
        fun C(Other: UObject): PaperFlipbookKeyFrame
        fun C(Other: Any): PaperFlipbookKeyFrame
    }
}

external object EFlipbookCollisionMode {
    var NoCollision: String /* "NoCollision" */
    var FirstFrameCollision: String /* "FirstFrameCollision" */
    var EachFrameCollision: String /* "EachFrameCollision" */
    var EFlipbookCollisionMode_MAX: String /* "EFlipbookCollisionMode_MAX" */
}

external open class PaperFlipbook : UObject {
    constructor()
    constructor(Outer: UObject)
    open var FramesPerSecond: Number
    open var KeyFrames: Array<PaperFlipbookKeyFrame>
    open var DefaultMaterial: MaterialInterface
    open var CollisionSource: String /* "NoCollision" | "FirstFrameCollision" | "EachFrameCollision" | "EFlipbookCollisionMode_MAX" */
    open fun IsValidKeyFrameIndex(index: Number): Boolean
    open fun GetTotalDuration(): Number
    open fun GetSpriteAtTime(Time: Number, bClampToEnds: Boolean): PaperSprite
    open fun GetSpriteAtFrame(FrameIndex: Number): PaperSprite
    open fun GetNumKeyFrames(): Number
    open fun GetNumFrames(): Number
    open fun GetKeyFrameIndexAtTime(Time: Number, bClampToEnds: Boolean): Number

    companion object {
        fun Load(ResourceName: String): PaperFlipbook
        fun Find(Outer: UObject, ResourceName: String): PaperFlipbook
        fun GetDefaultObject(): PaperFlipbook
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PaperFlipbook
        fun C(Other: UObject): PaperFlipbook
        fun C(Other: Any): PaperFlipbook
    }
}

external open class PaperFlipbookComponent : MeshComponent {
    constructor()
    constructor(Outer: UObject)
    open var SourceFlipbook: PaperFlipbook
    open var Material: MaterialInterface
    open var PlayRate: Number
    open var bLooping: Boolean
    open var bReversePlayback: Boolean
    open var bPlaying: Boolean
    open var AccumulatedTime: Number
    open var CachedFrameIndex: Number
    open var SpriteColor: LinearColor
    open var CachedBodySetup: BodySetup
    open var OnFinishedPlaying: UnrealEngineMulticastDelegate<() -> Unit>
    open fun Stop()
    open fun SetSpriteColor(NewColor: LinearColor)
    open fun SetPlayRate(NewRate: Number)
    open fun SetPlaybackPositionInFrames(NewFramePosition: Number, bFireEvents: Boolean)
    open fun SetPlaybackPosition(NewPosition: Number, bFireEvents: Boolean)
    open fun SetNewTime(NewTime: Number)
    open fun SetLooping(bNewLooping: Boolean)
    open fun SetFlipbook(NewFlipbook: PaperFlipbook): Boolean
    open fun ReverseFromEnd()
    open fun Reverse()
    open fun PlayFromStart()
    open fun Play()
    open fun OnRep_SourceFlipbook(OldFlipbook: PaperFlipbook)
    open fun IsReversing(): Boolean
    open fun IsPlaying(): Boolean
    open fun IsLooping(): Boolean
    open fun GetPlayRate(): Number
    open fun GetPlaybackPositionInFrames(): Number
    open fun GetPlaybackPosition(): Number
    open fun GetFlipbookLengthInFrames(): Number
    open fun GetFlipbookLength(): Number
    open fun GetFlipbookFramerate(): Number
    open fun GetFlipbook(): PaperFlipbook

    companion object {
        fun Load(ResourceName: String): PaperFlipbookComponent
        fun Find(Outer: UObject, ResourceName: String): PaperFlipbookComponent
        fun GetDefaultObject(): PaperFlipbookComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PaperFlipbookComponent
        fun C(Other: UObject): PaperFlipbookComponent
        fun C(Other: Any): PaperFlipbookComponent
    }
}

external open class PaperCharacter(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Character {
    open var Sprite: PaperFlipbookComponent

    companion object {
        fun GetDefaultObject(): PaperCharacter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PaperCharacter
        fun C(Other: UObject): PaperCharacter
        fun C(Other: Any): PaperCharacter
    }
}

external open class PaperFlipbookActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var RenderComponent: PaperFlipbookComponent

    companion object {
        fun GetDefaultObject(): PaperFlipbookActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PaperFlipbookActor
        fun C(Other: UObject): PaperFlipbookActor
        fun C(Other: Any): PaperFlipbookActor
    }
}

external open class SpriteInstanceData {
    open var Transform: Matrix
    open var SourceSprite: PaperSprite
    open var VertexColor: Color
    open var MaterialIndex: Number
    open fun clone(): SpriteInstanceData

    companion object {
        fun C(Other: UObject): SpriteInstanceData
        fun C(Other: Any): SpriteInstanceData
    }
}

external interface `T$92` {
    var OutInstanceTransform: Transform
    var `$`: Boolean
}

external open class PaperGroupedSpriteComponent : MeshComponent {
    constructor()
    constructor(Outer: UObject)
    open var InstanceMaterials: Array<MaterialInterface>
    open var PerInstanceSpriteData: Array<SpriteInstanceData>
    open fun UpdateInstanceTransform(InstanceIndex: Number, NewInstanceTransform: Transform, bWorldSpace: Boolean, bMarkRenderStateDirty: Boolean, bTeleport: Boolean): Boolean
    open fun UpdateInstanceColor(InstanceIndex: Number, NewInstanceColor: LinearColor, bMarkRenderStateDirty: Boolean): Boolean
    open fun SortInstancesAlongAxis(WorldSpaceSortAxis: Vector)
    open fun RemoveInstance(InstanceIndex: Number): Boolean
    open fun GetInstanceTransform(InstanceIndex: Number, OutInstanceTransform: Transform = definedExternally, bWorldSpace: Boolean = definedExternally): `T$92`
    open fun GetInstanceCount(): Number
    open fun ClearInstances()
    open fun AddInstance(Transform: Transform, Sprite: PaperSprite, bWorldSpace: Boolean, Color: LinearColor): Number

    companion object {
        fun Load(ResourceName: String): PaperGroupedSpriteComponent
        fun Find(Outer: UObject, ResourceName: String): PaperGroupedSpriteComponent
        fun GetDefaultObject(): PaperGroupedSpriteComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PaperGroupedSpriteComponent
        fun C(Other: UObject): PaperGroupedSpriteComponent
        fun C(Other: Any): PaperGroupedSpriteComponent
    }
}

external open class PaperGroupedSpriteActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var RenderComponent: PaperGroupedSpriteComponent

    companion object {
        fun GetDefaultObject(): PaperGroupedSpriteActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PaperGroupedSpriteActor
        fun C(Other: UObject): PaperGroupedSpriteActor
        fun C(Other: Any): PaperGroupedSpriteActor
    }
}

external open class PaperRuntimeSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bEnableSpriteAtlasGroups: Boolean
    open var bEnableTerrainSplineEditing: Boolean
    open var bResizeSpriteDataToMatchTextures: Boolean

    companion object {
        fun Load(ResourceName: String): PaperRuntimeSettings
        fun Find(Outer: UObject, ResourceName: String): PaperRuntimeSettings
        fun GetDefaultObject(): PaperRuntimeSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PaperRuntimeSettings
        fun C(Other: UObject): PaperRuntimeSettings
        fun C(Other: Any): PaperRuntimeSettings
    }
}

external open class PaperSpriteComponent : MeshComponent {
    constructor()
    constructor(Outer: UObject)
    open var SourceSprite: PaperSprite
    open var MaterialOverride: MaterialInterface
    open var SpriteColor: LinearColor
    open fun SetSpriteColor(NewColor: LinearColor)
    open fun SetSprite(NewSprite: PaperSprite): Boolean
    open fun GetSprite(): PaperSprite

    companion object {
        fun Load(ResourceName: String): PaperSpriteComponent
        fun Find(Outer: UObject, ResourceName: String): PaperSpriteComponent
        fun GetDefaultObject(): PaperSpriteComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PaperSpriteComponent
        fun C(Other: UObject): PaperSpriteComponent
        fun C(Other: Any): PaperSpriteComponent
    }
}

external open class PaperSpriteActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var RenderComponent: PaperSpriteComponent

    companion object {
        fun GetDefaultObject(): PaperSpriteActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PaperSpriteActor
        fun C(Other: UObject): PaperSpriteActor
        fun C(Other: Any): PaperSpriteActor
    }
}

external open class PaperSpriteBlueprintLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PaperSpriteBlueprintLibrary
        fun Find(Outer: UObject, ResourceName: String): PaperSpriteBlueprintLibrary
        fun GetDefaultObject(): PaperSpriteBlueprintLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PaperSpriteBlueprintLibrary
        fun MakeBrushFromSprite(Sprite: PaperSprite, Width: Number, Height: Number): SlateBrush
        fun C(Other: UObject): PaperSpriteBlueprintLibrary
        fun C(Other: Any): PaperSpriteBlueprintLibrary
    }
}

external open class PaperTerrainSplineComponent : SplineComponent {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PaperTerrainSplineComponent
        fun Find(Outer: UObject, ResourceName: String): PaperTerrainSplineComponent
        fun GetDefaultObject(): PaperTerrainSplineComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PaperTerrainSplineComponent
        fun C(Other: UObject): PaperTerrainSplineComponent
        fun C(Other: Any): PaperTerrainSplineComponent
    }
}

external open class PaperTerrainMaterialRule {
    open var StartCap: PaperSprite
    open var Body: Array<PaperSprite>
    open var EndCap: PaperSprite
    open var MinimumAngle: Number
    open var MaximumAngle: Number
    open var bEnableCollision: Boolean
    open var CollisionOffset: Number
    open var DrawOrder: Number
    open var Description: String
    open fun clone(): PaperTerrainMaterialRule

    companion object {
        fun C(Other: UObject): PaperTerrainMaterialRule
        fun C(Other: Any): PaperTerrainMaterialRule
    }
}

external open class PaperTerrainMaterial : DataAsset {
    constructor()
    constructor(Outer: UObject)
    open var Rules: Array<PaperTerrainMaterialRule>
    open var InteriorFill: PaperSprite

    companion object {
        fun Load(ResourceName: String): PaperTerrainMaterial
        fun Find(Outer: UObject, ResourceName: String): PaperTerrainMaterial
        fun GetDefaultObject(): PaperTerrainMaterial
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PaperTerrainMaterial
        fun C(Other: UObject): PaperTerrainMaterial
        fun C(Other: Any): PaperTerrainMaterial
    }
}

external open class PaperTerrainComponent : PrimitiveComponent {
    constructor()
    constructor(Outer: UObject)
    open var TerrainMaterial: PaperTerrainMaterial
    open var bClosedSpline: Boolean
    open var bFilledSpline: Boolean
    open var AssociatedSpline: PaperTerrainSplineComponent
    open var RandomSeed: Number
    open var SegmentOverlapAmount: Number
    open var TerrainColor: LinearColor
    open var ReparamStepsPerSegment: Number
    open var SpriteCollisionDomain: String /* "None" | "Use2DPhysics" | "Use3DPhysics" | "ESpriteCollisionMode_MAX" */
    open var CollisionThickness: Number
    open var CachedBodySetup: BodySetup
    open fun SetTerrainColor(NewColor: LinearColor)

    companion object {
        fun Load(ResourceName: String): PaperTerrainComponent
        fun Find(Outer: UObject, ResourceName: String): PaperTerrainComponent
        fun GetDefaultObject(): PaperTerrainComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PaperTerrainComponent
        fun C(Other: UObject): PaperTerrainComponent
        fun C(Other: Any): PaperTerrainComponent
    }
}

external open class PaperTerrainActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var DummyRoot: SceneComponent
    open var SplineComponent: PaperTerrainSplineComponent
    open var RenderComponent: PaperTerrainComponent

    companion object {
        fun GetDefaultObject(): PaperTerrainActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PaperTerrainActor
        fun C(Other: UObject): PaperTerrainActor
        fun C(Other: Any): PaperTerrainActor
    }
}

external open class IntMargin {
    open var Left: Number
    open var Top: Number
    open var Right: Number
    open var Bottom: Number
    open fun clone(): IntMargin

    companion object {
        fun C(Other: UObject): IntMargin
        fun C(Other: Any): IntMargin
    }
}

external open class PaperTileMetadata {
    open var UserDataName: String
    open var CollisionData: SpriteGeometryCollection
    open var TerrainMembership: Number
    open fun clone(): PaperTileMetadata

    companion object {
        fun C(Other: UObject): PaperTileMetadata
        fun C(Other: Any): PaperTileMetadata
    }
}

external open class PaperTileSetTerrain {
    open var TerrainName: String
    open var CenterTileIndex: Number
    open fun clone(): PaperTileSetTerrain

    companion object {
        fun C(Other: UObject): PaperTileSetTerrain
        fun C(Other: Any): PaperTileSetTerrain
    }
}

external open class PaperTileSet : UObject {
    constructor()
    constructor(Outer: UObject)
    open var TileSize: IntPoint
    open var TileSheet: Texture2D
    open var AdditionalSourceTextures: Array<Texture>
    open var BorderMargin: IntMargin
    open var PerTileSpacing: IntPoint
    open var DrawingOffset: IntPoint
    open var BackgroundColor: LinearColor
    open var WidthInTiles: Number
    open var HeightInTiles: Number
    open var AllocatedWidth: Number
    open var AllocatedHeight: Number
    open var PerTileData: Array<PaperTileMetadata>
    open var Terrains: Array<PaperTileSetTerrain>
    open var TileWidth: Number
    open var TileHeight: Number
    open var Margin: Number
    open var Spacing: Number

    companion object {
        fun Load(ResourceName: String): PaperTileSet
        fun Find(Outer: UObject, ResourceName: String): PaperTileSet
        fun GetDefaultObject(): PaperTileSet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PaperTileSet
        fun C(Other: UObject): PaperTileSet
        fun C(Other: Any): PaperTileSet
    }
}

external interface `T$93` {
    var TileIndex: Number
    var TileSet: PaperTileSet
    var bFlipH: Boolean
    var bFlipV: Boolean
    var bFlipD: Boolean
}

external open class PaperTileInfo {
    open var TileSet: PaperTileSet
    open var PackedTileIndex: Number
    open fun clone(): PaperTileInfo
    open fun BreakTile(TileIndex: Number = definedExternally, TileSet: PaperTileSet = definedExternally, bFlipH: Boolean = definedExternally, bFlipV: Boolean = definedExternally, bFlipD: Boolean = definedExternally): `T$93`
    open fun GetTileTransform(): Transform
    open fun GetTileUserData(): String

    companion object {
        fun C(Other: UObject): PaperTileInfo
        fun C(Other: Any): PaperTileInfo
        fun BreakTile(Tile: PaperTileInfo, TileIndex: Number = definedExternally, TileSet: PaperTileSet = definedExternally, bFlipH: Boolean = definedExternally, bFlipV: Boolean = definedExternally, bFlipD: Boolean = definedExternally): `T$93`
        fun GetTileTransform(Tile: PaperTileInfo): Transform
        fun GetTileUserData(Tile: PaperTileInfo): String
        fun MakeTile(TileIndex: Number, TileSet: PaperTileSet, bFlipH: Boolean, bFlipV: Boolean, bFlipD: Boolean): PaperTileInfo
    }
}

external open class PaperTileLayer : UObject {
    constructor()
    constructor(Outer: UObject)
    open var LayerName: String
    open var LayerWidth: Number
    open var LayerHeight: Number
    open var bHiddenInEditor: Boolean
    open var bHiddenInGame: Boolean
    open var bLayerCollides: Boolean
    open var bOverrideCollisionThickness: Boolean
    open var bOverrideCollisionOffset: Boolean
    open var CollisionThicknessOverride: Number
    open var CollisionOffsetOverride: Number
    open var LayerColor: LinearColor
    open var AllocatedWidth: Number
    open var AllocatedHeight: Number
    open var AllocatedCells: Array<PaperTileInfo>
    open var TileSet: PaperTileSet
    open var AllocatedGrid: Array<Number>

    companion object {
        fun Load(ResourceName: String): PaperTileLayer
        fun Find(Outer: UObject, ResourceName: String): PaperTileLayer
        fun GetDefaultObject(): PaperTileLayer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PaperTileLayer
        fun C(Other: UObject): PaperTileLayer
        fun C(Other: Any): PaperTileLayer
    }
}

external object ETileMapProjectionMode {
    var Orthogonal: String /* "Orthogonal" */
    var IsometricDiamond: String /* "IsometricDiamond" */
    var IsometricStaggered: String /* "IsometricStaggered" */
    var HexagonalStaggered: String /* "HexagonalStaggered" */
    var ETileMapProjectionMode_MAX: String /* "ETileMapProjectionMode_MAX" */
}

external open class PaperTileMap : UObject {
    constructor()
    constructor(Outer: UObject)
    open var MapWidth: Number
    open var MapHeight: Number
    open var TileWidth: Number
    open var TileHeight: Number
    open var PixelsPerUnrealUnit: Number
    open var SeparationPerTileX: Number
    open var SeparationPerTileY: Number
    open var SeparationPerLayer: Number
    open var SelectedTileSet: PaperTileSet
    open var Material: MaterialInterface
    open var TileLayers: Array<PaperTileLayer>
    open var CollisionThickness: Number
    open var SpriteCollisionDomain: String /* "None" | "Use2DPhysics" | "Use3DPhysics" | "ESpriteCollisionMode_MAX" */
    open var ProjectionMode: String /* "Orthogonal" | "IsometricDiamond" | "IsometricStaggered" | "HexagonalStaggered" | "ETileMapProjectionMode_MAX" */
    open var HexSideLength: Number
    open var BodySetup: BodySetup
    open var AssetImportData: AssetImportData
    open var SelectedLayerIndex: Number
    open var BackgroundColor: LinearColor
    open var TileGridColor: LinearColor
    open var MultiTileGridColor: LinearColor
    open var MultiTileGridWidth: Number
    open var MultiTileGridHeight: Number
    open var MultiTileGridOffsetX: Number
    open var MultiTileGridOffsetY: Number
    open var LayerGridColor: LinearColor
    open var LayerNameIndex: Number

    companion object {
        fun Load(ResourceName: String): PaperTileMap
        fun Find(Outer: UObject, ResourceName: String): PaperTileMap
        fun GetDefaultObject(): PaperTileMap
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PaperTileMap
        fun C(Other: UObject): PaperTileMap
        fun C(Other: Any): PaperTileMap
    }
}

external interface `T$94` {
    var Points: Array<Vector>
}

external interface `T$95` {
    var MapWidth: Number
    var MapHeight: Number
    var NumLayers: Number
}

external open class PaperTileMapComponent : MeshComponent {
    constructor()
    constructor(Outer: UObject)
    open var MapWidth: Number
    open var MapHeight: Number
    open var TileWidth: Number
    open var TileHeight: Number
    open var DefaultLayerTileSet: PaperTileSet
    open var Material: MaterialInterface
    open var TileLayers: Array<PaperTileLayer>
    open var TileMapColor: LinearColor
    open var UseSingleLayerIndex: Number
    open var bUseSingleLayer: Boolean
    open var TileMap: PaperTileMap
    open var bShowPerTileGridWhenSelected: Boolean
    open var bShowPerLayerGridWhenSelected: Boolean
    open var bShowOutlineWhenUnselected: Boolean
    open var bShowPerTileGridWhenUnselected: Boolean
    open var bShowPerLayerGridWhenUnselected: Boolean
    open fun SetTileMapColor(NewColor: LinearColor)
    open fun SetTileMap(NewTileMap: PaperTileMap): Boolean
    open fun SetTile(X: Number, Y: Number, Layer: Number, NewValue: PaperTileInfo)
    open fun SetLayerColor(NewColor: LinearColor, Layer: Number)
    open fun SetLayerCollision(Layer: Number, bHasCollision: Boolean, bOverrideThickness: Boolean, CustomThickness: Number, bOverrideOffset: Boolean, CustomOffset: Number, bRebuildCollision: Boolean)
    open fun SetDefaultCollisionThickness(Thickness: Number, bRebuildCollision: Boolean)
    open fun ResizeMap(NewWidthInTiles: Number, NewHeightInTiles: Number)
    open fun RebuildCollision()
    open fun OwnsTileMap(): Boolean
    open fun MakeTileMapEditable()
    open fun GetTilePolygon(TileX: Number, TileY: Number, Points: Array<Vector> = definedExternally, LayerIndex: Number = definedExternally, bWorldSpace: Boolean = definedExternally): `T$94`
    open fun GetTileMapColor(): LinearColor
    open fun GetTileCornerPosition(TileX: Number, TileY: Number, LayerIndex: Number, bWorldSpace: Boolean): Vector
    open fun GetTileCenterPosition(TileX: Number, TileY: Number, LayerIndex: Number, bWorldSpace: Boolean): Vector
    open fun GetTile(X: Number, Y: Number, Layer: Number): PaperTileInfo
    open fun GetMapSize(MapWidth: Number = definedExternally, MapHeight: Number = definedExternally, NumLayers: Number = definedExternally): `T$95`
    open fun GetLayerColor(Layer: Number): LinearColor
    open fun CreateNewTileMap(MapWidth: Number, MapHeight: Number, TileWidth: Number, TileHeight: Number, PixelsPerUnrealUnit: Number, bCreateLayer: Boolean)
    open fun AddNewLayer(): PaperTileLayer

    companion object {
        fun Load(ResourceName: String): PaperTileMapComponent
        fun Find(Outer: UObject, ResourceName: String): PaperTileMapComponent
        fun GetDefaultObject(): PaperTileMapComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PaperTileMapComponent
        fun C(Other: UObject): PaperTileMapComponent
        fun C(Other: Any): PaperTileMapComponent
    }
}

external open class PaperTileMapActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var RenderComponent: PaperTileMapComponent

    companion object {
        fun GetDefaultObject(): PaperTileMapActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PaperTileMapActor
        fun C(Other: UObject): PaperTileMapActor
        fun C(Other: Any): PaperTileMapActor
    }
}

external open class TileMapBlueprintLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TileMapBlueprintLibrary
        fun Find(Outer: UObject, ResourceName: String): TileMapBlueprintLibrary
        fun GetDefaultObject(): TileMapBlueprintLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TileMapBlueprintLibrary
        fun MakeTile(TileIndex: Number, TileSet: PaperTileSet, bFlipH: Boolean, bFlipV: Boolean, bFlipD: Boolean): PaperTileInfo
        fun GetTileUserData(Tile: PaperTileInfo): String
        fun GetTileTransform(Tile: PaperTileInfo): Transform
        fun BreakTile(Tile: PaperTileInfo, TileIndex: Number = definedExternally, TileSet: PaperTileSet = definedExternally, bFlipH: Boolean = definedExternally, bFlipV: Boolean = definedExternally, bFlipD: Boolean = definedExternally): `T$93`
        fun C(Other: UObject): TileMapBlueprintLibrary
        fun C(Other: Any): TileMapBlueprintLibrary
    }
}

external open class LightPropagationVolumeSettings {
    open var bOverride_LPVIntensity: Boolean
    open var bOverride_LPVDirectionalOcclusionIntensity: Boolean
    open var bOverride_LPVDirectionalOcclusionRadius: Boolean
    open var bOverride_LPVDiffuseOcclusionExponent: Boolean
    open var bOverride_LPVSpecularOcclusionExponent: Boolean
    open var bOverride_LPVDiffuseOcclusionIntensity: Boolean
    open var bOverride_LPVSpecularOcclusionIntensity: Boolean
    open var bOverride_LPVSize: Boolean
    open var bOverride_LPVSecondaryOcclusionIntensity: Boolean
    open var bOverride_LPVSecondaryBounceIntensity: Boolean
    open var bOverride_LPVGeometryVolumeBias: Boolean
    open var bOverride_LPVVplInjectionBias: Boolean
    open var bOverride_LPVEmissiveInjectionIntensity: Boolean
    open var LPVIntensity: Number
    open var LPVVplInjectionBias: Number
    open var LPVSize: Number
    open var LPVSecondaryOcclusionIntensity: Number
    open var LPVSecondaryBounceIntensity: Number
    open var LPVGeometryVolumeBias: Number
    open var LPVEmissiveInjectionIntensity: Number
    open var LPVDirectionalOcclusionIntensity: Number
    open var LPVDirectionalOcclusionRadius: Number
    open var LPVDiffuseOcclusionExponent: Number
    open var LPVSpecularOcclusionExponent: Number
    open var LPVDiffuseOcclusionIntensity: Number
    open var LPVSpecularOcclusionIntensity: Number
    open var LPVFadeRange: Number
    open var LPVDirectionalOcclusionFadeRange: Number
    open fun clone(): LightPropagationVolumeSettings

    companion object {
        fun C(Other: UObject): LightPropagationVolumeSettings
        fun C(Other: Any): LightPropagationVolumeSettings
    }
}

external open class LightPropagationVolumeBlendable : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Settings: LightPropagationVolumeSettings
    open var BlendWeight: Number

    companion object {
        fun Load(ResourceName: String): LightPropagationVolumeBlendable
        fun Find(Outer: UObject, ResourceName: String): LightPropagationVolumeBlendable
        fun GetDefaultObject(): LightPropagationVolumeBlendable
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LightPropagationVolumeBlendable
        fun C(Other: UObject): LightPropagationVolumeBlendable
        fun C(Other: Any): LightPropagationVolumeBlendable
    }
}

external open class SignificanceManager : UObject {
    constructor()
    constructor(Outer: UObject)
    open var SignificanceManagerClassName: SoftClassPath

    companion object {
        fun Load(ResourceName: String): SignificanceManager
        fun Find(Outer: UObject, ResourceName: String): SignificanceManager
        fun GetDefaultObject(): SignificanceManager
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SignificanceManager
        fun C(Other: UObject): SignificanceManager
        fun C(Other: Any): SignificanceManager
    }
}

external interface `T$96` {
    var OutState: Number
    var bShouldProcess: Boolean
}

external open class AnimationSharingStateProcessor : UObject {
    constructor()
    constructor(Outer: UObject)
    open var AnimationStateEnum: Enum
    open fun ProcessActorState(OutState: Number = definedExternally, InActor: Actor = definedExternally, CurrentState: Number = definedExternally, OnDemandState: Number = definedExternally, bShouldProcess: Boolean = definedExternally): `T$96`
    open fun GetAnimationStateEnum(): Enum

    companion object {
        fun Load(ResourceName: String): AnimationSharingStateProcessor
        fun Find(Outer: UObject, ResourceName: String): AnimationSharingStateProcessor
        fun GetDefaultObject(): AnimationSharingStateProcessor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationSharingStateProcessor
        fun C(Other: UObject): AnimationSharingStateProcessor
        fun C(Other: Any): AnimationSharingStateProcessor
    }
}

external open class AnimSharingInstance : UObject {
    constructor()
    constructor(Outer: UObject)
    open var RegisteredActors: Array<Actor>
    open var StateProcessor: AnimationSharingStateProcessor
    open var UsedAnimationSequences: Array<AnimSequence>
    open var StateEnum: Enum
    open var SharingActor: Actor

    companion object {
        fun Load(ResourceName: String): AnimSharingInstance
        fun Find(Outer: UObject, ResourceName: String): AnimSharingInstance
        fun GetDefaultObject(): AnimSharingInstance
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimSharingInstance
        fun C(Other: UObject): AnimSharingInstance
        fun C(Other: Any): AnimSharingInstance
    }
}

external interface `T$97` {
    var Actors: Array<Actor>
}

external open class AnimSharingStateInstance : AnimInstance {
    constructor()
    constructor(Outer: UObject)
    open var AnimationToPlay: AnimSequence
    open var PermutationTimeOffset: Number
    open var PlayRate: Number
    open var bStateBool: Boolean
    open var Instance: AnimSharingInstance
    open fun GetInstancedActors(Actors: Array<Actor> = definedExternally): `T$97`

    companion object {
        fun Load(ResourceName: String): AnimSharingStateInstance
        fun Find(Outer: UObject, ResourceName: String): AnimSharingStateInstance
        fun GetDefaultObject(): AnimSharingStateInstance
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimSharingStateInstance
        fun C(Other: UObject): AnimSharingStateInstance
        fun C(Other: Any): AnimSharingStateInstance
    }
}

external open class AnimSharingTransitionInstance : AnimInstance {
    constructor()
    constructor(Outer: UObject)
    open var FromComponent: Any
    open var ToComponent: Any
    open var BlendTime: Number
    open var bBlendBool: Boolean

    companion object {
        fun Load(ResourceName: String): AnimSharingTransitionInstance
        fun Find(Outer: UObject, ResourceName: String): AnimSharingTransitionInstance
        fun GetDefaultObject(): AnimSharingTransitionInstance
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimSharingTransitionInstance
        fun C(Other: UObject): AnimSharingTransitionInstance
        fun C(Other: Any): AnimSharingTransitionInstance
    }
}

external open class AnimSharingAdditiveInstance : AnimInstance {
    constructor()
    constructor(Outer: UObject)
    open var BaseComponent: Any
    open var AdditiveAnimation: Any
    open var Alpha: Number
    open var bStateBool: Boolean

    companion object {
        fun Load(ResourceName: String): AnimSharingAdditiveInstance
        fun Find(Outer: UObject, ResourceName: String): AnimSharingAdditiveInstance
        fun GetDefaultObject(): AnimSharingAdditiveInstance
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimSharingAdditiveInstance
        fun C(Other: UObject): AnimSharingAdditiveInstance
        fun C(Other: Any): AnimSharingAdditiveInstance
    }
}

external open class AnimationSetup {
    open var AnimSequence: AnimSequence
    open var AnimBlueprint: UnrealEngineClass
    open var NumRandomizedInstances: PerPlatformInt
    open var Enabled: PerPlatformBool
    open fun clone(): AnimationSetup

    companion object {
        fun C(Other: UObject): AnimationSetup
        fun C(Other: Any): AnimationSetup
    }
}

external open class AnimationStateEntry {
    open var State: Number
    open var AnimationSetups: Array<AnimationSetup>
    open var bOnDemand: Boolean
    open var bAdditive: Boolean
    open var BlendTime: Number
    open var bReturnToPreviousState: Boolean
    open var bSetNextState: Boolean
    open var NextState: Number
    open var MaximumNumberOfConcurrentInstances: PerPlatformInt
    open var WiggleTimePercentage: Number
    open var bRequiresCurves: Boolean
    open fun clone(): AnimationStateEntry

    companion object {
        fun C(Other: UObject): AnimationStateEntry
        fun C(Other: Any): AnimationStateEntry
    }
}

external open class PerSkeletonAnimationSharingSetup {
    open var Skeleton: Skeleton
    open var SkeletalMesh: SkeletalMesh
    open var BlendAnimBlueprint: UnrealEngineClass
    open var AdditiveAnimBlueprint: UnrealEngineClass
    open var StateProcessorClass: UnrealEngineClass
    open var AnimationStates: Array<AnimationStateEntry>
    open fun clone(): PerSkeletonAnimationSharingSetup

    companion object {
        fun C(Other: UObject): PerSkeletonAnimationSharingSetup
        fun C(Other: Any): PerSkeletonAnimationSharingSetup
    }
}

external open class AnimationSharingScalability {
    open var UseBlendTransitions: PerPlatformBool
    open var BlendSignificanceValue: PerPlatformFloat
    open var MaximumNumberConcurrentBlends: PerPlatformInt
    open var TickSignificanceValue: PerPlatformFloat
    open fun clone(): AnimationSharingScalability

    companion object {
        fun C(Other: UObject): AnimationSharingScalability
        fun C(Other: Any): AnimationSharingScalability
    }
}

external open class AnimationSharingSetup : UObject {
    constructor()
    constructor(Outer: UObject)
    open var SkeletonSetups: Array<PerSkeletonAnimationSharingSetup>
    open var ScalabilitySettings: AnimationSharingScalability

    companion object {
        fun Load(ResourceName: String): AnimationSharingSetup
        fun Find(Outer: UObject, ResourceName: String): AnimationSharingSetup
        fun GetDefaultObject(): AnimationSharingSetup
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationSharingSetup
        fun C(Other: UObject): AnimationSharingSetup
        fun C(Other: Any): AnimationSharingSetup
    }
}

external open class AnimationSharingManager : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Skeletons: Array<Skeleton>
    open var PerSkeletonData: Array<AnimSharingInstance>
    open fun RegisterActorWithSkeletonBP(InActor: Actor, SharingSkeleton: Skeleton)

    companion object {
        fun Load(ResourceName: String): AnimationSharingManager
        fun Find(Outer: UObject, ResourceName: String): AnimationSharingManager
        fun GetDefaultObject(): AnimationSharingManager
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationSharingManager
        fun GetAnimationSharingManager(WorldContextObject: UObject): AnimationSharingManager
        fun CreateAnimationSharingManager(WorldContextObject: UObject, Setup: AnimationSharingSetup): Boolean
        fun AnimationSharingEnabled(): Boolean
        fun C(Other: UObject): AnimationSharingManager
        fun C(Other: Any): AnimationSharingManager
    }
}

external open class EdGraph_ReferenceViewer : EdGraph {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EdGraph_ReferenceViewer
        fun Find(Outer: UObject, ResourceName: String): EdGraph_ReferenceViewer
        fun GetDefaultObject(): EdGraph_ReferenceViewer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EdGraph_ReferenceViewer
        fun C(Other: UObject): EdGraph_ReferenceViewer
        fun C(Other: Any): EdGraph_ReferenceViewer
    }
}

external open class EdGraphNode_Reference : EdGraphNode {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EdGraphNode_Reference
        fun Find(Outer: UObject, ResourceName: String): EdGraphNode_Reference
        fun GetDefaultObject(): EdGraphNode_Reference
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EdGraphNode_Reference
        fun C(Other: UObject): EdGraphNode_Reference
        fun C(Other: Any): EdGraphNode_Reference
    }
}

external open class ReferenceViewerSchema : EdGraphSchema {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ReferenceViewerSchema
        fun Find(Outer: UObject, ResourceName: String): ReferenceViewerSchema
        fun GetDefaultObject(): ReferenceViewerSchema
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ReferenceViewerSchema
        fun C(Other: UObject): ReferenceViewerSchema
        fun C(Other: Any): ReferenceViewerSchema
    }
}

external open class ContentBrowserFrontEndFilterExtension : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ContentBrowserFrontEndFilterExtension
        fun Find(Outer: UObject, ResourceName: String): ContentBrowserFrontEndFilterExtension
        fun GetDefaultObject(): ContentBrowserFrontEndFilterExtension
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ContentBrowserFrontEndFilterExtension
        fun C(Other: UObject): ContentBrowserFrontEndFilterExtension
        fun C(Other: Any): ContentBrowserFrontEndFilterExtension
    }
}

external open class InternationalizationExportSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var CulturesToGenerate: Array<String>
    open var CommandletClass: String
    open var SourcePath: String
    open var DestinationPath: String
    open var PortableObjectName: String
    open var ManifestName: String
    open var ArchiveName: String
    open var bExportLoc: Boolean
    open var bImportLoc: Boolean
    open var bUseCultureDirectory: Boolean

    companion object {
        fun Load(ResourceName: String): InternationalizationExportSettings
        fun Find(Outer: UObject, ResourceName: String): InternationalizationExportSettings
        fun GetDefaultObject(): InternationalizationExportSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InternationalizationExportSettings
        fun C(Other: UObject): InternationalizationExportSettings
        fun C(Other: Any): InternationalizationExportSettings
    }
}

external open class TranslationPickerSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bSubmitTranslationPickerChangesToLocalizationService: Boolean

    companion object {
        fun Load(ResourceName: String): TranslationPickerSettings
        fun Find(Outer: UObject, ResourceName: String): TranslationPickerSettings
        fun GetDefaultObject(): TranslationPickerSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TranslationPickerSettings
        fun C(Other: UObject): TranslationPickerSettings
        fun C(Other: Any): TranslationPickerSettings
    }
}

external open class TranslationChange {
    open var Version: String
    open var DateAndTime: DateTime
    open var Source: String
    open var Translation: String
    open fun clone(): TranslationChange

    companion object {
        fun C(Other: UObject): TranslationChange
        fun C(Other: Any): TranslationChange
    }
}

external open class TranslationContextInfo {
    open var Key: String
    open var Context: String
    open var Changes: Array<TranslationChange>
    open fun clone(): TranslationContextInfo

    companion object {
        fun C(Other: UObject): TranslationContextInfo
        fun C(Other: Any): TranslationContextInfo
    }
}

external open class TranslationUnit : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Namespace: String
    open var Key: String
    open var Source: String
    open var Translation: String
    open var Contexts: Array<TranslationContextInfo>
    open var HasBeenReviewed: Boolean
    open var TranslationBeforeImport: String
    open var LocresPath: String

    companion object {
        fun Load(ResourceName: String): TranslationUnit
        fun Find(Outer: UObject, ResourceName: String): TranslationUnit
        fun GetDefaultObject(): TranslationUnit
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TranslationUnit
        fun C(Other: UObject): TranslationUnit
        fun C(Other: Any): TranslationUnit
    }
}

external open class PixelInspectorView : UObject {
    constructor()
    constructor(Outer: UObject)
    open var FinalColor: LinearColor
    open var SceneColor: LinearColor
    open var PreExposure: Number
    open var Luminance: Number
    open var HdrColor: LinearColor
    open var Normal: Vector
    open var PerObjectGBufferData: Number
    open var Metallic: Number
    open var Specular: Number
    open var Roughness: Number
    open var MaterialShadingModel: String /* "MSM_Unlit" | "MSM_DefaultLit" | "MSM_Subsurface" | "MSM_PreintegratedSkin" | "MSM_ClearCoat" | "MSM_SubsurfaceProfile" | "MSM_TwoSidedFoliage" | "MSM_Hair" | "MSM_Cloth" | "MSM_Eye" | "MSM_NUM" | "MSM_FromMaterialExpression" | "MSM_MAX" */
    open var SelectiveOutputMask: Number
    open var BaseColor: LinearColor
    open var IndirectIrradiance: Number
    open var AmbientOcclusion: Number
    open var SubsurfaceColor: LinearColor
    open var SubsurfaceProfile: Vector
    open var Opacity: Number
    open var ClearCoat: Number
    open var ClearCoatRoughness: Number
    open var WorldNormal: Vector
    open var BackLit: Number
    open var Cloth: Number
    open var EyeTangent: Vector
    open var IrisMask: Number
    open var IrisDistance: Number

    companion object {
        fun Load(ResourceName: String): PixelInspectorView
        fun Find(Outer: UObject, ResourceName: String): PixelInspectorView
        fun GetDefaultObject(): PixelInspectorView
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PixelInspectorView
        fun C(Other: UObject): PixelInspectorView
        fun C(Other: Any): PixelInspectorView
    }
}

external open class EditorUtilityObject : UObject {
    constructor()
    constructor(Outer: UObject)
    open fun Run()

    companion object {
        fun Load(ResourceName: String): EditorUtilityObject
        fun Find(Outer: UObject, ResourceName: String): EditorUtilityObject
        fun GetDefaultObject(): EditorUtilityObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorUtilityObject
        fun C(Other: UObject): EditorUtilityObject
        fun C(Other: Any): EditorUtilityObject
    }
}

external open class ActorActionUtility : EditorUtilityObject {
    constructor()
    constructor(Outer: UObject)
    open fun GetSupportedClass(): UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): ActorActionUtility
        fun Find(Outer: UObject, ResourceName: String): ActorActionUtility
        fun GetDefaultObject(): ActorActionUtility
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorActionUtility
        fun C(Other: UObject): ActorActionUtility
        fun C(Other: Any): ActorActionUtility
    }
}

external open class AssetActionUtility : EditorUtilityObject {
    constructor()
    constructor(Outer: UObject)
    open fun GetSupportedClass(): UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): AssetActionUtility
        fun Find(Outer: UObject, ResourceName: String): AssetActionUtility
        fun GetDefaultObject(): AssetActionUtility
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AssetActionUtility
        fun C(Other: UObject): AssetActionUtility
        fun C(Other: Any): AssetActionUtility
    }
}

external open class EditorUtilityExtension : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EditorUtilityExtension
        fun Find(Outer: UObject, ResourceName: String): EditorUtilityExtension
        fun GetDefaultObject(): EditorUtilityExtension
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorUtilityExtension
        fun C(Other: UObject): EditorUtilityExtension
        fun C(Other: Any): EditorUtilityExtension
    }
}

external open class EditorUtilityActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open fun Run()

    companion object {
        fun GetDefaultObject(): EditorUtilityActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorUtilityActor
        fun C(Other: UObject): EditorUtilityActor
        fun C(Other: Any): EditorUtilityActor
    }
}

external open class EditorUtilityActorComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EditorUtilityActorComponent
        fun Find(Outer: UObject, ResourceName: String): EditorUtilityActorComponent
        fun GetDefaultObject(): EditorUtilityActorComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorUtilityActorComponent
        fun C(Other: UObject): EditorUtilityActorComponent
        fun C(Other: Any): EditorUtilityActorComponent
    }
}

external open class EditorUtilityBlueprint : Blueprint {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EditorUtilityBlueprint
        fun Find(Outer: UObject, ResourceName: String): EditorUtilityBlueprint
        fun GetDefaultObject(): EditorUtilityBlueprint
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorUtilityBlueprint
        fun C(Other: UObject): EditorUtilityBlueprint
        fun C(Other: Any): EditorUtilityBlueprint
    }
}

external open class EditorUtilityBlueprintFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var ParentClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): EditorUtilityBlueprintFactory
        fun Find(Outer: UObject, ResourceName: String): EditorUtilityBlueprintFactory
        fun GetDefaultObject(): EditorUtilityBlueprintFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorUtilityBlueprintFactory
        fun C(Other: UObject): EditorUtilityBlueprintFactory
        fun C(Other: Any): EditorUtilityBlueprintFactory
    }
}

external open class EditorUtilityCamera(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : CameraActor {
    companion object {
        fun GetDefaultObject(): EditorUtilityCamera
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorUtilityCamera
        fun C(Other: UObject): EditorUtilityCamera
        fun C(Other: Any): EditorUtilityCamera
    }
}

external interface `T$98` {
    var Origin: Vector
    var BoxExtent: Vector
    var SphereRadius: Number
}

external open class EditorUtilityLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)
    open fun GetActorReference(PathToActor: String): Actor

    companion object {
        fun Load(ResourceName: String): EditorUtilityLibrary
        fun Find(Outer: UObject, ResourceName: String): EditorUtilityLibrary
        fun GetDefaultObject(): EditorUtilityLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorUtilityLibrary
        fun RenameAsset(Asset: UObject, NewName: String)
        fun GetSelectionSet(): Array<Actor>
        fun GetSelectionBounds(Origin: Vector = definedExternally, BoxExtent: Vector = definedExternally, SphereRadius: Number = definedExternally): `T$98`
        fun GetSelectedAssets(): Array<UObject>
        fun GetSelectedAssetData(): Array<AssetData>
        fun C(Other: UObject): EditorUtilityLibrary
        fun C(Other: Any): EditorUtilityLibrary
    }
}

external open class EditorUtilityWidget : UserWidget {
    constructor()
    constructor(Outer: UObject)
    open var HelpText: String
    open var bAlwaysReregisterWithWindowsMenu: Boolean
    open var bAutoRunDefaultAction: Boolean
    open fun Run()

    companion object {
        fun Load(ResourceName: String): EditorUtilityWidget
        fun Find(Outer: UObject, ResourceName: String): EditorUtilityWidget
        fun GetDefaultObject(): EditorUtilityWidget
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorUtilityWidget
        fun C(Other: UObject): EditorUtilityWidget
        fun C(Other: Any): EditorUtilityWidget
    }
}

external open class EditorUtilityWidgetBlueprint : WidgetBlueprint {
    constructor()
    constructor(Outer: UObject)
    open var CreatedUMGWidget: EditorUtilityWidget

    companion object {
        fun Load(ResourceName: String): EditorUtilityWidgetBlueprint
        fun Find(Outer: UObject, ResourceName: String): EditorUtilityWidgetBlueprint
        fun GetDefaultObject(): EditorUtilityWidgetBlueprint
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorUtilityWidgetBlueprint
        fun C(Other: UObject): EditorUtilityWidgetBlueprint
        fun C(Other: Any): EditorUtilityWidgetBlueprint
    }
}

external open class EditorUtilitySubsystem : EditorSubsystem {
    constructor()
    constructor(Outer: UObject)
    open var LoadedUIs: Array<SoftObjectPath>
    open var StartupObjects: Array<SoftObjectPath>
    open var ObjectInstances: Any
    open fun SpawnAndRegisterTab(InBlueprint: EditorUtilityWidgetBlueprint): EditorUtilityWidget
    open fun ReleaseInstanceOfAsset(Asset: UObject)

    companion object {
        fun Load(ResourceName: String): EditorUtilitySubsystem
        fun Find(Outer: UObject, ResourceName: String): EditorUtilitySubsystem
        fun GetDefaultObject(): EditorUtilitySubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorUtilitySubsystem
        fun C(Other: UObject): EditorUtilitySubsystem
        fun C(Other: Any): EditorUtilitySubsystem
    }
}

external open class EditorUtilityWidgetBlueprintFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var BlueprintType: String /* "BPTYPE_Normal" | "BPTYPE_Const" | "BPTYPE_MacroLibrary" | "BPTYPE_Interface" | "BPTYPE_LevelScript" | "BPTYPE_FunctionLibrary" | "BPTYPE_MAX" */
    open var ParentClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): EditorUtilityWidgetBlueprintFactory
        fun Find(Outer: UObject, ResourceName: String): EditorUtilityWidgetBlueprintFactory
        fun GetDefaultObject(): EditorUtilityWidgetBlueprintFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorUtilityWidgetBlueprintFactory
        fun C(Other: UObject): EditorUtilityWidgetBlueprintFactory
        fun C(Other: Any): EditorUtilityWidgetBlueprintFactory
    }
}

external open class GlobalEditorUtilityBase : UObject {
    constructor()
    constructor(Outer: UObject)
    open var HelpText: String
    open var bDirtiedSelectionSet: Boolean
    open var bAutoRunDefaultAction: Boolean
    open var OnEachSelectedActor: UnrealEngineMulticastDelegate<(Actor: Actor, index: Number) -> Unit>
    open var OnEachSelectedAsset: UnrealEngineMulticastDelegate<(Asset: UObject, index: Number) -> Unit>
    open fun SetActorSelectionState(Actor: Actor, bShouldBeSelected: Boolean)
    open fun SelectNothing()
    open fun RenameAsset(Asset: UObject, NewName: String)
    open fun OnDefaultActionClicked()
    open fun GetSelectionSet(): Array<Actor>
    open fun GetSelectionBounds(Origin: Vector = definedExternally, BoxExtent: Vector = definedExternally, SphereRadius: Number = definedExternally): `T$98`
    open fun GetSelectedAssets(): Array<UObject>
    open fun GetEditorUserSettings(): EditorPerProjectUserSettings
    open fun GetActorReference(PathToActor: String): Actor
    open fun ForEachSelectedAsset()
    open fun ForEachSelectedActor()
    open fun ClearActorSelectionSet()

    companion object {
        fun Load(ResourceName: String): GlobalEditorUtilityBase
        fun Find(Outer: UObject, ResourceName: String): GlobalEditorUtilityBase
        fun GetDefaultObject(): GlobalEditorUtilityBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GlobalEditorUtilityBase
        fun C(Other: UObject): GlobalEditorUtilityBase
        fun C(Other: Any): GlobalEditorUtilityBase
    }
}

external interface `T$99` {
    var CameraLocation: Vector
    var CameraRotation: Rotator
    var `$`: Boolean
}

external open class PlacedEditorUtilityBase(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var HelpText: String
    open fun SetLevelViewportCameraInfo(CameraLocation: Vector, CameraRotation: Rotator)
    open fun SetActorSelectionState(Actor: Actor, bShouldBeSelected: Boolean)
    open fun SelectNothing()
    open fun GetSelectionSet(): Array<Actor>
    open fun GetLevelViewportCameraInfo(CameraLocation: Vector = definedExternally, CameraRotation: Rotator = definedExternally): `T$99`
    open fun GetActorReference(PathToActor: String): Actor
    open fun ClearActorSelectionSet()

    companion object {
        fun GetDefaultObject(): PlacedEditorUtilityBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PlacedEditorUtilityBase
        fun C(Other: UObject): PlacedEditorUtilityBase
        fun C(Other: Any): PlacedEditorUtilityBase
    }
}

external open class DataValidationCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DataValidationCommandlet
        fun Find(Outer: UObject, ResourceName: String): DataValidationCommandlet
        fun GetDefaultObject(): DataValidationCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DataValidationCommandlet
        fun C(Other: UObject): DataValidationCommandlet
        fun C(Other: Any): DataValidationCommandlet
    }
}

external open class DataValidationManager : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ExcludedDirectories: Array<DirectoryPath>
    open var bValidateOnSave: Boolean
    open var DataValidationManagerClassName: SoftClassPath

    companion object {
        fun Load(ResourceName: String): DataValidationManager
        fun Find(Outer: UObject, ResourceName: String): DataValidationManager
        fun GetDefaultObject(): DataValidationManager
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DataValidationManager
        fun C(Other: UObject): DataValidationManager
        fun C(Other: Any): DataValidationManager
    }
}

external object EDataValidationResult {
    var Invalid: String /* "Invalid" */
    var Valid: String /* "Valid" */
    var NotValidated: String /* "NotValidated" */
    var EDataValidationResult_MAX: String /* "EDataValidationResult_MAX" */
}

external interface `T$100` {
    var ValidationErrors: Array<String>
    var `$`: String /* "Invalid" | "Valid" | "NotValidated" | "EDataValidationResult_MAX" */
}

external interface `T$101` {
    var ValidationErrors: Array<String>
}

external open class EditorValidatorBase : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bIsEnabled: Boolean
    open fun ValidateLoadedAsset(InAsset: UObject, ValidationErrors: Array<String> = definedExternally): `T$100`
    open fun GetValidationResult(): String /* "Invalid" | "Valid" | "NotValidated" | "EDataValidationResult_MAX" */
    open fun CanValidateAsset(InAsset: UObject): Boolean
    open fun AssetPasses(InAsset: UObject)
    open fun AssetFails(InAsset: UObject, InMessage: String, ValidationErrors: Array<String> = definedExternally): `T$101`

    companion object {
        fun Load(ResourceName: String): EditorValidatorBase
        fun Find(Outer: UObject, ResourceName: String): EditorValidatorBase
        fun GetDefaultObject(): EditorValidatorBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorValidatorBase
        fun C(Other: UObject): EditorValidatorBase
        fun C(Other: Any): EditorValidatorBase
    }
}

external interface `T$102` {
    var ValidationErrors: Array<String>
    var `$`: String /* "Invalid" | "Valid" | "NotValidated" | "EDataValidationResult_MAX" */
}

external interface `T$103` {
    var AssetData: AssetData
    var ValidationErrors: Array<String>
    var `$`: String /* "Invalid" | "Valid" | "NotValidated" | "EDataValidationResult_MAX" */
}

external open class EditorValidatorSubsystem : EditorSubsystem {
    constructor()
    constructor(Outer: UObject)
    open var ExcludedDirectories: Array<DirectoryPath>
    open var bValidateOnSave: Boolean
    open var Validators: Any
    open var bValidateAssetsWhileSavingForCook: Boolean
    open var bAllowBlueprintValidators: Boolean
    open fun ValidateAssets(AssetDataList: Array<AssetData>, bSkipExcludedDirectories: Boolean, bShowIfNoFailures: Boolean): Number
    open fun IsObjectValid(InObject: UObject, ValidationErrors: Array<String> = definedExternally): `T$102`
    open fun IsAssetValid(AssetData: AssetData = definedExternally, ValidationErrors: Array<String> = definedExternally): `T$103`
    open fun AddValidator(InValidator: EditorValidatorBase)

    companion object {
        fun Load(ResourceName: String): EditorValidatorSubsystem
        fun Find(Outer: UObject, ResourceName: String): EditorValidatorSubsystem
        fun GetDefaultObject(): EditorValidatorSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorValidatorSubsystem
        fun C(Other: UObject): EditorValidatorSubsystem
        fun C(Other: Any): EditorValidatorSubsystem
    }
}

external open class AudioCurveSourceComponent : AudioComponent {
    constructor()
    constructor(Outer: UObject)
    open var CurveSourceBindingName: String
    open var CurveSyncOffset: Number

    companion object {
        fun Load(ResourceName: String): AudioCurveSourceComponent
        fun Find(Outer: UObject, ResourceName: String): AudioCurveSourceComponent
        fun GetDefaultObject(): AudioCurveSourceComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AudioCurveSourceComponent
        fun C(Other: UObject): AudioCurveSourceComponent
        fun C(Other: Any): AudioCurveSourceComponent
    }
}

external open class FacialAnimationBulkImporterSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var SourceImportPath: DirectoryPath
    open var TargetImportPath: DirectoryPath
    open var CurveNodeName: String

    companion object {
        fun Load(ResourceName: String): FacialAnimationBulkImporterSettings
        fun Find(Outer: UObject, ResourceName: String): FacialAnimationBulkImporterSettings
        fun GetDefaultObject(): FacialAnimationBulkImporterSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FacialAnimationBulkImporterSettings
        fun C(Other: UObject): FacialAnimationBulkImporterSettings
        fun C(Other: Any): FacialAnimationBulkImporterSettings
    }
}

external open class GameplayTagSearchFilter : ContentBrowserFrontEndFilterExtension {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GameplayTagSearchFilter
        fun Find(Outer: UObject, ResourceName: String): GameplayTagSearchFilter
        fun GetDefaultObject(): GameplayTagSearchFilter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayTagSearchFilter
        fun C(Other: UObject): GameplayTagSearchFilter
        fun C(Other: Any): GameplayTagSearchFilter
    }
}

external open class GameplayTagsK2Node_LiteralGameplayTag : K2Node {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GameplayTagsK2Node_LiteralGameplayTag
        fun Find(Outer: UObject, ResourceName: String): GameplayTagsK2Node_LiteralGameplayTag
        fun GetDefaultObject(): GameplayTagsK2Node_LiteralGameplayTag
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayTagsK2Node_LiteralGameplayTag
        fun C(Other: UObject): GameplayTagsK2Node_LiteralGameplayTag
        fun C(Other: Any): GameplayTagsK2Node_LiteralGameplayTag
    }
}

external open class GameplayTagsK2Node_MultiCompareBase : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var NumberOfPins: Number
    open var PinNames: Array<String>

    companion object {
        fun Load(ResourceName: String): GameplayTagsK2Node_MultiCompareBase
        fun Find(Outer: UObject, ResourceName: String): GameplayTagsK2Node_MultiCompareBase
        fun GetDefaultObject(): GameplayTagsK2Node_MultiCompareBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayTagsK2Node_MultiCompareBase
        fun C(Other: UObject): GameplayTagsK2Node_MultiCompareBase
        fun C(Other: Any): GameplayTagsK2Node_MultiCompareBase
    }
}

external open class GameplayTagsK2Node_MultiCompareGameplayTagAssetInterface : GameplayTagsK2Node_MultiCompareBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GameplayTagsK2Node_MultiCompareGameplayTagAssetInterface
        fun Find(Outer: UObject, ResourceName: String): GameplayTagsK2Node_MultiCompareGameplayTagAssetInterface
        fun GetDefaultObject(): GameplayTagsK2Node_MultiCompareGameplayTagAssetInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayTagsK2Node_MultiCompareGameplayTagAssetInterface
        fun C(Other: UObject): GameplayTagsK2Node_MultiCompareGameplayTagAssetInterface
        fun C(Other: Any): GameplayTagsK2Node_MultiCompareGameplayTagAssetInterface
    }
}

external open class GameplayTagsK2Node_MultiCompareGameplayTagAssetInterfaceSingleTags : GameplayTagsK2Node_MultiCompareBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GameplayTagsK2Node_MultiCompareGameplayTagAssetInterfaceSingleTags
        fun Find(Outer: UObject, ResourceName: String): GameplayTagsK2Node_MultiCompareGameplayTagAssetInterfaceSingleTags
        fun GetDefaultObject(): GameplayTagsK2Node_MultiCompareGameplayTagAssetInterfaceSingleTags
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayTagsK2Node_MultiCompareGameplayTagAssetInterfaceSingleTags
        fun C(Other: UObject): GameplayTagsK2Node_MultiCompareGameplayTagAssetInterfaceSingleTags
        fun C(Other: Any): GameplayTagsK2Node_MultiCompareGameplayTagAssetInterfaceSingleTags
    }
}

external open class GameplayTagsK2Node_MultiCompareGameplayTagContainer : GameplayTagsK2Node_MultiCompareBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GameplayTagsK2Node_MultiCompareGameplayTagContainer
        fun Find(Outer: UObject, ResourceName: String): GameplayTagsK2Node_MultiCompareGameplayTagContainer
        fun GetDefaultObject(): GameplayTagsK2Node_MultiCompareGameplayTagContainer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayTagsK2Node_MultiCompareGameplayTagContainer
        fun C(Other: UObject): GameplayTagsK2Node_MultiCompareGameplayTagContainer
        fun C(Other: Any): GameplayTagsK2Node_MultiCompareGameplayTagContainer
    }
}

external open class GameplayTagsK2Node_MultiCompareGameplayTagContainerSingleTags : GameplayTagsK2Node_MultiCompareBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GameplayTagsK2Node_MultiCompareGameplayTagContainerSingleTags
        fun Find(Outer: UObject, ResourceName: String): GameplayTagsK2Node_MultiCompareGameplayTagContainerSingleTags
        fun GetDefaultObject(): GameplayTagsK2Node_MultiCompareGameplayTagContainerSingleTags
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayTagsK2Node_MultiCompareGameplayTagContainerSingleTags
        fun C(Other: UObject): GameplayTagsK2Node_MultiCompareGameplayTagContainerSingleTags
        fun C(Other: Any): GameplayTagsK2Node_MultiCompareGameplayTagContainerSingleTags
    }
}

external open class GameplayTagsK2Node_SwitchGameplayTag : K2Node_Switch {
    constructor()
    constructor(Outer: UObject)
    open var PinTags: Array<GameplayTag>
    open var PinNames: Array<String>

    companion object {
        fun Load(ResourceName: String): GameplayTagsK2Node_SwitchGameplayTag
        fun Find(Outer: UObject, ResourceName: String): GameplayTagsK2Node_SwitchGameplayTag
        fun GetDefaultObject(): GameplayTagsK2Node_SwitchGameplayTag
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayTagsK2Node_SwitchGameplayTag
        fun C(Other: UObject): GameplayTagsK2Node_SwitchGameplayTag
        fun C(Other: Any): GameplayTagsK2Node_SwitchGameplayTag
    }
}

external open class GameplayTagsK2Node_SwitchGameplayTagContainer : K2Node_Switch {
    constructor()
    constructor(Outer: UObject)
    open var PinContainers: Array<GameplayTagContainer>
    open var PinNames: Array<String>

    companion object {
        fun Load(ResourceName: String): GameplayTagsK2Node_SwitchGameplayTagContainer
        fun Find(Outer: UObject, ResourceName: String): GameplayTagsK2Node_SwitchGameplayTagContainer
        fun GetDefaultObject(): GameplayTagsK2Node_SwitchGameplayTagContainer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayTagsK2Node_SwitchGameplayTagContainer
        fun C(Other: UObject): GameplayTagsK2Node_SwitchGameplayTagContainer
        fun C(Other: Any): GameplayTagsK2Node_SwitchGameplayTagContainer
    }
}

external open class LuminARUObjectManager : UObject {
    constructor()
    constructor(Outer: UObject)
    open var AllAnchors: Array<ARPin>

    companion object {
        fun Load(ResourceName: String): LuminARUObjectManager
        fun Find(Outer: UObject, ResourceName: String): LuminARUObjectManager
        fun GetDefaultObject(): LuminARUObjectManager
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LuminARUObjectManager
        fun C(Other: UObject): LuminARUObjectManager
        fun C(Other: Any): LuminARUObjectManager
    }
}

external open class LuminARSessionFunctionLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LuminARSessionFunctionLibrary
        fun Find(Outer: UObject, ResourceName: String): LuminARSessionFunctionLibrary
        fun GetDefaultObject(): LuminARSessionFunctionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LuminARSessionFunctionLibrary
        fun StartLuminARSession(WorldContextObject: UObject, LatentInfo: LatentActionInfo, Configuration: LuminARSessionConfig)
        fun C(Other: UObject): LuminARSessionFunctionLibrary
        fun C(Other: Any): LuminARSessionFunctionLibrary
    }
}

external object ELuminARTrackingState {
    var Tracking: String /* "Tracking" */
    var NotTracking: String /* "NotTracking" */
    var StoppedTracking: String /* "StoppedTracking" */
    var ELuminARTrackingState_MAX: String /* "ELuminARTrackingState_MAX" */
}

external interface `T$104` {
    var OutLightEstimate: LuminARLightEstimate
}

external open class LuminARLightEstimate {
    open var bIsValid: Boolean
    open var PixelIntensity: Number
    open var RGBScaleFactor: Vector
    open fun clone(): LuminARLightEstimate
    open fun GetLightEstimation(): `T$104`

    companion object {
        fun C(Other: UObject): LuminARLightEstimate
        fun C(Other: Any): LuminARLightEstimate
        fun GetLightEstimation(OutLightEstimate: LuminARLightEstimate = definedExternally): `T$104`
    }
}

external interface `T$105` {
    var OutHitResults: Array<ARTraceResult>
    var `$`: Boolean
}

external open class LuminARFrameFunctionLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LuminARFrameFunctionLibrary
        fun Find(Outer: UObject, ResourceName: String): LuminARFrameFunctionLibrary
        fun GetDefaultObject(): LuminARFrameFunctionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LuminARFrameFunctionLibrary
        fun LuminARLineTrace(WorldContextObject: UObject, ScreenPosition: Vector2D, TraceChannels: Any, OutHitResults: Array<ARTraceResult> = definedExternally): `T$105`
        fun GetTrackingState(): String /* "Tracking" | "NotTracking" | "StoppedTracking" | "ELuminARTrackingState_MAX" */
        fun GetLightEstimation(OutLightEstimate: LuminARLightEstimate = definedExternally): `T$104`
        fun C(Other: UObject): LuminARFrameFunctionLibrary
        fun C(Other: Any): LuminARFrameFunctionLibrary
    }
}

external object EMLControllerTrackingMode {
    var InputService: String /* "InputService" */
    var CoordinateFrameUID: String /* "CoordinateFrameUID" */
    var EMLControllerTrackingMode_MAX: String /* "EMLControllerTrackingMode_MAX" */
}

external object EMLControllerLEDPattern {
    var None: String /* "None" */
    var Clock01: String /* "Clock01" */
    var Clock02: String /* "Clock02" */
    var Clock03: String /* "Clock03" */
    var Clock04: String /* "Clock04" */
    var Clock05: String /* "Clock05" */
    var Clock06: String /* "Clock06" */
    var Clock07: String /* "Clock07" */
    var Clock08: String /* "Clock08" */
    var Clock09: String /* "Clock09" */
    var Clock10: String /* "Clock10" */
    var Clock11: String /* "Clock11" */
    var Clock12: String /* "Clock12" */
    var Clock01_07: String /* "Clock01_07" */
    var Clock02_08: String /* "Clock02_08" */
    var Clock03_09: String /* "Clock03_09" */
    var Clock04_10: String /* "Clock04_10" */
    var Clock05_11: String /* "Clock05_11" */
    var Clock06_12: String /* "Clock06_12" */
    var EMLControllerLEDPattern_MAX: String /* "EMLControllerLEDPattern_MAX" */
}

external object EMLControllerLEDColor {
    var BrightMissionRed: String /* "BrightMissionRed" */
    var PastelMissionRed: String /* "PastelMissionRed" */
    var BrightFloridaOrange: String /* "BrightFloridaOrange" */
    var PastelFloridaOrange: String /* "PastelFloridaOrange" */
    var BrightLunaYellow: String /* "BrightLunaYellow" */
    var PastelLunaYellow: String /* "PastelLunaYellow" */
    var BrightNebulaPink: String /* "BrightNebulaPink" */
    var PastelNebulaPink: String /* "PastelNebulaPink" */
    var BrightCosmicPurple: String /* "BrightCosmicPurple" */
    var PastelCosmicPurple: String /* "PastelCosmicPurple" */
    var BrightMysticBlue: String /* "BrightMysticBlue" */
    var PastelMysticBlue: String /* "PastelMysticBlue" */
    var BrightCelestialBlue: String /* "BrightCelestialBlue" */
    var PastelCelestialBlue: String /* "PastelCelestialBlue" */
    var BrightShaggleGreen: String /* "BrightShaggleGreen" */
    var PastelShaggleGreen: String /* "PastelShaggleGreen" */
    var EMLControllerLEDColor_MAX: String /* "EMLControllerLEDColor_MAX" */
}

external object EMLControllerLEDEffect {
    var RotateCW: String /* "RotateCW" */
    var RotateCCW: String /* "RotateCCW" */
    var Pulse: String /* "Pulse" */
    var PaintCW: String /* "PaintCW" */
    var PaintCCW: String /* "PaintCCW" */
    var Blink: String /* "Blink" */
    var EMLControllerLEDEffect_MAX: String /* "EMLControllerLEDEffect_MAX" */
}

external object EMLControllerLEDSpeed {
    var Slow: String /* "Slow" */
    var Medium: String /* "Medium" */
    var Fast: String /* "Fast" */
    var EMLControllerLEDSpeed_MAX: String /* "EMLControllerLEDSpeed_MAX" */
}

external object EMLControllerHapticPattern {
    var None: String /* "None" */
    var Click: String /* "Click" */
    var Bump: String /* "Bump" */
    var DoubleClick: String /* "DoubleClick" */
    var Buzz: String /* "Buzz" */
    var Tick: String /* "Tick" */
    var ForceDown: String /* "ForceDown" */
    var ForceUp: String /* "ForceUp" */
    var ForceDwell: String /* "ForceDwell" */
    var SecondForceDown: String /* "SecondForceDown" */
    var EMLControllerHapticPattern_MAX: String /* "EMLControllerHapticPattern_MAX" */
}

external object EMLControllerHapticIntensity {
    var Low: String /* "Low" */
    var Medium: String /* "Medium" */
    var High: String /* "High" */
    var EMLControllerHapticIntensity_MAX: String /* "EMLControllerHapticIntensity_MAX" */
}

external object EMLControllerType {
    var None: String /* "None" */
    var Device: String /* "Device" */
    var MobileApp: String /* "MobileApp" */
    var EMLControllerType_MAX: String /* "EMLControllerType_MAX" */
}

external interface `T$106` {
    var Hand: String /* "Left" | "Right" | "AnyHand" | "Pad" | "ExternalCamera" | "Gun" | "Special_1" | "Special_2" | "Special_3" | "Special_4" | "Special_5" | "Special_6" | "Special_7" | "Special_8" | "Special_9" | "Special_10" | "Special_11" | "ControllerHand_Count" | "EControllerHand_MAX" */
    var `$`: Boolean
}

external open class MagicLeapControllerFunctionLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MagicLeapControllerFunctionLibrary
        fun Find(Outer: UObject, ResourceName: String): MagicLeapControllerFunctionLibrary
        fun GetDefaultObject(): MagicLeapControllerFunctionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MagicLeapControllerFunctionLibrary
        fun SetMotionSourceForHand(Hand: String /* "Left" | "Right" | "AnyHand" | "Pad" | "ExternalCamera" | "Gun" | "Special_1" | "Special_2" | "Special_3" | "Special_4" | "Special_5" | "Special_6" | "Special_7" | "Special_8" | "Special_9" | "Special_10" | "Special_11" | "ControllerHand_Count" | "EControllerHand_MAX" */, MotionSource: String): Boolean
        fun SetControllerTrackingMode(TrackingMode: String /* "InputService" | "CoordinateFrameUID" | "EMLControllerTrackingMode_MAX" */): Boolean
        fun PlayLEDPattern(MotionSource: String, LEDPattern: String /* "None" | "Clock01" | "Clock02" | "Clock03" | "Clock04" | "Clock05" | "Clock06" | "Clock07" | "Clock08" | "Clock09" | "Clock10" | "Clock11" | "Clock12" | "Clock01_07" | "Clock02_08" | "Clock03_09" | "Clock04_10" | "Clock05_11" | "Clock06_12" | "EMLControllerLEDPattern_MAX" */, LEDColor: String /* "BrightMissionRed" | "PastelMissionRed" | "BrightFloridaOrange" | "PastelFloridaOrange" | "BrightLunaYellow" | "PastelLunaYellow" | "BrightNebulaPink" | "PastelNebulaPink" | "BrightCosmicPurple" | "PastelCosmicPurple" | "BrightMysticBlue" | "PastelMysticBlue" | "BrightCelestialBlue" | "PastelCelestialBlue" | "BrightShaggleGreen" | "PastelShaggleGreen" | "EMLControllerLEDColor_MAX" */, DurationInSec: Number): Boolean
        fun PlayLEDEffect(MotionSource: String, LEDEffect: String /* "RotateCW" | "RotateCCW" | "Pulse" | "PaintCW" | "PaintCCW" | "Blink" | "EMLControllerLEDEffect_MAX" */, LEDSpeed: String /* "Slow" | "Medium" | "Fast" | "EMLControllerLEDSpeed_MAX" */, LEDPattern: String /* "None" | "Clock01" | "Clock02" | "Clock03" | "Clock04" | "Clock05" | "Clock06" | "Clock07" | "Clock08" | "Clock09" | "Clock10" | "Clock11" | "Clock12" | "Clock01_07" | "Clock02_08" | "Clock03_09" | "Clock04_10" | "Clock05_11" | "Clock06_12" | "EMLControllerLEDPattern_MAX" */, LEDColor: String /* "BrightMissionRed" | "PastelMissionRed" | "BrightFloridaOrange" | "PastelFloridaOrange" | "BrightLunaYellow" | "PastelLunaYellow" | "BrightNebulaPink" | "PastelNebulaPink" | "BrightCosmicPurple" | "PastelCosmicPurple" | "BrightMysticBlue" | "PastelMysticBlue" | "BrightCelestialBlue" | "PastelCelestialBlue" | "BrightShaggleGreen" | "PastelShaggleGreen" | "EMLControllerLEDColor_MAX" */, DurationInSec: Number): Boolean
        fun PlayHapticPattern(MotionSource: String, HapticPattern: String /* "None" | "Click" | "Bump" | "DoubleClick" | "Buzz" | "Tick" | "ForceDown" | "ForceUp" | "ForceDwell" | "SecondForceDown" | "EMLControllerHapticPattern_MAX" */, Intensity: String /* "Low" | "Medium" | "High" | "EMLControllerHapticIntensity_MAX" */): Boolean
        fun PlayControllerLEDEffect(Hand: String /* "Left" | "Right" | "AnyHand" | "Pad" | "ExternalCamera" | "Gun" | "Special_1" | "Special_2" | "Special_3" | "Special_4" | "Special_5" | "Special_6" | "Special_7" | "Special_8" | "Special_9" | "Special_10" | "Special_11" | "ControllerHand_Count" | "EControllerHand_MAX" */, LEDEffect: String /* "RotateCW" | "RotateCCW" | "Pulse" | "PaintCW" | "PaintCCW" | "Blink" | "EMLControllerLEDEffect_MAX" */, LEDSpeed: String /* "Slow" | "Medium" | "Fast" | "EMLControllerLEDSpeed_MAX" */, LEDPattern: String /* "None" | "Clock01" | "Clock02" | "Clock03" | "Clock04" | "Clock05" | "Clock06" | "Clock07" | "Clock08" | "Clock09" | "Clock10" | "Clock11" | "Clock12" | "Clock01_07" | "Clock02_08" | "Clock03_09" | "Clock04_10" | "Clock05_11" | "Clock06_12" | "EMLControllerLEDPattern_MAX" */, LEDColor: String /* "BrightMissionRed" | "PastelMissionRed" | "BrightFloridaOrange" | "PastelFloridaOrange" | "BrightLunaYellow" | "PastelLunaYellow" | "BrightNebulaPink" | "PastelNebulaPink" | "BrightCosmicPurple" | "PastelCosmicPurple" | "BrightMysticBlue" | "PastelMysticBlue" | "BrightCelestialBlue" | "PastelCelestialBlue" | "BrightShaggleGreen" | "PastelShaggleGreen" | "EMLControllerLEDColor_MAX" */, DurationInSec: Number): Boolean
        fun PlayControllerLED(Hand: String /* "Left" | "Right" | "AnyHand" | "Pad" | "ExternalCamera" | "Gun" | "Special_1" | "Special_2" | "Special_3" | "Special_4" | "Special_5" | "Special_6" | "Special_7" | "Special_8" | "Special_9" | "Special_10" | "Special_11" | "ControllerHand_Count" | "EControllerHand_MAX" */, LEDPattern: String /* "None" | "Clock01" | "Clock02" | "Clock03" | "Clock04" | "Clock05" | "Clock06" | "Clock07" | "Clock08" | "Clock09" | "Clock10" | "Clock11" | "Clock12" | "Clock01_07" | "Clock02_08" | "Clock03_09" | "Clock04_10" | "Clock05_11" | "Clock06_12" | "EMLControllerLEDPattern_MAX" */, LEDColor: String /* "BrightMissionRed" | "PastelMissionRed" | "BrightFloridaOrange" | "PastelFloridaOrange" | "BrightLunaYellow" | "PastelLunaYellow" | "BrightNebulaPink" | "PastelNebulaPink" | "BrightCosmicPurple" | "PastelCosmicPurple" | "BrightMysticBlue" | "PastelMysticBlue" | "BrightCelestialBlue" | "PastelCelestialBlue" | "BrightShaggleGreen" | "PastelShaggleGreen" | "EMLControllerLEDColor_MAX" */, DurationInSec: Number): Boolean
        fun PlayControllerHapticFeedback(Hand: String /* "Left" | "Right" | "AnyHand" | "Pad" | "ExternalCamera" | "Gun" | "Special_1" | "Special_2" | "Special_3" | "Special_4" | "Special_5" | "Special_6" | "Special_7" | "Special_8" | "Special_9" | "Special_10" | "Special_11" | "ControllerHand_Count" | "EControllerHand_MAX" */, HapticPattern: String /* "None" | "Click" | "Bump" | "DoubleClick" | "Buzz" | "Tick" | "ForceDown" | "ForceUp" | "ForceDwell" | "SecondForceDown" | "EMLControllerHapticPattern_MAX" */, Intensity: String /* "Low" | "Medium" | "High" | "EMLControllerHapticIntensity_MAX" */): Boolean
        fun MaxSupportedMagicLeapControllers(): Number
        fun InvertControllerMapping()
        fun GetMotionSourceForHand(Hand: String /* "Left" | "Right" | "AnyHand" | "Pad" | "ExternalCamera" | "Gun" | "Special_1" | "Special_2" | "Special_3" | "Special_4" | "Special_5" | "Special_6" | "Special_7" | "Special_8" | "Special_9" | "Special_10" | "Special_11" | "ControllerHand_Count" | "EControllerHand_MAX" */): String
        fun GetMLControllerType(Hand: String /* "Left" | "Right" | "AnyHand" | "Pad" | "ExternalCamera" | "Gun" | "Special_1" | "Special_2" | "Special_3" | "Special_4" | "Special_5" | "Special_6" | "Special_7" | "Special_8" | "Special_9" | "Special_10" | "Special_11" | "ControllerHand_Count" | "EControllerHand_MAX" */): String /* "None" | "Device" | "MobileApp" | "EMLControllerType_MAX" */
        fun GetHandForMotionSource(MotionSource: String): String /* "Left" | "Right" | "AnyHand" | "Pad" | "ExternalCamera" | "Gun" | "Special_1" | "Special_2" | "Special_3" | "Special_4" | "Special_5" | "Special_6" | "Special_7" | "Special_8" | "Special_9" | "Special_10" | "Special_11" | "ControllerHand_Count" | "EControllerHand_MAX" */
        fun GetControllerType(MotionSource: String): String /* "None" | "Device" | "MobileApp" | "EMLControllerType_MAX" */
        fun GetControllerTrackingMode(): String /* "InputService" | "CoordinateFrameUID" | "EMLControllerTrackingMode_MAX" */
        fun GetControllerMapping(ControllerIndex: Number, Hand: String /* "Left" | "Right" | "AnyHand" | "Pad" | "ExternalCamera" | "Gun" | "Special_1" | "Special_2" | "Special_3" | "Special_4" | "Special_5" | "Special_6" | "Special_7" | "Special_8" | "Special_9" | "Special_10" | "Special_11" | "ControllerHand_Count" | "EControllerHand_MAX" */ = definedExternally): `T$106`
        fun C(Other: UObject): MagicLeapControllerFunctionLibrary
        fun C(Other: Any): MagicLeapControllerFunctionLibrary
    }
}

external object EMagicLeapTouchpadGestureType {
    var None: String /* "None" */
    var Tap: String /* "Tap" */
    var ForceTapDown: String /* "ForceTapDown" */
    var ForceTapUp: String /* "ForceTapUp" */
    var ForceDwell: String /* "ForceDwell" */
    var SecondForceDown: String /* "SecondForceDown" */
    var LongHold: String /* "LongHold" */
    var RadialScroll: String /* "RadialScroll" */
    var Swipe: String /* "Swipe" */
    var Scroll: String /* "Scroll" */
    var Pinch: String /* "Pinch" */
    var EMagicLeapTouchpadGestureType_MAX: String /* "EMagicLeapTouchpadGestureType_MAX" */
}

external object EMagicLeapTouchpadGestureDirection {
    var None: String /* "None" */
    var Up: String /* "Up" */
    var Down: String /* "Down" */
    var Left: String /* "Left" */
    var Right: String /* "Right" */
    var In: String /* "In" */
    var Out: String /* "Out" */
    var Clockwise: String /* "Clockwise" */
    var CounterClockwise: String /* "CounterClockwise" */
    var EMagicLeapTouchpadGestureDirection_MAX: String /* "EMagicLeapTouchpadGestureDirection_MAX" */
}

external open class MagicLeapTouchpadGesture {
    open var Hand: String /* "Left" | "Right" | "AnyHand" | "Pad" | "ExternalCamera" | "Gun" | "Special_1" | "Special_2" | "Special_3" | "Special_4" | "Special_5" | "Special_6" | "Special_7" | "Special_8" | "Special_9" | "Special_10" | "Special_11" | "ControllerHand_Count" | "EControllerHand_MAX" */
    open var MotionSource: String
    open var Type: String /* "None" | "Tap" | "ForceTapDown" | "ForceTapUp" | "ForceDwell" | "SecondForceDown" | "LongHold" | "RadialScroll" | "Swipe" | "Scroll" | "Pinch" | "EMagicLeapTouchpadGestureType_MAX" */
    open var Direction: String /* "None" | "Up" | "Down" | "Left" | "Right" | "In" | "Out" | "Clockwise" | "CounterClockwise" | "EMagicLeapTouchpadGestureDirection_MAX" */
    open var PositionAndForce: Vector
    open var Speed: Number
    open var Distance: Number
    open var FingerGap: Number
    open var Radius: Number
    open var Angle: Number
    open fun clone(): MagicLeapTouchpadGesture

    companion object {
        fun C(Other: UObject): MagicLeapTouchpadGesture
        fun C(Other: Any): MagicLeapTouchpadGesture
    }
}

external open class TouchpadGesturesComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var OnTouchpadGestureStart: UnrealEngineMulticastDelegate<(GestureData: MagicLeapTouchpadGesture) -> Unit>
    open var OnTouchpadGestureContinue: UnrealEngineMulticastDelegate<(GestureData: MagicLeapTouchpadGesture) -> Unit>
    open var OnTouchpadGestureEnd: UnrealEngineMulticastDelegate<(GestureData: MagicLeapTouchpadGesture) -> Unit>

    companion object {
        fun Load(ResourceName: String): TouchpadGesturesComponent
        fun Find(Outer: UObject, ResourceName: String): TouchpadGesturesComponent
        fun GetDefaultObject(): TouchpadGesturesComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TouchpadGesturesComponent
        fun C(Other: UObject): TouchpadGesturesComponent
        fun C(Other: Any): TouchpadGesturesComponent
    }
}

external interface `T$107` {
    var OutGazeData: EyeTrackerStereoGazeData
    var `$`: Boolean
}

external open class EyeTrackerStereoGazeData {
    open var LeftEyeOrigin: Vector
    open var LeftEyeDirection: Vector
    open var RightEyeOrigin: Vector
    open var RightEyeDirection: Vector
    open var FixationPoint: Vector
    open var ConfidenceValue: Number
    open fun clone(): EyeTrackerStereoGazeData
    open fun GetStereoGazeData(): `T$107`

    companion object {
        fun C(Other: UObject): EyeTrackerStereoGazeData
        fun C(Other: Any): EyeTrackerStereoGazeData
        fun GetStereoGazeData(OutGazeData: EyeTrackerStereoGazeData = definedExternally): `T$107`
    }
}

external interface `T$108` {
    var OutGazeData: EyeTrackerGazeData
    var `$`: Boolean
}

external open class EyeTrackerGazeData {
    open var GazeOrigin: Vector
    open var GazeDirection: Vector
    open var FixationPoint: Vector
    open var ConfidenceValue: Number
    open fun clone(): EyeTrackerGazeData
    open fun GetGazeData(): `T$108`

    companion object {
        fun C(Other: UObject): EyeTrackerGazeData
        fun C(Other: Any): EyeTrackerGazeData
        fun GetGazeData(OutGazeData: EyeTrackerGazeData = definedExternally): `T$108`
    }
}

external open class EyeTrackerFunctionLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EyeTrackerFunctionLibrary
        fun Find(Outer: UObject, ResourceName: String): EyeTrackerFunctionLibrary
        fun GetDefaultObject(): EyeTrackerFunctionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EyeTrackerFunctionLibrary
        fun SetEyeTrackedPlayer(PlayerController: PlayerController)
        fun IsStereoGazeDataAvailable(): Boolean
        fun IsEyeTrackerConnected(): Boolean
        fun GetStereoGazeData(OutGazeData: EyeTrackerStereoGazeData = definedExternally): `T$107`
        fun GetGazeData(OutGazeData: EyeTrackerGazeData = definedExternally): `T$108`
        fun C(Other: UObject): EyeTrackerFunctionLibrary
        fun C(Other: Any): EyeTrackerFunctionLibrary
    }
}

external interface `T$109` {
    var FixationComfort: MagicLeapFixationComfort
    var `$`: Boolean
}

external open class MagicLeapFixationComfort {
    open var FixationDepthIsUncomfortable: Boolean
    open var FixationDepthViolationHasOccurred: Boolean
    open var RemainingTimeAtUncomfortableDepth: Number
    open fun clone(): MagicLeapFixationComfort
    open fun GetFixationComfort(): `T$109`

    companion object {
        fun C(Other: UObject): MagicLeapFixationComfort
        fun C(Other: Any): MagicLeapFixationComfort
        fun GetFixationComfort(FixationComfort: MagicLeapFixationComfort = definedExternally): `T$109`
    }
}

external interface `T$110` {
    var BlinkState: MagicLeapEyeBlinkState
    var `$`: Boolean
}

external open class MagicLeapEyeBlinkState {
    open var LeftEyeBlinked: Boolean
    open var RightEyeBlinked: Boolean
    open fun clone(): MagicLeapEyeBlinkState
    open fun GetEyeBlinkState(): `T$110`

    companion object {
        fun C(Other: UObject): MagicLeapEyeBlinkState
        fun C(Other: Any): MagicLeapEyeBlinkState
        fun GetEyeBlinkState(BlinkState: MagicLeapEyeBlinkState = definedExternally): `T$110`
    }
}

external object EMagicLeapEyeTrackingCalibrationStatus {
    var None: String /* "None" */
    var Bad: String /* "Bad" */
    var Good: String /* "Good" */
    var EMagicLeapEyeTrackingCalibrationStatus_MAX: String /* "EMagicLeapEyeTrackingCalibrationStatus_MAX" */
}

external open class MagicLeapEyeTrackerFunctionLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MagicLeapEyeTrackerFunctionLibrary
        fun Find(Outer: UObject, ResourceName: String): MagicLeapEyeTrackerFunctionLibrary
        fun GetDefaultObject(): MagicLeapEyeTrackerFunctionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MagicLeapEyeTrackerFunctionLibrary
        fun IsEyeTrackerCalibrated(): Boolean
        fun GetFixationComfort(FixationComfort: MagicLeapFixationComfort = definedExternally): `T$109`
        fun GetEyeBlinkState(BlinkState: MagicLeapEyeBlinkState = definedExternally): `T$110`
        fun GetCalibrationStatus(): String /* "None" | "Bad" | "Good" | "EMagicLeapEyeTrackingCalibrationStatus_MAX" */
        fun C(Other: UObject): MagicLeapEyeTrackerFunctionLibrary
        fun C(Other: Any): MagicLeapEyeTrackerFunctionLibrary
    }
}

external open class LiveLinkRole : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LiveLinkRole
        fun Find(Outer: UObject, ResourceName: String): LiveLinkRole
        fun GetDefaultObject(): LiveLinkRole
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkRole
        fun C(Other: UObject): LiveLinkRole
        fun C(Other: Any): LiveLinkRole
    }
}

external open class LiveLinkBasicRole : LiveLinkRole {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LiveLinkBasicRole
        fun Find(Outer: UObject, ResourceName: String): LiveLinkBasicRole
        fun GetDefaultObject(): LiveLinkBasicRole
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkBasicRole
        fun C(Other: UObject): LiveLinkBasicRole
        fun C(Other: Any): LiveLinkBasicRole
    }
}

external open class LiveLinkAnimationRole : LiveLinkBasicRole {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LiveLinkAnimationRole
        fun Find(Outer: UObject, ResourceName: String): LiveLinkAnimationRole
        fun GetDefaultObject(): LiveLinkAnimationRole
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkAnimationRole
        fun C(Other: UObject): LiveLinkAnimationRole
        fun C(Other: Any): LiveLinkAnimationRole
    }
}

external open class LiveLinkFrameInterpolationProcessor : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LiveLinkFrameInterpolationProcessor
        fun Find(Outer: UObject, ResourceName: String): LiveLinkFrameInterpolationProcessor
        fun GetDefaultObject(): LiveLinkFrameInterpolationProcessor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkFrameInterpolationProcessor
        fun C(Other: UObject): LiveLinkFrameInterpolationProcessor
        fun C(Other: Any): LiveLinkFrameInterpolationProcessor
    }
}

external open class LiveLinkBasicFrameInterpolateProcessor : LiveLinkFrameInterpolationProcessor {
    constructor()
    constructor(Outer: UObject)
    open var bInterpolatePropertyValues: Boolean

    companion object {
        fun Load(ResourceName: String): LiveLinkBasicFrameInterpolateProcessor
        fun Find(Outer: UObject, ResourceName: String): LiveLinkBasicFrameInterpolateProcessor
        fun GetDefaultObject(): LiveLinkBasicFrameInterpolateProcessor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkBasicFrameInterpolateProcessor
        fun C(Other: UObject): LiveLinkBasicFrameInterpolateProcessor
        fun C(Other: Any): LiveLinkBasicFrameInterpolateProcessor
    }
}

external open class LiveLinkAnimationFrameInterpolateProcessor : LiveLinkBasicFrameInterpolateProcessor {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LiveLinkAnimationFrameInterpolateProcessor
        fun Find(Outer: UObject, ResourceName: String): LiveLinkAnimationFrameInterpolateProcessor
        fun GetDefaultObject(): LiveLinkAnimationFrameInterpolateProcessor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkAnimationFrameInterpolateProcessor
        fun C(Other: UObject): LiveLinkAnimationFrameInterpolateProcessor
        fun C(Other: Any): LiveLinkAnimationFrameInterpolateProcessor
    }
}

external open class LiveLinkFrameTranslator : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LiveLinkFrameTranslator
        fun Find(Outer: UObject, ResourceName: String): LiveLinkFrameTranslator
        fun GetDefaultObject(): LiveLinkFrameTranslator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkFrameTranslator
        fun C(Other: UObject): LiveLinkFrameTranslator
        fun C(Other: Any): LiveLinkFrameTranslator
    }
}

external open class LiveLinkAnimationRoleToTransform : LiveLinkFrameTranslator {
    constructor()
    constructor(Outer: UObject)
    open var BoneName: String

    companion object {
        fun Load(ResourceName: String): LiveLinkAnimationRoleToTransform
        fun Find(Outer: UObject, ResourceName: String): LiveLinkAnimationRoleToTransform
        fun GetDefaultObject(): LiveLinkAnimationRoleToTransform
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkAnimationRoleToTransform
        fun C(Other: UObject): LiveLinkAnimationRoleToTransform
        fun C(Other: Any): LiveLinkAnimationRoleToTransform
    }
}

external open class LiveLinkTransformRole : LiveLinkBasicRole {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LiveLinkTransformRole
        fun Find(Outer: UObject, ResourceName: String): LiveLinkTransformRole
        fun GetDefaultObject(): LiveLinkTransformRole
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkTransformRole
        fun C(Other: UObject): LiveLinkTransformRole
        fun C(Other: Any): LiveLinkTransformRole
    }
}

external open class LiveLinkCameraRole : LiveLinkTransformRole {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LiveLinkCameraRole
        fun Find(Outer: UObject, ResourceName: String): LiveLinkCameraRole
        fun GetDefaultObject(): LiveLinkCameraRole
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkCameraRole
        fun C(Other: UObject): LiveLinkCameraRole
        fun C(Other: Any): LiveLinkCameraRole
    }
}

external open class LiveLinkController : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LiveLinkController
        fun Find(Outer: UObject, ResourceName: String): LiveLinkController
        fun GetDefaultObject(): LiveLinkController
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkController
        fun C(Other: UObject): LiveLinkController
        fun C(Other: Any): LiveLinkController
    }
}

external object ELiveLinkSourceMode {
    var Latest: String /* "Latest" */
    var EngineTime: String /* "EngineTime" */
    var Timecode: String /* "Timecode" */
    var ELiveLinkSourceMode_MAX: String /* "ELiveLinkSourceMode_MAX" */
}

external open class LiveLinkSourceBufferManagementSettings {
    open var ValidEngineTime: Number
    open var EngineTimeOffset: Number
    open var TimecodeFrameRate: FrameRate
    open var ValidTimecodeFrame: Number
    open var TimecodeFrameOffset: Number
    open var MaxNumberOfFrameToBuffered: Number
    open fun clone(): LiveLinkSourceBufferManagementSettings

    companion object {
        fun C(Other: UObject): LiveLinkSourceBufferManagementSettings
        fun C(Other: Any): LiveLinkSourceBufferManagementSettings
    }
}

external open class LiveLinkSourceFactory : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LiveLinkSourceFactory
        fun Find(Outer: UObject, ResourceName: String): LiveLinkSourceFactory
        fun GetDefaultObject(): LiveLinkSourceFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkSourceFactory
        fun C(Other: UObject): LiveLinkSourceFactory
        fun C(Other: Any): LiveLinkSourceFactory
    }
}

external open class LiveLinkSubjectName {
    open var Name: String
    open fun clone(): LiveLinkSubjectName

    companion object {
        fun C(Other: UObject): LiveLinkSubjectName
        fun C(Other: Any): LiveLinkSubjectName
    }
}

external open class LiveLinkSourceDebugInfo {
    open var SubjectName: LiveLinkSubjectName
    open var SnapshotIndex: Number
    open var NumberOfBufferAtSnapshot: Number
    open fun clone(): LiveLinkSourceDebugInfo

    companion object {
        fun C(Other: UObject): LiveLinkSourceDebugInfo
        fun C(Other: Any): LiveLinkSourceDebugInfo
    }
}

external open class LiveLinkSourceSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Mode: String /* "Latest" | "EngineTime" | "Timecode" | "ELiveLinkSourceMode_MAX" */
    open var BufferSettings: LiveLinkSourceBufferManagementSettings
    open var ConnectionString: String
    open var Factory: UnrealEngineClass
    open var SourceDebugInfos: Array<LiveLinkSourceDebugInfo>

    companion object {
        fun Load(ResourceName: String): LiveLinkSourceSettings
        fun Find(Outer: UObject, ResourceName: String): LiveLinkSourceSettings
        fun GetDefaultObject(): LiveLinkSourceSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkSourceSettings
        fun C(Other: UObject): LiveLinkSourceSettings
        fun C(Other: Any): LiveLinkSourceSettings
    }
}

external open class LiveLinkCurveConversionSettings {
    open var CurveConversionAssetMap: Any
    open fun clone(): LiveLinkCurveConversionSettings

    companion object {
        fun C(Other: UObject): LiveLinkCurveConversionSettings
        fun C(Other: Any): LiveLinkCurveConversionSettings
    }
}

external open class LiveLinkCurveRemapSettings : LiveLinkSourceSettings {
    constructor()
    constructor(Outer: UObject)
    open var CurveConversionSettings: LiveLinkCurveConversionSettings

    companion object {
        fun Load(ResourceName: String): LiveLinkCurveRemapSettings
        fun Find(Outer: UObject, ResourceName: String): LiveLinkCurveRemapSettings
        fun GetDefaultObject(): LiveLinkCurveRemapSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkCurveRemapSettings
        fun C(Other: UObject): LiveLinkCurveRemapSettings
        fun C(Other: Any): LiveLinkCurveRemapSettings
    }
}

external open class LiveLinkFramePreProcessor : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LiveLinkFramePreProcessor
        fun Find(Outer: UObject, ResourceName: String): LiveLinkFramePreProcessor
        fun GetDefaultObject(): LiveLinkFramePreProcessor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkFramePreProcessor
        fun C(Other: UObject): LiveLinkFramePreProcessor
        fun C(Other: Any): LiveLinkFramePreProcessor
    }
}

external open class LiveLinkLightRole : LiveLinkTransformRole {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LiveLinkLightRole
        fun Find(Outer: UObject, ResourceName: String): LiveLinkLightRole
        fun GetDefaultObject(): LiveLinkLightRole
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkLightRole
        fun C(Other: UObject): LiveLinkLightRole
        fun C(Other: Any): LiveLinkLightRole
    }
}

external open class LiveLinkSubjectSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var PreProcessors: Array<LiveLinkFramePreProcessor>
    open var InterpolationProcessor: LiveLinkFrameInterpolationProcessor
    open var Translators: Array<LiveLinkFrameTranslator>
    open var Role: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): LiveLinkSubjectSettings
        fun Find(Outer: UObject, ResourceName: String): LiveLinkSubjectSettings
        fun GetDefaultObject(): LiveLinkSubjectSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkSubjectSettings
        fun C(Other: UObject): LiveLinkSubjectSettings
        fun C(Other: Any): LiveLinkSubjectSettings
    }
}

external object ELiveLinkAxis {
    var X: String /* "X" */
    var Y: String /* "Y" */
    var Z: String /* "Z" */
    var XNeg: String /* "XNeg" */
    var YNeg: String /* "YNeg" */
    var ZNeg: String /* "ZNeg" */
    var ELiveLinkAxis_MAX: String /* "ELiveLinkAxis_MAX" */
}

external open class LiveLinkAxisSwitchPreProcessor : LiveLinkFramePreProcessor {
    constructor()
    constructor(Outer: UObject)
    open var AxisX: String /* "X" | "Y" | "Z" | "XNeg" | "YNeg" | "ZNeg" | "ELiveLinkAxis_MAX" */
    open var AxisY: String /* "X" | "Y" | "Z" | "XNeg" | "YNeg" | "ZNeg" | "ELiveLinkAxis_MAX" */
    open var AxisZ: String /* "X" | "Y" | "Z" | "XNeg" | "YNeg" | "ZNeg" | "ELiveLinkAxis_MAX" */

    companion object {
        fun Load(ResourceName: String): LiveLinkAxisSwitchPreProcessor
        fun Find(Outer: UObject, ResourceName: String): LiveLinkAxisSwitchPreProcessor
        fun GetDefaultObject(): LiveLinkAxisSwitchPreProcessor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkAxisSwitchPreProcessor
        fun C(Other: UObject): LiveLinkAxisSwitchPreProcessor
        fun C(Other: Any): LiveLinkAxisSwitchPreProcessor
    }
}

external open class LiveLinkVirtualSubject : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Role: UnrealEngineClass
    open var Subjects: Array<LiveLinkSubjectName>
    open var FrameTranslators: Array<LiveLinkFrameTranslator>

    companion object {
        fun Load(ResourceName: String): LiveLinkVirtualSubject
        fun Find(Outer: UObject, ResourceName: String): LiveLinkVirtualSubject
        fun GetDefaultObject(): LiveLinkVirtualSubject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkVirtualSubject
        fun C(Other: UObject): LiveLinkVirtualSubject
        fun C(Other: Any): LiveLinkVirtualSubject
    }
}

external open class LiveLinkMagicLeapHandTrackingSourceFactory : LiveLinkSourceFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LiveLinkMagicLeapHandTrackingSourceFactory
        fun Find(Outer: UObject, ResourceName: String): LiveLinkMagicLeapHandTrackingSourceFactory
        fun GetDefaultObject(): LiveLinkMagicLeapHandTrackingSourceFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkMagicLeapHandTrackingSourceFactory
        fun C(Other: UObject): LiveLinkMagicLeapHandTrackingSourceFactory
        fun C(Other: Any): LiveLinkMagicLeapHandTrackingSourceFactory
    }
}

external object EHandTrackingGesture {
    var Finger: String /* "Finger" */
    var Fist: String /* "Fist" */
    var Pinch: String /* "Pinch" */
    var Thumb: String /* "Thumb" */
    var L: String /* "L" */
    var OpenHandBack: String /* "OpenHandBack" */
    var Ok: String /* "Ok" */
    var C: String /* "C" */
    var NoPose: String /* "NoPose" */
    var NoHand: String /* "NoHand" */
    var EHandTrackingGesture_MAX: String /* "EHandTrackingGesture_MAX" */
}

external object EHandTrackingKeypointFilterLevel {
    var NoFilter: String /* "NoFilter" */
    var SimpleSmoothing: String /* "SimpleSmoothing" */
    var PredictiveSmoothing: String /* "PredictiveSmoothing" */
    var EHandTrackingKeypointFilterLevel_MAX: String /* "EHandTrackingKeypointFilterLevel_MAX" */
}

external object EHandTrackingGestureFilterLevel {
    var NoFilter: String /* "NoFilter" */
    var SlightRobustnessToFlicker: String /* "SlightRobustnessToFlicker" */
    var MoreRobustnessToFlicker: String /* "MoreRobustnessToFlicker" */
    var EHandTrackingGestureFilterLevel_MAX: String /* "EHandTrackingGestureFilterLevel_MAX" */
}

external interface `T$111` {
    var SourceHandle: LiveLinkSourceHandle
    var `$`: Boolean
}

external open class LiveLinkSourceHandle {
    open fun clone(): LiveLinkSourceHandle
    open fun GetMagicLeapHandTrackingLiveLinkSource(): `T$111`

    companion object {
        fun C(Other: UObject): LiveLinkSourceHandle
        fun C(Other: Any): LiveLinkSourceHandle
        fun GetMagicLeapHandTrackingLiveLinkSource(SourceHandle: LiveLinkSourceHandle = definedExternally): `T$111`
    }
}

external object EGestureTransformSpace {
    var World: String /* "World" */
    var Hand: String /* "Hand" */
    var Tracking: String /* "Tracking" */
    var EGestureTransformSpace_MAX: String /* "EGestureTransformSpace_MAX" */
}

external object EHandTrackingKeypoint {
    var Thumb_Tip: String /* "Thumb_Tip" */
    var Thumb_IP: String /* "Thumb_IP" */
    var Thumb_MCP: String /* "Thumb_MCP" */
    var Thumb_CMC: String /* "Thumb_CMC" */
    var Index_Tip: String /* "Index_Tip" */
    var Index_DIP: String /* "Index_DIP" */
    var Index_PIP: String /* "Index_PIP" */
    var Index_MCP: String /* "Index_MCP" */
    var Middle_Tip: String /* "Middle_Tip" */
    var Middle_DIP: String /* "Middle_DIP" */
    var Middle_PIP: String /* "Middle_PIP" */
    var Middle_MCP: String /* "Middle_MCP" */
    var Ring_Tip: String /* "Ring_Tip" */
    var Ring_DIP: String /* "Ring_DIP" */
    var Ring_PIP: String /* "Ring_PIP" */
    var Ring_MCP: String /* "Ring_MCP" */
    var Pinky_Tip: String /* "Pinky_Tip" */
    var Pinky_DIP: String /* "Pinky_DIP" */
    var Pinky_PIP: String /* "Pinky_PIP" */
    var Pinky_MCP: String /* "Pinky_MCP" */
    var Wrist_Center: String /* "Wrist_Center" */
    var Wrist_Ulnar: String /* "Wrist_Ulnar" */
    var Wrist_Radial: String /* "Wrist_Radial" */
    var Hand_Center: String /* "Hand_Center" */
    var EHandTrackingKeypoint_MAX: String /* "EHandTrackingKeypoint_MAX" */
}

external interface `T$112` {
    var Secondary: Transform
    var `$`: Boolean
}

external interface `T$113` {
    var Pointer: Transform
    var `$`: Boolean
}

external interface `T$114` {
    var HandCenterNormalized: Vector
    var `$`: Boolean
}

external interface `T$115` {
    var HandCenter: Transform
    var `$`: Boolean
}

external interface `T$116` {
    var Transform: Transform
    var `$`: Boolean
}

external interface `T$117` {
    var Keypoints: Array<Transform>
    var `$`: Boolean
}

external interface `T$118` {
    var Confidence: Number
    var `$`: Boolean
}

external interface `T$119` {
    var Gesture: String /* "Finger" | "Fist" | "Pinch" | "Thumb" | "L" | "OpenHandBack" | "Ok" | "C" | "NoPose" | "NoHand" | "EHandTrackingGesture_MAX" */
    var `$`: Boolean
}

external interface `T$120` {
    var ActiveStaticGestures: Array<String /* "Finger" | "Fist" | "Pinch" | "Thumb" | "L" | "OpenHandBack" | "Ok" | "C" | "NoPose" | "NoHand" | "EHandTrackingGesture_MAX" */>
    var KeypointsFilterLevel: String /* "NoFilter" | "SimpleSmoothing" | "PredictiveSmoothing" | "EHandTrackingKeypointFilterLevel_MAX" */
    var GestureFilterLevel: String /* "NoFilter" | "SlightRobustnessToFlicker" | "MoreRobustnessToFlicker" | "EHandTrackingGestureFilterLevel_MAX" */
    var HandSwitchingFilterLevel: String /* "NoFilter" | "SlightRobustnessToFlicker" | "MoreRobustnessToFlicker" | "EHandTrackingGestureFilterLevel_MAX" */
    var bTrackingEnabled: Boolean
    var `$`: Boolean
}

external open class MagicLeapHandTrackingFunctionLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MagicLeapHandTrackingFunctionLibrary
        fun Find(Outer: UObject, ResourceName: String): MagicLeapHandTrackingFunctionLibrary
        fun GetDefaultObject(): MagicLeapHandTrackingFunctionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MagicLeapHandTrackingFunctionLibrary
        fun SetStaticGestureConfidenceThreshold(Gesture: String /* "Finger" | "Fist" | "Pinch" | "Thumb" | "L" | "OpenHandBack" | "Ok" | "C" | "NoPose" | "NoHand" | "EHandTrackingGesture_MAX" */, Confidence: Number)
        fun SetConfiguration(StaticGesturesToActivate: Array<String /* "Finger" | "Fist" | "Pinch" | "Thumb" | "L" | "OpenHandBack" | "Ok" | "C" | "NoPose" | "NoHand" | "EHandTrackingGesture_MAX" */>, KeypointsFilterLevel: String /* "NoFilter" | "SimpleSmoothing" | "PredictiveSmoothing" | "EHandTrackingKeypointFilterLevel_MAX" */, GestureFilterLevel: String /* "NoFilter" | "SlightRobustnessToFlicker" | "MoreRobustnessToFlicker" | "EHandTrackingGestureFilterLevel_MAX" */, HandSwitchingFilterLevel: String /* "NoFilter" | "SlightRobustnessToFlicker" | "MoreRobustnessToFlicker" | "EHandTrackingGestureFilterLevel_MAX" */, bTrackingEnabled: Boolean): Boolean
        fun GetStaticGestureConfidenceThreshold(Gesture: String /* "Finger" | "Fist" | "Pinch" | "Thumb" | "L" | "OpenHandBack" | "Ok" | "C" | "NoPose" | "NoHand" | "EHandTrackingGesture_MAX" */): Number
        fun GetMagicLeapHandTrackingLiveLinkSource(SourceHandle: LiveLinkSourceHandle = definedExternally): `T$111`
        fun GetHandThumbTip(Hand: String /* "Left" | "Right" | "AnyHand" | "Pad" | "ExternalCamera" | "Gun" | "Special_1" | "Special_2" | "Special_3" | "Special_4" | "Special_5" | "Special_6" | "Special_7" | "Special_8" | "Special_9" | "Special_10" | "Special_11" | "ControllerHand_Count" | "EControllerHand_MAX" */, TransformSpace: String /* "World" | "Hand" | "Tracking" | "EGestureTransformSpace_MAX" */, Secondary: Transform = definedExternally): `T$112`
        fun GetHandIndexFingerTip(Hand: String /* "Left" | "Right" | "AnyHand" | "Pad" | "ExternalCamera" | "Gun" | "Special_1" | "Special_2" | "Special_3" | "Special_4" | "Special_5" | "Special_6" | "Special_7" | "Special_8" | "Special_9" | "Special_10" | "Special_11" | "ControllerHand_Count" | "EControllerHand_MAX" */, TransformSpace: String /* "World" | "Hand" | "Tracking" | "EGestureTransformSpace_MAX" */, Pointer: Transform = definedExternally): `T$113`
        fun GetHandCenterNormalized(Hand: String /* "Left" | "Right" | "AnyHand" | "Pad" | "ExternalCamera" | "Gun" | "Special_1" | "Special_2" | "Special_3" | "Special_4" | "Special_5" | "Special_6" | "Special_7" | "Special_8" | "Special_9" | "Special_10" | "Special_11" | "ControllerHand_Count" | "EControllerHand_MAX" */, HandCenterNormalized: Vector = definedExternally): `T$114`
        fun GetHandCenter(Hand: String /* "Left" | "Right" | "AnyHand" | "Pad" | "ExternalCamera" | "Gun" | "Special_1" | "Special_2" | "Special_3" | "Special_4" | "Special_5" | "Special_6" | "Special_7" | "Special_8" | "Special_9" | "Special_10" | "Special_11" | "ControllerHand_Count" | "EControllerHand_MAX" */, HandCenter: Transform = definedExternally): `T$115`
        fun GetGestureKeypointTransform(Hand: String /* "Left" | "Right" | "AnyHand" | "Pad" | "ExternalCamera" | "Gun" | "Special_1" | "Special_2" | "Special_3" | "Special_4" | "Special_5" | "Special_6" | "Special_7" | "Special_8" | "Special_9" | "Special_10" | "Special_11" | "ControllerHand_Count" | "EControllerHand_MAX" */, Keypoint: String /* "Thumb_Tip" | "Thumb_IP" | "Thumb_MCP" | "Thumb_CMC" | "Index_Tip" | "Index_DIP" | "Index_PIP" | "Index_MCP" | "Middle_Tip" | "Middle_DIP" | "Middle_PIP" | "Middle_MCP" | "Ring_Tip" | "Ring_DIP" | "Ring_PIP" | "Ring_MCP" | "Pinky_Tip" | "Pinky_DIP" | "Pinky_PIP" | "Pinky_MCP" | "Wrist_Center" | "Wrist_Ulnar" | "Wrist_Radial" | "Hand_Center" | "EHandTrackingKeypoint_MAX" */, TransformSpace: String /* "World" | "Hand" | "Tracking" | "EGestureTransformSpace_MAX" */, Transform: Transform = definedExternally): `T$116`
        fun GetGestureKeypoints(Hand: String /* "Left" | "Right" | "AnyHand" | "Pad" | "ExternalCamera" | "Gun" | "Special_1" | "Special_2" | "Special_3" | "Special_4" | "Special_5" | "Special_6" | "Special_7" | "Special_8" | "Special_9" | "Special_10" | "Special_11" | "ControllerHand_Count" | "EControllerHand_MAX" */, Keypoints: Array<Transform> = definedExternally): `T$117`
        fun GetCurrentGestureConfidence(Hand: String /* "Left" | "Right" | "AnyHand" | "Pad" | "ExternalCamera" | "Gun" | "Special_1" | "Special_2" | "Special_3" | "Special_4" | "Special_5" | "Special_6" | "Special_7" | "Special_8" | "Special_9" | "Special_10" | "Special_11" | "ControllerHand_Count" | "EControllerHand_MAX" */, Confidence: Number = definedExternally): `T$118`
        fun GetCurrentGesture(Hand: String /* "Left" | "Right" | "AnyHand" | "Pad" | "ExternalCamera" | "Gun" | "Special_1" | "Special_2" | "Special_3" | "Special_4" | "Special_5" | "Special_6" | "Special_7" | "Special_8" | "Special_9" | "Special_10" | "Special_11" | "ControllerHand_Count" | "EControllerHand_MAX" */, Gesture: String /* "Finger" | "Fist" | "Pinch" | "Thumb" | "L" | "OpenHandBack" | "Ok" | "C" | "NoPose" | "NoHand" | "EHandTrackingGesture_MAX" */ = definedExternally): `T$119`
        fun GetConfiguration(ActiveStaticGestures: Array<String /* "Finger" | "Fist" | "Pinch" | "Thumb" | "L" | "OpenHandBack" | "Ok" | "C" | "NoPose" | "NoHand" | "EHandTrackingGesture_MAX" */> = definedExternally, KeypointsFilterLevel: String /* "NoFilter" | "SimpleSmoothing" | "PredictiveSmoothing" | "EHandTrackingKeypointFilterLevel_MAX" */ = definedExternally, GestureFilterLevel: String /* "NoFilter" | "SlightRobustnessToFlicker" | "MoreRobustnessToFlicker" | "EHandTrackingGestureFilterLevel_MAX" */ = definedExternally, HandSwitchingFilterLevel: String /* "NoFilter" | "SlightRobustnessToFlicker" | "MoreRobustnessToFlicker" | "EHandTrackingGestureFilterLevel_MAX" */ = definedExternally, bTrackingEnabled: Boolean = definedExternally): `T$120`
        fun C(Other: UObject): MagicLeapHandTrackingFunctionLibrary
        fun C(Other: Any): MagicLeapHandTrackingFunctionLibrary
    }
}

external object EMagicLeapIdentityKey {
    var GivenName: String /* "GivenName" */
    var FamilyName: String /* "FamilyName" */
    var Email: String /* "Email" */
    var Bio: String /* "Bio" */
    var PhoneNumber: String /* "PhoneNumber" */
    var Avatar2D: String /* "Avatar2D" */
    var Avatar3D: String /* "Avatar3D" */
    var Unknown: String /* "Unknown" */
    var EMagicLeapIdentityKey_MAX: String /* "EMagicLeapIdentityKey_MAX" */
}

external open class MagicLeapIdentityAttribute {
    open var Attribute: String /* "GivenName" | "FamilyName" | "Email" | "Bio" | "PhoneNumber" | "Avatar2D" | "Avatar3D" | "Unknown" | "EMagicLeapIdentityKey_MAX" */
    open var Value: String
    open fun clone(): MagicLeapIdentityAttribute

    companion object {
        fun C(Other: UObject): MagicLeapIdentityAttribute
        fun C(Other: Any): MagicLeapIdentityAttribute
    }
}

external object EMagicLeapIdentityError {
    var Ok: String /* "Ok" */
    var InvalidParam: String /* "InvalidParam" */
    var AllocFailed: String /* "AllocFailed" */
    var PrivilegeDenied: String /* "PrivilegeDenied" */
    var FailedToConnectToLocalService: String /* "FailedToConnectToLocalService" */
    var FailedToConnectToCloudService: String /* "FailedToConnectToCloudService" */
    var CloudAuthentication: String /* "CloudAuthentication" */
    var InvalidInformationFromCloud: String /* "InvalidInformationFromCloud" */
    var NotLoggedIn: String /* "NotLoggedIn" */
    var ExpiredCredentials: String /* "ExpiredCredentials" */
    var FailedToGetUserProfile: String /* "FailedToGetUserProfile" */
    var Unauthorized: String /* "Unauthorized" */
    var CertificateError: String /* "CertificateError" */
    var RejectedByCloud: String /* "RejectedByCloud" */
    var AlreadyLoggedIn: String /* "AlreadyLoggedIn" */
    var ModifyIsNotSupported: String /* "ModifyIsNotSupported" */
    var NetworkError: String /* "NetworkError" */
    var UnspecifiedFailure: String /* "UnspecifiedFailure" */
    var EMagicLeapIdentityError_MAX: String /* "EMagicLeapIdentityError_MAX" */
}

external interface `T$121` {
    var RequestedAttributeValues: Array<MagicLeapIdentityAttribute>
    var `$`: String /* "Ok" | "InvalidParam" | "AllocFailed" | "PrivilegeDenied" | "FailedToConnectToLocalService" | "FailedToConnectToCloudService" | "CloudAuthentication" | "InvalidInformationFromCloud" | "NotLoggedIn" | "ExpiredCredentials" | "FailedToGetUserProfile" | "Unauthorized" | "CertificateError" | "RejectedByCloud" | "AlreadyLoggedIn" | "ModifyIsNotSupported" | "NetworkError" | "UnspecifiedFailure" | "EMagicLeapIdentityError_MAX" */
}

external interface `T$122` {
    var AvailableAttributes: Array<String /* "GivenName" | "FamilyName" | "Email" | "Bio" | "PhoneNumber" | "Avatar2D" | "Avatar3D" | "Unknown" | "EMagicLeapIdentityKey_MAX" */>
    var `$`: String /* "Ok" | "InvalidParam" | "AllocFailed" | "PrivilegeDenied" | "FailedToConnectToLocalService" | "FailedToConnectToCloudService" | "CloudAuthentication" | "InvalidInformationFromCloud" | "NotLoggedIn" | "ExpiredCredentials" | "FailedToGetUserProfile" | "Unauthorized" | "CertificateError" | "RejectedByCloud" | "AlreadyLoggedIn" | "ModifyIsNotSupported" | "NetworkError" | "UnspecifiedFailure" | "EMagicLeapIdentityError_MAX" */
}

external open class MagicLeapIdentity : UObject {
    constructor()
    constructor(Outer: UObject)
    open fun RequestAttributeValue(RequestedAttributeList: Array<String /* "GivenName" | "FamilyName" | "Email" | "Bio" | "PhoneNumber" | "Avatar2D" | "Avatar3D" | "Unknown" | "EMagicLeapIdentityKey_MAX" */>, RequestedAttributeValues: Array<MagicLeapIdentityAttribute> = definedExternally): `T$121`
    open fun GetAllAvailableAttributes(AvailableAttributes: Array<String /* "GivenName" | "FamilyName" | "Email" | "Bio" | "PhoneNumber" | "Avatar2D" | "Avatar3D" | "Unknown" | "EMagicLeapIdentityKey_MAX" */> = definedExternally): `T$122`

    companion object {
        fun Load(ResourceName: String): MagicLeapIdentity
        fun Find(Outer: UObject, ResourceName: String): MagicLeapIdentity
        fun GetDefaultObject(): MagicLeapIdentity
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MagicLeapIdentity
        fun C(Other: UObject): MagicLeapIdentity
        fun C(Other: Any): MagicLeapIdentity
    }
}

external open class DirectoryWatcher : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Added: Array<String>
    open var Modified: Array<String>
    open var Removed: Array<String>
    open var OnChanged: UnrealEngineMulticastDelegate<() -> Unit>
    open fun Watch(Directory: String)
    open fun Unwatch()
    open fun Contains(File: String): Boolean

    companion object {
        fun Load(ResourceName: String): DirectoryWatcher
        fun Find(Outer: UObject, ResourceName: String): DirectoryWatcher
        fun GetDefaultObject(): DirectoryWatcher
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DirectoryWatcher
        fun C(Other: UObject): DirectoryWatcher
        fun C(Other: Any): DirectoryWatcher
    }
}

external interface `T$123` {
    var OutFiles: Array<String>
}

external open class JavascriptContext : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Paths: Array<String>
    open fun WriteDTS(Target: String, bIncludingTooltip: Boolean): Boolean
    open fun WriteAliases(Target: String): Boolean
    open fun SetContextId(Name: String)
    open fun RunScript(Script: String, bOutput: Boolean): String
    open fun RunFile(Filename: String)
    open fun RequestV8GarbageCollection()
    open fun ReadScriptFile(Filename: String): String
    open fun IsDebugContext(): Boolean
    open fun GetScriptFileFullPath(Filename: String): String
    open fun FindPathFile(TargetRootPath: String, TargetFileName: String, OutFiles: Array<String> = definedExternally): `T$123`
    open fun Expose(Name: String, UObject: UObject)
    open fun DestroyInspector()
    open fun CreateInspector(Port: Number)

    companion object {
        fun Load(ResourceName: String): JavascriptContext
        fun Find(Outer: UObject, ResourceName: String): JavascriptContext
        fun GetDefaultObject(): JavascriptContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptContext
        fun C(Other: UObject): JavascriptContext
        fun C(Other: Any): JavascriptContext
    }
}

external open class JavascriptHeapStatistics {
    open var TotalHeapSize: Number
    open var TotalHeapSizeExecutable: Number
    open var TotalPhysicalSize: Number
    open var TotalAvailableSize: Number
    open var UsedHeapSize: Number
    open var HeapSizeLimit: Number
    open var MallocedMemory: Number
    open var bDoesZapGarbage: Boolean
    open fun clone(): JavascriptHeapStatistics

    companion object {
        fun C(Other: UObject): JavascriptHeapStatistics
        fun C(Other: Any): JavascriptHeapStatistics
    }
}

external interface `T$124` {
    var Statistics: JavascriptHeapStatistics
}

external open class JavascriptIsolate : UObject {
    constructor()
    constructor(Outer: UObject)
    open fun Init(bIsEditor: Boolean)
    open fun GetHeapStatistics(Statistics: JavascriptHeapStatistics = definedExternally): `T$124`
    open fun CreateContext(): JavascriptContext

    companion object {
        fun Load(ResourceName: String): JavascriptIsolate
        fun Find(Outer: UObject, ResourceName: String): JavascriptIsolate
        fun GetDefaultObject(): JavascriptIsolate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptIsolate
        fun C(Other: UObject): JavascriptIsolate
        fun C(Other: Any): JavascriptIsolate
    }
}

external open class JavascriptAsset {
    open var Name: String
    open var Asset: SoftObjectPath
    open fun clone(): JavascriptAsset

    companion object {
        fun C(Other: UObject): JavascriptAsset
        fun C(Other: Any): JavascriptAsset
    }
}

external open class JavascriptClassAsset {
    open var Name: String
    open var Class: UnrealEngineClass
    open fun clone(): JavascriptClassAsset

    companion object {
        fun C(Other: UObject): JavascriptClassAsset
        fun C(Other: Any): JavascriptClassAsset
    }
}

external open class JavascriptComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var ScriptSourceFile: String
    open var bActiveWithinEditor: Boolean
    open var JavascriptContext: JavascriptContext
    open var JavascriptIsolate: JavascriptIsolate
    open var OnTick: UnrealEngineDelegate<(DeltaSeconds: Number) -> Unit>
    open var OnBeginPlay: UnrealEngineDelegate<() -> Unit>
    open var OnEndPlay: UnrealEngineDelegate<() -> Unit>
    open var OnInvoke: UnrealEngineDelegate<(Name: String) -> Unit>
    open var Assets: Array<JavascriptAsset>
    open var ClassAssets: Array<JavascriptClassAsset>
    open fun ResolveClass(Name: String): UnrealEngineClass
    open fun ResolveAsset(Name: String, bTryLoad: Boolean): UObject
    open fun Invoke(Name: String)
    open fun ForceGC()
    open fun Expose(ExposedAs: String, UObject: UObject)

    companion object {
        fun Load(ResourceName: String): JavascriptComponent
        fun Find(Outer: UObject, ResourceName: String): JavascriptComponent
        fun GetDefaultObject(): JavascriptComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptComponent
        fun C(Other: UObject): JavascriptComponent
        fun C(Other: Any): JavascriptComponent
    }
}

external open class JavascriptDelegate : UObject {
    constructor()
    constructor(Outer: UObject)
    open fun Fire()

    companion object {
        fun Load(ResourceName: String): JavascriptDelegate
        fun Find(Outer: UObject, ResourceName: String): JavascriptDelegate
        fun GetDefaultObject(): JavascriptDelegate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptDelegate
        fun C(Other: UObject): JavascriptDelegate
        fun C(Other: Any): JavascriptDelegate
    }
}

external open class JavascriptGeneratedClass : BlueprintGeneratedClass {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): JavascriptGeneratedClass
        fun Find(Outer: UObject, ResourceName: String): JavascriptGeneratedClass
        fun GetDefaultObject(): JavascriptGeneratedClass
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptGeneratedClass
        fun C(Other: UObject): JavascriptGeneratedClass
        fun C(Other: Any): JavascriptGeneratedClass
    }
}

external open class JavascriptGeneratedClass_Native : BlueprintGeneratedClass {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): JavascriptGeneratedClass_Native
        fun Find(Outer: UObject, ResourceName: String): JavascriptGeneratedClass_Native
        fun GetDefaultObject(): JavascriptGeneratedClass_Native
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptGeneratedClass_Native
        fun C(Other: UObject): JavascriptGeneratedClass_Native
        fun C(Other: Any): JavascriptGeneratedClass_Native
    }
}

external open class JavascriptGeneratedFunction : UFunction {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): JavascriptGeneratedFunction
        fun Find(Outer: UObject, ResourceName: String): JavascriptGeneratedFunction
        fun GetDefaultObject(): JavascriptGeneratedFunction
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptGeneratedFunction
        fun C(Other: UObject): JavascriptGeneratedFunction
        fun C(Other: Any): JavascriptGeneratedFunction
    }
}

external open class JavascriptGlobalDelegates : UObject {
    constructor()
    constructor(Outer: UObject)
    open fun UnbindAll()
    open fun Unbind(Key: String)
    open fun RedirectorFollowed(PackageName: String, Redirector: UObject)
    open fun PreLoadMap(MapName: String)
    open fun PreGarbageCollectDelegate()
    open fun PostLoadMapWithWorld(World: World)
    open fun PostGarbageCollect()
    open fun PostDemoPlay()
    open fun PostApplyLevelOffset(Level: Level, World: World, Offset: Vector, Flag: Boolean)
    open fun PackageCreatedForLoad(InPackage: Package)
    open fun OnWorldCleanup(World: World, bSessionEnded: Boolean, bCleanupResources: Boolean)
    open fun OnPreWorldInitialization_Friendly(World: World)
    open fun OnPreWorldFinishDestroy(World: World)
    open fun OnPreObjectPropertyChanged_Friendly(InObject: UObject, Property: Property, MemberProperty: Property)
    open fun OnPostWorldInitialization_Friendly(World: World)
    open fun OnPostWorldCreation(World: World)
    open fun OnPostDuplicate_Friendly(World: World, bDuplicateForPIE: Boolean)
    open fun OnObjectSaved(UObject: UObject)
    open fun OnObjectPropertyChanged_Friendly(InObject: UObject, Property: Property, MemberProperty: Property, ChangeType: Number)
    open fun OnObjectModified(UObject: UObject)
    open fun OnAssetLoaded(UObject: UObject)
    open fun LevelRemovedFromWorld(Level: Level, World: World)
    open fun LevelAddedToWorld(Level: Level, World: World)
    open fun Bind(Key: String)

    companion object {
        fun Load(ResourceName: String): JavascriptGlobalDelegates
        fun Find(Outer: UObject, ResourceName: String): JavascriptGlobalDelegates
        fun GetDefaultObject(): JavascriptGlobalDelegates
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptGlobalDelegates
        fun C(Other: UObject): JavascriptGlobalDelegates
        fun C(Other: Any): JavascriptGlobalDelegates
    }
}

external open class JavascriptStaticCache : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Isolates: Array<JavascriptIsolate>

    companion object {
        fun Load(ResourceName: String): JavascriptStaticCache
        fun Find(Outer: UObject, ResourceName: String): JavascriptStaticCache
        fun GetDefaultObject(): JavascriptStaticCache
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptStaticCache
        fun C(Other: UObject): JavascriptStaticCache
        fun C(Other: Any): JavascriptStaticCache
    }
}

external open class JavascriptStubStruct {
    open fun clone(): JavascriptStubStruct

    companion object {
        fun C(Other: UObject): JavascriptStubStruct
        fun C(Other: Any): JavascriptStubStruct
    }
}

external open class JavascriptFunction {
    open fun clone(): JavascriptFunction
    open fun CallJS(CustomStruct: JavascriptStubStruct)

    companion object {
        fun C(Other: UObject): JavascriptFunction
        fun C(Other: Any): JavascriptFunction
        fun CallJS(UFunction: JavascriptFunction, CustomStruct: JavascriptStubStruct)
    }
}

external open class JavascriptStreamableManager {
    open fun clone(): JavascriptStreamableManager
    open fun IsAsyncLoadComplete(Target: SoftObjectPath): Boolean
    open fun RequestAsyncLoad(TargetsToStream: Array<SoftObjectPath>, DelegateToCall: JavascriptFunction, Priority: Number)
    open fun SimpleAsyncLoad(Target: SoftObjectPath, Priority: Number)
    open fun Unload(Target: SoftObjectPath)

    companion object {
        fun C(Other: UObject): JavascriptStreamableManager
        fun C(Other: Any): JavascriptStreamableManager
        fun IsAsyncLoadComplete(Manager: JavascriptStreamableManager, Target: SoftObjectPath): Boolean
        fun RequestAsyncLoad(Manager: JavascriptStreamableManager, TargetsToStream: Array<SoftObjectPath>, DelegateToCall: JavascriptFunction, Priority: Number)
        fun SimpleAsyncLoad(Manager: JavascriptStreamableManager, Target: SoftObjectPath, Priority: Number)
        fun Unload(Manager: JavascriptStreamableManager, Target: SoftObjectPath)
        fun CreateStreamableManager(): JavascriptStreamableManager
    }
}

external interface `T$125` {
    var Addr: JavascriptInternetAddr
    var bValid: Boolean
}

external interface `T$126` {
    var Addr: JavascriptInternetAddr
}

external open class JavascriptInternetAddr {
    open fun clone(): JavascriptInternetAddr
    open fun SetIp(ResolvedAddress: String = definedExternally, bValid: Boolean = definedExternally): `T$125`
    open fun SetPort(Port: Number = definedExternally): `T$126`

    companion object {
        fun C(Other: UObject): JavascriptInternetAddr
        fun C(Other: Any): JavascriptInternetAddr
        fun SetIp(Addr: JavascriptInternetAddr = definedExternally, ResolvedAddress: String = definedExternally, bValid: Boolean = definedExternally): `T$125`
        fun SetPort(Addr: JavascriptInternetAddr = definedExternally, Port: Number = definedExternally): `T$126`
        fun CreateInternetAddr(): JavascriptInternetAddr
    }
}

external interface `T$127` {
    var Socket: JavascriptSocket
    var BytesSent: Number
    var `$`: Boolean
}

external open class JavascriptSocket {
    open fun clone(): JavascriptSocket
    open fun SendMemoryTo(ToAddr: JavascriptInternetAddr = definedExternally, NumBytes: Number = definedExternally, BytesSent: Number = definedExternally): `T$127`

    companion object {
        fun C(Other: UObject): JavascriptSocket
        fun C(Other: Any): JavascriptSocket
        fun SendMemoryTo(Socket: JavascriptSocket = definedExternally, ToAddr: JavascriptInternetAddr = definedExternally, NumBytes: Number = definedExternally, BytesSent: Number = definedExternally): `T$127`
        fun CreateSocket(SocketType: String, Description: String, bForceUDP: Boolean): JavascriptSocket
    }
}

external object EJavascriptStatDataType {
    var Invalid: String /* "Invalid" */
    var ST_None: String /* "ST_None" */
    var ST_int64: String /* "ST_int64" */
    var ST_double: String /* "ST_double" */
    var ST_FName: String /* "ST_FName" */
    var ST_Ptr: String /* "ST_Ptr" */
    var EJavascriptStatDataType_MAX: String /* "EJavascriptStatDataType_MAX" */
}

external object EJavascriptStatOperation {
    var Invalid: String /* "Invalid" */
    var SetLongName: String /* "SetLongName" */
    var AdvanceFrameEventGameThread: String /* "AdvanceFrameEventGameThread" */
    var AdvanceFrameEventRenderThread: String /* "AdvanceFrameEventRenderThread" */
    var CycleScopeStart: String /* "CycleScopeStart" */
    var CycleScopeEnd: String /* "CycleScopeEnd" */
    var SpecialMessageMarker: String /* "SpecialMessageMarker" */
    var Set: String /* "Set" */
    var Clear: String /* "Clear" */
    var Add: String /* "Add" */
    var Subtract: String /* "Subtract" */
    var ChildrenStart: String /* "ChildrenStart" */
    var ChildrenEnd: String /* "ChildrenEnd" */
    var Leaf: String /* "Leaf" */
    var MaxVal: String /* "MaxVal" */
    var Memory: String /* "Memory" */
    var EJavascriptStatOperation_MAX: String /* "EJavascriptStatOperation_MAX" */
}

external open class JavascriptStat {
    open fun clone(): JavascriptStat
    open fun AddMessage(InStatOperation: String /* "Invalid" | "SetLongName" | "AdvanceFrameEventGameThread" | "AdvanceFrameEventRenderThread" | "CycleScopeStart" | "CycleScopeEnd" | "SpecialMessageMarker" | "Set" | "Clear" | "Add" | "Subtract" | "ChildrenStart" | "ChildrenEnd" | "Leaf" | "MaxVal" | "Memory" | "EJavascriptStatOperation_MAX" */)
    open fun AddMessage_float(InStatOperation: String /* "Invalid" | "SetLongName" | "AdvanceFrameEventGameThread" | "AdvanceFrameEventRenderThread" | "CycleScopeStart" | "CycleScopeEnd" | "SpecialMessageMarker" | "Set" | "Clear" | "Add" | "Subtract" | "ChildrenStart" | "ChildrenEnd" | "Leaf" | "MaxVal" | "Memory" | "EJavascriptStatOperation_MAX" */, Value: Number, bIsCycle: Boolean)
    open fun AddMessage_int(InStatOperation: String /* "Invalid" | "SetLongName" | "AdvanceFrameEventGameThread" | "AdvanceFrameEventRenderThread" | "CycleScopeStart" | "CycleScopeEnd" | "SpecialMessageMarker" | "Set" | "Clear" | "Add" | "Subtract" | "ChildrenStart" | "ChildrenEnd" | "Leaf" | "MaxVal" | "Memory" | "EJavascriptStatOperation_MAX" */, Value: Number, bIsCycle: Boolean)

    companion object {
        fun C(Other: UObject): JavascriptStat
        fun C(Other: Any): JavascriptStat
        fun AddMessage(Stat: JavascriptStat, InStatOperation: String /* "Invalid" | "SetLongName" | "AdvanceFrameEventGameThread" | "AdvanceFrameEventRenderThread" | "CycleScopeStart" | "CycleScopeEnd" | "SpecialMessageMarker" | "Set" | "Clear" | "Add" | "Subtract" | "ChildrenStart" | "ChildrenEnd" | "Leaf" | "MaxVal" | "Memory" | "EJavascriptStatOperation_MAX" */)
        fun AddMessage_float(Stat: JavascriptStat, InStatOperation: String /* "Invalid" | "SetLongName" | "AdvanceFrameEventGameThread" | "AdvanceFrameEventRenderThread" | "CycleScopeStart" | "CycleScopeEnd" | "SpecialMessageMarker" | "Set" | "Clear" | "Add" | "Subtract" | "ChildrenStart" | "ChildrenEnd" | "Leaf" | "MaxVal" | "Memory" | "EJavascriptStatOperation_MAX" */, Value: Number, bIsCycle: Boolean)
        fun AddMessage_int(Stat: JavascriptStat, InStatOperation: String /* "Invalid" | "SetLongName" | "AdvanceFrameEventGameThread" | "AdvanceFrameEventRenderThread" | "CycleScopeStart" | "CycleScopeEnd" | "SpecialMessageMarker" | "Set" | "Clear" | "Add" | "Subtract" | "ChildrenStart" | "ChildrenEnd" | "Leaf" | "MaxVal" | "Memory" | "EJavascriptStatOperation_MAX" */, Value: Number, bIsCycle: Boolean)
        fun NewStat(InStatName: String, InStatDesc: String, InGroupName: String, InGroupCategory: String, InGroupDesc: String, bDefaultEnable: Boolean, bShouldClearEveryFrame: Boolean, InStatType: String /* "Invalid" | "ST_None" | "ST_int64" | "ST_double" | "ST_FName" | "ST_Ptr" | "EJavascriptStatDataType_MAX" */, bCycleStat: Boolean, bSortByName: Boolean): JavascriptStat
    }
}

external object ELogVerbosity_JS {
    var NoLogging: String /* "NoLogging" */
    var Fatal: String /* "Fatal" */
    var Error: String /* "Error" */
    var Warning: String /* "Warning" */
    var Display: String /* "Display" */
    var Log: String /* "Log" */
    var Verbose: String /* "Verbose" */
    var VeryVerbose: String /* "VeryVerbose" */
    var ELogVerbosity_MAX: String /* "ELogVerbosity_MAX" */
}

external open class JavascriptLogCategory {
    open fun clone(): JavascriptLogCategory
    open fun GetCategoryName(): String
    open fun IsSuppressed(Verbosity: String /* "NoLogging" | "Fatal" | "Error" | "Warning" | "Display" | "Log" | "Verbose" | "VeryVerbose" | "ELogVerbosity_MAX" */): Boolean
    open fun Log(Verbosity: String /* "NoLogging" | "Fatal" | "Error" | "Warning" | "Display" | "Log" | "Verbose" | "VeryVerbose" | "ELogVerbosity_MAX" */, Message: String, Filename: String, LineNumber: Number)

    companion object {
        fun C(Other: UObject): JavascriptLogCategory
        fun C(Other: Any): JavascriptLogCategory
        fun GetCategoryName(Category: JavascriptLogCategory): String
        fun IsSuppressed(Category: JavascriptLogCategory, Verbosity: String /* "NoLogging" | "Fatal" | "Error" | "Warning" | "Display" | "Log" | "Verbose" | "VeryVerbose" | "ELogVerbosity_MAX" */): Boolean
        fun Log(Category: JavascriptLogCategory, Verbosity: String /* "NoLogging" | "Fatal" | "Error" | "Warning" | "Display" | "Log" | "Verbose" | "VeryVerbose" | "ELogVerbosity_MAX" */, Message: String, Filename: String, LineNumber: Number)
        fun CreateLogCategory(CategoryName: String, InDefaultVerbosity: String /* "NoLogging" | "Fatal" | "Error" | "Warning" | "Display" | "Log" | "Verbose" | "VeryVerbose" | "ELogVerbosity_MAX" */): JavascriptLogCategory
    }
}

external open class JavscriptProperty {
    open var Type: String
    open var Name: String
    open fun clone(): JavscriptProperty

    companion object {
        fun C(Other: UObject): JavscriptProperty
        fun C(Other: Any): JavscriptProperty
    }
}

external open class JavascriptProfileNode {
    open fun clone(): JavascriptProfileNode
    open fun GetBailoutReason(): String
    open fun GetCallUid(): Number
    open fun GetChild(index: Number): JavascriptProfileNode
    open fun GetChildrenCount(): Number
    open fun GetColumnNumber(): Number
    open fun GetDeoptInfo_Reason(index: Number): String
    open fun GetDeoptInfo_Stack(index: Number): String
    open fun GetDeoptInfosCount(index: Number): Number
    open fun GetFunctionName(): String
    open fun GetHitCount(): Number
    open fun GetHitLineCount(): Number
    open fun GetLineNumber(): Number
    open fun GetNodeId(): Number
    open fun GetScriptId(): Number
    open fun GetScriptResourceName(): String

    companion object {
        fun C(Other: UObject): JavascriptProfileNode
        fun C(Other: Any): JavascriptProfileNode
        fun GetBailoutReason(UNode: JavascriptProfileNode): String
        fun GetCallUid(UNode: JavascriptProfileNode): Number
        fun GetChild(UNode: JavascriptProfileNode, index: Number): JavascriptProfileNode
        fun GetChildrenCount(UNode: JavascriptProfileNode): Number
        fun GetColumnNumber(UNode: JavascriptProfileNode): Number
        fun GetDeoptInfo_Reason(UNode: JavascriptProfileNode, index: Number): String
        fun GetDeoptInfo_Stack(UNode: JavascriptProfileNode, index: Number): String
        fun GetDeoptInfosCount(UNode: JavascriptProfileNode, index: Number): Number
        fun GetFunctionName(UNode: JavascriptProfileNode): String
        fun GetHitCount(UNode: JavascriptProfileNode): Number
        fun GetHitLineCount(UNode: JavascriptProfileNode): Number
        fun GetLineNumber(UNode: JavascriptProfileNode): Number
        fun GetNodeId(UNode: JavascriptProfileNode): Number
        fun GetScriptId(UNode: JavascriptProfileNode): Number
        fun GetScriptResourceName(UNode: JavascriptProfileNode): String
    }
}

external interface `T$128` {
    var IntersectionPoint: Vector
    var `$`: Boolean
}

external interface `T$129` {
    var OutIp: String
    var `$`: Boolean
}

external interface `T$130` {
    var OutItems: Array<DirectoryItem>
    var `$`: Boolean
}

external interface `T$131` {
    var C: Controller
}

external interface `T$132` {
    var Results: Array<UObject>
}

external interface `T$133` {
    var Results: Array<UObject>
}

external interface `T$134` {
    var Results: Array<UnrealEngineClass>
}

external interface `T$135` {
    var OutActors: Array<Actor>
}

external open class JavascriptLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): JavascriptLibrary
        fun Find(Outer: UObject, ResourceName: String): JavascriptLibrary
        fun GetDefaultObject(): JavascriptLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptLibrary
        fun WriteStringToFile(UObject: UObject, Filename: String, Data: String, EncodingOptions: String /* "AutoDetect" | "ForceAnsi" | "ForceUnicode" | "ForceUTF8" | "ForceUTF8WithoutBOM" | "EJavascriptEncodingOptions_MAX" */): Boolean
        fun WriteFile(UObject: UObject, Filename: String): Boolean
        fun V8_SetIdleTaskBudget(BudgetInSeconds: Number)
        fun V8_SetFlagsFromString(V8Flags: String)
        fun UnregisterComponent(ActorComponent: ActorComponent)
        fun Unload(Manager: JavascriptStreamableManager, Target: SoftObjectPath)
        fun TryLoadByPath(Path: String): UObject
        fun SimpleAsyncLoad(Manager: JavascriptStreamableManager, Target: SoftObjectPath, Priority: Number)
        fun SetRootComponent(Actor: Actor, Component: SceneComponent)
        fun SetPort(Addr: JavascriptInternetAddr = definedExternally, Port: Number = definedExternally): `T$126`
        fun SetObjectFlags(Obj: UObject, Flags: Number)
        fun SetMobility(SceneComponent: SceneComponent, Type: String /* "Static" | "Stationary" | "Movable" | "EComponentMobility_MAX" */)
        fun SetMobile(SceneComponent: SceneComponent)
        fun SetIp(Addr: JavascriptInternetAddr = definedExternally, ResolvedAddress: String = definedExternally, bValid: Boolean = definedExternally): `T$125`
        fun SetClientTravel(Engine: Engine, InWorld: World, NextURL: String, InTravelType: String /* "TRAVEL_Absolute" | "TRAVEL_Partial" | "TRAVEL_Relative" | "TRAVEL_MAX" */)
        fun SetActorFlags(Actor: Actor, Flags: Number)
        fun SendMemoryTo(Socket: JavascriptSocket = definedExternally, ToAddr: JavascriptInternetAddr = definedExternally, NumBytes: Number = definedExternally, BytesSent: Number = definedExternally): `T$127`
        fun SegmentIntersection2D(SegmentStartA: Vector, SegmentEndA: Vector, SegmentStartB: Vector, SegmentEndB: Vector, IntersectionPoint: Vector = definedExternally): `T$128`
        fun ResolveIp(HostName: String, OutIp: String = definedExternally): `T$129`
        fun ReregisterComponent(ActorComponent: ActorComponent)
        fun ReregisterAllComponents(Actor: Actor)
        fun RequestAsyncLoad(Manager: JavascriptStreamableManager, TargetsToStream: Array<SoftObjectPath>, DelegateToCall: JavascriptFunction, Priority: Number)
        fun RegisterComponent(ActorComponent: ActorComponent)
        fun ReadStringFromFile(UObject: UObject, Filename: String): String
        fun ReadFile(UObject: UObject, Filename: String): Boolean
        fun ReadDirectory(UObject: UObject, Directory: String, OutItems: Array<DirectoryItem> = definedExternally): `T$130`
        fun NewStat(InStatName: String, InStatDesc: String, InGroupName: String, InGroupCategory: String, InGroupDesc: String, bDefaultEnable: Boolean, bShouldClearEveryFrame: Boolean, InStatType: String /* "Invalid" | "ST_None" | "ST_int64" | "ST_double" | "ST_FName" | "ST_Ptr" | "EJavascriptStatDataType_MAX" */, bCycleStat: Boolean, bSortByName: Boolean): JavascriptStat
        fun MarkRenderStateDirty(Component: ActorComponent)
        fun MakeDirectory(Path: String, Tree: Boolean): Boolean
        fun Log(Category: JavascriptLogCategory, Verbosity: String /* "NoLogging" | "Fatal" | "Error" | "Warning" | "Display" | "Log" | "Verbose" | "VeryVerbose" | "ELogVerbosity_MAX" */, Message: String, Filename: String, LineNumber: Number)
        fun LoadPackage(InOuter: Package, PackageName: String): Package
        fun IsSuppressed(Category: JavascriptLogCategory, Verbosity: String /* "NoLogging" | "Fatal" | "Error" | "Warning" | "Display" | "Log" | "Verbose" | "VeryVerbose" | "ELogVerbosity_MAX" */): Boolean
        fun IsRegistered(ActorComponent: ActorComponent): Boolean
        fun IsPlayInPreview(World: World): Boolean
        fun IsPlayInEditor(World: World): Boolean
        fun IsPendingKill(InActor: Actor): Boolean
        fun IsGeneratedByBlueprint(InClass: UnrealEngineClass): Boolean
        fun IsGameWorld(World: World): Boolean
        fun IsAsyncLoadComplete(Manager: JavascriptStreamableManager, Target: SoftObjectPath): Boolean
        fun HasUndo(Engine: Engine): Boolean
        fun HasAnyPackageFlags(Package: Package, Flags: Number): Boolean
        fun HasAnyFlags(UObject: UObject, Flags: Number): Boolean
        fun HandleSeamlessTravelPlayer(GameMode: GameModeBase, C: Controller = definedExternally): `T$131`
        fun GetWorldBounds(InWorld: World): Box
        fun GetSuperClasses(InClass: UnrealEngineClass): Array<UnrealEngineClass>
        fun GetStructProperties(StructName: String, bIncludeSuper: Boolean): Array<JavscriptProperty>
        fun GetScriptResourceName(UNode: JavascriptProfileNode): String
        fun GetScriptId(UNode: JavascriptProfileNode): Number
        fun GetPlatformName(): String
        fun GetOutermost(UObject: UObject): UObject
        fun GetOuter(UObject: UObject): UObject
        fun GetObjectsWithOuter(Outer: UObject, Results: Array<UObject> = definedExternally, bIncludeNestedObjects: Boolean = definedExternally, ExclusionFlags: Number = definedExternally, ExclusionInternalFlags: Number = definedExternally): `T$132`
        fun GetObjectsOfClass(ClassToLookFor: UnrealEngineClass, Results: Array<UObject> = definedExternally, bIncludeDerivedClasses: Boolean = definedExternally, ExcludeFlags: Number = definedExternally, ExclusionInternalFlags: Number = definedExternally): `T$133`
        fun GetNodeId(UNode: JavascriptProfileNode): Number
        fun GetName(UObject: UObject): String
        fun GetModel(World: World): Model
        fun GetMetaData(Field: Field, Key: String): String
        fun GetLineNumber(UNode: JavascriptProfileNode): Number
        fun GetLevels(World: World): Array<Level>
        fun GetLevel(Actor: Actor): Level
        fun GetLastRenderTime(Actor: Actor): Number
        fun GetHitLineCount(UNode: JavascriptProfileNode): Number
        fun GetHitCount(UNode: JavascriptProfileNode): Number
        fun GetFunctionParmsSize(UFunction: UFunction): Number
        fun GetFunctionName(UNode: JavascriptProfileNode): String
        fun GetFileSize(UObject: UObject, Filename: String): Number
        fun GetFields(UObject: UObject, bIncludeSuper: Boolean): Array<Field>
        fun GetDynamicBinding(Outer: UnrealEngineClass, BindingObjectClass: UnrealEngineClass): DynamicBlueprintBinding
        fun GetDir(UObject: UObject, WhichDir: String): String
        fun GetDerivedClasses(ClassToLookFor: UnrealEngineClass, Results: Array<UnrealEngineClass> = definedExternally, bRecursive: Boolean = definedExternally): `T$134`
        fun GetDeoptInfosCount(UNode: JavascriptProfileNode, index: Number): Number
        fun GetDeoptInfo_Stack(UNode: JavascriptProfileNode, index: Number): String
        fun GetDeoptInfo_Reason(UNode: JavascriptProfileNode, index: Number): String
        fun GetCurrentProcessId(): Number
        fun GetColumnNumber(UNode: JavascriptProfileNode): Number
        fun GetClassPathName(Class: UnrealEngineClass): String
        fun GetChildrenCount(UNode: JavascriptProfileNode): Number
        fun GetChild(UNode: JavascriptProfileNode, index: Number): JavascriptProfileNode
        fun GetCategoryName(Category: JavascriptLogCategory): String
        fun GetCallUid(UNode: JavascriptProfileNode): Number
        fun GetBlueprintGeneratedClassFromPath(Path: String): UnrealEngineClass
        fun GetBlueprintGeneratedClass(Blueprint: Blueprint): UnrealEngineClass
        fun GetBailoutReason(UNode: JavascriptProfileNode): String
        fun GetArchetypePathName(UObject: UObject): String
        fun GetAllActorsOfClassAndTags(WorldContextObject: UObject, ActorClass: UnrealEngineClass, Tags_Accept: Array<String>, Tags_Deny: Array<String>, OutActors: Array<Actor> = definedExternally): `T$135`
        fun GenerateNavigation(InWorld: World, NavData: RecastNavMesh)
        fun FindPackage(InOuter: UObject, PackageName: String): Package
        fun FindObjectWithOuter(Outer: UObject, ClassToLookFor: UnrealEngineClass, NameToLookFor: String): UObject
        fun FileExists(Filename: String): Boolean
        fun Duplicate(UObject: UObject, Outer: UObject, Name: String): UObject
        fun DirectoryExists(InDirectory: String): Boolean
        fun DeleteFile(Filename: String, ReadOnly: Boolean): Boolean
        fun DeleteDirectory(Path: String, RequireExists: Boolean, Tree: Boolean): Boolean
        fun CreateStreamableManager(): JavascriptStreamableManager
        fun CreateSocket(SocketType: String, Description: String, bForceUDP: Boolean): JavascriptSocket
        fun CreatePackage(Outer: UObject, PackageName: String): Package
        fun CreateLogCategory(CategoryName: String, InDefaultVerbosity: String /* "NoLogging" | "Fatal" | "Error" | "Warning" | "Display" | "Log" | "Verbose" | "VeryVerbose" | "ELogVerbosity_MAX" */): JavascriptLogCategory
        fun CreateInternetAddr(): JavascriptInternetAddr
        fun CreateEnum(Outer: UObject, Name: String, DisplayNames: Array<String>, Flags: Array<String>): Enum
        fun ConvertRelativePathToFull(UObject: UObject, RelativePath: String): String
        fun ClipboardPaste(): String
        fun ClipboardCopy(string: String)
        fun CallJS(UFunction: JavascriptFunction, CustomStruct: JavascriptStubStruct)
        fun AddMessage_int(Stat: JavascriptStat, InStatOperation: String /* "Invalid" | "SetLongName" | "AdvanceFrameEventGameThread" | "AdvanceFrameEventRenderThread" | "CycleScopeStart" | "CycleScopeEnd" | "SpecialMessageMarker" | "Set" | "Clear" | "Add" | "Subtract" | "ChildrenStart" | "ChildrenEnd" | "Leaf" | "MaxVal" | "Memory" | "EJavascriptStatOperation_MAX" */, Value: Number, bIsCycle: Boolean)
        fun AddMessage_float(Stat: JavascriptStat, InStatOperation: String /* "Invalid" | "SetLongName" | "AdvanceFrameEventGameThread" | "AdvanceFrameEventRenderThread" | "CycleScopeStart" | "CycleScopeEnd" | "SpecialMessageMarker" | "Set" | "Clear" | "Add" | "Subtract" | "ChildrenStart" | "ChildrenEnd" | "Leaf" | "MaxVal" | "Memory" | "EJavascriptStatOperation_MAX" */, Value: Number, bIsCycle: Boolean)
        fun AddMessage(Stat: JavascriptStat, InStatOperation: String /* "Invalid" | "SetLongName" | "AdvanceFrameEventGameThread" | "AdvanceFrameEventRenderThread" | "CycleScopeStart" | "CycleScopeEnd" | "SpecialMessageMarker" | "Set" | "Clear" | "Add" | "Subtract" | "ChildrenStart" | "ChildrenEnd" | "Leaf" | "MaxVal" | "Memory" | "EJavascriptStatOperation_MAX" */)
        fun AddDynamicBinding(Outer: UnrealEngineClass, BindingObject: DynamicBlueprintBinding)
        fun Actor_GetWorld(Actor: Actor): World
        fun C(Other: UObject): JavascriptLibrary
        fun C(Other: Any): JavascriptLibrary
    }
}

external open class JavascriptMemoryObject : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): JavascriptMemoryObject
        fun Find(Outer: UObject, ResourceName: String): JavascriptMemoryObject
        fun GetDefaultObject(): JavascriptMemoryObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptMemoryObject
        fun C(Other: UObject): JavascriptMemoryObject
        fun C(Other: Any): JavascriptMemoryObject
    }
}

external open class JavascriptRef {
    open fun clone(): JavascriptRef

    companion object {
        fun C(Other: UObject): JavascriptRef
        fun C(Other: Any): JavascriptRef
    }
}

external open class JavascriptObject : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Ref: JavascriptRef
    open var Func: JavascriptFunction

    companion object {
        fun Load(ResourceName: String): JavascriptObject
        fun Find(Outer: UObject, ResourceName: String): JavascriptObject
        fun GetDefaultObject(): JavascriptObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptObject
        fun C(Other: UObject): JavascriptObject
        fun C(Other: Any): JavascriptObject
    }
}

external open class JavascriptOutputDevice : UObject {
    constructor()
    constructor(Outer: UObject)
    open fun OnMessage(Message: String, Verbosity: String /* "NoLogging" | "Fatal" | "Error" | "Warning" | "Display" | "Log" | "Verbose" | "VeryVerbose" | "ELogVerbosity_MAX" */, Category: String)
    open fun Kill()

    companion object {
        fun Load(ResourceName: String): JavascriptOutputDevice
        fun Find(Outer: UObject, ResourceName: String): JavascriptOutputDevice
        fun GetDefaultObject(): JavascriptOutputDevice
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptOutputDevice
        fun Log(Category: String, Verbosity: String /* "NoLogging" | "Fatal" | "Error" | "Warning" | "Display" | "Log" | "Verbose" | "VeryVerbose" | "ELogVerbosity_MAX" */, Filename: String, LineNumber: Number, Message: String)
        fun C(Other: UObject): JavascriptOutputDevice
        fun C(Other: Any): JavascriptOutputDevice
    }
}

external interface `T$136` {
    var OutWritten: String
    var `$`: Boolean
}

external interface `T$137` {
    var Array: Array<Number>
    var `$`: Boolean
}

external interface `T$138` {
    var Error: String
}

external interface `T$139` {
    var ReturnCode: Number
    var `$`: Boolean
}

external open class JavascriptProcess : UObject {
    constructor()
    constructor(Outer: UObject)
    open fun WriteToPipe(Message: String, OutWritten: String = definedExternally): `T$136`
    open fun Wait()
    open fun Terminate(KillTree: Boolean)
    open fun ReadFromPipe(): String
    open fun ReadArrayFromPipe(Array: Array<Number> = definedExternally): `T$137`
    open fun IsRunning(): Boolean
    open fun GetReturnCode(ReturnCode: Number = definedExternally): `T$139`
    open fun Close()

    companion object {
        fun Load(ResourceName: String): JavascriptProcess
        fun Find(Outer: UObject, ResourceName: String): JavascriptProcess
        fun GetDefaultObject(): JavascriptProcess
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptProcess
        fun Sleep(Seconds: Number)
        fun SimulateKeypress(KeyEvent: Number)
        fun SetEnvironmentVar(VarName: String, VarValue: String)
        fun Open_PID(ProcessId: Number): JavascriptProcess
        fun Open(ProcName: String): JavascriptProcess
        fun LaunchURL(URL: String, Parms: String, Error: String = definedExternally): `T$138`
        fun IsApplicationRunning_PID(ProcessId: Number): Boolean
        fun IsApplicationRunning(ProcName: String): Boolean
        fun GetString(Key: String, bFlag: Boolean): String
        fun GetEnvironmentVar(VarName: String): String
        fun GetApplicationName(ProcessId: Number): String
        fun Create(URL: String, Parms: String, bLaunchDetached: Boolean, bLaunchHidden: Boolean, bLaunchReallyHidden: Boolean, PriorityModifier: Number, OptionalWorkingDirectory: String, bUsePipe: Boolean): JavascriptProcess
        fun CanLaunchURL(URL: String): Boolean
        fun C(Other: UObject): JavascriptProcess
        fun C(Other: Any): JavascriptProcess
    }
}

external open class JavascriptCpuProfiler {
    open fun clone(): JavascriptCpuProfiler

    companion object {
        fun C(Other: UObject): JavascriptCpuProfiler
        fun C(Other: Any): JavascriptCpuProfiler
    }
}

external open class JavascriptProfile : UObject {
    constructor()
    constructor(Outer: UObject)
    open fun GetTopDownRoot(): JavascriptProfileNode
    open fun GetSampleTimestamp(index: Number): Number
    open fun GetSamplesCount(): Number
    open fun GetSample(index: Number): JavascriptProfileNode

    companion object {
        fun Load(ResourceName: String): JavascriptProfile
        fun Find(Outer: UObject, ResourceName: String): JavascriptProfile
        fun GetDefaultObject(): JavascriptProfile
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptProfile
        fun Stop(Profiler: JavascriptCpuProfiler, Title: String): JavascriptProfile
        fun Start(Title: String, bRecordSamples: Boolean): JavascriptCpuProfiler
        fun SetSamplingInterval(Profiler: JavascriptCpuProfiler, us: Number)
        fun SetIdle(Profiler: JavascriptCpuProfiler, is_idle: Boolean)
        fun C(Other: UObject): JavascriptProfile
        fun C(Other: Any): JavascriptProfile
    }
}

external open class JavascriptSemaphore : UObject {
    constructor()
    constructor(Outer: UObject)
    open fun Unlock()
    open fun TryLock(NanosecondsToWait: Number): Boolean
    open fun Lock()
    open fun Dispose()

    companion object {
        fun Load(ResourceName: String): JavascriptSemaphore
        fun Find(Outer: UObject, ResourceName: String): JavascriptSemaphore
        fun GetDefaultObject(): JavascriptSemaphore
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptSemaphore
        fun Create(Name: String, bCreate: Boolean, MaxLocks: Number): JavascriptSemaphore
        fun C(Other: UObject): JavascriptSemaphore
        fun C(Other: Any): JavascriptSemaphore
    }
}

external open class JavascriptSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var V8Flags: String

    companion object {
        fun Load(ResourceName: String): JavascriptSettings
        fun Find(Outer: UObject, ResourceName: String): JavascriptSettings
        fun GetDefaultObject(): JavascriptSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptSettings
        fun C(Other: UObject): JavascriptSettings
        fun C(Other: Any): JavascriptSettings
    }
}

external open class JavascriptSharedMemoryRegion : JavascriptMemoryObject {
    constructor()
    constructor(Outer: UObject)
    open fun Dispose()

    companion object {
        fun Load(ResourceName: String): JavascriptSharedMemoryRegion
        fun Find(Outer: UObject, ResourceName: String): JavascriptSharedMemoryRegion
        fun GetDefaultObject(): JavascriptSharedMemoryRegion
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptSharedMemoryRegion
        fun Create(Name: String, bCreate: Boolean, bRead: Boolean, bWrite: Boolean, Size: Number): JavascriptSharedMemoryRegion
        fun C(Other: UObject): JavascriptSharedMemoryRegion
        fun C(Other: Any): JavascriptSharedMemoryRegion
    }
}

external interface `T$140` {
    var Test: JavascriptAutomatedTestInstance
}

external open class JavascriptAutomatedTestInstance {
    open fun clone(): JavascriptAutomatedTestInstance
    open fun AddAnalyticsItem(InAnalyticsItem: String)
    open fun AddError(InError: String)
    open fun AddLogItem(InLogItem: String)
    open fun AddWarning(InWarning: String)
    open fun ClearExecutionInfo()
    open fun Destroy(): `T$140`
    open fun SetContinue(bInContinue: Boolean)

    companion object {
        fun C(Other: UObject): JavascriptAutomatedTestInstance
        fun C(Other: Any): JavascriptAutomatedTestInstance
        fun AddAnalyticsItem(Test: JavascriptAutomatedTestInstance, InAnalyticsItem: String)
        fun AddError(Test: JavascriptAutomatedTestInstance, InError: String)
        fun AddLogItem(Test: JavascriptAutomatedTestInstance, InLogItem: String)
        fun AddWarning(Test: JavascriptAutomatedTestInstance, InWarning: String)
        fun ClearExecutionInfo(Test: JavascriptAutomatedTestInstance)
        fun Destroy(Test: JavascriptAutomatedTestInstance = definedExternally): `T$140`
        fun SetContinue(Test: JavascriptAutomatedTestInstance, bInContinue: Boolean)
    }
}

external open class JavascriptAutomatedTest {
    open var Name: String
    open var bComplexTask: Boolean
    open var TestFlags: Number
    open var RequiredDeviceNum: Number
    open var TestFunctionNames: Array<String>
    open var UFunction: JavascriptFunction
    open fun clone(): JavascriptAutomatedTest
    open fun Create(): JavascriptAutomatedTestInstance

    companion object {
        fun C(Other: UObject): JavascriptAutomatedTest
        fun C(Other: Any): JavascriptAutomatedTest
        fun Create(Test: JavascriptAutomatedTest): JavascriptAutomatedTestInstance
    }
}

external open class JavascriptTestLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): JavascriptTestLibrary
        fun Find(Outer: UObject, ResourceName: String): JavascriptTestLibrary
        fun GetDefaultObject(): JavascriptTestLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptTestLibrary
        fun SetContinue(Test: JavascriptAutomatedTestInstance, bInContinue: Boolean)
        fun PushFrameCounter()
        fun PopFrameCounter()
        fun NewWorld(): World
        fun InitializeActorsForPlay(World: World, URL: URL)
        fun DestroyWorld(World: World)
        fun DestroyUObject(UObject: UObject)
        fun Destroy(Test: JavascriptAutomatedTestInstance = definedExternally): `T$140`
        fun Create(Test: JavascriptAutomatedTest): JavascriptAutomatedTestInstance
        fun ClearExecutionInfo(Test: JavascriptAutomatedTestInstance)
        fun BeginPlay(World: World)
        fun AddWarning(Test: JavascriptAutomatedTestInstance, InWarning: String)
        fun AddLogItem(Test: JavascriptAutomatedTestInstance, InLogItem: String)
        fun AddError(Test: JavascriptAutomatedTestInstance, InError: String)
        fun AddAnalyticsItem(Test: JavascriptAutomatedTestInstance, InAnalyticsItem: String)
        fun C(Other: UObject): JavascriptTestLibrary
        fun C(Other: Any): JavascriptTestLibrary
    }
}

external open class JavascriptComboButton : ContentWidget {
    constructor()
    constructor(Outer: UObject)
    open var ComboButtonStyle: ComboButtonStyle
    open var ButtonStyle: ButtonStyle
    open var OnGetMenuContent: UnrealEngineDelegate<() -> JavascriptSlateWidget>
    open var OnMenuOpenChanged: UnrealEngineDelegate<(Value: Boolean) -> Unit>
    open var OnComboBoxOpened: UnrealEngineDelegate<() -> Unit>
    open var bIsFocusable: Boolean
    open var bHasDownArrow: Boolean
    open var ForegroundColor: SlateColor
    open var ButtonColorAndOpacity: SlateColor
    open var ContentPadding: Margin
    open var MenuPlacement: String /* "MenuPlacement_BelowAnchor" | "MenuPlacement_CenteredBelowAnchor" | "MenuPlacement_BelowRightAnchor" | "MenuPlacement_ComboBox" | "MenuPlacement_ComboBoxRight" | "MenuPlacement_MenuRight" | "MenuPlacement_AboveAnchor" | "MenuPlacement_CenteredAboveAnchor" | "MenuPlacement_AboveRightAnchor" | "MenuPlacement_MenuLeft" | "MenuPlacement_Center" | "MenuPlacement_RightLeftCenter" | "MenuPlacement_MatchBottomLeft" | "MenuPlacement_MAX" */
    open var HAlign: String /* "HAlign_Fill" | "HAlign_Left" | "HAlign_Center" | "HAlign_Right" | "HAlign_MAX" */
    open var VAlign: String /* "VAlign_Fill" | "VAlign_Top" | "VAlign_Center" | "VAlign_Bottom" | "VAlign_MAX" */
    open fun SetIsOpen(InIsOpen: Boolean, bFocusMenu: Boolean)

    companion object {
        fun Load(ResourceName: String): JavascriptComboButton
        fun Find(Outer: UObject, ResourceName: String): JavascriptComboButton
        fun GetDefaultObject(): JavascriptComboButton
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptComboButton
        fun C(Other: UObject): JavascriptComboButton
        fun C(Other: Any): JavascriptComboButton
    }
}

external open class JavascriptSlateIcon {
    open var StyleSetName: String
    open var StyleName: String
    open var SmallStyleName: String
    open fun clone(): JavascriptSlateIcon

    companion object {
        fun C(Other: UObject): JavascriptSlateIcon
        fun C(Other: Any): JavascriptSlateIcon
    }
}

external open class JavascriptComboButtonContext : UObject {
    constructor()
    constructor(Outer: UObject)
    open var OnGetLabel: UnrealEngineDelegate<() -> String>
    open var OnGetTooltip: UnrealEngineDelegate<() -> String>
    open var OnGetIcon: UnrealEngineDelegate<() -> JavascriptSlateIcon>
    open var OnGetWidget: UnrealEngineDelegate<() -> JavascriptSlateWidget>
    open var OnCanExecute: UnrealEngineDelegate<() -> Boolean>

    companion object {
        fun Load(ResourceName: String): JavascriptComboButtonContext
        fun Find(Outer: UObject, ResourceName: String): JavascriptComboButtonContext
        fun GetDefaultObject(): JavascriptComboButtonContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptComboButtonContext
        fun C(Other: UObject): JavascriptComboButtonContext
        fun C(Other: Any): JavascriptComboButtonContext
    }
}

external open class JavascriptGameViewport : ContentWidget {
    constructor()
    constructor(Outer: UObject)
    open var BackgroundColor: LinearColor
    open fun Spawn(ActorClass: UnrealEngineClass): Actor
    open fun SetViewRotation(Rotation: Rotator)
    open fun SetViewLocation(Location: Vector)
    open fun GetViewRotation(): Rotator
    open fun GetViewportWorld(): World
    open fun GetViewLocation(): Vector

    companion object {
        fun Load(ResourceName: String): JavascriptGameViewport
        fun Find(Outer: UObject, ResourceName: String): JavascriptGameViewport
        fun GetDefaultObject(): JavascriptGameViewport
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptGameViewport
        fun C(Other: UObject): JavascriptGameViewport
        fun C(Other: Any): JavascriptGameViewport
    }
}

external open class TableColumnHeaderStyle : SlateWidgetStyle {
    open var SortPrimaryAscendingImage: SlateBrush
    open var SortPrimaryDescendingImage: SlateBrush
    open var SortSecondaryAscendingImage: SlateBrush
    open var SortSecondaryDescendingImage: SlateBrush
    open var NormalBrush: SlateBrush
    open var HoveredBrush: SlateBrush
    open var MenuDropdownImage: SlateBrush
    open var MenuDropdownNormalBorderBrush: SlateBrush
    open var MenuDropdownHoveredBorderBrush: SlateBrush
    override fun clone(): TableColumnHeaderStyle

    companion object {
        fun C(Other: UObject): TableColumnHeaderStyle
        fun C(Other: Any): TableColumnHeaderStyle
    }
}

external open class SplitterStyle : SlateWidgetStyle {
    open var HandleNormalBrush: SlateBrush
    open var HandleHighlightBrush: SlateBrush
    override fun clone(): SplitterStyle

    companion object {
        fun C(Other: UObject): SplitterStyle
        fun C(Other: Any): SplitterStyle
    }
}

external open class HeaderRowStyle : SlateWidgetStyle {
    open var ColumnStyle: TableColumnHeaderStyle
    open var LastColumnStyle: TableColumnHeaderStyle
    open var ColumnSplitterStyle: SplitterStyle
    open var BackgroundBrush: SlateBrush
    open var ForegroundColor: SlateColor
    override fun clone(): HeaderRowStyle

    companion object {
        fun C(Other: UObject): HeaderRowStyle
        fun C(Other: Any): HeaderRowStyle
    }
}

external open class JavascriptColumn {
    open var ID: String
    open var Width: Number
    open var Widget: Widget
    open fun clone(): JavascriptColumn

    companion object {
        fun C(Other: UObject): JavascriptColumn
        fun C(Other: Any): JavascriptColumn
    }
}

external interface `T$141` {
    var OutItems: Array<UObject>
    var `$`: Boolean
}

external interface `T$142` {
    var OutItems: Array<UObject>
}

external open class JavascriptTreeView : ListViewBase {
    constructor()
    constructor(Outer: UObject)
    open var OnGenerateRowEvent: UnrealEngineDelegate<(UObject: UObject, ID: String, Instance: JavascriptTreeView) -> Widget>
    open var OnExpansionChanged: UnrealEngineDelegate<(Item: UObject, bExpanded: Boolean, Instance: JavascriptTreeView) -> Unit>
    open var OnContextMenuOpening: UnrealEngineDelegate<(Instance: JavascriptTreeView) -> Widget>
    open var OnGetChildren: UnrealEngineDelegate<(Item: UObject, Instance: JavascriptTreeView) -> Unit>
    open var JavascriptContext: JavascriptContext
    open var Items: Array<UObject>
    open var HeaderRowStyle: HeaderRowStyle
    open var TableRowStyle: TableRowStyle
    open var ScrollBarStyle: ScrollBarStyle
    open var SelectionMode: String /* "None" | "Single" | "SingleToggle" | "Multi" | "ESelectionMode_MAX" */
    open var Children: Array<UObject>
    open var Columns: Array<JavascriptColumn>
    open var ColumnWidgets: Array<Widget>
    open fun SetSingleExpandedItem(InItem: UObject)
    open fun SetSelection(SoleSelectedItem: UObject)
    open fun SetItemExpansion(InItem: UObject, InShouldExpandItem: Boolean)
    open fun SetDoubleClickSelection(SelectedItem: UObject)
    open fun RequestTreeRefresh()
    open fun OnSelectionChanged(UObject: UObject, Type: String /* "OnKeyPress" | "OnNavigation" | "OnMouseClick" | "Direct" | "ESelectInfo_MAX" */)
    open fun OnDoubleClick(UObject: UObject)
    open fun IsItemExpanded(InItem: UObject): Boolean
    open fun IsDoubleClickSelection(SelectedItem: UObject): Boolean
    open fun GetSelectedItems(OutItems: Array<UObject> = definedExternally): `T$141`
    open fun GetDoubleClickedItems(OutItems: Array<UObject> = definedExternally): `T$142`
    open fun ClearDoubleClickSelection()

    companion object {
        fun Load(ResourceName: String): JavascriptTreeView
        fun Find(Outer: UObject, ResourceName: String): JavascriptTreeView
        fun GetDefaultObject(): JavascriptTreeView
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptTreeView
        fun C(Other: UObject): JavascriptTreeView
        fun C(Other: Any): JavascriptTreeView
    }
}

external open class JavascriptListView : JavascriptTreeView {
    constructor()
    constructor(Outer: UObject)
    open var ItemHeight: Number
    open fun RequestListRefresh()
    open fun OnClick(UObject: UObject)

    companion object {
        fun Load(ResourceName: String): JavascriptListView
        fun Find(Outer: UObject, ResourceName: String): JavascriptListView
        fun GetDefaultObject(): JavascriptListView
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptListView
        fun C(Other: UObject): JavascriptListView
        fun C(Other: Any): JavascriptListView
    }
}

external object EJavasrciptUserInterfaceActionType {
    var None: String /* "None" */
    var Button: String /* "Button" */
    var ToggleButton: String /* "ToggleButton" */
    var RadioButton: String /* "RadioButton" */
    var Check: String /* "Check" */
    var CollapsedButton: String /* "CollapsedButton" */
    var EJavasrciptUserInterfaceActionType_MAX: String /* "EJavasrciptUserInterfaceActionType_MAX" */
}

external open class JavascriptMenuContext : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Description: String
    open var Tooltip: String
    open var Icon: JavascriptSlateIcon
    open var ActionType: String /* "None" | "Button" | "ToggleButton" | "RadioButton" | "Check" | "CollapsedButton" | "EJavasrciptUserInterfaceActionType_MAX" */
    open var OnCanExecute: UnrealEngineDelegate<() -> Boolean>
    open var OnExecute: UnrealEngineDelegate<() -> Unit>
    open var OnGetActionCheckState: UnrealEngineDelegate<() -> String>

    companion object {
        fun Load(ResourceName: String): JavascriptMenuContext
        fun Find(Outer: UObject, ResourceName: String): JavascriptMenuContext
        fun GetDefaultObject(): JavascriptMenuContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptMenuContext
        fun C(Other: UObject): JavascriptMenuContext
        fun C(Other: Any): JavascriptMenuContext
    }
}

external open class JavascriptUICommandInfo {
    open fun clone(): JavascriptUICommandInfo

    companion object {
        fun C(Other: UObject): JavascriptUICommandInfo
        fun C(Other: Any): JavascriptUICommandInfo
        fun GenericCommand(What: String): JavascriptUICommandInfo
    }
}

external open class JavascriptUICommand {
    open var ID: String
    open var FriendlyName: String
    open var Description: String
    open var DefaultChord: InputChord
    open var ActionType: String /* "None" | "Button" | "ToggleButton" | "RadioButton" | "Check" | "CollapsedButton" | "EJavasrciptUserInterfaceActionType_MAX" */
    open var CommandInfo: JavascriptUICommandInfo
    open var IconStyleName: String
    open fun clone(): JavascriptUICommand

    companion object {
        fun C(Other: UObject): JavascriptUICommand
        fun C(Other: Any): JavascriptUICommand
    }
}

external open class JavascriptBindingContext {
    open fun clone(): JavascriptBindingContext
    open fun Destroy()
    open fun UI_COMMAND_Function(Command: JavascriptUICommand, InTextSubNamespace: String): JavascriptUICommandInfo

    companion object {
        fun C(Other: UObject): JavascriptBindingContext
        fun C(Other: Any): JavascriptBindingContext
        fun Destroy(Context: JavascriptBindingContext)
        fun UI_COMMAND_Function(This: JavascriptBindingContext, Command: JavascriptUICommand, InTextSubNamespace: String): JavascriptUICommandInfo
        fun NewBindingContext(InContextName: String, InContextDesc: String, InContextParent: String, InStyleSetName: String): JavascriptBindingContext
    }
}

external object EJavascriptExtensionHook {
    var Before: String /* "Before" */
    var After: String /* "After" */
    var First: String /* "First" */
    var EJavascriptExtensionHook_MAX: String /* "EJavascriptExtensionHook_MAX" */
}

external open class JavascriptUICommandList {
    open fun clone(): JavascriptUICommandList
    open fun CreateMenuBarBuilder(UFunction: JavascriptFunction)
    open fun CreateMenuBuilder(bInShouldCloseWindowAfterMenuSelection: Boolean, UFunction: JavascriptFunction)
    open fun CreateToolbarBuilder(Orientation: String /* "Orient_Horizontal" | "Orient_Vertical" | "Orient_MAX" */, UFunction: JavascriptFunction)
    open fun ProcessCommandBindings_KeyEvent(InKeyEvent: KeyEvent): Boolean
    open fun ProcessCommandBindings_PointerEvent(InMouseEvent: UPointerEvent): Boolean

    companion object {
        fun C(Other: UObject): JavascriptUICommandList
        fun C(Other: Any): JavascriptUICommandList
        fun CreateMenuBarBuilder(CommandList: JavascriptUICommandList, UFunction: JavascriptFunction)
        fun CreateMenuBuilder(CommandList: JavascriptUICommandList, bInShouldCloseWindowAfterMenuSelection: Boolean, UFunction: JavascriptFunction)
        fun CreateToolbarBuilder(CommandList: JavascriptUICommandList, Orientation: String /* "Orient_Horizontal" | "Orient_Vertical" | "Orient_MAX" */, UFunction: JavascriptFunction)
        fun ProcessCommandBindings_KeyEvent(CommandList: JavascriptUICommandList, InKeyEvent: KeyEvent): Boolean
        fun ProcessCommandBindings_PointerEvent(CommandList: JavascriptUICommandList, InMouseEvent: UPointerEvent): Boolean
        fun GetLevelEditorActions(): JavascriptUICommandList
        fun CreateUICommandList(): JavascriptUICommandList
    }
}

external open class JavascriptExtensionBase {
    open fun clone(): JavascriptExtensionBase

    companion object {
        fun C(Other: UObject): JavascriptExtensionBase
        fun C(Other: Any): JavascriptExtensionBase
    }
}

external open class JavascriptUICommands : UObject {
    constructor()
    constructor(Outer: UObject)
    open var OnExecuteAction: UnrealEngineDelegate<(ID: String) -> Unit>
    open var OnCanExecuteAction: UnrealEngineDelegate<(ID: String) -> Boolean>
    open var OnIsActionChecked: UnrealEngineDelegate<(ID: String) -> Boolean>
    open var OnIsActionButtonVisible: UnrealEngineDelegate<(ID: String) -> Boolean>
    open var Commands: Array<JavascriptUICommand>
    open var ContextName: String
    open var ContextDesc: String
    open var ContextNameParent: String
    open var StyleSetName: String
    open var TextSubNamespace: String
    open var CommandInfos: Array<JavascriptUICommandInfo>
    open var BindingContext: JavascriptBindingContext
    open fun Uninitialize()
    open fun Unbind(List: JavascriptUICommandList)
    open fun Refresh()
    open fun Initialize()
    open fun GetAction(ID: String): JavascriptUICommandInfo
    open fun Discard()
    open fun Commit()
    open fun Bind(List: JavascriptUICommandList)

    companion object {
        fun Load(ResourceName: String): JavascriptUICommands
        fun Find(Outer: UObject, ResourceName: String): JavascriptUICommands
        fun GetDefaultObject(): JavascriptUICommands
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptUICommands
        fun BroadcastCommandsChanged(InContextName: String)
        fun C(Other: UObject): JavascriptUICommands
        fun C(Other: Any): JavascriptUICommands
    }
}

external open class JavascriptToolbarButtonContext : UObject {
    constructor()
    constructor(Outer: UObject)
    open var OnGetLabel: UnrealEngineDelegate<() -> String>
    open var OnGetTooltip: UnrealEngineDelegate<() -> String>
    open var OnGetIcon: UnrealEngineDelegate<() -> JavascriptSlateIcon>
    open var OnExecuteAction: UnrealEngineDelegate<(EditingObject: UObject) -> Unit>
    open var OnCanExecuteAction: UnrealEngineDelegate<(EditingObject: UObject) -> Boolean>
    open var OnIsActionChecked: UnrealEngineDelegate<(EditingObject: UObject) -> Boolean>
    open var OnIsActionButtonVisible: UnrealEngineDelegate<(EditingObject: UObject) -> Boolean>
    open fun UnmarkReferencedObject()
    open fun MarkReferencedObject()

    companion object {
        fun Load(ResourceName: String): JavascriptToolbarButtonContext
        fun Find(Outer: UObject, ResourceName: String): JavascriptToolbarButtonContext
        fun GetDefaultObject(): JavascriptToolbarButtonContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptToolbarButtonContext
        fun C(Other: UObject): JavascriptToolbarButtonContext
        fun C(Other: Any): JavascriptToolbarButtonContext
    }
}

external interface `T$143` {
    var Builder: JavascriptMenuBuilder
}

external interface `T$144` {
    var MenuBuilder: JavascriptMenuBuilder
}

external open class JavascriptMenuBuilder {
    open fun clone(): JavascriptMenuBuilder
    open fun AddComboButton(UObject: JavascriptComboButtonContext = definedExternally): `T$143`
    open fun AddMenuByCommands(UICommands: JavascriptUICommands = definedExternally): `T$143`
    open fun AddMenuEntry(UObject: JavascriptMenuContext = definedExternally): `T$143`
    open fun AddPullDownMenu(InMenuLabel: String = definedExternally, InToolTip: String = definedExternally, InPullDownMenu: JavascriptFunction = definedExternally, InExtensionHook: String = definedExternally, InTutorialHighlightName: String = definedExternally): `T$144`
    open fun AddSeparator(): `T$143`
    open fun AddSubMenu(Label: String = definedExternally, Tooltip: String = definedExternally, bInOpenSubMenuOnClick: Boolean = definedExternally, UFunction: JavascriptFunction = definedExternally): `T$143`
    open fun AddToolBarButton(CommandInfo: JavascriptUICommandInfo = definedExternally): `T$143`
    open fun AddToolBarButtonByContext(Context: JavascriptToolbarButtonContext = definedExternally, EditingObject: UObject = definedExternally): `T$143`
    open fun AddWidget(Widget: Widget = definedExternally, Label: String = definedExternally, bNoIndent: Boolean = definedExternally, InTutorialHighlightName: String = definedExternally, bSearchable: Boolean = definedExternally): `T$143`
    open fun BeginSection(InExtensionHook: String = definedExternally, MenuHeadingText: String = definedExternally): `T$143`
    open fun EndSection(): `T$143`
    open fun PopCommandList(): `T$143`
    open fun PushCommandList(List: JavascriptUICommandList = definedExternally): `T$143`

    companion object {
        fun C(Other: UObject): JavascriptMenuBuilder
        fun C(Other: Any): JavascriptMenuBuilder
        fun AddComboButton(Builder: JavascriptMenuBuilder = definedExternally, UObject: JavascriptComboButtonContext = definedExternally): `T$143`
        fun AddMenuByCommands(Builder: JavascriptMenuBuilder = definedExternally, UICommands: JavascriptUICommands = definedExternally): `T$143`
        fun AddMenuEntry(Builder: JavascriptMenuBuilder = definedExternally, UObject: JavascriptMenuContext = definedExternally): `T$143`
        fun AddPullDownMenu(MenuBuilder: JavascriptMenuBuilder = definedExternally, InMenuLabel: String = definedExternally, InToolTip: String = definedExternally, InPullDownMenu: JavascriptFunction = definedExternally, InExtensionHook: String = definedExternally, InTutorialHighlightName: String = definedExternally): `T$144`
        fun AddSeparator(Builder: JavascriptMenuBuilder = definedExternally): `T$143`
        fun AddSubMenu(Builder: JavascriptMenuBuilder = definedExternally, Label: String = definedExternally, Tooltip: String = definedExternally, bInOpenSubMenuOnClick: Boolean = definedExternally, UFunction: JavascriptFunction = definedExternally): `T$143`
        fun AddToolBarButton(Builder: JavascriptMenuBuilder = definedExternally, CommandInfo: JavascriptUICommandInfo = definedExternally): `T$143`
        fun AddToolBarButtonByContext(Builder: JavascriptMenuBuilder = definedExternally, Context: JavascriptToolbarButtonContext = definedExternally, EditingObject: UObject = definedExternally): `T$143`
        fun AddWidget(Builder: JavascriptMenuBuilder = definedExternally, Widget: Widget = definedExternally, Label: String = definedExternally, bNoIndent: Boolean = definedExternally, InTutorialHighlightName: String = definedExternally, bSearchable: Boolean = definedExternally): `T$143`
        fun BeginSection(Builder: JavascriptMenuBuilder = definedExternally, InExtensionHook: String = definedExternally, MenuHeadingText: String = definedExternally): `T$143`
        fun EndSection(Builder: JavascriptMenuBuilder = definedExternally): `T$143`
        fun PopCommandList(Builder: JavascriptMenuBuilder = definedExternally): `T$143`
        fun PushCommandList(Builder: JavascriptMenuBuilder = definedExternally, List: JavascriptUICommandList = definedExternally): `T$143`
    }
}

external open class JavascriptExtender {
    open fun clone(): JavascriptExtender
    open fun AddMenubarExtension(ExtensionHook: String, HookPosition: String /* "Before" | "After" | "First" | "EJavascriptExtensionHook_MAX" */, CommandList: JavascriptUICommandList, UFunction: JavascriptFunction): JavascriptExtensionBase
    open fun AddMenuExtension(ExtensionHook: String, HookPosition: String /* "Before" | "After" | "First" | "EJavascriptExtensionHook_MAX" */, CommandList: JavascriptUICommandList, UFunction: JavascriptFunction): JavascriptExtensionBase
    open fun AddToolBarExtension(ExtensionHook: String, HookPosition: String /* "Before" | "After" | "First" | "EJavascriptExtensionHook_MAX" */, CommandList: JavascriptUICommandList, UFunction: JavascriptFunction): JavascriptExtensionBase
    open fun Apply(ExtensionHook: String, HookPosition: String /* "Before" | "After" | "First" | "EJavascriptExtensionHook_MAX" */, MenuBuilder: JavascriptMenuBuilder = definedExternally): `T$144`
    open fun RemoveExtension(Extension: JavascriptExtensionBase)

    companion object {
        fun C(Other: UObject): JavascriptExtender
        fun C(Other: Any): JavascriptExtender
        fun AddMenubarExtension(Extender: JavascriptExtender, ExtensionHook: String, HookPosition: String /* "Before" | "After" | "First" | "EJavascriptExtensionHook_MAX" */, CommandList: JavascriptUICommandList, UFunction: JavascriptFunction): JavascriptExtensionBase
        fun AddMenuExtension(Extender: JavascriptExtender, ExtensionHook: String, HookPosition: String /* "Before" | "After" | "First" | "EJavascriptExtensionHook_MAX" */, CommandList: JavascriptUICommandList, UFunction: JavascriptFunction): JavascriptExtensionBase
        fun AddToolBarExtension(Extender: JavascriptExtender, ExtensionHook: String, HookPosition: String /* "Before" | "After" | "First" | "EJavascriptExtensionHook_MAX" */, CommandList: JavascriptUICommandList, UFunction: JavascriptFunction): JavascriptExtensionBase
        fun Apply(Extender: JavascriptExtender, ExtensionHook: String, HookPosition: String /* "Before" | "After" | "First" | "EJavascriptExtensionHook_MAX" */, MenuBuilder: JavascriptMenuBuilder = definedExternally): `T$144`
        fun RemoveExtension(Extender: JavascriptExtender, Extension: JavascriptExtensionBase)
        fun Combine(Extenders: Array<JavascriptExtender>): JavascriptExtender
    }
}

external open class JavascriptMenuLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): JavascriptMenuLibrary
        fun Find(Outer: UObject, ResourceName: String): JavascriptMenuLibrary
        fun GetDefaultObject(): JavascriptMenuLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptMenuLibrary
        fun UI_COMMAND_Function(This: JavascriptBindingContext, Command: JavascriptUICommand, InTextSubNamespace: String): JavascriptUICommandInfo
        fun RemoveExtension(Extender: JavascriptExtender, Extension: JavascriptExtensionBase)
        fun PushCommandList(Builder: JavascriptMenuBuilder = definedExternally, List: JavascriptUICommandList = definedExternally): `T$143`
        fun ProcessCommandBindings_PointerEvent(CommandList: JavascriptUICommandList, InMouseEvent: UPointerEvent): Boolean
        fun ProcessCommandBindings_KeyEvent(CommandList: JavascriptUICommandList, InKeyEvent: KeyEvent): Boolean
        fun PopCommandList(Builder: JavascriptMenuBuilder = definedExternally): `T$143`
        fun NewBindingContext(InContextName: String, InContextDesc: String, InContextParent: String, InStyleSetName: String): JavascriptBindingContext
        fun GenericCommand(What: String): JavascriptUICommandInfo
        fun EndSection(Builder: JavascriptMenuBuilder = definedExternally): `T$143`
        fun Destroy(Context: JavascriptBindingContext)
        fun CreateUICommandList(): JavascriptUICommandList
        fun CreateToolbarBuilder(CommandList: JavascriptUICommandList, Orientation: String /* "Orient_Horizontal" | "Orient_Vertical" | "Orient_MAX" */, UFunction: JavascriptFunction)
        fun CreateMenuBuilder(CommandList: JavascriptUICommandList, bInShouldCloseWindowAfterMenuSelection: Boolean, UFunction: JavascriptFunction)
        fun CreateMenuBarBuilder(CommandList: JavascriptUICommandList, UFunction: JavascriptFunction)
        fun Combine(Extenders: Array<JavascriptExtender>): JavascriptExtender
        fun BeginSection(Builder: JavascriptMenuBuilder = definedExternally, InExtensionHook: String = definedExternally, MenuHeadingText: String = definedExternally): `T$143`
        fun Apply(Extender: JavascriptExtender, ExtensionHook: String, HookPosition: String /* "Before" | "After" | "First" | "EJavascriptExtensionHook_MAX" */, MenuBuilder: JavascriptMenuBuilder = definedExternally): `T$144`
        fun AddWidget(Builder: JavascriptMenuBuilder = definedExternally, Widget: Widget = definedExternally, Label: String = definedExternally, bNoIndent: Boolean = definedExternally, InTutorialHighlightName: String = definedExternally, bSearchable: Boolean = definedExternally): `T$143`
        fun AddToolBarExtension(Extender: JavascriptExtender, ExtensionHook: String, HookPosition: String /* "Before" | "After" | "First" | "EJavascriptExtensionHook_MAX" */, CommandList: JavascriptUICommandList, UFunction: JavascriptFunction): JavascriptExtensionBase
        fun AddToolBarButtonByContext(Builder: JavascriptMenuBuilder = definedExternally, Context: JavascriptToolbarButtonContext = definedExternally, EditingObject: UObject = definedExternally): `T$143`
        fun AddToolBarButton(Builder: JavascriptMenuBuilder = definedExternally, CommandInfo: JavascriptUICommandInfo = definedExternally): `T$143`
        fun AddSubMenu(Builder: JavascriptMenuBuilder = definedExternally, Label: String = definedExternally, Tooltip: String = definedExternally, bInOpenSubMenuOnClick: Boolean = definedExternally, UFunction: JavascriptFunction = definedExternally): `T$143`
        fun AddSeparator(Builder: JavascriptMenuBuilder = definedExternally): `T$143`
        fun AddPullDownMenu(MenuBuilder: JavascriptMenuBuilder = definedExternally, InMenuLabel: String = definedExternally, InToolTip: String = definedExternally, InPullDownMenu: JavascriptFunction = definedExternally, InExtensionHook: String = definedExternally, InTutorialHighlightName: String = definedExternally): `T$144`
        fun AddMenuExtension(Extender: JavascriptExtender, ExtensionHook: String, HookPosition: String /* "Before" | "After" | "First" | "EJavascriptExtensionHook_MAX" */, CommandList: JavascriptUICommandList, UFunction: JavascriptFunction): JavascriptExtensionBase
        fun AddMenuEntry(Builder: JavascriptMenuBuilder = definedExternally, UObject: JavascriptMenuContext = definedExternally): `T$143`
        fun AddMenuByCommands(Builder: JavascriptMenuBuilder = definedExternally, UICommands: JavascriptUICommands = definedExternally): `T$143`
        fun AddMenubarExtension(Extender: JavascriptExtender, ExtensionHook: String, HookPosition: String /* "Before" | "After" | "First" | "EJavascriptExtensionHook_MAX" */, CommandList: JavascriptUICommandList, UFunction: JavascriptFunction): JavascriptExtensionBase
        fun AddComboButton(Builder: JavascriptMenuBuilder = definedExternally, UObject: JavascriptComboButtonContext = definedExternally): `T$143`
        fun C(Other: UObject): JavascriptMenuLibrary
        fun C(Other: Any): JavascriptMenuLibrary
    }
}

external open class JavascriptMultiBox : Widget {
    constructor()
    constructor(Outer: UObject)
    open var OnHook: UnrealEngineDelegate<(ID: String, Self: JavascriptMultiBox, CurrentBuilder: JavascriptMenuBuilder) -> Unit>
    open fun AddSubMenu(Builder: JavascriptMenuBuilder = definedExternally, ID: String = definedExternally, Label: String = definedExternally, Tooltip: String = definedExternally, bInOpenSubMenuOnClick: Boolean = definedExternally): `T$143`
    open fun AddPullDownMenu(Builder: JavascriptMenuBuilder = definedExternally, ID: String = definedExternally, Label: String = definedExternally, Tooltip: String = definedExternally): `T$143`

    companion object {
        fun Load(ResourceName: String): JavascriptMultiBox
        fun Find(Outer: UObject, ResourceName: String): JavascriptMultiBox
        fun GetDefaultObject(): JavascriptMultiBox
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptMultiBox
        fun Bind(Builder: JavascriptMenuBuilder)
        fun C(Other: UObject): JavascriptMultiBox
        fun C(Other: Any): JavascriptMultiBox
    }
}

external open class JavascriptSlateTextRun {
    open fun clone(): JavascriptSlateTextRun

    companion object {
        fun C(Other: UObject): JavascriptSlateTextRun
        fun C(Other: Any): JavascriptSlateTextRun
    }
}

external open class JavascriptTextModel : UObject {
    constructor()
    constructor(Outer: UObject)
    open fun SetString(string: String)
    open fun GetString(): String
    open fun CreateRun(MessageTextStyle: TextBlockStyle, BeginIndex: Number, EndIndex: Number): JavascriptSlateTextRun

    companion object {
        fun Load(ResourceName: String): JavascriptTextModel
        fun Find(Outer: UObject, ResourceName: String): JavascriptTextModel
        fun GetDefaultObject(): JavascriptTextModel
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptTextModel
        fun C(Other: UObject): JavascriptTextModel
        fun C(Other: Any): JavascriptTextModel
    }
}

external interface `T$145` {
    var TextLayout: JavascriptTextLayout
}

external open class JavascriptTextLayout {
    open fun clone(): JavascriptTextLayout
    open fun AddLine(Model: JavascriptTextModel = definedExternally, Runs: Array<JavascriptSlateTextRun> = definedExternally): `T$145`
    open fun ClearLines(): `T$145`
    open fun GetAsText(): String
    open fun GetLineLength(): Number

    companion object {
        fun C(Other: UObject): JavascriptTextLayout
        fun C(Other: Any): JavascriptTextLayout
        fun AddLine(TextLayout: JavascriptTextLayout = definedExternally, Model: JavascriptTextModel = definedExternally, Runs: Array<JavascriptSlateTextRun> = definedExternally): `T$145`
        fun ClearLines(TextLayout: JavascriptTextLayout = definedExternally): `T$145`
        fun GetAsText(TextLayout: JavascriptTextLayout): String
        fun GetLineLength(TargetTextLayout: JavascriptTextLayout): Number
    }
}

external open class JavascriptMultiLineEditableTextBox : MultiLineEditableTextBox {
    constructor()
    constructor(Outer: UObject)
    open var OnVScrollBarUserScrolled: UnrealEngineMulticastDelegate<(Offset: Number) -> Unit>
    open var GetTextDelegate: UnrealEngineDelegate<(TextLayout: JavascriptTextLayout) -> String>
    open var SetTextDelegate: UnrealEngineDelegate<(InText: String, TextLayout: JavascriptTextLayout) -> Unit>
    open var bAlwaysShowScrollbars: Boolean
    open fun ScrollTo(Line: Number, Offset: Number)
    open fun Refresh()
    open fun GoTo(Line: Number, Offset: Number)

    companion object {
        fun Load(ResourceName: String): JavascriptMultiLineEditableTextBox
        fun Find(Outer: UObject, ResourceName: String): JavascriptMultiLineEditableTextBox
        fun GetDefaultObject(): JavascriptMultiLineEditableTextBox
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptMultiLineEditableTextBox
        fun C(Other: UObject): JavascriptMultiLineEditableTextBox
        fun C(Other: Any): JavascriptMultiLineEditableTextBox
    }
}

external open class JavascriptRichTextBlockHyperlinkDecorator : RichTextBlockDecorator {
    constructor()
    constructor(Outer: UObject)
    open var HyperlinkId: String
    open var OnClick: UnrealEngineMulticastDelegate<(Self: JavascriptRichTextBlockHyperlinkDecorator) -> Unit>
    open fun GetMetadata(Key: String): String

    companion object {
        fun Load(ResourceName: String): JavascriptRichTextBlockHyperlinkDecorator
        fun Find(Outer: UObject, ResourceName: String): JavascriptRichTextBlockHyperlinkDecorator
        fun GetDefaultObject(): JavascriptRichTextBlockHyperlinkDecorator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptRichTextBlockHyperlinkDecorator
        fun C(Other: UObject): JavascriptRichTextBlockHyperlinkDecorator
        fun C(Other: Any): JavascriptRichTextBlockHyperlinkDecorator
    }
}

external open class JavascriptSearchBox : Widget {
    constructor()
    constructor(Outer: UObject)
    open var OnTextChanged: UnrealEngineMulticastDelegate<(text: String) -> Unit>
    open var OnTextCommitted: UnrealEngineMulticastDelegate<(text: String, CommitMethod: String /* "Default" | "OnEnter" | "OnUserMovedFocus" | "OnCleared" | "ETextCommit_MAX" */) -> Unit>
    open var text: String
    open var TextDelegate: UnrealEngineDelegate<() -> String>
    open var HintText: String
    open var HintTextDelegate: UnrealEngineDelegate<() -> String>
    open fun SetText(InText: String)
    open fun SetHintText(InHintText: String)

    companion object {
        fun Load(ResourceName: String): JavascriptSearchBox
        fun Find(Outer: UObject, ResourceName: String): JavascriptSearchBox
        fun GetDefaultObject(): JavascriptSearchBox
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptSearchBox
        fun C(Other: UObject): JavascriptSearchBox
        fun C(Other: Any): JavascriptSearchBox
    }
}

external open class JavascriptStyleSet {
    open var StyleSetName: String
    open fun clone(): JavascriptStyleSet
    open fun GetBrush(StyleName: String): SlateBrush
    open fun GetButtonStyle(StyleName: String): ButtonStyle
    open fun GetCheckBoxStyle(StyleName: String): CheckBoxStyle
    open fun GetColor(StyleName: String): LinearColor
    open fun GetComboBoxStyle(StyleName: String): ComboBoxStyle
    open fun GetComboButtonStyle(StyleName: String): ComboButtonStyle
    open fun GetEditableTextBoxStyle(StyleName: String): EditableTextBoxStyle
    open fun GetEditableTextStyle(StyleName: String): EditableTextStyle
    open fun GetFloat(StyleName: String): Number
    open fun GetFontStyle(StyleName: String): SlateFontInfo
    open fun GetMargin(StyleName: String): Margin
    open fun GetProgressBarStyle(StyleName: String): ProgressBarStyle
    open fun GetSlateColor(StyleName: String): SlateColor
    open fun GetSound(StyleName: String): SlateSound
    open fun GetTextBlockStyle(StyleName: String): TextBlockStyle
    open fun GetVector(StyleName: String): Vector2D

    companion object {
        fun C(Other: UObject): JavascriptStyleSet
        fun C(Other: Any): JavascriptStyleSet
        fun GetBrush(Handle: JavascriptStyleSet, StyleName: String): SlateBrush
        fun GetButtonStyle(Handle: JavascriptStyleSet, StyleName: String): ButtonStyle
        fun GetCheckBoxStyle(Handle: JavascriptStyleSet, StyleName: String): CheckBoxStyle
        fun GetColor(Handle: JavascriptStyleSet, StyleName: String): LinearColor
        fun GetComboBoxStyle(Handle: JavascriptStyleSet, StyleName: String): ComboBoxStyle
        fun GetComboButtonStyle(Handle: JavascriptStyleSet, StyleName: String): ComboButtonStyle
        fun GetEditableTextBoxStyle(Handle: JavascriptStyleSet, StyleName: String): EditableTextBoxStyle
        fun GetEditableTextStyle(Handle: JavascriptStyleSet, StyleName: String): EditableTextStyle
        fun GetFloat(Handle: JavascriptStyleSet, StyleName: String): Number
        fun GetFontStyle(Handle: JavascriptStyleSet, StyleName: String): SlateFontInfo
        fun GetMargin(Handle: JavascriptStyleSet, StyleName: String): Margin
        fun GetProgressBarStyle(Handle: JavascriptStyleSet, StyleName: String): ProgressBarStyle
        fun GetSlateColor(Handle: JavascriptStyleSet, StyleName: String): SlateColor
        fun GetSound(Handle: JavascriptStyleSet, StyleName: String): SlateSound
        fun GetTextBlockStyle(Handle: JavascriptStyleSet, StyleName: String): TextBlockStyle
        fun GetVector(Handle: JavascriptStyleSet, StyleName: String): Vector2D
    }
}

external open class JavascriptStyleSetLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)
    open var SlateColor: SlateColor
    open var SlateBrush: SlateBrush
    open var ButtonStyle: ButtonStyle
    open var TextBlockStyle: TextBlockStyle
    open var EditableTextStyle: EditableTextStyle
    open var EditableTextBoxStyle: EditableTextBoxStyle
    open var CheckBoxStyle: CheckBoxStyle
    open var ComboBoxStyle: ComboBoxStyle
    open var ComboButtonStyle: ComboButtonStyle
    open var ProgressBarStyle: ProgressBarStyle

    companion object {
        fun Load(ResourceName: String): JavascriptStyleSetLibrary
        fun Find(Outer: UObject, ResourceName: String): JavascriptStyleSetLibrary
        fun GetDefaultObject(): JavascriptStyleSetLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptStyleSetLibrary
        fun GetVector(Handle: JavascriptStyleSet, StyleName: String): Vector2D
        fun GetTextBlockStyle(Handle: JavascriptStyleSet, StyleName: String): TextBlockStyle
        fun GetSound(Handle: JavascriptStyleSet, StyleName: String): SlateSound
        fun GetSlateColor(Handle: JavascriptStyleSet, StyleName: String): SlateColor
        fun GetProgressBarStyle(Handle: JavascriptStyleSet, StyleName: String): ProgressBarStyle
        fun GetMargin(Handle: JavascriptStyleSet, StyleName: String): Margin
        fun GetFontStyle(Handle: JavascriptStyleSet, StyleName: String): SlateFontInfo
        fun GetFloat(Handle: JavascriptStyleSet, StyleName: String): Number
        fun GetEditableTextStyle(Handle: JavascriptStyleSet, StyleName: String): EditableTextStyle
        fun GetEditableTextBoxStyle(Handle: JavascriptStyleSet, StyleName: String): EditableTextBoxStyle
        fun GetComboButtonStyle(Handle: JavascriptStyleSet, StyleName: String): ComboButtonStyle
        fun GetComboBoxStyle(Handle: JavascriptStyleSet, StyleName: String): ComboBoxStyle
        fun GetColor(Handle: JavascriptStyleSet, StyleName: String): LinearColor
        fun GetCheckBoxStyle(Handle: JavascriptStyleSet, StyleName: String): CheckBoxStyle
        fun GetButtonStyle(Handle: JavascriptStyleSet, StyleName: String): ButtonStyle
        fun GetBrush(Handle: JavascriptStyleSet, StyleName: String): SlateBrush
        fun C(Other: UObject): JavascriptStyleSetLibrary
        fun C(Other: Any): JavascriptStyleSetLibrary
    }
}

external open class JavascriptTextBlock : TextBlock {
    constructor()
    constructor(Outer: UObject)
    open var HighlightText: String
    open var HighlightTextDelegate: UnrealEngineDelegate<() -> String>
    open fun SetHighlightText(InHighlightText: String)

    companion object {
        fun Load(ResourceName: String): JavascriptTextBlock
        fun Find(Outer: UObject, ResourceName: String): JavascriptTextBlock
        fun GetDefaultObject(): JavascriptTextBlock
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptTextBlock
        fun C(Other: UObject): JavascriptTextBlock
        fun C(Other: Any): JavascriptTextBlock
    }
}

external open class JavascriptTileView : TileView {
    constructor()
    constructor(Outer: UObject)
    open var JavascriptContext: JavascriptContext
    open fun OnSelectionChanged(UObject: UObject, Type: String /* "OnKeyPress" | "OnNavigation" | "OnMouseClick" | "Direct" | "ESelectInfo_MAX" */)
    open fun OnDoubleClick(UObject: UObject)
    open fun OnClick(UObject: UObject)

    companion object {
        fun Load(ResourceName: String): JavascriptTileView
        fun Find(Outer: UObject, ResourceName: String): JavascriptTileView
        fun GetDefaultObject(): JavascriptTileView
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptTileView
        fun C(Other: UObject): JavascriptTileView
        fun C(Other: Any): JavascriptTileView
    }
}

external interface `T$146` {
    var Context: PaintContext
}

external open class JavascriptUMGBlueprintLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): JavascriptUMGBlueprintLibrary
        fun Find(Outer: UObject, ResourceName: String): JavascriptUMGBlueprintLibrary
        fun GetDefaultObject(): JavascriptUMGBlueprintLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptUMGBlueprintLibrary
        fun SlateColor_UseSubduedForeground(): SlateColor
        fun SlateColor_UseForeground(): SlateColor
        fun GetLineLength(TargetTextLayout: JavascriptTextLayout): Number
        fun GetAsText(TextLayout: JavascriptTextLayout): String
        fun DrawSpaceSpline(Context: PaintContext = definedExternally, InStart: Vector2D = definedExternally, InStartDir: Vector2D = definedExternally, InEnd: Vector2D = definedExternally, InEndDir: Vector2D = definedExternally, InThickness: Number = definedExternally, InTint: LinearColor = definedExternally): `T$146`
        fun ClearLines(TextLayout: JavascriptTextLayout = definedExternally): `T$145`
        fun AddLine(TextLayout: JavascriptTextLayout = definedExternally, Model: JavascriptTextModel = definedExternally, Runs: Array<JavascriptSlateTextRun> = definedExternally): `T$145`
        fun C(Other: UObject): JavascriptUMGBlueprintLibrary
        fun C(Other: Any): JavascriptUMGBlueprintLibrary
    }
}

external open class JavascriptSlateStyle {
    open fun clone(): JavascriptSlateStyle
    open fun AddBorderBrush(PropertyName: String, InImageName: String, InMargin: Margin, InColorAndOpacity: LinearColor, InImageType: String /* "NoImage" | "FullColor" | "Linear" | "ESlateBrushImageType_MAX" */)
    open fun AddBoxBrush(PropertyName: String, InImageName: String, InMargin: Margin, InColorAndOpacity: LinearColor, InImageType: String /* "NoImage" | "FullColor" | "Linear" | "ESlateBrushImageType_MAX" */)
    open fun AddFontInfo(PropertyName: String, FontInfo: SlateFontInfo)
    open fun AddImageBrush(PropertyName: String, InImageName: String, InImageSize: Vector2D, InTint: LinearColor, InTiling: String /* "NoTile" | "Horizontal" | "Vertical" | "Both" | "ESlateBrushTileType_MAX" */, InImageType: String /* "NoImage" | "FullColor" | "Linear" | "ESlateBrushImageType_MAX" */)
    open fun AddSound(PropertyName: String, Sound: SlateSound)
    open fun Register()
    open fun RootToContentDir(RelativePath: String): String
    open fun RootToCoreContentDir(RelativePath: String): String
    open fun SetContentRoot(InContentRootDir: String)
    open fun SetCoreContentRoot(InCoreContentRootDir: String)
    open fun Unregister()

    companion object {
        fun C(Other: UObject): JavascriptSlateStyle
        fun C(Other: Any): JavascriptSlateStyle
        fun AddBorderBrush(StyleSet: JavascriptSlateStyle, PropertyName: String, InImageName: String, InMargin: Margin, InColorAndOpacity: LinearColor, InImageType: String /* "NoImage" | "FullColor" | "Linear" | "ESlateBrushImageType_MAX" */)
        fun AddBoxBrush(StyleSet: JavascriptSlateStyle, PropertyName: String, InImageName: String, InMargin: Margin, InColorAndOpacity: LinearColor, InImageType: String /* "NoImage" | "FullColor" | "Linear" | "ESlateBrushImageType_MAX" */)
        fun AddFontInfo(StyleSet: JavascriptSlateStyle, PropertyName: String, FontInfo: SlateFontInfo)
        fun AddImageBrush(StyleSet: JavascriptSlateStyle, PropertyName: String, InImageName: String, InImageSize: Vector2D, InTint: LinearColor, InTiling: String /* "NoTile" | "Horizontal" | "Vertical" | "Both" | "ESlateBrushTileType_MAX" */, InImageType: String /* "NoImage" | "FullColor" | "Linear" | "ESlateBrushImageType_MAX" */)
        fun AddSound(StyleSet: JavascriptSlateStyle, PropertyName: String, Sound: SlateSound)
        fun Register(StyleSet: JavascriptSlateStyle)
        fun RootToContentDir(StyleSet: JavascriptSlateStyle, RelativePath: String): String
        fun RootToCoreContentDir(StyleSet: JavascriptSlateStyle, RelativePath: String): String
        fun SetContentRoot(StyleSet: JavascriptSlateStyle, InContentRootDir: String)
        fun SetCoreContentRoot(StyleSet: JavascriptSlateStyle, InCoreContentRootDir: String)
        fun Unregister(StyleSet: JavascriptSlateStyle)
        fun CreateSlateStyle(InStyleSetName: String): JavascriptSlateStyle
    }
}

external open class JavascriptUMGLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): JavascriptUMGLibrary
        fun Find(Outer: UObject, ResourceName: String): JavascriptUMGLibrary
        fun GetDefaultObject(): JavascriptUMGLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptUMGLibrary
        fun Unregister(StyleSet: JavascriptSlateStyle)
        fun TakeWidget(Widget: Widget): JavascriptSlateWidget
        fun ShowWindow(NewWindow: JavascriptSlateWidget)
        fun SetCoreContentRoot(StyleSet: JavascriptSlateStyle, InCoreContentRootDir: String)
        fun SetContentRoot(StyleSet: JavascriptSlateStyle, InContentRootDir: String)
        fun SetContent(TargetWidget: NativeWidgetHost, SlateWidget: JavascriptSlateWidget): Widget
        fun RootToCoreContentDir(StyleSet: JavascriptSlateStyle, RelativePath: String): String
        fun RootToContentDir(StyleSet: JavascriptSlateStyle, RelativePath: String): String
        fun Register(StyleSet: JavascriptSlateStyle)
        fun GenerateDynamicImageResource(InDynamicBrushName: String): Vector2D
        fun CreateSlateStyle(InStyleSetName: String): JavascriptSlateStyle
        fun AddWindowAsNativeChild(NewWindow: JavascriptSlateWidget, RootWindow: JavascriptSlateWidget)
        fun AddWindow(NewWindow: JavascriptSlateWidget, bShowImmediately: Boolean)
        fun AddSound(StyleSet: JavascriptSlateStyle, PropertyName: String, Sound: SlateSound)
        fun AddImageBrush(StyleSet: JavascriptSlateStyle, PropertyName: String, InImageName: String, InImageSize: Vector2D, InTint: LinearColor, InTiling: String /* "NoTile" | "Horizontal" | "Vertical" | "Both" | "ESlateBrushTileType_MAX" */, InImageType: String /* "NoImage" | "FullColor" | "Linear" | "ESlateBrushImageType_MAX" */)
        fun AddFontInfo(StyleSet: JavascriptSlateStyle, PropertyName: String, FontInfo: SlateFontInfo)
        fun AddBoxBrush(StyleSet: JavascriptSlateStyle, PropertyName: String, InImageName: String, InMargin: Margin, InColorAndOpacity: LinearColor, InImageType: String /* "NoImage" | "FullColor" | "Linear" | "ESlateBrushImageType_MAX" */)
        fun AddBorderBrush(StyleSet: JavascriptSlateStyle, PropertyName: String, InImageName: String, InMargin: Margin, InColorAndOpacity: LinearColor, InImageType: String /* "NoImage" | "FullColor" | "Linear" | "ESlateBrushImageType_MAX" */)
        fun C(Other: UObject): JavascriptUMGLibrary
        fun C(Other: Any): JavascriptUMGLibrary
    }
}

external open class JavascriptUserObjectListEntry : UserWidget {
    constructor()
    constructor(Outer: UObject)
    open var Item: UObject

    companion object {
        fun Load(ResourceName: String): JavascriptUserObjectListEntry
        fun Find(Outer: UObject, ResourceName: String): JavascriptUserObjectListEntry
        fun GetDefaultObject(): JavascriptUserObjectListEntry
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptUserObjectListEntry
        fun C(Other: UObject): JavascriptUserObjectListEntry
        fun C(Other: Any): JavascriptUserObjectListEntry
    }
}

external open class JavascriptWidget : UserWidget {
    constructor()
    constructor(Outer: UObject)
    open var JavascriptContext: JavascriptContext
    open var OnInputActionEvent: UnrealEngineMulticastDelegate<(ActionName: String) -> Unit>
    open var OnReleaseActionEvent: UnrealEngineMulticastDelegate<(ActionName: String) -> Unit>
    open var OnInputAxisEvent: UnrealEngineMulticastDelegate<(Axis: Number, AxisName: String) -> Unit>
    open var ContentSlot: PanelSlot
    open fun SetRootWidget(Widget: Widget)
    open fun RemoveChild(): Boolean
    open fun OnReleaseInputActionByName(ActionName: String)
    open fun OnListenForInputAxis(AxisName: String, EventType: String /* "IE_Pressed" | "IE_Released" | "IE_Repeat" | "IE_DoubleClick" | "IE_Axis" | "IE_MAX" */, bConsume: Boolean)
    open fun OnListenForInputAction(ActionName: String, EventType: String /* "IE_Pressed" | "IE_Released" | "IE_Repeat" | "IE_DoubleClick" | "IE_Axis" | "IE_MAX" */, bConsume: Boolean)
    open fun OnInputAxisByName(Axis: Number, ActionName: String)
    open fun OnInputActionByName(ActionName: String)
    open fun OnDestroy(bReleaseChildren: Boolean)
    open fun AddChild(Content: Widget): PanelSlot

    companion object {
        fun Load(ResourceName: String): JavascriptWidget
        fun Find(Outer: UObject, ResourceName: String): JavascriptWidget
        fun GetDefaultObject(): JavascriptWidget
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptWidget
        fun HasValidCachedWidget(Widget: Widget): Boolean
        fun CallSynchronizeProperties(WidgetOrSlot: Visual)
        fun C(Other: UObject): JavascriptWidget
        fun C(Other: Any): JavascriptWidget
    }
}

external object EJavascriptWindowType {
    var Normal: String /* "Normal" */
    var Menu: String /* "Menu" */
    var ToolTip: String /* "ToolTip" */
    var Notification: String /* "Notification" */
    var CursorDecorator: String /* "CursorDecorator" */
    var EJavascriptWindowType_MAX: String /* "EJavascriptWindowType_MAX" */
}

external open class WindowStyle : SlateWidgetStyle {
    open var MinimizeButtonStyle: ButtonStyle
    open var MaximizeButtonStyle: ButtonStyle
    open var RestoreButtonStyle: ButtonStyle
    open var CloseButtonStyle: ButtonStyle
    open var TitleTextStyle: TextBlockStyle
    open var ActiveTitleBrush: SlateBrush
    open var InactiveTitleBrush: SlateBrush
    open var FlashTitleBrush: SlateBrush
    open var BackgroundColor: SlateColor
    open var OutlineBrush: SlateBrush
    open var OutlineColor: SlateColor
    open var BorderBrush: SlateBrush
    open var BackgroundBrush: SlateBrush
    open var ChildBackgroundBrush: SlateBrush
    override fun clone(): WindowStyle

    companion object {
        fun C(Other: UObject): WindowStyle
        fun C(Other: Any): WindowStyle
    }
}

external object EJavascriptAutoCenter {
    var None: String /* "None" */
    var PrimaryWorkArea: String /* "PrimaryWorkArea" */
    var PreferredWorkArea: String /* "PreferredWorkArea" */
    var EJavascriptAutoCenter_MAX: String /* "EJavascriptAutoCenter_MAX" */
}

external object EJavascriptWindowTransparency {
    var None: String /* "None" */
    var PerWindow: String /* "PerWindow" */
    var EJavascriptWindowTransparency_MAX: String /* "EJavascriptWindowTransparency_MAX" */
}

external object EJavascriptSizingRule {
    var FixedSize: String /* "FixedSize" */
    var Autosized: String /* "Autosized" */
    var UserSized: String /* "UserSized" */
    var EJavascriptSizingRule_MAX: String /* "EJavascriptSizingRule_MAX" */
}

external interface `T$147` {
    var OutFilenames: Array<String>
    var `$`: Boolean
}

external interface `T$148` {
    var OutFilenames: Array<String>
    var `$`: Boolean
}

external open class JavascriptWindow : ContentWidget {
    constructor()
    constructor(Outer: UObject)
    open var Type: String /* "Normal" | "Menu" | "ToolTip" | "Notification" | "CursorDecorator" | "EJavascriptWindowType_MAX" */
    open var Style: WindowStyle
    open var Title: String
    open var bDragAnywhere: Boolean
    open var AutoCenter: String /* "None" | "PrimaryWorkArea" | "PreferredWorkArea" | "EJavascriptAutoCenter_MAX" */
    open var ScreenPosition: Vector2D
    open var ClientSize: Vector2D
    open var SupportsTransparency: String /* "None" | "PerWindow" | "EJavascriptWindowTransparency_MAX" */
    open var InitialOpacity: Number
    open var IsInitiallyMaximized: Boolean
    open var SizingRule: String /* "FixedSize" | "Autosized" | "UserSized" | "EJavascriptSizingRule_MAX" */
    open var IsPopupWindow: Boolean
    open var FocusWhenFirstShown: Boolean
    open var ActivateWhenFirstShown: Boolean
    open var UseOSWindowBorder: Boolean
    open var HasCloseButton: Boolean
    open var SupportsMaximize: Boolean
    open var SupportsMinimize: Boolean
    open var CreateTitleBar: Boolean
    open var SaneWindowPlacement: Boolean
    open var LayoutBorder: Margin
    open var UserResizeBorder: Margin
    open fun ShowWindow()
    open fun SetOpacity(InOpacity: Number)
    open fun Resize(NewSize: Vector2D)
    open fun ReshapeWindow(NewPosition: Vector2D, NewSize: Vector2D)
    open fun RequestDestroyWindow()
    open fun MoveWindowTo(NewPosition: Vector2D)
    open fun HideWindow()
    open fun FlashWindow()
    open fun EnableWindow(bEnable: Boolean)
    open fun DestroyWindowImmediately()
    open fun BringToFront()
    open fun OpenFileDialog(DialogTitle: String, DefaultPath: String, DefaultFile: String, FileTypes: String, Flags: Number, OutFilenames: Array<String> = definedExternally): `T$147`

    companion object {
        fun Load(ResourceName: String): JavascriptWindow
        fun Find(Outer: UObject, ResourceName: String): JavascriptWindow
        fun GetDefaultObject(): JavascriptWindow
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptWindow
        fun C(Other: UObject): JavascriptWindow
        fun C(Other: Any): JavascriptWindow
        fun OpenFileDialog(WindowHandle: JavascriptWindow, DialogTitle: String, DefaultPath: String, DefaultFile: String, FileTypes: String, Flags: Number, OutFilenames: Array<String> = definedExternally): `T$148`
    }
}

external object EJavascriptHttpRequestStatus {
    var NotStarted: String /* "NotStarted" */
    var Processing: String /* "Processing" */
    var Failed: String /* "Failed" */
    var Succeeded: String /* "Succeeded" */
    var EJavascriptHttpRequestStatus_MAX: String /* "EJavascriptHttpRequestStatus_MAX" */
}

external open class JavascriptHttpRequest : UObject {
    constructor()
    constructor(Outer: UObject)
    open var OnComplete: UnrealEngineDelegate<(successful: Boolean) -> Unit>
    open var OnProgress: UnrealEngineDelegate<(sent: Number, recv: Number) -> Unit>
    open fun SetVerb(Verb: String)
    open fun SetURL(URL: String)
    open fun SetHeader(HeaderName: String, HeaderValue: String)
    open fun SetContentWithFiles(FilePaths: Array<String>, Boundary: String, Content: String)
    open fun SetContentFromMemory()
    open fun SetContentAsString(ContentString: String)
    open fun ProcessRequest(): Boolean
    open fun GetVerb(): String
    open fun GetStatus(): String /* "NotStarted" | "Processing" | "Failed" | "Succeeded" | "EJavascriptHttpRequestStatus_MAX" */
    open fun GetResponseCode(): Number
    open fun GetElapsedTime(): Number
    open fun GetContentToMemory()
    open fun GetContentLength(): Number
    open fun GetContentAsString(): String
    open fun CancelRequest()

    companion object {
        fun Load(ResourceName: String): JavascriptHttpRequest
        fun Find(Outer: UObject, ResourceName: String): JavascriptHttpRequest
        fun GetDefaultObject(): JavascriptHttpRequest
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptHttpRequest
        fun C(Other: UObject): JavascriptHttpRequest
        fun C(Other: Any): JavascriptHttpRequest
    }
}

external open class JavascriptWebSocket : UObject {
    constructor()
    constructor(Outer: UObject)
    open var OnReceived: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnConnected: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnError: UnrealEngineMulticastDelegate<() -> Unit>
    open fun Tick()
    open fun SendMemory(NumBytes: Number)
    open fun RemoteEndPoint(): String
    open fun LocalEndPoint(): String
    open fun GetReceivedBytes(): Number
    open fun Flush()
    open fun Dispose()
    open fun CopyBuffer()

    companion object {
        fun Load(ResourceName: String): JavascriptWebSocket
        fun Find(Outer: UObject, ResourceName: String): JavascriptWebSocket
        fun GetDefaultObject(): JavascriptWebSocket
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptWebSocket
        fun Connect(Endpoint: String): JavascriptWebSocket
        fun C(Other: UObject): JavascriptWebSocket
        fun C(Other: Any): JavascriptWebSocket
    }
}

external open class JavascriptWebSocketServer : UObject {
    constructor()
    constructor(Outer: UObject)
    open var OnConnected: UnrealEngineMulticastDelegate<(WebSocket: JavascriptWebSocket) -> Unit>
    open var Connections: Array<JavascriptWebSocket>
    open fun Tick()
    open fun Info(): String
    open fun Dispose()

    companion object {
        fun Load(ResourceName: String): JavascriptWebSocketServer
        fun Find(Outer: UObject, ResourceName: String): JavascriptWebSocketServer
        fun GetDefaultObject(): JavascriptWebSocketServer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptWebSocketServer
        fun Create(Port: Number): JavascriptWebSocketServer
        fun C(Other: UObject): JavascriptWebSocketServer
        fun C(Other: Any): JavascriptWebSocketServer
    }
}

external open class TcpMessagingSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var EnableTransport: Boolean
    open var ListenEndpoint: String
    open var ConnectToEndpoints: Array<String>
    open var ConnectionRetryDelay: Number

    companion object {
        fun Load(ResourceName: String): TcpMessagingSettings
        fun Find(Outer: UObject, ResourceName: String): TcpMessagingSettings
        fun GetDefaultObject(): TcpMessagingSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TcpMessagingSettings
        fun C(Other: UObject): TcpMessagingSettings
        fun C(Other: Any): TcpMessagingSettings
    }
}

external open class UdpMessagingSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var EnableTransport: Boolean
    open var UnicastEndpoint: String
    open var MulticastEndpoint: String
    open var MulticastTimeToLive: Number
    open var StaticEndpoints: Array<String>
    open var EnableTunnel: Boolean
    open var TunnelUnicastEndpoint: String
    open var TunnelMulticastEndpoint: String
    open var RemoteTunnelEndpoints: Array<String>

    companion object {
        fun Load(ResourceName: String): UdpMessagingSettings
        fun Find(Outer: UObject, ResourceName: String): UdpMessagingSettings
        fun GetDefaultObject(): UdpMessagingSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UdpMessagingSettings
        fun C(Other: UObject): UdpMessagingSettings
        fun C(Other: Any): UdpMessagingSettings
    }
}

external object EActorSequenceObjectReferenceType {
    var ContextActor: String /* "ContextActor" */
    var ExternalActor: String /* "ExternalActor" */
    var Component: String /* "Component" */
    var EActorSequenceObjectReferenceType_MAX: String /* "EActorSequenceObjectReferenceType_MAX" */
}

external open class ActorSequenceObjectReference {
    open var Type: String /* "ContextActor" | "ExternalActor" | "Component" | "EActorSequenceObjectReferenceType_MAX" */
    open var ActorId: Guid
    open var PathToComponent: String
    open fun clone(): ActorSequenceObjectReference

    companion object {
        fun C(Other: UObject): ActorSequenceObjectReference
        fun C(Other: Any): ActorSequenceObjectReference
    }
}

external open class ActorSequenceObjectReferences {
    open var Array: Array<ActorSequenceObjectReference>
    open fun clone(): ActorSequenceObjectReferences

    companion object {
        fun C(Other: UObject): ActorSequenceObjectReferences
        fun C(Other: Any): ActorSequenceObjectReferences
    }
}

external open class ActorSequenceObjectReferenceMap {
    open var BindingIds: Array<Guid>
    open var References: Array<ActorSequenceObjectReferences>
    open fun clone(): ActorSequenceObjectReferenceMap

    companion object {
        fun C(Other: UObject): ActorSequenceObjectReferenceMap
        fun C(Other: Any): ActorSequenceObjectReferenceMap
    }
}

external open class ActorSequence : MovieSceneSequence {
    constructor()
    constructor(Outer: UObject)
    open var MovieScene: MovieScene
    open var ObjectReferences: ActorSequenceObjectReferenceMap
    open var bHasBeenInitialized: Boolean

    companion object {
        fun Load(ResourceName: String): ActorSequence
        fun Find(Outer: UObject, ResourceName: String): ActorSequence
        fun GetDefaultObject(): ActorSequence
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorSequence
        fun C(Other: UObject): ActorSequence
        fun C(Other: Any): ActorSequence
    }
}

external open class ActorSequencePlayer : MovieSceneSequencePlayer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorSequencePlayer
        fun Find(Outer: UObject, ResourceName: String): ActorSequencePlayer
        fun GetDefaultObject(): ActorSequencePlayer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorSequencePlayer
        fun C(Other: UObject): ActorSequencePlayer
        fun C(Other: Any): ActorSequencePlayer
    }
}

external open class ActorSequenceComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var PlaybackSettings: MovieSceneSequencePlaybackSettings
    open var Sequence: ActorSequence
    open var SequencePlayer: ActorSequencePlayer

    companion object {
        fun Load(ResourceName: String): ActorSequenceComponent
        fun Find(Outer: UObject, ResourceName: String): ActorSequenceComponent
        fun GetDefaultObject(): ActorSequenceComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorSequenceComponent
        fun C(Other: UObject): ActorSequenceComponent
        fun C(Other: Any): ActorSequenceComponent
    }
}

external object ELocationAccuracy {
    var LA_ThreeKilometers: String /* "LA_ThreeKilometers" */
    var LA_OneKilometer: String /* "LA_OneKilometer" */
    var LA_HundredMeters: String /* "LA_HundredMeters" */
    var LA_TenMeters: String /* "LA_TenMeters" */
    var LA_Best: String /* "LA_Best" */
    var LA_Navigation: String /* "LA_Navigation" */
    var LA_MAX: String /* "LA_MAX" */
}

external open class LocationServicesData {
    open var Timestamp: Number
    open var Longitude: Number
    open var Latitude: Number
    open var HorizontalAccuracy: Number
    open var VerticalAccuracy: Number
    open var Altitude: Number
    open fun clone(): LocationServicesData

    companion object {
        fun C(Other: UObject): LocationServicesData
        fun C(Other: Any): LocationServicesData
        fun GetLastKnownLocation(): LocationServicesData
    }
}

external open class LocationServicesImpl : UObject {
    constructor()
    constructor(Outer: UObject)
    open var OnLocationChanged: UnrealEngineMulticastDelegate<(LocationData: LocationServicesData) -> Unit>

    companion object {
        fun Load(ResourceName: String): LocationServicesImpl
        fun Find(Outer: UObject, ResourceName: String): LocationServicesImpl
        fun GetDefaultObject(): LocationServicesImpl
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LocationServicesImpl
        fun C(Other: UObject): LocationServicesImpl
        fun C(Other: Any): LocationServicesImpl
    }
}

external open class LocationServices : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LocationServices
        fun Find(Outer: UObject, ResourceName: String): LocationServices
        fun GetDefaultObject(): LocationServices
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LocationServices
        fun StopLocationServices(): Boolean
        fun StartLocationServices(): Boolean
        fun IsLocationAccuracyAvailable(Accuracy: String /* "LA_ThreeKilometers" | "LA_OneKilometer" | "LA_HundredMeters" | "LA_TenMeters" | "LA_Best" | "LA_Navigation" | "LA_MAX" */): Boolean
        fun InitLocationServices(Accuracy: String /* "LA_ThreeKilometers" | "LA_OneKilometer" | "LA_HundredMeters" | "LA_TenMeters" | "LA_Best" | "LA_Navigation" | "LA_MAX" */, UpdateFrequency: Number, MinDistanceFilter: Number): Boolean
        fun GetLocationServicesImpl(): LocationServicesImpl
        fun GetLastKnownLocation(): LocationServicesData
        fun AreLocationServicesEnabled(): Boolean
        fun C(Other: UObject): LocationServices
        fun C(Other: Any): LocationServices
    }
}

external open class TireConfigMaterialFriction {
    open var PhysicalMaterial: PhysicalMaterial
    open var FrictionScale: Number
    open fun clone(): TireConfigMaterialFriction

    companion object {
        fun C(Other: UObject): TireConfigMaterialFriction
        fun C(Other: Any): TireConfigMaterialFriction
    }
}

external open class TireConfig : DataAsset {
    constructor()
    constructor(Outer: UObject)
    open var FrictionScale: Number
    open var TireFrictionScales: Array<TireConfigMaterialFriction>

    companion object {
        fun Load(ResourceName: String): TireConfig
        fun Find(Outer: UObject, ResourceName: String): TireConfig
        fun GetDefaultObject(): TireConfig
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TireConfig
        fun C(Other: UObject): TireConfig
        fun C(Other: Any): TireConfig
    }
}

external object EWheelSweepType {
    var SimpleAndComplex: String /* "SimpleAndComplex" */
    var Simple: String /* "Simple" */
    var Complex: String /* "Complex" */
    var EWheelSweepType_MAX: String /* "EWheelSweepType_MAX" */
}

external open class VehicleWheel : UObject {
    constructor()
    constructor(Outer: UObject)
    open var CollisionMesh: StaticMesh
    open var bDontCreateShape: Boolean
    open var bAutoAdjustCollisionSize: Boolean
    open var Offset: Vector
    open var ShapeRadius: Number
    open var ShapeWidth: Number
    open var Mass: Number
    open var DampingRate: Number
    open var SteerAngle: Number
    open var bAffectedByHandbrake: Boolean
    open var TireType: TireType
    open var TireConfig: TireConfig
    open var LatStiffMaxLoad: Number
    open var LatStiffValue: Number
    open var LongStiffValue: Number
    open var SuspensionForceOffset: Number
    open var SuspensionMaxRaise: Number
    open var SuspensionMaxDrop: Number
    open var SuspensionNaturalFrequency: Number
    open var SuspensionDampingRatio: Number
    open var SweepType: String /* "SimpleAndComplex" | "Simple" | "Complex" | "EWheelSweepType_MAX" */
    open var MaxBrakeTorque: Number
    open var MaxHandBrakeTorque: Number
    open var VehicleSim: WheeledVehicleMovementComponent
    open var WheelIndex: Number
    open var DebugLongSlip: Number
    open var DebugLatSlip: Number
    open var DebugNormalizedTireLoad: Number
    open var DebugWheelTorque: Number
    open var DebugLongForce: Number
    open var DebugLatForce: Number
    open var Location: Vector
    open var OldLocation: Vector
    open var Velocity: Vector
    open fun IsInAir(): Boolean
    open fun GetSuspensionOffset(): Number
    open fun GetSteerAngle(): Number
    open fun GetRotationAngle(): Number

    companion object {
        fun Load(ResourceName: String): VehicleWheel
        fun Find(Outer: UObject, ResourceName: String): VehicleWheel
        fun GetDefaultObject(): VehicleWheel
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VehicleWheel
        fun C(Other: UObject): VehicleWheel
        fun C(Other: Any): VehicleWheel
    }
}

external open class WheelSetup {
    open var WheelClass: UnrealEngineClass
    open var BoneName: String
    open var AdditionalOffset: Vector
    open var bDisableSteering: Boolean
    open fun clone(): WheelSetup

    companion object {
        fun C(Other: UObject): WheelSetup
        fun C(Other: Any): WheelSetup
    }
}

external open class ReplicatedVehicleState {
    open var SteeringInput: Number
    open var ThrottleInput: Number
    open var BrakeInput: Number
    open var HandbrakeInput: Number
    open var CurrentGear: Number
    open fun clone(): ReplicatedVehicleState

    companion object {
        fun C(Other: UObject): ReplicatedVehicleState
        fun C(Other: Any): ReplicatedVehicleState
    }
}

external open class VehicleInputRate {
    open var RiseRate: Number
    open var FallRate: Number
    open fun clone(): VehicleInputRate

    companion object {
        fun C(Other: UObject): VehicleInputRate
        fun C(Other: Any): VehicleInputRate
    }
}

external open class WheeledVehicleMovementComponent : PawnMovementComponent {
    constructor()
    constructor(Outer: UObject)
    open var bDeprecatedSpringOffsetMode: Boolean
    open var bReverseAsBrake: Boolean
    open var bUseRVOAvoidance: Boolean
    open var bRawHandbrakeInput: Boolean
    open var bRawGearUpInput: Boolean
    open var bRawGearDownInput: Boolean
    open var bWasAvoidanceUpdated: Boolean
    open var Mass: Number
    open var WheelSetups: Array<WheelSetup>
    open var DragCoefficient: Number
    open var ChassisWidth: Number
    open var ChassisHeight: Number
    open var DragArea: Number
    open var EstimatedMaxEngineSpeed: Number
    open var MaxEngineRPM: Number
    open var DebugDragMagnitude: Number
    open var InertiaTensorScale: Vector
    open var MinNormalizedTireLoad: Number
    open var MinNormalizedTireLoadFiltered: Number
    open var MaxNormalizedTireLoad: Number
    open var MaxNormalizedTireLoadFiltered: Number
    open var ThresholdLongitudinalSpeed: Number
    open var LowForwardSpeedSubStepCount: Number
    open var HighForwardSpeedSubStepCount: Number
    open var Wheels: Array<VehicleWheel>
    open var RVOAvoidanceRadius: Number
    open var RVOAvoidanceHeight: Number
    open var AvoidanceConsiderationRadius: Number
    open var RVOSteeringStep: Number
    open var RVOThrottleStep: Number
    open var AvoidanceUID: Number
    open var AvoidanceGroup: NavAvoidanceMask
    open var GroupsToAvoid: NavAvoidanceMask
    open var GroupsToIgnore: NavAvoidanceMask
    open var AvoidanceWeight: Number
    open var PendingLaunchVelocity: Vector
    open var ReplicatedState: ReplicatedVehicleState
    open var RawSteeringInput: Number
    open var RawThrottleInput: Number
    open var RawBrakeInput: Number
    open var SteeringInput: Number
    open var ThrottleInput: Number
    open var BrakeInput: Number
    open var HandbrakeInput: Number
    open var IdleBrakeInput: Number
    open var StopThreshold: Number
    open var WrongDirectionThreshold: Number
    open var ThrottleInputRate: VehicleInputRate
    open var BrakeInputRate: VehicleInputRate
    open var HandbrakeInputRate: VehicleInputRate
    open var SteeringInputRate: VehicleInputRate
    open var OverrideController: Controller
    open fun SetUseAutoGears(bUseAuto: Boolean)
    open fun SetThrottleInput(Throttle: Number)
    open fun SetTargetGear(GearNum: Number, bImmediate: Boolean)
    open fun SetSteeringInput(Steering: Number)
    open fun SetHandbrakeInput(bNewHandbrake: Boolean)
    open fun SetGroupsToIgnoreMask(GroupMask: NavAvoidanceMask)
    open fun SetGroupsToIgnore(GroupFlags: Number)
    open fun SetGroupsToAvoidMask(GroupMask: NavAvoidanceMask)
    open fun SetGroupsToAvoid(GroupFlags: Number)
    open fun SetGearUp(bNewGearUp: Boolean)
    open fun SetGearDown(bNewGearDown: Boolean)
    open fun SetBrakeInput(Brake: Number)
    open fun SetAvoidanceGroupMask(GroupMask: NavAvoidanceMask)
    open fun SetAvoidanceGroup(GroupFlags: Number)
    open fun SetAvoidanceEnabled(bEnable: Boolean)
    open fun ServerUpdateState(InSteeringInput: Number, InThrottleInput: Number, InBrakeInput: Number, InHandbrakeInput: Number, CurrentGear: Number)
    open fun GetUseAutoGears(): Boolean
    open fun GetTargetGear(): Number
    open fun GetForwardSpeed(): Number
    open fun GetEngineRotationSpeed(): Number
    open fun GetEngineMaxRotationSpeed(): Number
    open fun GetCurrentGear(): Number

    companion object {
        fun Load(ResourceName: String): WheeledVehicleMovementComponent
        fun Find(Outer: UObject, ResourceName: String): WheeledVehicleMovementComponent
        fun GetDefaultObject(): WheeledVehicleMovementComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WheeledVehicleMovementComponent
        fun C(Other: UObject): WheeledVehicleMovementComponent
        fun C(Other: Any): WheeledVehicleMovementComponent
    }
}

external open class SimpleWheeledVehicleMovementComponent : WheeledVehicleMovementComponent {
    constructor()
    constructor(Outer: UObject)
    open fun SetSteerAngle(SteerAngle: Number, WheelIndex: Number)
    open fun SetDriveTorque(DriveTorque: Number, WheelIndex: Number)
    open fun SetBrakeTorque(BrakeTorque: Number, WheelIndex: Number)

    companion object {
        fun Load(ResourceName: String): SimpleWheeledVehicleMovementComponent
        fun Find(Outer: UObject, ResourceName: String): SimpleWheeledVehicleMovementComponent
        fun GetDefaultObject(): SimpleWheeledVehicleMovementComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SimpleWheeledVehicleMovementComponent
        fun C(Other: UObject): SimpleWheeledVehicleMovementComponent
        fun C(Other: Any): SimpleWheeledVehicleMovementComponent
    }
}

external open class WheeledVehicle(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Pawn {
    open var Mesh: SkeletalMeshComponent
    open var VehicleMovement: WheeledVehicleMovementComponent

    companion object {
        fun GetDefaultObject(): WheeledVehicle
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WheeledVehicle
        fun C(Other: UObject): WheeledVehicle
        fun C(Other: Any): WheeledVehicle
    }
}

external open class VehicleAnimInstance : AnimInstance {
    constructor()
    constructor(Outer: UObject)
    open var WheeledVehicleMovementComponent: WheeledVehicleMovementComponent
    open fun GetVehicle(): WheeledVehicle

    companion object {
        fun Load(ResourceName: String): VehicleAnimInstance
        fun Find(Outer: UObject, ResourceName: String): VehicleAnimInstance
        fun GetDefaultObject(): VehicleAnimInstance
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VehicleAnimInstance
        fun C(Other: UObject): VehicleAnimInstance
        fun C(Other: Any): VehicleAnimInstance
    }
}

external open class VehicleEngineData {
    open var TorqueCurve: RuntimeFloatCurve
    open var MaxRPM: Number
    open var MOI: Number
    open var DampingRateFullThrottle: Number
    open var DampingRateZeroThrottleClutchEngaged: Number
    open var DampingRateZeroThrottleClutchDisengaged: Number
    open fun clone(): VehicleEngineData

    companion object {
        fun C(Other: UObject): VehicleEngineData
        fun C(Other: Any): VehicleEngineData
    }
}

external object EVehicleDifferential4W {
    var LimitedSlip_4W: String /* "LimitedSlip_4W" */
    var LimitedSlip_FrontDrive: String /* "LimitedSlip_FrontDrive" */
    var LimitedSlip_RearDrive: String /* "LimitedSlip_RearDrive" */
    var Open_4W: String /* "Open_4W" */
    var Open_FrontDrive: String /* "Open_FrontDrive" */
    var Open_RearDrive: String /* "Open_RearDrive" */
    var EVehicleDifferential4W_MAX: String /* "EVehicleDifferential4W_MAX" */
}

external open class VehicleDifferential4WData {
    open var DifferentialType: String /* "LimitedSlip_4W" | "LimitedSlip_FrontDrive" | "LimitedSlip_RearDrive" | "Open_4W" | "Open_FrontDrive" | "Open_RearDrive" | "EVehicleDifferential4W_MAX" */
    open var FrontRearSplit: Number
    open var FrontLeftRightSplit: Number
    open var RearLeftRightSplit: Number
    open var CentreBias: Number
    open var FrontBias: Number
    open var RearBias: Number
    open fun clone(): VehicleDifferential4WData

    companion object {
        fun C(Other: UObject): VehicleDifferential4WData
        fun C(Other: Any): VehicleDifferential4WData
    }
}

external open class VehicleGearData {
    open var Ratio: Number
    open var DownRatio: Number
    open var UpRatio: Number
    open fun clone(): VehicleGearData

    companion object {
        fun C(Other: UObject): VehicleGearData
        fun C(Other: Any): VehicleGearData
    }
}

external open class VehicleTransmissionData {
    open var bUseGearAutoBox: Boolean
    open var GearSwitchTime: Number
    open var GearAutoBoxLatency: Number
    open var FinalRatio: Number
    open var ForwardGears: Array<VehicleGearData>
    open var ReverseGearRatio: Number
    open var NeutralGearUpRatio: Number
    open var ClutchStrength: Number
    open fun clone(): VehicleTransmissionData

    companion object {
        fun C(Other: UObject): VehicleTransmissionData
        fun C(Other: Any): VehicleTransmissionData
    }
}

external open class WheeledVehicleMovementComponent4W : WheeledVehicleMovementComponent {
    constructor()
    constructor(Outer: UObject)
    open var EngineSetup: VehicleEngineData
    open var DifferentialSetup: VehicleDifferential4WData
    open var AckermannAccuracy: Number
    open var TransmissionSetup: VehicleTransmissionData
    open var SteeringCurve: RuntimeFloatCurve

    companion object {
        fun Load(ResourceName: String): WheeledVehicleMovementComponent4W
        fun Find(Outer: UObject, ResourceName: String): WheeledVehicleMovementComponent4W
        fun GetDefaultObject(): WheeledVehicleMovementComponent4W
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WheeledVehicleMovementComponent4W
        fun C(Other: UObject): WheeledVehicleMovementComponent4W
        fun C(Other: Any): WheeledVehicleMovementComponent4W
    }
}

external open class AnimNode_WheelHandler : AnimNode_SkeletalControlBase {
    override fun clone(): AnimNode_WheelHandler

    companion object {
        fun C(Other: UObject): AnimNode_WheelHandler
        fun C(Other: Any): AnimNode_WheelHandler
    }
}

external open class AnimGraphNode_WheelHandler : AnimGraphNode_SkeletalControlBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_WheelHandler

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_WheelHandler
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_WheelHandler
        fun GetDefaultObject(): AnimGraphNode_WheelHandler
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_WheelHandler
        fun C(Other: UObject): AnimGraphNode_WheelHandler
        fun C(Other: Any): AnimGraphNode_WheelHandler
    }
}

external object EMeshPaintColorViewMode {
    var Normal: String /* "Normal" */
    var RGB: String /* "RGB" */
    var Alpha: String /* "Alpha" */
    var Red: String /* "Red" */
    var Green: String /* "Green" */
    var Blue: String /* "Blue" */
    var EMeshPaintColorViewMode_MAX: String /* "EMeshPaintColorViewMode_MAX" */
}

external open class PaintBrushSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var BrushRadius: Number
    open var BrushStrength: Number
    open var BrushFalloffAmount: Number
    open var bEnableFlow: Boolean
    open var bOnlyFrontFacingTriangles: Boolean
    open var ColorViewMode: String /* "Normal" | "RGB" | "Alpha" | "Red" | "Green" | "Blue" | "EMeshPaintColorViewMode_MAX" */

    companion object {
        fun Load(ResourceName: String): PaintBrushSettings
        fun Find(Outer: UObject, ResourceName: String): PaintBrushSettings
        fun GetDefaultObject(): PaintBrushSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PaintBrushSettings
        fun C(Other: UObject): PaintBrushSettings
        fun C(Other: Any): PaintBrushSettings
    }
}

external open class MeshPaintSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var VertexPreviewSize: Number

    companion object {
        fun Load(ResourceName: String): MeshPaintSettings
        fun Find(Outer: UObject, ResourceName: String): MeshPaintSettings
        fun GetDefaultObject(): MeshPaintSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MeshPaintSettings
        fun C(Other: UObject): MeshPaintSettings
        fun C(Other: Any): MeshPaintSettings
    }
}

external open class VertexColorImportOptions : UObject {
    constructor()
    constructor(Outer: UObject)
    open var UVIndex: Number
    open var LODIndex: Number
    open var bRed: Boolean
    open var bBlue: Boolean
    open var bGreen: Boolean
    open var bAlpha: Boolean
    open var bImportToInstance: Boolean
    open var bCanImportToInstance: Boolean

    companion object {
        fun Load(ResourceName: String): VertexColorImportOptions
        fun Find(Outer: UObject, ResourceName: String): VertexColorImportOptions
        fun GetDefaultObject(): VertexColorImportOptions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VertexColorImportOptions
        fun C(Other: UObject): VertexColorImportOptions
        fun C(Other: Any): VertexColorImportOptions
    }
}

external open class FlipbookEditorSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var BackgroundColor: Color
    open var bShowGridByDefault: Boolean

    companion object {
        fun Load(ResourceName: String): FlipbookEditorSettings
        fun Find(Outer: UObject, ResourceName: String): FlipbookEditorSettings
        fun GetDefaultObject(): FlipbookEditorSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FlipbookEditorSettings
        fun C(Other: UObject): FlipbookEditorSettings
        fun C(Other: Any): FlipbookEditorSettings
    }
}

external object ESpriteExtractMode {
    var Auto: String /* "Auto" */
    var Grid: String /* "Grid" */
    var ESpriteExtractMode_MAX: String /* "ESpriteExtractMode_MAX" */
}

external open class PaperExtractSpritesSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var SpriteExtractMode: String /* "Auto" | "Grid" | "ESpriteExtractMode_MAX" */
    open var OutlineColor: LinearColor
    open var ViewportTextureTint: LinearColor
    open var BackgroundColor: LinearColor
    open var NamingTemplate: String
    open var NamingStartIndex: Number

    companion object {
        fun Load(ResourceName: String): PaperExtractSpritesSettings
        fun Find(Outer: UObject, ResourceName: String): PaperExtractSpritesSettings
        fun GetDefaultObject(): PaperExtractSpritesSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PaperExtractSpritesSettings
        fun C(Other: UObject): PaperExtractSpritesSettings
        fun C(Other: Any): PaperExtractSpritesSettings
    }
}

external open class PaperExtractSpriteGridSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var CellWidth: Number
    open var CellHeight: Number
    open var NumCellsX: Number
    open var NumCellsY: Number
    open var MarginX: Number
    open var MarginY: Number
    open var SpacingX: Number
    open var SpacingY: Number

    companion object {
        fun Load(ResourceName: String): PaperExtractSpriteGridSettings
        fun Find(Outer: UObject, ResourceName: String): PaperExtractSpriteGridSettings
        fun GetDefaultObject(): PaperExtractSpriteGridSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PaperExtractSpriteGridSettings
        fun C(Other: UObject): PaperExtractSpriteGridSettings
        fun C(Other: Any): PaperExtractSpriteGridSettings
    }
}

external open class PaperFlipbookActorFactory : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PaperFlipbookActorFactory
        fun Find(Outer: UObject, ResourceName: String): PaperFlipbookActorFactory
        fun GetDefaultObject(): PaperFlipbookActorFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PaperFlipbookActorFactory
        fun C(Other: UObject): PaperFlipbookActorFactory
        fun C(Other: Any): PaperFlipbookActorFactory
    }
}

external open class PaperFlipbookFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PaperFlipbookFactory
        fun Find(Outer: UObject, ResourceName: String): PaperFlipbookFactory
        fun GetDefaultObject(): PaperFlipbookFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PaperFlipbookFactory
        fun C(Other: UObject): PaperFlipbookFactory
        fun C(Other: Any): PaperFlipbookFactory
    }
}

external open class PaperSpriteThumbnailRenderer : DefaultSizedThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PaperSpriteThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): PaperSpriteThumbnailRenderer
        fun GetDefaultObject(): PaperSpriteThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PaperSpriteThumbnailRenderer
        fun C(Other: UObject): PaperSpriteThumbnailRenderer
        fun C(Other: Any): PaperSpriteThumbnailRenderer
    }
}

external open class PaperFlipbookThumbnailRenderer : PaperSpriteThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PaperFlipbookThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): PaperFlipbookThumbnailRenderer
        fun GetDefaultObject(): PaperFlipbookThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PaperFlipbookThumbnailRenderer
        fun C(Other: UObject): PaperFlipbookThumbnailRenderer
        fun C(Other: Any): PaperFlipbookThumbnailRenderer
    }
}

external open class PaperImporterSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bPickBestMaterialWhenCreatingSprites: Boolean
    open var bPickBestMaterialWhenCreatingTileMaps: Boolean
    open var bAnalysisCanUseOpaque: Boolean
    open var DefaultPixelsPerUnrealUnit: Number
    open var NormalMapTextureSuffixes: Array<String>
    open var BaseMapTextureSuffixes: Array<String>
    open var DefaultSpriteTextureGroup: String /* "TEXTUREGROUP_World" | "TEXTUREGROUP_WorldNormalMap" | "TEXTUREGROUP_WorldSpecular" | "TEXTUREGROUP_Character" | "TEXTUREGROUP_CharacterNormalMap" | "TEXTUREGROUP_CharacterSpecular" | "TEXTUREGROUP_Weapon" | "TEXTUREGROUP_WeaponNormalMap" | "TEXTUREGROUP_WeaponSpecular" | "TEXTUREGROUP_Vehicle" | "TEXTUREGROUP_VehicleNormalMap" | "TEXTUREGROUP_VehicleSpecular" | "TEXTUREGROUP_Cinematic" | "TEXTUREGROUP_Effects" | "TEXTUREGROUP_EffectsNotFiltered" | "TEXTUREGROUP_Skybox" | "TEXTUREGROUP_UI" | "TEXTUREGROUP_Lightmap" | "TEXTUREGROUP_RenderTarget" | "TEXTUREGROUP_MobileFlattened" | "TEXTUREGROUP_ProcBuilding_Face" | "TEXTUREGROUP_ProcBuilding_LightMap" | "TEXTUREGROUP_Shadowmap" | "TEXTUREGROUP_ColorLookupTable" | "TEXTUREGROUP_Terrain_Heightmap" | "TEXTUREGROUP_Terrain_Weightmap" | "TEXTUREGROUP_Bokeh" | "TEXTUREGROUP_IESLightProfile" | "TEXTUREGROUP_Pixels2D" | "TEXTUREGROUP_HierarchicalLOD" | "TEXTUREGROUP_Impostor" | "TEXTUREGROUP_ImpostorNormalDepth" | "TEXTUREGROUP_8BitData" | "TEXTUREGROUP_16BitData" | "TEXTUREGROUP_Project01" | "TEXTUREGROUP_Project02" | "TEXTUREGROUP_Project03" | "TEXTUREGROUP_Project04" | "TEXTUREGROUP_Project05" | "TEXTUREGROUP_Project06" | "TEXTUREGROUP_Project07" | "TEXTUREGROUP_Project08" | "TEXTUREGROUP_Project09" | "TEXTUREGROUP_Project10" | "TEXTUREGROUP_MAX" */
    open var bOverrideTextureCompression: Boolean
    open var DefaultSpriteTextureCompression: String /* "TC_Default" | "TC_Normalmap" | "TC_Masks" | "TC_Grayscale" | "TC_Displacementmap" | "TC_VectorDisplacementmap" | "TC_HDR" | "TC_EditorIcon" | "TC_Alpha" | "TC_DistanceFieldFont" | "TC_HDR_Compressed" | "TC_BC7" | "TC_MAX" */
    open var UnlitDefaultMaskedMaterialName: SoftObjectPath
    open var UnlitDefaultTranslucentMaterialName: SoftObjectPath
    open var UnlitDefaultOpaqueMaterialName: SoftObjectPath
    open var LitDefaultMaskedMaterialName: SoftObjectPath
    open var LitDefaultTranslucentMaterialName: SoftObjectPath
    open var LitDefaultOpaqueMaterialName: SoftObjectPath

    companion object {
        fun Load(ResourceName: String): PaperImporterSettings
        fun Find(Outer: UObject, ResourceName: String): PaperImporterSettings
        fun GetDefaultObject(): PaperImporterSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PaperImporterSettings
        fun C(Other: UObject): PaperImporterSettings
        fun C(Other: Any): PaperImporterSettings
    }
}

external open class PaperSpriteActorFactory : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PaperSpriteActorFactory
        fun Find(Outer: UObject, ResourceName: String): PaperSpriteActorFactory
        fun GetDefaultObject(): PaperSpriteActorFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PaperSpriteActorFactory
        fun C(Other: UObject): PaperSpriteActorFactory
        fun C(Other: Any): PaperSpriteActorFactory
    }
}

external open class PaperSpriteAtlasFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PaperSpriteAtlasFactory
        fun Find(Outer: UObject, ResourceName: String): PaperSpriteAtlasFactory
        fun GetDefaultObject(): PaperSpriteAtlasFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PaperSpriteAtlasFactory
        fun C(Other: UObject): PaperSpriteAtlasFactory
        fun C(Other: Any): PaperSpriteAtlasFactory
    }
}

external open class PaperSpriteFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PaperSpriteFactory
        fun Find(Outer: UObject, ResourceName: String): PaperSpriteFactory
        fun GetDefaultObject(): PaperSpriteFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PaperSpriteFactory
        fun C(Other: UObject): PaperSpriteFactory
        fun C(Other: Any): PaperSpriteFactory
    }
}

external open class PaperTileMapFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PaperTileMapFactory
        fun Find(Outer: UObject, ResourceName: String): PaperTileMapFactory
        fun GetDefaultObject(): PaperTileMapFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PaperTileMapFactory
        fun C(Other: UObject): PaperTileMapFactory
        fun C(Other: Any): PaperTileMapFactory
    }
}

external open class PaperTileMapPromotionFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var AssetToRename: PaperTileMap

    companion object {
        fun Load(ResourceName: String): PaperTileMapPromotionFactory
        fun Find(Outer: UObject, ResourceName: String): PaperTileMapPromotionFactory
        fun GetDefaultObject(): PaperTileMapPromotionFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PaperTileMapPromotionFactory
        fun C(Other: UObject): PaperTileMapPromotionFactory
        fun C(Other: Any): PaperTileMapPromotionFactory
    }
}

external open class PaperTileSetFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PaperTileSetFactory
        fun Find(Outer: UObject, ResourceName: String): PaperTileSetFactory
        fun GetDefaultObject(): PaperTileSetFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PaperTileSetFactory
        fun C(Other: UObject): PaperTileSetFactory
        fun C(Other: Any): PaperTileSetFactory
    }
}

external open class PaperTileSetThumbnailRenderer : DefaultSizedThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PaperTileSetThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): PaperTileSetThumbnailRenderer
        fun GetDefaultObject(): PaperTileSetThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PaperTileSetThumbnailRenderer
        fun C(Other: UObject): PaperTileSetThumbnailRenderer
        fun C(Other: Any): PaperTileSetThumbnailRenderer
    }
}

external open class SpriteEditorSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var BackgroundColor: Color
    open var bShowGridByDefault: Boolean

    companion object {
        fun Load(ResourceName: String): SpriteEditorSettings
        fun Find(Outer: UObject, ResourceName: String): SpriteEditorSettings
        fun GetDefaultObject(): SpriteEditorSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SpriteEditorSettings
        fun C(Other: UObject): SpriteEditorSettings
        fun C(Other: Any): SpriteEditorSettings
    }
}

external open class TerrainSplineActorFactory : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TerrainSplineActorFactory
        fun Find(Outer: UObject, ResourceName: String): TerrainSplineActorFactory
        fun GetDefaultObject(): TerrainSplineActorFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TerrainSplineActorFactory
        fun C(Other: UObject): TerrainSplineActorFactory
        fun C(Other: Any): TerrainSplineActorFactory
    }
}

external open class TileMapActorFactory : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TileMapActorFactory
        fun Find(Outer: UObject, ResourceName: String): TileMapActorFactory
        fun GetDefaultObject(): TileMapActorFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TileMapActorFactory
        fun C(Other: UObject): TileMapActorFactory
        fun C(Other: Any): TileMapActorFactory
    }
}

external open class TileSetImportMapping {
    open var SourceName: String
    open var ImportedTileSet: Any
    open var ImportedTexture: Any
    open fun clone(): TileSetImportMapping

    companion object {
        fun C(Other: UObject): TileSetImportMapping
        fun C(Other: Any): TileSetImportMapping
    }
}

external open class TileMapAssetImportData : AssetImportData {
    constructor()
    constructor(Outer: UObject)
    open var TileSetMap: Array<TileSetImportMapping>

    companion object {
        fun Load(ResourceName: String): TileMapAssetImportData
        fun Find(Outer: UObject, ResourceName: String): TileMapAssetImportData
        fun GetDefaultObject(): TileMapAssetImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TileMapAssetImportData
        fun C(Other: UObject): TileMapAssetImportData
        fun C(Other: Any): TileMapAssetImportData
    }
}

external open class TileMapEditorSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var DefaultBackgroundColor: Color
    open var bShowGridByDefault: Boolean
    open var DefaultTileGridColor: Color
    open var DefaultMultiTileGridColor: Color
    open var DefaultMultiTileGridWidth: Number
    open var DefaultMultiTileGridHeight: Number
    open var DefaultMultiTileGridOffsetX: Number
    open var DefaultMultiTileGridOffsetY: Number
    open var DefaultLayerGridColor: Color

    companion object {
        fun Load(ResourceName: String): TileMapEditorSettings
        fun Find(Outer: UObject, ResourceName: String): TileMapEditorSettings
        fun GetDefaultObject(): TileMapEditorSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TileMapEditorSettings
        fun C(Other: UObject): TileMapEditorSettings
        fun C(Other: Any): TileMapEditorSettings
    }
}

external open class TileSetEditorSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var DefaultBackgroundColor: Color
    open var bShowGridByDefault: Boolean
    open var ExtrusionAmount: Number
    open var bPadToPowerOf2: Boolean
    open var bFillWithTransparentBlack: Boolean

    companion object {
        fun Load(ResourceName: String): TileSetEditorSettings
        fun Find(Outer: UObject, ResourceName: String): TileSetEditorSettings
        fun GetDefaultObject(): TileSetEditorSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TileSetEditorSettings
        fun C(Other: UObject): TileSetEditorSettings
        fun C(Other: Any): TileSetEditorSettings
    }
}

external open class TileSheetPaddingFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var SourceTileSet: PaperTileSet
    open var ExtrusionAmount: Number
    open var bPadToPowerOf2: Boolean
    open var bFillWithTransparentBlack: Boolean

    companion object {
        fun Load(ResourceName: String): TileSheetPaddingFactory
        fun Find(Outer: UObject, ResourceName: String): TileSheetPaddingFactory
        fun GetDefaultObject(): TileSheetPaddingFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TileSheetPaddingFactory
        fun C(Other: UObject): TileSheetPaddingFactory
        fun C(Other: Any): TileSheetPaddingFactory
    }
}

external open class PaperSpriteSheet : UObject {
    constructor()
    constructor(Outer: UObject)
    open var SpriteNames: Array<String>
    open var Sprites: Array<PaperSprite>
    open var TextureName: String
    open var Texture: Texture2D
    open var NormalMapTextureName: String
    open var NormalMapTexture: Texture2D
    open var AssetImportData: AssetImportData

    companion object {
        fun Load(ResourceName: String): PaperSpriteSheet
        fun Find(Outer: UObject, ResourceName: String): PaperSpriteSheet
        fun GetDefaultObject(): PaperSpriteSheet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PaperSpriteSheet
        fun C(Other: UObject): PaperSpriteSheet
        fun C(Other: Any): PaperSpriteSheet
    }
}

external open class PaperSpriteSheetImportFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PaperSpriteSheetImportFactory
        fun Find(Outer: UObject, ResourceName: String): PaperSpriteSheetImportFactory
        fun GetDefaultObject(): PaperSpriteSheetImportFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PaperSpriteSheetImportFactory
        fun C(Other: UObject): PaperSpriteSheetImportFactory
        fun C(Other: Any): PaperSpriteSheetImportFactory
    }
}

external open class PaperSpriteSheetReimportFactory : PaperSpriteSheetImportFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PaperSpriteSheetReimportFactory
        fun Find(Outer: UObject, ResourceName: String): PaperSpriteSheetReimportFactory
        fun GetDefaultObject(): PaperSpriteSheetReimportFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PaperSpriteSheetReimportFactory
        fun C(Other: UObject): PaperSpriteSheetReimportFactory
        fun C(Other: Any): PaperSpriteSheetReimportFactory
    }
}

external open class PaperTiledImporterFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PaperTiledImporterFactory
        fun Find(Outer: UObject, ResourceName: String): PaperTiledImporterFactory
        fun GetDefaultObject(): PaperTiledImporterFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PaperTiledImporterFactory
        fun C(Other: UObject): PaperTiledImporterFactory
        fun C(Other: Any): PaperTiledImporterFactory
    }
}

external open class LightPropagationVolumeBlendableFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LightPropagationVolumeBlendableFactory
        fun Find(Outer: UObject, ResourceName: String): LightPropagationVolumeBlendableFactory
        fun GetDefaultObject(): LightPropagationVolumeBlendableFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LightPropagationVolumeBlendableFactory
        fun C(Other: UObject): LightPropagationVolumeBlendableFactory
        fun C(Other: Any): LightPropagationVolumeBlendableFactory
    }
}

external open class LayersBlueprintLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LayersBlueprintLibrary
        fun Find(Outer: UObject, ResourceName: String): LayersBlueprintLibrary
        fun GetDefaultObject(): LayersBlueprintLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LayersBlueprintLibrary
        fun GetActors(WorldContextObject: UObject, ActorLayer: ActorLayer): Array<Actor>
        fun C(Other: UObject): LayersBlueprintLibrary
        fun C(Other: Any): LayersBlueprintLibrary
    }
}

external open class AnimationSharingSetupFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimationSharingSetupFactory
        fun Find(Outer: UObject, ResourceName: String): AnimationSharingSetupFactory
        fun GetDefaultObject(): AnimationSharingSetupFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationSharingSetupFactory
        fun C(Other: UObject): AnimationSharingSetupFactory
        fun C(Other: Any): AnimationSharingSetupFactory
    }
}

external open class MyPluginStruct {
    open var TestString: String
    open fun clone(): MyPluginStruct

    companion object {
        fun C(Other: UObject): MyPluginStruct
        fun C(Other: Any): MyPluginStruct
    }
}

external open class MyPluginObject : UObject {
    constructor()
    constructor(Outer: UObject)
    open var MyStruct: MyPluginStruct

    companion object {
        fun Load(ResourceName: String): MyPluginObject
        fun Find(Outer: UObject, ResourceName: String): MyPluginObject
        fun GetDefaultObject(): MyPluginObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MyPluginObject
        fun C(Other: UObject): MyPluginObject
        fun C(Other: Any): MyPluginObject
    }
}

external open class CryptoKeysCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CryptoKeysCommandlet
        fun Find(Outer: UObject, ResourceName: String): CryptoKeysCommandlet
        fun GetDefaultObject(): CryptoKeysCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CryptoKeysCommandlet
        fun C(Other: UObject): CryptoKeysCommandlet
        fun C(Other: Any): CryptoKeysCommandlet
    }
}

external open class CryptoEncryptionKey {
    open var Guid: Guid
    open var Name: String
    open var Key: String
    open fun clone(): CryptoEncryptionKey

    companion object {
        fun C(Other: UObject): CryptoEncryptionKey
        fun C(Other: Any): CryptoEncryptionKey
    }
}

external open class CryptoKeysSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var EncryptionKey: String
    open var SecondaryEncryptionKeys: Array<CryptoEncryptionKey>
    open var bEncryptPakIniFiles: Boolean
    open var bEncryptPakIndex: Boolean
    open var bEncryptUAssetFiles: Boolean
    open var bEncryptAllAssetFiles: Boolean
    open var SigningPublicExponent: String
    open var SigningModulus: String
    open var SigningPrivateExponent: String
    open var bEnablePakSigning: Boolean

    companion object {
        fun Load(ResourceName: String): CryptoKeysSettings
        fun Find(Outer: UObject, ResourceName: String): CryptoKeysSettings
        fun GetDefaultObject(): CryptoKeysSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CryptoKeysSettings
        fun C(Other: UObject): CryptoKeysSettings
        fun C(Other: Any): CryptoKeysSettings
    }
}

external object ECurveEditorFFTFilterType {
    var Lowpass: String /* "Lowpass" */
    var Highpass: String /* "Highpass" */
    var ECurveEditorFFTFilterType_MAX: String /* "ECurveEditorFFTFilterType_MAX" */
}

external object ECurveEditorFFTFilterClass {
    var Butterworth: String /* "Butterworth" */
    var Chebyshev: String /* "Chebyshev" */
    var ECurveEditorFFTFilterClass_MAX: String /* "ECurveEditorFFTFilterClass_MAX" */
}

external open class CurveEditorFFTFilter : CurveEditorFilterBase {
    constructor()
    constructor(Outer: UObject)
    open var CutoffFrequency: Number
    open var Type: String /* "Lowpass" | "Highpass" | "ECurveEditorFFTFilterType_MAX" */
    open var Response: String /* "Butterworth" | "Chebyshev" | "ECurveEditorFFTFilterClass_MAX" */
    open var Order: Number

    companion object {
        fun Load(ResourceName: String): CurveEditorFFTFilter
        fun Find(Outer: UObject, ResourceName: String): CurveEditorFFTFilter
        fun GetDefaultObject(): CurveEditorFFTFilter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CurveEditorFFTFilter
        fun C(Other: UObject): CurveEditorFFTFilter
        fun C(Other: Any): CurveEditorFFTFilter
    }
}

external open class CurveEditorRetimeAnchor {
    open var ValueInSeconds: Any
    open var bIsSelected: Boolean
    open fun clone(): CurveEditorRetimeAnchor

    companion object {
        fun C(Other: UObject): CurveEditorRetimeAnchor
        fun C(Other: Any): CurveEditorRetimeAnchor
    }
}

external open class CurveEditorRetimeToolData : UObject {
    constructor()
    constructor(Outer: UObject)
    open var RetimingAnchors: Array<CurveEditorRetimeAnchor>

    companion object {
        fun Load(ResourceName: String): CurveEditorRetimeToolData
        fun Find(Outer: UObject, ResourceName: String): CurveEditorRetimeToolData
        fun GetDefaultObject(): CurveEditorRetimeToolData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CurveEditorRetimeToolData
        fun C(Other: UObject): CurveEditorRetimeToolData
        fun C(Other: Any): CurveEditorRetimeToolData
    }
}

external open class NewPluginDescriptorData : UObject {
    constructor()
    constructor(Outer: UObject)
    open var CreatedBy: String
    open var CreatedByURL: String
    open var Description: String
    open var bIsBetaVersion: Boolean

    companion object {
        fun Load(ResourceName: String): NewPluginDescriptorData
        fun Find(Outer: UObject, ResourceName: String): NewPluginDescriptorData
        fun GetDefaultObject(): NewPluginDescriptorData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NewPluginDescriptorData
        fun C(Other: UObject): NewPluginDescriptorData
        fun C(Other: Any): NewPluginDescriptorData
    }
}

external open class PluginMetadataObject : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Version: Number
    open var VersionName: String
    open var FriendlyName: String
    open var Description: String
    open var Category: String
    open var CreatedBy: String
    open var CreatedByURL: String
    open var DocsURL: String
    open var MarketplaceURL: String
    open var SupportURL: String
    open var bCanContainContent: Boolean
    open var bIsBetaVersion: Boolean

    companion object {
        fun Load(ResourceName: String): PluginMetadataObject
        fun Find(Outer: UObject, ResourceName: String): PluginMetadataObject
        fun GetDefaultObject(): PluginMetadataObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PluginMetadataObject
        fun C(Other: UObject): PluginMetadataObject
        fun C(Other: Any): PluginMetadataObject
    }
}

external open class SpeedTreeImportFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SpeedTreeImportFactory
        fun Find(Outer: UObject, ResourceName: String): SpeedTreeImportFactory
        fun GetDefaultObject(): SpeedTreeImportFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SpeedTreeImportFactory
        fun C(Other: UObject): SpeedTreeImportFactory
        fun C(Other: Any): SpeedTreeImportFactory
    }
}

external open class ReimportSpeedTreeFactory : SpeedTreeImportFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ReimportSpeedTreeFactory
        fun Find(Outer: UObject, ResourceName: String): ReimportSpeedTreeFactory
        fun GetDefaultObject(): ReimportSpeedTreeFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ReimportSpeedTreeFactory
        fun C(Other: UObject): ReimportSpeedTreeFactory
        fun C(Other: Any): ReimportSpeedTreeFactory
    }
}

external object EImportGeometryType {
    var IGT_3D: String /* "IGT_3D" */
    var IGT_Billboards: String /* "IGT_Billboards" */
    var IGT_Both: String /* "IGT_Both" */
    var IGT_MAX: String /* "IGT_MAX" */
}

external object EImportLODType {
    var ILT_PaintedFoliage: String /* "ILT_PaintedFoliage" */
    var ILT_IndividualActors: String /* "ILT_IndividualActors" */
    var ILT_MAX: String /* "ILT_MAX" */
}

external open class SpeedTreeImportData : AssetImportData {
    constructor()
    constructor(Outer: UObject)
    open var TreeScale: Number
    open var ImportGeometryType: String /* "IGT_3D" | "IGT_Billboards" | "IGT_Both" | "IGT_MAX" */
    open var LODType: String /* "ILT_PaintedFoliage" | "ILT_IndividualActors" | "ILT_MAX" */
    open var IncludeCollision: Boolean
    open var MakeMaterialsCheck: Boolean
    open var IncludeNormalMapCheck: Boolean
    open var IncludeDetailMapCheck: Boolean
    open var IncludeSpecularMapCheck: Boolean
    open var IncludeBranchSeamSmoothing: Boolean
    open var IncludeSpeedTreeAO: Boolean
    open var IncludeColorAdjustment: Boolean
    open var IncludeSubsurface: Boolean
    open var IncludeVertexProcessingCheck: Boolean
    open var IncludeWindCheck: Boolean
    open var IncludeSmoothLODCheck: Boolean

    companion object {
        fun Load(ResourceName: String): SpeedTreeImportData
        fun Find(Outer: UObject, ResourceName: String): SpeedTreeImportData
        fun GetDefaultObject(): SpeedTreeImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SpeedTreeImportData
        fun C(Other: UObject): SpeedTreeImportData
        fun C(Other: Any): SpeedTreeImportData
    }
}

external open class DatasmithSceneNewFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DatasmithSceneNewFactory
        fun Find(Outer: UObject, ResourceName: String): DatasmithSceneNewFactory
        fun GetDefaultObject(): DatasmithSceneNewFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithSceneNewFactory
        fun C(Other: UObject): DatasmithSceneNewFactory
        fun C(Other: Any): DatasmithSceneNewFactory
    }
}

external open class CapturedPropSegment {
    open var PropertyName: String
    open var PropertyIndex: Number
    open var ComponentName: String
    open fun clone(): CapturedPropSegment

    companion object {
        fun C(Other: UObject): CapturedPropSegment
        fun C(Other: Any): CapturedPropSegment
    }
}

external object EPropertyValueCategory {
    var Undefined: String /* "Undefined" */
    var Generic: String /* "Generic" */
    var RelativeLocation: String /* "RelativeLocation" */
    var RelativeRotation: String /* "RelativeRotation" */
    var RelativeScale3D: String /* "RelativeScale3D" */
    var bVisible: String /* "bVisible" */
    var Material: String /* "Material" */
    var Color: String /* "Color" */
    var EPropertyValueCategory_MAX: String /* "EPropertyValueCategory_MAX" */
}

external open class PropertyValue : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Properties: Array<Property>
    open var PropertyIndices: Array<Number>
    open var CapturedPropSegments: Array<CapturedPropSegment>
    open var FullDisplayString: String
    open var PropertySetterName: String
    open var PropertySetterParameterDefaults: Any
    open var bHasRecordedData: Boolean
    open var LeafPropertyClass: UnrealEngineClass
    open var ValueBytes: Array<Number>
    open var PropCategory: String /* "Undefined" | "Generic" | "RelativeLocation" | "RelativeRotation" | "RelativeScale3D" | "bVisible" | "Material" | "Color" | "EPropertyValueCategory_MAX" */
    open fun HasRecordedData(): Boolean
    open fun GetPropertyTooltip(): String
    open fun GetFullDisplayString(): String

    companion object {
        fun Load(ResourceName: String): PropertyValue
        fun Find(Outer: UObject, ResourceName: String): PropertyValue
        fun GetDefaultObject(): PropertyValue
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PropertyValue
        fun C(Other: UObject): PropertyValue
        fun C(Other: Any): PropertyValue
    }
}

external open class FunctionCaller {
    open var FunctionName: String
    open var FunctionEntry: Any
    open fun clone(): FunctionCaller

    companion object {
        fun C(Other: UObject): FunctionCaller
        fun C(Other: Any): FunctionCaller
    }
}

external open class VariantObjectBinding : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ObjectPtr: SoftObjectPath
    open var LazyObjectPtr: Any
    open var CapturedProperties: Array<PropertyValue>
    open var FunctionCallers: Array<FunctionCaller>

    companion object {
        fun Load(ResourceName: String): VariantObjectBinding
        fun Find(Outer: UObject, ResourceName: String): VariantObjectBinding
        fun GetDefaultObject(): VariantObjectBinding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VariantObjectBinding
        fun C(Other: UObject): VariantObjectBinding
        fun C(Other: Any): VariantObjectBinding
    }
}

external open class Variant : UObject {
    constructor()
    constructor(Outer: UObject)
    open var DisplayText: String
    open var ObjectBindings: Array<VariantObjectBinding>
    open fun SwitchOn()
    open fun SetDisplayText(NewDisplayText: String)
    open fun GetNumActors(): Number
    open fun GetDisplayText(): String
    open fun GetActor(ActorIndex: Number): Actor

    companion object {
        fun Load(ResourceName: String): Variant
        fun Find(Outer: UObject, ResourceName: String): Variant
        fun GetDefaultObject(): Variant
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Variant
        fun C(Other: UObject): Variant
        fun C(Other: Any): Variant
    }
}

external open class VariantSet : UObject {
    constructor()
    constructor(Outer: UObject)
    open var DisplayText: String
    open var bExpanded: Boolean
    open var Variants: Array<Variant>
    open fun SetDisplayText(NewDisplayText: String)
    open fun GetVariantByName(VariantName: String): Variant
    open fun GetVariant(VariantIndex: Number): Variant
    open fun GetNumVariants(): Number
    open fun GetDisplayText(): String

    companion object {
        fun Load(ResourceName: String): VariantSet
        fun Find(Outer: UObject, ResourceName: String): VariantSet
        fun GetDefaultObject(): VariantSet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VariantSet
        fun C(Other: UObject): VariantSet
        fun C(Other: Any): VariantSet
    }
}

external open class LevelVariantSets : UObject {
    constructor()
    constructor(Outer: UObject)
    open var DirectorBlueprint: UObject
    open var DirectorClass: UnrealEngineClass
    open var VariantSets: Array<VariantSet>
    open fun GetVariantSetByName(VariantSetName: String): VariantSet
    open fun GetVariantSet(VariantSetIndex: Number): VariantSet
    open fun GetNumVariantSets(): Number

    companion object {
        fun Load(ResourceName: String): LevelVariantSets
        fun Find(Outer: UObject, ResourceName: String): LevelVariantSets
        fun GetDefaultObject(): LevelVariantSets
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelVariantSets
        fun C(Other: UObject): LevelVariantSets
        fun C(Other: Any): LevelVariantSets
    }
}

external open class LevelVariantSetsActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var LevelVariantSets: SoftObjectPath
    open fun SwitchOnVariantByName(VariantSetName: String, VariantName: String): Boolean
    open fun SwitchOnVariantByIndex(VariantSetIndex: Number, VariantIndex: Number): Boolean
    open fun SetLevelVariantSets(InVariantSets: LevelVariantSets)
    open fun GetLevelVariantSets(bLoad: Boolean): LevelVariantSets

    companion object {
        fun GetDefaultObject(): LevelVariantSetsActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelVariantSetsActor
        fun C(Other: UObject): LevelVariantSetsActor
        fun C(Other: Any): LevelVariantSetsActor
    }
}

external open class LevelVariantSetsFunctionDirector : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LevelVariantSetsFunctionDirector
        fun Find(Outer: UObject, ResourceName: String): LevelVariantSetsFunctionDirector
        fun GetDefaultObject(): LevelVariantSetsFunctionDirector
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelVariantSetsFunctionDirector
        fun C(Other: UObject): LevelVariantSetsFunctionDirector
        fun C(Other: Any): LevelVariantSetsFunctionDirector
    }
}

external open class PropertyValueTransform : PropertyValue {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PropertyValueTransform
        fun Find(Outer: UObject, ResourceName: String): PropertyValueTransform
        fun GetDefaultObject(): PropertyValueTransform
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PropertyValueTransform
        fun C(Other: UObject): PropertyValueTransform
        fun C(Other: Any): PropertyValueTransform
    }
}

external open class PropertyValueVisibility : PropertyValue {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PropertyValueVisibility
        fun Find(Outer: UObject, ResourceName: String): PropertyValueVisibility
        fun GetDefaultObject(): PropertyValueVisibility
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PropertyValueVisibility
        fun C(Other: UObject): PropertyValueVisibility
        fun C(Other: Any): PropertyValueVisibility
    }
}

external open class PropertyValueColor : PropertyValue {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PropertyValueColor
        fun Find(Outer: UObject, ResourceName: String): PropertyValueColor
        fun GetDefaultObject(): PropertyValueColor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PropertyValueColor
        fun C(Other: UObject): PropertyValueColor
        fun C(Other: Any): PropertyValueColor
    }
}

external open class PropertyValueMaterial : PropertyValue {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PropertyValueMaterial
        fun Find(Outer: UObject, ResourceName: String): PropertyValueMaterial
        fun GetDefaultObject(): PropertyValueMaterial
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PropertyValueMaterial
        fun C(Other: UObject): PropertyValueMaterial
        fun C(Other: Any): PropertyValueMaterial
    }
}

external open class GeometryCacheTrack : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Duration: Number

    companion object {
        fun Load(ResourceName: String): GeometryCacheTrack
        fun Find(Outer: UObject, ResourceName: String): GeometryCacheTrack
        fun GetDefaultObject(): GeometryCacheTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GeometryCacheTrack
        fun C(Other: UObject): GeometryCacheTrack
        fun C(Other: Any): GeometryCacheTrack
    }
}

external open class GeometryCache : UObject {
    constructor()
    constructor(Outer: UObject)
    open var AssetImportData: AssetImportData
    open var ThumbnailInfo: ThumbnailInfo
    open var Materials: Array<MaterialInterface>
    open var Tracks: Array<GeometryCacheTrack>
    open var StartFrame: Number
    open var EndFrame: Number

    companion object {
        fun Load(ResourceName: String): GeometryCache
        fun Find(Outer: UObject, ResourceName: String): GeometryCache
        fun GetDefaultObject(): GeometryCache
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GeometryCache
        fun C(Other: UObject): GeometryCache
        fun C(Other: Any): GeometryCache
    }
}

external open class GeometryCacheComponent : MeshComponent {
    constructor()
    constructor(Outer: UObject)
    open var GeometryCache: GeometryCache
    open var bRunning: Boolean
    open var bLooping: Boolean
    open var StartTimeOffset: Number
    open var PlaybackSpeed: Number
    open var NumTracks: Number
    open var ElapsedTime: Number
    open var Duration: Number
    open var bManualTick: Boolean
    open fun TickAtThisTime(Time: Number, bInIsRunning: Boolean, bInBackwards: Boolean, bInIsLooping: Boolean)
    open fun Stop()
    open fun SetStartTimeOffset(NewStartTimeOffset: Number)
    open fun SetPlaybackSpeed(NewPlaybackSpeed: Number)
    open fun SetLooping(bNewLooping: Boolean)
    open fun SetGeometryCache(NewGeomCache: GeometryCache): Boolean
    open fun PlayReversedFromEnd()
    open fun PlayReversed()
    open fun PlayFromStart()
    open fun Play()
    open fun Pause()
    open fun IsPlayingReversed(): Boolean
    open fun IsPlaying(): Boolean
    open fun IsLooping(): Boolean
    open fun GetStartTimeOffset(): Number
    open fun GetPlaybackSpeed(): Number
    open fun GetPlaybackDirection(): Number
    open fun GetNumberOfFrames(): Number
    open fun GetDuration(): Number
    open fun GetAnimationTime(): Number

    companion object {
        fun Load(ResourceName: String): GeometryCacheComponent
        fun Find(Outer: UObject, ResourceName: String): GeometryCacheComponent
        fun GetDefaultObject(): GeometryCacheComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GeometryCacheComponent
        fun C(Other: UObject): GeometryCacheComponent
        fun C(Other: Any): GeometryCacheComponent
    }
}

external open class GeometryCacheActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var GeometryCacheComponent: GeometryCacheComponent
    open fun GetGeometryCacheComponent(): GeometryCacheComponent

    companion object {
        fun GetDefaultObject(): GeometryCacheActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GeometryCacheActor
        fun C(Other: UObject): GeometryCacheActor
        fun C(Other: Any): GeometryCacheActor
    }
}

external open class GeometryCacheCodecBase : UObject {
    constructor()
    constructor(Outer: UObject)
    open var TopologyRanges: Array<Number>

    companion object {
        fun Load(ResourceName: String): GeometryCacheCodecBase
        fun Find(Outer: UObject, ResourceName: String): GeometryCacheCodecBase
        fun GetDefaultObject(): GeometryCacheCodecBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GeometryCacheCodecBase
        fun C(Other: UObject): GeometryCacheCodecBase
        fun C(Other: Any): GeometryCacheCodecBase
    }
}

external open class GeometryCacheCodecRaw : GeometryCacheCodecBase {
    constructor()
    constructor(Outer: UObject)
    open var DummyProperty: Number

    companion object {
        fun Load(ResourceName: String): GeometryCacheCodecRaw
        fun Find(Outer: UObject, ResourceName: String): GeometryCacheCodecRaw
        fun GetDefaultObject(): GeometryCacheCodecRaw
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GeometryCacheCodecRaw
        fun C(Other: UObject): GeometryCacheCodecRaw
        fun C(Other: Any): GeometryCacheCodecRaw
    }
}

external open class GeometryCacheCodecV1 : GeometryCacheCodecBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GeometryCacheCodecV1
        fun Find(Outer: UObject, ResourceName: String): GeometryCacheCodecV1
        fun GetDefaultObject(): GeometryCacheCodecV1
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GeometryCacheCodecV1
        fun C(Other: UObject): GeometryCacheCodecV1
        fun C(Other: Any): GeometryCacheCodecV1
    }
}

external open class GeometryCacheMeshData {
    open fun clone(): GeometryCacheMeshData

    companion object {
        fun C(Other: UObject): GeometryCacheMeshData
        fun C(Other: Any): GeometryCacheMeshData
    }
}

external open class GeometryCacheTrack_FlipbookAnimation : GeometryCacheTrack {
    constructor()
    constructor(Outer: UObject)
    open var NumMeshSamples: Any
    open fun AddMeshSample(MeshData: GeometryCacheMeshData, SampleTime: Number)

    companion object {
        fun Load(ResourceName: String): GeometryCacheTrack_FlipbookAnimation
        fun Find(Outer: UObject, ResourceName: String): GeometryCacheTrack_FlipbookAnimation
        fun GetDefaultObject(): GeometryCacheTrack_FlipbookAnimation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GeometryCacheTrack_FlipbookAnimation
        fun C(Other: UObject): GeometryCacheTrack_FlipbookAnimation
        fun C(Other: Any): GeometryCacheTrack_FlipbookAnimation
    }
}

external open class GeometryCacheTrackStreamable : GeometryCacheTrack {
    constructor()
    constructor(Outer: UObject)
    open var Codec: GeometryCacheCodecBase
    open var StartSampleTime: Number

    companion object {
        fun Load(ResourceName: String): GeometryCacheTrackStreamable
        fun Find(Outer: UObject, ResourceName: String): GeometryCacheTrackStreamable
        fun GetDefaultObject(): GeometryCacheTrackStreamable
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GeometryCacheTrackStreamable
        fun C(Other: UObject): GeometryCacheTrackStreamable
        fun C(Other: Any): GeometryCacheTrackStreamable
    }
}

external open class GeometryCacheTrack_TransformAnimation : GeometryCacheTrack {
    constructor()
    constructor(Outer: UObject)
    open fun SetMesh(NewMeshData: GeometryCacheMeshData)

    companion object {
        fun Load(ResourceName: String): GeometryCacheTrack_TransformAnimation
        fun Find(Outer: UObject, ResourceName: String): GeometryCacheTrack_TransformAnimation
        fun GetDefaultObject(): GeometryCacheTrack_TransformAnimation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GeometryCacheTrack_TransformAnimation
        fun C(Other: UObject): GeometryCacheTrack_TransformAnimation
        fun C(Other: Any): GeometryCacheTrack_TransformAnimation
    }
}

external open class GeometryCacheTrack_TransformGroupAnimation : GeometryCacheTrack {
    constructor()
    constructor(Outer: UObject)
    open fun SetMesh(NewMeshData: GeometryCacheMeshData)

    companion object {
        fun Load(ResourceName: String): GeometryCacheTrack_TransformGroupAnimation
        fun Find(Outer: UObject, ResourceName: String): GeometryCacheTrack_TransformGroupAnimation
        fun GetDefaultObject(): GeometryCacheTrack_TransformGroupAnimation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GeometryCacheTrack_TransformGroupAnimation
        fun C(Other: UObject): GeometryCacheTrack_TransformGroupAnimation
        fun C(Other: Any): GeometryCacheTrack_TransformGroupAnimation
    }
}

external object EAlembicSamplingType {
    var PerFrame: String /* "PerFrame" */
    var PerXFrames: String /* "PerXFrames" */
    var PerTimeStep: String /* "PerTimeStep" */
    var EAlembicSamplingType_MAX: String /* "EAlembicSamplingType_MAX" */
}

external open class AbcSamplingSettings {
    open var SamplingType: String /* "PerFrame" | "PerXFrames" | "PerTimeStep" | "EAlembicSamplingType_MAX" */
    open var FrameSteps: Number
    open var TimeSteps: Number
    open var FrameStart: Number
    open var FrameEnd: Number
    open var bSkipEmpty: Boolean
    open fun clone(): AbcSamplingSettings

    companion object {
        fun C(Other: UObject): AbcSamplingSettings
        fun C(Other: Any): AbcSamplingSettings
    }
}

external open class AbcAssetImportData : AssetImportData {
    constructor()
    constructor(Outer: UObject)
    open var TrackNames: Array<String>
    open var SamplingSettings: AbcSamplingSettings

    companion object {
        fun Load(ResourceName: String): AbcAssetImportData
        fun Find(Outer: UObject, ResourceName: String): AbcAssetImportData
        fun GetDefaultObject(): AbcAssetImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AbcAssetImportData
        fun C(Other: UObject): AbcAssetImportData
        fun C(Other: Any): AbcAssetImportData
    }
}

external object EAlembicImportType {
    var StaticMesh: String /* "StaticMesh" */
    var GeometryCache: String /* "GeometryCache" */
    var Skeletal: String /* "Skeletal" */
    var EAlembicImportType_MAX: String /* "EAlembicImportType_MAX" */
}

external open class AbcNormalGenerationSettings {
    open var bForceOneSmoothingGroupPerObject: Boolean
    open var HardEdgeAngleThreshold: Number
    open var bRecomputeNormals: Boolean
    open var bIgnoreDegenerateTriangles: Boolean
    open fun clone(): AbcNormalGenerationSettings

    companion object {
        fun C(Other: UObject): AbcNormalGenerationSettings
        fun C(Other: Any): AbcNormalGenerationSettings
    }
}

external open class AbcMaterialSettings {
    open var bCreateMaterials: Boolean
    open var bFindMaterials: Boolean
    open fun clone(): AbcMaterialSettings

    companion object {
        fun C(Other: UObject): AbcMaterialSettings
        fun C(Other: Any): AbcMaterialSettings
    }
}

external object EBaseCalculationType {
    var PercentageBased: String /* "PercentageBased" */
    var FixedNumber: String /* "FixedNumber" */
    var EBaseCalculationType_MAX: String /* "EBaseCalculationType_MAX" */
}

external open class AbcCompressionSettings {
    open var bMergeMeshes: Boolean
    open var bBakeMatrixAnimation: Boolean
    open var BaseCalculationType: String /* "PercentageBased" | "FixedNumber" | "EBaseCalculationType_MAX" */
    open var PercentageOfTotalBases: Number
    open var MaxNumberOfBases: Number
    open var MinimumNumberOfVertexInfluencePercentage: Number
    open fun clone(): AbcCompressionSettings

    companion object {
        fun C(Other: UObject): AbcCompressionSettings
        fun C(Other: Any): AbcCompressionSettings
    }
}

external open class AbcStaticMeshSettings {
    open var bMergeMeshes: Boolean
    open var bPropagateMatrixTransformations: Boolean
    open var bGenerateLightmapUVs: Boolean
    open fun clone(): AbcStaticMeshSettings

    companion object {
        fun C(Other: UObject): AbcStaticMeshSettings
        fun C(Other: Any): AbcStaticMeshSettings
    }
}

external open class AbcGeometryCacheSettings {
    open var bFlattenTracks: Boolean
    open var bApplyConstantTopologyOptimizations: Boolean
    open var bCalculateMotionVectorsDuringImport: Boolean
    open var bOptimizeIndexBuffers: Boolean
    open var CompressedPositionPrecision: Number
    open var CompressedTextureCoordinatesNumberOfBits: Number
    open fun clone(): AbcGeometryCacheSettings

    companion object {
        fun C(Other: UObject): AbcGeometryCacheSettings
        fun C(Other: Any): AbcGeometryCacheSettings
    }
}

external object EAbcConversionPreset {
    var Maya: String /* "Maya" */
    var Max: String /* "Max" */
    var Custom: String /* "Custom" */
    var EAbcConversionPreset_MAX: String /* "EAbcConversionPreset_MAX" */
}

external open class AbcConversionSettings {
    open var Preset: String /* "Maya" | "Max" | "Custom" | "EAbcConversionPreset_MAX" */
    open var bFlipU: Boolean
    open var bFlipV: Boolean
    open var Scale: Vector
    open var Rotation: Vector
    open fun clone(): AbcConversionSettings

    companion object {
        fun C(Other: UObject): AbcConversionSettings
        fun C(Other: Any): AbcConversionSettings
    }
}

external open class AbcImportSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ImportType: String /* "StaticMesh" | "GeometryCache" | "Skeletal" | "EAlembicImportType_MAX" */
    open var SamplingSettings: AbcSamplingSettings
    open var NormalGenerationSettings: AbcNormalGenerationSettings
    open var MaterialSettings: AbcMaterialSettings
    open var CompressionSettings: AbcCompressionSettings
    open var StaticMeshSettings: AbcStaticMeshSettings
    open var GeometryCacheSettings: AbcGeometryCacheSettings
    open var ConversionSettings: AbcConversionSettings

    companion object {
        fun Load(ResourceName: String): AbcImportSettings
        fun Find(Outer: UObject, ResourceName: String): AbcImportSettings
        fun GetDefaultObject(): AbcImportSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AbcImportSettings
        fun C(Other: UObject): AbcImportSettings
        fun C(Other: Any): AbcImportSettings
    }
}

external open class AlembicTestCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AlembicTestCommandlet
        fun Find(Outer: UObject, ResourceName: String): AlembicTestCommandlet
        fun GetDefaultObject(): AlembicTestCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AlembicTestCommandlet
        fun C(Other: UObject): AlembicTestCommandlet
        fun C(Other: Any): AlembicTestCommandlet
    }
}

external open class AlembicImportFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var ImportSettings: AbcImportSettings
    open var bShowOption: Boolean

    companion object {
        fun Load(ResourceName: String): AlembicImportFactory
        fun Find(Outer: UObject, ResourceName: String): AlembicImportFactory
        fun GetDefaultObject(): AlembicImportFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AlembicImportFactory
        fun C(Other: UObject): AlembicImportFactory
        fun C(Other: Any): AlembicImportFactory
    }
}

external open class ActorFactoryGeometryCache : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryGeometryCache
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryGeometryCache
        fun GetDefaultObject(): ActorFactoryGeometryCache
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryGeometryCache
        fun C(Other: UObject): ActorFactoryGeometryCache
        fun C(Other: Any): ActorFactoryGeometryCache
    }
}

external open class GeometryCacheThumbnailRenderer : DefaultSizedThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GeometryCacheThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): GeometryCacheThumbnailRenderer
        fun GetDefaultObject(): GeometryCacheThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GeometryCacheThumbnailRenderer
        fun C(Other: UObject): GeometryCacheThumbnailRenderer
        fun C(Other: Any): GeometryCacheThumbnailRenderer
    }
}

external open class AutomationUtilsBlueprintLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AutomationUtilsBlueprintLibrary
        fun Find(Outer: UObject, ResourceName: String): AutomationUtilsBlueprintLibrary
        fun GetDefaultObject(): AutomationUtilsBlueprintLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AutomationUtilsBlueprintLibrary
        fun TakeGameplayAutomationScreenshot(ScreenShotName: String, MaxGlobalError: Number, MaxLocalError: Number, MapNameOverride: String)
        fun C(Other: UObject): AutomationUtilsBlueprintLibrary
        fun C(Other: Any): AutomationUtilsBlueprintLibrary
    }
}

external open class ScreenshotComparisonCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ScreenshotComparisonCommandlet
        fun Find(Outer: UObject, ResourceName: String): ScreenshotComparisonCommandlet
        fun GetDefaultObject(): ScreenshotComparisonCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ScreenshotComparisonCommandlet
        fun C(Other: UObject): ScreenshotComparisonCommandlet
        fun C(Other: Any): ScreenshotComparisonCommandlet
    }
}

external open class MovieSceneGeometryCacheParams {
    open var GeometryCacheAsset: GeometryCache
    open var StartFrameOffset: FrameNumber
    open var EndFrameOffset: FrameNumber
    open var PlayRate: Number
    open var bReverse: Boolean
    open var StartOffset: Number
    open var EndOffset: Number
    open var GeometryCache: SoftObjectPath
    open fun clone(): MovieSceneGeometryCacheParams

    companion object {
        fun C(Other: UObject): MovieSceneGeometryCacheParams
        fun C(Other: Any): MovieSceneGeometryCacheParams
    }
}

external open class MovieSceneGeometryCacheSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var Params: MovieSceneGeometryCacheParams

    companion object {
        fun Load(ResourceName: String): MovieSceneGeometryCacheSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneGeometryCacheSection
        fun GetDefaultObject(): MovieSceneGeometryCacheSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneGeometryCacheSection
        fun C(Other: UObject): MovieSceneGeometryCacheSection
        fun C(Other: Any): MovieSceneGeometryCacheSection
    }
}

external open class MovieSceneGeometryCacheTrack : MovieSceneNameableTrack {
    constructor()
    constructor(Outer: UObject)
    open var AnimationSections: Array<MovieSceneSection>

    companion object {
        fun Load(ResourceName: String): MovieSceneGeometryCacheTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneGeometryCacheTrack
        fun GetDefaultObject(): MovieSceneGeometryCacheTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneGeometryCacheTrack
        fun C(Other: UObject): MovieSceneGeometryCacheTrack
        fun C(Other: Any): MovieSceneGeometryCacheTrack
    }
}

external open class WebSocketConnection : NetConnection {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): WebSocketConnection
        fun Find(Outer: UObject, ResourceName: String): WebSocketConnection
        fun GetDefaultObject(): WebSocketConnection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WebSocketConnection
        fun C(Other: UObject): WebSocketConnection
        fun C(Other: Any): WebSocketConnection
    }
}

external open class WebSocketNetDriver : NetDriver {
    constructor()
    constructor(Outer: UObject)
    open var WebSocketPort: Number

    companion object {
        fun Load(ResourceName: String): WebSocketNetDriver
        fun Find(Outer: UObject, ResourceName: String): WebSocketNetDriver
        fun GetDefaultObject(): WebSocketNetDriver
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WebSocketNetDriver
        fun C(Other: UObject): WebSocketNetDriver
        fun C(Other: Any): WebSocketNetDriver
    }
}

external open class ImgMediaSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var DefaultFrameRate: FrameRate
    open var CacheBehindPercentage: Number
    open var CacheSizeGB: Number
    open var CacheThreads: Number
    open var CacheThreadStackSizeKB: Number
    open var GlobalCacheSizeGB: Number
    open var UseGlobalCache: Boolean
    open var ExrDecoderThreads: Any
    open var DefaultProxy: String
    open var UseDefaultProxy: Boolean

    companion object {
        fun Load(ResourceName: String): ImgMediaSettings
        fun Find(Outer: UObject, ResourceName: String): ImgMediaSettings
        fun GetDefaultObject(): ImgMediaSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ImgMediaSettings
        fun C(Other: UObject): ImgMediaSettings
        fun C(Other: Any): ImgMediaSettings
    }
}

external interface `T$149` {
    var OutProxies: Array<String>
}

external open class ImgMediaSource : BaseMediaSource {
    open var FrameRateOverride: FrameRate
    open var ProxyOverride: String
    open var SequencePath: DirectoryPath
    open fun SetSequencePath(Path: String)
    open fun GetSequencePath(): String
    open fun GetProxies(OutProxies: Array<String> = definedExternally): `T$149`

    companion object {
        fun Load(ResourceName: String): ImgMediaSource
        fun Find(Outer: UObject, ResourceName: String): ImgMediaSource
        fun GetDefaultObject(): ImgMediaSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ImgMediaSource
        fun C(Other: UObject): ImgMediaSource
        fun C(Other: Any): ImgMediaSource
    }
}

external open class MovieSceneMediaSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var MediaSource: MediaSource
    open var bLooping: Boolean
    open var StartFrameOffset: FrameNumber
    open var MediaTexture: MediaTexture
    open var MediaSoundComponent: MediaSoundComponent
    open var bUseExternalMediaPlayer: Boolean
    open var ExternalMediaPlayer: MediaPlayer
    open var ThumbnailReferenceOffset: Number

    companion object {
        fun Load(ResourceName: String): MovieSceneMediaSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneMediaSection
        fun GetDefaultObject(): MovieSceneMediaSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneMediaSection
        fun C(Other: UObject): MovieSceneMediaSection
        fun C(Other: Any): MovieSceneMediaSection
    }
}

external open class MovieSceneMediaTrack : MovieSceneNameableTrack {
    constructor()
    constructor(Outer: UObject)
    open var MediaSections: Array<MovieSceneSection>

    companion object {
        fun Load(ResourceName: String): MovieSceneMediaTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneMediaTrack
        fun GetDefaultObject(): MovieSceneMediaTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneMediaTrack
        fun C(Other: UObject): MovieSceneMediaTrack
        fun C(Other: Any): MovieSceneMediaTrack
    }
}

external open class NetPropertyHook : Property {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NetPropertyHook
        fun Find(Outer: UObject, ResourceName: String): NetPropertyHook
        fun GetDefaultObject(): NetPropertyHook
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NetPropertyHook
        fun C(Other: UObject): NetPropertyHook
        fun C(Other: Any): NetPropertyHook
    }
}

external open class UnitTestBase : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): UnitTestBase
        fun Find(Outer: UObject, ResourceName: String): UnitTestBase
        fun GetDefaultObject(): UnitTestBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UnitTestBase
        fun C(Other: UObject): UnitTestBase
        fun C(Other: Any): UnitTestBase
    }
}

external open class UnitTask : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): UnitTask
        fun Find(Outer: UObject, ResourceName: String): UnitTask
        fun GetDefaultObject(): UnitTask
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UnitTask
        fun C(Other: UObject): UnitTask
        fun C(Other: Any): UnitTask
    }
}

external object EUnitTestVerification {
    var Unverified: String /* "Unverified" */
    var VerifiedNotFixed: String /* "VerifiedNotFixed" */
    var VerifiedFixed: String /* "VerifiedFixed" */
    var VerifiedNeedsUpdate: String /* "VerifiedNeedsUpdate" */
    var VerifiedUnreliable: String /* "VerifiedUnreliable" */
    var EUnitTestVerification_MAX: String /* "EUnitTestVerification_MAX" */
}

external open class UnitTest : UnitTestBase {
    constructor()
    constructor(Outer: UObject)
    open var PeakMemoryUsage: Any
    open var TimeToPeakMem: Number
    open var LastExecutionTime: Number
    open var UnitTasks: Array<UnitTask>
    open var VerificationState: String /* "Unverified" | "VerifiedNotFixed" | "VerifiedFixed" | "VerifiedNeedsUpdate" | "VerifiedUnreliable" | "EUnitTestVerification_MAX" */

    companion object {
        fun Load(ResourceName: String): UnitTest
        fun Find(Outer: UObject, ResourceName: String): UnitTest
        fun GetDefaultObject(): UnitTest
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UnitTest
        fun C(Other: UObject): UnitTest
        fun C(Other: Any): UnitTest
    }
}

external open class ProcessUnitTest : UnitTest {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ProcessUnitTest
        fun Find(Outer: UObject, ResourceName: String): ProcessUnitTest
        fun GetDefaultObject(): ProcessUnitTest
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ProcessUnitTest
        fun C(Other: UObject): ProcessUnitTest
        fun C(Other: Any): ProcessUnitTest
    }
}

external open class MinimalClient : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MinimalClient
        fun Find(Outer: UObject, ResourceName: String): MinimalClient
        fun GetDefaultObject(): MinimalClient
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MinimalClient
        fun C(Other: UObject): MinimalClient
        fun C(Other: Any): MinimalClient
    }
}

external open class ClientUnitTest : ProcessUnitTest {
    constructor()
    constructor(Outer: UObject)
    open var MinClient: MinimalClient

    companion object {
        fun Load(ResourceName: String): ClientUnitTest
        fun Find(Outer: UObject, ResourceName: String): ClientUnitTest
        fun GetDefaultObject(): ClientUnitTest
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClientUnitTest
        fun C(Other: UObject): ClientUnitTest
        fun C(Other: Any): ClientUnitTest
    }
}

external open class IPClient : ClientUnitTest {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): IPClient
        fun Find(Outer: UObject, ResourceName: String): IPClient
        fun GetDefaultObject(): IPClient
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): IPClient
        fun C(Other: UObject): IPClient
        fun C(Other: Any): IPClient
    }
}

external open class HTML5Client : IPClient {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): HTML5Client
        fun Find(Outer: UObject, ResourceName: String): HTML5Client
        fun GetDefaultObject(): HTML5Client
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): HTML5Client
        fun C(Other: UObject): HTML5Client
        fun C(Other: Any): HTML5Client
    }
}

external open class NUTActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var TempDelegate: UnrealEngineDelegate<(InNUTActor: NUTActor) -> Unit>
    open fun Wait(Seconds: Any)
    open fun UnitTravel(Dest: String)
    open fun UnitSeamlessTravel(Dest: String)
    open fun ServerReceiveText(InText: String)
    open fun ServerExecute(InDelegate: String)
    open fun ServerClientStillAlive()
    open fun ServerClientPing()
    open fun ServerAdmin(Command: String)
    open fun NetMulticastPing()
    open fun NetFlush()
    open fun Admin(Command: String)

    companion object {
        fun GetDefaultObject(): NUTActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NUTActor
        fun C(Other: UObject): NUTActor
        fun C(Other: Any): NUTActor
    }
}

external open class NUTGlobals : UObject {
    constructor()
    constructor(Outer: UObject)
    open var EventWatcher: NetConnection
    open var ServerPortOffset: Number
    open var UnitTestNetDriverCount: Number
    open var DumpRPCMatches: Array<String>
    open var UnitTestModules: Array<String>
    open var UnloadedModules: Array<String>

    companion object {
        fun Load(ResourceName: String): NUTGlobals
        fun Find(Outer: UObject, ResourceName: String): NUTGlobals
        fun GetDefaultObject(): NUTGlobals
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NUTGlobals
        fun C(Other: UObject): NUTGlobals
        fun C(Other: Any): NUTGlobals
    }
}

external open class PackedVectorTest : UnitTest {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PackedVectorTest
        fun Find(Outer: UObject, ResourceName: String): PackedVectorTest
        fun GetDefaultObject(): PackedVectorTest
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PackedVectorTest
        fun C(Other: UObject): PackedVectorTest
        fun C(Other: Any): PackedVectorTest
    }
}

external open class SteamClient : IPClient {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SteamClient
        fun Find(Outer: UObject, ResourceName: String): SteamClient
        fun GetDefaultObject(): SteamClient
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SteamClient
        fun C(Other: UObject): SteamClient
        fun C(Other: Any): SteamClient
    }
}

external open class UnitTestActorChannel : ActorChannel {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): UnitTestActorChannel
        fun Find(Outer: UObject, ResourceName: String): UnitTestActorChannel
        fun GetDefaultObject(): UnitTestActorChannel
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UnitTestActorChannel
        fun C(Other: UObject): UnitTestActorChannel
        fun C(Other: Any): UnitTestActorChannel
    }
}

external open class UnitTestChannel : Channel {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): UnitTestChannel
        fun Find(Outer: UObject, ResourceName: String): UnitTestChannel
        fun GetDefaultObject(): UnitTestChannel
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UnitTestChannel
        fun C(Other: UObject): UnitTestChannel
        fun C(Other: Any): UnitTestChannel
    }
}

external open class UnitTestCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): UnitTestCommandlet
        fun Find(Outer: UObject, ResourceName: String): UnitTestCommandlet
        fun GetDefaultObject(): UnitTestCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UnitTestCommandlet
        fun C(Other: UObject): UnitTestCommandlet
        fun C(Other: Any): UnitTestCommandlet
    }
}

external open class UnitTestManager : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bCapUnitTestCount: Boolean
    open var MaxUnitTestCount: Number
    open var bCapUnitTestMemory: Boolean
    open var MaxMemoryPercent: Number
    open var AutoCloseMemoryPercent: Number
    open var MaxAutoCloseCount: Number
    open var UnitTestSessionCount: Any
    open var PendingUnitTests: Array<UnrealEngineClass>
    open var ActiveUnitTests: Array<UnitTest>
    open var FinishedUnitTests: Array<UnitTest>

    companion object {
        fun Load(ResourceName: String): UnitTestManager
        fun Find(Outer: UObject, ResourceName: String): UnitTestManager
        fun GetDefaultObject(): UnitTestManager
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UnitTestManager
        fun C(Other: UObject): UnitTestManager
        fun C(Other: Any): UnitTestManager
    }
}

external open class UnitTestPackageMap : PackageMapClient {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): UnitTestPackageMap
        fun Find(Outer: UObject, ResourceName: String): UnitTestPackageMap
        fun GetDefaultObject(): UnitTestPackageMap
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UnitTestPackageMap
        fun C(Other: UObject): UnitTestPackageMap
        fun C(Other: Any): UnitTestPackageMap
    }
}

external open class VMReflection : UnitTest {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): VMReflection
        fun Find(Outer: UObject, ResourceName: String): VMReflection
        fun GetDefaultObject(): VMReflection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VMReflection
        fun C(Other: UObject): VMReflection
        fun C(Other: Any): VMReflection
    }
}

external open class VMTestClassA : UObject {
    constructor()
    constructor(Outer: UObject)
    open var AObjectRef: UObject
    open var ByteProp: Number
    open var UInt16Prop: Any
    open var UInt32Prop: Any
    open var UInt64Prop: Any
    open var Int8Prop: Any
    open var Int16Prop: Any
    open var Int32Prop: Number
    open var Int64Prop: Any
    open var FloatProp: Number
    open var DoubleProp: Any
    open var bBoolPropA: Boolean
    open var bBoolPropB: Boolean
    open var bBoolPropC: Boolean
    open var bBoolPropD: Boolean
    open var bBoolPropE: Boolean
    open var NameProp: String
    open var StringProp: String
    open var TextProp: String
    open var BytePropArray: Number
    open var ObjectPropArray: UObject
    open var DynBytePropArray: Array<Number>
    open var DynBoolPropArray: Array<Boolean>
    open var DynObjectPropArray: Array<UObject>
    open var DynNamePropArray: Array<String>
    open var DynDoublePropArray: Array<Any>
    open var DynFloatPropArray: Array<Number>
    open var DynInt16PropArray: Array<Any>
    open var DynInt64PropArray: Array<Any>
    open var DynInt8PropArray: Array<Any>
    open var DynIntPropArray: Array<Number>
    open var DynUInt16PropArray: Array<Any>
    open var DynUIntPropArray: Array<Any>
    open var DynUInt64PropArray: Array<Any>
    open var DynStringPropArray: Array<String>
    open var DynTextPropArray: Array<String>
    open var DynClassPropArray: Array<UnrealEngineClass>
    open var DynPawnPropArray: Array<Pawn>
    open var StructProp: Vector
    open var StructPropArray: Vector
    open var DynStructPropArray: Array<Vector>

    companion object {
        fun Load(ResourceName: String): VMTestClassA
        fun Find(Outer: UObject, ResourceName: String): VMTestClassA
        fun GetDefaultObject(): VMTestClassA
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VMTestClassA
        fun C(Other: UObject): VMTestClassA
        fun C(Other: Any): VMTestClassA
    }
}

external open class VMTestClassB : UObject {
    constructor()
    constructor(Outer: UObject)
    open var BObjectRef: UObject

    companion object {
        fun Load(ResourceName: String): VMTestClassB
        fun Find(Outer: UObject, ResourceName: String): VMTestClassB
        fun GetDefaultObject(): VMTestClassB
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VMTestClassB
        fun C(Other: UObject): VMTestClassB
        fun C(Other: Any): VMTestClassB
    }
}

external open class FTextCrash : ClientUnitTest {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): FTextCrash
        fun Find(Outer: UObject, ResourceName: String): FTextCrash
        fun GetDefaultObject(): FTextCrash
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FTextCrash
        fun C(Other: UObject): FTextCrash
        fun C(Other: Any): FTextCrash
    }
}

external open class NetBitsTest : UnitTest {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NetBitsTest
        fun Find(Outer: UObject, ResourceName: String): NetBitsTest
        fun GetDefaultObject(): NetBitsTest
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NetBitsTest
        fun C(Other: UObject): NetBitsTest
        fun C(Other: Any): NetBitsTest
    }
}

external open class UTT61_DebugReplicateData : ClientUnitTest {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): UTT61_DebugReplicateData
        fun Find(Outer: UObject, ResourceName: String): UTT61_DebugReplicateData
        fun GetDefaultObject(): UTT61_DebugReplicateData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UTT61_DebugReplicateData
        fun C(Other: UObject): UTT61_DebugReplicateData
        fun C(Other: Any): UTT61_DebugReplicateData
    }
}

external open class AndroidPermissionCallbackProxy : UObject {
    constructor()
    constructor(Outer: UObject)
    open var OnPermissionsGrantedDynamicDelegate: UnrealEngineMulticastDelegate<(Permissions: Array<String>, GrantResults: Array<Boolean>) -> Unit>

    companion object {
        fun Load(ResourceName: String): AndroidPermissionCallbackProxy
        fun Find(Outer: UObject, ResourceName: String): AndroidPermissionCallbackProxy
        fun GetDefaultObject(): AndroidPermissionCallbackProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AndroidPermissionCallbackProxy
        fun C(Other: UObject): AndroidPermissionCallbackProxy
        fun C(Other: Any): AndroidPermissionCallbackProxy
    }
}

external open class AndroidPermissionFunctionLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AndroidPermissionFunctionLibrary
        fun Find(Outer: UObject, ResourceName: String): AndroidPermissionFunctionLibrary
        fun GetDefaultObject(): AndroidPermissionFunctionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AndroidPermissionFunctionLibrary
        fun CheckPermission(permission: String): Boolean
        fun AcquirePermissions(Permissions: Array<String>): AndroidPermissionCallbackProxy
        fun C(Other: UObject): AndroidPermissionFunctionLibrary
        fun C(Other: Any): AndroidPermissionFunctionLibrary
    }
}

external open class AppleImageUtilsImageConversionResult {
    open var Error: String
    open var ImageData: Array<Number>
    open fun clone(): AppleImageUtilsImageConversionResult

    companion object {
        fun C(Other: UObject): AppleImageUtilsImageConversionResult
        fun C(Other: Any): AppleImageUtilsImageConversionResult
    }
}

external object ETextureRotationDirection {
    var None: String /* "None" */
    var Left: String /* "Left" */
    var Right: String /* "Right" */
    var Down: String /* "Down" */
    var ETextureRotationDirection_MAX: String /* "ETextureRotationDirection_MAX" */
}

external open class AppleImageUtilsBaseAsyncTaskBlueprintProxy : UObject {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<(ConversionResult: AppleImageUtilsImageConversionResult) -> Unit>
    open var OnFailure: UnrealEngineMulticastDelegate<(ConversionResult: AppleImageUtilsImageConversionResult) -> Unit>
    open var ConversionResult: AppleImageUtilsImageConversionResult

    companion object {
        fun Load(ResourceName: String): AppleImageUtilsBaseAsyncTaskBlueprintProxy
        fun Find(Outer: UObject, ResourceName: String): AppleImageUtilsBaseAsyncTaskBlueprintProxy
        fun GetDefaultObject(): AppleImageUtilsBaseAsyncTaskBlueprintProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AppleImageUtilsBaseAsyncTaskBlueprintProxy
        fun CreateProxyObjectForConvertToTIFF(SourceImage: Texture, bWantColor: Boolean, bUseGpu: Boolean, Scale: Number, Rotate: String /* "None" | "Left" | "Right" | "Down" | "ETextureRotationDirection_MAX" */): AppleImageUtilsBaseAsyncTaskBlueprintProxy
        fun CreateProxyObjectForConvertToPNG(SourceImage: Texture, bWantColor: Boolean, bUseGpu: Boolean, Scale: Number, Rotate: String /* "None" | "Left" | "Right" | "Down" | "ETextureRotationDirection_MAX" */): AppleImageUtilsBaseAsyncTaskBlueprintProxy
        fun CreateProxyObjectForConvertToJPEG(SourceImage: Texture, Quality: Number, bWantColor: Boolean, bUseGpu: Boolean, Scale: Number, Rotate: String /* "None" | "Left" | "Right" | "Down" | "ETextureRotationDirection_MAX" */): AppleImageUtilsBaseAsyncTaskBlueprintProxy
        fun CreateProxyObjectForConvertToHEIF(SourceImage: Texture, Quality: Number, bWantColor: Boolean, bUseGpu: Boolean, Scale: Number, Rotate: String /* "None" | "Left" | "Right" | "Down" | "ETextureRotationDirection_MAX" */): AppleImageUtilsBaseAsyncTaskBlueprintProxy
        fun C(Other: UObject): AppleImageUtilsBaseAsyncTaskBlueprintProxy
        fun C(Other: Any): AppleImageUtilsBaseAsyncTaskBlueprintProxy
    }
}

external open class AppleImageInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AppleImageInterface
        fun Find(Outer: UObject, ResourceName: String): AppleImageInterface
        fun GetDefaultObject(): AppleImageInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AppleImageInterface
        fun C(Other: UObject): AppleImageInterface
        fun C(Other: Any): AppleImageInterface
    }
}

external open class K2Node_ConvertToJPEG : K2Node_BaseAsyncTask {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_ConvertToJPEG
        fun Find(Outer: UObject, ResourceName: String): K2Node_ConvertToJPEG
        fun GetDefaultObject(): K2Node_ConvertToJPEG
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_ConvertToJPEG
        fun C(Other: UObject): K2Node_ConvertToJPEG
        fun C(Other: Any): K2Node_ConvertToJPEG
    }
}

external open class K2Node_ConvertToHEIF : K2Node_BaseAsyncTask {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_ConvertToHEIF
        fun Find(Outer: UObject, ResourceName: String): K2Node_ConvertToHEIF
        fun GetDefaultObject(): K2Node_ConvertToHEIF
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_ConvertToHEIF
        fun C(Other: UObject): K2Node_ConvertToHEIF
        fun C(Other: Any): K2Node_ConvertToHEIF
    }
}

external open class K2Node_ConvertToTIFF : K2Node_BaseAsyncTask {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_ConvertToTIFF
        fun Find(Outer: UObject, ResourceName: String): K2Node_ConvertToTIFF
        fun GetDefaultObject(): K2Node_ConvertToTIFF
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_ConvertToTIFF
        fun C(Other: UObject): K2Node_ConvertToTIFF
        fun C(Other: Any): K2Node_ConvertToTIFF
    }
}

external open class K2Node_ConvertToPNG : K2Node_BaseAsyncTask {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_ConvertToPNG
        fun Find(Outer: UObject, ResourceName: String): K2Node_ConvertToPNG
        fun GetDefaultObject(): K2Node_ConvertToPNG
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_ConvertToPNG
        fun C(Other: UObject): K2Node_ConvertToPNG
        fun C(Other: Any): K2Node_ConvertToPNG
    }
}

external open class ArchVisCharacter(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Character {
    open var LookUpAxisName: String
    open var LookUpAtRateAxisName: String
    open var TurnAxisName: String
    open var TurnAtRateAxisName: String
    open var MoveForwardAxisName: String
    open var MoveRightAxisName: String
    open var MouseSensitivityScale_Pitch: Number
    open var MouseSensitivityScale_Yaw: Number

    companion object {
        fun GetDefaultObject(): ArchVisCharacter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ArchVisCharacter
        fun C(Other: UObject): ArchVisCharacter
        fun C(Other: Any): ArchVisCharacter
    }
}

external open class ArchVisCharMovementComponent : CharacterMovementComponent {
    constructor()
    constructor(Outer: UObject)
    open var RotationalAcceleration: Rotator
    open var RotationalDeceleration: Rotator
    open var MaxRotationalVelocity: Rotator
    open var MinPitch: Number
    open var MaxPitch: Number
    open var WalkingFriction: Number
    open var WalkingSpeed: Number
    open var WalkingAcceleration: Number

    companion object {
        fun Load(ResourceName: String): ArchVisCharMovementComponent
        fun Find(Outer: UObject, ResourceName: String): ArchVisCharMovementComponent
        fun GetDefaultObject(): ArchVisCharMovementComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ArchVisCharMovementComponent
        fun C(Other: UObject): ArchVisCharMovementComponent
        fun C(Other: Any): ArchVisCharMovementComponent
    }
}

external open class AudioCaptureDeviceInfo {
    open var DeviceName: String
    open var NumInputChannels: Number
    open var SampleRate: Number
    open fun clone(): AudioCaptureDeviceInfo

    companion object {
        fun C(Other: UObject): AudioCaptureDeviceInfo
        fun C(Other: Any): AudioCaptureDeviceInfo
    }
}

external interface `T$150` {
    var OutInfo: AudioCaptureDeviceInfo
    var `$`: Boolean
}

external open class AudioCapture : AudioGenerator {
    constructor()
    constructor(Outer: UObject)
    open fun StopCapturingAudio()
    open fun StartCapturingAudio()
    open fun IsCapturingAudio(): Boolean
    open fun GetAudioCaptureDeviceInfo(OutInfo: AudioCaptureDeviceInfo = definedExternally): `T$150`

    companion object {
        fun Load(ResourceName: String): AudioCapture
        fun Find(Outer: UObject, ResourceName: String): AudioCapture
        fun GetDefaultObject(): AudioCapture
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AudioCapture
        fun C(Other: UObject): AudioCapture
        fun C(Other: Any): AudioCapture
    }
}

external open class AudioCaptureFunctionLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AudioCaptureFunctionLibrary
        fun Find(Outer: UObject, ResourceName: String): AudioCaptureFunctionLibrary
        fun GetDefaultObject(): AudioCaptureFunctionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AudioCaptureFunctionLibrary
        fun CreateAudioCapture(): AudioCapture
        fun C(Other: UObject): AudioCaptureFunctionLibrary
        fun C(Other: Any): AudioCaptureFunctionLibrary
    }
}

external open class AudioCaptureComponent : SynthComponent {
    constructor()
    constructor(Outer: UObject)
    open var JitterLatencyFrames: Number

    companion object {
        fun Load(ResourceName: String): AudioCaptureComponent
        fun Find(Outer: UObject, ResourceName: String): AudioCaptureComponent
        fun GetDefaultObject(): AudioCaptureComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AudioCaptureComponent
        fun C(Other: UObject): AudioCaptureComponent
        fun C(Other: Any): AudioCaptureComponent
    }
}

external open class ComponentReference {
    open var OtherActor: Actor
    open var ComponentProperty: String
    open var PathToComponent: String
    open fun clone(): ComponentReference

    companion object {
        fun C(Other: UObject): ComponentReference
        fun C(Other: Any): ComponentReference
    }
}

external interface `T$151` {
    var Locations: Array<Vector>
}

external open class CableComponent : MeshComponent {
    constructor()
    constructor(Outer: UObject)
    open var bAttachStart: Boolean
    open var bAttachEnd: Boolean
    open var AttachEndTo: ComponentReference
    open var AttachEndToSocketName: String
    open var EndLocation: Vector
    open var CableLength: Number
    open var NumSegments: Number
    open var SubstepTime: Number
    open var SolverIterations: Number
    open var bEnableStiffness: Boolean
    open var bEnableCollision: Boolean
    open var CollisionFriction: Number
    open var CableForce: Vector
    open var CableGravityScale: Number
    open var CableWidth: Number
    open var NumSides: Number
    open var TileMaterial: Number
    open fun SetAttachEndToComponent(Component: SceneComponent, SocketName: String)
    open fun SetAttachEndTo(Actor: Actor, ComponentProperty: String, SocketName: String)
    open fun GetCableParticleLocations(Locations: Array<Vector> = definedExternally): `T$151`
    open fun GetAttachedComponent(): SceneComponent
    open fun GetAttachedActor(): Actor

    companion object {
        fun Load(ResourceName: String): CableComponent
        fun Find(Outer: UObject, ResourceName: String): CableComponent
        fun GetDefaultObject(): CableComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CableComponent
        fun C(Other: UObject): CableComponent
        fun C(Other: Any): CableComponent
    }
}

external open class CableActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var CableComponent: CableComponent

    companion object {
        fun GetDefaultObject(): CableActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CableActor
        fun C(Other: UObject): CableActor
        fun C(Other: Any): CableActor
    }
}

external open class CustomMeshTriangle {
    open var Vertex0: Vector
    open var Vertex1: Vector
    open var Vertex2: Vector
    open fun clone(): CustomMeshTriangle

    companion object {
        fun C(Other: UObject): CustomMeshTriangle
        fun C(Other: Any): CustomMeshTriangle
    }
}

external open class CustomMeshComponent : MeshComponent {
    constructor()
    constructor(Outer: UObject)
    open fun SetCustomMeshTriangles(Triangles: Array<CustomMeshTriangle>): Boolean
    open fun ClearCustomMeshTriangles()
    open fun AddCustomMeshTriangles(Triangles: Array<CustomMeshTriangle>)

    companion object {
        fun Load(ResourceName: String): CustomMeshComponent
        fun Find(Outer: UObject, ResourceName: String): CustomMeshComponent
        fun GetDefaultObject(): CustomMeshComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CustomMeshComponent
        fun C(Other: UObject): CustomMeshComponent
        fun C(Other: Any): CustomMeshComponent
    }
}

external open class ChaosEventListenerComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ChaosEventListenerComponent
        fun Find(Outer: UObject, ResourceName: String): ChaosEventListenerComponent
        fun GetDefaultObject(): ChaosEventListenerComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ChaosEventListenerComponent
        fun C(Other: UObject): ChaosEventListenerComponent
        fun C(Other: Any): ChaosEventListenerComponent
    }
}

external open class ChaosGameplayEventDispatcher : ChaosEventListenerComponent {
    constructor()
    constructor(Outer: UObject)
    open var CollisionEventRegistrations: Any
    open var BreakEventRegistrations: Any

    companion object {
        fun Load(ResourceName: String): ChaosGameplayEventDispatcher
        fun Find(Outer: UObject, ResourceName: String): ChaosGameplayEventDispatcher
        fun GetDefaultObject(): ChaosGameplayEventDispatcher
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ChaosGameplayEventDispatcher
        fun C(Other: UObject): ChaosGameplayEventDispatcher
        fun C(Other: Any): ChaosGameplayEventDispatcher
    }
}

external open class ChaosNotifyHandlerInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ChaosNotifyHandlerInterface
        fun Find(Outer: UObject, ResourceName: String): ChaosNotifyHandlerInterface
        fun GetDefaultObject(): ChaosNotifyHandlerInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ChaosNotifyHandlerInterface
        fun C(Other: UObject): ChaosNotifyHandlerInterface
        fun C(Other: Any): ChaosNotifyHandlerInterface
    }
}

external open class ChaosPhysicsCollisionInfo {
    open var Component: PrimitiveComponent
    open var OtherComponent: PrimitiveComponent
    open var Location: Vector
    open var Normal: Vector
    open var AccumulatedImpulse: Vector
    open var Velocity: Vector
    open var OtherVelocity: Vector
    open var AngularVelocity: Vector
    open var OtherAngularVelocity: Vector
    open var Mass: Number
    open var OtherMass: Number
    open fun clone(): ChaosPhysicsCollisionInfo
    open fun ConvertPhysicsCollisionToHitResult(): HitResult

    companion object {
        fun C(Other: UObject): ChaosPhysicsCollisionInfo
        fun C(Other: Any): ChaosPhysicsCollisionInfo
        fun ConvertPhysicsCollisionToHitResult(PhysicsCollision: ChaosPhysicsCollisionInfo): HitResult
    }
}

external open class ChaosSolverEngineBlueprintLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ChaosSolverEngineBlueprintLibrary
        fun Find(Outer: UObject, ResourceName: String): ChaosSolverEngineBlueprintLibrary
        fun GetDefaultObject(): ChaosSolverEngineBlueprintLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ChaosSolverEngineBlueprintLibrary
        fun ConvertPhysicsCollisionToHitResult(PhysicsCollision: ChaosPhysicsCollisionInfo): HitResult
        fun C(Other: UObject): ChaosSolverEngineBlueprintLibrary
        fun C(Other: Any): ChaosSolverEngineBlueprintLibrary
    }
}

external open class ChaosSolver : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ChaosSolver
        fun Find(Outer: UObject, ResourceName: String): ChaosSolver
        fun GetDefaultObject(): ChaosSolver
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ChaosSolver
        fun C(Other: UObject): ChaosSolver
        fun C(Other: Any): ChaosSolver
    }
}

external object EClusterConnectionTypeEnum {
    var Chaos_PointImplicit: String /* "Chaos_PointImplicit" */
    var Chaos_DelaunayTriangulation: String /* "Chaos_DelaunayTriangulation" */
    var Chaos_MinimalSpanningSubsetDelaunayTriangulation: String /* "Chaos_MinimalSpanningSubsetDelaunayTriangulation" */
    var Chaos_PointImplicitAugmentedWithMinimalDelaunay: String /* "Chaos_PointImplicitAugmentedWithMinimalDelaunay" */
    var Chaos_None: String /* "Chaos_None" */
    var Chaos_EClsuterCreationParameters_Max: String /* "Chaos_EClsuterCreationParameters_Max" */
    var Chaos_MAX: String /* "Chaos_MAX" */
}

external open class SolverCollisionFilterSettings {
    open var FilterEnabled: Boolean
    open var MinMass: Number
    open var MinSpeed: Number
    open var MinImpulse: Number
    open fun clone(): SolverCollisionFilterSettings

    companion object {
        fun C(Other: UObject): SolverCollisionFilterSettings
        fun C(Other: Any): SolverCollisionFilterSettings
    }
}

external open class SolverBreakingFilterSettings {
    open var FilterEnabled: Boolean
    open var MinMass: Number
    open var MinSpeed: Number
    open var MinVolume: Number
    open fun clone(): SolverBreakingFilterSettings

    companion object {
        fun C(Other: UObject): SolverBreakingFilterSettings
        fun C(Other: Any): SolverBreakingFilterSettings
    }
}

external open class SolverTrailingFilterSettings {
    open var FilterEnabled: Boolean
    open var MinMass: Number
    open var MinSpeed: Number
    open var MinVolume: Number
    open fun clone(): SolverTrailingFilterSettings

    companion object {
        fun C(Other: UObject): SolverTrailingFilterSettings
        fun C(Other: Any): SolverTrailingFilterSettings
    }
}

external open class ChaosDebugSubstepControl {
    open var bPause: Boolean
    open var bSubstep: Boolean
    open var bStep: Boolean
    open fun clone(): ChaosDebugSubstepControl

    companion object {
        fun C(Other: UObject): ChaosDebugSubstepControl
        fun C(Other: Any): ChaosDebugSubstepControl
    }
}

external open class ChaosSolverActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var TimeStepMultiplier: Number
    open var CollisionIterations: Number
    open var PushOutIterations: Number
    open var PushOutPairIterations: Number
    open var ClusterConnectionFactor: Number
    open var ClusterUnionConnectionType: String /* "Chaos_PointImplicit" | "Chaos_DelaunayTriangulation" | "Chaos_MinimalSpanningSubsetDelaunayTriangulation" | "Chaos_PointImplicitAugmentedWithMinimalDelaunay" | "Chaos_None" | "Chaos_EClsuterCreationParameters_Max" | "Chaos_MAX" */
    open var DoGenerateCollisionData: Boolean
    open var CollisionFilterSettings: SolverCollisionFilterSettings
    open var DoGenerateBreakingData: Boolean
    open var BreakingFilterSettings: SolverBreakingFilterSettings
    open var DoGenerateTrailingData: Boolean
    open var TrailingFilterSettings: SolverTrailingFilterSettings
    open var bHasFloor: Boolean
    open var FloorHeight: Number
    open var MassScale: Number
    open var ChaosDebugSubstepControl: ChaosDebugSubstepControl
    open var SpriteComponent: BillboardComponent
    open var GameplayEventDispatcherComponent: ChaosGameplayEventDispatcher
    open fun SetSolverActive(bActive: Boolean)
    open fun SetAsCurrentWorldSolver()

    companion object {
        fun GetDefaultObject(): ChaosSolverActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ChaosSolverActor
        fun C(Other: UObject): ChaosSolverActor
        fun C(Other: Any): ChaosSolverActor
    }
}

external open class ChaosSolverSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var DefaultChaosSolverActorClass: SoftClassPath

    companion object {
        fun Load(ResourceName: String): ChaosSolverSettings
        fun Find(Outer: UObject, ResourceName: String): ChaosSolverSettings
        fun GetDefaultObject(): ChaosSolverSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ChaosSolverSettings
        fun C(Other: UObject): ChaosSolverSettings
        fun C(Other: Any): ChaosSolverSettings
    }
}

external open class FieldSystem : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): FieldSystem
        fun Find(Outer: UObject, ResourceName: String): FieldSystem
        fun GetDefaultObject(): FieldSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FieldSystem
        fun C(Other: UObject): FieldSystem
        fun C(Other: Any): FieldSystem
    }
}

external object EFieldPhysicsType {
    var Field_DynamicState: String /* "Field_DynamicState" */
    var Field_LinearForce: String /* "Field_LinearForce" */
    var Field_ExternalClusterStrain: String /* "Field_ExternalClusterStrain" */
    var Field_Kill: String /* "Field_Kill" */
    var Field_LinearVelocity: String /* "Field_LinearVelocity" */
    var Field_AngularVelociy: String /* "Field_AngularVelociy" */
    var Field_AngularTorque: String /* "Field_AngularTorque" */
    var Field_InternalClusterStrain: String /* "Field_InternalClusterStrain" */
    var Field_DisableThreshold: String /* "Field_DisableThreshold" */
    var Field_SleepingThreshold: String /* "Field_SleepingThreshold" */
    var Field_PositionStatic: String /* "Field_PositionStatic" */
    var Field_PositionAnimated: String /* "Field_PositionAnimated" */
    var Field_PositionTarget: String /* "Field_PositionTarget" */
    var Field_DynamicConstraint: String /* "Field_DynamicConstraint" */
    var Field_CollisionGroup: String /* "Field_CollisionGroup" */
    var Field_ActivateDisabled: String /* "Field_ActivateDisabled" */
    var Field_PhysicsType_Max: String /* "Field_PhysicsType_Max" */
}

external open class FieldSystemMetaData : ActorComponent {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): FieldSystemMetaData
        fun Find(Outer: UObject, ResourceName: String): FieldSystemMetaData
        fun GetDefaultObject(): FieldSystemMetaData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FieldSystemMetaData
        fun C(Other: UObject): FieldSystemMetaData
        fun C(Other: Any): FieldSystemMetaData
    }
}

external open class FieldNodeBase : ActorComponent {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): FieldNodeBase
        fun Find(Outer: UObject, ResourceName: String): FieldNodeBase
        fun GetDefaultObject(): FieldNodeBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FieldNodeBase
        fun C(Other: UObject): FieldNodeBase
        fun C(Other: Any): FieldNodeBase
    }
}

external open class FieldSystemComponent : PrimitiveComponent {
    constructor()
    constructor(Outer: UObject)
    open var FieldSystem: FieldSystem
    open var SupportedSolvers: Array<ChaosSolverActor>
    open fun ResetFieldSystem()
    open fun ApplyUniformVectorFalloffForce(Enabled: Boolean, Position: Vector, Direction: Vector, Radius: Number, Magnitude: Number)
    open fun ApplyStrainField(Enabled: Boolean, Position: Vector, Radius: Number, Magnitude: Number, Iterations: Number)
    open fun ApplyStayDynamicField(Enabled: Boolean, Position: Vector, Radius: Number)
    open fun ApplyRadialVectorFalloffForce(Enabled: Boolean, Position: Vector, Radius: Number, Magnitude: Number)
    open fun ApplyRadialForce(Enabled: Boolean, Position: Vector, Magnitude: Number)
    open fun ApplyPhysicsField(Enabled: Boolean, Target: String /* "Field_DynamicState" | "Field_LinearForce" | "Field_ExternalClusterStrain" | "Field_Kill" | "Field_LinearVelocity" | "Field_AngularVelociy" | "Field_AngularTorque" | "Field_InternalClusterStrain" | "Field_DisableThreshold" | "Field_SleepingThreshold" | "Field_PositionStatic" | "Field_PositionAnimated" | "Field_PositionTarget" | "Field_DynamicConstraint" | "Field_CollisionGroup" | "Field_ActivateDisabled" | "Field_PhysicsType_Max" */, MetaData: FieldSystemMetaData, Field: FieldNodeBase)
    open fun ApplyLinearForce(Enabled: Boolean, Direction: Vector, Magnitude: Number)
    open fun AddFieldCommand(Enabled: Boolean, Target: String /* "Field_DynamicState" | "Field_LinearForce" | "Field_ExternalClusterStrain" | "Field_Kill" | "Field_LinearVelocity" | "Field_AngularVelociy" | "Field_AngularTorque" | "Field_InternalClusterStrain" | "Field_DisableThreshold" | "Field_SleepingThreshold" | "Field_PositionStatic" | "Field_PositionAnimated" | "Field_PositionTarget" | "Field_DynamicConstraint" | "Field_CollisionGroup" | "Field_ActivateDisabled" | "Field_PhysicsType_Max" */, MetaData: FieldSystemMetaData, Field: FieldNodeBase)

    companion object {
        fun Load(ResourceName: String): FieldSystemComponent
        fun Find(Outer: UObject, ResourceName: String): FieldSystemComponent
        fun GetDefaultObject(): FieldSystemComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FieldSystemComponent
        fun C(Other: UObject): FieldSystemComponent
        fun C(Other: Any): FieldSystemComponent
    }
}

external open class FieldSystemActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var FieldSystemComponent: FieldSystemComponent

    companion object {
        fun GetDefaultObject(): FieldSystemActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FieldSystemActor
        fun C(Other: UObject): FieldSystemActor
        fun C(Other: Any): FieldSystemActor
    }
}

external open class FieldSystemMetaDataIteration : FieldSystemMetaData {
    constructor()
    constructor(Outer: UObject)
    open var Iterations: Number
    open fun SetMetaDataIteration(Iterations: Number): FieldSystemMetaDataIteration

    companion object {
        fun Load(ResourceName: String): FieldSystemMetaDataIteration
        fun Find(Outer: UObject, ResourceName: String): FieldSystemMetaDataIteration
        fun GetDefaultObject(): FieldSystemMetaDataIteration
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FieldSystemMetaDataIteration
        fun C(Other: UObject): FieldSystemMetaDataIteration
        fun C(Other: Any): FieldSystemMetaDataIteration
    }
}

external object EFieldResolutionType {
    var Field_Resolution_Minimal: String /* "Field_Resolution_Minimal" */
    var Field_Resolution_DisabledParents: String /* "Field_Resolution_DisabledParents" */
    var Field_Resolution_Maximum: String /* "Field_Resolution_Maximum" */
    var Field_Resolution_Max: String /* "Field_Resolution_Max" */
}

external open class FieldSystemMetaDataProcessingResolution : FieldSystemMetaData {
    constructor()
    constructor(Outer: UObject)
    open var ResolutionType: String /* "Field_Resolution_Minimal" | "Field_Resolution_DisabledParents" | "Field_Resolution_Maximum" | "Field_Resolution_Max" */
    open fun SetMetaDataaProcessingResolutionType(ResolutionType: String /* "Field_Resolution_Minimal" | "Field_Resolution_DisabledParents" | "Field_Resolution_Maximum" | "Field_Resolution_Max" */): FieldSystemMetaDataProcessingResolution

    companion object {
        fun Load(ResourceName: String): FieldSystemMetaDataProcessingResolution
        fun Find(Outer: UObject, ResourceName: String): FieldSystemMetaDataProcessingResolution
        fun GetDefaultObject(): FieldSystemMetaDataProcessingResolution
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FieldSystemMetaDataProcessingResolution
        fun C(Other: UObject): FieldSystemMetaDataProcessingResolution
        fun C(Other: Any): FieldSystemMetaDataProcessingResolution
    }
}

external open class FieldNodeInt : FieldNodeBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): FieldNodeInt
        fun Find(Outer: UObject, ResourceName: String): FieldNodeInt
        fun GetDefaultObject(): FieldNodeInt
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FieldNodeInt
        fun C(Other: UObject): FieldNodeInt
        fun C(Other: Any): FieldNodeInt
    }
}

external open class FieldNodeFloat : FieldNodeBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): FieldNodeFloat
        fun Find(Outer: UObject, ResourceName: String): FieldNodeFloat
        fun GetDefaultObject(): FieldNodeFloat
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FieldNodeFloat
        fun C(Other: UObject): FieldNodeFloat
        fun C(Other: Any): FieldNodeFloat
    }
}

external open class FieldNodeVector : FieldNodeBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): FieldNodeVector
        fun Find(Outer: UObject, ResourceName: String): FieldNodeVector
        fun GetDefaultObject(): FieldNodeVector
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FieldNodeVector
        fun C(Other: UObject): FieldNodeVector
        fun C(Other: Any): FieldNodeVector
    }
}

external open class UniformInteger : FieldNodeInt {
    constructor()
    constructor(Outer: UObject)
    open var Magnitude: Number
    open fun SetUniformInteger(Magnitude: Number): UniformInteger

    companion object {
        fun Load(ResourceName: String): UniformInteger
        fun Find(Outer: UObject, ResourceName: String): UniformInteger
        fun GetDefaultObject(): UniformInteger
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UniformInteger
        fun C(Other: UObject): UniformInteger
        fun C(Other: Any): UniformInteger
    }
}

external object ESetMaskConditionType {
    var Field_Set_Always: String /* "Field_Set_Always" */
    var Field_Set_IFF_NOT_Interior: String /* "Field_Set_IFF_NOT_Interior" */
    var Field_Set_IFF_NOT_Exterior: String /* "Field_Set_IFF_NOT_Exterior" */
    var Field_MaskCondition_Max: String /* "Field_MaskCondition_Max" */
}

external open class RadialIntMask : FieldNodeInt {
    constructor()
    constructor(Outer: UObject)
    open var Radius: Number
    open var Position: Vector
    open var InteriorValue: Number
    open var ExteriorValue: Number
    open var SetMaskCondition: String /* "Field_Set_Always" | "Field_Set_IFF_NOT_Interior" | "Field_Set_IFF_NOT_Exterior" | "Field_MaskCondition_Max" */
    open fun SetRadialIntMask(Radius: Number, Position: Vector, InteriorValue: Number, ExteriorValue: Number, SetMaskConditionIn: String /* "Field_Set_Always" | "Field_Set_IFF_NOT_Interior" | "Field_Set_IFF_NOT_Exterior" | "Field_MaskCondition_Max" */): RadialIntMask

    companion object {
        fun Load(ResourceName: String): RadialIntMask
        fun Find(Outer: UObject, ResourceName: String): RadialIntMask
        fun GetDefaultObject(): RadialIntMask
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RadialIntMask
        fun C(Other: UObject): RadialIntMask
        fun C(Other: Any): RadialIntMask
    }
}

external open class UniformScalar : FieldNodeFloat {
    constructor()
    constructor(Outer: UObject)
    open var Magnitude: Number
    open fun SetUniformScalar(Magnitude: Number): UniformScalar

    companion object {
        fun Load(ResourceName: String): UniformScalar
        fun Find(Outer: UObject, ResourceName: String): UniformScalar
        fun GetDefaultObject(): UniformScalar
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UniformScalar
        fun C(Other: UObject): UniformScalar
        fun C(Other: Any): UniformScalar
    }
}

external object EFieldFalloffType {
    var Field_FallOff_None: String /* "Field_FallOff_None" */
    var Field_Falloff_Linear: String /* "Field_Falloff_Linear" */
    var Field_Falloff_Inverse: String /* "Field_Falloff_Inverse" */
    var Field_Falloff_Squared: String /* "Field_Falloff_Squared" */
    var Field_Falloff_Logarithmic: String /* "Field_Falloff_Logarithmic" */
    var Field_Falloff_Max: String /* "Field_Falloff_Max" */
}

external open class RadialFalloff : FieldNodeFloat {
    constructor()
    constructor(Outer: UObject)
    open var Magnitude: Number
    open var MinRange: Number
    open var MaxRange: Number
    open var Default: Number
    open var Radius: Number
    open var Position: Vector
    open var Falloff: String /* "Field_FallOff_None" | "Field_Falloff_Linear" | "Field_Falloff_Inverse" | "Field_Falloff_Squared" | "Field_Falloff_Logarithmic" | "Field_Falloff_Max" */
    open fun SetRadialFalloff(Magnitude: Number, MinRange: Number, MaxRange: Number, Default: Number, Radius: Number, Position: Vector, Falloff: String /* "Field_FallOff_None" | "Field_Falloff_Linear" | "Field_Falloff_Inverse" | "Field_Falloff_Squared" | "Field_Falloff_Logarithmic" | "Field_Falloff_Max" */): RadialFalloff

    companion object {
        fun Load(ResourceName: String): RadialFalloff
        fun Find(Outer: UObject, ResourceName: String): RadialFalloff
        fun GetDefaultObject(): RadialFalloff
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RadialFalloff
        fun C(Other: UObject): RadialFalloff
        fun C(Other: Any): RadialFalloff
    }
}

external open class PlaneFalloff : FieldNodeFloat {
    constructor()
    constructor(Outer: UObject)
    open var Magnitude: Number
    open var MinRange: Number
    open var MaxRange: Number
    open var Default: Number
    open var Distance: Number
    open var Position: Vector
    open var Normal: Vector
    open var Falloff: String /* "Field_FallOff_None" | "Field_Falloff_Linear" | "Field_Falloff_Inverse" | "Field_Falloff_Squared" | "Field_Falloff_Logarithmic" | "Field_Falloff_Max" */
    open fun SetPlaneFalloff(Magnitude: Number, MinRange: Number, MaxRange: Number, Default: Number, Distance: Number, Position: Vector, Normal: Vector, Falloff: String /* "Field_FallOff_None" | "Field_Falloff_Linear" | "Field_Falloff_Inverse" | "Field_Falloff_Squared" | "Field_Falloff_Logarithmic" | "Field_Falloff_Max" */): PlaneFalloff

    companion object {
        fun Load(ResourceName: String): PlaneFalloff
        fun Find(Outer: UObject, ResourceName: String): PlaneFalloff
        fun GetDefaultObject(): PlaneFalloff
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PlaneFalloff
        fun C(Other: UObject): PlaneFalloff
        fun C(Other: Any): PlaneFalloff
    }
}

external open class BoxFalloff : FieldNodeFloat {
    constructor()
    constructor(Outer: UObject)
    open var Magnitude: Number
    open var MinRange: Number
    open var MaxRange: Number
    open var Default: Number
    open var Transform: Transform
    open var Falloff: String /* "Field_FallOff_None" | "Field_Falloff_Linear" | "Field_Falloff_Inverse" | "Field_Falloff_Squared" | "Field_Falloff_Logarithmic" | "Field_Falloff_Max" */
    open fun SetBoxFalloff(Magnitude: Number, MinRange: Number, MaxRange: Number, Default: Number, Transform: Transform, Falloff: String /* "Field_FallOff_None" | "Field_Falloff_Linear" | "Field_Falloff_Inverse" | "Field_Falloff_Squared" | "Field_Falloff_Logarithmic" | "Field_Falloff_Max" */): BoxFalloff

    companion object {
        fun Load(ResourceName: String): BoxFalloff
        fun Find(Outer: UObject, ResourceName: String): BoxFalloff
        fun GetDefaultObject(): BoxFalloff
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BoxFalloff
        fun C(Other: UObject): BoxFalloff
        fun C(Other: Any): BoxFalloff
    }
}

external open class NoiseField : FieldNodeFloat {
    constructor()
    constructor(Outer: UObject)
    open var MinRange: Number
    open var MaxRange: Number
    open var Transform: Transform
    open fun SetNoiseField(MinRange: Number, MaxRange: Number, Transform: Transform): NoiseField

    companion object {
        fun Load(ResourceName: String): NoiseField
        fun Find(Outer: UObject, ResourceName: String): NoiseField
        fun GetDefaultObject(): NoiseField
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NoiseField
        fun C(Other: UObject): NoiseField
        fun C(Other: Any): NoiseField
    }
}

external open class UniformVector : FieldNodeVector {
    constructor()
    constructor(Outer: UObject)
    open var Magnitude: Number
    open var Direction: Vector
    open fun SetUniformVector(Magnitude: Number, Direction: Vector): UniformVector

    companion object {
        fun Load(ResourceName: String): UniformVector
        fun Find(Outer: UObject, ResourceName: String): UniformVector
        fun GetDefaultObject(): UniformVector
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UniformVector
        fun C(Other: UObject): UniformVector
        fun C(Other: Any): UniformVector
    }
}

external open class RadialVector : FieldNodeVector {
    constructor()
    constructor(Outer: UObject)
    open var Magnitude: Number
    open var Position: Vector
    open fun SetRadialVector(Magnitude: Number, Position: Vector): RadialVector

    companion object {
        fun Load(ResourceName: String): RadialVector
        fun Find(Outer: UObject, ResourceName: String): RadialVector
        fun GetDefaultObject(): RadialVector
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RadialVector
        fun C(Other: UObject): RadialVector
        fun C(Other: Any): RadialVector
    }
}

external open class RandomVector : FieldNodeVector {
    constructor()
    constructor(Outer: UObject)
    open var Magnitude: Number
    open fun SetRandomVector(Magnitude: Number): RandomVector

    companion object {
        fun Load(ResourceName: String): RandomVector
        fun Find(Outer: UObject, ResourceName: String): RandomVector
        fun GetDefaultObject(): RandomVector
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RandomVector
        fun C(Other: UObject): RandomVector
        fun C(Other: Any): RandomVector
    }
}

external object EFieldOperationType {
    var Field_Multiply: String /* "Field_Multiply" */
    var Field_Divide: String /* "Field_Divide" */
    var Field_Add: String /* "Field_Add" */
    var Field_Substract: String /* "Field_Substract" */
    var Field_Operation_Max: String /* "Field_Operation_Max" */
}

external open class OperatorField : FieldNodeBase {
    constructor()
    constructor(Outer: UObject)
    open var Magnitude: Number
    open var RightField: FieldNodeBase
    open var LeftField: FieldNodeBase
    open var Operation: String /* "Field_Multiply" | "Field_Divide" | "Field_Add" | "Field_Substract" | "Field_Operation_Max" */
    open fun SetOperatorField(Magnitude: Number, RightField: FieldNodeBase, LeftField: FieldNodeBase, Operation: String /* "Field_Multiply" | "Field_Divide" | "Field_Add" | "Field_Substract" | "Field_Operation_Max" */): OperatorField

    companion object {
        fun Load(ResourceName: String): OperatorField
        fun Find(Outer: UObject, ResourceName: String): OperatorField
        fun GetDefaultObject(): OperatorField
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): OperatorField
        fun C(Other: UObject): OperatorField
        fun C(Other: Any): OperatorField
    }
}

external open class ToIntegerField : FieldNodeInt {
    constructor()
    constructor(Outer: UObject)
    open var FloatField: FieldNodeFloat
    open fun SetToIntegerField(FloatField: FieldNodeFloat): ToIntegerField

    companion object {
        fun Load(ResourceName: String): ToIntegerField
        fun Find(Outer: UObject, ResourceName: String): ToIntegerField
        fun GetDefaultObject(): ToIntegerField
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ToIntegerField
        fun C(Other: UObject): ToIntegerField
        fun C(Other: Any): ToIntegerField
    }
}

external open class ToFloatField : FieldNodeFloat {
    constructor()
    constructor(Outer: UObject)
    open var IntField: FieldNodeInt
    open fun SetToFloatField(IntegerField: FieldNodeInt): ToFloatField

    companion object {
        fun Load(ResourceName: String): ToFloatField
        fun Find(Outer: UObject, ResourceName: String): ToFloatField
        fun GetDefaultObject(): ToFloatField
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ToFloatField
        fun C(Other: UObject): ToFloatField
        fun C(Other: Any): ToFloatField
    }
}

external object EFieldCullingOperationType {
    var Field_Culling_Inside: String /* "Field_Culling_Inside" */
    var Field_Culling_Outside: String /* "Field_Culling_Outside" */
    var Field_Culling_Operation_Max: String /* "Field_Culling_Operation_Max" */
    var Field_Culling_MAX: String /* "Field_Culling_MAX" */
}

external open class CullingField : FieldNodeBase {
    constructor()
    constructor(Outer: UObject)
    open var Culling: FieldNodeBase
    open var Field: FieldNodeBase
    open var Operation: String /* "Field_Culling_Inside" | "Field_Culling_Outside" | "Field_Culling_Operation_Max" | "Field_Culling_MAX" */
    open fun SetCullingField(Culling: FieldNodeBase, Field: FieldNodeBase, Operation: String /* "Field_Culling_Inside" | "Field_Culling_Outside" | "Field_Culling_Operation_Max" | "Field_Culling_MAX" */): CullingField

    companion object {
        fun Load(ResourceName: String): CullingField
        fun Find(Outer: UObject, ResourceName: String): CullingField
        fun GetDefaultObject(): CullingField
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CullingField
        fun C(Other: UObject): CullingField
        fun C(Other: Any): CullingField
    }
}

external open class ReturnResultsTerminal : FieldNodeBase {
    constructor()
    constructor(Outer: UObject)
    open fun SetReturnResultsTerminal(): ReturnResultsTerminal

    companion object {
        fun Load(ResourceName: String): ReturnResultsTerminal
        fun Find(Outer: UObject, ResourceName: String): ReturnResultsTerminal
        fun GetDefaultObject(): ReturnResultsTerminal
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ReturnResultsTerminal
        fun C(Other: UObject): ReturnResultsTerminal
        fun C(Other: Any): ReturnResultsTerminal
    }
}

external object EChaosCollisionSortMethod {
    var SortNone: String /* "SortNone" */
    var SortByHighestMass: String /* "SortByHighestMass" */
    var SortByHighestSpeed: String /* "SortByHighestSpeed" */
    var SortByHighestImpulse: String /* "SortByHighestImpulse" */
    var SortByNearestFirst: String /* "SortByNearestFirst" */
    var Count: String /* "Count" */
    var EChaosCollisionSortMethod_MAX: String /* "EChaosCollisionSortMethod_MAX" */
}

external open class ChaosCollisionEventRequestSettings {
    open var MaxNumberResults: Number
    open var MinMass: Number
    open var MinSpeed: Number
    open var MinImpulse: Number
    open var MaxDistance: Number
    open var SortMethod: String /* "SortNone" | "SortByHighestMass" | "SortByHighestSpeed" | "SortByHighestImpulse" | "SortByNearestFirst" | "Count" | "EChaosCollisionSortMethod_MAX" */
    open fun clone(): ChaosCollisionEventRequestSettings

    companion object {
        fun C(Other: UObject): ChaosCollisionEventRequestSettings
        fun C(Other: Any): ChaosCollisionEventRequestSettings
    }
}

external object EChaosBreakingSortMethod {
    var SortNone: String /* "SortNone" */
    var SortByHighestMass: String /* "SortByHighestMass" */
    var SortByHighestSpeed: String /* "SortByHighestSpeed" */
    var SortByNearestFirst: String /* "SortByNearestFirst" */
    var Count: String /* "Count" */
    var EChaosBreakingSortMethod_MAX: String /* "EChaosBreakingSortMethod_MAX" */
}

external open class ChaosBreakingEventRequestSettings {
    open var MaxNumberOfResults: Number
    open var MinRadius: Number
    open var MinSpeed: Number
    open var MinMass: Number
    open var MaxDistance: Number
    open var SortMethod: String /* "SortNone" | "SortByHighestMass" | "SortByHighestSpeed" | "SortByNearestFirst" | "Count" | "EChaosBreakingSortMethod_MAX" */
    open fun clone(): ChaosBreakingEventRequestSettings

    companion object {
        fun C(Other: UObject): ChaosBreakingEventRequestSettings
        fun C(Other: Any): ChaosBreakingEventRequestSettings
    }
}

external object EChaosTrailingSortMethod {
    var SortNone: String /* "SortNone" */
    var SortByHighestMass: String /* "SortByHighestMass" */
    var SortByHighestSpeed: String /* "SortByHighestSpeed" */
    var SortByNearestFirst: String /* "SortByNearestFirst" */
    var Count: String /* "Count" */
    var EChaosTrailingSortMethod_MAX: String /* "EChaosTrailingSortMethod_MAX" */
}

external open class ChaosTrailingEventRequestSettings {
    open var MaxNumberOfResults: Number
    open var MinMass: Number
    open var MinSpeed: Number
    open var MinAngularSpeed: Number
    open var MaxDistance: Number
    open var SortMethod: String /* "SortNone" | "SortByHighestMass" | "SortByHighestSpeed" | "SortByNearestFirst" | "Count" | "EChaosTrailingSortMethod_MAX" */
    open fun clone(): ChaosTrailingEventRequestSettings

    companion object {
        fun C(Other: UObject): ChaosTrailingEventRequestSettings
        fun C(Other: Any): ChaosTrailingEventRequestSettings
    }
}

external open class ChaosCollisionEventData {
    open var Location: Vector
    open var Normal: Vector
    open var Velocity1: Vector
    open var Velocity2: Vector
    open var Mass1: Number
    open var Mass2: Number
    open var Impulse: Vector
    open var ParticleIndex: Number
    open var LevelsetIndex: Number
    open fun clone(): ChaosCollisionEventData

    companion object {
        fun C(Other: UObject): ChaosCollisionEventData
        fun C(Other: Any): ChaosCollisionEventData
    }
}

external open class ChaosBreakingEventData {
    open var Location: Vector
    open var Velocity: Vector
    open var Mass: Number
    open var ParticleIndex: Number
    open fun clone(): ChaosBreakingEventData

    companion object {
        fun C(Other: UObject): ChaosBreakingEventData
        fun C(Other: Any): ChaosBreakingEventData
    }
}

external open class ChaosTrailingEventData {
    open var Location: Vector
    open var Velocity: Vector
    open var AngularVelocity: Vector
    open var Mass: Number
    open var ParticleIndex: Number
    open fun clone(): ChaosTrailingEventData

    companion object {
        fun C(Other: UObject): ChaosTrailingEventData
        fun C(Other: Any): ChaosTrailingEventData
    }
}

external object EImplicitTypeEnum {
    var Chaos_Implicit_Box: String /* "Chaos_Implicit_Box" */
    var Chaos_Implicit_Sphere: String /* "Chaos_Implicit_Sphere" */
    var Chaos_Implicit_Capsule: String /* "Chaos_Implicit_Capsule" */
    var Chaos_Implicit_LevelSet: String /* "Chaos_Implicit_LevelSet" */
    var Chaos_Implicit_None: String /* "Chaos_Implicit_None" */
    var Chaos_Max: String /* "Chaos_Max" */
}

external open class GeometryCollectionSizeSpecificData {
    open var MaxSize: Number
    open var CollisionType: String /* "Chaos_Volumetric" | "Chaos_Surface_Volumetric" | "Chaos_Max" */
    open var ImplicitType: String /* "Chaos_Implicit_Box" | "Chaos_Implicit_Sphere" | "Chaos_Implicit_Capsule" | "Chaos_Implicit_LevelSet" | "Chaos_Implicit_None" | "Chaos_Max" */
    open var MinLevelSetResolution: Number
    open var MaxLevelSetResolution: Number
    open var MinClusterLevelSetResolution: Number
    open var MaxClusterLevelSetResolution: Number
    open var CollisionObjectReductionPercentage: Number
    open var CollisionParticlesFraction: Number
    open var MaximumCollisionParticles: Number
    open fun clone(): GeometryCollectionSizeSpecificData

    companion object {
        fun C(Other: UObject): GeometryCollectionSizeSpecificData
        fun C(Other: Any): GeometryCollectionSizeSpecificData
    }
}

external open class GeometryCollection : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Materials: Array<MaterialInterface>
    open var CollisionType: String /* "Chaos_Volumetric" | "Chaos_Surface_Volumetric" | "Chaos_Max" */
    open var ImplicitType: String /* "Chaos_Implicit_Box" | "Chaos_Implicit_Sphere" | "Chaos_Implicit_Capsule" | "Chaos_Implicit_LevelSet" | "Chaos_Implicit_None" | "Chaos_Max" */
    open var MinLevelSetResolution: Number
    open var MaxLevelSetResolution: Number
    open var MinClusterLevelSetResolution: Number
    open var MaxClusterLevelSetResolution: Number
    open var CollisionObjectReductionPercentage: Number
    open var bMassAsDensity: Boolean
    open var Mass: Number
    open var MinimumMassClamp: Number
    open var CollisionParticlesFraction: Number
    open var MaximumCollisionParticles: Number
    open var SizeSpecificData: Array<GeometryCollectionSizeSpecificData>
    open var EnableRemovePiecesOnFracture: Boolean
    open var RemoveOnFractureMaterials: Array<MaterialInterface>
    open var ThumbnailInfo: ThumbnailInfo
    open var PersistentGuid: Guid
    open var StateGuid: Guid
    open var BoneSelectedMaterialIndex: Number

    companion object {
        fun Load(ResourceName: String): GeometryCollection
        fun Find(Outer: UObject, ResourceName: String): GeometryCollection
        fun GetDefaultObject(): GeometryCollection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GeometryCollection
        fun C(Other: UObject): GeometryCollection
        fun C(Other: Any): GeometryCollection
    }
}

external object EGeometryCollectionCacheType {
    var None: String /* "None" */
    var Record: String /* "Record" */
    var Play: String /* "Play" */
    var RecordAndPlay: String /* "RecordAndPlay" */
    var EGeometryCollectionCacheType_MAX: String /* "EGeometryCollectionCacheType_MAX" */
}

external open class SolverCollisionData {
    open var Location: Vector
    open var AccumulatedImpulse: Vector
    open var Normal: Vector
    open var Velocity1: Vector
    open var Velocity2: Vector
    open var AngularVelocity1: Vector
    open var AngularVelocity2: Vector
    open var Mass1: Number
    open var Mass2: Number
    open var ParticleIndex: Number
    open var LevelsetIndex: Number
    open var ParticleIndexMesh: Number
    open var LevelsetIndexMesh: Number
    open fun clone(): SolverCollisionData

    companion object {
        fun C(Other: UObject): SolverCollisionData
        fun C(Other: Any): SolverCollisionData
    }
}

external open class SolverBreakingData {
    open var Location: Vector
    open var Velocity: Vector
    open var AngularVelocity: Vector
    open var Mass: Number
    open var ParticleIndex: Number
    open var ParticleIndexMesh: Number
    open fun clone(): SolverBreakingData

    companion object {
        fun C(Other: UObject): SolverBreakingData
        fun C(Other: Any): SolverBreakingData
    }
}

external open class RecordedFrame {
    open var Transforms: Array<Transform>
    open var TransformIndices: Array<Number>
    open var PreviousTransformIndices: Array<Number>
    open var DisabledFlags: Array<Boolean>
    open var Collisions: Array<SolverCollisionData>
    open var Breakings: Array<SolverBreakingData>
    open var Trailings: Any
    open var Timestamp: Number
    open fun clone(): RecordedFrame

    companion object {
        fun C(Other: UObject): RecordedFrame
        fun C(Other: Any): RecordedFrame
    }
}

external open class RecordedTransformTrack {
    open var Records: Array<RecordedFrame>
    open fun clone(): RecordedTransformTrack

    companion object {
        fun C(Other: UObject): RecordedTransformTrack
        fun C(Other: Any): RecordedTransformTrack
    }
}

external open class GeometryCollectionCache : UObject {
    constructor()
    constructor(Outer: UObject)
    open var RecordedData: RecordedTransformTrack
    open var SupportedCollection: GeometryCollection
    open var CompatibleCollectionState: Guid

    companion object {
        fun Load(ResourceName: String): GeometryCollectionCache
        fun Find(Outer: UObject, ResourceName: String): GeometryCollectionCache
        fun GetDefaultObject(): GeometryCollectionCache
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GeometryCollectionCache
        fun C(Other: UObject): GeometryCollectionCache
        fun C(Other: Any): GeometryCollectionCache
    }
}

external open class GeomComponentCacheParameters {
    open var CacheMode: String /* "None" | "Record" | "Play" | "RecordAndPlay" | "EGeometryCollectionCacheType_MAX" */
    open var TargetCache: GeometryCollectionCache
    open var ReverseCacheBeginTime: Number
    open var SaveCollisionData: Boolean
    open var DoGenerateCollisionData: Boolean
    open var CollisionDataSizeMax: Number
    open var DoCollisionDataSpatialHash: Boolean
    open var CollisionDataSpatialHashRadius: Number
    open var MaxCollisionPerCell: Number
    open var SaveBreakingData: Boolean
    open var DoGenerateBreakingData: Boolean
    open var BreakingDataSizeMax: Number
    open var DoBreakingDataSpatialHash: Boolean
    open var BreakingDataSpatialHashRadius: Number
    open var MaxBreakingPerCell: Number
    open var SaveTrailingData: Boolean
    open var DoGenerateTrailingData: Boolean
    open var TrailingDataSizeMax: Number
    open var TrailingMinSpeedThreshold: Number
    open var TrailingMinVolumeThreshold: Number
    open fun clone(): GeomComponentCacheParameters

    companion object {
        fun C(Other: UObject): GeomComponentCacheParameters
        fun C(Other: Any): GeomComponentCacheParameters
    }
}

external open class ChaosBreakEvent {
    open var Component: PrimitiveComponent
    open var Location: Vector
    open var Velocity: Vector
    open var AngularVelocity: Vector
    open var Mass: Number
    open fun clone(): ChaosBreakEvent

    companion object {
        fun C(Other: UObject): ChaosBreakEvent
        fun C(Other: Any): ChaosBreakEvent
    }
}

external object EGeometryCollectionPhysicsTypeEnum {
    var Chaos_AngularVelocity: String /* "Chaos_AngularVelocity" */
    var Chaos_DynamicState: String /* "Chaos_DynamicState" */
    var Chaos_LinearVelocity: String /* "Chaos_LinearVelocity" */
    var Chaos_InitialAngularVelocity: String /* "Chaos_InitialAngularVelocity" */
    var Chaos_InitialLinearVelocity: String /* "Chaos_InitialLinearVelocity" */
    var Chaos_CollisionGroup: String /* "Chaos_CollisionGroup" */
    var Chaos_LinearForce: String /* "Chaos_LinearForce" */
    var Chaos_AngularTorque: String /* "Chaos_AngularTorque" */
    var Chaos_Max: String /* "Chaos_Max" */
}

external open class GeometryCollectionComponent : MeshComponent {
    constructor()
    constructor(Outer: UObject)
    open var ChaosSolverActor: ChaosSolverActor
    open var RestCollection: GeometryCollection
    open var InitializationFields: Array<FieldSystemActor>
    open var Simulating: Boolean
    open var ObjectType: String /* "Chaos_Object_Sleeping" | "Chaos_Object_Kinematic" | "Chaos_Object_Static" | "Chaos_Object_Dynamic" | "Chaos_Object_UserDefined" | "Chaos_Max" */
    open var EnableClustering: Boolean
    open var ClusterGroupIndex: Number
    open var MaxClusterLevel: Number
    open var DamageThreshold: Array<Number>
    open var ClusterConnectionType: String /* "Chaos_PointImplicit" | "Chaos_DelaunayTriangulation" | "Chaos_MinimalSpanningSubsetDelaunayTriangulation" | "Chaos_PointImplicitAugmentedWithMinimalDelaunay" | "Chaos_None" | "Chaos_EClsuterCreationParameters_Max" | "Chaos_MAX" */
    open var CollisionGroup: Number
    open var CollisionSampleFraction: Number
    open var PhysicalMaterial: ChaosPhysicalMaterial
    open var InitialVelocityType: String /* "Chaos_Initial_Velocity_User_Defined" | "Chaos_Initial_Velocity_None" | "Chaos_Max" */
    open var InitialLinearVelocity: Vector
    open var InitialAngularVelocity: Vector
    open var CacheParameters: GeomComponentCacheParameters
    open var NotifyGeometryCollectionPhysicsStateChange: UnrealEngineMulticastDelegate<(FracturedComponent: GeometryCollectionComponent) -> Unit>
    open var NotifyGeometryCollectionPhysicsLoadingStateChange: UnrealEngineMulticastDelegate<(FracturedComponent: GeometryCollectionComponent) -> Unit>
    open var OnChaosBreakEvent: UnrealEngineMulticastDelegate<(BreakEvent: ChaosBreakEvent) -> Unit>
    open var DesiredCacheTime: Number
    open var CachePlayback: Boolean
    open var OnChaosPhysicsCollision: UnrealEngineMulticastDelegate<(CollisionInfo: ChaosPhysicsCollisionInfo) -> Unit>
    open var bNotifyBreaks: Boolean
    open var bNotifyCollisions: Boolean
    open var SelectedBones: Array<Number>
    open var HighlightedBones: Array<Number>
    open var DummyBodySetup: BodySetup
    open var EditorActor: Actor
    open fun SetNotifyBreaks(bNewNotifyBreaks: Boolean)
    open fun ReceivePhysicsCollision(CollisionInfo: ChaosPhysicsCollisionInfo)
    open fun ApplyPhysicsField(Enabled: Boolean, Target: String /* "Chaos_AngularVelocity" | "Chaos_DynamicState" | "Chaos_LinearVelocity" | "Chaos_InitialAngularVelocity" | "Chaos_InitialLinearVelocity" | "Chaos_CollisionGroup" | "Chaos_LinearForce" | "Chaos_AngularTorque" | "Chaos_Max" */, MetaData: FieldSystemMetaData, Field: FieldNodeBase)
    open fun ApplyKinematicField(Radius: Number, Position: Vector)

    companion object {
        fun Load(ResourceName: String): GeometryCollectionComponent
        fun Find(Outer: UObject, ResourceName: String): GeometryCollectionComponent
        fun GetDefaultObject(): GeometryCollectionComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GeometryCollectionComponent
        fun C(Other: UObject): GeometryCollectionComponent
        fun C(Other: Any): GeometryCollectionComponent
    }
}

external open class GeometryCollectionDebugDrawWarningMessage {
    open fun clone(): GeometryCollectionDebugDrawWarningMessage

    companion object {
        fun C(Other: UObject): GeometryCollectionDebugDrawWarningMessage
        fun C(Other: Any): GeometryCollectionDebugDrawWarningMessage
    }
}

external open class GeometryCollectionDebugDrawActorSelectedRigidBody {
    open var ID: Number
    open var Solver: ChaosSolverActor
    open var GeometryCollection: GeometryCollectionActor
    open fun clone(): GeometryCollectionDebugDrawActorSelectedRigidBody

    companion object {
        fun C(Other: UObject): GeometryCollectionDebugDrawActorSelectedRigidBody
        fun C(Other: Any): GeometryCollectionDebugDrawActorSelectedRigidBody
    }
}

external object EGeometryCollectionDebugDrawActorHideGeometry {
    var HideNone: String /* "HideNone" */
    var HideWithCollision: String /* "HideWithCollision" */
    var HideSelected: String /* "HideSelected" */
    var HideWholeCollection: String /* "HideWholeCollection" */
    var HideAll: String /* "HideAll" */
    var EGeometryCollectionDebugDrawActorHideGeometry_MAX: String /* "EGeometryCollectionDebugDrawActorHideGeometry_MAX" */
}

external open class GeometryCollectionDebugDrawActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var WarningMessage: GeometryCollectionDebugDrawWarningMessage
    open var SelectedRigidBody: GeometryCollectionDebugDrawActorSelectedRigidBody
    open var bDebugDrawWholeCollection: Boolean
    open var bDebugDrawHierarchy: Boolean
    open var bDebugDrawClustering: Boolean
    open var HideGeometry: String /* "HideNone" | "HideWithCollision" | "HideSelected" | "HideWholeCollection" | "HideAll" | "EGeometryCollectionDebugDrawActorHideGeometry_MAX" */
    open var bShowRigidBodyId: Boolean
    open var bShowRigidBodyCollision: Boolean
    open var bCollisionAtOrigin: Boolean
    open var bShowRigidBodyTransform: Boolean
    open var bShowRigidBodyInertia: Boolean
    open var bShowRigidBodyVelocity: Boolean
    open var bShowRigidBodyForce: Boolean
    open var bShowRigidBodyInfos: Boolean
    open var bShowTransformIndex: Boolean
    open var bShowTransform: Boolean
    open var bShowParent: Boolean
    open var bShowLevel: Boolean
    open var bShowConnectivityEdges: Boolean
    open var bShowGeometryIndex: Boolean
    open var bShowGeometryTransform: Boolean
    open var bShowBoundingBox: Boolean
    open var bShowFaces: Boolean
    open var bShowFaceIndices: Boolean
    open var bShowFaceNormals: Boolean
    open var bShowSingleFace: Boolean
    open var SingleFaceIndex: Number
    open var bShowVertices: Boolean
    open var bShowVertexIndices: Boolean
    open var bShowVertexNormals: Boolean
    open var bUseActiveVisualization: Boolean
    open var PointThickness: Number
    open var LineThickness: Number
    open var bTextShadow: Boolean
    open var TextScale: Number
    open var NormalScale: Number
    open var AxisScale: Number
    open var ArrowScale: Number
    open var RigidBodyIdColor: Color
    open var RigidBodyTransformScale: Number
    open var RigidBodyCollisionColor: Color
    open var RigidBodyInertiaColor: Color
    open var RigidBodyVelocityColor: Color
    open var RigidBodyForceColor: Color
    open var RigidBodyInfoColor: Color
    open var TransformIndexColor: Color
    open var TransformScale: Number
    open var LevelColor: Color
    open var ParentColor: Color
    open var ConnectivityEdgeThickness: Number
    open var GeometryIndexColor: Color
    open var GeometryTransformScale: Number
    open var BoundingBoxColor: Color
    open var FaceColor: Color
    open var FaceIndexColor: Color
    open var FaceNormalColor: Color
    open var SingleFaceColor: Color
    open var VertexColor: Color
    open var VertexIndexColor: Color
    open var VertexNormalColor: Color
    open var SpriteComponent: BillboardComponent

    companion object {
        fun GetDefaultObject(): GeometryCollectionDebugDrawActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GeometryCollectionDebugDrawActor
        fun C(Other: UObject): GeometryCollectionDebugDrawActor
        fun C(Other: Any): GeometryCollectionDebugDrawActor
    }
}

external open class GeometryCollectionRenderLevelSetActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var TargetVolumeTexture: VolumeTexture
    open var RayMarchMaterial: Material
    open var SurfaceTolerance: Number
    open var Isovalue: Number
    open var Enabled: Boolean
    open var RenderVolumeBoundingBox: Boolean

    companion object {
        fun GetDefaultObject(): GeometryCollectionRenderLevelSetActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GeometryCollectionRenderLevelSetActor
        fun C(Other: UObject): GeometryCollectionRenderLevelSetActor
        fun C(Other: Any): GeometryCollectionRenderLevelSetActor
    }
}

external open class GeometryCollectionDebugDrawComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var GeometryCollectionDebugDrawActor: GeometryCollectionDebugDrawActor
    open var GeometryCollectionRenderLevelSetActor: GeometryCollectionRenderLevelSetActor

    companion object {
        fun Load(ResourceName: String): GeometryCollectionDebugDrawComponent
        fun Find(Outer: UObject, ResourceName: String): GeometryCollectionDebugDrawComponent
        fun GetDefaultObject(): GeometryCollectionDebugDrawComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GeometryCollectionDebugDrawComponent
        fun C(Other: UObject): GeometryCollectionDebugDrawComponent
        fun C(Other: Any): GeometryCollectionDebugDrawComponent
    }
}

external interface `T$152` {
    var OutHit: HitResult
    var `$`: Boolean
}

external open class GeometryCollectionActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var GeometryCollectionComponent: GeometryCollectionComponent
    open var GeometryCollectionDebugDrawComponent: GeometryCollectionDebugDrawComponent
    open fun RaycastSingle(Start: Vector, End: Vector, OutHit: HitResult = definedExternally): `T$152`

    companion object {
        fun GetDefaultObject(): GeometryCollectionActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GeometryCollectionActor
        fun C(Other: UObject): GeometryCollectionActor
        fun C(Other: Any): GeometryCollectionActor
    }
}

external interface `T$153` {
    var TrailingEvents: Array<ChaosTrailingEventData>
}

external interface `T$154` {
    var CollisionEvents: Array<ChaosCollisionEventData>
}

external interface `T$155` {
    var BreakingEvents: Array<ChaosBreakingEventData>
}

external open class ChaosDestructionListener : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var bIsCollisionEventListeningEnabled: Boolean
    open var bIsBreakingEventListeningEnabled: Boolean
    open var bIsTrailingEventListeningEnabled: Boolean
    open var CollisionEventRequestSettings: ChaosCollisionEventRequestSettings
    open var BreakingEventRequestSettings: ChaosBreakingEventRequestSettings
    open var TrailingEventRequestSettings: ChaosTrailingEventRequestSettings
    open var ChaosSolverActors: Any
    open var GeometryCollectionActors: Any
    open var OnCollisionEvents: UnrealEngineMulticastDelegate<(CollisionEvents: Array<ChaosCollisionEventData>) -> Unit>
    open var OnBreakingEvents: UnrealEngineMulticastDelegate<(BreakingEvents: Array<ChaosBreakingEventData>) -> Unit>
    open var OnTrailingEvents: UnrealEngineMulticastDelegate<(TrailingEvents: Array<ChaosTrailingEventData>) -> Unit>
    open fun SortTrailingEvents(TrailingEvents: Array<ChaosTrailingEventData> = definedExternally, SortMethod: String /* "SortNone" | "SortByHighestMass" | "SortByHighestSpeed" | "SortByNearestFirst" | "Count" | "EChaosTrailingSortMethod_MAX" */ = definedExternally): `T$153`
    open fun SortCollisionEvents(CollisionEvents: Array<ChaosCollisionEventData> = definedExternally, SortMethod: String /* "SortNone" | "SortByHighestMass" | "SortByHighestSpeed" | "SortByHighestImpulse" | "SortByNearestFirst" | "Count" | "EChaosCollisionSortMethod_MAX" */ = definedExternally): `T$154`
    open fun SortBreakingEvents(BreakingEvents: Array<ChaosBreakingEventData> = definedExternally, SortMethod: String /* "SortNone" | "SortByHighestMass" | "SortByHighestSpeed" | "SortByNearestFirst" | "Count" | "EChaosBreakingSortMethod_MAX" */ = definedExternally): `T$155`
    open fun SetTrailingEventRequestSettings(InSettings: ChaosTrailingEventRequestSettings)
    open fun SetTrailingEventEnabled(bIsEnabled: Boolean)
    open fun SetCollisionEventRequestSettings(InSettings: ChaosCollisionEventRequestSettings)
    open fun SetCollisionEventEnabled(bIsEnabled: Boolean)
    open fun SetBreakingEventRequestSettings(InSettings: ChaosBreakingEventRequestSettings)
    open fun SetBreakingEventEnabled(bIsEnabled: Boolean)
    open fun RemoveGeometryCollectionActor(GeometryCollectionActor: GeometryCollectionActor)
    open fun RemoveChaosSolverActor(ChaosSolverActor: ChaosSolverActor)
    open fun IsEventListening(): Boolean
    open fun AddGeometryCollectionActor(GeometryCollectionActor: GeometryCollectionActor)
    open fun AddChaosSolverActor(ChaosSolverActor: ChaosSolverActor)

    companion object {
        fun Load(ResourceName: String): ChaosDestructionListener
        fun Find(Outer: UObject, ResourceName: String): ChaosDestructionListener
        fun GetDefaultObject(): ChaosDestructionListener
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ChaosDestructionListener
        fun C(Other: UObject): ChaosDestructionListener
        fun C(Other: Any): ChaosDestructionListener
    }
}

external open class SkeletalMeshSimulationComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var PhysicalMaterial: ChaosPhysicalMaterial
    open var ChaosSolverActor: ChaosSolverActor
    open var OverridePhysicsAsset: PhysicsAsset
    open var bSimulating: Boolean
    open var bNotifyCollisions: Boolean
    open var ObjectType: String /* "Chaos_Object_Sleeping" | "Chaos_Object_Kinematic" | "Chaos_Object_Static" | "Chaos_Object_Dynamic" | "Chaos_Object_UserDefined" | "Chaos_Max" */
    open var Density: Number
    open var MinMass: Number
    open var MaxMass: Number
    open var CollisionType: String /* "Chaos_Volumetric" | "Chaos_Surface_Volumetric" | "Chaos_Max" */
    open var ImplicitShapeParticlesPerUnitArea: Number
    open var ImplicitShapeMinNumParticles: Number
    open var ImplicitShapeMaxNumParticles: Number
    open var MinLevelSetResolution: Number
    open var MaxLevelSetResolution: Number
    open var CollisionGroup: Number
    open var InitialVelocityType: String /* "Chaos_Initial_Velocity_User_Defined" | "Chaos_Initial_Velocity_None" | "Chaos_Max" */
    open var InitialLinearVelocity: Vector
    open var InitialAngularVelocity: Vector
    open var OnChaosPhysicsCollision: UnrealEngineMulticastDelegate<(CollisionInfo: ChaosPhysicsCollisionInfo) -> Unit>
    open fun ReceivePhysicsCollision(CollisionInfo: ChaosPhysicsCollisionInfo)

    companion object {
        fun Load(ResourceName: String): SkeletalMeshSimulationComponent
        fun Find(Outer: UObject, ResourceName: String): SkeletalMeshSimulationComponent
        fun GetDefaultObject(): SkeletalMeshSimulationComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SkeletalMeshSimulationComponent
        fun C(Other: UObject): SkeletalMeshSimulationComponent
        fun C(Other: Any): SkeletalMeshSimulationComponent
    }
}

external open class StaticMeshSimulationComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var Simulating: Boolean
    open var bNotifyCollisions: Boolean
    open var ObjectType: String /* "Chaos_Object_Sleeping" | "Chaos_Object_Kinematic" | "Chaos_Object_Static" | "Chaos_Object_Dynamic" | "Chaos_Object_UserDefined" | "Chaos_Max" */
    open var Mass: Number
    open var CollisionType: String /* "Chaos_Volumetric" | "Chaos_Surface_Volumetric" | "Chaos_Max" */
    open var ImplicitType: String /* "Chaos_Implicit_Box" | "Chaos_Implicit_Sphere" | "Chaos_Implicit_Capsule" | "Chaos_Implicit_LevelSet" | "Chaos_Implicit_None" | "Chaos_Max" */
    open var MinLevelSetResolution: Number
    open var MaxLevelSetResolution: Number
    open var InitialVelocityType: String /* "Chaos_Initial_Velocity_User_Defined" | "Chaos_Initial_Velocity_None" | "Chaos_Max" */
    open var InitialLinearVelocity: Vector
    open var InitialAngularVelocity: Vector
    open var DamageThreshold: Number
    open var PhysicalMaterial: ChaosPhysicalMaterial
    open var ChaosSolverActor: ChaosSolverActor
    open var OnChaosPhysicsCollision: UnrealEngineMulticastDelegate<(CollisionInfo: ChaosPhysicsCollisionInfo) -> Unit>
    open var SimulatedComponents: Array<PrimitiveComponent>
    open fun ReceivePhysicsCollision(CollisionInfo: ChaosPhysicsCollisionInfo)
    open fun ForceRecreatePhysicsState()

    companion object {
        fun Load(ResourceName: String): StaticMeshSimulationComponent
        fun Find(Outer: UObject, ResourceName: String): StaticMeshSimulationComponent
        fun GetDefaultObject(): StaticMeshSimulationComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): StaticMeshSimulationComponent
        fun C(Other: UObject): StaticMeshSimulationComponent
        fun C(Other: Any): StaticMeshSimulationComponent
    }
}

external open class EditableMeshAdapter : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EditableMeshAdapter
        fun Find(Outer: UObject, ResourceName: String): EditableMeshAdapter
        fun GetDefaultObject(): EditableMeshAdapter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditableMeshAdapter
        fun C(Other: UObject): EditableMeshAdapter
        fun C(Other: Any): EditableMeshAdapter
    }
}

external open class EditableGeometryCollectionAdapter : EditableMeshAdapter {
    constructor()
    constructor(Outer: UObject)
    open var GeometryCollection: GeometryCollection
    open var OriginalGeometryCollection: GeometryCollection
    open var GeometryCollectionLODIndex: Number

    companion object {
        fun Load(ResourceName: String): EditableGeometryCollectionAdapter
        fun Find(Outer: UObject, ResourceName: String): EditableGeometryCollectionAdapter
        fun GetDefaultObject(): EditableGeometryCollectionAdapter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditableGeometryCollectionAdapter
        fun C(Other: UObject): EditableGeometryCollectionAdapter
        fun C(Other: Any): EditableGeometryCollectionAdapter
    }
}

external open class ElementID {
    open var IDValue: Number
    open fun clone(): ElementID

    companion object {
        fun C(Other: UObject): ElementID
        fun C(Other: Any): ElementID
    }
}

external open class VertexID : ElementID {
    override fun clone(): VertexID

    companion object {
        fun C(Other: UObject): VertexID
        fun C(Other: Any): VertexID
    }
}

external open class EdgeID : ElementID {
    override fun clone(): EdgeID

    companion object {
        fun C(Other: UObject): EdgeID
        fun C(Other: Any): EdgeID
    }
}

external open class PolygonID : ElementID {
    override fun clone(): PolygonID

    companion object {
        fun C(Other: UObject): PolygonID
        fun C(Other: Any): PolygonID
    }
}

external object ETriangleTessellationMode {
    var ThreeTriangles: String /* "ThreeTriangles" */
    var FourTriangles: String /* "FourTriangles" */
    var ETriangleTessellationMode_MAX: String /* "ETriangleTessellationMode_MAX" */
}

external object EMeshModificationType {
    var FirstInterim: String /* "FirstInterim" */
    var Interim: String /* "Interim" */
    var Final: String /* "Final" */
    var EMeshModificationType_MAX: String /* "EMeshModificationType_MAX" */
}

external object EMeshTopologyChange {
    var NoTopologyChange: String /* "NoTopologyChange" */
    var TopologyChange: String /* "TopologyChange" */
    var EMeshTopologyChange_MAX: String /* "EMeshTopologyChange_MAX" */
}

external open class VertexPair {
    open var VertexID0: VertexID
    open var VertexID1: VertexID
    open fun clone(): VertexPair

    companion object {
        fun C(Other: UObject): VertexPair
        fun C(Other: Any): VertexPair
    }
}

external open class PolygonToSplit {
    open var PolygonID: PolygonID
    open var VertexPairsToSplitAt: Array<VertexPair>
    open fun clone(): PolygonToSplit

    companion object {
        fun C(Other: UObject): PolygonToSplit
        fun C(Other: Any): PolygonToSplit
    }
}

external open class MeshElementAttributeValue {
    open fun clone(): MeshElementAttributeValue

    companion object {
        fun C(Other: UObject): MeshElementAttributeValue
        fun C(Other: Any): MeshElementAttributeValue
    }
}

external open class MeshElementAttributeData {
    open var AttributeName: String
    open var AttributeIndex: Number
    open var AttributeValue: MeshElementAttributeValue
    open fun clone(): MeshElementAttributeData

    companion object {
        fun C(Other: UObject): MeshElementAttributeData
        fun C(Other: Any): MeshElementAttributeData
    }
}

external open class MeshElementAttributeList {
    open var Attributes: Array<MeshElementAttributeData>
    open fun clone(): MeshElementAttributeList

    companion object {
        fun C(Other: UObject): MeshElementAttributeList
        fun C(Other: Any): MeshElementAttributeList
    }
}

external open class AttributesForVertex {
    open var VertexID: VertexID
    open var VertexAttributes: MeshElementAttributeList
    open fun clone(): AttributesForVertex

    companion object {
        fun C(Other: UObject): AttributesForVertex
        fun C(Other: Any): AttributesForVertex
    }
}

external open class VertexInstanceID : ElementID {
    override fun clone(): VertexInstanceID

    companion object {
        fun C(Other: UObject): VertexInstanceID
        fun C(Other: Any): VertexInstanceID
    }
}

external open class AttributesForVertexInstance {
    open var VertexInstanceID: VertexInstanceID
    open var VertexInstanceAttributes: MeshElementAttributeList
    open fun clone(): AttributesForVertexInstance

    companion object {
        fun C(Other: UObject): AttributesForVertexInstance
        fun C(Other: Any): AttributesForVertexInstance
    }
}

external open class VertexAttributesForPolygonHole {
    open var VertexAttributeList: Array<MeshElementAttributeList>
    open fun clone(): VertexAttributesForPolygonHole

    companion object {
        fun C(Other: UObject): VertexAttributesForPolygonHole
        fun C(Other: Any): VertexAttributesForPolygonHole
    }
}

external open class VertexAttributesForPolygon {
    open var PolygonID: PolygonID
    open var PerimeterVertexAttributeLists: Array<MeshElementAttributeList>
    open var VertexAttributeListsForEachHole: Array<VertexAttributesForPolygonHole>
    open fun clone(): VertexAttributesForPolygon

    companion object {
        fun C(Other: UObject): VertexAttributesForPolygon
        fun C(Other: Any): VertexAttributesForPolygon
    }
}

external open class VerticesForEdge {
    open var EdgeID: EdgeID
    open var NewVertexID0: VertexID
    open var NewVertexID1: VertexID
    open fun clone(): VerticesForEdge

    companion object {
        fun C(Other: UObject): VerticesForEdge
        fun C(Other: Any): VerticesForEdge
    }
}

external open class AttributesForEdge {
    open var EdgeID: EdgeID
    open var EdgeAttributes: MeshElementAttributeList
    open fun clone(): AttributesForEdge

    companion object {
        fun C(Other: UObject): AttributesForEdge
        fun C(Other: Any): AttributesForEdge
    }
}

external open class VertexToMove {
    open var VertexID: VertexID
    open var NewVertexPosition: Vector
    open fun clone(): VertexToMove

    companion object {
        fun C(Other: UObject): VertexToMove
        fun C(Other: Any): VertexToMove
    }
}

external open class PolygonGroupID : ElementID {
    override fun clone(): PolygonGroupID

    companion object {
        fun C(Other: UObject): PolygonGroupID
        fun C(Other: Any): PolygonGroupID
    }
}

external object EInsetPolygonsMode {
    var All: String /* "All" */
    var CenterPolygonOnly: String /* "CenterPolygonOnly" */
    var SidePolygonsOnly: String /* "SidePolygonsOnly" */
    var EInsetPolygonsMode_MAX: String /* "EInsetPolygonsMode_MAX" */
}

external open class VertexAndAttributes {
    open var VertexInstanceID: VertexInstanceID
    open var VertexID: VertexID
    open var PolygonVertexAttributes: MeshElementAttributeList
    open fun clone(): VertexAndAttributes

    companion object {
        fun C(Other: UObject): VertexAndAttributes
        fun C(Other: Any): VertexAndAttributes
    }
}

external open class SubdividedQuadVertex {
    open var VertexPositionIndex: Number
    open var TextureCoordinate0: Vector2D
    open var TextureCoordinate1: Vector2D
    open var VertexColor: Color
    open var VertexNormal: Vector
    open var VertexTangent: Vector
    open var VertexBinormalSign: Number
    open fun clone(): SubdividedQuadVertex

    companion object {
        fun C(Other: UObject): SubdividedQuadVertex
        fun C(Other: Any): SubdividedQuadVertex
    }
}

external open class SubdividedQuad {
    open var QuadVertex0: SubdividedQuadVertex
    open var QuadVertex1: SubdividedQuadVertex
    open var QuadVertex2: SubdividedQuadVertex
    open var QuadVertex3: SubdividedQuadVertex
    open fun clone(): SubdividedQuad

    companion object {
        fun C(Other: UObject): SubdividedQuad
        fun C(Other: Any): SubdividedQuad
    }
}

external open class SubdivisionLimitSection {
    open var SubdividedQuads: Array<SubdividedQuad>
    open fun clone(): SubdivisionLimitSection

    companion object {
        fun C(Other: UObject): SubdivisionLimitSection
        fun C(Other: Any): SubdivisionLimitSection
    }
}

external open class SubdividedWireEdge {
    open var EdgeVertex0PositionIndex: Number
    open var EdgeVertex1PositionIndex: Number
    open fun clone(): SubdividedWireEdge

    companion object {
        fun C(Other: UObject): SubdividedWireEdge
        fun C(Other: Any): SubdividedWireEdge
    }
}

external open class SubdivisionLimitData {
    open var VertexPositions: Array<Vector>
    open var Sections: Array<SubdivisionLimitSection>
    open var SubdividedWireEdges: Array<SubdividedWireEdge>
    open fun clone(): SubdivisionLimitData

    companion object {
        fun C(Other: UObject): SubdivisionLimitData
        fun C(Other: Any): SubdivisionLimitData
    }
}

external open class MeshTriangle {
    open var VertexInstanceID0: VertexInstanceID
    open var VertexInstanceID1: VertexInstanceID
    open var VertexInstanceID2: VertexInstanceID
    open fun clone(): MeshTriangle

    companion object {
        fun C(Other: UObject): MeshTriangle
        fun C(Other: Any): MeshTriangle
    }
}

external open class VertexToCreate {
    open var VertexAttributes: MeshElementAttributeList
    open var OriginalVertexID: VertexID
    open fun clone(): VertexToCreate

    companion object {
        fun C(Other: UObject): VertexToCreate
        fun C(Other: Any): VertexToCreate
    }
}

external open class VertexInstanceToCreate {
    open var VertexID: VertexID
    open var VertexInstanceAttributes: MeshElementAttributeList
    open var OriginalVertexInstanceID: VertexInstanceID
    open fun clone(): VertexInstanceToCreate

    companion object {
        fun C(Other: UObject): VertexInstanceToCreate
        fun C(Other: Any): VertexInstanceToCreate
    }
}

external object EPolygonEdgeHardness {
    var NewEdgesSoft: String /* "NewEdgesSoft" */
    var NewEdgesHard: String /* "NewEdgesHard" */
    var AllEdgesSoft: String /* "AllEdgesSoft" */
    var AllEdgesHard: String /* "AllEdgesHard" */
    var EPolygonEdgeHardness_MAX: String /* "EPolygonEdgeHardness_MAX" */
}

external open class PolygonToCreate {
    open var PolygonGroupID: PolygonGroupID
    open var PerimeterVertices: Array<VertexAndAttributes>
    open var OriginalPolygonID: PolygonID
    open var PolygonEdgeHardness: String /* "NewEdgesSoft" | "NewEdgesHard" | "AllEdgesSoft" | "AllEdgesHard" | "EPolygonEdgeHardness_MAX" */
    open fun clone(): PolygonToCreate

    companion object {
        fun C(Other: UObject): PolygonToCreate
        fun C(Other: Any): PolygonToCreate
    }
}

external open class PolygonGroupToCreate {
    open var PolygonGroupAttributes: MeshElementAttributeList
    open var OriginalPolygonGroupID: PolygonGroupID
    open fun clone(): PolygonGroupToCreate

    companion object {
        fun C(Other: UObject): PolygonGroupToCreate
        fun C(Other: Any): PolygonGroupToCreate
    }
}

external open class EdgeToCreate {
    open var VertexID0: VertexID
    open var VertexID1: VertexID
    open var ConnectedPolygons: Array<PolygonID>
    open var EdgeAttributes: MeshElementAttributeList
    open var OriginalEdgeID: EdgeID
    open fun clone(): EdgeToCreate

    companion object {
        fun C(Other: UObject): EdgeToCreate
        fun C(Other: Any): EdgeToCreate
    }
}

external open class VertexIndexAndInstanceID {
    open var ContourIndex: Number
    open var VertexInstanceID: VertexInstanceID
    open fun clone(): VertexIndexAndInstanceID

    companion object {
        fun C(Other: UObject): VertexIndexAndInstanceID
        fun C(Other: Any): VertexIndexAndInstanceID
    }
}

external open class VertexInstancesForPolygonHole {
    open var VertexIndicesAndInstanceIDs: Array<VertexIndexAndInstanceID>
    open fun clone(): VertexInstancesForPolygonHole

    companion object {
        fun C(Other: UObject): VertexInstancesForPolygonHole
        fun C(Other: Any): VertexInstancesForPolygonHole
    }
}

external open class ChangeVertexInstancesForPolygon {
    open var PolygonID: PolygonID
    open var PerimeterVertexIndicesAndInstanceIDs: Array<VertexIndexAndInstanceID>
    open var VertexIndicesAndInstanceIDsForEachHole: Array<VertexInstancesForPolygonHole>
    open fun clone(): ChangeVertexInstancesForPolygon

    companion object {
        fun C(Other: UObject): ChangeVertexInstancesForPolygon
        fun C(Other: Any): ChangeVertexInstancesForPolygon
    }
}

external open class PolygonGroupForPolygon {
    open var PolygonID: PolygonID
    open var PolygonGroupID: PolygonGroupID
    open fun clone(): PolygonGroupForPolygon

    companion object {
        fun C(Other: UObject): PolygonGroupForPolygon
        fun C(Other: Any): PolygonGroupForPolygon
    }
}

external interface `T$156` {
    var OutNewVertexID: VertexID
}

external interface `T$157` {
    var bOutWasVertexRemoved: Boolean
    var OutNewEdgeID: EdgeID
}

external interface `T$158` {
    var bOutWasEdgeRemoved: Boolean
    var OutNewPolygonID: PolygonID
}

external interface `T$159` {
    var OutNewTrianglePolygons: Array<PolygonID>
}

external interface `T$160` {
    var OutNewPolygonIDs: Array<PolygonID>
}

external interface `T$161` {
    var OutNewEdgeIDs: Array<EdgeID>
}

external interface `T$162` {
    var PolygonIDs1: Array<PolygonID>
    var PolygonIDs2: Array<PolygonID>
    var BoundaryIDs: Array<EdgeID>
}

external interface `T$163` {
    var OutNewVertexIDs: Array<VertexID>
}

external interface `T$164` {
    var OutPolygons: Array<PolygonID>
}

external interface `T$165` {
    var OutPolygons: Array<PolygonID>
}

external interface `T$166` {
    var OutPolygons: Array<PolygonID>
}

external interface `T$167` {
    var OutNewPolygonIDs: Array<PolygonID>
}

external interface `T$168` {
    var OutNewCenterPolygonIDs: Array<PolygonID>
    var OutNewSidePolygonIDs: Array<PolygonID>
}

external interface `T$169` {
    var OutNewEdgeIDs: Array<EdgeID>
}

external interface `T$170` {
    var bOutEdgeWindingIsReversed: Boolean
    var `$`: EdgeID
}

external interface `T$171` {
    var OutConnectedPolygonIDs: Array<PolygonID>
}

external interface `T$172` {
    var OutConnectedPolygonIDs: Array<PolygonID>
}

external interface `T$173` {
    var OutConnectedEdgeIDs: Array<EdgeID>
}

external interface `T$174` {
    var OutAdjacentVertexIDs: Array<VertexID>
}

external interface `T$175` {
    var OutPolygonPerimeterVertexIDs: Array<VertexID>
}

external interface `T$176` {
    var OutPolygonPerimeterVertexInstanceIDs: Array<VertexInstanceID>
}

external interface `T$177` {
    var OutPolygonPerimeterEdgeIDs: Array<EdgeID>
}

external interface `T$178` {
    var bOutEdgeWindingIsReversedForPolygon: Boolean
    var `$`: EdgeID
}

external interface `T$179` {
    var OutAdjacentPolygons: Array<PolygonID>
}

external interface `T$180` {
    var OutEdgeVertexID0: VertexID
    var OutEdgeVertexID1: VertexID
}

external interface `T$181` {
    var EdgeLoopIDs: Array<EdgeID>
}

external interface `T$182` {
    var OutConnectedPolygonIDs: Array<PolygonID>
}

external interface `T$183` {
    var OutEdgeLoopEdgeIDs: Array<EdgeID>
    var OutFlippedEdgeIDs: Array<EdgeID>
    var OutReversedEdgeIDPathToTake: Array<EdgeID>
    var OutPolygonIDsToSplit: Array<PolygonID>
}

external interface `T$184` {
    var OutNewExtrudedFrontPolygons: Array<PolygonID>
}

external interface `T$185` {
    var OutNewExtendedVertexIDs: Array<VertexID>
}

external interface `T$186` {
    var OutNewExtendedEdgeIDs: Array<EdgeID>
}

external interface `T$187` {
    var OutNewVertexIDs: Array<VertexID>
}

external interface `T$188` {
    var OutNewVertexInstanceIDs: Array<VertexInstanceID>
}

external interface `T$189` {
    var OutNewPolygonIDs: Array<PolygonID>
    var OutNewEdgeIDs: Array<EdgeID>
}

external interface `T$190` {
    var OutNewPolygonGroupIDs: Array<PolygonGroupID>
}

external interface `T$191` {
    var OutNewEdgeIDs: Array<EdgeID>
}

external interface `T$192` {
    var OutNewVertexIDs: Array<VertexID>
}

external interface `T$193` {
    var OutNewEdgeIDs: Array<EdgeID>
}

external interface `T$194` {
    var OutTriangles: Array<MeshTriangle>
}

external interface `T$195` {
    var OutSharedEdgeIDs: Array<EdgeID>
}

external interface `T$196` {
    var OutTriangle: MeshTriangle
    var OutTriangleVertexWeights: Vector
    var `$`: Boolean
}

external interface `T$197` {
    var OutNewCenterPolygonIDs: Array<PolygonID>
    var OutNewSidePolygonIDs: Array<PolygonID>
}

external open class EditableMesh : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Adapters: Array<EditableMeshAdapter>
    open var TextureCoordinateCount: Number
    open var PendingCompactCounter: Number
    open var SubdivisionCount: Number
    open fun WeldVertices(VertexIDs: Array<VertexID>, OutNewVertexID: VertexID = definedExternally): `T$156`
    open fun TryToRemoveVertex(VertexID: VertexID, bOutWasVertexRemoved: Boolean = definedExternally, OutNewEdgeID: EdgeID = definedExternally): `T$157`
    open fun TryToRemovePolygonEdge(EdgeID: EdgeID, bOutWasEdgeRemoved: Boolean = definedExternally, OutNewPolygonID: PolygonID = definedExternally): `T$158`
    open fun TriangulatePolygons(PolygonIDs: Array<PolygonID>, OutNewTrianglePolygons: Array<PolygonID> = definedExternally): `T$159`
    open fun TessellatePolygons(PolygonIDs: Array<PolygonID>, TriangleTessellationMode: String /* "ThreeTriangles" | "FourTriangles" | "ETriangleTessellationMode_MAX" */, OutNewPolygonIDs: Array<PolygonID> = definedExternally): `T$160`
    open fun StartModification(MeshModificationType: String /* "FirstInterim" | "Interim" | "Final" | "EMeshModificationType_MAX" */, MeshTopologyChange: String /* "NoTopologyChange" | "TopologyChange" | "EMeshTopologyChange_MAX" */)
    open fun SplitPolygons(PolygonsToSplit: Array<PolygonToSplit>, OutNewEdgeIDs: Array<EdgeID> = definedExternally): `T$161`
    open fun SplitPolygonalMesh(InPlane: Plane, PolygonIDs1: Array<PolygonID> = definedExternally, PolygonIDs2: Array<PolygonID> = definedExternally, BoundaryIDs: Array<EdgeID> = definedExternally): `T$162`
    open fun SplitEdge(EdgeID: EdgeID, Splits: Array<Number>, OutNewVertexIDs: Array<VertexID> = definedExternally): `T$163`
    open fun SetVerticesCornerSharpness(VertexIDs: Array<VertexID>, VerticesNewCornerSharpness: Array<Number>)
    open fun SetVerticesAttributes(AttributesForVertices: Array<AttributesForVertex>)
    open fun SetVertexInstancesAttributes(AttributesForVertexInstances: Array<AttributesForVertexInstance>)
    open fun SetTextureCoordinateCount(NumTexCoords: Number)
    open fun SetSubdivisionCount(NewSubdivisionCount: Number)
    open fun SetPolygonsVertexAttributes(VertexAttributesForPolygons: Array<VertexAttributesForPolygon>)
    open fun SetEdgesVertices(VerticesForEdges: Array<VerticesForEdge>)
    open fun SetEdgesHardnessAutomatically(EdgeIDs: Array<EdgeID>, MaxDotProductForSoftEdge: Number)
    open fun SetEdgesHardness(EdgeIDs: Array<EdgeID>, EdgesNewIsHard: Array<Boolean>)
    open fun SetEdgesCreaseSharpness(EdgeIDs: Array<EdgeID>, EdgesNewCreaseSharpness: Array<Number>)
    open fun SetEdgesAttributes(AttributesForEdges: Array<AttributesForEdge>)
    open fun SetAllowUndo(bInAllowUndo: Boolean)
    open fun SetAllowSpatialDatabase(bInAllowSpatialDatabase: Boolean)
    open fun SetAllowCompact(bInAllowCompact: Boolean)
    open fun SearchSpatialDatabaseForPolygonsPotentiallyIntersectingPlane(InPlane: Plane, OutPolygons: Array<PolygonID> = definedExternally): `T$164`
    open fun SearchSpatialDatabaseForPolygonsPotentiallyIntersectingLineSegment(LineSegmentStart: Vector, LineSegmentEnd: Vector, OutPolygons: Array<PolygonID> = definedExternally): `T$165`
    open fun SearchSpatialDatabaseForPolygonsInVolume(Planes: Array<Plane>, OutPolygons: Array<PolygonID> = definedExternally): `T$166`
    open fun RevertInstance(): EditableMesh
    open fun Revert()
    open fun RemovePolygonPerimeterVertices(PolygonID: PolygonID, FirstVertexNumberToRemove: Number, NumVerticesToRemove: Number, bDeleteOrphanedVertexInstances: Boolean)
    open fun RebuildRenderMesh()
    open fun QuadrangulateMesh(OutNewPolygonIDs: Array<PolygonID> = definedExternally): `T$167`
    open fun PropagateInstanceChanges()
    open fun MoveVertices(VerticesToMove: Array<VertexToMove>)
    open fun IsValidVertex(VertexID: VertexID): Boolean
    open fun IsValidPolygonGroup(PolygonGroupID: PolygonGroupID): Boolean
    open fun IsValidPolygon(PolygonID: PolygonID): Boolean
    open fun IsValidEdge(EdgeID: EdgeID): Boolean
    open fun IsUndoAllowed(): Boolean
    open fun IsSpatialDatabaseAllowed(): Boolean
    open fun IsPreviewingSubdivisions(): Boolean
    open fun IsOrphanedVertex(VertexID: VertexID): Boolean
    open fun IsCompactAllowed(): Boolean
    open fun IsCommittedAsInstance(): Boolean
    open fun IsCommitted(): Boolean
    open fun IsBeingModified(): Boolean
    open fun InsetPolygons(PolygonIDs: Array<PolygonID>, InsetFixedDistance: Number, InsetProgressTowardCenter: Number, Mode: String /* "All" | "CenterPolygonOnly" | "SidePolygonsOnly" | "EInsetPolygonsMode_MAX" */, OutNewCenterPolygonIDs: Array<PolygonID> = definedExternally, OutNewSidePolygonIDs: Array<PolygonID> = definedExternally): `T$168`
    open fun InsertPolygonPerimeterVertices(PolygonID: PolygonID, InsertBeforeVertexNumber: Number, VerticesToInsert: Array<VertexAndAttributes>)
    open fun InsertEdgeLoop(EdgeID: EdgeID, Splits: Array<Number>, OutNewEdgeIDs: Array<EdgeID> = definedExternally): `T$169`
    open fun InitializeAdapters()
    open fun GetVertexPairEdge(VertexID: VertexID, NextVertexID: VertexID, bOutEdgeWindingIsReversed: Boolean = definedExternally): `T$170`
    open fun GetVertexInstanceVertex(VertexInstanceID: VertexInstanceID): VertexID
    open fun GetVertexInstanceCount(): Number
    open fun GetVertexInstanceConnectedPolygons(VertexInstanceID: VertexInstanceID, OutConnectedPolygonIDs: Array<PolygonID> = definedExternally): `T$171`
    open fun GetVertexInstanceConnectedPolygonCount(VertexInstanceID: VertexInstanceID): Number
    open fun GetVertexInstanceConnectedPolygon(VertexInstanceID: VertexInstanceID, ConnectedPolygonNumber: Number): PolygonID
    open fun GetVertexCount(): Number
    open fun GetVertexConnectedPolygons(VertexID: VertexID, OutConnectedPolygonIDs: Array<PolygonID> = definedExternally): `T$172`
    open fun GetVertexConnectedEdges(VertexID: VertexID, OutConnectedEdgeIDs: Array<EdgeID> = definedExternally): `T$173`
    open fun GetVertexConnectedEdgeCount(VertexID: VertexID): Number
    open fun GetVertexConnectedEdge(VertexID: VertexID, ConnectedEdgeNumber: Number): EdgeID
    open fun GetVertexAdjacentVertices(VertexID: VertexID, OutAdjacentVertexIDs: Array<VertexID> = definedExternally): `T$174`
    open fun GetTextureCoordinateCount(): Number
    open fun GetSubdivisionLimitData(): SubdivisionLimitData
    open fun GetSubdivisionCount(): Number
    open fun GetPolygonTriangulatedTriangleCount(PolygonID: PolygonID): Number
    open fun GetPolygonTriangulatedTriangle(PolygonID: PolygonID, PolygonTriangleNumber: Number): MeshTriangle
    open fun GetPolygonPerimeterVertices(PolygonID: PolygonID, OutPolygonPerimeterVertexIDs: Array<VertexID> = definedExternally): `T$175`
    open fun GetPolygonPerimeterVertexInstances(PolygonID: PolygonID, OutPolygonPerimeterVertexInstanceIDs: Array<VertexInstanceID> = definedExternally): `T$176`
    open fun GetPolygonPerimeterVertexInstance(PolygonID: PolygonID, PolygonVertexNumber: Number): VertexInstanceID
    open fun GetPolygonPerimeterVertexCount(PolygonID: PolygonID): Number
    open fun GetPolygonPerimeterVertex(PolygonID: PolygonID, PolygonVertexNumber: Number): VertexID
    open fun GetPolygonPerimeterEdges(PolygonID: PolygonID, OutPolygonPerimeterEdgeIDs: Array<EdgeID> = definedExternally): `T$177`
    open fun GetPolygonPerimeterEdgeCount(PolygonID: PolygonID): Number
    open fun GetPolygonPerimeterEdge(PolygonID: PolygonID, PerimeterEdgeNumber: Number, bOutEdgeWindingIsReversedForPolygon: Boolean = definedExternally): `T$178`
    open fun GetPolygonInGroup(PolygonGroupID: PolygonGroupID, PolygonNumber: Number): PolygonID
    open fun GetPolygonGroupCount(): Number
    open fun GetPolygonCountInGroup(PolygonGroupID: PolygonGroupID): Number
    open fun GetPolygonCount(): Number
    open fun GetPolygonAdjacentPolygons(PolygonID: PolygonID, OutAdjacentPolygons: Array<PolygonID> = definedExternally): `T$179`
    open fun GetGroupForPolygon(PolygonID: PolygonID): PolygonGroupID
    open fun GetFirstValidPolygonGroup(): PolygonGroupID
    open fun GetEdgeVertices(EdgeID: EdgeID, OutEdgeVertexID0: VertexID = definedExternally, OutEdgeVertexID1: VertexID = definedExternally): `T$180`
    open fun GetEdgeVertex(EdgeID: EdgeID, EdgeVertexNumber: Number): VertexID
    open fun GetEdgeThatConnectsVertices(VertexID0: VertexID, VertexID1: VertexID): EdgeID
    open fun GetEdgeLoopElements(EdgeID: EdgeID, EdgeLoopIDs: Array<EdgeID> = definedExternally): `T$181`
    open fun GetEdgeCount(): Number
    open fun GetEdgeConnectedPolygons(EdgeID: EdgeID, OutConnectedPolygonIDs: Array<PolygonID> = definedExternally): `T$182`
    open fun GetEdgeConnectedPolygonCount(EdgeID: EdgeID): Number
    open fun GetEdgeConnectedPolygon(EdgeID: EdgeID, ConnectedPolygonNumber: Number): PolygonID
    open fun GeneratePolygonTangentsAndNormals(PolygonIDs: Array<PolygonID>)
    open fun FlipPolygons(PolygonIDs: Array<PolygonID>)
    open fun FindPolygonPerimeterVertexNumberForVertex(PolygonID: PolygonID, VertexID: VertexID): Number
    open fun FindPolygonPerimeterEdgeNumberForVertices(PolygonID: PolygonID, EdgeVertexID0: VertexID, EdgeVertexID1: VertexID): Number
    open fun FindPolygonLoop(EdgeID: EdgeID, OutEdgeLoopEdgeIDs: Array<EdgeID> = definedExternally, OutFlippedEdgeIDs: Array<EdgeID> = definedExternally, OutReversedEdgeIDPathToTake: Array<EdgeID> = definedExternally, OutPolygonIDsToSplit: Array<PolygonID> = definedExternally): `T$183`
    open fun ExtrudePolygons(Polygons: Array<PolygonID>, ExtrudeDistance: Number, bKeepNeighborsTogether: Boolean, OutNewExtrudedFrontPolygons: Array<PolygonID> = definedExternally): `T$184`
    open fun ExtendVertices(VertexIDs: Array<VertexID>, bOnlyExtendClosestEdge: Boolean, ReferencePosition: Vector, OutNewExtendedVertexIDs: Array<VertexID> = definedExternally): `T$185`
    open fun ExtendEdges(EdgeIDs: Array<EdgeID>, bWeldNeighbors: Boolean, OutNewExtendedEdgeIDs: Array<EdgeID> = definedExternally): `T$186`
    open fun EndModification(bFromUndo: Boolean)
    open fun DeleteVertexInstances(VertexInstanceIDsToDelete: Array<VertexInstanceID>, bDeleteOrphanedVertices: Boolean)
    open fun DeleteVertexAndConnectedEdgesAndPolygons(VertexID: VertexID, bDeleteOrphanedEdges: Boolean, bDeleteOrphanedVertices: Boolean, bDeleteOrphanedVertexInstances: Boolean, bDeleteEmptyPolygonGroups: Boolean)
    open fun DeletePolygons(PolygonIDsToDelete: Array<PolygonID>, bDeleteOrphanedEdges: Boolean, bDeleteOrphanedVertices: Boolean, bDeleteOrphanedVertexInstances: Boolean, bDeleteEmptyPolygonGroups: Boolean)
    open fun DeletePolygonGroups(PolygonGroupIDs: Array<PolygonGroupID>)
    open fun DeleteOrphanVertices(VertexIDsToDelete: Array<VertexID>)
    open fun DeleteEdges(EdgeIDsToDelete: Array<EdgeID>, bDeleteOrphanedVertices: Boolean)
    open fun DeleteEdgeAndConnectedPolygons(EdgeID: EdgeID, bDeleteOrphanedEdges: Boolean, bDeleteOrphanedVertices: Boolean, bDeleteOrphanedVertexInstances: Boolean, bDeleteEmptyPolygonGroups: Boolean)
    open fun CreateVertices(VerticesToCreate: Array<VertexToCreate>, OutNewVertexIDs: Array<VertexID> = definedExternally): `T$187`
    open fun CreateVertexInstances(VertexInstancesToCreate: Array<VertexInstanceToCreate>, OutNewVertexInstanceIDs: Array<VertexInstanceID> = definedExternally): `T$188`
    open fun CreatePolygons(PolygonsToCreate: Array<PolygonToCreate>, OutNewPolygonIDs: Array<PolygonID> = definedExternally, OutNewEdgeIDs: Array<EdgeID> = definedExternally): `T$189`
    open fun CreatePolygonGroups(PolygonGroupsToCreate: Array<PolygonGroupToCreate>, OutNewPolygonGroupIDs: Array<PolygonGroupID> = definedExternally): `T$190`
    open fun CreateMissingPolygonPerimeterEdges(PolygonID: PolygonID, OutNewEdgeIDs: Array<EdgeID> = definedExternally): `T$191`
    open fun CreateEmptyVertexRange(NumVerticesToCreate: Number, OutNewVertexIDs: Array<VertexID> = definedExternally): `T$192`
    open fun CreateEdges(EdgesToCreate: Array<EdgeToCreate>, OutNewEdgeIDs: Array<EdgeID> = definedExternally): `T$193`
    open fun ComputePolygonTriangulation(PolygonID: PolygonID, OutTriangles: Array<MeshTriangle> = definedExternally): `T$194`
    open fun ComputePolygonsSharedEdges(PolygonIDs: Array<PolygonID>, OutSharedEdgeIDs: Array<EdgeID> = definedExternally): `T$195`
    open fun ComputePolygonPlane(PolygonID: PolygonID): Plane
    open fun ComputePolygonNormal(PolygonID: PolygonID): Vector
    open fun ComputePolygonCenter(PolygonID: PolygonID): Vector
    open fun ComputeBoundingBoxAndSphere(): BoxSphereBounds
    open fun ComputeBoundingBox(): Box
    open fun ComputeBarycentricWeightForPointOnPolygon(PolygonID: PolygonID, PointOnPolygon: Vector, OutTriangle: MeshTriangle = definedExternally, OutTriangleVertexWeights: Vector = definedExternally): `T$196`
    open fun CommitInstance(ComponentToInstanceTo: PrimitiveComponent): EditableMesh
    open fun Commit()
    open fun ChangePolygonsVertexInstances(VertexInstancesForPolygons: Array<ChangeVertexInstancesForPolygon>)
    open fun BevelPolygons(PolygonIDs: Array<PolygonID>, BevelFixedDistance: Number, BevelProgressTowardCenter: Number, OutNewCenterPolygonIDs: Array<PolygonID> = definedExternally, OutNewSidePolygonIDs: Array<PolygonID> = definedExternally): `T$197`
    open fun AssignPolygonsToPolygonGroups(PolygonGroupForPolygons: Array<PolygonGroupForPolygon>, bDeleteOrphanedPolygonGroups: Boolean)
    open fun AnyChangesToUndo(): Boolean

    companion object {
        fun Load(ResourceName: String): EditableMesh
        fun Find(Outer: UObject, ResourceName: String): EditableMesh
        fun GetDefaultObject(): EditableMesh
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditableMesh
        fun MakeVertexID(VertexIndex: Number): VertexID
        fun MakePolygonID(PolygonIndex: Number): PolygonID
        fun MakePolygonGroupID(PolygonGroupIndex: Number): PolygonGroupID
        fun MakeEdgeID(EdgeIndex: Number): EdgeID
        fun InvalidVertexID(): VertexID
        fun InvalidPolygonID(): PolygonID
        fun InvalidPolygonGroupID(): PolygonGroupID
        fun InvalidEdgeID(): EdgeID
        fun C(Other: UObject): EditableMesh
        fun C(Other: Any): EditableMesh
    }
}

external open class EditableMeshFactory : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EditableMeshFactory
        fun Find(Outer: UObject, ResourceName: String): EditableMeshFactory
        fun GetDefaultObject(): EditableMeshFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditableMeshFactory
        fun MakeEditableMesh(PrimitiveComponent: PrimitiveComponent, LODIndex: Number): EditableMesh
        fun C(Other: UObject): EditableMeshFactory
        fun C(Other: Any): EditableMeshFactory
    }
}

external open class EditableStaticMeshAdapter : EditableMeshAdapter {
    constructor()
    constructor(Outer: UObject)
    open var StaticMesh: StaticMesh
    open var OriginalStaticMesh: StaticMesh
    open var StaticMeshLODIndex: Number

    companion object {
        fun Load(ResourceName: String): EditableStaticMeshAdapter
        fun Find(Outer: UObject, ResourceName: String): EditableStaticMeshAdapter
        fun GetDefaultObject(): EditableStaticMeshAdapter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditableStaticMeshAdapter
        fun C(Other: UObject): EditableStaticMeshAdapter
        fun C(Other: Any): EditableStaticMeshAdapter
    }
}

external open class MobileInstalledContent : UObject {
    constructor()
    constructor(Outer: UObject)
    open fun Mount(PakOrder: Number, MountPoint: String): Boolean
    open fun GetInstalledContentSize(): Number
    open fun GetDiskFreeSpace(): Number

    companion object {
        fun Load(ResourceName: String): MobileInstalledContent
        fun Find(Outer: UObject, ResourceName: String): MobileInstalledContent
        fun GetDefaultObject(): MobileInstalledContent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MobileInstalledContent
        fun C(Other: UObject): MobileInstalledContent
        fun C(Other: Any): MobileInstalledContent
    }
}

external open class MobilePendingContent : MobileInstalledContent {
    constructor()
    constructor(Outer: UObject)
    open fun GetTotalDownloadedSize(): Number
    open fun GetRequiredDiskSpace(): Number
    open fun GetInstallProgress(): Number
    open fun GetDownloadStatusText(): String
    open fun GetDownloadSpeed(): Number
    open fun GetDownloadSize(): Number

    companion object {
        fun Load(ResourceName: String): MobilePendingContent
        fun Find(Outer: UObject, ResourceName: String): MobilePendingContent
        fun GetDefaultObject(): MobilePendingContent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MobilePendingContent
        fun C(Other: UObject): MobilePendingContent
        fun C(Other: Any): MobilePendingContent
    }
}

external open class MobilePatchingLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MobilePatchingLibrary
        fun Find(Outer: UObject, ResourceName: String): MobilePatchingLibrary
        fun GetDefaultObject(): MobilePatchingLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MobilePatchingLibrary
        fun HasActiveWiFiConnection(): Boolean
        fun GetSupportedPlatformNames(): Array<String>
        fun GetInstalledContent(InstallDirectory: String): MobileInstalledContent
        fun GetActiveDeviceProfileName(): String
        fun C(Other: UObject): MobilePatchingLibrary
        fun C(Other: Any): MobilePatchingLibrary
    }
}

external object EAndroidInstallLocation {
    var InternalOnly: String /* "InternalOnly" */
    var PreferExternal: String /* "PreferExternal" */
    var Auto: String /* "Auto" */
    var EAndroidInstallLocation_MAX: String /* "EAndroidInstallLocation_MAX" */
}

external object EAndroidScreenOrientation {
    var Portrait: String /* "Portrait" */
    var ReversePortrait: String /* "ReversePortrait" */
    var SensorPortrait: String /* "SensorPortrait" */
    var Landscape: String /* "Landscape" */
    var ReverseLandscape: String /* "ReverseLandscape" */
    var SensorLandscape: String /* "SensorLandscape" */
    var Sensor: String /* "Sensor" */
    var FullSensor: String /* "FullSensor" */
    var EAndroidScreenOrientation_MAX: String /* "EAndroidScreenOrientation_MAX" */
}

external object EAndroidAntVerbosity {
    var Quiet: String /* "Quiet" */
    var Normal: String /* "Normal" */
    var Verbose: String /* "Verbose" */
    var EAndroidAntVerbosity_MAX: String /* "EAndroidAntVerbosity_MAX" */
}

external object EAndroidDepthBufferPreference {
    var Default: String /* "Default" */
    var Bits16: String /* "Bits16" */
    var Bits24: String /* "Bits24" */
    var Bits32: String /* "Bits32" */
    var EAndroidDepthBufferPreference_MAX: String /* "EAndroidDepthBufferPreference_MAX" */
}

external object EOculusMobileDevice {
    var GearGo: String /* "GearGo" */
    var Quest: String /* "Quest" */
    var EOculusMobileDevice_MAX: String /* "EOculusMobileDevice_MAX" */
}

external object EGoogleVRCaps {
    var Cardboard: String /* "Cardboard" */
    var Daydream33: String /* "Daydream33" */
    var Daydream63: String /* "Daydream63" */
    var Daydream66: String /* "Daydream66" */
    var EGoogleVRCaps_MAX: String /* "EGoogleVRCaps_MAX" */
}

external open class GooglePlayAchievementMapping {
    open var Name: String
    open var AchievementID: String
    open fun clone(): GooglePlayAchievementMapping

    companion object {
        fun C(Other: UObject): GooglePlayAchievementMapping
        fun C(Other: Any): GooglePlayAchievementMapping
    }
}

external open class GooglePlayLeaderboardMapping {
    open var Name: String
    open var LeaderboardID: String
    open fun clone(): GooglePlayLeaderboardMapping

    companion object {
        fun C(Other: UObject): GooglePlayLeaderboardMapping
        fun C(Other: Any): GooglePlayLeaderboardMapping
    }
}

external object EAndroidAudio {
    var Default: String /* "Default" */
    var OGG: String /* "OGG" */
    var ADPCM: String /* "ADPCM" */
    var EAndroidAudio_MAX: String /* "EAndroidAudio_MAX" */
}

external open class PlatformRuntimeAudioCompressionOverrides {
    open var bOverrideCompressionTimes: Boolean
    open var DurationThreshold: Number
    open var MaxNumRandomBranches: Number
    open var SoundCueQualityIndex: Number
    open fun clone(): PlatformRuntimeAudioCompressionOverrides

    companion object {
        fun C(Other: UObject): PlatformRuntimeAudioCompressionOverrides
        fun C(Other: Any): PlatformRuntimeAudioCompressionOverrides
    }
}

external object EAndroidGraphicsDebugger {
    var None: String /* "None" */
    var Mali: String /* "Mali" */
    var Adreno: String /* "Adreno" */
    var EAndroidGraphicsDebugger_MAX: String /* "EAndroidGraphicsDebugger_MAX" */
}

external open class AndroidRuntimeSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var PackageName: String
    open var StoreVersion: Number
    open var StoreVersionOffsetArmV7: Number
    open var StoreVersionOffsetArm64: Number
    open var StoreVersionOffsetX8664: Number
    open var ApplicationDisplayName: String
    open var VersionDisplayName: String
    open var MinSDKVersion: Number
    open var TargetSDKVersion: Number
    open var InstallLocation: String /* "InternalOnly" | "PreferExternal" | "Auto" | "EAndroidInstallLocation_MAX" */
    open var bEnableGradle: Boolean
    open var bEnableLint: Boolean
    open var bPackageDataInsideApk: Boolean
    open var bCreateAllPlatformsInstall: Boolean
    open var bDisableVerifyOBBOnStartUp: Boolean
    open var bAllowLargeOBBFiles: Boolean
    open var bAllowPatchOBBFile: Boolean
    open var bUseExternalFilesDir: Boolean
    open var Orientation: String /* "Portrait" | "ReversePortrait" | "SensorPortrait" | "Landscape" | "ReverseLandscape" | "SensorLandscape" | "Sensor" | "FullSensor" | "EAndroidScreenOrientation_MAX" */
    open var MaxAspectRatio: Number
    open var bUseDisplayCutout: Boolean
    open var AntVerbosity: String /* "Quiet" | "Normal" | "Verbose" | "EAndroidAntVerbosity_MAX" */
    open var bFullScreen: Boolean
    open var bEnableNewKeyboard: Boolean
    open var DepthBufferPreference: String /* "Default" | "Bits16" | "Bits24" | "Bits32" | "EAndroidDepthBufferPreference_MAX" */
    open var bValidateTextureFormats: Boolean
    open var ExtraManifestNodeTags: Array<String>
    open var ExtraApplicationNodeTags: Array<String>
    open var ExtraApplicationSettings: String
    open var ExtraActivityNodeTags: Array<String>
    open var ExtraActivitySettings: String
    open var ExtraPermissions: Array<String>
    open var bAndroidVoiceEnabled: Boolean
    open var PackageForOculusMobile: Array<String /* "GearGo" | "Quest" | "EOculusMobileDevice_MAX" */>
    open var bRemoveOSIG: Boolean
    open var GoogleVRCaps: Array<String /* "Cardboard" | "Daydream33" | "Daydream63" | "Daydream66" | "EGoogleVRCaps_MAX" */>
    open var bGoogleVRSustainedPerformance: Boolean
    open var KeyStore: String
    open var KeyAlias: String
    open var KeyStorePassword: String
    open var KeyPassword: String
    open var bBuildForArmV7: Boolean
    open var bBuildForArm64: Boolean
    open var bBuildForX8664: Boolean
    open var bBuildForES2: Boolean
    open var bBuildForES31: Boolean
    open var bSupportsVulkan: Boolean
    open var bDetectVulkanByDefault: Boolean
    open var bBuildWithHiddenSymbolVisibility: Boolean
    open var bSaveSymbols: Boolean
    open var bEnableGooglePlaySupport: Boolean
    open var bUseGetAccounts: Boolean
    open var GamesAppID: String
    open var AchievementMap: Array<GooglePlayAchievementMapping>
    open var LeaderboardMap: Array<GooglePlayLeaderboardMapping>
    open var bEnableSnapshots: Boolean
    open var bSupportAdMob: Boolean
    open var AdMobAdUnitID: String
    open var AdMobAdUnitIDs: Array<String>
    open var GooglePlayLicenseKey: String
    open var GCMClientSenderID: String
    open var bShowLaunchImage: Boolean
    open var bAllowIMU: Boolean
    open var bAllowControllers: Boolean
    open var bBlockAndroidKeysOnControllers: Boolean
    open var AndroidAudio: String /* "Default" | "OGG" | "ADPCM" | "EAndroidAudio_MAX" */
    open var AudioSampleRate: Number
    open var AudioCallbackBufferFrameSize: Number
    open var AudioNumBuffersToEnqueue: Number
    open var AudioMaxChannels: Number
    open var AudioNumSourceWorkers: Number
    open var SpatializationPlugin: String
    open var ReverbPlugin: String
    open var OcclusionPlugin: String
    open var CompressionOverrides: PlatformRuntimeAudioCompressionOverrides
    open var bResampleForDevice: Boolean
    open var MaxSampleRate: Number
    open var HighSampleRate: Number
    open var MedSampleRate: Number
    open var LowSampleRate: Number
    open var MinSampleRate: Number
    open var CompressionQualityModifier: Number
    open var AutoStreamingThreshold: Number
    open var AndroidGraphicsDebugger: String /* "None" | "Mali" | "Adreno" | "EAndroidGraphicsDebugger_MAX" */
    open var MaliGraphicsDebuggerPath: DirectoryPath
    open var bMultiTargetFormat_ETC1: Boolean
    open var bMultiTargetFormat_ETC1a: Boolean
    open var bMultiTargetFormat_ETC2: Boolean
    open var bMultiTargetFormat_DXT: Boolean
    open var bMultiTargetFormat_PVRTC: Boolean
    open var bMultiTargetFormat_ATC: Boolean
    open var bMultiTargetFormat_ASTC: Boolean
    open var TextureFormatPriority_ETC1: Number
    open var TextureFormatPriority_ETC1a: Number
    open var TextureFormatPriority_ETC2: Number
    open var TextureFormatPriority_DXT: Number
    open var TextureFormatPriority_PVRTC: Number
    open var TextureFormatPriority_ATC: Number
    open var TextureFormatPriority_ASTC: Number
    open var SDKAPILevelOverride: String
    open var NDKAPILevelOverride: String

    companion object {
        fun Load(ResourceName: String): AndroidRuntimeSettings
        fun Find(Outer: UObject, ResourceName: String): AndroidRuntimeSettings
        fun GetDefaultObject(): AndroidRuntimeSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AndroidRuntimeSettings
        fun C(Other: UObject): AndroidRuntimeSettings
        fun C(Other: Any): AndroidRuntimeSettings
    }
}

external object EOculusPlatform {
    var PC: String /* "PC" */
    var Mobile: String /* "Mobile" */
    var Length: String /* "Length" */
    var EOculusPlatform_MAX: String /* "EOculusPlatform_MAX" */
}

external open class OculusEditorSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var PerfToolIgnoreList: Any
    open var PerfToolTargetPlatform: String /* "PC" | "Mobile" | "Length" | "EOculusPlatform_MAX" */
    open var bAddMenuOption: Boolean

    companion object {
        fun Load(ResourceName: String): OculusEditorSettings
        fun Find(Outer: UObject, ResourceName: String): OculusEditorSettings
        fun GetDefaultObject(): OculusEditorSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): OculusEditorSettings
        fun C(Other: UObject): OculusEditorSettings
        fun C(Other: Any): OculusEditorSettings
    }
}

external object EOculusPlatformTarget {
    var Rift: String /* "Rift" */
    var Quest: String /* "Quest" */
    var Mobile: String /* "Mobile" */
    var Length: String /* "Length" */
    var EOculusPlatformTarget_MAX: String /* "EOculusPlatformTarget_MAX" */
}

external open class OculusPlatformToolSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var OculusRiftBuildDirectory: String
    open var OculusRiftBuildVersion: String
    open var OculusTargetPlatform: String /* "Rift" | "Quest" | "Mobile" | "Length" | "EOculusPlatformTarget_MAX" */
    open var OculusApplicationID: Array<String>
    open var OculusApplicationToken: Array<String>
    open var OculusReleaseChannel: Array<String>
    open var OculusReleaseNote: Array<String>
    open var OculusLaunchFilePath: Array<String>

    companion object {
        fun Load(ResourceName: String): OculusPlatformToolSettings
        fun Find(Outer: UObject, ResourceName: String): OculusPlatformToolSettings
        fun GetDefaultObject(): OculusPlatformToolSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): OculusPlatformToolSettings
        fun C(Other: UObject): OculusPlatformToolSettings
        fun C(Other: Any): OculusPlatformToolSettings
    }
}

external object ESteamVRTouchDPadMapping {
    var FaceButtons: String /* "FaceButtons" */
    var ThumbstickDirections: String /* "ThumbstickDirections" */
    var Disabled: String /* "Disabled" */
    var ESteamVRTouchDPadMapping_MAX: String /* "ESteamVRTouchDPadMapping_MAX" */
}

external open class SteamVRControllerLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SteamVRControllerLibrary
        fun Find(Outer: UObject, ResourceName: String): SteamVRControllerLibrary
        fun GetDefaultObject(): SteamVRControllerLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SteamVRControllerLibrary
        fun SetTouchDPadMapping(NewMapping: String /* "FaceButtons" | "ThumbstickDirections" | "Disabled" | "ESteamVRTouchDPadMapping_MAX" */)
        fun C(Other: UObject): SteamVRControllerLibrary
        fun C(Other: Any): SteamVRControllerLibrary
    }
}

external open class JavascriptPinParams {
    open var ContainerType: String /* "None" | "Array" | "Set" | "Map" | "EPinContainerType_MAX" */
    open var bIsReference: Boolean
    open var bIsConst: Boolean
    open var index: Number
    open fun clone(): JavascriptPinParams

    companion object {
        fun C(Other: UObject): JavascriptPinParams
        fun C(Other: Any): JavascriptPinParams
    }
}

external open class JavascriptGraphEdNode : EdGraphNode {
    constructor()
    constructor(Outer: UObject)
    open var BackgroundColor: SlateColor
    open var GraphNode: UObject
    open var IsTitleOnly: Boolean
    open var OnWidgetFinalized: UnrealEngineDelegate<() -> Unit>
    open var Bidirectional: Boolean
    open var PriorityOrder: Number
    open fun UpdateSlate()
    open fun SetVisible(bVisible: Boolean)
    open fun SetTitleSelectionMode(InTitleHeight: Number)
    open fun SetEnable(bEnable: Boolean)
    open fun ResetTitleSelectionMode()
    open fun RemovePinByName(PinName: String): Boolean
    open fun RemovePin(Pin: JavascriptEdGraphPin): Boolean
    open fun GetVisible(): Boolean
    open fun GetNumOfPins(Direction: String /* "EGPD_Input" | "EGPD_Output" | "EGPD_MAX" */): Number
    open fun GetDesiredSize(): Vector2D
    open fun CreatePin(Dir: String /* "EGPD_Input" | "EGPD_Output" | "EGPD_MAX" */, PinCategory: String, PinSubCategory: String, PinSubCategoryObject: UObject, PinName: String, PinToolTip: String, PinDisplayName: String, InPinParams: JavascriptPinParams): JavascriptEdGraphPin

    companion object {
        fun Load(ResourceName: String): JavascriptGraphEdNode
        fun Find(Outer: UObject, ResourceName: String): JavascriptGraphEdNode
        fun GetDefaultObject(): JavascriptGraphEdNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptGraphEdNode
        fun C(Other: UObject): JavascriptGraphEdNode
        fun C(Other: Any): JavascriptGraphEdNode
    }
}

external open class JavascriptSlateEdNode {
    open fun clone(): JavascriptSlateEdNode
    open fun AddPinToHoverSet(Pin: JavascriptEdGraphPin)
    open fun RemovePinFromHoverSet(Pin: JavascriptEdGraphPin)

    companion object {
        fun C(Other: UObject): JavascriptSlateEdNode
        fun C(Other: Any): JavascriptSlateEdNode
        fun AddPinToHoverSet(InSlateEdNode: JavascriptSlateEdNode, Pin: JavascriptEdGraphPin)
        fun RemovePinFromHoverSet(InSlateNode: JavascriptSlateEdNode, Pin: JavascriptEdGraphPin)
    }
}

external open class JavascriptPerformSecondPassLayoutContainer {
    open var PrevNode: EdGraphNode
    open var NextNode: EdGraphNode
    open var NodeIndex: Number
    open var MaxNodes: Number
    open fun clone(): JavascriptPerformSecondPassLayoutContainer

    companion object {
        fun C(Other: UObject): JavascriptPerformSecondPassLayoutContainer
        fun C(Other: Any): JavascriptPerformSecondPassLayoutContainer
    }
}

external open class JavascriptConnectionParams {
    open var WireColor: LinearColor
    open var AssociatedPin1: JavascriptEdGraphPin
    open var AssociatedPin2: JavascriptEdGraphPin
    open var WireThickness: Number
    open var bDrawBubbles: Boolean
    open var bUserFlag1: Boolean
    open var bUserFlag2: Boolean
    open var StartDirection: String /* "EGPD_Input" | "EGPD_Output" | "EGPD_MAX" */
    open var EndDirection: String /* "EGPD_Input" | "EGPD_Output" | "EGPD_MAX" */
    open fun clone(): JavascriptConnectionParams

    companion object {
        fun C(Other: UObject): JavascriptConnectionParams
        fun C(Other: Any): JavascriptConnectionParams
    }
}

external interface `T$198` {
    var Params: JavascriptConnectionParams
}

external open class JavascriptGraphConnectionDrawingPolicyContainer {
    open fun clone(): JavascriptGraphConnectionDrawingPolicyContainer
    open fun ApplyHoverDeemphasis(OutputPin: JavascriptEdGraphPin, InputPin: JavascriptEdGraphPin, Thickness: Number, WireColor: LinearColor)
    open fun DetermineWiringStyle(OutputPin: JavascriptEdGraphPin, InputPin: JavascriptEdGraphPin, Params: JavascriptConnectionParams = definedExternally): `T$198`
    open fun DrawConnection(A: Vector2D, B: Vector2D, Params: JavascriptConnectionParams)
    open fun DrawSplineWithArrow(StartAnchorPoint: Vector2D, EndAnchorPoint: Vector2D, Params: JavascriptConnectionParams)
    open fun GetHorveredPinNum(): Number
    open fun IsContainedHoveredPins(Pin: JavascriptEdGraphPin): Boolean
    open fun MakeRotatedBox(ArrowDrawPos: Vector2D, AngleInRadians: Number, WireColor: LinearColor)

    companion object {
        fun C(Other: UObject): JavascriptGraphConnectionDrawingPolicyContainer
        fun C(Other: Any): JavascriptGraphConnectionDrawingPolicyContainer
        fun ApplyHoverDeemphasis(Container: JavascriptGraphConnectionDrawingPolicyContainer, OutputPin: JavascriptEdGraphPin, InputPin: JavascriptEdGraphPin, Thickness: Number, WireColor: LinearColor)
        fun DetermineWiringStyle(Container: JavascriptGraphConnectionDrawingPolicyContainer, OutputPin: JavascriptEdGraphPin, InputPin: JavascriptEdGraphPin, Params: JavascriptConnectionParams = definedExternally): `T$198`
        fun DrawConnection(Container: JavascriptGraphConnectionDrawingPolicyContainer, A: Vector2D, B: Vector2D, Params: JavascriptConnectionParams)
        fun DrawSplineWithArrow(Container: JavascriptGraphConnectionDrawingPolicyContainer, StartAnchorPoint: Vector2D, EndAnchorPoint: Vector2D, Params: JavascriptConnectionParams)
        fun GetHorveredPinNum(Container: JavascriptGraphConnectionDrawingPolicyContainer): Number
        fun IsContainedHoveredPins(Container: JavascriptGraphConnectionDrawingPolicyContainer, Pin: JavascriptEdGraphPin): Boolean
        fun MakeRotatedBox(Container: JavascriptGraphConnectionDrawingPolicyContainer, ArrowDrawPos: Vector2D, AngleInRadians: Number, WireColor: LinearColor)
    }
}

external object EGraphSchemaGetStringQuery {
    var Description: String /* "Description" */
    var Title: String /* "Title" */
    var EGraphSchemaGetStringQuery_MAX: String /* "EGraphSchemaGetStringQuery_MAX" */
}

external open class JavascriptGraphMenuBuilder : JavascriptMenuBuilder {
    open var Graph: EdGraph
    open var GraphNode: EdGraphNode
    open var GraphPin: JavascriptEdGraphPin
    open var bIsDebugging: Boolean
    override fun clone(): JavascriptGraphMenuBuilder

    companion object {
        fun C(Other: UObject): JavascriptGraphMenuBuilder
        fun C(Other: Any): JavascriptGraphMenuBuilder
    }
}

external object ECanCreateConnectionResponse {
    var CONNECT_RESPONSE_MAKE: String /* "CONNECT_RESPONSE_MAKE" */
    var CONNECT_RESPONSE_DISALLOW: String /* "CONNECT_RESPONSE_DISALLOW" */
    var CONNECT_RESPONSE_BREAK_OTHERS_A: String /* "CONNECT_RESPONSE_BREAK_OTHERS_A" */
    var CONNECT_RESPONSE_BREAK_OTHERS_B: String /* "CONNECT_RESPONSE_BREAK_OTHERS_B" */
    var CONNECT_RESPONSE_BREAK_OTHERS_AB: String /* "CONNECT_RESPONSE_BREAK_OTHERS_AB" */
    var CONNECT_RESPONSE_MAKE_WITH_CONVERSION_NODE: String /* "CONNECT_RESPONSE_MAKE_WITH_CONVERSION_NODE" */
    var CONNECT_RESPONSE_MAX: String /* "CONNECT_RESPONSE_MAX" */
}

external open class JavascriptPinConnectionResponse {
    open var Message: String
    open var Response: String /* "CONNECT_RESPONSE_MAKE" | "CONNECT_RESPONSE_DISALLOW" | "CONNECT_RESPONSE_BREAK_OTHERS_A" | "CONNECT_RESPONSE_BREAK_OTHERS_B" | "CONNECT_RESPONSE_BREAK_OTHERS_AB" | "CONNECT_RESPONSE_MAKE_WITH_CONVERSION_NODE" | "CONNECT_RESPONSE_MAX" */
    open fun clone(): JavascriptPinConnectionResponse

    companion object {
        fun C(Other: UObject): JavascriptPinConnectionResponse
        fun C(Other: Any): JavascriptPinConnectionResponse
    }
}

external open class EdGraphSchemaAction {
    open var MenuDescription: String
    open var TooltipDescription: String
    open var Category: String
    open var Keywords: String
    open var Grouping: Number
    open var SectionID: Number
    open var MenuDescriptionArray: Array<String>
    open var FullSearchTitlesArray: Array<String>
    open var FullSearchKeywordsArray: Array<String>
    open var FullSearchCategoryArray: Array<String>
    open var LocalizedMenuDescriptionArray: Array<String>
    open var LocalizedFullSearchTitlesArray: Array<String>
    open var LocalizedFullSearchKeywordsArray: Array<String>
    open var LocalizedFullSearchCategoryArray: Array<String>
    open var SearchText: String
    open fun clone(): EdGraphSchemaAction

    companion object {
        fun C(Other: UObject): EdGraphSchemaAction
        fun C(Other: Any): EdGraphSchemaAction
    }
}

external open class PerformActionContext {
    open var ParentGraph: EdGraph
    open var FromPins: Array<JavascriptEdGraphPin>
    open var Location: Vector2D
    open var bSelectNewNode: Boolean
    open fun clone(): PerformActionContext

    companion object {
        fun C(Other: UObject): PerformActionContext
        fun C(Other: Any): PerformActionContext
    }
}

external open class JavascriptArrangedWidget {
    open fun clone(): JavascriptArrangedWidget

    companion object {
        fun C(Other: UObject): JavascriptArrangedWidget
        fun C(Other: Any): JavascriptArrangedWidget
    }
}

external open class JavascriptPinWidget {
    open fun clone(): JavascriptPinWidget

    companion object {
        fun C(Other: UObject): JavascriptPinWidget
        fun C(Other: Any): JavascriptPinWidget
    }
}

external open class JavascriptDetermineLinkGeometryContainer {
    open fun clone(): JavascriptDetermineLinkGeometryContainer
    open fun FindPinGeometries(PinWidget: JavascriptPinWidget): JavascriptArrangedWidget
    open fun FindPinToPinWidgetMap(Pin: JavascriptEdGraphPin): JavascriptPinWidget
    open fun GetArrangedNodes(UNode: EdGraphNode): JavascriptArrangedWidget
    open fun GetOutputPinWidget(): JavascriptPinWidget

    companion object {
        fun C(Other: UObject): JavascriptDetermineLinkGeometryContainer
        fun C(Other: Any): JavascriptDetermineLinkGeometryContainer
        fun FindPinGeometries(Container: JavascriptDetermineLinkGeometryContainer, PinWidget: JavascriptPinWidget): JavascriptArrangedWidget
        fun FindPinToPinWidgetMap(Container: JavascriptDetermineLinkGeometryContainer, Pin: JavascriptEdGraphPin): JavascriptPinWidget
        fun GetArrangedNodes(Container: JavascriptDetermineLinkGeometryContainer, UNode: EdGraphNode): JavascriptArrangedWidget
        fun GetOutputPinWidget(Container: JavascriptDetermineLinkGeometryContainer): JavascriptPinWidget
    }
}

external open class JavascriptGraphAssetGraphSchema : EdGraphSchema {
    constructor()
    constructor(Outer: UObject)
    open var OnGetPinColor: UnrealEngineDelegate<(bHovered: Boolean, Pin: JavascriptEdGraphPin) -> SlateColor>
    open var OnGetDefaultValueVisibility: UnrealEngineDelegate<(Pin: JavascriptEdGraphPin) -> Boolean>
    open var OnGetSlateBrushName: UnrealEngineDelegate<(bHovered: Boolean, Pin: JavascriptEdGraphPin) -> String>
    open var OnPinConnectionListChanged: UnrealEngineDelegate<(Pin: JavascriptEdGraphPin) -> Unit>
    open var OnTryCreateConnection: UnrealEngineDelegate<(PinA: JavascriptEdGraphPin, PinB: JavascriptEdGraphPin) -> Unit>
    open var OnMouseEnter: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode, SlateEdNode: JavascriptSlateEdNode, UPointerEvent: UPointerEvent) -> Unit>
    open var OnMouseLeave: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode, SlateEdNode: JavascriptSlateEdNode, UPointerEvent: UPointerEvent) -> Unit>
    open var OnMouseMove: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode, Delta: Vector2D, bUserIsDragging: Boolean, MouseZone: Number, UPointerEvent: UPointerEvent) -> Boolean>
    open var OnMouseButtonDown: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode, MyGeometry: Geometry, UPointerEvent: UPointerEvent) -> Boolean>
    open var OnMouseButtonUp: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode, MyGeometry: Geometry, UPointerEvent: UPointerEvent) -> Boolean>
    open var OnPerformSecondPassLayout: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode) -> JavascriptPerformSecondPassLayoutContainer>
    open var OnRequiresSecondPassLayout: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode) -> Boolean>
    open var OnMoveTo: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode, NewPosition: Vector2D) -> Boolean>
    open var OnTakeContentWidget: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode, OutLeftNodeBoxWidget: JavascriptSlateWidget, OutRightNodeBoxWidget: JavascriptSlateWidget) -> JavascriptSlateWidget>
    open var OnGetValueWidget: UnrealEngineDelegate<(Pin: JavascriptEdGraphPin) -> JavascriptSlateWidget>
    open var OnGetActualPinWidget: UnrealEngineDelegate<(Pin: JavascriptEdGraphPin) -> JavascriptSlateWidget>
    open var OnGetPinStatusIndicator: UnrealEngineDelegate<(Pin: JavascriptEdGraphPin) -> JavascriptSlateWidget>
    open var OnDisableMakePins: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode) -> Boolean>
    open var OnUsingDefaultPin: UnrealEngineDelegate<(Pin: JavascriptEdGraphPin) -> Boolean>
    open var OnGetPinLabelVisibility: UnrealEngineDelegate<(Pin: JavascriptEdGraphPin) -> Boolean>
    open var OnUsingAlternativeInputPinBox: UnrealEngineDelegate<(Pin: JavascriptEdGraphPin) -> Boolean>
    open var OnUsingAlternativeOutputPinBox: UnrealEngineDelegate<(Pin: JavascriptEdGraphPin) -> Boolean>
    open var OnUsingNodeWidgetMap: UnrealEngineDelegate<() -> Boolean>
    open var OnDetermineWiringStyle: UnrealEngineDelegate<(A: JavascriptEdGraphPin, B: JavascriptEdGraphPin, Params: JavascriptConnectionParams, Container: JavascriptGraphConnectionDrawingPolicyContainer) -> Unit>
    open var OnComputeSplineTangent: UnrealEngineDelegate<(A: Vector2D, B: Vector2D) -> Vector2D>
    open var OnDrawSplineWithArrow: UnrealEngineDelegate<(A: Vector2D, B: Vector2D, Params: JavascriptConnectionParams, Container: JavascriptGraphConnectionDrawingPolicyContainer, ArrowRadius: Vector2D) -> Boolean>
    open var OnDrawSplineWithArrow_Geom: UnrealEngineDelegate<(A: Geometry, B: Geometry, Params: JavascriptConnectionParams, Container: JavascriptGraphConnectionDrawingPolicyContainer) -> Boolean>
    open var OnDrawPreviewConnector: UnrealEngineDelegate<(PinGeometry: Geometry, StartPoint: Vector2D, Endpoint: Vector2D, Pin: JavascriptEdGraphPin, Params: JavascriptConnectionParams, Container: JavascriptGraphConnectionDrawingPolicyContainer) -> Boolean>
    open var OnTakeUserWidget: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode) -> JavascriptSlateWidget>
    open var OnTakeTitleAreaWidget: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode) -> JavascriptSlateWidget>
    open var OnTakeErrorReportingWidget: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode) -> JavascriptSlateWidget>
    open var OnGetString: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode, Query: String /* "Description" | "Title" | "EGraphSchemaGetStringQuery_MAX" */) -> String>
    open var OnBuildMenu: UnrealEngineDelegate<(Builder: JavascriptGraphMenuBuilder) -> Unit>
    open var OnAllocateDefaultPins: UnrealEngineDelegate<(UNode: JavascriptGraphEdNode) -> Unit>
    open var OnCreatePin: UnrealEngineDelegate<(Pin: JavascriptEdGraphPin) -> JavascriptSlateWidget>
    open var OnCanCreateConnection: UnrealEngineDelegate<(A: JavascriptEdGraphPin, B: JavascriptEdGraphPin) -> JavascriptPinConnectionResponse>
    open var OnPerformAction: UnrealEngineDelegate<(Action: EdGraphSchemaAction, Context: PerformActionContext) -> EdGraphNode>
    open var OnContextActions: UnrealEngineDelegate<(FromPin: JavascriptEdGraphPin) -> Array<EdGraphSchemaAction>>
    open var OnNodeConnectionListChanged: UnrealEngineDelegate<(UNode: JavascriptGraphEdNode) -> Unit>
    open var OnCreateAutomaticConversionNodeAndConnections: UnrealEngineDelegate<(A: JavascriptEdGraphPin, B: JavascriptEdGraphPin) -> Boolean>
    open var OnDetermineLinkGeometry: UnrealEngineDelegate<(OutPin: JavascriptEdGraphPin, InputPin: JavascriptEdGraphPin, StartWidgetGeometry: JavascriptArrangedWidget, EndWidgetGeometry: JavascriptArrangedWidget, Container: JavascriptDetermineLinkGeometryContainer) -> Boolean>
    open var OnIsNodeComment: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode) -> Boolean>
    open var OnEndUserInteraction: UnrealEngineDelegate<(UNode: JavascriptGraphEdNode) -> Unit>
    open var OnCreateOutputSideAddButton: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode) -> Boolean>
    open var OnAddPinByAddButton: UnrealEngineDelegate<(UNode: JavascriptGraphEdNode) -> Unit>
    open var OnShouldAlwaysPurgeOnModification: UnrealEngineDelegate<() -> Boolean>
    open var OnDragEnter: UnrealEngineDelegate<(Target: JavascriptGraphEdNode, Capture: JavascriptGraphEdNode, MyGeometry: Geometry) -> Boolean>
    open var OnDragLeave: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode) -> Boolean>
    open var OnDragOver: UnrealEngineDelegate<(Target: JavascriptGraphEdNode, Capture: JavascriptGraphEdNode, MyGeometry: Geometry) -> Boolean>
    open var OnDrop: UnrealEngineDelegate<(Target: JavascriptGraphEdNode, Capture: JavascriptGraphEdNode, MyGeometry: Geometry) -> Boolean>
    open fun BreakSinglePinLink(SourcePin: JavascriptEdGraphPin, TargetPin: JavascriptEdGraphPin)
    open fun BreakPinLinks(TargetPin: JavascriptEdGraphPin, bSendsNodeNotifcation: Boolean)
    open fun BreakNodeLinks(TargetNode: EdGraphNode)

    companion object {
        fun Load(ResourceName: String): JavascriptGraphAssetGraphSchema
        fun Find(Outer: UObject, ResourceName: String): JavascriptGraphAssetGraphSchema
        fun GetDefaultObject(): JavascriptGraphAssetGraphSchema
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptGraphAssetGraphSchema
        fun C(Other: UObject): JavascriptGraphAssetGraphSchema
        fun C(Other: Any): JavascriptGraphAssetGraphSchema
    }
}

external interface `T$199` {
    var Creator: JavascriptNodeCreator
}

external open class JavascriptNodeCreator {
    open var UNode: JavascriptGraphEdNode
    open fun clone(): JavascriptNodeCreator
    open fun Finalize(): `T$199`

    companion object {
        fun C(Other: UObject): JavascriptNodeCreator
        fun C(Other: Any): JavascriptNodeCreator
        fun Finalize(Creator: JavascriptNodeCreator = definedExternally): `T$199`
    }
}

external open class JavascriptGraphEdGraph : EdGraph {
    constructor()
    constructor(Outer: UObject)
    open fun RebuildGenericGraph()
    open fun CreateEmptyNode(): JavascriptGraphEdNode
    open fun NodeCreator(bSelectNewNode: Boolean): JavascriptNodeCreator

    companion object {
        fun Load(ResourceName: String): JavascriptGraphEdGraph
        fun Find(Outer: UObject, ResourceName: String): JavascriptGraphEdGraph
        fun GetDefaultObject(): JavascriptGraphEdGraph
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptGraphEdGraph
        fun C(Other: UObject): JavascriptGraphEdGraph
        fun C(Other: Any): JavascriptGraphEdGraph
        fun CreateEmptyNode(Graph: JavascriptGraphEdGraph): JavascriptGraphEdNode
        fun NodeCreator(Graph: JavascriptGraphEdGraph, bSelectNewNode: Boolean): JavascriptNodeCreator
    }
}

external open class JavascriptGraphEditorLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): JavascriptGraphEditorLibrary
        fun Find(Outer: UObject, ResourceName: String): JavascriptGraphEditorLibrary
        fun GetDefaultObject(): JavascriptGraphEditorLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptGraphEditorLibrary
        fun TryConnection(Schema: EdGraphSchema, A: JavascriptEdGraphPin, B: JavascriptEdGraphPin)
        fun SetPinType(Pin: JavascriptEdGraphPin, PinType: EdGraphPinType)
        fun SetPinInfo(A: JavascriptEdGraphPin, InPinName: String, InPinToolTip: String)
        fun SetPinHidden(A: JavascriptEdGraphPin, bHidden: Boolean)
        fun SetParentPin(A: JavascriptEdGraphPin, Parent: JavascriptEdGraphPin)
        fun SetNodeMetaData(Schema: EdGraphSchema, UNode: EdGraphNode, KeyValue: String): Boolean
        fun ResizeNode(UNode: EdGraphNode, NewSize: Vector2D)
        fun RemovePinFromHoverSet(InSlateNode: JavascriptSlateEdNode, Pin: JavascriptEdGraphPin)
        fun NodeCreator(Graph: JavascriptGraphEdGraph, bSelectNewNode: Boolean): JavascriptNodeCreator
        fun MakeRotatedBox(Container: JavascriptGraphConnectionDrawingPolicyContainer, ArrowDrawPos: Vector2D, AngleInRadians: Number, WireColor: LinearColor)
        fun MakeLinkTo(A: JavascriptEdGraphPin, B: JavascriptEdGraphPin)
        fun IsValid(A: JavascriptEdGraphPin): Boolean
        fun IsPinHidden(A: JavascriptEdGraphPin): Boolean
        fun IsContainedHoveredPins(Container: JavascriptGraphConnectionDrawingPolicyContainer, Pin: JavascriptEdGraphPin): Boolean
        fun GetSubPins(A: JavascriptEdGraphPin): Array<JavascriptEdGraphPin>
        fun GetPinType(A: JavascriptEdGraphPin): EdGraphPinType
        fun GetPins(UNode: EdGraphNode): Array<JavascriptEdGraphPin>
        fun GetPinName(A: JavascriptEdGraphPin): String
        fun GetPinIndex(A: JavascriptEdGraphPin): Number
        fun GetPinGUID(A: JavascriptEdGraphPin): Guid
        fun GetPinContainerType(A: JavascriptEdGraphPin): String /* "None" | "Array" | "Set" | "Map" | "EJavascriptPinContainerType_MAX" */
        fun GetParentPin(A: JavascriptEdGraphPin): JavascriptEdGraphPin
        fun GetOwningNode(A: JavascriptEdGraphPin): EdGraphNode
        fun GetOutputPinWidget(Container: JavascriptDetermineLinkGeometryContainer): JavascriptPinWidget
        fun GetLinkedTo(A: JavascriptEdGraphPin): Array<JavascriptEdGraphPin>
        fun GetLinkedPinNum(A: JavascriptEdGraphPin): Number
        fun GetHorveredPinNum(Container: JavascriptGraphConnectionDrawingPolicyContainer): Number
        fun GetDirection(A: JavascriptEdGraphPin): String /* "EGPD_Input" | "EGPD_Output" | "EGPD_MAX" */
        fun GetDefaultObject(): JavascriptEdGraphPin
        fun GetArrangedNodes(Container: JavascriptDetermineLinkGeometryContainer, UNode: EdGraphNode): JavascriptArrangedWidget
        fun FindPinToPinWidgetMap(Container: JavascriptDetermineLinkGeometryContainer, Pin: JavascriptEdGraphPin): JavascriptPinWidget
        fun FindPinGeometries(Container: JavascriptDetermineLinkGeometryContainer, PinWidget: JavascriptPinWidget): JavascriptArrangedWidget
        fun FindPin(UNode: EdGraphNode, PinName: String, Direction: String /* "EGPD_Input" | "EGPD_Output" | "EGPD_MAX" */): JavascriptEdGraphPin
        fun FindClosestPointOnGeom(Geom: Geometry, TestPoint: Vector2D): Vector2D
        fun Finalize(Creator: JavascriptNodeCreator = definedExternally): `T$199`
        fun DrawSplineWithArrow(Container: JavascriptGraphConnectionDrawingPolicyContainer, StartAnchorPoint: Vector2D, EndAnchorPoint: Vector2D, Params: JavascriptConnectionParams)
        fun DrawConnection(Container: JavascriptGraphConnectionDrawingPolicyContainer, A: Vector2D, B: Vector2D, Params: JavascriptConnectionParams)
        fun DetermineWiringStyle(Container: JavascriptGraphConnectionDrawingPolicyContainer, OutputPin: JavascriptEdGraphPin, InputPin: JavascriptEdGraphPin, Params: JavascriptConnectionParams = definedExternally): `T$198`
        fun DestroyNode(UNode: EdGraphNode)
        fun CreateEmptyNode(Graph: JavascriptGraphEdGraph): JavascriptGraphEdNode
        fun CenterOf(Geom: Geometry): Vector2D
        fun CanUserDeleteNode(UNode: EdGraphNode): Boolean
        fun CanDuplicateNode(UNode: EdGraphNode): Boolean
        fun BreakLinkTo(A: JavascriptEdGraphPin, B: JavascriptEdGraphPin)
        fun BreakAllPinLinks(A: JavascriptEdGraphPin)
        fun AutowireNewNode(UNode: EdGraphNode, FromPin: JavascriptEdGraphPin)
        fun ApplyHoverDeemphasis(Container: JavascriptGraphConnectionDrawingPolicyContainer, OutputPin: JavascriptEdGraphPin, InputPin: JavascriptEdGraphPin, Thickness: Number, WireColor: LinearColor)
        fun AddPinToHoverSet(InSlateEdNode: JavascriptSlateEdNode, Pin: JavascriptEdGraphPin)
        fun C(Other: UObject): JavascriptGraphEditorLibrary
        fun C(Other: Any): JavascriptGraphEditorLibrary
    }
}

external open class JavascriptGraphAppearanceInfo {
    open var CornerImage: SlateBrush
    open var CornerText: String
    open var PIENotifyText: String
    open var ReadOnlyText: String
    open var InstructionText: String
    open fun clone(): JavascriptGraphAppearanceInfo

    companion object {
        fun C(Other: UObject): JavascriptGraphAppearanceInfo
        fun C(Other: Any): JavascriptGraphAppearanceInfo
    }
}

external interface `T$200` {
    var OutLocation: Vector2D
    var OutZoomAmount: Number
}

external open class JavascriptGraphEditorWidget : Widget {
    constructor()
    constructor(Outer: UObject)
    open var EdGraph: JavascriptGraphEdGraph
    open var OnNodeDoubleClicked: UnrealEngineDelegate<(UNode: EdGraphNode) -> Unit>
    open var OnDropActor: UnrealEngineDelegate<(Actors: Array<Actor>, Graph: EdGraph, Point: Vector2D) -> Unit>
    open var OnDisallowedPinConnection: UnrealEngineDelegate<(A: JavascriptEdGraphPin, B: JavascriptEdGraphPin) -> Unit>
    open var OnSelectedNodesChanged: UnrealEngineDelegate<(Set: Array<UObject>) -> Unit>
    open var AppearanceInfo: JavascriptGraphAppearanceInfo
    open var CommandList: JavascriptUICommandList
    open fun SetViewLocation(Location: Vector2D, ZoomAmount: Number)
    open fun SetNodeSelection(UNode: EdGraphNode, bSelect: Boolean)
    open fun SetGraph(InEdGraph: JavascriptGraphEdGraph)
    open fun SelectAllNodes()
    open fun JumpToPin(JumpToMe: JavascriptEdGraphPin)
    open fun JumpToNode(JumpToMe: EdGraphNode, bRequestRename: Boolean, bSelectNode: Boolean)
    open fun GetViewLocation(OutLocation: Vector2D = definedExternally, OutZoomAmount: Number = definedExternally): `T$200`
    open fun GetSelectedNodes(): Array<UObject>
    open fun GetPasteLocation(): Vector2D
    open fun ClearSelectionSet()

    companion object {
        fun Load(ResourceName: String): JavascriptGraphEditorWidget
        fun Find(Outer: UObject, ResourceName: String): JavascriptGraphEditorWidget
        fun GetDefaultObject(): JavascriptGraphEditorWidget
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptGraphEditorWidget
        fun NewGraph(ParentScope: UObject): JavascriptGraphEdGraph
        fun C(Other: UObject): JavascriptGraphEditorWidget
        fun C(Other: Any): JavascriptGraphEditorWidget
    }
}

external open class JavascriptGraphEdNodeWidget : Widget {
    constructor()
    constructor(Outer: UObject)
    open var EdNode: JavascriptGraphEdNode
    open fun SetNode(InEdNode: JavascriptGraphEdNode)

    companion object {
        fun Load(ResourceName: String): JavascriptGraphEdNodeWidget
        fun Find(Outer: UObject, ResourceName: String): JavascriptGraphEdNodeWidget
        fun GetDefaultObject(): JavascriptGraphEdNodeWidget
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptGraphEdNodeWidget
        fun C(Other: UObject): JavascriptGraphEdNodeWidget
        fun C(Other: Any): JavascriptGraphEdNodeWidget
    }
}

external open class JavascriptTextProperty {
    open var Key: String
    open var Namespace: String
    open var Value: String
    open var TableId: String
    open fun clone(): JavascriptTextProperty

    companion object {
        fun C(Other: UObject): JavascriptTextProperty
        fun C(Other: Any): JavascriptTextProperty
    }
}

external open class JavascriptGraphTextPropertyEditableTextBox : Widget {
    constructor()
    constructor(Outer: UObject)
    open var OnGetGraphPin: UnrealEngineDelegate<() -> JavascriptEdGraphPin>
    open var OnGetDefaultValue: UnrealEngineDelegate<() -> JavascriptTextProperty>
    open var OnTextCommitted: UnrealEngineMulticastDelegate<(TextProperty: JavascriptTextProperty) -> Unit>
    open var WidgetStyle: EditableTextBoxStyle
    open var WrapTextAt: Number
    open var AutoWrapText: Boolean

    companion object {
        fun Load(ResourceName: String): JavascriptGraphTextPropertyEditableTextBox
        fun Find(Outer: UObject, ResourceName: String): JavascriptGraphTextPropertyEditableTextBox
        fun GetDefaultObject(): JavascriptGraphTextPropertyEditableTextBox
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptGraphTextPropertyEditableTextBox
        fun C(Other: UObject): JavascriptGraphTextPropertyEditableTextBox
        fun C(Other: Any): JavascriptGraphTextPropertyEditableTextBox
    }
}

external object EJavasriptTabActivationCause {
    var UserClickedOnTab: String /* "UserClickedOnTab" */
    var SetDirectly: String /* "SetDirectly" */
    var EJavasriptTabActivationCause_MAX: String /* "EJavasriptTabActivationCause_MAX" */
}

external open class JavascriptWorkspaceItem {
    open fun clone(): JavascriptWorkspaceItem
    open fun AddGroup(DisplayName: String): JavascriptWorkspaceItem

    companion object {
        fun C(Other: UObject): JavascriptWorkspaceItem
        fun C(Other: Any): JavascriptWorkspaceItem
        fun AddGroup(Parent: JavascriptWorkspaceItem, DisplayName: String): JavascriptWorkspaceItem
        fun GetGroup(Name: String): JavascriptWorkspaceItem
    }
}

external object EJavascriptTabRole {
    var MajorTab: String /* "MajorTab" */
    var PanelTab: String /* "PanelTab" */
    var NomadTab: String /* "NomadTab" */
    var DocumentTab: String /* "DocumentTab" */
    var EJavascriptTabRole_MAX: String /* "EJavascriptTabRole_MAX" */
}

external open class JavascriptEditorTab : UObject {
    constructor()
    constructor(Outer: UObject)
    open var OnSpawnTab: UnrealEngineDelegate<(Context: UObject) -> Widget>
    open var OnCloseTab: UnrealEngineDelegate<(Widget: Widget) -> Unit>
    open var OnTabActivatedCallback: UnrealEngineDelegate<(TabId: String, Cause: String /* "UserClickedOnTab" | "SetDirectly" | "EJavasriptTabActivationCause_MAX" */) -> Unit>
    open var Group: JavascriptWorkspaceItem
    open var TabId: String
    open var DisplayName: String
    open var bIsNomad: Boolean
    open var Role: String /* "MajorTab" | "PanelTab" | "NomadTab" | "DocumentTab" | "EJavascriptTabRole_MAX" */
    open fun ForceCommit()
    open fun Discard()
    open fun Commit()
    open fun CloseTab(Widget: Widget)

    companion object {
        fun Load(ResourceName: String): JavascriptEditorTab
        fun Find(Outer: UObject, ResourceName: String): JavascriptEditorTab
        fun GetDefaultObject(): JavascriptEditorTab
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptEditorTab
        fun C(Other: UObject): JavascriptEditorTab
        fun C(Other: Any): JavascriptEditorTab
    }
}

external open class JavascriptMenuExtension {
    open var ExtensionHook: String
    open var HookPosition: String /* "Before" | "After" | "First" | "EJavascriptExtensionHook_MAX" */
    open fun clone(): JavascriptMenuExtension

    companion object {
        fun C(Other: UObject): JavascriptMenuExtension
        fun C(Other: Any): JavascriptMenuExtension
    }
}

external open class JavascriptUIExtender : UObject {
    constructor()
    constructor(Outer: UObject)
    open var MenuExtensions: Array<JavascriptMenuExtension>
    open var ToolbarExtensions: Array<JavascriptMenuExtension>
    open var OnHook: UnrealEngineDelegate<(Hook: String) -> Unit>

    companion object {
        fun Load(ResourceName: String): JavascriptUIExtender
        fun Find(Outer: UObject, ResourceName: String): JavascriptUIExtender
        fun GetDefaultObject(): JavascriptUIExtender
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptUIExtender
        fun GetTopCommandList(): JavascriptUICommandList
        fun EndSection()
        fun Bind(Commands: JavascriptUICommands)
        fun BeginSection(Name: String, text: String)
        fun AddToolBarButton(Commands: JavascriptUICommands, ID: String)
        fun AddMenuSeparator()
        fun AddMenuEntry(Commands: JavascriptUICommands, ID: String)
        fun C(Other: UObject): JavascriptUIExtender
        fun C(Other: Any): JavascriptUIExtender
    }
}

external open class JavascriptAssetEditorToolkit : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ToolkitFName: String
    open var Layout: String
    open var BaseToolkitName: String
    open var ToolkitName: String
    open var WorldCentricTabColorScale: LinearColor
    open var WorldCentricTabPrefix: String
    open var Tabs: Array<JavascriptEditorTab>
    open var Commands: JavascriptUICommands
    open var MenuExtender: JavascriptUIExtender
    open var ToolbarExtender: JavascriptUIExtender
    open var TestArray: Array<Number>
    open fun Refresh()
    open fun Discard()
    open fun Commit()

    companion object {
        fun Load(ResourceName: String): JavascriptAssetEditorToolkit
        fun Find(Outer: UObject, ResourceName: String): JavascriptAssetEditorToolkit
        fun GetDefaultObject(): JavascriptAssetEditorToolkit
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptAssetEditorToolkit
        fun C(Other: UObject): JavascriptAssetEditorToolkit
        fun C(Other: Any): JavascriptAssetEditorToolkit
    }
}

external open class JavascriptAssetPicker : Widget {
    constructor()
    constructor(Outer: UObject)
    open var OnGetDefaultValue: UnrealEngineDelegate<() -> UObject>
    open var OnSetDefaultValue: UnrealEngineDelegate<(Value: String) -> Unit>
    open var CategoryObject: UObject
    open var AllowedClasses: String
    open fun SetCategoryObject(InCategoryObject: UObject)
    open fun SetAllowedClasses(InAllowedClasses: String)

    companion object {
        fun Load(ResourceName: String): JavascriptAssetPicker
        fun Find(Outer: UObject, ResourceName: String): JavascriptAssetPicker
        fun GetDefaultObject(): JavascriptAssetPicker
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptAssetPicker
        fun C(Other: UObject): JavascriptAssetPicker
        fun C(Other: Any): JavascriptAssetPicker
    }
}

external open class JavascriptAssetTypeActions : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ActionsName: String
    open var Color: Color
    open var SupportedClass: UnrealEngineClass
    open var Editor: JavascriptAssetEditorToolkit
    open var Actions: JavascriptUIExtender
    open fun Refresh()
    open fun Discard()
    open fun Commit()

    companion object {
        fun Load(ResourceName: String): JavascriptAssetTypeActions
        fun Find(Outer: UObject, ResourceName: String): JavascriptAssetTypeActions
        fun GetDefaultObject(): JavascriptAssetTypeActions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptAssetTypeActions
        fun C(Other: UObject): JavascriptAssetTypeActions
        fun C(Other: Any): JavascriptAssetTypeActions
    }
}

external open class JavascriptColorPicker : Widget {
    constructor()
    constructor(Outer: UObject)
    open var OnColorChanged: UnrealEngineMulticastDelegate<(Color: LinearColor) -> Unit>
    open var SelectedColor: LinearColor

    companion object {
        fun Load(ResourceName: String): JavascriptColorPicker
        fun Find(Outer: UObject, ResourceName: String): JavascriptColorPicker
        fun GetDefaultObject(): JavascriptColorPicker
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptColorPicker
        fun C(Other: UObject): JavascriptColorPicker
        fun C(Other: Any): JavascriptColorPicker
    }
}

external open class JavascriptCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)
    open var CmdLineTokens: Array<String>
    open var CmdLineSwitches: Array<String>

    companion object {
        fun Load(ResourceName: String): JavascriptCommandlet
        fun Find(Outer: UObject, ResourceName: String): JavascriptCommandlet
        fun GetDefaultObject(): JavascriptCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptCommandlet
        fun C(Other: UObject): JavascriptCommandlet
        fun C(Other: Any): JavascriptCommandlet
    }
}

external open class JavascriptCurveTableEditor : Widget {
    constructor()
    constructor(Outer: UObject)
    open fun SetObject(UObject: CurveTable, bForceRefresh: Boolean)
    open fun Destruct()
    open fun Construct()

    companion object {
        fun Load(ResourceName: String): JavascriptCurveTableEditor
        fun Find(Outer: UObject, ResourceName: String): JavascriptCurveTableEditor
        fun GetDefaultObject(): JavascriptCurveTableEditor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptCurveTableEditor
        fun C(Other: UObject): JavascriptCurveTableEditor
        fun C(Other: Any): JavascriptCurveTableEditor
    }
}

external interface `T$201` {
    var Surfaces: Array<Number>
}

external interface `T$202` {
    var Out: String
    var `$`: Boolean
}

external open class JavascriptEditorEngineLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): JavascriptEditorEngineLibrary
        fun Find(Outer: UObject, ResourceName: String): JavascriptEditorEngineLibrary
        fun GetDefaultObject(): JavascriptEditorEngineLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptEditorEngineLibrary
        fun SetMaterial(Engine: EditorEngine, InModel: Model, Material: MaterialInterface, Surfaces: Array<Number>)
        fun SelectNone(Engine: EditorEngine, bNoteSelectionChange: Boolean, bDeselectBSPSurfs: Boolean, WarnAboutManyActors: Boolean)
        fun SelectGroup(Engine: EditorEngine, InGroupActor: GroupActor, bForceSelection: Boolean, bInSelected: Boolean, bNotify: Boolean)
        fun SelectComponent(Engine: EditorEngine, Component: ActorComponent, bInSelected: Boolean, bNotify: Boolean, bSelectEvenIfHidden: Boolean)
        fun SelectActor(Engine: EditorEngine, Actor: Actor, bInSelected: Boolean, bNotify: Boolean, bSelectEvenIfHidden: Boolean, bForceRefresh: Boolean)
        fun RedrawAllViewports(Engine: EditorEngine, bInvalidateHitProxies: Boolean)
        fun RebuildStaticNavigableGeometry(Engine: EditorEngine, Level: Level)
        fun RebuildLevel(Engine: EditorEngine, Level: Level)
        fun GetSurfaces(Brush: Brush, Surfaces: Array<Number> = definedExternally): `T$201`
        fun GetSelectedSet(Engine: EditorEngine, Class: UnrealEngineClass): USelection
        fun GetSelectedObjects(Engine: EditorEngine): USelection
        fun GetSelectedComponents(Engine: EditorEngine): USelection
        fun GetPIEWorld(Engine: Engine): World
        fun GetLongPackagePath(InPackage: Package): String
        fun GetEditorWorld(Engine: Engine): World
        fun FindBrushBuilder(Engine: EditorEngine, BrushBuilderClass: UnrealEngineClass): BrushBuilder
        fun Exec(Engine: EditorEngine, InWorld: World, Command: String, Out: String = definedExternally): `T$202`
        fun DuplicateAsset(AssetName: String, PackagePath: String, OriginalObject: UObject): UObject
        fun DeleteObjectsUnchecked(ObjectsToDelete: Array<UObject>): Number
        fun CanSelectActor(Engine: EditorEngine, Actor: Actor, bInSelected: Boolean, bSelectEvenIfHidden: Boolean, bWarnIfLevelLocked: Boolean): Boolean
        fun bspBrushCSG(Engine: EditorEngine, Actor: Brush, Model: Model, PolyFlags: Number, BrushType: String /* "Brush_Default" | "Brush_Add" | "Brush_Subtract" | "Brush_MAX" */, CSGOper: String /* "CSG_Active" | "CSG_Add" | "CSG_Subtract" | "CSG_Intersect" | "CSG_Deintersect" | "CSG_None" | "CSG_MAX" */, bBuildBounds: Boolean, bMergePolys: Boolean, bReplaceNULLMaterialRefs: Boolean, bShowProgressBar: Boolean): Number
        fun C(Other: UObject): JavascriptEditorEngineLibrary
        fun C(Other: Any): JavascriptEditorEngineLibrary
    }
}

external interface `T$203` {
    var OutArray: Array<String>
}

external interface `T$204` {
    var OutValue: String
    var `$`: Boolean
}

external interface `T$205` {
    var OutArray: Array<String>
}

external open class JavascriptAssetData {
    open var ObjectPath: String
    open var PackageName: String
    open var PackagePath: String
    open var AssetName: String
    open var AssetClass: String
    open var ChunkIDs: Array<Number>
    open var PackageFlags: Number
    open fun clone(): JavascriptAssetData
    open fun GetAllTags(OutArray: Array<String> = definedExternally): `T$203`
    open fun GetAsset(): UObject
    open fun GetClass(): UnrealEngineClass
    open fun GetPackage(): Package
    open fun GetTagValue(Name: String, OutValue: String = definedExternally): `T$204`
    open fun IsAssetLoaded(): Boolean

    companion object {
        fun C(Other: UObject): JavascriptAssetData
        fun C(Other: Any): JavascriptAssetData
        fun GetAllTags(AssetData: JavascriptAssetData, OutArray: Array<String> = definedExternally): `T$205`
        fun GetAsset(AssetData: JavascriptAssetData): UObject
        fun GetClass(AssetData: JavascriptAssetData): UnrealEngineClass
        fun GetPackage(AssetData: JavascriptAssetData): Package
        fun GetTagValue(AssetData: JavascriptAssetData, Name: String, OutValue: String = definedExternally): `T$204`
        fun IsAssetLoaded(AssetData: JavascriptAssetData): Boolean
    }
}

external open class JavascriptEditorGlobalDelegates : UObject {
    constructor()
    constructor(Outer: UObject)
    open fun WorldChange()
    open fun UnbindAll()
    open fun Unbind(Key: String)
    open fun SurfProps()
    open fun SingleStepPIE(bIsSimulating: Boolean)
    open fun SelectedProps()
    open fun ResumePIE(bIsSimulating: Boolean)
    open fun RefreshPrimitiveStatsBrowser()
    open fun RefreshLayerBrowser()
    open fun RefreshEditor()
    open fun RefreshAllBrowsers()
    open fun RedrawAllViewports()
    open fun PropertySelectionChange()
    open fun PreSaveWorld_Friendly(SaveFlags: Number, World: World)
    open fun PreBeginPIE(bIsSimulating: Boolean)
    open fun PostSaveWorld_Friendly(SaveFlags: Number, World: World, bSuccess: Boolean)
    open fun PostLandscapeLayerUpdated()
    open fun OnShutdownPostPackagesSaved()
    open fun OnPathRemoved(Path: String)
    open fun OnPathAdded(Path: String)
    open fun OnObjectReimported(UObject: UObject)
    open fun OnNewAssetCreated(InFactory: Factory)
    open fun OnNewActorsDropped(DroppedObjects: Array<UObject>, OutNewActors: Array<Actor>)
    open fun OnMapOpened(Filename: String, bAsTemplate: Boolean)
    open fun OnLightingBuildStarted()
    open fun OnLightingBuildKept()
    open fun OnInMemoryAssetDeleted(InObject: UObject)
    open fun OnInMemoryAssetCreated(InObject: UObject)
    open fun OnGridSnappingChanged(bGridEnabled: Boolean, GridSize: Number)
    open fun OnFocusViewportOnActors(Actors: Array<Actor>)
    open fun OnFinishPickingBlueprintClass(InClass: UnrealEngineClass)
    open fun OnFilesLoaded()
    open fun OnFileLoadProgressUpdated_Friendly(NumTotalAssets: Number, NumAssetsProcessedByAssetRegistry: Number, NumAssetsPendingDataLoad: Number, bIsDiscoveringAssetFiles: Boolean)
    open fun OnEditorCameraMoved(ViewLocation: Vector, ViewRotation: Rotator, ViewportType: String /* "LVT_OrthoXY" | "LVT_OrthoXZ" | "LVT_OrthoYZ" | "LVT_Perspective" | "LVT_OrthoFreelook" | "LVT_OrthoNegativeXY" | "LVT_OrthoNegativeXZ" | "LVT_OrthoNegativeYZ" | "LVT_MAX" | "LVT_None" */, ViewIndex: Number)
    open fun OnDollyPerspectiveCamera(Drag: Vector, ViewIndex: Number)
    open fun OnConfigureNewAssetProperties(InFactory: Factory)
    open fun OnClassPackageLoadedOrUnloaded()
    open fun OnBlueprintReinstanced()
    open fun OnBlueprintPreCompile(Blueprint: Blueprint)
    open fun OnBlueprintCompiled()
    open fun OnAssetsPreDelete(Assets: Array<UObject>)
    open fun OnAssetsDeleted(Classes: Array<UnrealEngineClass>)
    open fun OnAssetRenamed_Friendly(AssetData: JavascriptAssetData, Name: String)
    open fun OnAssetRemoved_Friendly(AssetData: JavascriptAssetData)
    open fun OnAssetReimport(InCreatedObject: UObject)
    open fun OnAssetPreImport_Friendly(InFactory: Factory, InClass: UnrealEngineClass, InParent: UObject, Name: String, Type: String)
    open fun OnAssetPostImport(InFactory: Factory, InCreatedObject: UObject)
    open fun OnAssetAdded_Friendly(AssetData: JavascriptAssetData)
    open fun OnApplyObjectToActor(ObjectToApply: UObject, Actor: Actor)
    open fun OnAddLevelToWorld(Level: Level)
    open fun OnActionAxisMappingsChanged()
    open fun NewCurrentLevel()
    open fun MapChange_Friendly(MapChangeFlags: Number)
    open fun LoadSelectedAssetsIfNeeded()
    open fun LayerChange()
    open fun FitTextureToSurface(World: World)
    open fun EndPlayMapDelegate()
    open fun EndPIE(bIsSimulating: Boolean)
    open fun DisplayLoadErrors()
    open fun CleanseEditor()
    open fun ChangeEditorMode(NewMode: String)
    open fun Bind(Key: String)
    open fun BeginPIE(bIsSimulating: Boolean)
    open fun ActorPropertiesChange()

    companion object {
        fun Load(ResourceName: String): JavascriptEditorGlobalDelegates
        fun Find(Outer: UObject, ResourceName: String): JavascriptEditorGlobalDelegates
        fun GetDefaultObject(): JavascriptEditorGlobalDelegates
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptEditorGlobalDelegates
        fun C(Other: UObject): JavascriptEditorGlobalDelegates
        fun C(Other: Any): JavascriptEditorGlobalDelegates
    }
}

external open class JavascriptEditorInputProcessor : UObject {
    constructor()
    constructor(Outer: UObject)
    open fun UnRegister()
    open fun Register()
    open fun HandleMouseMoveEvent(InPointerEvent: UPointerEvent): Boolean
    open fun HandleKeyUpEvent(InKeyEvent: KeyEvent): Boolean
    open fun HandleKeyDownEvent(InKeyEvent: KeyEvent): Boolean
    open fun HandleAnalogInputEvent(InKeyEvent: AnalogInputEvent): Boolean
    open fun Activate(bEnable: Boolean)

    companion object {
        fun Load(ResourceName: String): JavascriptEditorInputProcessor
        fun Find(Outer: UObject, ResourceName: String): JavascriptEditorInputProcessor
        fun GetDefaultObject(): JavascriptEditorInputProcessor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptEditorInputProcessor
        fun C(Other: UObject): JavascriptEditorInputProcessor
        fun C(Other: Any): JavascriptEditorInputProcessor
    }
}

external open class JavascriptLazyExtenderDelegates : UObject {
    constructor()
    constructor(Outer: UObject)
    open var GetExtender: UnrealEngineDelegate<(List: JavascriptUICommandList, EditingObjects: Array<UObject>) -> JavascriptExtender>

    companion object {
        fun Load(ResourceName: String): JavascriptLazyExtenderDelegates
        fun Find(Outer: UObject, ResourceName: String): JavascriptLazyExtenderDelegates
        fun GetDefaultObject(): JavascriptLazyExtenderDelegates
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptLazyExtenderDelegates
        fun C(Other: UObject): JavascriptLazyExtenderDelegates
        fun C(Other: Any): JavascriptLazyExtenderDelegates
    }
}

external object EJavascriptRHIFeatureLevel {
    var ES2: String /* "ES2" */
    var ES3_1: String /* "ES3_1" */
    var SM4: String /* "SM4" */
    var SM5: String /* "SM5" */
    var Num: String /* "Num" */
    var EJavascriptRHIFeatureLevel_MAX: String /* "EJavascriptRHIFeatureLevel_MAX" */
}

external interface `T$206` {
    var Verts: Array<Vector>
}

external interface `T$207` {
    var Verts: Array<Vector>
}

external open class JavascriptPDI {
    open fun clone(): JavascriptPDI
    open fun DrawArc(Base: Vector, X: Vector, Y: Vector, MinAngle: Number, MaxAngle: Number, Radius: Number, Sections: Number, Color: LinearColor, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */)
    open fun DrawCircle(Base: Vector, X: Vector, Y: Vector, Color: LinearColor, Radius: Number, NumSides: Number, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */, Thickness: Number, DepthBias: Number, bScreenSpace: Boolean)
    open fun DrawConnectedArrow(ArrowToWorld: Transform, Color: LinearColor, ArrowHeight: Number, ArrowWidth: Number, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */, Thickness: Number, NumSpokes: Number)
    open fun DrawDashedLine(Start: Vector, End: Vector, Color: LinearColor, DashSize: Number, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */, DepthBias: Number)
    open fun DrawDirectionalArrow(ArrowToWorld: Transform, InColor: LinearColor, Length: Number, ArrowSize: Number, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */, Thickness: Number)
    open fun DrawOrientedWireBox(Base: Vector, X: Vector, Y: Vector, Z: Vector, Extent: Vector, Color: LinearColor, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */, Thickness: Number, DepthBias: Number, bScreenSpace: Boolean)
    open fun DrawPolygon(Verts: Array<Vector>, InColor: LinearColor, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */, RHIFeatureLevel: String /* "ES2" | "ES3_1" | "SM4" | "SM5" | "Num" | "EJavascriptRHIFeatureLevel_MAX" */)
    open fun DrawWireBox(Box: Box, Color: LinearColor, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */, Thickness: Number, DepthBias: Number, bScreenSpace: Boolean)
    open fun DrawWireBox2(Matrix: Transform, Box: Box, Color: LinearColor, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */, Thickness: Number, DepthBias: Number, bScreenSpace: Boolean)
    open fun DrawWireCapsule(Base: Vector, X: Vector, Y: Vector, Z: Vector, Color: LinearColor, Radius: Number, HalfHeight: Number, NumSides: Number, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */, Thickness: Number, DepthBias: Number, bScreenSpace: Boolean)
    open fun DrawWireChoppedCone(Base: Vector, X: Vector, Y: Vector, Z: Vector, Color: LinearColor, Radius: Number, TopRadius: Number, HalfHeight: Number, NumSides: Number, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */)
    open fun DrawWireCone(Verts: Array<Vector> = definedExternally, Transform: Transform = definedExternally, ConeRadius: Number = definedExternally, ConeAngle: Number = definedExternally, ConeSides: Number = definedExternally, Color: LinearColor = definedExternally, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */ = definedExternally, Thickness: Number = definedExternally, DepthBias: Number = definedExternally, bScreenSpace: Boolean = definedExternally): `T$206`
    open fun DrawWireCylinder(Base: Vector, X: Vector, Y: Vector, Z: Vector, Color: LinearColor, Radius: Number, HalfHeight: Number, NumSides: Number, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */, Thickness: Number, DepthBias: Number, bScreenSpace: Boolean)
    open fun DrawWireDiamond(Transform: Transform, Size: Number, InColor: LinearColor, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */)
    open fun DrawWireSphere(Base: Vector, Color: LinearColor, Radius: Number, NumSides: Number, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */, Thickness: Number, DepthBias: Number, bScreenSpace: Boolean)
    open fun DrawWireSphere2(Transform: Transform, Color: LinearColor, Radius: Number, NumSides: Number, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */, Thickness: Number, DepthBias: Number, bScreenSpace: Boolean)
    open fun DrawWireSphereAutoSides(Base: Vector, Color: LinearColor, Radius: Number, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */, Thickness: Number, DepthBias: Number, bScreenSpace: Boolean)
    open fun DrawWireSphereAutoSides2(Transform: Transform, Color: LinearColor, Radius: Number, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */, Thickness: Number, DepthBias: Number, bScreenSpace: Boolean)
    open fun DrawWireSphereCappedCone(Transform: Transform, ConeRadius: Number, ConeAngle: Number, ConeSides: Number, ArcFrequency: Number, CapSegments: Number, Color: LinearColor, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */)
    open fun DrawWireStar(Position: Vector, Size: Number, Color: LinearColor, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */)
    open fun SetHitProxy(Name: String)

    companion object {
        fun C(Other: UObject): JavascriptPDI
        fun C(Other: Any): JavascriptPDI
        fun DrawArc(PDI: JavascriptPDI, Base: Vector, X: Vector, Y: Vector, MinAngle: Number, MaxAngle: Number, Radius: Number, Sections: Number, Color: LinearColor, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */)
        fun DrawCircle(PDI: JavascriptPDI, Base: Vector, X: Vector, Y: Vector, Color: LinearColor, Radius: Number, NumSides: Number, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */, Thickness: Number, DepthBias: Number, bScreenSpace: Boolean)
        fun DrawConnectedArrow(PDI: JavascriptPDI, ArrowToWorld: Transform, Color: LinearColor, ArrowHeight: Number, ArrowWidth: Number, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */, Thickness: Number, NumSpokes: Number)
        fun DrawDashedLine(PDI: JavascriptPDI, Start: Vector, End: Vector, Color: LinearColor, DashSize: Number, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */, DepthBias: Number)
        fun DrawDirectionalArrow(PDI: JavascriptPDI, ArrowToWorld: Transform, InColor: LinearColor, Length: Number, ArrowSize: Number, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */, Thickness: Number)
        fun DrawOrientedWireBox(PDI: JavascriptPDI, Base: Vector, X: Vector, Y: Vector, Z: Vector, Extent: Vector, Color: LinearColor, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */, Thickness: Number, DepthBias: Number, bScreenSpace: Boolean)
        fun DrawPolygon(PDI: JavascriptPDI, Verts: Array<Vector>, InColor: LinearColor, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */, RHIFeatureLevel: String /* "ES2" | "ES3_1" | "SM4" | "SM5" | "Num" | "EJavascriptRHIFeatureLevel_MAX" */)
        fun DrawWireBox(PDI: JavascriptPDI, Box: Box, Color: LinearColor, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */, Thickness: Number, DepthBias: Number, bScreenSpace: Boolean)
        fun DrawWireBox2(PDI: JavascriptPDI, Matrix: Transform, Box: Box, Color: LinearColor, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */, Thickness: Number, DepthBias: Number, bScreenSpace: Boolean)
        fun DrawWireCapsule(PDI: JavascriptPDI, Base: Vector, X: Vector, Y: Vector, Z: Vector, Color: LinearColor, Radius: Number, HalfHeight: Number, NumSides: Number, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */, Thickness: Number, DepthBias: Number, bScreenSpace: Boolean)
        fun DrawWireChoppedCone(PDI: JavascriptPDI, Base: Vector, X: Vector, Y: Vector, Z: Vector, Color: LinearColor, Radius: Number, TopRadius: Number, HalfHeight: Number, NumSides: Number, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */)
        fun DrawWireCone(PDI: JavascriptPDI, Verts: Array<Vector> = definedExternally, Transform: Transform = definedExternally, ConeRadius: Number = definedExternally, ConeAngle: Number = definedExternally, ConeSides: Number = definedExternally, Color: LinearColor = definedExternally, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */ = definedExternally, Thickness: Number = definedExternally, DepthBias: Number = definedExternally, bScreenSpace: Boolean = definedExternally): `T$207`
        fun DrawWireCylinder(PDI: JavascriptPDI, Base: Vector, X: Vector, Y: Vector, Z: Vector, Color: LinearColor, Radius: Number, HalfHeight: Number, NumSides: Number, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */, Thickness: Number, DepthBias: Number, bScreenSpace: Boolean)
        fun DrawWireDiamond(PDI: JavascriptPDI, Transform: Transform, Size: Number, InColor: LinearColor, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */)
        fun DrawWireSphere(PDI: JavascriptPDI, Base: Vector, Color: LinearColor, Radius: Number, NumSides: Number, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */, Thickness: Number, DepthBias: Number, bScreenSpace: Boolean)
        fun DrawWireSphere2(PDI: JavascriptPDI, Transform: Transform, Color: LinearColor, Radius: Number, NumSides: Number, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */, Thickness: Number, DepthBias: Number, bScreenSpace: Boolean)
        fun DrawWireSphereAutoSides(PDI: JavascriptPDI, Base: Vector, Color: LinearColor, Radius: Number, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */, Thickness: Number, DepthBias: Number, bScreenSpace: Boolean)
        fun DrawWireSphereAutoSides2(PDI: JavascriptPDI, Transform: Transform, Color: LinearColor, Radius: Number, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */, Thickness: Number, DepthBias: Number, bScreenSpace: Boolean)
        fun DrawWireSphereCappedCone(PDI: JavascriptPDI, Transform: Transform, ConeRadius: Number, ConeAngle: Number, ConeSides: Number, ArcFrequency: Number, CapSegments: Number, Color: LinearColor, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */)
        fun DrawWireStar(PDI: JavascriptPDI, Position: Vector, Size: Number, Color: LinearColor, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */)
        fun SetHitProxy(PDI: JavascriptPDI, Name: String)
    }
}

external open class JavascriptExtensibilityManager {
    open fun clone(): JavascriptExtensibilityManager
    open fun AddExtender(Extender: JavascriptExtender)
    open fun AddLazyExtender(Delegates: JavascriptLazyExtenderDelegates)
    open fun RemoveAllLazyExtender()
    open fun RemoveExtender(Extender: JavascriptExtender)

    companion object {
        fun C(Other: UObject): JavascriptExtensibilityManager
        fun C(Other: Any): JavascriptExtensibilityManager
        fun AddExtender(Manager: JavascriptExtensibilityManager, Extender: JavascriptExtender)
        fun AddLazyExtender(Manager: JavascriptExtensibilityManager, Delegates: JavascriptLazyExtenderDelegates)
        fun RemoveAllLazyExtender(Manager: JavascriptExtensibilityManager)
        fun RemoveExtender(Manager: JavascriptExtensibilityManager, Extender: JavascriptExtender)
        fun GetMenuExtensibilityManager(What: String): JavascriptExtensibilityManager
        fun GetToolBarExtensibilityManager(What: String): JavascriptExtensibilityManager
    }
}

external open class JavascriptViewportClick {
    open fun clone(): JavascriptViewportClick
    open fun GetClickPos(): IntPoint
    open fun GetDirection(): Vector
    open fun GetEvent(): String /* "IE_Pressed" | "IE_Released" | "IE_Repeat" | "IE_DoubleClick" | "IE_Axis" | "IE_MAX" */
    open fun GetKey(): Key
    open fun GetOrigin(): Vector
    open fun IsAltDown(): Boolean
    open fun IsControlDown(): Boolean
    open fun IsShiftDown(): Boolean

    companion object {
        fun C(Other: UObject): JavascriptViewportClick
        fun C(Other: Any): JavascriptViewportClick
        fun GetClickPos(Click: JavascriptViewportClick): IntPoint
        fun GetDirection(Click: JavascriptViewportClick): Vector
        fun GetEvent(Click: JavascriptViewportClick): String /* "IE_Pressed" | "IE_Released" | "IE_Repeat" | "IE_DoubleClick" | "IE_Axis" | "IE_MAX" */
        fun GetKey(Click: JavascriptViewportClick): Key
        fun GetOrigin(Click: JavascriptViewportClick): Vector
        fun IsAltDown(Click: JavascriptViewportClick): Boolean
        fun IsControlDown(Click: JavascriptViewportClick): Boolean
        fun IsShiftDown(Click: JavascriptViewportClick): Boolean
    }
}

external open class JavascriptHitProxy {
    open fun clone(): JavascriptHitProxy
    open fun GetActor(): Actor
    open fun GetName(): String

    companion object {
        fun C(Other: UObject): JavascriptHitProxy
        fun C(Other: Any): JavascriptHitProxy
        fun GetActor(Proxy: JavascriptHitProxy): Actor
        fun GetName(Proxy: JavascriptHitProxy): String
    }
}

external object EJavascriptMessageSeverity {
    var CriticalError: String /* "CriticalError" */
    var Error: String /* "Error" */
    var PerformanceWarning: String /* "PerformanceWarning" */
    var Warning: String /* "Warning" */
    var Info: String /* "Info" */
    var EJavascriptMessageSeverity_MAX: String /* "EJavascriptMessageSeverity_MAX" */
}

external interface `T$208` {
    var SweepHitResult: HitResult
    var `$`: Boolean
}

external interface `T$209` {
    var OutFilenames: Array<String>
    var `$`: Boolean
}

external interface `T$210` {
    var Data: String
    var `$`: Boolean
}

external interface `T$211` {
    var FileData: Array<Number>
    var `$`: Boolean
}

external interface `T$212` {
    var Out: Array<UObject>
    var `$`: Number
}

external interface `T$213` {
    var MinX: Number
    var MinY: Number
    var MaxX: Number
    var MaxY: Number
    var `$`: Boolean
}

external interface `T$214` {
    var OutArray: Array<String>
}

external interface `T$215` {
    var Verts: Array<Vector>
}

external open class JavascriptEditorLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): JavascriptEditorLibrary
        fun Find(Outer: UObject, ResourceName: String): JavascriptEditorLibrary
        fun GetDefaultObject(): JavascriptEditorLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptEditorLibrary
        fun UpdateModelComponents(Level: Level)
        fun ToggleSelect(USelection: USelection, InObject: UObject)
        fun SetIsTemporarilyHiddenInEditor(Actor: Actor, bIsHidden: Boolean)
        fun SetHitProxy(PDI: JavascriptPDI, Name: String)
        fun SetHeightmapDataFromMemory(LandscapeInfo: LandscapeInfo, MinX: Number, MinY: Number, MaxX: Number, MaxY: Number)
        fun SetFolderPath_Recursively(Actor: Actor, NewFolderPath: String)
        fun SetFolderPath(Actor: Actor, NewFolderPath: String)
        fun SetAlphamapDataFromMemory(LandscapeInfo: LandscapeInfo, LayerInfo: LandscapeLayerInfoObject, MinX: Number, MinY: Number, MaxX: Number, MaxY: Number, PaintingRestriction: String /* "None" | "UseMaxLayers" | "ExistingOnly" | "UseComponentWhitelist" | "ELandscapeLayerPaintingRestriction_MAX" */)
        fun SetActorLocation(Actor: Actor, NewLocation: Vector, bSweep: Boolean, SweepHitResult: HitResult = definedExternally, bTeleport: Boolean = definedExternally): `T$208`
        fun SetActorLabel(Actor: Actor, NewActorLabel: String, bMarkDirty: Boolean)
        fun Select(USelection: USelection, InObject: UObject)
        fun SavePackage(Package: Package, Filename: String): Boolean
        fun RequestEndPlayMapInPIE()
        fun ReplaceAnimNotifyClass(Sequence: AnimSequenceBase, NotifyName: String, NewNotifyName: String, NewNotifyClass: UObject): Number
        fun RemoveLevelInstance(World: World)
        fun RemoveExtender(Manager: JavascriptExtensibilityManager, Extender: JavascriptExtender)
        fun RemoveComponentFromBlueprint(Blueprint: Blueprint, RemoveComponent: ActorComponent, bPromoteChildren: Boolean)
        fun RemoveAllLazyExtender(Manager: JavascriptExtensibilityManager)
        fun PostEditChange(InObject: UObject)
        fun OpenPopupWindow(Widget: Widget, PopupDesiredSize: Vector2D, HeadingText: String)
        fun OpenFileDialog(WindowHandle: JavascriptWindow, DialogTitle: String, DefaultPath: String, DefaultFile: String, FileTypes: String, Flags: Number, OutFilenames: Array<String> = definedExternally): `T$209`
        fun OpenEditorForAssetByPath(AssetPathName: String, ObjectName: String)
        fun OpenEditorForAsset(Asset: UObject): Boolean
        fun NotifyUpdateCurveTable(InCurveTable: CurveTable)
        fun ModifyObject(UObject: UObject, bAlwaysMarkDirty: Boolean)
        fun MarkPackageDirty(InObject: UObject): Boolean
        fun LoadImageFromDiskAsync(ImagePath: String, Callback: AsyncTaskDownloadImage): Boolean
        fun LoadFileToString(Path: String, Data: String = definedExternally): `T$210`
        fun LoadFileToIntArray(Path: String, FileData: Array<Number> = definedExternally): `T$211`
        fun IsShiftDown(Click: JavascriptViewportClick): Boolean
        fun IsControlDown(Click: JavascriptViewportClick): Boolean
        fun IsAssetLoaded(AssetData: JavascriptAssetData): Boolean
        fun IsAltDown(Click: JavascriptViewportClick): Boolean
        fun IsActorLabelEditable(Actor: Actor): Boolean
        fun IsActive(Transactor: Transactor): Boolean
        fun InvalidateModelGeometry(World: World, InLevel: Level)
        fun HasMetaData(Field: Field, Key: String): Boolean
        fun GetTransaction(Transactor: Transactor, QueueIndex: Number): JavascriptTransaction
        fun GetToolBarExtensibilityManager(What: String): JavascriptExtensibilityManager
        fun GetTitle(Transaction: JavascriptTransaction): String
        fun GetTagValue(AssetData: JavascriptAssetData, Name: String, OutValue: String = definedExternally): `T$204`
        fun GetSelectedObjects(USelection: USelection, Out: Array<UObject> = definedExternally): `T$212`
        fun GetRootWindow(): JavascriptSlateWidget
        fun GetQueueLength(Transactor: Transactor): Number
        fun GetPrimaryObject(Transaction: JavascriptTransaction): UObject
        fun GetParentClassOfBlueprint(Blueprint: Blueprint): UnrealEngineClass
        fun GetPackage(AssetData: JavascriptAssetData): Package
        fun GetOrigin(Click: JavascriptViewportClick): Vector
        fun GetName(Proxy: JavascriptHitProxy): String
        fun GetMenuExtensibilityManager(What: String): JavascriptExtensibilityManager
        fun GetLevelEditorActions(): JavascriptUICommandList
        fun GetLayerInfoByName(LandscapeInfo: LandscapeInfo, LayerName: String, Owner: LandscapeProxy): LandscapeLayerInfoObject
        fun GetLandscapeInfo(Landscape: Landscape, bSpawnNewActor: Boolean): LandscapeInfo
        fun GetLandscapeExtent(LandscapeInfo: LandscapeInfo, MinX: Number = definedExternally, MinY: Number = definedExternally, MaxX: Number = definedExternally, MaxY: Number = definedExternally): `T$213`
        fun GetKeyNameByKeyEvent(Event: KeyEvent): String
        fun GetKey(Click: JavascriptViewportClick): Key
        fun GetHeightmapDataToMemory(LandscapeInfo: LandscapeInfo, MinX: Number, MinY: Number, MaxX: Number, MaxY: Number)
        fun GetGroup(Name: String): JavascriptWorkspaceItem
        fun GetFolderPath(Actor: Actor): String
        fun GetEvent(Click: JavascriptViewportClick): String /* "IE_Pressed" | "IE_Released" | "IE_Repeat" | "IE_DoubleClick" | "IE_Axis" | "IE_MAX" */
        fun GetEngine(): EditorEngine
        fun GetDirection(Click: JavascriptViewportClick): Vector
        fun GetDefaultBrush(World: World): Brush
        fun GetDataTableAsJSON(InDataTable: DataTable, InDTExportFlags: Number): String
        fun GetContext(Transaction: JavascriptTransaction): String
        fun GetClickPos(Click: JavascriptViewportClick): IntPoint
        fun GetClass(AssetData: JavascriptAssetData): UnrealEngineClass
        fun GetAssetsByType(Types: Array<String>, bRecursiveClasses: Boolean): Array<AssetData>
        fun GetAsset(AssetData: JavascriptAssetData): UObject
        fun GetAlphamapDataToMemory(LandscapeInfo: LandscapeInfo, LayerInfo: LandscapeLayerInfoObject, MinX: Number, MinY: Number, MaxX: Number, MaxY: Number)
        fun GetAllTags(AssetData: JavascriptAssetData, OutArray: Array<String> = definedExternally): `T$214`
        fun GetActorLocation(Actor: Actor): Vector
        fun GetActorLabel(Actor: Actor): String
        fun GetActor(Proxy: JavascriptHitProxy): Actor
        fun FindWorldInPackage(Package: Package): World
        fun ExportNavigation(InWorld: World, Path: String): String
        fun EditorDestroyActor(World: World, Actor: Actor, bShouldModifyLevel: Boolean): Boolean
        fun EditorAddModalWindow(Widget: JavascriptSlateWidget)
        fun DrawWireStar(PDI: JavascriptPDI, Position: Vector, Size: Number, Color: LinearColor, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */)
        fun DrawWireSphereCappedCone(PDI: JavascriptPDI, Transform: Transform, ConeRadius: Number, ConeAngle: Number, ConeSides: Number, ArcFrequency: Number, CapSegments: Number, Color: LinearColor, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */)
        fun DrawWireSphereAutoSides2(PDI: JavascriptPDI, Transform: Transform, Color: LinearColor, Radius: Number, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */, Thickness: Number, DepthBias: Number, bScreenSpace: Boolean)
        fun DrawWireSphereAutoSides(PDI: JavascriptPDI, Base: Vector, Color: LinearColor, Radius: Number, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */, Thickness: Number, DepthBias: Number, bScreenSpace: Boolean)
        fun DrawWireSphere2(PDI: JavascriptPDI, Transform: Transform, Color: LinearColor, Radius: Number, NumSides: Number, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */, Thickness: Number, DepthBias: Number, bScreenSpace: Boolean)
        fun DrawWireSphere(PDI: JavascriptPDI, Base: Vector, Color: LinearColor, Radius: Number, NumSides: Number, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */, Thickness: Number, DepthBias: Number, bScreenSpace: Boolean)
        fun DrawWireDiamond(PDI: JavascriptPDI, Transform: Transform, Size: Number, InColor: LinearColor, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */)
        fun DrawWireCylinder(PDI: JavascriptPDI, Base: Vector, X: Vector, Y: Vector, Z: Vector, Color: LinearColor, Radius: Number, HalfHeight: Number, NumSides: Number, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */, Thickness: Number, DepthBias: Number, bScreenSpace: Boolean)
        fun DrawWireCone(PDI: JavascriptPDI, Verts: Array<Vector> = definedExternally, Transform: Transform = definedExternally, ConeRadius: Number = definedExternally, ConeAngle: Number = definedExternally, ConeSides: Number = definedExternally, Color: LinearColor = definedExternally, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */ = definedExternally, Thickness: Number = definedExternally, DepthBias: Number = definedExternally, bScreenSpace: Boolean = definedExternally): `T$215`
        fun DrawWireChoppedCone(PDI: JavascriptPDI, Base: Vector, X: Vector, Y: Vector, Z: Vector, Color: LinearColor, Radius: Number, TopRadius: Number, HalfHeight: Number, NumSides: Number, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */)
        fun DrawWireCapsule(PDI: JavascriptPDI, Base: Vector, X: Vector, Y: Vector, Z: Vector, Color: LinearColor, Radius: Number, HalfHeight: Number, NumSides: Number, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */, Thickness: Number, DepthBias: Number, bScreenSpace: Boolean)
        fun DrawWireBox2(PDI: JavascriptPDI, Matrix: Transform, Box: Box, Color: LinearColor, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */, Thickness: Number, DepthBias: Number, bScreenSpace: Boolean)
        fun DrawWireBox(PDI: JavascriptPDI, Box: Box, Color: LinearColor, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */, Thickness: Number, DepthBias: Number, bScreenSpace: Boolean)
        fun DrawPolygon(PDI: JavascriptPDI, Verts: Array<Vector>, InColor: LinearColor, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */, RHIFeatureLevel: String /* "ES2" | "ES3_1" | "SM4" | "SM5" | "Num" | "EJavascriptRHIFeatureLevel_MAX" */)
        fun DrawOrientedWireBox(PDI: JavascriptPDI, Base: Vector, X: Vector, Y: Vector, Z: Vector, Extent: Vector, Color: LinearColor, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */, Thickness: Number, DepthBias: Number, bScreenSpace: Boolean)
        fun DrawDirectionalArrow(PDI: JavascriptPDI, ArrowToWorld: Transform, InColor: LinearColor, Length: Number, ArrowSize: Number, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */, Thickness: Number)
        fun DrawDashedLine(PDI: JavascriptPDI, Start: Vector, End: Vector, Color: LinearColor, DashSize: Number, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */, DepthBias: Number)
        fun DrawConnectedArrow(PDI: JavascriptPDI, ArrowToWorld: Transform, Color: LinearColor, ArrowHeight: Number, ArrowWidth: Number, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */, Thickness: Number, NumSpokes: Number)
        fun DrawCircle(PDI: JavascriptPDI, Base: Vector, X: Vector, Y: Vector, Color: LinearColor, Radius: Number, NumSides: Number, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */, Thickness: Number, DepthBias: Number, bScreenSpace: Boolean)
        fun DrawArc(PDI: JavascriptPDI, Base: Vector, X: Vector, Y: Vector, MinAngle: Number, MaxAngle: Number, Radius: Number, Sections: Number, Color: LinearColor, DepthPriority: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */)
        fun DeselectAll(USelection: USelection, InClass: UnrealEngineClass)
        fun Deselect(USelection: USelection, InObject: UObject)
        fun DeletePackage(Package: Package): Boolean
        fun csgAdd(DefaultBrush: Brush, PolyFlags: Number, BrushType: String /* "Brush_Default" | "Brush_Add" | "Brush_Subtract" | "Brush_MAX" */): Brush
        fun CreatePropertyEditorToolkit(ObjectsForPropertiesMenu: Array<UObject>)
        fun CreateLogListingWidget(InLogName: String): JavascriptSlateWidget
        fun CreateLogListing(InLogName: String, InLabel: String)
        fun CreateBrushForVolumeActor(NewActor: Volume, BrushBuilder: BrushBuilder)
        fun CompileBlueprint(Blueprint: Blueprint)
        fun ClearActorLabel(Actor: Actor)
        fun Build(Builder: BrushBuilder, InWorld: World, InBrush: Brush): Boolean
        fun BroadcastHotReload()
        fun BroadcastAssetCreated(NewAsset: UObject)
        fun AddWhitelistedObject(InObject: UObject)
        fun AddRichCurve(InCurveTable: CurveTable, Key: String, InCurve: RichCurve)
        fun AddLogListingMessage(InLogName: String, InSeverity: String /* "CriticalError" | "Error" | "PerformanceWarning" | "Warning" | "Info" | "EJavascriptMessageSeverity_MAX" */, LogText: String)
        fun AddLazyExtender(Manager: JavascriptExtensibilityManager, Delegates: JavascriptLazyExtenderDelegates)
        fun AddGroup(Parent: JavascriptWorkspaceItem, DisplayName: String): JavascriptWorkspaceItem
        fun AddExtender(Manager: JavascriptExtensibilityManager, Extender: JavascriptExtender)
        fun AddComponentsToBlueprint(Blueprint: Blueprint, Components: Array<ActorComponent>, bHarvesting: Boolean, OptionalNewRootComponent: ActorComponent, bKeepMobility: Boolean)
        fun C(Other: UObject): JavascriptEditorLibrary
        fun C(Other: Any): JavascriptEditorLibrary
    }
}

external open class JavascriptEditorPopupWindow : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Widget: Widget
    open fun Open(Heading: String, DesiredSize: Vector2D): Boolean
    open fun OnDismissed()

    companion object {
        fun Load(ResourceName: String): JavascriptEditorPopupWindow
        fun Find(Outer: UObject, ResourceName: String): JavascriptEditorPopupWindow
        fun GetDefaultObject(): JavascriptEditorPopupWindow
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptEditorPopupWindow
        fun C(Other: UObject): JavascriptEditorPopupWindow
        fun C(Other: Any): JavascriptEditorPopupWindow
    }
}

external open class JavascriptEditorTabManager : Widget {
    constructor()
    constructor(Outer: UObject)
    open var Layout: String
    open var Tabs: Array<JavascriptEditorTab>

    companion object {
        fun Load(ResourceName: String): JavascriptEditorTabManager
        fun Find(Outer: UObject, ResourceName: String): JavascriptEditorTabManager
        fun GetDefaultObject(): JavascriptEditorTabManager
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptEditorTabManager
        fun C(Other: UObject): JavascriptEditorTabManager
        fun C(Other: Any): JavascriptEditorTabManager
    }
}

external open class JavascriptEditorTick : UObject {
    constructor()
    constructor(Outer: UObject)
    open var OnTick: UnrealEngineDelegate<(DeltaSeconds: Number) -> Unit>
    open fun GetEngine(): EditorEngine
    open fun ForceTick(DeltaTime: Number)

    companion object {
        fun Load(ResourceName: String): JavascriptEditorTick
        fun Find(Outer: UObject, ResourceName: String): JavascriptEditorTick
        fun GetDefaultObject(): JavascriptEditorTick
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptEditorTick
        fun C(Other: UObject): JavascriptEditorTick
        fun C(Other: Any): JavascriptEditorTick
    }
}

external open class JavascriptEditorToolbar : Widget {
    constructor()
    constructor(Outer: UObject)
    open var OnHook: UnrealEngineDelegate<() -> JavascriptMenuBuilder>

    companion object {
        fun Load(ResourceName: String): JavascriptEditorToolbar
        fun Find(Outer: UObject, ResourceName: String): JavascriptEditorToolbar
        fun GetDefaultObject(): JavascriptEditorToolbar
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptEditorToolbar
        fun C(Other: UObject): JavascriptEditorToolbar
        fun C(Other: Any): JavascriptEditorToolbar
    }
}

external open class JavascriptInputEventState {
    open fun clone(): JavascriptInputEventState
    open fun GetInputEvent(): String /* "IE_Pressed" | "IE_Released" | "IE_Repeat" | "IE_DoubleClick" | "IE_Axis" | "IE_MAX" */
    open fun GetKey(): Key
    open fun IsAltButtonEvent(): Boolean
    open fun IsAltButtonPressed(): Boolean
    open fun IsAnyMouseButtonDown(): Boolean
    open fun IsButtonPressed(InKey: Key): Boolean
    open fun IsCtrlButtonEvent(): Boolean
    open fun IsCtrlButtonPressed(): Boolean
    open fun IsLeftMouseButtonPressed(): Boolean
    open fun IsMiddleMouseButtonPressed(): Boolean
    open fun IsMouseButtonEvent(): Boolean
    open fun IsRightMouseButtonPressed(): Boolean
    open fun IsShiftButtonEvent(): Boolean
    open fun IsShiftButtonPressed(): Boolean
    open fun IsSpaceBarPressed(): Boolean

    companion object {
        fun C(Other: UObject): JavascriptInputEventState
        fun C(Other: Any): JavascriptInputEventState
        fun GetInputEvent(InputEvent: JavascriptInputEventState): String /* "IE_Pressed" | "IE_Released" | "IE_Repeat" | "IE_DoubleClick" | "IE_Axis" | "IE_MAX" */
        fun GetKey(InputEvent: JavascriptInputEventState): Key
        fun IsAltButtonEvent(InputEvent: JavascriptInputEventState): Boolean
        fun IsAltButtonPressed(InputEvent: JavascriptInputEventState): Boolean
        fun IsAnyMouseButtonDown(InputEvent: JavascriptInputEventState): Boolean
        fun IsButtonPressed(InputEvent: JavascriptInputEventState, InKey: Key): Boolean
        fun IsCtrlButtonEvent(InputEvent: JavascriptInputEventState): Boolean
        fun IsCtrlButtonPressed(InputEvent: JavascriptInputEventState): Boolean
        fun IsLeftMouseButtonPressed(InputEvent: JavascriptInputEventState): Boolean
        fun IsMiddleMouseButtonPressed(InputEvent: JavascriptInputEventState): Boolean
        fun IsMouseButtonEvent(InputEvent: JavascriptInputEventState): Boolean
        fun IsRightMouseButtonPressed(InputEvent: JavascriptInputEventState): Boolean
        fun IsShiftButtonEvent(InputEvent: JavascriptInputEventState): Boolean
        fun IsShiftButtonPressed(InputEvent: JavascriptInputEventState): Boolean
        fun IsSpaceBarPressed(InputEvent: JavascriptInputEventState): Boolean
    }
}

external object EJavascriptWidgetMode {
    var WM_Translate: String /* "WM_Translate" */
    var WM_TranslateRotateZ: String /* "WM_TranslateRotateZ" */
    var WM_2D: String /* "WM_2D" */
    var WM_Rotate: String /* "WM_Rotate" */
    var WM_Scale: String /* "WM_Scale" */
    var WM_Max: String /* "WM_Max" */
    var WM_None: String /* "WM_None" */
}

external interface `T$216` {
    var OutScreenPosition: Vector2D
}

external interface `T$217` {
    var OutRayOrigin: Vector
    var OutRayDirection: Vector
}

external open class JavascriptEditorViewport : PanelWidget {
    constructor()
    constructor(Outer: UObject)
    open var OnClick: UnrealEngineDelegate<(ViewportClick: JavascriptViewportClick, HitProxy: JavascriptHitProxy, Instance: JavascriptEditorViewport) -> Unit>
    open var OnTrackingStarted: UnrealEngineDelegate<(InputState: JavascriptInputEventState, bIsDraggingWidget: Boolean, bNudge: Boolean, Instance: JavascriptEditorViewport) -> Unit>
    open var OnTrackingStopped: UnrealEngineDelegate<(Instance: JavascriptEditorViewport) -> Unit>
    open var OnInputWidgetDelta: UnrealEngineDelegate<(Drag: Vector, Rot: Rotator, Scale: Vector, Instance: JavascriptEditorViewport) -> Boolean>
    open var OnInputKey: UnrealEngineDelegate<(ControllerId: Number, Key: Key, Event: String /* "IE_Pressed" | "IE_Released" | "IE_Repeat" | "IE_DoubleClick" | "IE_Axis" | "IE_MAX" */, Instance: JavascriptEditorViewport) -> Boolean>
    open var OnInputAxis: UnrealEngineDelegate<(ControllerId: Number, Key: Key, Delta: Number, DeltaTime: Number, Instance: JavascriptEditorViewport) -> Boolean>
    open var OnMouseEnter: UnrealEngineDelegate<(X: Number, Y: Number, Instance: JavascriptEditorViewport) -> Boolean>
    open var OnMouseMove: UnrealEngineDelegate<(X: Number, Y: Number, Instance: JavascriptEditorViewport) -> Boolean>
    open var OnMouseLeave: UnrealEngineDelegate<(Instance: JavascriptEditorViewport) -> Boolean>
    open var OnDraw: UnrealEngineDelegate<(PDI: JavascriptPDI, Instance: JavascriptEditorViewport) -> Unit>
    open var OnDrawCanvas: UnrealEngineDelegate<(Canvas: Canvas, Instance: JavascriptEditorViewport) -> Unit>
    open var OnGetWidgetLocation: UnrealEngineDelegate<(Instance: JavascriptEditorViewport) -> Vector>
    open var OnGetWidgetRotation: UnrealEngineDelegate<(Instance: JavascriptEditorViewport) -> Rotator>
    open var OnGetWidgetMode: UnrealEngineDelegate<(Instance: JavascriptEditorViewport) -> String>
    open fun SetWidgetMode(WidgetMode: String /* "WM_Translate" | "WM_TranslateRotateZ" | "WM_2D" | "WM_Rotate" | "WM_Scale" | "WM_Max" | "WM_None" */)
    open fun SetViewRotation(ViewRotation: Rotator)
    open fun SetViewportType(InViewportType: String /* "LVT_OrthoXY" | "LVT_OrthoXZ" | "LVT_OrthoYZ" | "LVT_Perspective" | "LVT_OrthoFreelook" | "LVT_OrthoNegativeXY" | "LVT_OrthoNegativeXZ" | "LVT_OrthoNegativeYZ" | "LVT_MAX" | "LVT_None" */)
    open fun SetViewMode(InViewModeIndex: String /* "VMI_BrushWireframe" | "VMI_Wireframe" | "VMI_Unlit" | "VMI_Lit" | "VMI_Lit_DetailLighting" | "VMI_LightingOnly" | "VMI_LightComplexity" | "VMI_ShaderComplexity" | "VMI_LightmapDensity" | "VMI_LitLightmapDensity" | "VMI_ReflectionOverride" | "VMI_VisualizeBuffer" | "VMI_StationaryLightOverlap" | "VMI_CollisionPawn" | "VMI_CollisionVisibility" | "VMI_LODColoration" | "VMI_QuadOverdraw" | "VMI_PrimitiveDistanceAccuracy" | "VMI_MeshUVDensityAccuracy" | "VMI_ShaderComplexityWithQuadOverdraw" | "VMI_HLODColoration" | "VMI_GroupLODColoration" | "VMI_MaterialTextureScaleAccuracy" | "VMI_RequiredTextureResolution" | "VMI_PathTracing" | "VMI_RayTracingDebug" | "VMI_Max" | "VMI_Unknown" */)
    open fun SetViewLocation(ViewLocation: Vector)
    open fun SetViewFOV(InViewFOV: Number)
    open fun SetSkyBrightness(SkyBrightness: Number)
    open fun SetSimulatePhysics(bShouldSimulatePhysics: Boolean)
    open fun SetRealtime(bInRealtime: Boolean, bStoreCurrentValue: Boolean)
    open fun SetProfileIndex(InProfileIndex: Number)
    open fun SetLightDirection(InLightDir: Rotator)
    open fun SetLightColor(LightColor: Color)
    open fun SetLightBrightness(LightBrightness: Number)
    open fun SetFloorOffset(InFloorOffset: Number)
    open fun SetEngineShowFlags(In: String): Boolean
    open fun SetCameraSpeedSetting(SpeedSetting: Number)
    open fun SetBackgroundColor(BackgroundColor: LinearColor)
    open fun RestoreRealtime(bAllowDisable: Boolean)
    open fun Redraw()
    open fun ProjectWorldToScreen(WorldPosition: Vector, OutScreenPosition: Vector2D = definedExternally): `T$216`
    open fun OverridePostProcessSettings(PostProcessSettings: PostProcessSettings, Weight: Number)
    open fun GetWidgetMode(): String /* "WM_Translate" | "WM_TranslateRotateZ" | "WM_2D" | "WM_Rotate" | "WM_Scale" | "WM_Max" | "WM_None" */
    open fun GetViewRotation(): Rotator
    open fun GetViewportWorld(): World
    open fun GetViewLocation(): Vector
    open fun GetViewFOV(): Number
    open fun GetSkyComponent(): StaticMeshComponent
    open fun GetFloorMeshComponent(): StaticMeshComponent
    open fun GetEngineShowFlags(): String
    open fun GetDefaultSphereReflectionComponent(): SphereReflectionCaptureComponent
    open fun GetDefaultSkySphereComponent(): StaticMeshComponent
    open fun GetDefaultSkyLightComponent(): SkyLightComponent
    open fun GetDefaultPostProcessComponent(): PostProcessComponent
    open fun GetDefaultInstancedSkyMaterial(): MaterialInstanceConstant
    open fun GetDefaultDirectionalLightComponent(): DirectionalLightComponent
    open fun GetDefaultAssetViewerSettings(): AssetViewerSettings
    open fun GetCurrentProfileIndex(): Number
    open fun GetCameraSpeedSetting(): Number
    open fun DeprojectScreenToWorld(ScreenPosition: Vector2D, OutRayOrigin: Vector = definedExternally, OutRayDirection: Vector = definedExternally): `T$217`

    companion object {
        fun Load(ResourceName: String): JavascriptEditorViewport
        fun Find(Outer: UObject, ResourceName: String): JavascriptEditorViewport
        fun GetDefaultObject(): JavascriptEditorViewport
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptEditorViewport
        fun C(Other: UObject): JavascriptEditorViewport
        fun C(Other: Any): JavascriptEditorViewport
    }
}

external open class JavascriptEdViewport {
    open fun clone(): JavascriptEdViewport
    open fun GetHitProxy(): JavascriptHitProxy

    companion object {
        fun C(Other: UObject): JavascriptEdViewport
        fun C(Other: Any): JavascriptEdViewport
        fun GetHitProxy(Viewport: JavascriptEdViewport): JavascriptHitProxy
    }
}

external interface `T$218` {
    var Tools: JavascriptEditorModeTools
}

external interface `T$219` {
    var Tools: JavascriptEditorModeTools
    var `$`: Boolean
}

external open class JavascriptEditorModeTools {
    open fun clone(): JavascriptEditorModeTools
    open fun ActivateDefaultMode(): `T$218`
    open fun ActivateMode(InID: String = definedExternally, bToggle: Boolean = definedExternally): `T$218`
    open fun DeactivateAllModes(): `T$218`
    open fun DeactivateMode(InID: String = definedExternally): `T$218`
    open fun DestroyMode(InID: String = definedExternally): `T$218`
    open fun EndTracking(Viewport: JavascriptEdViewport): Boolean
    open fun EnsureNotInMode(ModeId: String = definedExternally, ErrorMsg: String = definedExternally, bNotifyUser: Boolean = definedExternally): `T$219`
    open fun IsDefaultModeActive(): `T$219`
    open fun IsModeActive(InID: String = definedExternally): `T$219`
    open fun IsTracking(): Boolean
    open fun SetDefaultMode(DefaultID: String = definedExternally): `T$218`
    open fun StartTracking(Viewport: JavascriptEdViewport): Boolean

    companion object {
        fun C(Other: UObject): JavascriptEditorModeTools
        fun C(Other: Any): JavascriptEditorModeTools
        fun ActivateDefaultMode(Tools: JavascriptEditorModeTools = definedExternally): `T$218`
        fun ActivateMode(Tools: JavascriptEditorModeTools = definedExternally, InID: String = definedExternally, bToggle: Boolean = definedExternally): `T$218`
        fun DeactivateAllModes(Tools: JavascriptEditorModeTools = definedExternally): `T$218`
        fun DeactivateMode(Tools: JavascriptEditorModeTools = definedExternally, InID: String = definedExternally): `T$218`
        fun DestroyMode(Tools: JavascriptEditorModeTools = definedExternally, InID: String = definedExternally): `T$218`
        fun EndTracking(Tools: JavascriptEditorModeTools, Viewport: JavascriptEdViewport): Boolean
        fun EnsureNotInMode(Tools: JavascriptEditorModeTools = definedExternally, ModeId: String = definedExternally, ErrorMsg: String = definedExternally, bNotifyUser: Boolean = definedExternally): `T$219`
        fun IsDefaultModeActive(Tools: JavascriptEditorModeTools = definedExternally): `T$219`
        fun IsModeActive(Tools: JavascriptEditorModeTools = definedExternally, InID: String = definedExternally): `T$219`
        fun IsTracking(Tools: JavascriptEditorModeTools): Boolean
        fun SetDefaultMode(Tools: JavascriptEditorModeTools = definedExternally, DefaultID: String = definedExternally): `T$218`
        fun StartTracking(Tools: JavascriptEditorModeTools, Viewport: JavascriptEdViewport): Boolean
    }
}

external open class JavascriptEditorMode {
    open fun clone(): JavascriptEditorMode
    open fun GetCurrentWidgetAxis(): Number
    open fun GetModeManager(): JavascriptEditorModeTools
    open fun SelectNone()
    open fun SetCurrentWidgetAxis(InAxis: Number)

    companion object {
        fun C(Other: UObject): JavascriptEditorMode
        fun C(Other: Any): JavascriptEditorMode
        fun GetCurrentWidgetAxis(Mode: JavascriptEditorMode): Number
        fun GetModeManager(Mode: JavascriptEditorMode): JavascriptEditorModeTools
        fun SelectNone(Mode: JavascriptEditorMode)
        fun SetCurrentWidgetAxis(Mode: JavascriptEditorMode, InAxis: Number)
    }
}

external object EJavascriptEditAction {
    var Skip: String /* "Skip" */
    var Process: String /* "Process" */
    var Halt: String /* "Halt" */
    var EJavascriptEditAction_MAX: String /* "EJavascriptEditAction_MAX" */
}

external open class JavascriptEdMode : UObject {
    constructor()
    constructor(Outer: UObject)
    open var OnGetWidgetLocation: UnrealEngineDelegate<(Instance: JavascriptEditorMode) -> Vector>
    open var OnSelect: UnrealEngineDelegate<(Actor: Actor, bSelected: Boolean, Instance: JavascriptEditorMode) -> Boolean>
    open var OnDraw: UnrealEngineDelegate<(PDI: JavascriptPDI, Instance: JavascriptEditorMode) -> Unit>
    open var OnDrawHUD: UnrealEngineDelegate<(Canvas: Canvas, Instance: JavascriptEditorMode) -> Unit>
    open var IsSelectionAllowed: UnrealEngineDelegate<(Actor: Actor, bSelected: Boolean, Instance: JavascriptEditorMode) -> Boolean>
    open var OnClick: UnrealEngineDelegate<(ViewportClick: JavascriptViewportClick, HitProxy: JavascriptHitProxy, Instance: JavascriptEditorMode) -> Boolean>
    open var OnQuery: UnrealEngineDelegate<(Request: String, Instance: JavascriptEditorMode) -> Boolean>
    open var OnStartTracking: UnrealEngineDelegate<(Viewport: JavascriptEdViewport, Instance: JavascriptEditorMode) -> Boolean>
    open var OnEndTracking: UnrealEngineDelegate<(Viewport: JavascriptEdViewport, Instance: JavascriptEditorMode) -> Boolean>
    open var OnInputAxis: UnrealEngineDelegate<(Viewport: JavascriptEdViewport, ControllerId: Number, Key: Key, Delta: Number, DeltaTime: Number, Instance: JavascriptEditorMode) -> Boolean>
    open var OnInputKey: UnrealEngineDelegate<(Viewport: JavascriptEdViewport, Key: Key, Event: String /* "IE_Pressed" | "IE_Released" | "IE_Repeat" | "IE_DoubleClick" | "IE_Axis" | "IE_MAX" */, Instance: JavascriptEditorMode) -> Boolean>
    open var OnInputDelta: UnrealEngineDelegate<(Viewport: JavascriptEdViewport, Drag: Vector, Rot: Rotator, Scale: Vector, Instance: JavascriptEditorMode) -> Boolean>
    open var OnCapturedMouseMove: UnrealEngineDelegate<(Viewport: JavascriptEdViewport, X: Number, Y: Number, Instance: JavascriptEditorMode) -> Boolean>
    open var OnMouseEnter: UnrealEngineDelegate<(Viewport: JavascriptEdViewport, X: Number, Y: Number, Instance: JavascriptEditorMode) -> Boolean>
    open var OnMouseLeave: UnrealEngineDelegate<(Viewport: JavascriptEdViewport, Instance: JavascriptEditorMode) -> Boolean>
    open var OnMouseMove: UnrealEngineDelegate<(Viewport: JavascriptEdViewport, X: Number, Y: Number, Instance: JavascriptEditorMode) -> Boolean>
    open var OnLostFocus: UnrealEngineDelegate<(Viewport: JavascriptEdViewport, Instance: JavascriptEditorMode) -> Boolean>
    open var OnReceivedFocus: UnrealEngineDelegate<(Viewport: JavascriptEdViewport, Instance: JavascriptEditorMode) -> Boolean>
    open var OnSelectionChanged: UnrealEngineDelegate<(Tools: JavascriptEditorModeTools, Item: UObject) -> Unit>
    open var OnGetContent: UnrealEngineDelegate<() -> Widget>
    open var OnProcess: UnrealEngineDelegate<(Request: String, Instance: JavascriptEditorMode) -> Boolean>
    open var OnGetAction: UnrealEngineDelegate<(Request: String, Instance: JavascriptEditorMode) -> String>
    open var OnActorMoved: UnrealEngineDelegate<(Instance: JavascriptEditorMode) -> Unit>
    open var OnActorsDuplicated: UnrealEngineDelegate<(PreDuplicateSelection: Array<Actor>, PostDuplicateSelection: Array<Actor>, bOffsetLocations: Boolean, Instance: JavascriptEditorMode) -> Unit>
    open var OnActorSelectionChanged: UnrealEngineDelegate<(Instance: JavascriptEditorMode) -> Unit>
    open var OnActorPropChanged: UnrealEngineDelegate<(Instance: JavascriptEditorMode) -> Unit>
    open var OnMapChanged: UnrealEngineDelegate<(Instance: JavascriptEditorMode) -> Unit>
    open var ModeId: String
    open var SlateIcon: JavascriptSlateIcon
    open var ModeName: String
    open var bVisible: Boolean
    open var PriorityOrder: Number
    open fun Unregister()
    open fun Register()

    companion object {
        fun Load(ResourceName: String): JavascriptEdMode
        fun Find(Outer: UObject, ResourceName: String): JavascriptEdMode
        fun GetDefaultObject(): JavascriptEdMode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptEdMode
        fun C(Other: UObject): JavascriptEdMode
        fun C(Other: Any): JavascriptEdMode
    }
}

external open class JavascriptEdModeLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): JavascriptEdModeLibrary
        fun Find(Outer: UObject, ResourceName: String): JavascriptEdModeLibrary
        fun GetDefaultObject(): JavascriptEdModeLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptEdModeLibrary
        fun StartTracking(Tools: JavascriptEditorModeTools, Viewport: JavascriptEdViewport): Boolean
        fun SetDefaultMode(Tools: JavascriptEditorModeTools = definedExternally, DefaultID: String = definedExternally): `T$218`
        fun SetCurrentWidgetAxis(Mode: JavascriptEditorMode, InAxis: Number)
        fun SelectNone(Mode: JavascriptEditorMode)
        fun IsTracking(Tools: JavascriptEditorModeTools): Boolean
        fun IsModeActive(Tools: JavascriptEditorModeTools = definedExternally, InID: String = definedExternally): `T$219`
        fun IsDefaultModeActive(Tools: JavascriptEditorModeTools = definedExternally): `T$219`
        fun GetModeManager(Mode: JavascriptEditorMode): JavascriptEditorModeTools
        fun GetHitProxy(Viewport: JavascriptEdViewport): JavascriptHitProxy
        fun GetCurrentWidgetAxis(Mode: JavascriptEditorMode): Number
        fun EnsureNotInMode(Tools: JavascriptEditorModeTools = definedExternally, ModeId: String = definedExternally, ErrorMsg: String = definedExternally, bNotifyUser: Boolean = definedExternally): `T$219`
        fun EndTracking(Tools: JavascriptEditorModeTools, Viewport: JavascriptEdViewport): Boolean
        fun DestroyMode(Tools: JavascriptEditorModeTools = definedExternally, InID: String = definedExternally): `T$218`
        fun DeactivateMode(Tools: JavascriptEditorModeTools = definedExternally, InID: String = definedExternally): `T$218`
        fun DeactivateAllModes(Tools: JavascriptEditorModeTools = definedExternally): `T$218`
        fun ActivateMode(Tools: JavascriptEditorModeTools = definedExternally, InID: String = definedExternally, bToggle: Boolean = definedExternally): `T$218`
        fun ActivateDefaultMode(Tools: JavascriptEditorModeTools = definedExternally): `T$218`
        fun C(Other: UObject): JavascriptEdModeLibrary
        fun C(Other: Any): JavascriptEdModeLibrary
    }
}

external open class JavascriptInputEventStateLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): JavascriptInputEventStateLibrary
        fun Find(Outer: UObject, ResourceName: String): JavascriptInputEventStateLibrary
        fun GetDefaultObject(): JavascriptInputEventStateLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptInputEventStateLibrary
        fun IsSpaceBarPressed(InputEvent: JavascriptInputEventState): Boolean
        fun IsShiftButtonPressed(InputEvent: JavascriptInputEventState): Boolean
        fun IsShiftButtonEvent(InputEvent: JavascriptInputEventState): Boolean
        fun IsRightMouseButtonPressed(InputEvent: JavascriptInputEventState): Boolean
        fun IsMouseButtonEvent(InputEvent: JavascriptInputEventState): Boolean
        fun IsMiddleMouseButtonPressed(InputEvent: JavascriptInputEventState): Boolean
        fun IsLeftMouseButtonPressed(InputEvent: JavascriptInputEventState): Boolean
        fun IsCtrlButtonPressed(InputEvent: JavascriptInputEventState): Boolean
        fun IsCtrlButtonEvent(InputEvent: JavascriptInputEventState): Boolean
        fun IsButtonPressed(InputEvent: JavascriptInputEventState, InKey: Key): Boolean
        fun IsAnyMouseButtonDown(InputEvent: JavascriptInputEventState): Boolean
        fun IsAltButtonPressed(InputEvent: JavascriptInputEventState): Boolean
        fun IsAltButtonEvent(InputEvent: JavascriptInputEventState): Boolean
        fun GetKey(InputEvent: JavascriptInputEventState): Key
        fun GetInputEvent(InputEvent: JavascriptInputEventState): String /* "IE_Pressed" | "IE_Released" | "IE_Repeat" | "IE_DoubleClick" | "IE_Axis" | "IE_MAX" */
        fun C(Other: UObject): JavascriptInputEventStateLibrary
        fun C(Other: Any): JavascriptInputEventStateLibrary
    }
}

external open class JavascriptLogSubscriber : UObject {
    constructor()
    constructor(Outer: UObject)
    open var OnNewLogMessage: UnrealEngineMulticastDelegate<(Message: String, Type: String, Category: String) -> Unit>

    companion object {
        fun Load(ResourceName: String): JavascriptLogSubscriber
        fun Find(Outer: UObject, ResourceName: String): JavascriptLogSubscriber
        fun GetDefaultObject(): JavascriptLogSubscriber
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptLogSubscriber
        fun C(Other: UObject): JavascriptLogSubscriber
        fun C(Other: Any): JavascriptLogSubscriber
    }
}

external object EJSCheckBoxState {
    var Unchecked: String /* "Unchecked" */
    var Checked: String /* "Checked" */
    var Undetermined: String /* "Undetermined" */
    var EJSCheckBoxState_MAX: String /* "EJSCheckBoxState_MAX" */
}

external open class JavascriptNotification : UObject {
    constructor()
    constructor(Outer: UObject)
    open var text: String
    open var bUseImage: Boolean
    open var UImage: SlateBrush
    open var FadeInDuration: Number
    open var FadeOutDuration: Number
    open var ExpireDuration: Number
    open var bUseThrobber: Boolean
    open var bUseSuccessFailIcons: Boolean
    open var bUseLargeFont: Boolean
    open var bFireAndForget: Boolean
    open var CheckBoxState: String /* "Unchecked" | "Checked" | "Undetermined" | "EJSCheckBoxState_MAX" */
    open var CheckBoxStateChanged: UnrealEngineDelegate<(State: String /* "Unchecked" | "Checked" | "Undetermined" | "ECheckBoxState_MAX" */) -> Unit>
    open var CheckBoxText: String
    open var Hyperlink: UnrealEngineDelegate<() -> Unit>
    open var HyperlinkText: String
    open var bAllowThrottleWhenFrameRateIsLow: Boolean
    open fun Success()
    open fun SetText(InText: String)
    open fun Reset()
    open fun Pending()
    open fun Fire()
    open fun Fail()
    open fun Fadeout()

    companion object {
        fun Load(ResourceName: String): JavascriptNotification
        fun Find(Outer: UObject, ResourceName: String): JavascriptNotification
        fun GetDefaultObject(): JavascriptNotification
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptNotification
        fun C(Other: UObject): JavascriptNotification
        fun C(Other: Any): JavascriptNotification
    }
}

external object EPropertyAccessResult {
    var MultipleValues: String /* "MultipleValues" */
    var Fail: String /* "Fail" */
    var Success: String /* "Success" */
    var EPropertyAccessResult_MAX: String /* "EPropertyAccessResult_MAX" */
}

external interface `T$220` {
    var OutValue: String
    var `$`: String /* "MultipleValues" | "Fail" | "Success" | "EPropertyAccessResult_MAX" */
}

external open class JavascriptPropertyHandle {
    open fun clone(): JavascriptPropertyHandle
    open fun CreatePropertyNameWidget(NameOverride: String, ToolTipOverride: String, bDisplayResetToDefault: Boolean, bHideText: Boolean, bHideThumbnail: Boolean): JavascriptSlateWidget
    open fun CreatePropertyValueWidget(bHideDefaultPropertyButtons: Boolean): JavascriptSlateWidget
    open fun GetChildHandle(Name: String): JavascriptPropertyHandle
    open fun GetMetaData(Key: String): String
    open fun GetProperty(): Property
    open fun GetValueAsFormattedString(OutValue: String = definedExternally): `T$220`
    open fun IsEditConst(): Boolean
    open fun IsValidHandle(): Boolean
    open fun SetOnPropertyValueChanged(Custom: JavascriptPropertyCustomization)
    open fun SetValueFromFormattedString(InValue: String): String /* "MultipleValues" | "Fail" | "Success" | "EPropertyAccessResult_MAX" */

    companion object {
        fun C(Other: UObject): JavascriptPropertyHandle
        fun C(Other: Any): JavascriptPropertyHandle
        fun CreatePropertyNameWidget(Handle: JavascriptPropertyHandle, NameOverride: String, ToolTipOverride: String, bDisplayResetToDefault: Boolean, bHideText: Boolean, bHideThumbnail: Boolean): JavascriptSlateWidget
        fun CreatePropertyValueWidget(Handle: JavascriptPropertyHandle, bHideDefaultPropertyButtons: Boolean): JavascriptSlateWidget
        fun GetChildHandle(Parent: JavascriptPropertyHandle, Name: String): JavascriptPropertyHandle
        fun GetMetaData(Handle: JavascriptPropertyHandle, Key: String): String
        fun GetProperty(Handle: JavascriptPropertyHandle): Property
        fun GetValueAsFormattedString(Handle: JavascriptPropertyHandle, OutValue: String = definedExternally): `T$220`
        fun IsEditConst(Handle: JavascriptPropertyHandle): Boolean
        fun IsValidHandle(Handle: JavascriptPropertyHandle): Boolean
        fun SetOnPropertyValueChanged(Handle: JavascriptPropertyHandle, Custom: JavascriptPropertyCustomization)
        fun SetValueFromFormattedString(Handle: JavascriptPropertyHandle, InValue: String): String /* "MultipleValues" | "Fail" | "Success" | "EPropertyAccessResult_MAX" */
    }
}

external open class JavascriptDetailWidgetDecl {
    open fun clone(): JavascriptDetailWidgetDecl
    open fun SetContent(Widget: JavascriptSlateWidget)
    open fun SetHAlign(InAlignment: String /* "HAlign_Fill" | "HAlign_Left" | "HAlign_Center" | "HAlign_Right" | "HAlign_MAX" */)
    open fun SetMaxDesiredWidth(MaxWidth: Number)
    open fun SetMinDesiredWidth(MinWidth: Number)
    open fun SetVAlign(InAlignment: String /* "VAlign_Fill" | "VAlign_Top" | "VAlign_Center" | "VAlign_Bottom" | "VAlign_MAX" */)

    companion object {
        fun C(Other: UObject): JavascriptDetailWidgetDecl
        fun C(Other: Any): JavascriptDetailWidgetDecl
        fun SetContent(Decl: JavascriptDetailWidgetDecl, Widget: JavascriptSlateWidget)
        fun SetHAlign(Decl: JavascriptDetailWidgetDecl, InAlignment: String /* "HAlign_Fill" | "HAlign_Left" | "HAlign_Center" | "HAlign_Right" | "HAlign_MAX" */)
        fun SetMaxDesiredWidth(Decl: JavascriptDetailWidgetDecl, MaxWidth: Number)
        fun SetMinDesiredWidth(Decl: JavascriptDetailWidgetDecl, MinWidth: Number)
        fun SetVAlign(Decl: JavascriptDetailWidgetDecl, InAlignment: String /* "VAlign_Fill" | "VAlign_Top" | "VAlign_Center" | "VAlign_Bottom" | "VAlign_MAX" */)
    }
}

external open class JavascriptDetailWidgetRow {
    open fun clone(): JavascriptDetailWidgetRow
    open fun NameContent(): JavascriptDetailWidgetDecl
    open fun SetFilterString(InFilterString: String)
    open fun ValueContent(): JavascriptDetailWidgetDecl
    open fun WholeRowContent(): JavascriptDetailWidgetDecl

    companion object {
        fun C(Other: UObject): JavascriptDetailWidgetRow
        fun C(Other: Any): JavascriptDetailWidgetRow
        fun NameContent(Row: JavascriptDetailWidgetRow): JavascriptDetailWidgetDecl
        fun SetFilterString(Row: JavascriptDetailWidgetRow, InFilterString: String)
        fun ValueContent(Row: JavascriptDetailWidgetRow): JavascriptDetailWidgetDecl
        fun WholeRowContent(Row: JavascriptDetailWidgetRow): JavascriptDetailWidgetDecl
    }
}

external open class JavascriptPropertyTypeCustomizationUtils {
    open fun clone(): JavascriptPropertyTypeCustomizationUtils
    open fun RequestRefresh(bForce: Boolean)

    companion object {
        fun C(Other: UObject): JavascriptPropertyTypeCustomizationUtils
        fun C(Other: Any): JavascriptPropertyTypeCustomizationUtils
        fun RequestRefresh(CustomizationUtils: JavascriptPropertyTypeCustomizationUtils, bForce: Boolean)
    }
}

external open class JavascriptSimpleGetBoolDelegateWrapper : UObject {
    constructor()
    constructor(Outer: UObject)
    open var delegate: UnrealEngineDelegate<() -> Boolean>

    companion object {
        fun Load(ResourceName: String): JavascriptSimpleGetBoolDelegateWrapper
        fun Find(Outer: UObject, ResourceName: String): JavascriptSimpleGetBoolDelegateWrapper
        fun GetDefaultObject(): JavascriptSimpleGetBoolDelegateWrapper
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptSimpleGetBoolDelegateWrapper
        fun C(Other: UObject): JavascriptSimpleGetBoolDelegateWrapper
        fun C(Other: Any): JavascriptSimpleGetBoolDelegateWrapper
    }
}

external open class JavascriptDetailPropertyRow {
    open fun clone(): JavascriptDetailPropertyRow
    open fun BindVisibility(Wrapper: JavascriptSimpleGetBoolDelegateWrapper)
    open fun CustomWidget(bShowChildren: Boolean): JavascriptDetailWidgetRow

    companion object {
        fun C(Other: UObject): JavascriptDetailPropertyRow
        fun C(Other: Any): JavascriptDetailPropertyRow
        fun BindVisibility(Row: JavascriptDetailPropertyRow, Wrapper: JavascriptSimpleGetBoolDelegateWrapper)
        fun CustomWidget(Row: JavascriptDetailPropertyRow, bShowChildren: Boolean): JavascriptDetailWidgetRow
    }
}

external interface `T$221` {
    var Objects: Array<UObject>
    var `$`: JavascriptDetailPropertyRow
}

external interface `T$222` {
    var Objects: Array<UObject>
    var `$`: JavascriptDetailPropertyRow
}

external interface `T$223` {
    var Objects: Array<UObject>
    var `$`: JavascriptDetailPropertyRow
}

external interface `T$224` {
    var Objects: Array<UObject>
    var `$`: JavascriptDetailPropertyRow
}

external open class JavascriptDetailChildrenBuilder {
    open fun clone(): JavascriptDetailChildrenBuilder
    open fun AddChildContent(SearchString: String): JavascriptDetailWidgetRow
    open fun AddChildProperty(PropertyHandle: JavascriptPropertyHandle): JavascriptDetailPropertyRow
    open fun AddExternalObjectProperty(Objects: Array<UObject> = definedExternally, PropertyName: String = definedExternally, UniqueIdName: String = definedExternally, bAllowChildrenOverride: Boolean = definedExternally, bCreateCategoryNodesOverride: Boolean = definedExternally): `T$221`
    open fun AddExternalObjects(Objects: Array<UObject> = definedExternally, UniqueIdName: String = definedExternally): `T$222`
    open fun GenerateStructValueWidget(StructPropertyHandle: JavascriptPropertyHandle): JavascriptSlateWidget

    companion object {
        fun C(Other: UObject): JavascriptDetailChildrenBuilder
        fun C(Other: Any): JavascriptDetailChildrenBuilder
        fun AddChildContent(ChildBuilder: JavascriptDetailChildrenBuilder, SearchString: String): JavascriptDetailWidgetRow
        fun AddChildProperty(ChildBuilder: JavascriptDetailChildrenBuilder, PropertyHandle: JavascriptPropertyHandle): JavascriptDetailPropertyRow
        fun AddExternalObjectProperty(ChildBuilder: JavascriptDetailChildrenBuilder, Objects: Array<UObject> = definedExternally, PropertyName: String = definedExternally, UniqueIdName: String = definedExternally, bAllowChildrenOverride: Boolean = definedExternally, bCreateCategoryNodesOverride: Boolean = definedExternally): `T$223`
        fun AddExternalObjects(ChildBuilder: JavascriptDetailChildrenBuilder, Objects: Array<UObject> = definedExternally, UniqueIdName: String = definedExternally): `T$224`
        fun GenerateStructValueWidget(ChildBuilder: JavascriptDetailChildrenBuilder, StructPropertyHandle: JavascriptPropertyHandle): JavascriptSlateWidget
    }
}

external open class JavascriptPropertyCustomization : UObject {
    constructor()
    constructor(Outer: UObject)
    open var PropertyTypeName: String
    open var OnDestroy: UnrealEngineDelegate<(ID: Number) -> Unit>
    open var OnCustomizeHeader: UnrealEngineDelegate<(Handle: JavascriptPropertyHandle, HeaderRow: JavascriptDetailWidgetRow, Utils: JavascriptPropertyTypeCustomizationUtils, ID: Number) -> Unit>
    open var OnCustomizeChildren: UnrealEngineDelegate<(Handle: JavascriptPropertyHandle, ChildBuilder: JavascriptDetailChildrenBuilder, Utils: JavascriptPropertyTypeCustomizationUtils, ID: Number) -> Unit>
    open var OnPropertyValueChanged: UnrealEngineMulticastDelegate<() -> Unit>
    open fun Unregister()
    open fun Register()

    companion object {
        fun Load(ResourceName: String): JavascriptPropertyCustomization
        fun Find(Outer: UObject, ResourceName: String): JavascriptPropertyCustomization
        fun GetDefaultObject(): JavascriptPropertyCustomization
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptPropertyCustomization
        fun C(Other: UObject): JavascriptPropertyCustomization
        fun C(Other: Any): JavascriptPropertyCustomization
    }
}

external interface `T$225` {
    var Objects: Array<UObject>
    var `$`: JavascriptDetailPropertyRow
}

external interface `T$226` {
    var Objects: Array<UObject>
    var `$`: JavascriptDetailPropertyRow
}

external open class JavascriptPropertyCustomizationLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): JavascriptPropertyCustomizationLibrary
        fun Find(Outer: UObject, ResourceName: String): JavascriptPropertyCustomizationLibrary
        fun GetDefaultObject(): JavascriptPropertyCustomizationLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptPropertyCustomizationLibrary
        fun WholeRowContent(Row: JavascriptDetailWidgetRow): JavascriptDetailWidgetDecl
        fun ValueContent(Row: JavascriptDetailWidgetRow): JavascriptDetailWidgetDecl
        fun SetValueFromFormattedString(Handle: JavascriptPropertyHandle, InValue: String): String /* "MultipleValues" | "Fail" | "Success" | "EPropertyAccessResult_MAX" */
        fun SetVAlign(Decl: JavascriptDetailWidgetDecl, InAlignment: String /* "VAlign_Fill" | "VAlign_Top" | "VAlign_Center" | "VAlign_Bottom" | "VAlign_MAX" */)
        fun SetOnPropertyValueChanged(Handle: JavascriptPropertyHandle, Custom: JavascriptPropertyCustomization)
        fun SetMinDesiredWidth(Decl: JavascriptDetailWidgetDecl, MinWidth: Number)
        fun SetMaxDesiredWidth(Decl: JavascriptDetailWidgetDecl, MaxWidth: Number)
        fun SetHAlign(Decl: JavascriptDetailWidgetDecl, InAlignment: String /* "HAlign_Fill" | "HAlign_Left" | "HAlign_Center" | "HAlign_Right" | "HAlign_MAX" */)
        fun SetFilterString(Row: JavascriptDetailWidgetRow, InFilterString: String)
        fun SetContent(Decl: JavascriptDetailWidgetDecl, Widget: JavascriptSlateWidget)
        fun RequestRefresh(CustomizationUtils: JavascriptPropertyTypeCustomizationUtils, bForce: Boolean)
        fun NameContent(Row: JavascriptDetailWidgetRow): JavascriptDetailWidgetDecl
        fun IsValidHandle(Handle: JavascriptPropertyHandle): Boolean
        fun IsEditConst(Handle: JavascriptPropertyHandle): Boolean
        fun GetValueAsFormattedString(Handle: JavascriptPropertyHandle, OutValue: String = definedExternally): `T$220`
        fun GetProperty(Handle: JavascriptPropertyHandle): Property
        fun GetMetaData(Handle: JavascriptPropertyHandle, Key: String): String
        fun GetChildHandle(Parent: JavascriptPropertyHandle, Name: String): JavascriptPropertyHandle
        fun GenerateStructValueWidget(ChildBuilder: JavascriptDetailChildrenBuilder, StructPropertyHandle: JavascriptPropertyHandle): JavascriptSlateWidget
        fun CustomWidget(Row: JavascriptDetailPropertyRow, bShowChildren: Boolean): JavascriptDetailWidgetRow
        fun CreatePropertyValueWidget(Handle: JavascriptPropertyHandle, bHideDefaultPropertyButtons: Boolean): JavascriptSlateWidget
        fun CreatePropertyNameWidget(Handle: JavascriptPropertyHandle, NameOverride: String, ToolTipOverride: String, bDisplayResetToDefault: Boolean, bHideText: Boolean, bHideThumbnail: Boolean): JavascriptSlateWidget
        fun BindVisibility(Row: JavascriptDetailPropertyRow, Wrapper: JavascriptSimpleGetBoolDelegateWrapper)
        fun AddExternalObjects(ChildBuilder: JavascriptDetailChildrenBuilder, Objects: Array<UObject> = definedExternally, UniqueIdName: String = definedExternally): `T$225`
        fun AddExternalObjectProperty(ChildBuilder: JavascriptDetailChildrenBuilder, Objects: Array<UObject> = definedExternally, PropertyName: String = definedExternally, UniqueIdName: String = definedExternally, bAllowChildrenOverride: Boolean = definedExternally, bCreateCategoryNodesOverride: Boolean = definedExternally): `T$226`
        fun AddChildProperty(ChildBuilder: JavascriptDetailChildrenBuilder, PropertyHandle: JavascriptPropertyHandle): JavascriptDetailPropertyRow
        fun AddChildContent(ChildBuilder: JavascriptDetailChildrenBuilder, SearchString: String): JavascriptDetailWidgetRow
        fun C(Other: UObject): JavascriptPropertyCustomizationLibrary
        fun C(Other: Any): JavascriptPropertyCustomizationLibrary
    }
}

external open class JavascriptPropertyTable : Widget {
    constructor()
    constructor(Outer: UObject)
    open fun SetEditingObjects(InEditingObjects: Array<UObject>)
    open fun GetEditingObjects(): Array<UObject>

    companion object {
        fun Load(ResourceName: String): JavascriptPropertyTable
        fun Find(Outer: UObject, ResourceName: String): JavascriptPropertyTable
        fun GetDefaultObject(): JavascriptPropertyTable
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptPropertyTable
        fun C(Other: UObject): JavascriptPropertyTable
        fun C(Other: Any): JavascriptPropertyTable
    }
}

external interface `T$227` {
    var InMesh: JavascriptRawMesh
}

external interface `T$228` {
    var OutMesh: JavascriptRawMesh
}

external interface `T$229` {
    var RawMesh: JavascriptRawMesh
}

external open class JavascriptRawMeshLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): JavascriptRawMeshLibrary
        fun Find(Outer: UObject, ResourceName: String): JavascriptRawMeshLibrary
        fun GetDefaultObject(): JavascriptRawMeshLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptRawMeshLibrary
        fun SetSectionInfo(StaticMesh: StaticMesh, LODIndex: Number, SectionIndex: Number, Info: MeshSectionInfo)
        fun SaveRawMesh(StaticMesh: StaticMesh, SourceModelIndex: Number, InMesh: JavascriptRawMesh = definedExternally): `T$227`
        fun LoadRawMesh(StaticMesh: StaticMesh, SourceModelIndex: Number, OutMesh: JavascriptRawMesh = definedExternally): `T$228`
        fun IsValidOrFixable(RawMesh: JavascriptRawMesh): Boolean
        fun IsValid(RawMesh: JavascriptRawMesh): Boolean
        fun GetWedgePosition(RawMesh: JavascriptRawMesh, WedgeIndex: Number): Vector
        fun GetSectionInfo(StaticMesh: StaticMesh, LODIndex: Number, SectionIndex: Number): MeshSectionInfo
        fun Empty(RawMesh: JavascriptRawMesh = definedExternally): `T$229`
        fun CompactMaterialIndices(RawMesh: JavascriptRawMesh = definedExternally): `T$229`
        fun Build(StaticMesh: StaticMesh)
        fun C(Other: UObject): JavascriptRawMeshLibrary
        fun C(Other: Any): JavascriptRawMeshLibrary
    }
}

external open class JavascriptScrubControlPanel : Widget {
    constructor()
    constructor(Outer: UObject)
    open var OnClick_Forward_Delegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnClick_Forward_Step_Delegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnClick_Forward_End_Delegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnClick_Backward_Delegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnClick_Backward_Step_Delegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnClick_Backward_End_Delegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnClick_ToggleLoop_Delegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var SetPlaybackPosition_Delegate: UnrealEngineMulticastDelegate<() -> Unit>
    open fun SetViewRange(NewMin: Number, NewMax: Number)
    open fun SetSumFrames(NewSumFrames: Number)
    open fun SetPlaybackPosition(NewTime: Number)
    open fun SetLooping(NewbLooping: Boolean)
    open fun SetFramesPerSecond(NewFramesPerSecond: Number)
    open fun IsLooping(): Boolean
    open fun GetViewRangeMin(): Number
    open fun GetViewRangeMax(): Number
    open fun GetTotalSequenceLength(): Number
    open fun GetTotalFrameCount(): Any
    open fun GetPlaybackPosition(): Number
    open fun GetFramesPerSecond(): Number

    companion object {
        fun Load(ResourceName: String): JavascriptScrubControlPanel
        fun Find(Outer: UObject, ResourceName: String): JavascriptScrubControlPanel
        fun GetDefaultObject(): JavascriptScrubControlPanel
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptScrubControlPanel
        fun C(Other: UObject): JavascriptScrubControlPanel
        fun C(Other: Any): JavascriptScrubControlPanel
    }
}

external open class JavascriptWebBrowser : Widget {
    constructor()
    constructor(Outer: UObject)
    open var OnUrlChanged: UnrealEngineMulticastDelegate<(text: String) -> Unit>
    open var OnBeforePopup: UnrealEngineMulticastDelegate<(URL: String, Frame: String) -> Unit>
    open var bShowAddressBar: Boolean
    open var bShowControls: Boolean
    open var bSupportsThumbMouseButtonNavigation: Boolean
    open fun LoadURL(NewURL: String)
    open fun LoadString(Contents: String, DummyURL: String)
    open fun GetUrl(): String
    open fun GetTitleText(): String
    open fun ExecuteJavascript(ScriptText: String)

    companion object {
        fun Load(ResourceName: String): JavascriptWebBrowser
        fun Find(Outer: UObject, ResourceName: String): JavascriptWebBrowser
        fun GetDefaultObject(): JavascriptWebBrowser
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JavascriptWebBrowser
        fun C(Other: UObject): JavascriptWebBrowser
        fun C(Other: Any): JavascriptWebBrowser
    }
}

external object EPropertyEditorNameAreaSettings {
    var HideNameArea: String /* "HideNameArea" */
    var ObjectsUseNameArea: String /* "ObjectsUseNameArea" */
    var ActorsUseNameArea: String /* "ActorsUseNameArea" */
    var ComponentsAndActorsUseNameArea: String /* "ComponentsAndActorsUseNameArea" */
    var EPropertyEditorNameAreaSettings_MAX: String /* "EPropertyEditorNameAreaSettings_MAX" */
}

external open class PropertyEditor : Widget {
    constructor()
    constructor(Outer: UObject)
    open var OnChange: UnrealEngineMulticastDelegate<(PropertyName: String, MemberPropertyName: String) -> Unit>
    open var bUpdateFromSelection: Boolean
    open var bLockable: Boolean
    open var bAllowSearch: Boolean
    open var bHideSelectionTip: Boolean
    open var bReadOnly: Boolean
    open var bEnablePropertyPath: Boolean
    open var NameAreaSettings: String /* "HideNameArea" | "ObjectsUseNameArea" | "ActorsUseNameArea" | "ComponentsAndActorsUseNameArea" | "EPropertyEditorNameAreaSettings_MAX" */
    open fun SetObjects(Objects: Array<UObject>, bForceRefresh: Boolean, bOverrideLock: Boolean)
    open fun SetObject(UObject: UObject, bForceRefresh: Boolean)
    open fun IsPropertyVisible(PropertName: String, ParentPropertyName: String, PropertyPaths: Array<String>): Boolean
    open fun IsPropertyReadOnly(PropertyName: String, ParentPropertyName: String, PropertyPaths: Array<String>): Boolean
    open fun Destruct()
    open fun Construct()

    companion object {
        fun Load(ResourceName: String): PropertyEditor
        fun Find(Outer: UObject, ResourceName: String): PropertyEditor
        fun GetDefaultObject(): PropertyEditor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PropertyEditor
        fun C(Other: UObject): PropertyEditor
        fun C(Other: Any): PropertyEditor
    }
}

external open class MockAI : UObject {
    constructor()
    constructor(Outer: UObject)
    open var BBComp: BlackboardComponent
    open var BrainComp: BrainComponent
    open var PerceptionComp: AIPerceptionComponent
    open var PawnActionComp: PawnActionsComponent

    companion object {
        fun Load(ResourceName: String): MockAI
        fun Find(Outer: UObject, ResourceName: String): MockAI
        fun GetDefaultObject(): MockAI
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MockAI
        fun C(Other: UObject): MockAI
        fun C(Other: Any): MockAI
    }
}

external open class MockAI_BT : MockAI {
    constructor()
    constructor(Outer: UObject)
    open var BTComp: BehaviorTreeComponent

    companion object {
        fun Load(ResourceName: String): MockAI_BT
        fun Find(Outer: UObject, ResourceName: String): MockAI_BT
        fun GetDefaultObject(): MockAI_BT
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MockAI_BT
        fun C(Other: UObject): MockAI_BT
        fun C(Other: Any): MockAI_BT
    }
}

external open class MockTask_Log : GameplayTask {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MockTask_Log
        fun Find(Outer: UObject, ResourceName: String): MockTask_Log
        fun GetDefaultObject(): MockTask_Log
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MockTask_Log
        fun C(Other: UObject): MockTask_Log
        fun C(Other: Any): MockTask_Log
    }
}

external open class MockGameplayTasksComponent : GameplayTasksComponent {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MockGameplayTasksComponent
        fun Find(Outer: UObject, ResourceName: String): MockGameplayTasksComponent
        fun GetDefaultObject(): MockGameplayTasksComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MockGameplayTasksComponent
        fun C(Other: UObject): MockGameplayTasksComponent
        fun C(Other: Any): MockGameplayTasksComponent
    }
}

external open class MockGameplayTaskOwner : UObject {
    constructor()
    constructor(Outer: UObject)
    open var GTComponent: GameplayTasksComponent

    companion object {
        fun Load(ResourceName: String): MockGameplayTaskOwner
        fun Find(Outer: UObject, ResourceName: String): MockGameplayTaskOwner
        fun GetDefaultObject(): MockGameplayTaskOwner
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MockGameplayTaskOwner
        fun C(Other: UObject): MockGameplayTaskOwner
        fun C(Other: Any): MockGameplayTaskOwner
    }
}

external open class TestBTDecorator_CantExecute : BTDecorator {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TestBTDecorator_CantExecute
        fun Find(Outer: UObject, ResourceName: String): TestBTDecorator_CantExecute
        fun GetDefaultObject(): TestBTDecorator_CantExecute
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TestBTDecorator_CantExecute
        fun C(Other: UObject): TestBTDecorator_CantExecute
        fun C(Other: Any): TestBTDecorator_CantExecute
    }
}

external open class TestBTDecorator_DelayedAbort : BTDecorator {
    constructor()
    constructor(Outer: UObject)
    open var DelayTicks: Number
    open var bOnlyOnce: Boolean

    companion object {
        fun Load(ResourceName: String): TestBTDecorator_DelayedAbort
        fun Find(Outer: UObject, ResourceName: String): TestBTDecorator_DelayedAbort
        fun GetDefaultObject(): TestBTDecorator_DelayedAbort
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TestBTDecorator_DelayedAbort
        fun C(Other: UObject): TestBTDecorator_DelayedAbort
        fun C(Other: Any): TestBTDecorator_DelayedAbort
    }
}

external open class TestBTService_Log : BTService {
    constructor()
    constructor(Outer: UObject)
    open var LogActivation: Number
    open var LogDeactivation: Number

    companion object {
        fun Load(ResourceName: String): TestBTService_Log
        fun Find(Outer: UObject, ResourceName: String): TestBTService_Log
        fun GetDefaultObject(): TestBTService_Log
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TestBTService_Log
        fun C(Other: UObject): TestBTService_Log
        fun C(Other: Any): TestBTService_Log
    }
}

external open class TestBTTask_LatentWithFlags : BTTaskNode {
    constructor()
    constructor(Outer: UObject)
    open var LogIndexExecuteStart: Number
    open var LogIndexExecuteFinish: Number
    open var LogIndexAbortStart: Number
    open var LogIndexAbortFinish: Number
    open var ExecuteTicks: Number
    open var AbortTicks: Number
    open var KeyNameExecute: String
    open var KeyNameAbort: String
    open var LogResult: String /* "Succeeded" | "Failed" | "Aborted" | "InProgress" | "EBTNodeResult_MAX" */

    companion object {
        fun Load(ResourceName: String): TestBTTask_LatentWithFlags
        fun Find(Outer: UObject, ResourceName: String): TestBTTask_LatentWithFlags
        fun GetDefaultObject(): TestBTTask_LatentWithFlags
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TestBTTask_LatentWithFlags
        fun C(Other: UObject): TestBTTask_LatentWithFlags
        fun C(Other: Any): TestBTTask_LatentWithFlags
    }
}

external open class TestBTTask_Log : BTTaskNode {
    constructor()
    constructor(Outer: UObject)
    open var LogIndex: Number
    open var LogFinished: Number
    open var ExecutionTicks: Number
    open var LogResult: String /* "Succeeded" | "Failed" | "Aborted" | "InProgress" | "EBTNodeResult_MAX" */

    companion object {
        fun Load(ResourceName: String): TestBTTask_Log
        fun Find(Outer: UObject, ResourceName: String): TestBTTask_Log
        fun GetDefaultObject(): TestBTTask_Log
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TestBTTask_Log
        fun C(Other: UObject): TestBTTask_Log
        fun C(Other: Any): TestBTTask_Log
    }
}

external open class TestBTTask_SetFlag : BTTaskNode {
    constructor()
    constructor(Outer: UObject)
    open var KeyName: String
    open var bValue: Boolean
    open var TaskResult: String /* "Succeeded" | "Failed" | "Aborted" | "InProgress" | "EBTNodeResult_MAX" */

    companion object {
        fun Load(ResourceName: String): TestBTTask_SetFlag
        fun Find(Outer: UObject, ResourceName: String): TestBTTask_SetFlag
        fun GetDefaultObject(): TestBTTask_SetFlag
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TestBTTask_SetFlag
        fun C(Other: UObject): TestBTTask_SetFlag
        fun C(Other: Any): TestBTTask_SetFlag
    }
}

external open class TestBTTask_SetValue : BTTaskNode {
    constructor()
    constructor(Outer: UObject)
    open var KeyName: String
    open var Value: Number
    open var TaskResult: String /* "Succeeded" | "Failed" | "Aborted" | "InProgress" | "EBTNodeResult_MAX" */

    companion object {
        fun Load(ResourceName: String): TestBTTask_SetValue
        fun Find(Outer: UObject, ResourceName: String): TestBTTask_SetValue
        fun GetDefaultObject(): TestBTTask_SetValue
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TestBTTask_SetValue
        fun C(Other: UObject): TestBTTask_SetValue
        fun C(Other: Any): TestBTTask_SetValue
    }
}

external open class TestPawnAction_Log : PawnAction {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TestPawnAction_Log
        fun Find(Outer: UObject, ResourceName: String): TestPawnAction_Log
        fun GetDefaultObject(): TestPawnAction_Log
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TestPawnAction_Log
        fun C(Other: UObject): TestPawnAction_Log
        fun C(Other: Any): TestPawnAction_Log
    }
}

external open class TestPawnAction_CallFunction : TestPawnAction_Log {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TestPawnAction_CallFunction
        fun Find(Outer: UObject, ResourceName: String): TestPawnAction_CallFunction
        fun GetDefaultObject(): TestPawnAction_CallFunction
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TestPawnAction_CallFunction
        fun C(Other: UObject): TestPawnAction_CallFunction
        fun C(Other: Any): TestPawnAction_CallFunction
    }
}

external object ELiveCodingStartupMode {
    var Automatic: String /* "Automatic" */
    var AutomaticButHidden: String /* "AutomaticButHidden" */
    var Manual: String /* "Manual" */
    var ELiveCodingStartupMode_MAX: String /* "ELiveCodingStartupMode_MAX" */
}

external open class LiveCodingSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bEnabled: Boolean
    open var Startup: String /* "Automatic" | "AutomaticButHidden" | "Manual" | "ELiveCodingStartupMode_MAX" */
    open var bPreloadEngineModules: Boolean
    open var bPreloadEnginePluginModules: Boolean
    open var bPreloadProjectModules: Boolean
    open var bPreloadProjectPluginModules: Boolean
    open var PreloadNamedModules: Array<String>

    companion object {
        fun Load(ResourceName: String): LiveCodingSettings
        fun Find(Outer: UObject, ResourceName: String): LiveCodingSettings
        fun GetDefaultObject(): LiveCodingSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveCodingSettings
        fun C(Other: UObject): LiveCodingSettings
        fun C(Other: Any): LiveCodingSettings
    }
}

external open class StructViewerProjectSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var InternalOnlyPaths: Array<DirectoryPath>
    open var InternalOnlyStructs: Array<ScriptStruct>

    companion object {
        fun Load(ResourceName: String): StructViewerProjectSettings
        fun Find(Outer: UObject, ResourceName: String): StructViewerProjectSettings
        fun GetDefaultObject(): StructViewerProjectSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): StructViewerProjectSettings
        fun C(Other: UObject): StructViewerProjectSettings
        fun C(Other: Any): StructViewerProjectSettings
    }
}

external open class UndoHistorySettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bShowTransactionDetails: Boolean

    companion object {
        fun Load(ResourceName: String): UndoHistorySettings
        fun Find(Outer: UObject, ResourceName: String): UndoHistorySettings
        fun GetDefaultObject(): UndoHistorySettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UndoHistorySettings
        fun C(Other: UObject): UndoHistorySettings
        fun C(Other: Any): UndoHistorySettings
    }
}

external open class LocalizationDashboardSettings : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LocalizationDashboardSettings
        fun Find(Outer: UObject, ResourceName: String): LocalizationDashboardSettings
        fun GetDefaultObject(): LocalizationDashboardSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LocalizationDashboardSettings
        fun C(Other: UObject): LocalizationDashboardSettings
        fun C(Other: Any): LocalizationDashboardSettings
    }
}

external object EMeshInstancingReplacementMethod {
    var RemoveOriginalActors: String /* "RemoveOriginalActors" */
    var KeepOriginalActorsAsEditorOnly: String /* "KeepOriginalActorsAsEditorOnly" */
    var EMeshInstancingReplacementMethod_MAX: String /* "EMeshInstancingReplacementMethod_MAX" */
}

external open class MeshInstancingSettings {
    open var ActorClassToUse: UnrealEngineClass
    open var InstanceReplacementThreshold: Number
    open var MeshReplacementMethod: String /* "RemoveOriginalActors" | "KeepOriginalActorsAsEditorOnly" | "EMeshInstancingReplacementMethod_MAX" */
    open var bSkipMeshesWithVertexColors: Boolean
    open var bUseHLODVolumes: Boolean
    open var ISMComponentToUse: UnrealEngineClass
    open fun clone(): MeshInstancingSettings

    companion object {
        fun C(Other: UObject): MeshInstancingSettings
        fun C(Other: Any): MeshInstancingSettings
    }
}

external open class MeshInstancingSettingsObject : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Settings: MeshInstancingSettings

    companion object {
        fun Load(ResourceName: String): MeshInstancingSettingsObject
        fun Find(Outer: UObject, ResourceName: String): MeshInstancingSettingsObject
        fun GetDefaultObject(): MeshInstancingSettingsObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MeshInstancingSettingsObject
        fun C(Other: UObject): MeshInstancingSettingsObject
        fun C(Other: Any): MeshInstancingSettingsObject
    }
}

external open class MeshMergingSettingsObject : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Settings: MeshMergingSettings

    companion object {
        fun Load(ResourceName: String): MeshMergingSettingsObject
        fun Find(Outer: UObject, ResourceName: String): MeshMergingSettingsObject
        fun GetDefaultObject(): MeshMergingSettingsObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MeshMergingSettingsObject
        fun C(Other: UObject): MeshMergingSettingsObject
        fun C(Other: Any): MeshMergingSettingsObject
    }
}

external open class MeshProxySettingsObject : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Settings: MeshProxySettings

    companion object {
        fun Load(ResourceName: String): MeshProxySettingsObject
        fun Find(Outer: UObject, ResourceName: String): MeshProxySettingsObject
        fun GetDefaultObject(): MeshProxySettingsObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MeshProxySettingsObject
        fun C(Other: UObject): MeshProxySettingsObject
        fun C(Other: Any): MeshProxySettingsObject
    }
}

external open class EditorKeyboardShortcutSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EditorKeyboardShortcutSettings
        fun Find(Outer: UObject, ResourceName: String): EditorKeyboardShortcutSettings
        fun GetDefaultObject(): EditorKeyboardShortcutSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorKeyboardShortcutSettings
        fun C(Other: UObject): EditorKeyboardShortcutSettings
        fun C(Other: Any): EditorKeyboardShortcutSettings
    }
}

external object EIOSCloudKitSyncStrategy {
    var None: String /* "None" */
    var OnlyAtGameStart: String /* "OnlyAtGameStart" */
    var Always: String /* "Always" */
    var EIOSCloudKitSyncStrategy_MAX: String /* "EIOSCloudKitSyncStrategy_MAX" */
}

external open class IOSBuildResourceDirectory {
    open var Path: String
    open fun clone(): IOSBuildResourceDirectory

    companion object {
        fun C(Other: UObject): IOSBuildResourceDirectory
        fun C(Other: Any): IOSBuildResourceDirectory
    }
}

external open class IOSBuildResourceFilePath {
    open var FilePath: String
    open fun clone(): IOSBuildResourceFilePath

    companion object {
        fun C(Other: UObject): IOSBuildResourceFilePath
        fun C(Other: Any): IOSBuildResourceFilePath
    }
}

external object EIOSLandscapeOrientation {
    var LandscapeLeft: String /* "LandscapeLeft" */
    var LandscapeRight: String /* "LandscapeRight" */
    var EIOSLandscapeOrientation_MAX: String /* "EIOSLandscapeOrientation_MAX" */
}

external object EPowerUsageFrameRateLock {
    var PUFRL_None: String /* "PUFRL_None" */
    var PUFRL_20: String /* "PUFRL_20" */
    var PUFRL_30: String /* "PUFRL_30" */
    var PUFRL_60: String /* "PUFRL_60" */
    var PUFRL_MAX: String /* "PUFRL_MAX" */
}

external object EIOSVersion {
    var IOS_61: String /* "IOS_61" */
    var IOS_7: String /* "IOS_7" */
    var IOS_8: String /* "IOS_8" */
    var IOS_9: String /* "IOS_9" */
    var IOS_10: String /* "IOS_10" */
    var IOS_11: String /* "IOS_11" */
    var IOS_12: String /* "IOS_12" */
    var IOS_MAX: String /* "IOS_MAX" */
}

external open class IOSRuntimeSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bEnableGameCenterSupport: Boolean
    open var bEnableCloudKitSupport: Boolean
    open var IOSCloudKitSyncStrategy: String /* "None" | "OnlyAtGameStart" | "Always" | "EIOSCloudKitSyncStrategy_MAX" */
    open var bEnableRemoteNotificationsSupport: Boolean
    open var bEnableBackgroundFetch: Boolean
    open var bSupportsMetal: Boolean
    open var bSupportsMetalMRT: Boolean
    open var bCookPVRTCTextures: Boolean
    open var bCookASTCTextures: Boolean
    open var bSupportsOpenGLES2: Boolean
    open var EnableRemoteShaderCompile: Boolean
    open var bGeneratedSYMFile: Boolean
    open var bGeneratedSYMBundle: Boolean
    open var bGenerateCrashReportSymbols: Boolean
    open var bGenerateXCArchive: Boolean
    open var bDevForArmV7: Boolean
    open var bDevForArm64: Boolean
    open var bDevForArmV7S: Boolean
    open var bShipForArmV7: Boolean
    open var bShipForArm64: Boolean
    open var bShipForArmV7S: Boolean
    open var bShipForBitcode: Boolean
    open var bEnableAdvertisingIdentifier: Boolean
    open var AdditionalLinkerFlags: String
    open var AdditionalShippingLinkerFlags: String
    open var RemoteServerName: String
    open var bUseRSync: Boolean
    open var RSyncUsername: String
    open var DeltaCopyInstallPath: IOSBuildResourceDirectory
    open var SSHPrivateKeyLocation: String
    open var SSHPrivateKeyOverridePath: IOSBuildResourceFilePath
    open var bTreatRemoteAsSeparateController: Boolean
    open var bAllowRemoteRotation: Boolean
    open var bUseRemoteAsVirtualJoystick: Boolean
    open var bUseRemoteAbsoluteDpadValues: Boolean
    open var bAllowControllers: Boolean
    open var bDisableMotionData: Boolean
    open var bSupportsPortraitOrientation: Boolean
    open var bSupportsUpsideDownOrientation: Boolean
    open var bSupportsLandscapeLeftOrientation: Boolean
    open var bSupportsLandscapeRightOrientation: Boolean
    open var bSupportsITunesFileSharing: Boolean
    open var PreferredLandscapeOrientation: String /* "LandscapeLeft" | "LandscapeRight" | "EIOSLandscapeOrientation_MAX" */
    open var BundleDisplayName: String
    open var BundleName: String
    open var BundleIdentifier: String
    open var VersionInfo: String
    open var FrameRateLock: String /* "PUFRL_None" | "PUFRL_20" | "PUFRL_30" | "PUFRL_60" | "PUFRL_MAX" */
    open var MinimumiOSVersion: String /* "IOS_61" | "IOS_7" | "IOS_8" | "IOS_9" | "IOS_10" | "IOS_11" | "IOS_12" | "IOS_MAX" */
    open var bSupportsIPad: Boolean
    open var bSupportsIPhone: Boolean
    open var AdditionalPlistData: String
    open var bEnableFacebookSupport: Boolean
    open var FacebookAppID: String
    open var MobileProvision: String
    open var SigningCertificate: String
    open var bAutomaticSigning: Boolean
    open var IOSTeamID: String
    open var bDisableHTTPS: Boolean
    open var MaxShaderLanguageVersion: Number
    open var UseFastIntrinsics: Boolean
    open var ForceFloats: Boolean
    open var EnableMathOptimisations: Boolean
    open var bUseIntegratedKeyboard: Boolean
    open var AudioSampleRate: Number
    open var AudioCallbackBufferFrameSize: Number
    open var AudioNumBuffersToEnqueue: Number
    open var AudioMaxChannels: Number
    open var AudioNumSourceWorkers: Number
    open var SpatializationPlugin: String
    open var ReverbPlugin: String
    open var OcclusionPlugin: String
    open var CompressionOverrides: PlatformRuntimeAudioCompressionOverrides
    open var bResampleForDevice: Boolean
    open var MaxSampleRate: Number
    open var HighSampleRate: Number
    open var MedSampleRate: Number
    open var LowSampleRate: Number
    open var MinSampleRate: Number
    open var CompressionQualityModifier: Number
    open var AutoStreamingThreshold: Number

    companion object {
        fun Load(ResourceName: String): IOSRuntimeSettings
        fun Find(Outer: UObject, ResourceName: String): IOSRuntimeSettings
        fun GetDefaultObject(): IOSRuntimeSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): IOSRuntimeSettings
        fun C(Other: UObject): IOSRuntimeSettings
        fun C(Other: Any): IOSRuntimeSettings
    }
}

external object ELuminFrameTimingHint {
    var Unspecified: String /* "Unspecified" */
    var Maximum: String /* "Maximum" */
    var FPS_60: String /* "FPS_60" */
    var FPS_120: String /* "FPS_120" */
    var ELuminFrameTimingHint_MAX: String /* "ELuminFrameTimingHint_MAX" */
}

external object ELuminPrivilege {
    var Invalid: String /* "Invalid" */
    var AudioRecognizer: String /* "AudioRecognizer" */
    var BatteryInfo: String /* "BatteryInfo" */
    var CameraCapture: String /* "CameraCapture" */
    var WorldReconstruction: String /* "WorldReconstruction" */
    var InAppPurchase: String /* "InAppPurchase" */
    var AudioCaptureMic: String /* "AudioCaptureMic" */
    var DrmCertificates: String /* "DrmCertificates" */
    var Occlusion: String /* "Occlusion" */
    var LowLatencyLightwear: String /* "LowLatencyLightwear" */
    var Internet: String /* "Internet" */
    var IdentityRead: String /* "IdentityRead" */
    var BackgroundDownload: String /* "BackgroundDownload" */
    var BackgroundUpload: String /* "BackgroundUpload" */
    var MediaDrm: String /* "MediaDrm" */
    var Media: String /* "Media" */
    var MediaMetadata: String /* "MediaMetadata" */
    var PowerInfo: String /* "PowerInfo" */
    var LocalAreaNetwork: String /* "LocalAreaNetwork" */
    var VoiceInput: String /* "VoiceInput" */
    var Documents: String /* "Documents" */
    var ConnectBackgroundMusicService: String /* "ConnectBackgroundMusicService" */
    var RegisterBackgroundMusicService: String /* "RegisterBackgroundMusicService" */
    var PwFoundObjRead: String /* "PwFoundObjRead" */
    var NormalNotificationsUsage: String /* "NormalNotificationsUsage" */
    var MusicService: String /* "MusicService" */
    var ControllerPose: String /* "ControllerPose" */
    var ScreensProvider: String /* "ScreensProvider" */
    var GesturesSubscribe: String /* "GesturesSubscribe" */
    var GesturesConfig: String /* "GesturesConfig" */
    var ELuminPrivilege_MAX: String /* "ELuminPrivilege_MAX" */
}

external open class LuminRuntimeSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var PackageName: String
    open var ApplicationDisplayName: String
    open var bIsScreensApp: Boolean
    open var FrameTimingHint: String /* "Unspecified" | "Maximum" | "FPS_60" | "FPS_120" | "ELuminFrameTimingHint_MAX" */
    open var bProtectedContent: Boolean
    open var bUseMobileRendering: Boolean
    open var bUseVulkan: Boolean
    open var bBuildWithNvTegraGfxDebugger: Boolean
    open var Certificate: FilePath
    open var IconModelPath: DirectoryPath
    open var IconPortalPath: DirectoryPath
    open var VersionCode: Number
    open var MinimumAPILevel: Number
    open var AppPrivileges: Array<String /* "Invalid" | "AudioRecognizer" | "BatteryInfo" | "CameraCapture" | "WorldReconstruction" | "InAppPurchase" | "AudioCaptureMic" | "DrmCertificates" | "Occlusion" | "LowLatencyLightwear" | "Internet" | "IdentityRead" | "BackgroundDownload" | "BackgroundUpload" | "MediaDrm" | "Media" | "MediaMetadata" | "PowerInfo" | "LocalAreaNetwork" | "VoiceInput" | "Documents" | "ConnectBackgroundMusicService" | "RegisterBackgroundMusicService" | "PwFoundObjRead" | "NormalNotificationsUsage" | "MusicService" | "ControllerPose" | "ScreensProvider" | "GesturesSubscribe" | "GesturesConfig" | "ELuminPrivilege_MAX" */>
    open var ExtraApplicationNodes: Array<String>
    open var ExtraComponentNodes: Array<String>
    open var SpatializationPlugin: String
    open var ReverbPlugin: String
    open var OcclusionPlugin: String
    open var bRemoveDebugInfo: Boolean

    companion object {
        fun Load(ResourceName: String): LuminRuntimeSettings
        fun Find(Outer: UObject, ResourceName: String): LuminRuntimeSettings
        fun GetDefaultObject(): LuminRuntimeSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LuminRuntimeSettings
        fun C(Other: UObject): LuminRuntimeSettings
        fun C(Other: Any): LuminRuntimeSettings
    }
}

external open class AndroidSDKSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var SDKPath: DirectoryPath
    open var NDKPath: DirectoryPath
    open var ANTPath: DirectoryPath
    open var JavaPath: DirectoryPath
    open var SDKAPILevel: String
    open var NDKAPILevel: String

    companion object {
        fun Load(ResourceName: String): AndroidSDKSettings
        fun Find(Outer: UObject, ResourceName: String): AndroidSDKSettings
        fun GetDefaultObject(): AndroidSDKSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AndroidSDKSettings
        fun C(Other: UObject): AndroidSDKSettings
        fun C(Other: Any): AndroidSDKSettings
    }
}

external open class HTML5SDKSettings : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): HTML5SDKSettings
        fun Find(Outer: UObject, ResourceName: String): HTML5SDKSettings
        fun GetDefaultObject(): HTML5SDKSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): HTML5SDKSettings
        fun C(Other: UObject): HTML5SDKSettings
        fun C(Other: Any): HTML5SDKSettings
    }
}

external object ECanvasScalingMode {
    var Stretch: String /* "Stretch" */
    var Aspect: String /* "Aspect" */
    var Fixed: String /* "Fixed" */
    var ECanvasScalingMode_MAX: String /* "ECanvasScalingMode_MAX" */
}

external open class HTML5TargetSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var EnableIndexedDB: Boolean
    open var UseFixedTimeStep: Boolean
    open var EnableMultithreading: Boolean
    open var OffscreenCanvas: Boolean
    open var EnableTracing: Boolean
    open var CanvasScalingMode: String /* "Stretch" | "Aspect" | "Fixed" | "ECanvasScalingMode_MAX" */
    open var Compressed: Boolean
    open var DeployServerPort: Number
    open var UploadToS3: Boolean
    open var S3Region: String
    open var S3KeyID: String
    open var S3SecretAccessKey: String
    open var S3BucketName: String
    open var S3FolderName: String
    open var SpatializationPlugin: String
    open var ReverbPlugin: String
    open var OcclusionPlugin: String

    companion object {
        fun Load(ResourceName: String): HTML5TargetSettings
        fun Find(Outer: UObject, ResourceName: String): HTML5TargetSettings
        fun GetDefaultObject(): HTML5TargetSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): HTML5TargetSettings
        fun C(Other: UObject): HTML5TargetSettings
        fun C(Other: Any): HTML5TargetSettings
    }
}

external open class MagicLeapSDKSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var MLSDKPath: DirectoryPath

    companion object {
        fun Load(ResourceName: String): MagicLeapSDKSettings
        fun Find(Outer: UObject, ResourceName: String): MagicLeapSDKSettings
        fun GetDefaultObject(): MagicLeapSDKSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MagicLeapSDKSettings
        fun C(Other: UObject): MagicLeapSDKSettings
        fun C(Other: Any): MagicLeapSDKSettings
    }
}

external object ETutorialContent {
    var None: String /* "None" */
    var Text: String /* "Text" */
    var UDNExcerpt: String /* "UDNExcerpt" */
    var RichText: String /* "RichText" */
    var ETutorialContent_MAX: String /* "ETutorialContent_MAX" */
}

external open class TutorialContent {
    open var Type: String /* "None" | "Text" | "UDNExcerpt" | "RichText" | "ETutorialContent_MAX" */
    open var Content: String
    open var ExcerptName: String
    open var text: String
    open fun clone(): TutorialContent

    companion object {
        fun C(Other: UObject): TutorialContent
        fun C(Other: Any): TutorialContent
    }
}

external object ETutorialAnchorIdentifier {
    var None: String /* "None" */
    var NamedWidget: String /* "NamedWidget" */
    var Asset: String /* "Asset" */
    var ETutorialAnchorIdentifier_MAX: String /* "ETutorialAnchorIdentifier_MAX" */
}

external open class TutorialContentAnchor {
    open var Type: String /* "None" | "NamedWidget" | "Asset" | "ETutorialAnchorIdentifier_MAX" */
    open var WrapperIdentifier: String
    open var Asset: SoftObjectPath
    open var bDrawHighlight: Boolean
    open var TabToFocusOrOpen: String
    open var FriendlyName: String
    open var GuidString: String
    open var OuterName: String
    open fun clone(): TutorialContentAnchor

    companion object {
        fun C(Other: UObject): TutorialContentAnchor
        fun C(Other: Any): TutorialContentAnchor
    }
}

external open class TutorialWidgetContent {
    open var Content: TutorialContent
    open var WidgetAnchor: TutorialContentAnchor
    open var HorizontalAlignment: String /* "HAlign_Fill" | "HAlign_Left" | "HAlign_Center" | "HAlign_Right" | "HAlign_MAX" */
    open var VerticalAlignment: String /* "VAlign_Fill" | "VAlign_Top" | "VAlign_Center" | "VAlign_Bottom" | "VAlign_MAX" */
    open var Offset: Vector2D
    open var ContentWidth: Number
    open var bAutoFocus: Boolean
    open fun clone(): TutorialWidgetContent

    companion object {
        fun C(Other: UObject): TutorialWidgetContent
        fun C(Other: Any): TutorialWidgetContent
    }
}

external open class TutorialStage {
    open var Name: String
    open var Content: TutorialContent
    open var WidgetContent: Array<TutorialWidgetContent>
    open var NextButtonText: String
    open var BackButtonText: String
    open var PlatformsToTest: Array<String>
    open var bInvertPlatformTest: Boolean
    open fun clone(): TutorialStage

    companion object {
        fun C(Other: UObject): TutorialStage
        fun C(Other: Any): TutorialStage
    }
}

external open class EditorTutorial : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Title: String
    open var SortOrder: Number
    open var Icon: String
    open var Texture: Texture2D
    open var Category: String
    open var SummaryContent: TutorialContent
    open var Stages: Array<TutorialStage>
    open var PreviousTutorial: SoftClassPath
    open var NextTutorial: SoftClassPath
    open var bIsStandalone: Boolean
    open var AssetToUse: SoftObjectPath
    open var ImportPath: String
    open var bHideInBrowser: Boolean
    open var SearchTags: String
    open fun OnTutorialStageStarted(StageName: String)
    open fun OnTutorialStageEnded(StageName: String)
    open fun OnTutorialLaunched()
    open fun OnTutorialClosed()
    open fun GetActorReference(PathToActor: String): Actor

    companion object {
        fun Load(ResourceName: String): EditorTutorial
        fun Find(Outer: UObject, ResourceName: String): EditorTutorial
        fun GetDefaultObject(): EditorTutorial
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorTutorial
        fun SetEngineFolderVisibilty(bNewVisibility: Boolean)
        fun OpenAsset(Asset: UObject)
        fun GoToPreviousTutorialStage()
        fun GoToNextTutorialStage()
        fun GetEngineFolderVisibilty(): Boolean
        fun BeginTutorial(TutorialToStart: EditorTutorial, bRestart: Boolean)
        fun C(Other: UObject): EditorTutorial
        fun C(Other: Any): EditorTutorial
    }
}

external open class EditorTutorialFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EditorTutorialFactory
        fun Find(Outer: UObject, ResourceName: String): EditorTutorialFactory
        fun GetDefaultObject(): EditorTutorialFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorTutorialFactory
        fun C(Other: UObject): EditorTutorialFactory
        fun C(Other: Any): EditorTutorialFactory
    }
}

external open class EditorTutorialImportFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EditorTutorialImportFactory
        fun Find(Outer: UObject, ResourceName: String): EditorTutorialImportFactory
        fun GetDefaultObject(): EditorTutorialImportFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorTutorialImportFactory
        fun C(Other: UObject): EditorTutorialImportFactory
        fun C(Other: Any): EditorTutorialImportFactory
    }
}

external open class TutorialCategory {
    open var Identifier: String
    open var Title: String
    open var SortOrder: Number
    open var Description: String
    open var Icon: String
    open var Texture: SoftObjectPath
    open fun clone(): TutorialCategory

    companion object {
        fun C(Other: UObject): TutorialCategory
        fun C(Other: Any): TutorialCategory
    }
}

external open class TutorialContext {
    open var Context: String
    open var BrowserFilter: String
    open var AttractTutorial: SoftClassPath
    open var LaunchTutorial: SoftClassPath
    open fun clone(): TutorialContext

    companion object {
        fun C(Other: UObject): TutorialContext
        fun C(Other: Any): TutorialContext
    }
}

external open class EditorTutorialSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bDisableAllTutorialAlerts: Boolean
    open var Categories: Array<TutorialCategory>
    open var StartupTutorial: SoftClassPath
    open var TutorialContexts: Array<TutorialContext>

    companion object {
        fun Load(ResourceName: String): EditorTutorialSettings
        fun Find(Outer: UObject, ResourceName: String): EditorTutorialSettings
        fun GetDefaultObject(): EditorTutorialSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorTutorialSettings
        fun C(Other: UObject): EditorTutorialSettings
        fun C(Other: Any): EditorTutorialSettings
    }
}

external open class TutorialSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Categories: Array<TutorialCategory>
    open var StartupTutorial: SoftClassPath

    companion object {
        fun Load(ResourceName: String): TutorialSettings
        fun Find(Outer: UObject, ResourceName: String): TutorialSettings
        fun GetDefaultObject(): TutorialSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TutorialSettings
        fun C(Other: UObject): TutorialSettings
        fun C(Other: Any): TutorialSettings
    }
}

external open class TutorialProgress {
    open var Tutorial: SoftClassPath
    open var CurrentStage: Number
    open var bUserDismissed: Boolean
    open fun clone(): TutorialProgress

    companion object {
        fun C(Other: UObject): TutorialProgress
        fun C(Other: Any): TutorialProgress
    }
}

external open class TutorialStateSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var TutorialsProgress: Array<TutorialProgress>
    open var bDismissedAllTutorials: Boolean

    companion object {
        fun Load(ResourceName: String): TutorialStateSettings
        fun Find(Outer: UObject, ResourceName: String): TutorialStateSettings
        fun GetDefaultObject(): TutorialStateSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TutorialStateSettings
        fun C(Other: UObject): TutorialStateSettings
        fun C(Other: Any): TutorialStateSettings
    }
}

external open class LogVisualizerSessionSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bEnableGraphsVisualization: Boolean

    companion object {
        fun Load(ResourceName: String): LogVisualizerSessionSettings
        fun Find(Outer: UObject, ResourceName: String): LogVisualizerSessionSettings
        fun GetDefaultObject(): LogVisualizerSessionSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LogVisualizerSessionSettings
        fun C(Other: UObject): LogVisualizerSessionSettings
        fun C(Other: Any): LogVisualizerSessionSettings
    }
}

external open class CategoryFilter {
    open var CategoryName: String
    open var LogVerbosity: Number
    open var Enabled: Boolean
    open fun clone(): CategoryFilter

    companion object {
        fun C(Other: UObject): CategoryFilter
        fun C(Other: Any): CategoryFilter
    }
}

external open class VisualLoggerFiltersData {
    open var SearchBoxFilter: String
    open var ObjectNameFilter: String
    open var Categories: Array<CategoryFilter>
    open var SelectedClasses: Array<String>
    open fun clone(): VisualLoggerFiltersData

    companion object {
        fun C(Other: UObject): VisualLoggerFiltersData
        fun C(Other: Any): VisualLoggerFiltersData
    }
}

external open class LogVisualizerSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bIgnoreTrivialLogs: Boolean
    open var TrivialLogsThreshold: Number
    open var bStickToRecentData: Boolean
    open var bResetDataWithNewSession: Boolean
    open var bShowHistogramLabelsOutside: Boolean
    open var DefaultCameraDistance: Number
    open var bSearchInsideLogs: Boolean
    open var GraphsBackgroundColor: Color
    open var bPresistentFilters: Boolean
    open var bDrawExtremesOnGraphs: Boolean
    open var bUsePlayersOnlyForPause: Boolean
    open var bLogNavOctreeOnStop: Boolean
    open var PresistentFilters: VisualLoggerFiltersData
    open var DebugMeshMaterialFakeLight: Material
    open var DebugMeshMaterialFakeLightName: String

    companion object {
        fun Load(ResourceName: String): LogVisualizerSettings
        fun Find(Outer: UObject, ResourceName: String): LogVisualizerSettings
        fun GetDefaultObject(): LogVisualizerSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LogVisualizerSettings
        fun C(Other: UObject): LogVisualizerSettings
        fun C(Other: Any): LogVisualizerSettings
    }
}

external open class VisualLoggerCameraController(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : DebugCameraController {
    open var PickedActor: Actor

    companion object {
        fun GetDefaultObject(): VisualLoggerCameraController
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VisualLoggerCameraController
        fun C(Other: UObject): VisualLoggerCameraController
        fun C(Other: Any): VisualLoggerCameraController
    }
}

external open class VisualLoggerHUD(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : DebugCameraHUD {
    companion object {
        fun GetDefaultObject(): VisualLoggerHUD
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VisualLoggerHUD
        fun C(Other: UObject): VisualLoggerHUD
        fun C(Other: Any): VisualLoggerHUD
    }
}

external open class VisualLoggerRenderingActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    companion object {
        fun GetDefaultObject(): VisualLoggerRenderingActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VisualLoggerRenderingActor
        fun C(Other: UObject): VisualLoggerRenderingActor
        fun C(Other: Any): VisualLoggerRenderingActor
    }
}

external open class VisualLoggerRenderingComponent : PrimitiveComponent {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): VisualLoggerRenderingComponent
        fun Find(Outer: UObject, ResourceName: String): VisualLoggerRenderingComponent
        fun GetDefaultObject(): VisualLoggerRenderingComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VisualLoggerRenderingComponent
        fun C(Other: UObject): VisualLoggerRenderingComponent
        fun C(Other: Any): VisualLoggerRenderingComponent
    }
}

external open class ClothPainterSettings : MeshPaintSettings {
    constructor()
    constructor(Outer: UObject)
    open var ViewMin: Number
    open var ViewMax: Number
    open var bAutoViewRange: Boolean
    open var AutoCalculatedViewMin: Number
    open var AutoCalculatedViewMax: Number
    open var ClothingAssets: Array<ClothingAsset>
    open var bFlipNormal: Boolean
    open var bCullBackface: Boolean
    open var Opacity: Number

    companion object {
        fun Load(ResourceName: String): ClothPainterSettings
        fun Find(Outer: UObject, ResourceName: String): ClothPainterSettings
        fun GetDefaultObject(): ClothPainterSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClothPainterSettings
        fun C(Other: UObject): ClothPainterSettings
        fun C(Other: Any): ClothPainterSettings
    }
}

external open class ClothPaintTool_BrushSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var PaintValue: Number

    companion object {
        fun Load(ResourceName: String): ClothPaintTool_BrushSettings
        fun Find(Outer: UObject, ResourceName: String): ClothPaintTool_BrushSettings
        fun GetDefaultObject(): ClothPaintTool_BrushSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClothPaintTool_BrushSettings
        fun C(Other: UObject): ClothPaintTool_BrushSettings
        fun C(Other: Any): ClothPaintTool_BrushSettings
    }
}

external open class ClothPaintTool_GradientSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var GradientStartValue: Number
    open var GradientEndValue: Number
    open var bUseRegularBrush: Boolean

    companion object {
        fun Load(ResourceName: String): ClothPaintTool_GradientSettings
        fun Find(Outer: UObject, ResourceName: String): ClothPaintTool_GradientSettings
        fun GetDefaultObject(): ClothPaintTool_GradientSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClothPaintTool_GradientSettings
        fun C(Other: UObject): ClothPaintTool_GradientSettings
        fun C(Other: Any): ClothPaintTool_GradientSettings
    }
}

external open class ClothPaintTool_SmoothSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Strength: Number

    companion object {
        fun Load(ResourceName: String): ClothPaintTool_SmoothSettings
        fun Find(Outer: UObject, ResourceName: String): ClothPaintTool_SmoothSettings
        fun GetDefaultObject(): ClothPaintTool_SmoothSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClothPaintTool_SmoothSettings
        fun C(Other: UObject): ClothPaintTool_SmoothSettings
        fun C(Other: Any): ClothPaintTool_SmoothSettings
    }
}

external open class ClothPaintTool_FillSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Threshold: Number
    open var FillValue: Number

    companion object {
        fun Load(ResourceName: String): ClothPaintTool_FillSettings
        fun Find(Outer: UObject, ResourceName: String): ClothPaintTool_FillSettings
        fun GetDefaultObject(): ClothPaintTool_FillSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClothPaintTool_FillSettings
        fun C(Other: UObject): ClothPaintTool_FillSettings
        fun C(Other: Any): ClothPaintTool_FillSettings
    }
}

external var Context: JavascriptContext

//external var Root: JavascriptEditorTick