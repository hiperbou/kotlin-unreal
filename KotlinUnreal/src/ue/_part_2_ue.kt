@file:Suppress("INTERFACE_WITH_SUPERCLASS", "OVERRIDING_FINAL_MEMBER", "RETURN_TYPE_MISMATCH_ON_OVERRIDE", "CONFLICTING_OVERLOADS")
package ue


import kotlin.js.*
import org.khronos.webgl.*
import org.w3c.dom.*
import org.w3c.dom.events.*
import org.w3c.dom.parsing.*
import org.w3c.dom.svg.*
import org.w3c.dom.url.*
import org.w3c.fetch.*
import org.w3c.files.*
import org.w3c.notifications.*
import org.w3c.performance.*
import org.w3c.workers.*
import org.w3c.xhr.*

external open class SkeletalMeshEditorSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var AnimPreviewFloorColor: Color
    open var AnimPreviewSkyColor: Color
    open var AnimPreviewSkyBrightness: Number
    open var AnimPreviewLightBrightness: Number
    open var AnimPreviewLightingDirection: Rotator
    open var AnimPreviewDirectionalColor: Color

    companion object {
        fun Load(ResourceName: String): SkeletalMeshEditorSettings
        fun Find(Outer: UObject, ResourceName: String): SkeletalMeshEditorSettings
        fun GetDefaultObject(): SkeletalMeshEditorSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SkeletalMeshEditorSettings
        fun C(Other: UObject): SkeletalMeshEditorSettings
        fun C(Other: Any): SkeletalMeshEditorSettings
    }
}

external open class SkeletalMeshExporterFBX : ExporterFBX {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SkeletalMeshExporterFBX
        fun Find(Outer: UObject, ResourceName: String): SkeletalMeshExporterFBX
        fun GetDefaultObject(): SkeletalMeshExporterFBX
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SkeletalMeshExporterFBX
        fun C(Other: UObject): SkeletalMeshExporterFBX
        fun C(Other: Any): SkeletalMeshExporterFBX
    }
}

external open class SkeletalMeshThumbnailRenderer : DefaultSizedThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SkeletalMeshThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): SkeletalMeshThumbnailRenderer
        fun GetDefaultObject(): SkeletalMeshThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SkeletalMeshThumbnailRenderer
        fun C(Other: UObject): SkeletalMeshThumbnailRenderer
        fun C(Other: Any): SkeletalMeshThumbnailRenderer
    }
}

external open class SkeletalMeshToolMenuContext : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SkeletalMeshToolMenuContext
        fun Find(Outer: UObject, ResourceName: String): SkeletalMeshToolMenuContext
        fun GetDefaultObject(): SkeletalMeshToolMenuContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SkeletalMeshToolMenuContext
        fun C(Other: UObject): SkeletalMeshToolMenuContext
        fun C(Other: Any): SkeletalMeshToolMenuContext
    }
}

external open class SkeletonFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var TargetSkeletalMesh: SkeletalMesh

    companion object {
        fun Load(ResourceName: String): SkeletonFactory
        fun Find(Outer: UObject, ResourceName: String): SkeletonFactory
        fun GetDefaultObject(): SkeletonFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SkeletonFactory
        fun C(Other: UObject): SkeletonFactory
        fun C(Other: Any): SkeletonFactory
    }
}

external open class SlateBrushAssetFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var InitialTexture: Texture2D

    companion object {
        fun Load(ResourceName: String): SlateBrushAssetFactory
        fun Find(Outer: UObject, ResourceName: String): SlateBrushAssetFactory
        fun GetDefaultObject(): SlateBrushAssetFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SlateBrushAssetFactory
        fun C(Other: UObject): SlateBrushAssetFactory
        fun C(Other: Any): SlateBrushAssetFactory
    }
}

external open class SlateBrushThumbnailRenderer : DefaultSizedThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SlateBrushThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): SlateBrushThumbnailRenderer
        fun GetDefaultObject(): SlateBrushThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SlateBrushThumbnailRenderer
        fun C(Other: UObject): SlateBrushThumbnailRenderer
        fun C(Other: Any): SlateBrushThumbnailRenderer
    }
}

external open class SlateWidgetStyleAssetFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var StyleType: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): SlateWidgetStyleAssetFactory
        fun Find(Outer: UObject, ResourceName: String): SlateWidgetStyleAssetFactory
        fun GetDefaultObject(): SlateWidgetStyleAssetFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SlateWidgetStyleAssetFactory
        fun C(Other: UObject): SlateWidgetStyleAssetFactory
        fun C(Other: Any): SlateWidgetStyleAssetFactory
    }
}

external open class SoundExporterOGG : Exporter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundExporterOGG
        fun Find(Outer: UObject, ResourceName: String): SoundExporterOGG
        fun GetDefaultObject(): SoundExporterOGG
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundExporterOGG
        fun C(Other: UObject): SoundExporterOGG
        fun C(Other: Any): SoundExporterOGG
    }
}

external open class SoundExporterWAV : Exporter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundExporterWAV
        fun Find(Outer: UObject, ResourceName: String): SoundExporterWAV
        fun GetDefaultObject(): SoundExporterWAV
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundExporterWAV
        fun C(Other: UObject): SoundExporterWAV
        fun C(Other: Any): SoundExporterWAV
    }
}

external open class SoundSurroundExporterWAV : Exporter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundSurroundExporterWAV
        fun Find(Outer: UObject, ResourceName: String): SoundSurroundExporterWAV
        fun GetDefaultObject(): SoundSurroundExporterWAV
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundSurroundExporterWAV
        fun C(Other: UObject): SoundSurroundExporterWAV
        fun C(Other: Any): SoundSurroundExporterWAV
    }
}

external open class SoundWaveThumbnailRenderer : DefaultSizedThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundWaveThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): SoundWaveThumbnailRenderer
        fun GetDefaultObject(): SoundWaveThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundWaveThumbnailRenderer
        fun C(Other: UObject): SoundWaveThumbnailRenderer
        fun C(Other: Any): SoundWaveThumbnailRenderer
    }
}

external open class SpiralStairBuilder : EditorBrushBuilder {
    constructor()
    constructor(Outer: UObject)
    open var InnerRadius: Number
    open var StepWidth: Number
    open var StepHeight: Number
    open var StepThickness: Number
    open var NumStepsPer360: Number
    open var NumSteps: Number
    open var GroupName: String
    open var SlopedCeiling: Boolean
    open var SlopedFloor: Boolean
    open var CounterClockwise: Boolean

    companion object {
        fun Load(ResourceName: String): SpiralStairBuilder
        fun Find(Outer: UObject, ResourceName: String): SpiralStairBuilder
        fun GetDefaultObject(): SpiralStairBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SpiralStairBuilder
        fun C(Other: UObject): SpiralStairBuilder
        fun C(Other: Any): SpiralStairBuilder
    }
}

external open class StabilizeLocalizationKeysCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): StabilizeLocalizationKeysCommandlet
        fun Find(Outer: UObject, ResourceName: String): StabilizeLocalizationKeysCommandlet
        fun GetDefaultObject(): StabilizeLocalizationKeysCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): StabilizeLocalizationKeysCommandlet
        fun C(Other: UObject): StabilizeLocalizationKeysCommandlet
        fun C(Other: Any): StabilizeLocalizationKeysCommandlet
    }
}

external open class StaticMeshExporterFBX : ExporterFBX {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): StaticMeshExporterFBX
        fun Find(Outer: UObject, ResourceName: String): StaticMeshExporterFBX
        fun GetDefaultObject(): StaticMeshExporterFBX
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): StaticMeshExporterFBX
        fun C(Other: UObject): StaticMeshExporterFBX
        fun C(Other: Any): StaticMeshExporterFBX
    }
}

external open class StaticMeshExporterOBJ : Exporter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): StaticMeshExporterOBJ
        fun Find(Outer: UObject, ResourceName: String): StaticMeshExporterOBJ
        fun GetDefaultObject(): StaticMeshExporterOBJ
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): StaticMeshExporterOBJ
        fun C(Other: UObject): StaticMeshExporterOBJ
        fun C(Other: Any): StaticMeshExporterOBJ
    }
}

external open class StaticMeshThumbnailRenderer : DefaultSizedThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): StaticMeshThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): StaticMeshThumbnailRenderer
        fun GetDefaultObject(): StaticMeshThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): StaticMeshThumbnailRenderer
        fun C(Other: UObject): StaticMeshThumbnailRenderer
        fun C(Other: Any): StaticMeshThumbnailRenderer
    }
}

external open class StringTableFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): StringTableFactory
        fun Find(Outer: UObject, ResourceName: String): StringTableFactory
        fun GetDefaultObject(): StringTableFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): StringTableFactory
        fun C(Other: UObject): StringTableFactory
        fun C(Other: Any): StringTableFactory
    }
}

external open class StructureFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): StructureFactory
        fun Find(Outer: UObject, ResourceName: String): StructureFactory
        fun GetDefaultObject(): StructureFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): StructureFactory
        fun C(Other: UObject): StructureFactory
        fun C(Other: Any): StructureFactory
    }
}

external object EStructViewerDeveloperType {
    var SVDT_None: String /* "SVDT_None" */
    var SVDT_CurrentUser: String /* "SVDT_CurrentUser" */
    var SVDT_All: String /* "SVDT_All" */
    var SVDT_Max: String /* "SVDT_Max" */
}

external open class StructViewerSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var DisplayInternalStructs: Boolean
    open var DeveloperFolderType: String /* "SVDT_None" | "SVDT_CurrentUser" | "SVDT_All" | "SVDT_Max" */

    companion object {
        fun Load(ResourceName: String): StructViewerSettings
        fun Find(Outer: UObject, ResourceName: String): StructViewerSettings
        fun GetDefaultObject(): StructViewerSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): StructViewerSettings
        fun C(Other: UObject): StructViewerSettings
        fun C(Other: Any): StructViewerSettings
    }
}

external open class SubsurfaceProfileFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SubsurfaceProfileFactory
        fun Find(Outer: UObject, ResourceName: String): SubsurfaceProfileFactory
        fun GetDefaultObject(): SubsurfaceProfileFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SubsurfaceProfileFactory
        fun C(Other: UObject): SubsurfaceProfileFactory
        fun C(Other: Any): SubsurfaceProfileFactory
    }
}

external open class SubsurfaceProfileRenderer : TextureThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SubsurfaceProfileRenderer
        fun Find(Outer: UObject, ResourceName: String): SubsurfaceProfileRenderer
        fun GetDefaultObject(): SubsurfaceProfileRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SubsurfaceProfileRenderer
        fun C(Other: UObject): SubsurfaceProfileRenderer
        fun C(Other: Any): SubsurfaceProfileRenderer
    }
}

external open class SubUVAnimationFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var InitialTexture: Texture2D

    companion object {
        fun Load(ResourceName: String): SubUVAnimationFactory
        fun Find(Outer: UObject, ResourceName: String): SubUVAnimationFactory
        fun GetDefaultObject(): SubUVAnimationFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SubUVAnimationFactory
        fun C(Other: UObject): SubUVAnimationFactory
        fun C(Other: Any): SubUVAnimationFactory
    }
}

external open class SwapSoundForDialogueInCuesCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SwapSoundForDialogueInCuesCommandlet
        fun Find(Outer: UObject, ResourceName: String): SwapSoundForDialogueInCuesCommandlet
        fun GetDefaultObject(): SwapSoundForDialogueInCuesCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SwapSoundForDialogueInCuesCommandlet
        fun C(Other: UObject): SwapSoundForDialogueInCuesCommandlet
        fun C(Other: Any): SwapSoundForDialogueInCuesCommandlet
    }
}

external open class TemplateMapMetadata : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TemplateMapMetadata
        fun Find(Outer: UObject, ResourceName: String): TemplateMapMetadata
        fun GetDefaultObject(): TemplateMapMetadata
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TemplateMapMetadata
        fun C(Other: UObject): TemplateMapMetadata
        fun C(Other: Any): TemplateMapMetadata
    }
}

external open class TetrahedronBuilder : EditorBrushBuilder {
    constructor()
    constructor(Outer: UObject)
    open var Radius: Number
    open var SphereExtrapolation: Number
    open var GroupName: String

    companion object {
        fun Load(ResourceName: String): TetrahedronBuilder
        fun Find(Outer: UObject, ResourceName: String): TetrahedronBuilder
        fun GetDefaultObject(): TetrahedronBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TetrahedronBuilder
        fun C(Other: UObject): TetrahedronBuilder
        fun C(Other: Any): TetrahedronBuilder
    }
}

external object ETexAlign {
    var TEXALIGN_None: String /* "TEXALIGN_None" */
    var TEXALIGN_Default: String /* "TEXALIGN_Default" */
    var TEXALIGN_Box: String /* "TEXALIGN_Box" */
    var TEXALIGN_Planar: String /* "TEXALIGN_Planar" */
    var TEXALIGN_Fit: String /* "TEXALIGN_Fit" */
    var TEXALIGN_PlanarAuto: String /* "TEXALIGN_PlanarAuto" */
    var TEXALIGN_PlanarWall: String /* "TEXALIGN_PlanarWall" */
    var TEXALIGN_PlanarFloor: String /* "TEXALIGN_PlanarFloor" */
    var TEXALIGN_MAX: String /* "TEXALIGN_MAX" */
}

external open class TexAligner : UObject {
    constructor()
    constructor(Outer: UObject)
    open var DefTexAlign: String /* "TEXALIGN_None" | "TEXALIGN_Default" | "TEXALIGN_Box" | "TEXALIGN_Planar" | "TEXALIGN_Fit" | "TEXALIGN_PlanarAuto" | "TEXALIGN_PlanarWall" | "TEXALIGN_PlanarFloor" | "TEXALIGN_MAX" */
    open var TAxis: Number
    open var UTile: Number
    open var VTile: Number
    open var Desc: String

    companion object {
        fun Load(ResourceName: String): TexAligner
        fun Find(Outer: UObject, ResourceName: String): TexAligner
        fun GetDefaultObject(): TexAligner
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TexAligner
        fun C(Other: UObject): TexAligner
        fun C(Other: Any): TexAligner
    }
}

external open class TexAlignerBox : TexAligner {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TexAlignerBox
        fun Find(Outer: UObject, ResourceName: String): TexAlignerBox
        fun GetDefaultObject(): TexAlignerBox
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TexAlignerBox
        fun C(Other: UObject): TexAlignerBox
        fun C(Other: Any): TexAlignerBox
    }
}

external open class TexAlignerDefault : TexAligner {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TexAlignerDefault
        fun Find(Outer: UObject, ResourceName: String): TexAlignerDefault
        fun GetDefaultObject(): TexAlignerDefault
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TexAlignerDefault
        fun C(Other: UObject): TexAlignerDefault
        fun C(Other: Any): TexAlignerDefault
    }
}

external open class TexAlignerFit : TexAligner {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TexAlignerFit
        fun Find(Outer: UObject, ResourceName: String): TexAlignerFit
        fun GetDefaultObject(): TexAlignerFit
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TexAlignerFit
        fun C(Other: UObject): TexAlignerFit
        fun C(Other: Any): TexAlignerFit
    }
}

external open class TexAlignerPlanar : TexAligner {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TexAlignerPlanar
        fun Find(Outer: UObject, ResourceName: String): TexAlignerPlanar
        fun GetDefaultObject(): TexAlignerPlanar
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TexAlignerPlanar
        fun C(Other: UObject): TexAlignerPlanar
        fun C(Other: Any): TexAlignerPlanar
    }
}

external open class TextAssetCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TextAssetCommandlet
        fun Find(Outer: UObject, ResourceName: String): TextAssetCommandlet
        fun GetDefaultObject(): TextAssetCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextAssetCommandlet
        fun C(Other: UObject): TextAssetCommandlet
        fun C(Other: Any): TextAssetCommandlet
    }
}

external open class TextBufferExporterTXT : Exporter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TextBufferExporterTXT
        fun Find(Outer: UObject, ResourceName: String): TextBufferExporterTXT
        fun GetDefaultObject(): TextBufferExporterTXT
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextBufferExporterTXT
        fun C(Other: UObject): TextBufferExporterTXT
        fun C(Other: Any): TextBufferExporterTXT
    }
}

external open class Texture2DArrayFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var InitialTextures: Array<Texture2D>

    companion object {
        fun Load(ResourceName: String): Texture2DArrayFactory
        fun Find(Outer: UObject, ResourceName: String): Texture2DArrayFactory
        fun GetDefaultObject(): Texture2DArrayFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Texture2DArrayFactory
        fun C(Other: UObject): Texture2DArrayFactory
        fun C(Other: Any): Texture2DArrayFactory
    }
}

external open class Texture2DArrayThumbnailRenderer : TextureThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): Texture2DArrayThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): Texture2DArrayThumbnailRenderer
        fun GetDefaultObject(): Texture2DArrayThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Texture2DArrayThumbnailRenderer
        fun C(Other: UObject): Texture2DArrayThumbnailRenderer
        fun C(Other: Any): Texture2DArrayThumbnailRenderer
    }
}

external open class Texture2DFactoryNew : Factory {
    constructor()
    constructor(Outer: UObject)
    open var Width: Number
    open var Height: Number

    companion object {
        fun Load(ResourceName: String): Texture2DFactoryNew
        fun Find(Outer: UObject, ResourceName: String): Texture2DFactoryNew
        fun GetDefaultObject(): Texture2DFactoryNew
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Texture2DFactoryNew
        fun C(Other: UObject): Texture2DFactoryNew
        fun C(Other: Any): Texture2DFactoryNew
    }
}

external open class TextureCubeExporterHDR : Exporter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TextureCubeExporterHDR
        fun Find(Outer: UObject, ResourceName: String): TextureCubeExporterHDR
        fun GetDefaultObject(): TextureCubeExporterHDR
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextureCubeExporterHDR
        fun C(Other: UObject): TextureCubeExporterHDR
        fun C(Other: Any): TextureCubeExporterHDR
    }
}

external open class TextureCubeThumbnailRenderer : TextureThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TextureCubeThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): TextureCubeThumbnailRenderer
        fun GetDefaultObject(): TextureCubeThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextureCubeThumbnailRenderer
        fun C(Other: UObject): TextureCubeThumbnailRenderer
        fun C(Other: Any): TextureCubeThumbnailRenderer
    }
}

external open class TextureExporterBMP : Exporter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TextureExporterBMP
        fun Find(Outer: UObject, ResourceName: String): TextureExporterBMP
        fun GetDefaultObject(): TextureExporterBMP
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextureExporterBMP
        fun C(Other: UObject): TextureExporterBMP
        fun C(Other: Any): TextureExporterBMP
    }
}

external open class VirtualTextureBuilderExporterBMP : TextureExporterBMP {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): VirtualTextureBuilderExporterBMP
        fun Find(Outer: UObject, ResourceName: String): VirtualTextureBuilderExporterBMP
        fun GetDefaultObject(): VirtualTextureBuilderExporterBMP
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VirtualTextureBuilderExporterBMP
        fun C(Other: UObject): VirtualTextureBuilderExporterBMP
        fun C(Other: Any): VirtualTextureBuilderExporterBMP
    }
}

external open class TextureExporterHDR : Exporter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TextureExporterHDR
        fun Find(Outer: UObject, ResourceName: String): TextureExporterHDR
        fun GetDefaultObject(): TextureExporterHDR
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextureExporterHDR
        fun C(Other: UObject): TextureExporterHDR
        fun C(Other: Any): TextureExporterHDR
    }
}

external open class TextureExporterPCX : Exporter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TextureExporterPCX
        fun Find(Outer: UObject, ResourceName: String): TextureExporterPCX
        fun GetDefaultObject(): TextureExporterPCX
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextureExporterPCX
        fun C(Other: UObject): TextureExporterPCX
        fun C(Other: Any): TextureExporterPCX
    }
}

external open class TextureExporterTGA : Exporter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TextureExporterTGA
        fun Find(Outer: UObject, ResourceName: String): TextureExporterTGA
        fun GetDefaultObject(): TextureExporterTGA
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextureExporterTGA
        fun C(Other: UObject): TextureExporterTGA
        fun C(Other: Any): TextureExporterTGA
    }
}

external open class TextureImportSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var AutoVTSize: Number

    companion object {
        fun Load(ResourceName: String): TextureImportSettings
        fun Find(Outer: UObject, ResourceName: String): TextureImportSettings
        fun GetDefaultObject(): TextureImportSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextureImportSettings
        fun C(Other: UObject): TextureImportSettings
        fun C(Other: Any): TextureImportSettings
    }
}

external open class TextureRenderTarget2DArrayFactoryNew : Factory {
    constructor()
    constructor(Outer: UObject)
    open var Width: Number
    open var Height: Number
    open var Slices: Number
    open var Format: Number

    companion object {
        fun Load(ResourceName: String): TextureRenderTarget2DArrayFactoryNew
        fun Find(Outer: UObject, ResourceName: String): TextureRenderTarget2DArrayFactoryNew
        fun GetDefaultObject(): TextureRenderTarget2DArrayFactoryNew
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextureRenderTarget2DArrayFactoryNew
        fun C(Other: UObject): TextureRenderTarget2DArrayFactoryNew
        fun C(Other: Any): TextureRenderTarget2DArrayFactoryNew
    }
}

external open class TextureRenderTargetCubeFactoryNew : Factory {
    constructor()
    constructor(Outer: UObject)
    open var Width: Number
    open var Format: Number

    companion object {
        fun Load(ResourceName: String): TextureRenderTargetCubeFactoryNew
        fun Find(Outer: UObject, ResourceName: String): TextureRenderTargetCubeFactoryNew
        fun GetDefaultObject(): TextureRenderTargetCubeFactoryNew
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextureRenderTargetCubeFactoryNew
        fun C(Other: UObject): TextureRenderTargetCubeFactoryNew
        fun C(Other: Any): TextureRenderTargetCubeFactoryNew
    }
}

external open class TextureRenderTargetFactoryNew : Factory {
    constructor()
    constructor(Outer: UObject)
    open var Width: Number
    open var Height: Number
    open var Format: Number

    companion object {
        fun Load(ResourceName: String): TextureRenderTargetFactoryNew
        fun Find(Outer: UObject, ResourceName: String): TextureRenderTargetFactoryNew
        fun GetDefaultObject(): TextureRenderTargetFactoryNew
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextureRenderTargetFactoryNew
        fun C(Other: UObject): TextureRenderTargetFactoryNew
        fun C(Other: Any): TextureRenderTargetFactoryNew
    }
}

external open class TextureRenderTargetVolumeFactoryNew : Factory {
    constructor()
    constructor(Outer: UObject)
    open var Width: Number
    open var Height: Number
    open var Depth: Number
    open var Format: Number

    companion object {
        fun Load(ResourceName: String): TextureRenderTargetVolumeFactoryNew
        fun Find(Outer: UObject, ResourceName: String): TextureRenderTargetVolumeFactoryNew
        fun GetDefaultObject(): TextureRenderTargetVolumeFactoryNew
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextureRenderTargetVolumeFactoryNew
        fun C(Other: UObject): TextureRenderTargetVolumeFactoryNew
        fun C(Other: Any): TextureRenderTargetVolumeFactoryNew
    }
}

external open class SkeletalMeshActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var bShouldDoAnimNotifies: Boolean
    open var bWakeOnLevelStart: Boolean
    open var SkeletalMeshComponent: SkeletalMeshComponent
    open var ReplicatedMesh: SkeletalMesh
    open var ReplicatedPhysAsset: PhysicsAsset
    open var ReplicatedMaterial0: MaterialInterface
    open var ReplicatedMaterial1: MaterialInterface
    open fun OnRep_ReplicatedPhysAsset()
    open fun OnRep_ReplicatedMesh()
    open fun OnRep_ReplicatedMaterial1()
    open fun OnRep_ReplicatedMaterial0()

    companion object {
        fun GetDefaultObject(): SkeletalMeshActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SkeletalMeshActor
        fun C(Other: UObject): SkeletalMeshActor
        fun C(Other: Any): SkeletalMeshActor
    }
}

external open class AnimationThumbnailSkeletalMeshActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : SkeletalMeshActor {
    companion object {
        fun GetDefaultObject(): AnimationThumbnailSkeletalMeshActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationThumbnailSkeletalMeshActor
        fun C(Other: UObject): AnimationThumbnailSkeletalMeshActor
        fun C(Other: Any): AnimationThumbnailSkeletalMeshActor
    }
}

external open class ThumbnailRenderingInfo {
    open var ClassNeedingThumbnailName: String
    open var ClassNeedingThumbnail: UnrealEngineClass
    open var RendererClassName: String
    open var Renderer: ThumbnailRenderer
    open fun clone(): ThumbnailRenderingInfo

    companion object {
        fun C(Other: UObject): ThumbnailRenderingInfo
        fun C(Other: Any): ThumbnailRenderingInfo
    }
}

external open class ThumbnailManager : UObject {
    constructor()
    constructor(Outer: UObject)
    open var RenderableThumbnailTypes: Array<ThumbnailRenderingInfo>
    open var NotSupported: ThumbnailRenderingInfo
    open var EditorCube: StaticMesh
    open var EditorSphere: StaticMesh
    open var EditorCylinder: StaticMesh
    open var EditorPlane: StaticMesh
    open var EditorSkySphere: StaticMesh
    open var FloorPlaneMaterial: Material
    open var AmbientCubemap: TextureCube
    open var CheckerboardTexture: Texture2D
    open var ThumbnailManagerClassName: String

    companion object {
        fun Load(ResourceName: String): ThumbnailManager
        fun Find(Outer: UObject, ResourceName: String): ThumbnailManager
        fun GetDefaultObject(): ThumbnailManager
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ThumbnailManager
        fun C(Other: UObject): ThumbnailManager
        fun C(Other: Any): ThumbnailManager
    }
}

external open class TouchInterfaceFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TouchInterfaceFactory
        fun Find(Outer: UObject, ResourceName: String): TouchInterfaceFactory
        fun GetDefaultObject(): TouchInterfaceFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TouchInterfaceFactory
        fun C(Other: UObject): TouchInterfaceFactory
        fun C(Other: Any): TouchInterfaceFactory
    }
}

external open class TransBuffer : Transactor {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TransBuffer
        fun Find(Outer: UObject, ResourceName: String): TransBuffer
        fun GetDefaultObject(): TransBuffer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TransBuffer
        fun C(Other: UObject): TransBuffer
        fun C(Other: Any): TransBuffer
    }
}

external open class FontImportOptions : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Data: FontImportOptionsData

    companion object {
        fun Load(ResourceName: String): FontImportOptions
        fun Find(Outer: UObject, ResourceName: String): FontImportOptions
        fun GetDefaultObject(): FontImportOptions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FontImportOptions
        fun C(Other: UObject): FontImportOptions
        fun C(Other: Any): FontImportOptions
    }
}

external open class TrueTypeFontFactory : TextureFactory {
    constructor()
    constructor(Outer: UObject)
    open var ImportOptions: FontImportOptions
    open var bPropertiesConfigured: Boolean
    open var bFontSelected: Boolean

    companion object {
        fun Load(ResourceName: String): TrueTypeFontFactory
        fun Find(Outer: UObject, ResourceName: String): TrueTypeFontFactory
        fun GetDefaultObject(): TrueTypeFontFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TrueTypeFontFactory
        fun C(Other: UObject): TrueTypeFontFactory
        fun C(Other: Any): TrueTypeFontFactory
    }
}

external open class EditorCommandCategory {
    open var Parent: String
    open var Name: String
    open fun clone(): EditorCommandCategory

    companion object {
        fun C(Other: UObject): EditorCommandCategory
        fun C(Other: Any): EditorCommandCategory
    }
}

external open class EditorCommand {
    open var Parent: String
    open var CommandName: String
    open var ExecCommand: String
    open var Description: String
    open fun clone(): EditorCommand

    companion object {
        fun C(Other: UObject): EditorCommand
        fun C(Other: Any): EditorCommand
    }
}

external open class EditorKeyBinding {
    open var bCtrlDown: Boolean
    open var bAltDown: Boolean
    open var bShiftDown: Boolean
    open var Key: Key
    open var CommandName: String
    open fun clone(): EditorKeyBinding

    companion object {
        fun C(Other: UObject): EditorKeyBinding
        fun C(Other: Any): EditorKeyBinding
    }
}

external open class UnrealEdKeyBindings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var KeyBindings: Array<EditorKeyBinding>

    companion object {
        fun Load(ResourceName: String): UnrealEdKeyBindings
        fun Find(Outer: UObject, ResourceName: String): UnrealEdKeyBindings
        fun GetDefaultObject(): UnrealEdKeyBindings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UnrealEdKeyBindings
        fun C(Other: UObject): UnrealEdKeyBindings
        fun C(Other: Any): UnrealEdKeyBindings
    }
}

external open class ClassPickerDefaults {
    open var ClassName: String
    open var AssetClass: String
    open fun clone(): ClassPickerDefaults

    companion object {
        fun C(Other: UObject): ClassPickerDefaults
        fun C(Other: Any): ClassPickerDefaults
    }
}

external open class UnrealEdOptions : UObject {
    constructor()
    constructor(Outer: UObject)
    open var EditorCategories: Array<EditorCommandCategory>
    open var EditorCommands: Array<EditorCommand>
    open var EditorKeyBindings: UnrealEdKeyBindings
    open var bExpandClassPickerClassList: Boolean
    open var NewAssetDefaultClasses: Array<ClassPickerDefaults>

    companion object {
        fun Load(ResourceName: String): UnrealEdOptions
        fun Find(Outer: UObject, ResourceName: String): UnrealEdOptions
        fun GetDefaultObject(): UnrealEdOptions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UnrealEdOptions
        fun C(Other: UObject): UnrealEdOptions
        fun C(Other: Any): UnrealEdOptions
    }
}

external object AnimationCompressionFormat {
    var ACF_None: String /* "ACF_None" */
    var ACF_Float96NoW: String /* "ACF_Float96NoW" */
    var ACF_Fixed48NoW: String /* "ACF_Fixed48NoW" */
    var ACF_IntervalFixed32NoW: String /* "ACF_IntervalFixed32NoW" */
    var ACF_Fixed32NoW: String /* "ACF_Fixed32NoW" */
    var ACF_Float32NoW: String /* "ACF_Float32NoW" */
    var ACF_Identity: String /* "ACF_Identity" */
    var ACF_MAX: String /* "ACF_MAX" */
}

external open class AnimCompress : AnimBoneCompressionCodec {
    constructor()
    constructor(Outer: UObject)
    open var bNeedsSkeleton: Boolean
    open var TranslationCompressionFormat: String /* "ACF_None" | "ACF_Float96NoW" | "ACF_Fixed48NoW" | "ACF_IntervalFixed32NoW" | "ACF_Fixed32NoW" | "ACF_Float32NoW" | "ACF_Identity" | "ACF_MAX" */
    open var RotationCompressionFormat: String /* "ACF_None" | "ACF_Float96NoW" | "ACF_Fixed48NoW" | "ACF_IntervalFixed32NoW" | "ACF_Fixed32NoW" | "ACF_Float32NoW" | "ACF_Identity" | "ACF_MAX" */
    open var ScaleCompressionFormat: String /* "ACF_None" | "ACF_Float96NoW" | "ACF_Fixed48NoW" | "ACF_IntervalFixed32NoW" | "ACF_Fixed32NoW" | "ACF_Float32NoW" | "ACF_Identity" | "ACF_MAX" */

    companion object {
        fun Load(ResourceName: String): AnimCompress
        fun Find(Outer: UObject, ResourceName: String): AnimCompress
        fun GetDefaultObject(): AnimCompress
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimCompress
        fun C(Other: UObject): AnimCompress
        fun C(Other: Any): AnimCompress
    }
}

external open class TemplateMapInfo {
    open var ThumbnailTexture: Texture2D
    open var Map: String
    open fun clone(): TemplateMapInfo

    companion object {
        fun C(Other: UObject): TemplateMapInfo
        fun C(Other: Any): TemplateMapInfo
    }
}

external open class UnrealEdEngine : EditorEngine {
    constructor()
    constructor(Outer: UObject)
    open var EditorOptionsInst: UnrealEdOptions
    open var AutoReimportManager: AutoReimportManager
    open var MaterialCopyPasteBuffer: Material
    open var MatineeCopyPasteBuffer: Array<UObject>
    open var SoundCueCopyPasteBuffer: SoundCue
    open var AnimationCompressionAlgorithms: Array<AnimCompress>
    open var PackagesToBeFullyLoadedAtStartup: Array<String>
    open var CurrentLODParentActor: Actor
    open var bNeedWarningForPkgEngineVer: Boolean
    open var SortedSpriteCategories: Array<String>
    open var TemplateMapInfos: Array<TemplateMapInfo>
    open var CookServer: CookOnTheFlyServer

    companion object {
        fun Load(ResourceName: String): UnrealEdEngine
        fun Find(Outer: UObject, ResourceName: String): UnrealEdEngine
        fun GetDefaultObject(): UnrealEdEngine
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UnrealEdEngine
        fun C(Other: UObject): UnrealEdEngine
        fun C(Other: Any): UnrealEdEngine
    }
}

external open class UnrealEdTypes : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): UnrealEdTypes
        fun Find(Outer: UObject, ResourceName: String): UnrealEdTypes
        fun GetDefaultObject(): UnrealEdTypes
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UnrealEdTypes
        fun C(Other: UObject): UnrealEdTypes
        fun C(Other: Any): UnrealEdTypes
    }
}

external open class UnrealPakCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): UnrealPakCommandlet
        fun Find(Outer: UObject, ResourceName: String): UnrealPakCommandlet
        fun GetDefaultObject(): UnrealPakCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UnrealPakCommandlet
        fun C(Other: UObject): UnrealPakCommandlet
        fun C(Other: Any): UnrealPakCommandlet
    }
}

external open class UpdateGameProjectCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): UpdateGameProjectCommandlet
        fun Find(Outer: UObject, ResourceName: String): UpdateGameProjectCommandlet
        fun GetDefaultObject(): UpdateGameProjectCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UpdateGameProjectCommandlet
        fun C(Other: UObject): UpdateGameProjectCommandlet
        fun C(Other: Any): UpdateGameProjectCommandlet
    }
}

external open class StructVariableDescription {
    open var VarName: String
    open var VarGuid: Guid
    open var FriendlyName: String
    open var DefaultValue: String
    open var Category: String
    open var SubCategory: String
    open var SubCategoryObject: UObject
    open var PinValueType: EdGraphTerminalType
    open var ContainerType: String /* "None" | "Array" | "Set" | "Map" | "EPinContainerType_MAX" */
    open var bIsArray: Boolean
    open var bIsSet: Boolean
    open var bIsMap: Boolean
    open var bInvalidMember: Boolean
    open var bDontEditOnInstance: Boolean
    open var bEnableSaveGame: Boolean
    open var bEnableMultiLineText: Boolean
    open var bEnable3dWidget: Boolean
    open var CurrentDefaultValue: String
    open var Tooltip: String
    open fun clone(): StructVariableDescription

    companion object {
        fun C(Other: UObject): StructVariableDescription
        fun C(Other: Any): StructVariableDescription
    }
}

external open class UserDefinedStructEditorData : UObject {
    constructor()
    constructor(Outer: UObject)
    open var UniqueNameId: Any
    open var VariablesDescriptions: Array<StructVariableDescription>
    open var Tooltip: String

    companion object {
        fun Load(ResourceName: String): UserDefinedStructEditorData
        fun Find(Outer: UObject, ResourceName: String): UserDefinedStructEditorData
        fun GetDefaultObject(): UserDefinedStructEditorData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UserDefinedStructEditorData
        fun C(Other: UObject): UserDefinedStructEditorData
        fun C(Other: Any): UserDefinedStructEditorData
    }
}

external open class VectorFieldExporter : Exporter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): VectorFieldExporter
        fun Find(Outer: UObject, ResourceName: String): VectorFieldExporter
        fun GetDefaultObject(): VectorFieldExporter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VectorFieldExporter
        fun C(Other: UObject): VectorFieldExporter
        fun C(Other: Any): VectorFieldExporter
    }
}

external open class VolumeTextureFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var InitialTexture: Texture2D

    companion object {
        fun Load(ResourceName: String): VolumeTextureFactory
        fun Find(Outer: UObject, ResourceName: String): VolumeTextureFactory
        fun GetDefaultObject(): VolumeTextureFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VolumeTextureFactory
        fun C(Other: UObject): VolumeTextureFactory
        fun C(Other: Any): VolumeTextureFactory
    }
}

external open class VolumeTextureThumbnailRenderer : DefaultSizedThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)
    open var MaterialInstance: MaterialInstanceConstant

    companion object {
        fun Load(ResourceName: String): VolumeTextureThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): VolumeTextureThumbnailRenderer
        fun GetDefaultObject(): VolumeTextureThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VolumeTextureThumbnailRenderer
        fun C(Other: UObject): VolumeTextureThumbnailRenderer
        fun C(Other: Any): VolumeTextureThumbnailRenderer
    }
}

external open class VolumetricBuilder : EditorBrushBuilder {
    constructor()
    constructor(Outer: UObject)
    open var Z: Number
    open var Radius: Number
    open var NumSheets: Number
    open var GroupName: String

    companion object {
        fun Load(ResourceName: String): VolumetricBuilder
        fun Find(Outer: UObject, ResourceName: String): VolumetricBuilder
        fun GetDefaultObject(): VolumetricBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VolumetricBuilder
        fun C(Other: UObject): VolumetricBuilder
        fun C(Other: Any): VolumetricBuilder
    }
}

external open class WorldFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): WorldFactory
        fun Find(Outer: UObject, ResourceName: String): WorldFactory
        fun GetDefaultObject(): WorldFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WorldFactory
        fun C(Other: UObject): WorldFactory
        fun C(Other: Any): WorldFactory
    }
}

external object EOrthoThumbnailDirection {
    var Top: String /* "Top" */
    var Bottom: String /* "Bottom" */
    var Left: String /* "Left" */
    var Right: String /* "Right" */
    var Front: String /* "Front" */
    var Back: String /* "Back" */
    var EOrthoThumbnailDirection_MAX: String /* "EOrthoThumbnailDirection_MAX" */
}

external open class WorldThumbnailInfo : SceneThumbnailInfo {
    constructor()
    constructor(Outer: UObject)
    open var CameraMode: String /* "Perspective" | "Orthographic" | "ECameraProjectionMode_MAX" */
    open var OrthoDirection: String /* "Top" | "Bottom" | "Left" | "Right" | "Front" | "Back" | "EOrthoThumbnailDirection_MAX" */

    companion object {
        fun Load(ResourceName: String): WorldThumbnailInfo
        fun Find(Outer: UObject, ResourceName: String): WorldThumbnailInfo
        fun GetDefaultObject(): WorldThumbnailInfo
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WorldThumbnailInfo
        fun C(Other: UObject): WorldThumbnailInfo
        fun C(Other: Any): WorldThumbnailInfo
    }
}

external open class WorldThumbnailRenderer : DefaultSizedThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)
    open var GlobalOrbitPitchOffset: Number
    open var GlobalOrbitYawOffset: Number
    open var bUseUnlitScene: Boolean
    open var bAllowWorldThumbnails: Boolean

    companion object {
        fun Load(ResourceName: String): WorldThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): WorldThumbnailRenderer
        fun GetDefaultObject(): WorldThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WorldThumbnailRenderer
        fun C(Other: UObject): WorldThumbnailRenderer
        fun C(Other: Any): WorldThumbnailRenderer
    }
}

external open class WrangleContentCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): WrangleContentCommandlet
        fun Find(Outer: UObject, ResourceName: String): WrangleContentCommandlet
        fun GetDefaultObject(): WrangleContentCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WrangleContentCommandlet
        fun C(Other: UObject): WrangleContentCommandlet
        fun C(Other: Any): WrangleContentCommandlet
    }
}

external open class InstancedStaticMeshInstanceData {
    open var Transform: Matrix
    open fun clone(): InstancedStaticMeshInstanceData

    companion object {
        fun C(Other: UObject): InstancedStaticMeshInstanceData
        fun C(Other: Any): InstancedStaticMeshInstanceData
    }
}

external open class InstancedStaticMeshMappingInfo {
    open fun clone(): InstancedStaticMeshMappingInfo

    companion object {
        fun C(Other: UObject): InstancedStaticMeshMappingInfo
        fun C(Other: Any): InstancedStaticMeshMappingInfo
    }
}

external open class InstancedStaticMeshComponent : StaticMeshComponent {
    constructor()
    constructor(Outer: UObject)
    open var PerInstanceSMData: Array<InstancedStaticMeshInstanceData>
    open var NumCustomDataFloats: Number
    open var PerInstanceSMCustomData: Array<Number>
    open var InstancingRandomSeed: Number
    open var InstanceStartCullDistance: Number
    open var InstanceEndCullDistance: Number
    open var InstanceReorderTable: Array<Number>
    open var NumPendingLightmaps: Number
    open var CachedMappings: Array<InstancedStaticMeshMappingInfo>
    open fun UpdateInstanceTransform(InstanceIndex: Number, NewInstanceTransform: Transform, bWorldSpace: Boolean, bMarkRenderStateDirty: Boolean, bTeleport: Boolean): Boolean
    open fun SetCustomDataValue(InstanceIndex: Number, CustomDataIndex: Number, CustomDataValue: Number, bMarkRenderStateDirty: Boolean): Boolean
    open fun SetCullDistances(StartCullDistance: Number, EndCullDistance: Number)
    open fun RemoveInstance(InstanceIndex: Number): Boolean
    open fun GetInstanceTransform(InstanceIndex: Number, OutInstanceTransform: Transform = definedExternally, bWorldSpace: Boolean = definedExternally): `T$385`
    open fun GetInstancesOverlappingSphere(Center: Vector, Radius: Number, bSphereInWorldSpace: Boolean): Array<Number>
    open fun GetInstancesOverlappingBox(Box: Box, bBoxInWorldSpace: Boolean): Array<Number>
    open fun GetInstanceCount(): Number
    open fun ClearInstances()
    open fun BatchUpdateInstancesTransforms(StartInstanceIndex: Number, NewInstancesTransforms: Array<Transform>, bWorldSpace: Boolean, bMarkRenderStateDirty: Boolean, bTeleport: Boolean): Boolean
    open fun BatchUpdateInstancesTransform(StartInstanceIndex: Number, NumInstances: Number, NewInstancesTransform: Transform, bWorldSpace: Boolean, bMarkRenderStateDirty: Boolean, bTeleport: Boolean): Boolean
    open fun AddInstanceWorldSpace(WorldTransform: Transform): Number
    open fun AddInstances(InstanceTransforms: Array<Transform>, bShouldReturnIndices: Boolean): Array<Number>
    open fun AddInstance(InstanceTransform: Transform): Number

    companion object {
        fun Load(ResourceName: String): InstancedStaticMeshComponent
        fun Find(Outer: UObject, ResourceName: String): InstancedStaticMeshComponent
        fun GetDefaultObject(): InstancedStaticMeshComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InstancedStaticMeshComponent
        fun C(Other: UObject): InstancedStaticMeshComponent
        fun C(Other: Any): InstancedStaticMeshComponent
    }
}

external open class HierarchicalInstancedStaticMeshComponent : InstancedStaticMeshComponent {
    constructor()
    constructor(Outer: UObject)
    open var SortedInstances: Array<Number>
    open var NumBuiltInstances: Number
    open var BuiltInstanceBounds: Box
    open var UnbuiltInstanceBounds: Box
    open var UnbuiltInstanceBoundsList: Array<Box>
    open var bEnableDensityScaling: Boolean
    open var OcclusionLayerNumNodes: Number
    open var CacheMeshExtendedBounds: BoxSphereBounds
    open var bDisableCollision: Boolean
    open var InstanceCountToRender: Number
    open fun RemoveInstances(InstancesToRemove: Array<Number>): Boolean

    companion object {
        fun Load(ResourceName: String): HierarchicalInstancedStaticMeshComponent
        fun Find(Outer: UObject, ResourceName: String): HierarchicalInstancedStaticMeshComponent
        fun GetDefaultObject(): HierarchicalInstancedStaticMeshComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): HierarchicalInstancedStaticMeshComponent
        fun C(Other: UObject): HierarchicalInstancedStaticMeshComponent
        fun C(Other: Any): HierarchicalInstancedStaticMeshComponent
    }
}

external open class FoliageInstancedStaticMeshComponent : HierarchicalInstancedStaticMeshComponent {
    constructor()
    constructor(Outer: UObject)
    open var OnInstanceTakePointDamage: UnrealEngineMulticastDelegate<(InstanceIndex: Number, Damage: Number, InstigatedBy: Controller, HitLocation: Vector, ShotFromDirection: Vector, DamageType: DamageType, DamageCauser: Actor) -> Unit>
    open var OnInstanceTakeRadialDamage: UnrealEngineMulticastDelegate<(Instances: Array<Number>, Damages: Array<Number>, InstigatedBy: Controller, Origin: Vector, MaxRadius: Number, DamageType: DamageType, DamageCauser: Actor) -> Unit>
    open var FoliageHiddenEditorViews: Any
    open var GenerationGuid: Guid

    companion object {
        fun Load(ResourceName: String): FoliageInstancedStaticMeshComponent
        fun Find(Outer: UObject, ResourceName: String): FoliageInstancedStaticMeshComponent
        fun GetDefaultObject(): FoliageInstancedStaticMeshComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FoliageInstancedStaticMeshComponent
        fun C(Other: UObject): FoliageInstancedStaticMeshComponent
        fun C(Other: Any): FoliageInstancedStaticMeshComponent
    }
}

external open class FoliageStatistics : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): FoliageStatistics
        fun Find(Outer: UObject, ResourceName: String): FoliageStatistics
        fun GetDefaultObject(): FoliageStatistics
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FoliageStatistics
        fun FoliageOverlappingSphereCount(WorldContextObject: UObject, StaticMesh: StaticMesh, CenterPosition: Vector, Radius: Number): Number
        fun FoliageOverlappingBoxCount(WorldContextObject: UObject, StaticMesh: StaticMesh, Box: Box): Number
        fun C(Other: UObject): FoliageStatistics
        fun C(Other: Any): FoliageStatistics
    }
}

external object EFoliageScaling {
    var Uniform: String /* "Uniform" */
    var Free: String /* "Free" */
    var LockXY: String /* "LockXY" */
    var LockXZ: String /* "LockXZ" */
    var LockYZ: String /* "LockYZ" */
    var EFoliageScaling_MAX: String /* "EFoliageScaling_MAX" */
}

external open class FoliageVertexColorChannelMask {
    open var UseMask: Boolean
    open var MaskThreshold: Number
    open var InvertMask: Boolean
    open fun clone(): FoliageVertexColorChannelMask

    companion object {
        fun C(Other: UObject): FoliageVertexColorChannelMask
        fun C(Other: Any): FoliageVertexColorChannelMask
    }
}

external object FoliageVertexColorMask {
    var FOLIAGEVERTEXCOLORMASK_Disabled: String /* "FOLIAGEVERTEXCOLORMASK_Disabled" */
    var FOLIAGEVERTEXCOLORMASK_Red: String /* "FOLIAGEVERTEXCOLORMASK_Red" */
    var FOLIAGEVERTEXCOLORMASK_Green: String /* "FOLIAGEVERTEXCOLORMASK_Green" */
    var FOLIAGEVERTEXCOLORMASK_Blue: String /* "FOLIAGEVERTEXCOLORMASK_Blue" */
    var FOLIAGEVERTEXCOLORMASK_Alpha: String /* "FOLIAGEVERTEXCOLORMASK_Alpha" */
    var FOLIAGEVERTEXCOLORMASK_MAX: String /* "FOLIAGEVERTEXCOLORMASK_MAX" */
}

external open class FoliageType : UObject {
    constructor()
    constructor(Outer: UObject)
    open var UpdateGuid: Guid
    open var Density: Number
    open var DensityAdjustmentFactor: Number
    open var Radius: Number
    open var bSingleInstanceModeOverrideRadius: Boolean
    open var SingleInstanceModeRadius: Number
    open var Scaling: String /* "Uniform" | "Free" | "LockXY" | "LockXZ" | "LockYZ" | "EFoliageScaling_MAX" */
    open var ScaleX: FloatInterval
    open var ScaleY: FloatInterval
    open var ScaleZ: FloatInterval
    open var VertexColorMaskByChannel: FoliageVertexColorChannelMask
    open var VertexColorMask: String /* "FOLIAGEVERTEXCOLORMASK_Disabled" | "FOLIAGEVERTEXCOLORMASK_Red" | "FOLIAGEVERTEXCOLORMASK_Green" | "FOLIAGEVERTEXCOLORMASK_Blue" | "FOLIAGEVERTEXCOLORMASK_Alpha" | "FOLIAGEVERTEXCOLORMASK_MAX" */
    open var VertexColorMaskThreshold: Number
    open var VertexColorMaskInvert: Boolean
    open var ZOffset: FloatInterval
    open var AlignToNormal: Boolean
    open var AlignMaxAngle: Number
    open var RandomYaw: Boolean
    open var RandomPitchAngle: Number
    open var GroundSlopeAngle: FloatInterval
    open var Height: FloatInterval
    open var LandscapeLayers: Array<String>
    open var MinimumLayerWeight: Number
    open var ExclusionLandscapeLayers: Array<String>
    open var MinimumExclusionLayerWeight: Number
    open var LandscapeLayer: String
    open var CollisionWithWorld: Boolean
    open var CollisionScale: Vector
    open var MeshBounds: BoxSphereBounds
    open var LowBoundOriginRadius: Vector
    open var Mobility: String /* "Static" | "Stationary" | "Movable" | "EComponentMobility_MAX" */
    open var CullDistance: Int32Interval
    open var bEnableStaticLighting: Boolean
    open var CastShadow: Boolean
    open var bAffectDynamicIndirectLighting: Boolean
    open var bAffectDistanceFieldLighting: Boolean
    open var bCastDynamicShadow: Boolean
    open var bCastStaticShadow: Boolean
    open var bCastShadowAsTwoSided: Boolean
    open var bReceivesDecals: Boolean
    open var bOverrideLightMapRes: Boolean
    open var OverriddenLightMapRes: Number
    open var LightmapType: String /* "Default" | "ForceSurface" | "ForceVolumetric" | "ELightmapType_MAX" */
    open var bUseAsOccluder: Boolean
    open var bVisibleInRayTracing: Boolean
    open var bEvaluateWorldPositionOffset: Boolean
    open var BodyInstance: BodyInstance
    open var CustomNavigableGeometry: String /* "No" | "Yes" | "EvenIfNotCollidable" | "DontExport" | "EHasCustomNavigableGeometry_MAX" */
    open var LightingChannels: LightingChannels
    open var bRenderCustomDepth: Boolean
    open var CustomDepthStencilWriteMask: String /* "ERSM_Default" | "ERSM_255" | "ERSM_1" | "ERSM_2" | "ERSM_4" | "ERSM_8" | "ERSM_16" | "ERSM_32" | "ERSM_64" | "ERSM_128" | "ERSM_MAX" */
    open var CustomDepthStencilValue: Number
    open var TranslucencySortPriority: Number
    open var HiddenEditorViews: Any
    open var IsSelected: Boolean
    open var CollisionRadius: Number
    open var ShadeRadius: Number
    open var NumSteps: Number
    open var InitialSeedDensity: Number
    open var AverageSpreadDistance: Number
    open var SpreadVariance: Number
    open var SeedsPerStep: Number
    open var DistributionSeed: Number
    open var MaxInitialSeedOffset: Number
    open var bCanGrowInShade: Boolean
    open var bSpawnsInShade: Boolean
    open var MaxInitialAge: Number
    open var MaxAge: Number
    open var OverlapPriority: Number
    open var ProceduralScale: FloatInterval
    open var ScaleCurve: RuntimeFloatCurve
    open var ChangeCount: Number
    open var ReapplyDensity: Boolean
    open var ReapplyRadius: Boolean
    open var ReapplyAlignToNormal: Boolean
    open var ReapplyRandomYaw: Boolean
    open var ReapplyScaling: Boolean
    open var ReapplyScaleX: Boolean
    open var ReapplyScaleY: Boolean
    open var ReapplyScaleZ: Boolean
    open var ReapplyRandomPitchAngle: Boolean
    open var ReapplyGroundSlope: Boolean
    open var ReapplyHeight: Boolean
    open var ReapplyLandscapeLayers: Boolean
    open var ReapplyZOffset: Boolean
    open var ReapplyCollisionWithWorld: Boolean
    open var ReapplyVertexColorMask: Boolean
    open var bEnableDensityScaling: Boolean
    open var bEnableDiscardOnLoad: Boolean
    open var RuntimeVirtualTextures: Array<RuntimeVirtualTexture>
    open var VirtualTextureCullMips: Number
    open var VirtualTextureRenderPassType: String /* "Never" | "Exclusive" | "Always" | "ERuntimeVirtualTextureMainPassType_MAX" */
    open var ScaleMinX: Number
    open var ScaleMinY: Number
    open var ScaleMinZ: Number
    open var ScaleMaxX: Number
    open var ScaleMaxY: Number
    open var ScaleMaxZ: Number
    open var HeightMin: Number
    open var HeightMax: Number
    open var ZOffsetMin: Number
    open var ZOffsetMax: Number
    open var StartCullDistance: Number
    open var EndCullDistance: Number
    open var UniformScale: Boolean
    open var LockScaleX: Boolean
    open var LockScaleY: Boolean
    open var LockScaleZ: Boolean
    open var GroundSlope: Number
    open var MinGroundSlope: Number
    open var MinScale: Number
    open var MaxScale: Number

    companion object {
        fun Load(ResourceName: String): FoliageType
        fun Find(Outer: UObject, ResourceName: String): FoliageType
        fun GetDefaultObject(): FoliageType
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FoliageType
        fun C(Other: UObject): FoliageType
        fun C(Other: Any): FoliageType
    }
}

external open class FoliageType_Actor : FoliageType {
    constructor()
    constructor(Outer: UObject)
    open var ActorClass: UnrealEngineClass
    open var bShouldAttachToBaseComponent: Boolean

    companion object {
        fun Load(ResourceName: String): FoliageType_Actor
        fun Find(Outer: UObject, ResourceName: String): FoliageType_Actor
        fun GetDefaultObject(): FoliageType_Actor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FoliageType_Actor
        fun C(Other: UObject): FoliageType_Actor
        fun C(Other: Any): FoliageType_Actor
    }
}

external open class FoliageType_InstancedStaticMesh : FoliageType {
    constructor()
    constructor(Outer: UObject)
    open var Mesh: StaticMesh
    open var OverrideMaterials: Array<MaterialInterface>
    open var ComponentClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): FoliageType_InstancedStaticMesh
        fun Find(Outer: UObject, ResourceName: String): FoliageType_InstancedStaticMesh
        fun GetDefaultObject(): FoliageType_InstancedStaticMesh
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FoliageType_InstancedStaticMesh
        fun C(Other: UObject): FoliageType_InstancedStaticMesh
        fun C(Other: Any): FoliageType_InstancedStaticMesh
    }
}

external open class InstancedFoliageActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    companion object {
        fun GetDefaultObject(): InstancedFoliageActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InstancedFoliageActor
        fun C(Other: UObject): InstancedFoliageActor
        fun C(Other: Any): InstancedFoliageActor
    }
}

external object ENavDataGatheringMode {
    var Default: String /* "Default" */
    var Instant: String /* "Instant" */
    var Lazy: String /* "Lazy" */
    var ENavDataGatheringMode_MAX: String /* "ENavDataGatheringMode_MAX" */
}

external open class StaticMeshActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var StaticMeshComponent: StaticMeshComponent
    open var bStaticMeshReplicateMovement: Boolean
    open var NavigationGeometryGatheringMode: String /* "Default" | "Instant" | "Lazy" | "ENavDataGatheringMode_MAX" */
    open fun SetMobility(InMobility: String /* "Static" | "Stationary" | "Movable" | "EComponentMobility_MAX" */)

    companion object {
        fun GetDefaultObject(): StaticMeshActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): StaticMeshActor
        fun C(Other: UObject): StaticMeshActor
        fun C(Other: Any): StaticMeshActor
    }
}

external open class InteractiveFoliageActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : StaticMeshActor {
    open var CapsuleComponent: CapsuleComponent
    open var TouchingActorEntryPosition: Vector
    open var FoliageVelocity: Vector
    open var FoliageForce: Vector
    open var FoliagePosition: Vector
    open var FoliageDamageImpulseScale: Number
    open var FoliageTouchImpulseScale: Number
    open var FoliageStiffness: Number
    open var FoliageStiffnessQuadratic: Number
    open var FoliageDamping: Number
    open var MaxDamageImpulse: Number
    open var MaxTouchImpulse: Number
    open var MaxForce: Number
    open var Mass: Number
    open fun CapsuleTouched(OverlappedComp: PrimitiveComponent, Other: Actor, OtherComp: PrimitiveComponent, OtherBodyIndex: Number, bFromSweep: Boolean, OverlapInfo: HitResult)

    companion object {
        fun GetDefaultObject(): InteractiveFoliageActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InteractiveFoliageActor
        fun C(Other: UObject): InteractiveFoliageActor
        fun C(Other: Any): InteractiveFoliageActor
    }
}

external open class InteractiveFoliageComponent : StaticMeshComponent {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InteractiveFoliageComponent
        fun Find(Outer: UObject, ResourceName: String): InteractiveFoliageComponent
        fun GetDefaultObject(): InteractiveFoliageComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InteractiveFoliageComponent
        fun C(Other: UObject): InteractiveFoliageComponent
        fun C(Other: Any): InteractiveFoliageComponent
    }
}

external open class FoliageTypeObject {
    open var FoliageTypeObject: UObject
    open var TypeInstance: FoliageType
    open var bIsAsset: Boolean
    open var Type: UnrealEngineClass
    open fun clone(): FoliageTypeObject

    companion object {
        fun C(Other: UObject): FoliageTypeObject
        fun C(Other: Any): FoliageTypeObject
    }
}

external open class ProceduralFoliageSpawner : UObject {
    constructor()
    constructor(Outer: UObject)
    open var RandomSeed: Number
    open var TileSize: Number
    open var NumUniqueTiles: Number
    open var MinimumQuadTreeSize: Number
    open var FoliageTypes: Array<FoliageTypeObject>
    open fun Simulate(NumSteps: Number)

    companion object {
        fun Load(ResourceName: String): ProceduralFoliageSpawner
        fun Find(Outer: UObject, ResourceName: String): ProceduralFoliageSpawner
        fun GetDefaultObject(): ProceduralFoliageSpawner
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ProceduralFoliageSpawner
        fun C(Other: UObject): ProceduralFoliageSpawner
        fun C(Other: Any): ProceduralFoliageSpawner
    }
}

external open class ProceduralFoliageComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var FoliageSpawner: ProceduralFoliageSpawner
    open var TileOverlap: Number
    open var bAllowLandscape: Boolean
    open var bAllowBSP: Boolean
    open var bAllowStaticMesh: Boolean
    open var bAllowTranslucent: Boolean
    open var bAllowFoliage: Boolean
    open var bShowDebugTiles: Boolean
    open var SpawningVolume: Volume
    open var ProceduralGuid: Guid

    companion object {
        fun Load(ResourceName: String): ProceduralFoliageComponent
        fun Find(Outer: UObject, ResourceName: String): ProceduralFoliageComponent
        fun GetDefaultObject(): ProceduralFoliageComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ProceduralFoliageComponent
        fun C(Other: UObject): ProceduralFoliageComponent
        fun C(Other: Any): ProceduralFoliageComponent
    }
}

external open class ProceduralFoliageVolume(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Volume {
    open var ProceduralComponent: ProceduralFoliageComponent

    companion object {
        fun GetDefaultObject(): ProceduralFoliageVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ProceduralFoliageVolume
        fun C(Other: UObject): ProceduralFoliageVolume
        fun C(Other: Any): ProceduralFoliageVolume
    }
}

external open class ProceduralFoliageBlockingVolume(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Volume {
    open var ProceduralFoliageVolume: ProceduralFoliageVolume

    companion object {
        fun GetDefaultObject(): ProceduralFoliageBlockingVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ProceduralFoliageBlockingVolume
        fun C(Other: UObject): ProceduralFoliageBlockingVolume
        fun C(Other: Any): ProceduralFoliageBlockingVolume
    }
}

external open class ProceduralFoliageInstance {
    open var Rotation: Quat
    open var Location: Vector
    open var Age: Number
    open var Normal: Vector
    open var Scale: Number
    open var Type: FoliageType
    open fun clone(): ProceduralFoliageInstance

    companion object {
        fun C(Other: UObject): ProceduralFoliageInstance
        fun C(Other: Any): ProceduralFoliageInstance
    }
}

external open class ProceduralFoliageTile : UObject {
    constructor()
    constructor(Outer: UObject)
    open var FoliageSpawner: ProceduralFoliageSpawner
    open var InstancesArray: Array<ProceduralFoliageInstance>

    companion object {
        fun Load(ResourceName: String): ProceduralFoliageTile
        fun Find(Outer: UObject, ResourceName: String): ProceduralFoliageTile
        fun GetDefaultObject(): ProceduralFoliageTile
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ProceduralFoliageTile
        fun C(Other: UObject): ProceduralFoliageTile
        fun C(Other: Any): ProceduralFoliageTile
    }
}

external open class ImageWriteBlueprintLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ImageWriteBlueprintLibrary
        fun Find(Outer: UObject, ResourceName: String): ImageWriteBlueprintLibrary
        fun GetDefaultObject(): ImageWriteBlueprintLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ImageWriteBlueprintLibrary
        fun ExportToDisk(Texture: Texture, Filename: String, Options: ImageWriteOptions)
        fun C(Other: UObject): ImageWriteBlueprintLibrary
        fun C(Other: Any): ImageWriteBlueprintLibrary
    }
}

external open class ControlPointMeshComponent : StaticMeshComponent {
    constructor()
    constructor(Outer: UObject)
    open var bSelected: Boolean
    open var VirtualTextureMainPassMaxDrawDistance: Number

    companion object {
        fun Load(ResourceName: String): ControlPointMeshComponent
        fun Find(Outer: UObject, ResourceName: String): ControlPointMeshComponent
        fun GetDefaultObject(): ControlPointMeshComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ControlPointMeshComponent
        fun C(Other: UObject): ControlPointMeshComponent
        fun C(Other: Any): ControlPointMeshComponent
    }
}

external open class ControlPointMeshActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var ControlPointMeshComponent: ControlPointMeshComponent

    companion object {
        fun GetDefaultObject(): ControlPointMeshActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ControlPointMeshActor
        fun C(Other: UObject): ControlPointMeshActor
        fun C(Other: Any): ControlPointMeshActor
    }
}

external open class LandscapeSplineSegmentConnection {
    open var ControlPoint: LandscapeSplineControlPoint
    open var TangentLen: Number
    open var SocketName: String
    open fun clone(): LandscapeSplineSegmentConnection

    companion object {
        fun C(Other: UObject): LandscapeSplineSegmentConnection
        fun C(Other: Any): LandscapeSplineSegmentConnection
    }
}

external object LandscapeSplineMeshOrientation {
    var LSMO_XUp: String /* "LSMO_XUp" */
    var LSMO_YUp: String /* "LSMO_YUp" */
    var LSMO_MAX: String /* "LSMO_MAX" */
}

external open class LandscapeSplineMeshEntry {
    open var Mesh: StaticMesh
    open var MaterialOverrides: Array<MaterialInterface>
    open var bCenterH: Boolean
    open var CenterAdjust: Vector2D
    open var bScaleToWidth: Boolean
    open var Scale: Vector
    open var Orientation: String /* "LSMO_XUp" | "LSMO_YUp" | "LSMO_MAX" */
    open var ForwardAxis: String /* "X" | "Y" | "Z" | "ESplineMeshAxis_MAX" */
    open var UpAxis: String /* "X" | "Y" | "Z" | "ESplineMeshAxis_MAX" */
    open fun clone(): LandscapeSplineMeshEntry

    companion object {
        fun C(Other: UObject): LandscapeSplineMeshEntry
        fun C(Other: Any): LandscapeSplineMeshEntry
    }
}

external open class LandscapeSplineInterpPoint {
    open var Center: Vector
    open var Left: Vector
    open var Right: Vector
    open var FalloffLeft: Vector
    open var FalloffRight: Vector
    open var LayerLeft: Vector
    open var LayerRight: Vector
    open var LayerFalloffLeft: Vector
    open var LayerFalloffRight: Vector
    open var StartEndFalloff: Number
    open fun clone(): LandscapeSplineInterpPoint

    companion object {
        fun C(Other: UObject): LandscapeSplineInterpPoint
        fun C(Other: Any): LandscapeSplineInterpPoint
    }
}

external open class LandscapeSplineSegment : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Connections: LandscapeSplineSegmentConnection
    open var LayerName: String
    open var bRaiseTerrain: Boolean
    open var bLowerTerrain: Boolean
    open var SplineMeshes: Array<LandscapeSplineMeshEntry>
    open var bEnableCollision: Boolean
    open var CollisionProfileName: String
    open var bCastShadow: Boolean
    open var bHiddenInGame: Boolean
    open var bPlaceSplineMeshesInStreamingLevels: Boolean
    open var RandomSeed: Number
    open var LDMaxDrawDistance: Number
    open var TranslucencySortPriority: Number
    open var bRenderCustomDepth: Boolean
    open var CustomDepthStencilWriteMask: String /* "ERSM_Default" | "ERSM_255" | "ERSM_1" | "ERSM_2" | "ERSM_4" | "ERSM_8" | "ERSM_16" | "ERSM_32" | "ERSM_64" | "ERSM_128" | "ERSM_MAX" */
    open var CustomDepthStencilValue: Number
    open var RuntimeVirtualTextures: Array<RuntimeVirtualTexture>
    open var VirtualTextureLodBias: Number
    open var VirtualTextureCullMips: Number
    open var VirtualTextureMainPassMaxDrawDistance: Number
    open var VirtualTextureRenderPassType: String /* "Never" | "Exclusive" | "Always" | "ERuntimeVirtualTextureMainPassType_MAX" */
    open var BodyInstance: BodyInstance
    open var bSelected: Boolean
    open var bNavDirty: Boolean
    open var SplineInfo: InterpCurveVector
    open var Points: Array<LandscapeSplineInterpPoint>
    open var Bounds: Box
    open var LocalMeshComponents: Array<SplineMeshComponent>
    open var ForeignWorlds: Array<World>
    open var ModificationKey: Guid

    companion object {
        fun Load(ResourceName: String): LandscapeSplineSegment
        fun Find(Outer: UObject, ResourceName: String): LandscapeSplineSegment
        fun GetDefaultObject(): LandscapeSplineSegment
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeSplineSegment
        fun C(Other: UObject): LandscapeSplineSegment
        fun C(Other: Any): LandscapeSplineSegment
    }
}

external open class LandscapeSplineConnection {
    open var Segment: LandscapeSplineSegment
    open var End: Boolean
    open fun clone(): LandscapeSplineConnection

    companion object {
        fun C(Other: UObject): LandscapeSplineConnection
        fun C(Other: Any): LandscapeSplineConnection
    }
}

external open class LandscapeSplineControlPoint : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Location: Vector
    open var Rotation: Rotator
    open var Width: Number
    open var LayerWidthRatio: Number
    open var SideFalloff: Number
    open var LeftSideFalloffFactor: Number
    open var RightSideFalloffFactor: Number
    open var LeftSideLayerFalloffFactor: Number
    open var RightSideLayerFalloffFactor: Number
    open var EndFalloff: Number
    open var SegmentMeshOffset: Number
    open var LayerName: String
    open var bRaiseTerrain: Boolean
    open var bLowerTerrain: Boolean
    open var Mesh: StaticMesh
    open var MaterialOverrides: Array<MaterialInterface>
    open var MeshScale: Vector
    open var bEnableCollision: Boolean
    open var CollisionProfileName: String
    open var bCastShadow: Boolean
    open var bHiddenInGame: Boolean
    open var bPlaceSplineMeshesInStreamingLevels: Boolean
    open var LDMaxDrawDistance: Number
    open var TranslucencySortPriority: Number
    open var bRenderCustomDepth: Boolean
    open var CustomDepthStencilWriteMask: String /* "ERSM_Default" | "ERSM_255" | "ERSM_1" | "ERSM_2" | "ERSM_4" | "ERSM_8" | "ERSM_16" | "ERSM_32" | "ERSM_64" | "ERSM_128" | "ERSM_MAX" */
    open var CustomDepthStencilValue: Number
    open var RuntimeVirtualTextures: Array<RuntimeVirtualTexture>
    open var VirtualTextureLodBias: Number
    open var VirtualTextureCullMips: Number
    open var VirtualTextureMainPassMaxDrawDistance: Number
    open var VirtualTextureRenderPassType: String /* "Never" | "Exclusive" | "Always" | "ERuntimeVirtualTextureMainPassType_MAX" */
    open var BodyInstance: BodyInstance
    open var bSelected: Boolean
    open var bNavDirty: Boolean
    open var ConnectedSegments: Array<LandscapeSplineConnection>
    open var Points: Array<LandscapeSplineInterpPoint>
    open var Bounds: Box
    open var LocalMeshComponent: ControlPointMeshComponent
    open var ForeignWorld: World
    open var ModificationKey: Guid

    companion object {
        fun Load(ResourceName: String): LandscapeSplineControlPoint
        fun Find(Outer: UObject, ResourceName: String): LandscapeSplineControlPoint
        fun GetDefaultObject(): LandscapeSplineControlPoint
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeSplineControlPoint
        fun C(Other: UObject): LandscapeSplineControlPoint
        fun C(Other: Any): LandscapeSplineControlPoint
    }
}

external open class LandscapeSplinesComponent : PrimitiveComponent {
    constructor()
    constructor(Outer: UObject)
    open var SplineResolution: Number
    open var SplineColor: Color
    open var ControlPointSprite: Texture2D
    open var SplineEditorMesh: StaticMesh
    open var bShowSplineEditorMesh: Boolean
    open var ControlPoints: Array<LandscapeSplineControlPoint>
    open var Segments: Array<LandscapeSplineSegment>
    open var ForeignWorldSplineDataMap: Any
    open var CookedForeignMeshComponents: Array<MeshComponent>
    open fun GetSplineMeshComponents(): Array<SplineMeshComponent>

    companion object {
        fun Load(ResourceName: String): LandscapeSplinesComponent
        fun Find(Outer: UObject, ResourceName: String): LandscapeSplinesComponent
        fun GetDefaultObject(): LandscapeSplinesComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeSplinesComponent
        fun C(Other: UObject): LandscapeSplinesComponent
        fun C(Other: Any): LandscapeSplinesComponent
    }
}

external object ELandscapeLODFalloff {
    var Linear: String /* "Linear" */
    var SquareRoot: String /* "SquareRoot" */
    var ELandscapeLODFalloff_MAX: String /* "ELandscapeLODFalloff_MAX" */
}

external object ELandscapeLayerDisplayMode {
    var Default: String /* "Default" */
    var Alphabetical: String /* "Alphabetical" */
    var UserSpecific: String /* "UserSpecific" */
    var ELandscapeLayerDisplayMode_MAX: String /* "ELandscapeLayerDisplayMode_MAX" */
}

external open class LandscapeProxyMaterialOverride {
    open var LODIndex: PerPlatformInt
    open var Material: MaterialInterface
    open fun clone(): LandscapeProxyMaterialOverride

    companion object {
        fun C(Other: UObject): LandscapeProxyMaterialOverride
        fun C(Other: Any): LandscapeProxyMaterialOverride
    }
}

external open class LandscapeComponentMaterialOverride {
    open var LODIndex: PerPlatformInt
    open var Material: MaterialInterface
    open fun clone(): LandscapeComponentMaterialOverride

    companion object {
        fun C(Other: UObject): LandscapeComponentMaterialOverride
        fun C(Other: Any): LandscapeComponentMaterialOverride
    }
}

external open class LandscapeWeightmapUsage : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ChannelUsage: LandscapeComponent
    open var LayerGuid: Guid

    companion object {
        fun Load(ResourceName: String): LandscapeWeightmapUsage
        fun Find(Outer: UObject, ResourceName: String): LandscapeWeightmapUsage
        fun GetDefaultObject(): LandscapeWeightmapUsage
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeWeightmapUsage
        fun C(Other: UObject): LandscapeWeightmapUsage
        fun C(Other: Any): LandscapeWeightmapUsage
    }
}

external object ESplineModulationColorMask {
    var Red: String /* "Red" */
    var Green: String /* "Green" */
    var Blue: String /* "Blue" */
    var Alpha: String /* "Alpha" */
    var ESplineModulationColorMask_MAX: String /* "ESplineModulationColorMask_MAX" */
}

external open class LandscapeLayerInfoObject : UObject {
    constructor()
    constructor(Outer: UObject)
    open var LayerName: String
    open var PhysMaterial: PhysicalMaterial
    open var Hardness: Number
    open var MinimumCollisionRelevanceWeight: Number
    open var bNoWeightBlend: Boolean
    open var SplineFalloffModulationTexture: Texture2D
    open var SplineFalloffModulationColorMask: String /* "Red" | "Green" | "Blue" | "Alpha" | "ESplineModulationColorMask_MAX" */
    open var SplineFalloffModulationTiling: Number
    open var SplineFalloffModulationBias: Number
    open var SplineFalloffModulationScale: Number
    open var IsReferencedFromLoadedData: Boolean
    open var LayerUsageDebugColor: LinearColor

    companion object {
        fun Load(ResourceName: String): LandscapeLayerInfoObject
        fun Find(Outer: UObject, ResourceName: String): LandscapeLayerInfoObject
        fun GetDefaultObject(): LandscapeLayerInfoObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeLayerInfoObject
        fun C(Other: UObject): LandscapeLayerInfoObject
        fun C(Other: Any): LandscapeLayerInfoObject
    }
}

external open class WeightmapLayerAllocationInfo {
    open var LayerInfo: LandscapeLayerInfoObject
    open var WeightmapTextureIndex: Number
    open var WeightmapTextureChannel: Number
    open fun clone(): WeightmapLayerAllocationInfo

    companion object {
        fun C(Other: UObject): WeightmapLayerAllocationInfo
        fun C(Other: Any): WeightmapLayerAllocationInfo
    }
}

external open class LandscapeLODStreamingProxy : StreamableRenderAsset {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LandscapeLODStreamingProxy
        fun Find(Outer: UObject, ResourceName: String): LandscapeLODStreamingProxy
        fun GetDefaultObject(): LandscapeLODStreamingProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeLODStreamingProxy
        fun C(Other: UObject): LandscapeLODStreamingProxy
        fun C(Other: Any): LandscapeLODStreamingProxy
    }
}

external open class LandscapeEditToolRenderData {
    open var ToolMaterial: MaterialInterface
    open var GizmoMaterial: MaterialInterface
    open var SelectedType: Number
    open var DebugChannelR: Number
    open var DebugChannelG: Number
    open var DebugChannelB: Number
    open var DataTexture: Texture2D
    open var LayerContributionTexture: Texture2D
    open var DirtyTexture: Texture2D
    open fun clone(): LandscapeEditToolRenderData

    companion object {
        fun C(Other: UObject): LandscapeEditToolRenderData
        fun C(Other: Any): LandscapeEditToolRenderData
    }
}

external open class LandscapeComponent : PrimitiveComponent {
    constructor()
    constructor(Outer: UObject)
    open var SectionBaseX: Number
    open var SectionBaseY: Number
    open var ComponentSizeQuads: Number
    open var SubsectionSizeQuads: Number
    open var NumSubsections: Number
    open var OverrideMaterial: MaterialInterface
    open var OverrideHoleMaterial: MaterialInterface
    open var OverrideMaterials: Array<LandscapeComponentMaterialOverride>
    open var MaterialInstance: MaterialInstanceConstant
    open var MaterialInstances: Array<MaterialInstanceConstant>
    open var MaterialInstancesDynamic: Array<MaterialInstanceDynamic>
    open var LODIndexToMaterialIndex: Array<Any>
    open var MaterialIndexToDisabledTessellationMaterial: Array<Any>
    open var XYOffsetmapTexture: Texture2D
    open var WeightmapScaleBias: Vector4
    open var WeightmapSubsectionOffset: Number
    open var HeightmapScaleBias: Vector4
    open var CachedLocalBox: Box
    open var CollisionComponent: Any
    open var LightingGuid: Guid
    open var LayersData: Any
    open var WeightmapTexturesUsage: Array<LandscapeWeightmapUsage>
    open var LayerUpdateFlagPerMode: Any
    open var bPendingCollisionDataUpdate: Boolean
    open var bPendingLayerCollisionDataUpdate: Boolean
    open var HeightmapTexture: Texture2D
    open var WeightmapLayerAllocations: Array<WeightmapLayerAllocationInfo>
    open var WeightmapTextures: Array<Texture2D>
    open var LODStreamingProxy: LandscapeLODStreamingProxy
    open var MapBuildDataId: Guid
    open var IrrelevantLights: Array<Guid>
    open var CollisionMipLevel: Number
    open var SimpleCollisionMipLevel: Number
    open var NegativeZBoundsExtension: Number
    open var PositiveZBoundsExtension: Number
    open var StaticLightingResolution: Number
    open var ForcedLOD: Number
    open var LODBias: Number
    open var StateId: Guid
    open var BakedTextureMaterialGuid: Guid
    open var GIBakedBaseColorTexture: Texture2D
    open var LightingLODBias: Number
    open var LayerWhitelist: Array<LandscapeLayerInfoObject>
    open var EditToolRenderData: LandscapeEditToolRenderData
    open var MobileDataSourceHash: Guid
    open var MaterialPerLOD: Any
    open var SplineHash: Any
    open var PhysicalMaterialHash: Any
    open var MobileBlendableLayerMask: Number
    open var MobileMaterialInterface: MaterialInterface
    open var MobileMaterialInterfaces: Array<MaterialInterface>
    open var MobileWeightmapTextures: Array<Texture2D>
    open var MobileCombinationMaterialInstances: Array<MaterialInstanceConstant>
    open var MobileCombinationMaterialInstance: MaterialInstanceConstant
    open fun GetMaterialInstanceDynamic(InIndex: Number): MaterialInstanceDynamic
    open fun EditorGetPaintLayerWeightByNameAtLocation(InLocation: Vector, InPaintLayerName: String): Number
    open fun EditorGetPaintLayerWeightAtLocation(InLocation: Vector, PaintLayer: LandscapeLayerInfoObject): Number

    companion object {
        fun Load(ResourceName: String): LandscapeComponent
        fun Find(Outer: UObject, ResourceName: String): LandscapeComponent
        fun GetDefaultObject(): LandscapeComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeComponent
        fun C(Other: UObject): LandscapeComponent
        fun C(Other: Any): LandscapeComponent
    }
}

external open class LandscapeHeightfieldCollisionComponent : PrimitiveComponent {
    constructor()
    constructor(Outer: UObject)
    open var ComponentLayerInfos: Array<LandscapeLayerInfoObject>
    open var SectionBaseX: Number
    open var SectionBaseY: Number
    open var CollisionSizeQuads: Number
    open var CollisionScale: Number
    open var SimpleCollisionSizeQuads: Number
    open var CollisionQuadFlags: Array<Number>
    open var HeightfieldGuid: Guid
    open var CachedLocalBox: Box
    open var RenderComponent: Any
    open var PhysicalMaterialRenderObjects: Array<PhysicalMaterial>
    open var CookedPhysicalMaterials: Array<PhysicalMaterial>
    open fun GetRenderComponent(): LandscapeComponent

    companion object {
        fun Load(ResourceName: String): LandscapeHeightfieldCollisionComponent
        fun Find(Outer: UObject, ResourceName: String): LandscapeHeightfieldCollisionComponent
        fun GetDefaultObject(): LandscapeHeightfieldCollisionComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeHeightfieldCollisionComponent
        fun C(Other: UObject): LandscapeHeightfieldCollisionComponent
        fun C(Other: Any): LandscapeHeightfieldCollisionComponent
    }
}

external open class LandscapeEditorLayerSettings {
    open var LayerInfoObj: LandscapeLayerInfoObject
    open var ReimportLayerFilePath: String
    open fun clone(): LandscapeEditorLayerSettings

    companion object {
        fun C(Other: UObject): LandscapeEditorLayerSettings
        fun C(Other: Any): LandscapeEditorLayerSettings
    }
}

external open class LandscapeProxy(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var SplineComponent: LandscapeSplinesComponent
    open var LandscapeGuid: Guid
    open var LandscapeSectionOffset: IntPoint
    open var MaxLODLevel: Number
    open var LODDistanceFactor: Number
    open var LODFalloff: String /* "Linear" | "SquareRoot" | "ELandscapeLODFalloff_MAX" */
    open var ComponentScreenSizeToUseSubSections: Number
    open var LOD0ScreenSize: Number
    open var LOD0DistributionSetting: Number
    open var LODDistributionSetting: Number
    open var TessellationComponentScreenSize: Number
    open var UseTessellationComponentScreenSizeFalloff: Boolean
    open var TessellationComponentScreenSizeFalloff: Number
    open var OccluderGeometryLOD: Number
    open var ExportLOD: Number
    open var TargetDisplayOrderList: Array<String>
    open var TargetDisplayOrder: String /* "Default" | "Alphabetical" | "UserSpecific" | "ELandscapeLayerDisplayMode_MAX" */
    open var StaticLightingLOD: Number
    open var DefaultPhysMaterial: PhysicalMaterial
    open var StreamingDistanceMultiplier: Number
    open var LandscapeMaterial: MaterialInterface
    open var LandscapeHoleMaterial: MaterialInterface
    open var LandscapeMaterialsOverride: Array<LandscapeProxyMaterialOverride>
    open var PreEditLandscapeMaterial: MaterialInterface
    open var PreEditLandscapeHoleMaterial: MaterialInterface
    open var PreEditLandscapeMaterialsOverride: Array<LandscapeProxyMaterialOverride>
    open var bIsPerformingInteractiveActionOnLandscapeMaterialOverride: Boolean
    open var bMeshHoles: Boolean
    open var MeshHolesMaxLod: Number
    open var RuntimeVirtualTextures: Array<RuntimeVirtualTexture>
    open var VirtualTextureNumLods: Number
    open var VirtualTextureLodBias: Number
    open var VirtualTextureRenderPassType: String /* "Never" | "Exclusive" | "Always" | "ERuntimeVirtualTextureMainPassType_MAX" */
    open var NegativeZBoundsExtension: Number
    open var PositiveZBoundsExtension: Number
    open var LandscapeComponents: Array<LandscapeComponent>
    open var CollisionComponents: Array<LandscapeHeightfieldCollisionComponent>
    open var FoliageComponents: Array<HierarchicalInstancedStaticMeshComponent>
    open var bHasLandscapeGrass: Boolean
    open var StaticLightingResolution: Number
    open var CastShadow: Boolean
    open var bCastDynamicShadow: Boolean
    open var bCastStaticShadow: Boolean
    open var bCastFarShadow: Boolean
    open var bCastHiddenShadow: Boolean
    open var bCastShadowAsTwoSided: Boolean
    open var bAffectDistanceFieldLighting: Boolean
    open var LightingChannels: LightingChannels
    open var bUseMaterialPositionOffsetInStaticLighting: Boolean
    open var bRenderCustomDepth: Boolean
    open var CustomDepthStencilWriteMask: String /* "ERSM_Default" | "ERSM_255" | "ERSM_1" | "ERSM_2" | "ERSM_4" | "ERSM_8" | "ERSM_16" | "ERSM_32" | "ERSM_64" | "ERSM_128" | "ERSM_MAX" */
    open var CustomDepthStencilValue: Number
    open var LDMaxDrawDistance: Number
    open var bIsMovingToLevel: Boolean
    open var LightmassSettings: LightmassPrimitiveSettings
    open var CollisionMipLevel: Number
    open var SimpleCollisionMipLevel: Number
    open var CollisionThickness: Number
    open var BodyInstance: BodyInstance
    open var bGenerateOverlapEvents: Boolean
    open var bBakeMaterialPositionOffsetIntoCollision: Boolean
    open var EditorCachedLayerInfos: Array<LandscapeLayerInfoObject>
    open var ReimportHeightmapFilePath: String
    open var ReimportDestinationLayerGuid: Guid
    open var EditorLayerSettings: Array<LandscapeEditorLayerSettings>
    open var ComponentSizeQuads: Number
    open var SubsectionSizeQuads: Number
    open var NumSubsections: Number
    open var bUsedForNavigation: Boolean
    open var bFillCollisionUnderLandscapeForNavmesh: Boolean
    open var bUseDynamicMaterialInstance: Boolean
    open var NavigationGeometryGatheringMode: String /* "Default" | "Instant" | "Lazy" | "ENavDataGatheringMode_MAX" */
    open var MaxPaintedLayersPerComponent: Number
    open var bUseLandscapeForCullingInvisibleHLODVertices: Boolean
    open var bHasLayersContent: Boolean
    open var WeightmapUsageMap: Any
    open fun SetLandscapeMaterialVectorParameterValue(ParameterName: String, Value: LinearColor)
    open fun SetLandscapeMaterialTextureParameterValue(ParameterName: String, Value: Texture)
    open fun SetLandscapeMaterialScalarParameterValue(ParameterName: String, Value: Number)
    open fun LandscapeImportWeightmapFromRenderTarget(InRenderTarget: TextureRenderTarget2D, InLayerName: String): Boolean
    open fun LandscapeImportHeightmapFromRenderTarget(InRenderTarget: TextureRenderTarget2D, InImportHeightFromRGChannel: Boolean): Boolean
    open fun LandscapeExportWeightmapToRenderTarget(InRenderTarget: TextureRenderTarget2D, InLayerName: String): Boolean
    open fun LandscapeExportHeightmapToRenderTarget(InRenderTarget: TextureRenderTarget2D, InExportHeightIntoRGChannel: Boolean, InExportLandscapeProxies: Boolean): Boolean
    open fun EditorSetLandscapeMaterial(NewLandscapeMaterial: MaterialInterface)
    open fun EditorApplySpline(InSplineComponent: SplineComponent, StartWidth: Number, EndWidth: Number, StartSideFalloff: Number, EndSideFalloff: Number, StartRoll: Number, EndRoll: Number, NumSubdivisions: Number, bRaiseHeights: Boolean, bLowerHeights: Boolean, PaintLayer: LandscapeLayerInfoObject, EditLayerName: String)
    open fun ChangeUseTessellationComponentScreenSizeFalloff(InComponentScreenSizeToUseSubSections: Boolean)
    open fun ChangeTessellationComponentScreenSizeFalloff(InUseTessellationComponentScreenSizeFalloff: Number)
    open fun ChangeTessellationComponentScreenSize(InTessellationComponentScreenSize: Number)
    open fun ChangeLODDistanceFactor(InLODDistanceFactor: Number)
    open fun ChangeComponentScreenSizeToUseSubSections(InComponentScreenSizeToUseSubSections: Number)

    companion object {
        fun GetDefaultObject(): LandscapeProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeProxy
        fun C(Other: UObject): LandscapeProxy
        fun C(Other: Any): LandscapeProxy
    }
}

external object ELandscapeBlendMode {
    var LSBM_AdditiveBlend: String /* "LSBM_AdditiveBlend" */
    var LSBM_AlphaBlend: String /* "LSBM_AlphaBlend" */
    var LSBM_MAX: String /* "LSBM_MAX" */
}

external interface `T$642` {
    var OutStreamableAssets: Array<UObject>
}

external open class LandscapeBlueprintBrushBase(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var OwningLandscape: Landscape
    open var AffectHeightmap: Boolean
    open var AffectWeightmap: Boolean
    open var AffectedWeightmapLayers: Array<String>
    open var bIsVisible: Boolean
    open fun RequestLandscapeUpdate()
    open fun Render(InIsHeightmap: Boolean, InCombinedResult: TextureRenderTarget2D, InWeightmapLayerName: String): TextureRenderTarget2D
    open fun Initialize(InLandscapeTransform: Transform, InLandscapeSize: IntPoint, InLandscapeRenderTargetSize: IntPoint)
    open fun GetBlueprintRenderDependencies(OutStreamableAssets: Array<UObject> = definedExternally): `T$642`

    companion object {
        fun GetDefaultObject(): LandscapeBlueprintBrushBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeBlueprintBrushBase
        fun C(Other: UObject): LandscapeBlueprintBrushBase
        fun C(Other: Any): LandscapeBlueprintBrushBase
    }
}

external open class LandscapeLayerBrush {
    open var BlueprintBrush: LandscapeBlueprintBrushBase
    open fun clone(): LandscapeLayerBrush

    companion object {
        fun C(Other: UObject): LandscapeLayerBrush
        fun C(Other: Any): LandscapeLayerBrush
    }
}

external open class LandscapeLayer {
    open var Guid: Guid
    open var Name: String
    open var bVisible: Boolean
    open var bLocked: Boolean
    open var HeightmapAlpha: Number
    open var WeightmapAlpha: Number
    open var BlendMode: String /* "LSBM_AdditiveBlend" | "LSBM_AlphaBlend" | "LSBM_MAX" */
    open var Brushes: Array<LandscapeLayerBrush>
    open var WeightmapLayerAllocationBlend: Any
    open fun clone(): LandscapeLayer

    companion object {
        fun C(Other: UObject): LandscapeLayer
        fun C(Other: Any): LandscapeLayer
    }
}

external open class LandscapeInfoLayerSettings {
    open var LayerInfoObj: LandscapeLayerInfoObject
    open var LayerName: String
    open var ThumbnailMIC: MaterialInstanceConstant
    open var Owner: LandscapeProxy
    open var DebugColorChannel: Number
    open var bValid: Boolean
    open fun clone(): LandscapeInfoLayerSettings

    companion object {
        fun C(Other: UObject): LandscapeInfoLayerSettings
        fun C(Other: Any): LandscapeInfoLayerSettings
    }
}

external open class LandscapeStreamingProxy(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : LandscapeProxy {
    open var LandscapeActor: Any

    companion object {
        fun GetDefaultObject(): LandscapeStreamingProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeStreamingProxy
        fun C(Other: UObject): LandscapeStreamingProxy
        fun C(Other: Any): LandscapeStreamingProxy
    }
}

external object ELandscapeLayerPaintingRestriction {
    var None: String /* "None" */
    var UseMaxLayers: String /* "UseMaxLayers" */
    var ExistingOnly: String /* "ExistingOnly" */
    var UseComponentWhitelist: String /* "UseComponentWhitelist" */
    var ELandscapeLayerPaintingRestriction_MAX: String /* "ELandscapeLayerPaintingRestriction_MAX" */
}

external open class LandscapeInfo : UObject {
    constructor()
    constructor(Outer: UObject)
    open var LandscapeActor: Any
    open var LandscapeGuid: Guid
    open var ComponentSizeQuads: Number
    open var SubsectionSizeQuads: Number
    open var ComponentNumSubsections: Number
    open var DrawScale: Vector
    open var Layers: Array<LandscapeInfoLayerSettings>
    open var Proxies: Array<LandscapeStreamingProxy>
    open fun GetAlphamapDataToMemory(LayerInfo: LandscapeLayerInfoObject, MinX: Number, MinY: Number, MaxX: Number, MaxY: Number)
    open fun GetHeightmapDataToMemory(MinX: Number, MinY: Number, MaxX: Number, MaxY: Number)
    open fun GetLandscapeExtent(MinX: Number = definedExternally, MinY: Number = definedExternally, MaxX: Number = definedExternally, MaxY: Number = definedExternally): `T$547`
    open fun GetLayerInfoByName(LayerName: String, Owner: LandscapeProxy): LandscapeLayerInfoObject
    open fun SetAlphamapDataFromMemory(LayerInfo: LandscapeLayerInfoObject, MinX: Number, MinY: Number, MaxX: Number, MaxY: Number, PaintingRestriction: String /* "None" | "UseMaxLayers" | "ExistingOnly" | "UseComponentWhitelist" | "ELandscapeLayerPaintingRestriction_MAX" */)
    open fun SetHeightmapDataFromMemory(MinX: Number, MinY: Number, MaxX: Number, MaxY: Number)

    companion object {
        fun Load(ResourceName: String): LandscapeInfo
        fun Find(Outer: UObject, ResourceName: String): LandscapeInfo
        fun GetDefaultObject(): LandscapeInfo
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeInfo
        fun C(Other: UObject): LandscapeInfo
        fun C(Other: Any): LandscapeInfo
        fun GetAlphamapDataToMemory(LandscapeInfo: LandscapeInfo, LayerInfo: LandscapeLayerInfoObject, MinX: Number, MinY: Number, MaxX: Number, MaxY: Number)
        fun GetHeightmapDataToMemory(LandscapeInfo: LandscapeInfo, MinX: Number, MinY: Number, MaxX: Number, MaxY: Number)
        fun GetLandscapeExtent(LandscapeInfo: LandscapeInfo, MinX: Number = definedExternally, MinY: Number = definedExternally, MaxX: Number = definedExternally, MaxY: Number = definedExternally): `T$547`
        fun GetLayerInfoByName(LandscapeInfo: LandscapeInfo, LayerName: String, Owner: LandscapeProxy): LandscapeLayerInfoObject
        fun SetAlphamapDataFromMemory(LandscapeInfo: LandscapeInfo, LayerInfo: LandscapeLayerInfoObject, MinX: Number, MinY: Number, MaxX: Number, MaxY: Number, PaintingRestriction: String /* "None" | "UseMaxLayers" | "ExistingOnly" | "UseComponentWhitelist" | "ELandscapeLayerPaintingRestriction_MAX" */)
        fun SetHeightmapDataFromMemory(LandscapeInfo: LandscapeInfo, MinX: Number, MinY: Number, MaxX: Number, MaxY: Number)
    }
}

external open class Landscape(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : LandscapeProxy {
    open var bCanHaveLayersContent: Boolean
    open var LandscapeSplinesTargetLayerGuid: Guid
    open var LandscapeLayers: Array<LandscapeLayer>
    open var HeightmapRTList: Array<TextureRenderTarget2D>
    open var WeightmapRTList: Array<TextureRenderTarget2D>
    open var LandscapeSplinesAffectedComponents: Any
    open var bLandscapeLayersAreInitialized: Boolean
    open var WasCompilingShaders: Boolean
    open var LayerContentUpdateModes: Any
    open var bSplineLayerUpdateRequested: Boolean
    open fun GetLandscapeInfo(bSpawnNewActor: Boolean): LandscapeInfo

    companion object {
        fun GetDefaultObject(): Landscape
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Landscape
        fun C(Other: UObject): Landscape
        fun C(Other: Any): Landscape
        fun GetLandscapeInfo(Landscape: Landscape, bSpawnNewActor: Boolean): LandscapeInfo
    }
}

external open class LandscapeGizmoActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var Width: Number
    open var Height: Number
    open var LengthZ: Number
    open var MarginZ: Number
    open var MinRelativeZ: Number
    open var RelativeScaleZ: Number
    open var TargetLandscapeInfo: LandscapeInfo
    open var SpriteComponent: BillboardComponent

    companion object {
        fun GetDefaultObject(): LandscapeGizmoActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeGizmoActor
        fun C(Other: UObject): LandscapeGizmoActor
        fun C(Other: Any): LandscapeGizmoActor
    }
}

external object ELandscapeGizmoType {
    var LGT_None: String /* "LGT_None" */
    var LGT_Height: String /* "LGT_Height" */
    var LGT_Weight: String /* "LGT_Weight" */
    var LGT_MAX: String /* "LGT_MAX" */
}

external open class LandscapeGizmoActiveActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : LandscapeGizmoActor {
    open var DataType: String /* "LGT_None" | "LGT_Height" | "LGT_Weight" | "LGT_MAX" */
    open var GizmoTexture: Texture2D
    open var TextureScale: Vector2D
    open var SampledHeight: Array<Vector>
    open var SampledNormal: Array<Vector>
    open var SampleSizeX: Number
    open var SampleSizeY: Number
    open var CachedWidth: Number
    open var CachedHeight: Number
    open var CachedScaleXY: Number
    open var FrustumVerts: Vector
    open var GizmoMaterial: Material
    open var GizmoDataMaterial: MaterialInstance
    open var GizmoMeshMaterial: Material
    open var LayerInfos: Array<LandscapeLayerInfoObject>
    open var bSnapToLandscapeGrid: Boolean
    open var UnsnappedRotation: Rotator

    companion object {
        fun GetDefaultObject(): LandscapeGizmoActiveActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeGizmoActiveActor
        fun C(Other: UObject): LandscapeGizmoActiveActor
        fun C(Other: Any): LandscapeGizmoActiveActor
    }
}

external open class LandscapeGizmoRenderComponent : PrimitiveComponent {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LandscapeGizmoRenderComponent
        fun Find(Outer: UObject, ResourceName: String): LandscapeGizmoRenderComponent
        fun GetDefaultObject(): LandscapeGizmoRenderComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeGizmoRenderComponent
        fun C(Other: UObject): LandscapeGizmoRenderComponent
        fun C(Other: Any): LandscapeGizmoRenderComponent
    }
}

external open class LandscapeInfoMap : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LandscapeInfoMap
        fun Find(Outer: UObject, ResourceName: String): LandscapeInfoMap
        fun GetDefaultObject(): LandscapeInfoMap
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeInfoMap
        fun C(Other: UObject): LandscapeInfoMap
        fun C(Other: Any): LandscapeInfoMap
    }
}

external open class LandscapeMaterialTextureStreamingInfo {
    open var TextureName: String
    open var TexelFactor: Number
    open fun clone(): LandscapeMaterialTextureStreamingInfo

    companion object {
        fun C(Other: UObject): LandscapeMaterialTextureStreamingInfo
        fun C(Other: Any): LandscapeMaterialTextureStreamingInfo
    }
}

external open class LandscapeMaterialInstanceConstant : MaterialInstanceConstant {
    constructor()
    constructor(Outer: UObject)
    open var TextureStreamingInfo: Array<LandscapeMaterialTextureStreamingInfo>
    open var bIsLayerThumbnail: Boolean
    open var bDisableTessellation: Boolean
    open var bMobile: Boolean
    open var bEditorToolUsage: Boolean

    companion object {
        fun Load(ResourceName: String): LandscapeMaterialInstanceConstant
        fun Find(Outer: UObject, ResourceName: String): LandscapeMaterialInstanceConstant
        fun GetDefaultObject(): LandscapeMaterialInstanceConstant
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeMaterialInstanceConstant
        fun C(Other: UObject): LandscapeMaterialInstanceConstant
        fun C(Other: Any): LandscapeMaterialInstanceConstant
    }
}

external open class LandscapeMeshCollisionComponent : LandscapeHeightfieldCollisionComponent {
    constructor()
    constructor(Outer: UObject)
    open var MeshGuid: Guid

    companion object {
        fun Load(ResourceName: String): LandscapeMeshCollisionComponent
        fun Find(Outer: UObject, ResourceName: String): LandscapeMeshCollisionComponent
        fun GetDefaultObject(): LandscapeMeshCollisionComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeMeshCollisionComponent
        fun C(Other: UObject): LandscapeMeshCollisionComponent
        fun C(Other: Any): LandscapeMeshCollisionComponent
    }
}

external open class LandscapeMeshProxyComponent : StaticMeshComponent {
    constructor()
    constructor(Outer: UObject)
    open var LandscapeGuid: Guid
    open var ProxyComponentBases: Array<IntPoint>
    open var ProxyLOD: Any

    companion object {
        fun Load(ResourceName: String): LandscapeMeshProxyComponent
        fun Find(Outer: UObject, ResourceName: String): LandscapeMeshProxyComponent
        fun GetDefaultObject(): LandscapeMeshProxyComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeMeshProxyComponent
        fun C(Other: UObject): LandscapeMeshProxyComponent
        fun C(Other: Any): LandscapeMeshProxyComponent
    }
}

external open class LandscapeMeshProxyActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var LandscapeMeshProxyComponent: LandscapeMeshProxyComponent

    companion object {
        fun GetDefaultObject(): LandscapeMeshProxyActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeMeshProxyActor
        fun C(Other: UObject): LandscapeMeshProxyActor
        fun C(Other: Any): LandscapeMeshProxyActor
    }
}

external open class LandscapeSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var MaxNumberOfLayers: Number

    companion object {
        fun Load(ResourceName: String): LandscapeSettings
        fun Find(Outer: UObject, ResourceName: String): LandscapeSettings
        fun GetDefaultObject(): LandscapeSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeSettings
        fun C(Other: UObject): LandscapeSettings
        fun C(Other: Any): LandscapeSettings
    }
}

external open class LandscapeSubsystem : TickableWorldSubsystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LandscapeSubsystem
        fun Find(Outer: UObject, ResourceName: String): LandscapeSubsystem
        fun GetDefaultObject(): LandscapeSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeSubsystem
        fun C(Other: UObject): LandscapeSubsystem
        fun C(Other: Any): LandscapeSubsystem
    }
}

external open class MaterialExpressionCustomOutput : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionCustomOutput
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionCustomOutput
        fun GetDefaultObject(): MaterialExpressionCustomOutput
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionCustomOutput
        fun C(Other: UObject): MaterialExpressionCustomOutput
        fun C(Other: Any): MaterialExpressionCustomOutput
    }
}

external open class GrassInput {
    open var Name: String
    open var GrassType: LandscapeGrassType
    open var Input: ExpressionInput
    open fun clone(): GrassInput

    companion object {
        fun C(Other: UObject): GrassInput
        fun C(Other: Any): GrassInput
    }
}

external open class MaterialExpressionLandscapeGrassOutput : MaterialExpressionCustomOutput {
    constructor()
    constructor(Outer: UObject)
    open var GrassTypes: Array<GrassInput>

    companion object {
        fun Load(ResourceName: String): MaterialExpressionLandscapeGrassOutput
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionLandscapeGrassOutput
        fun GetDefaultObject(): MaterialExpressionLandscapeGrassOutput
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionLandscapeGrassOutput
        fun C(Other: UObject): MaterialExpressionLandscapeGrassOutput
        fun C(Other: Any): MaterialExpressionLandscapeGrassOutput
    }
}

external object ELandscapeLayerBlendType {
    var LB_WeightBlend: String /* "LB_WeightBlend" */
    var LB_AlphaBlend: String /* "LB_AlphaBlend" */
    var LB_HeightBlend: String /* "LB_HeightBlend" */
    var LB_MAX: String /* "LB_MAX" */
}

external open class LayerBlendInput {
    open var LayerName: String
    open var BlendType: String /* "LB_WeightBlend" | "LB_AlphaBlend" | "LB_HeightBlend" | "LB_MAX" */
    open var LayerInput: ExpressionInput
    open var HeightInput: ExpressionInput
    open var PreviewWeight: Number
    open var ConstLayerInput: Vector
    open var ConstHeightInput: Number
    open fun clone(): LayerBlendInput

    companion object {
        fun C(Other: UObject): LayerBlendInput
        fun C(Other: Any): LayerBlendInput
    }
}

external open class MaterialExpressionLandscapeLayerBlend : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Layers: Array<LayerBlendInput>
    open var ExpressionGUID: Guid

    companion object {
        fun Load(ResourceName: String): MaterialExpressionLandscapeLayerBlend
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionLandscapeLayerBlend
        fun GetDefaultObject(): MaterialExpressionLandscapeLayerBlend
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionLandscapeLayerBlend
        fun C(Other: UObject): MaterialExpressionLandscapeLayerBlend
        fun C(Other: Any): MaterialExpressionLandscapeLayerBlend
    }
}

external object ETerrainCoordMappingType {
    var TCMT_Auto: String /* "TCMT_Auto" */
    var TCMT_XY: String /* "TCMT_XY" */
    var TCMT_XZ: String /* "TCMT_XZ" */
    var TCMT_YZ: String /* "TCMT_YZ" */
    var TCMT_MAX: String /* "TCMT_MAX" */
}

external object ELandscapeCustomizedCoordType {
    var LCCT_None: String /* "LCCT_None" */
    var LCCT_CustomUV0: String /* "LCCT_CustomUV0" */
    var LCCT_CustomUV1: String /* "LCCT_CustomUV1" */
    var LCCT_CustomUV2: String /* "LCCT_CustomUV2" */
    var LCCT_WeightMapUV: String /* "LCCT_WeightMapUV" */
    var LCCT_MAX: String /* "LCCT_MAX" */
}

external open class MaterialExpressionLandscapeLayerCoords : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var MappingType: String /* "TCMT_Auto" | "TCMT_XY" | "TCMT_XZ" | "TCMT_YZ" | "TCMT_MAX" */
    open var CustomUVType: String /* "LCCT_None" | "LCCT_CustomUV0" | "LCCT_CustomUV1" | "LCCT_CustomUV2" | "LCCT_WeightMapUV" | "LCCT_MAX" */
    open var MappingScale: Number
    open var MappingRotation: Number
    open var MappingPanU: Number
    open var MappingPanV: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionLandscapeLayerCoords
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionLandscapeLayerCoords
        fun GetDefaultObject(): MaterialExpressionLandscapeLayerCoords
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionLandscapeLayerCoords
        fun C(Other: UObject): MaterialExpressionLandscapeLayerCoords
        fun C(Other: Any): MaterialExpressionLandscapeLayerCoords
    }
}

external open class MaterialExpressionLandscapeLayerSample : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var ParameterName: String
    open var PreviewWeight: Number
    open var ExpressionGUID: Guid

    companion object {
        fun Load(ResourceName: String): MaterialExpressionLandscapeLayerSample
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionLandscapeLayerSample
        fun GetDefaultObject(): MaterialExpressionLandscapeLayerSample
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionLandscapeLayerSample
        fun C(Other: UObject): MaterialExpressionLandscapeLayerSample
        fun C(Other: Any): MaterialExpressionLandscapeLayerSample
    }
}

external open class MaterialExpressionLandscapeLayerSwitch : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var LayerUsed: ExpressionInput
    open var LayerNotUsed: ExpressionInput
    open var ParameterName: String
    open var PreviewUsed: Boolean
    open var ExpressionGUID: Guid

    companion object {
        fun Load(ResourceName: String): MaterialExpressionLandscapeLayerSwitch
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionLandscapeLayerSwitch
        fun GetDefaultObject(): MaterialExpressionLandscapeLayerSwitch
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionLandscapeLayerSwitch
        fun C(Other: UObject): MaterialExpressionLandscapeLayerSwitch
        fun C(Other: Any): MaterialExpressionLandscapeLayerSwitch
    }
}

external open class MaterialExpressionLandscapeLayerWeight : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Base: ExpressionInput
    open var Layer: ExpressionInput
    open var ParameterName: String
    open var PreviewWeight: Number
    open var ConstBase: Vector
    open var ExpressionGUID: Guid

    companion object {
        fun Load(ResourceName: String): MaterialExpressionLandscapeLayerWeight
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionLandscapeLayerWeight
        fun GetDefaultObject(): MaterialExpressionLandscapeLayerWeight
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionLandscapeLayerWeight
        fun C(Other: UObject): MaterialExpressionLandscapeLayerWeight
        fun C(Other: Any): MaterialExpressionLandscapeLayerWeight
    }
}

external open class PhysicalMaterialInput {
    open var PhysicalMaterial: PhysicalMaterial
    open var Input: ExpressionInput
    open fun clone(): PhysicalMaterialInput

    companion object {
        fun C(Other: UObject): PhysicalMaterialInput
        fun C(Other: Any): PhysicalMaterialInput
    }
}

external open class MaterialExpressionLandscapePhysicalMaterialOutput : MaterialExpressionCustomOutput {
    constructor()
    constructor(Outer: UObject)
    open var Inputs: Array<PhysicalMaterialInput>

    companion object {
        fun Load(ResourceName: String): MaterialExpressionLandscapePhysicalMaterialOutput
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionLandscapePhysicalMaterialOutput
        fun GetDefaultObject(): MaterialExpressionLandscapePhysicalMaterialOutput
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionLandscapePhysicalMaterialOutput
        fun C(Other: UObject): MaterialExpressionLandscapePhysicalMaterialOutput
        fun C(Other: Any): MaterialExpressionLandscapePhysicalMaterialOutput
    }
}

external open class MaterialExpressionLandscapeVisibilityMask : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var ExpressionGUID: Guid

    companion object {
        fun Load(ResourceName: String): MaterialExpressionLandscapeVisibilityMask
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionLandscapeVisibilityMask
        fun GetDefaultObject(): MaterialExpressionLandscapeVisibilityMask
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionLandscapeVisibilityMask
        fun C(Other: UObject): MaterialExpressionLandscapeVisibilityMask
        fun C(Other: Any): MaterialExpressionLandscapeVisibilityMask
    }
}

external open class ActorChannel : Channel {
    constructor()
    constructor(Outer: UObject)
    open var Actor: Actor
    open var CreateSubObjects: Array<UObject>

    companion object {
        fun Load(ResourceName: String): ActorChannel
        fun Find(Outer: UObject, ResourceName: String): ActorChannel
        fun GetDefaultObject(): ActorChannel
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorChannel
        fun C(Other: UObject): ActorChannel
        fun C(Other: Any): ActorChannel
    }
}

external object EBlendSpaceAxis {
    var BSA_None: String /* "BSA_None" */
    var BSA_X: String /* "BSA_X" */
    var BSA_Y: String /* "BSA_Y" */
    var BSA_Max: String /* "BSA_Max" */
}

external open class BlendSpace : BlendSpaceBase {
    constructor()
    constructor(Outer: UObject)
    open var AxisToScaleAnimation: String /* "BSA_None" | "BSA_X" | "BSA_Y" | "BSA_Max" */

    companion object {
        fun Load(ResourceName: String): BlendSpace
        fun Find(Outer: UObject, ResourceName: String): BlendSpace
        fun GetDefaultObject(): BlendSpace
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlendSpace
        fun C(Other: UObject): BlendSpace
        fun C(Other: Any): BlendSpace
    }
}

external open class AimOffsetBlendSpace : BlendSpace {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AimOffsetBlendSpace
        fun Find(Outer: UObject, ResourceName: String): AimOffsetBlendSpace
        fun GetDefaultObject(): AimOffsetBlendSpace
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AimOffsetBlendSpace
        fun C(Other: UObject): AimOffsetBlendSpace
        fun C(Other: Any): AimOffsetBlendSpace
    }
}

external open class BlendSpace1D : BlendSpaceBase {
    constructor()
    constructor(Outer: UObject)
    open var bDisplayEditorVertically: Boolean
    open var bScaleAnimation: Boolean

    companion object {
        fun Load(ResourceName: String): BlendSpace1D
        fun Find(Outer: UObject, ResourceName: String): BlendSpace1D
        fun GetDefaultObject(): BlendSpace1D
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlendSpace1D
        fun C(Other: UObject): BlendSpace1D
        fun C(Other: Any): BlendSpace1D
    }
}

external open class AimOffsetBlendSpace1D : BlendSpace1D {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AimOffsetBlendSpace1D
        fun Find(Outer: UObject, ResourceName: String): AimOffsetBlendSpace1D
        fun GetDefaultObject(): AimOffsetBlendSpace1D
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AimOffsetBlendSpace1D
        fun C(Other: UObject): AimOffsetBlendSpace1D
        fun C(Other: Any): AimOffsetBlendSpace1D
    }
}

external open class AmbientSound(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var AudioComponent: AudioComponent
    open fun Stop()
    open fun Play(StartTime: Number)
    open fun FadeOut(FadeOutDuration: Number, FadeVolumeLevel: Number)
    open fun FadeIn(FadeInDuration: Number, FadeVolumeLevel: Number)
    open fun AdjustVolume(AdjustVolumeDuration: Number, AdjustVolumeLevel: Number)

    companion object {
        fun GetDefaultObject(): AmbientSound
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AmbientSound
        fun C(Other: UObject): AmbientSound
        fun C(Other: Any): AmbientSound
    }
}

external open class CustomAttributeSetting {
    open var Name: String
    open var Meaning: String
    open fun clone(): CustomAttributeSetting

    companion object {
        fun C(Other: UObject): CustomAttributeSetting
        fun C(Other: Any): CustomAttributeSetting
    }
}

external object ECustomAttributeBlendType {
    var Override: String /* "Override" */
    var Blend: String /* "Blend" */
    var ECustomAttributeBlendType_MAX: String /* "ECustomAttributeBlendType_MAX" */
}

external open class AnimationSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var CompressCommandletVersion: Number
    open var KeyEndEffectorsMatchNameArray: Array<String>
    open var ForceRecompression: Boolean
    open var bForceBelowThreshold: Boolean
    open var bFirstRecompressUsingCurrentOrDefault: Boolean
    open var bRaiseMaxErrorToExisting: Boolean
    open var bEnablePerformanceLog: Boolean
    open var bStripAnimationDataOnDedicatedServer: Boolean
    open var bTickAnimationOnSkeletalMeshInit: Boolean
    open var BoneCustomAttributesNames: Array<CustomAttributeSetting>
    open var BoneNamesWithCustomAttributes: Array<String>
    open var AttributeBlendModes: Any
    open var DefaultAttributeBlendMode: String /* "Override" | "Blend" | "ECustomAttributeBlendType_MAX" */

    companion object {
        fun Load(ResourceName: String): AnimationSettings
        fun Find(Outer: UObject, ResourceName: String): AnimationSettings
        fun GetDefaultObject(): AnimationSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationSettings
        fun C(Other: UObject): AnimationSettings
        fun C(Other: Any): AnimationSettings
    }
}

external open class BakedStateExitTransition {
    open var CanTakeDelegateIndex: Number
    open var CustomResultNodeIndex: Number
    open var TransitionIndex: Number
    open var bDesiredTransitionReturnValue: Boolean
    open var bAutomaticRemainingTimeRule: Boolean
    open var PoseEvaluatorLinks: Array<Number>
    open fun clone(): BakedStateExitTransition

    companion object {
        fun C(Other: UObject): BakedStateExitTransition
        fun C(Other: Any): BakedStateExitTransition
    }
}

external open class BakedAnimationState {
    open var StateName: String
    open var Transitions: Array<BakedStateExitTransition>
    open var StateRootNodeIndex: Number
    open var StartNotify: Number
    open var EndNotify: Number
    open var FullyBlendedNotify: Number
    open var bIsAConduit: Boolean
    open var EntryRuleNodeIndex: Number
    open var PlayerNodeIndices: Array<Number>
    open var LayerNodeIndices: Array<Number>
    open var bAlwaysResetOnEntry: Boolean
    open fun clone(): BakedAnimationState

    companion object {
        fun C(Other: UObject): BakedAnimationState
        fun C(Other: Any): BakedAnimationState
    }
}

external open class AnimationStateBase {
    open var StateName: String
    open fun clone(): AnimationStateBase

    companion object {
        fun C(Other: UObject): AnimationStateBase
        fun C(Other: Any): AnimationStateBase
    }
}

external open class AnimationTransitionBetweenStates : AnimationStateBase {
    open var PreviousState: Number
    open var NextState: Number
    open var CrossfadeDuration: Number
    open var StartNotify: Number
    open var EndNotify: Number
    open var InterruptNotify: Number
    open var BlendMode: String /* "Linear" | "Cubic" | "HermiteCubic" | "Sinusoidal" | "QuadraticInOut" | "CubicInOut" | "QuarticInOut" | "QuinticInOut" | "CircularIn" | "CircularOut" | "CircularInOut" | "ExpIn" | "ExpOut" | "ExpInOut" | "Custom" | "EAlphaBlendOption_MAX" */
    open var CustomCurve: CurveFloat
    open var BlendProfile: BlendProfile
    open var LogicType: String /* "TLT_StandardBlend" | "TLT_Inertialization" | "TLT_Custom" | "TLT_MAX" */
    override fun clone(): AnimationTransitionBetweenStates

    companion object {
        fun C(Other: UObject): AnimationTransitionBetweenStates
        fun C(Other: Any): AnimationTransitionBetweenStates
    }
}

external open class BakedAnimationStateMachine {
    open var MachineName: String
    open var InitialState: Number
    open var States: Array<BakedAnimationState>
    open var Transitions: Array<AnimationTransitionBetweenStates>
    open fun clone(): BakedAnimationStateMachine

    companion object {
        fun C(Other: UObject): BakedAnimationStateMachine
        fun C(Other: Any): BakedAnimationStateMachine
    }
}

external object EPostCopyOperation {
    var None: String /* "None" */
    var LogicalNegateBool: String /* "LogicalNegateBool" */
    var EPostCopyOperation_MAX: String /* "EPostCopyOperation_MAX" */
}

external open class ExposedValueCopyRecord {
    open var CopyIndex: Number
    open var PostCopyOperation: String /* "None" | "LogicalNegateBool" | "EPostCopyOperation_MAX" */
    open fun clone(): ExposedValueCopyRecord

    companion object {
        fun C(Other: UObject): ExposedValueCopyRecord
        fun C(Other: Any): ExposedValueCopyRecord
    }
}

external open class ExposedValueHandler {
    open var BoundFunction: String
    open var CopyRecords: Array<ExposedValueCopyRecord>
    open var UFunction: UFunction
    open var ValueHandlerNodeProperty: Any
    open fun clone(): ExposedValueHandler

    companion object {
        fun C(Other: UObject): ExposedValueHandler
        fun C(Other: Any): ExposedValueHandler
    }
}

external open class PropertyAccessSegment {
    open var Name: String
    open var struct: Struct
    open var Property: Any
    open var UFunction: UFunction
    open var ArrayIndex: Number
    open var Flags: Any
    open fun clone(): PropertyAccessSegment

    companion object {
        fun C(Other: UObject): PropertyAccessSegment
        fun C(Other: Any): PropertyAccessSegment
    }
}

external open class PropertyAccessPath {
    open var PathSegmentStartIndex: Number
    open var PathSegmentCount: Number
    open var bHasEvents: Boolean
    open fun clone(): PropertyAccessPath

    companion object {
        fun C(Other: UObject): PropertyAccessPath
        fun C(Other: Any): PropertyAccessPath
    }
}

external object EPropertyAccessCopyType {
    var None: String /* "None" */
    var Plain: String /* "Plain" */
    var Complex: String /* "Complex" */
    var Bool: String /* "Bool" */
    var Struct: String /* "Struct" */
    var Object: String /* "Object" */
    var Name: String /* "Name" */
    var Array: String /* "Array" */
    var PromoteBoolToByte: String /* "PromoteBoolToByte" */
    var PromoteBoolToInt32: String /* "PromoteBoolToInt32" */
    var PromoteBoolToInt64: String /* "PromoteBoolToInt64" */
    var PromoteBoolToFloat: String /* "PromoteBoolToFloat" */
    var PromoteByteToInt32: String /* "PromoteByteToInt32" */
    var PromoteByteToInt64: String /* "PromoteByteToInt64" */
    var PromoteByteToFloat: String /* "PromoteByteToFloat" */
    var PromoteInt32ToInt64: String /* "PromoteInt32ToInt64" */
    var PromoteInt32ToFloat: String /* "PromoteInt32ToFloat" */
    var EPropertyAccessCopyType_MAX: String /* "EPropertyAccessCopyType_MAX" */
}

external open class PropertyAccessCopy {
    open var AccessIndex: Number
    open var DestAccessStartIndex: Number
    open var DestAccessEndIndex: Number
    open var Type: String /* "None" | "Plain" | "Complex" | "Bool" | "Struct" | "Object" | "Name" | "Array" | "PromoteBoolToByte" | "PromoteBoolToInt32" | "PromoteBoolToInt64" | "PromoteBoolToFloat" | "PromoteByteToInt32" | "PromoteByteToInt64" | "PromoteByteToFloat" | "PromoteInt32ToInt64" | "PromoteInt32ToFloat" | "EPropertyAccessCopyType_MAX" */
    open fun clone(): PropertyAccessCopy

    companion object {
        fun C(Other: UObject): PropertyAccessCopy
        fun C(Other: Any): PropertyAccessCopy
    }
}

external open class PropertyAccessCopyBatch {
    open var Copies: Array<PropertyAccessCopy>
    open fun clone(): PropertyAccessCopyBatch

    companion object {
        fun C(Other: UObject): PropertyAccessCopyBatch
        fun C(Other: Any): PropertyAccessCopyBatch
    }
}

external open class PropertyAccessIndirectionChain {
    open var Property: Any
    open var IndirectionStartIndex: Number
    open var IndirectionEndIndex: Number
    open var EventId: Number
    open fun clone(): PropertyAccessIndirectionChain

    companion object {
        fun C(Other: UObject): PropertyAccessIndirectionChain
        fun C(Other: Any): PropertyAccessIndirectionChain
    }
}

external object EPropertyAccessObjectType {
    var None: String /* "None" */
    var Object: String /* "Object" */
    var WeakObject: String /* "WeakObject" */
    var SoftObject: String /* "SoftObject" */
    var EPropertyAccessObjectType_MAX: String /* "EPropertyAccessObjectType_MAX" */
}

external object EPropertyAccessIndirectionType {
    var Offset: String /* "Offset" */
    var Object: String /* "Object" */
    var Array: String /* "Array" */
    var ScriptFunction: String /* "ScriptFunction" */
    var NativeFunction: String /* "NativeFunction" */
    var EPropertyAccessIndirectionType_MAX: String /* "EPropertyAccessIndirectionType_MAX" */
}

external open class PropertyAccessIndirection {
    open var ArrayProperty: Any
    open var UFunction: UFunction
    open var ReturnBufferSize: Number
    open var ReturnBufferAlignment: Number
    open var ArrayIndex: Number
    open var Offset: Any
    open var ObjectType: String /* "None" | "Object" | "WeakObject" | "SoftObject" | "EPropertyAccessObjectType_MAX" */
    open var Type: String /* "Offset" | "Object" | "Array" | "ScriptFunction" | "NativeFunction" | "EPropertyAccessIndirectionType_MAX" */
    open fun clone(): PropertyAccessIndirection

    companion object {
        fun C(Other: UObject): PropertyAccessIndirection
        fun C(Other: Any): PropertyAccessIndirection
    }
}

external open class PropertyAccessLibrary {
    open var PathSegments: Array<PropertyAccessSegment>
    open var SrcPaths: Array<PropertyAccessPath>
    open var DestPaths: Array<PropertyAccessPath>
    open var CopyBatches: PropertyAccessCopyBatch
    open var SrcAccesses: Array<PropertyAccessIndirectionChain>
    open var DestAccesses: Array<PropertyAccessIndirectionChain>
    open var Indirections: Array<PropertyAccessIndirection>
    open var EventAccessIndices: Array<Number>
    open fun clone(): PropertyAccessLibrary

    companion object {
        fun C(Other: UObject): PropertyAccessLibrary
        fun C(Other: Any): PropertyAccessLibrary
    }
}

external open class AnimBlueprintGeneratedClass : BlueprintGeneratedClass {
    constructor()
    constructor(Outer: UObject)
    open var BakedStateMachines: Array<BakedAnimationStateMachine>
    open var TargetSkeleton: Skeleton
    open var AnimNotifies: Array<AnimNotifyEvent>
    open var OrderedSavedPoseIndicesMap: Any
    open var SyncGroupNames: Array<String>
    open var EvaluateGraphExposedInputs: Array<ExposedValueHandler>
    open var GraphAssetPlayerInformation: Any
    open var GraphBlendOptions: Any
    open var PropertyAccessLibrary: PropertyAccessLibrary

    companion object {
        fun Load(ResourceName: String): AnimBlueprintGeneratedClass
        fun Find(Outer: UObject, ResourceName: String): AnimBlueprintGeneratedClass
        fun GetDefaultObject(): AnimBlueprintGeneratedClass
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimBlueprintGeneratedClass
        fun C(Other: UObject): AnimBlueprintGeneratedClass
        fun C(Other: Any): AnimBlueprintGeneratedClass
    }
}

external open class AnimBlueprintFunction {
    open var Name: String
    open var Group: String
    open var OutputPoseNodeIndex: Number
    open var InputPoseNames: Array<String>
    open var InputPoseNodeIndices: Array<Number>
    open var bImplemented: Boolean
    open fun clone(): AnimBlueprintFunction

    companion object {
        fun C(Other: UObject): AnimBlueprintFunction
        fun C(Other: Any): AnimBlueprintFunction
    }
}

external open class AnimBlueprintFunctionData {
    open var OutputPoseNodeProperty: Any
    open var InputPoseNodeProperties: Array<Any>
    open var InputProperties: Array<Any>
    open fun clone(): AnimBlueprintFunctionData

    companion object {
        fun C(Other: UObject): AnimBlueprintFunctionData
        fun C(Other: Any): AnimBlueprintFunctionData
    }
}

external open class AnimClassData : UObject {
    constructor()
    constructor(Outer: UObject)
    open var BakedStateMachines: Array<BakedAnimationStateMachine>
    open var TargetSkeleton: Skeleton
    open var AnimNotifies: Array<AnimNotifyEvent>
    open var OrderedSavedPoseIndicesMap: Any
    open var AnimBlueprintFunctions: Array<AnimBlueprintFunction>
    open var AnimBlueprintFunctionData: Array<AnimBlueprintFunctionData>
    open var AnimNodeProperties: Array<Any>
    open var LinkedAnimGraphNodeProperties: Array<Any>
    open var LinkedAnimLayerNodeProperties: Array<Any>
    open var PreUpdateNodeProperties: Array<Any>
    open var DynamicResetNodeProperties: Array<Any>
    open var StateMachineNodeProperties: Array<Any>
    open var InitializationNodeProperties: Array<Any>
    open var GraphNameAssetPlayers: Any
    open var SyncGroupNames: Array<String>
    open var EvaluateGraphExposedInputs: Array<ExposedValueHandler>
    open var GraphBlendOptions: Any
    open var PropertyAccessLibrary: PropertyAccessLibrary

    companion object {
        fun Load(ResourceName: String): AnimClassData
        fun Find(Outer: UObject, ResourceName: String): AnimClassData
        fun GetDefaultObject(): AnimClassData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimClassData
        fun C(Other: UObject): AnimClassData
        fun C(Other: Any): AnimClassData
    }
}

external open class AnimClassInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimClassInterface
        fun Find(Outer: UObject, ResourceName: String): AnimClassInterface
        fun GetDefaultObject(): AnimClassInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimClassInterface
        fun C(Other: UObject): AnimClassInterface
        fun C(Other: Any): AnimClassInterface
    }
}

external open class AnimComposite : AnimCompositeBase {
    constructor()
    constructor(Outer: UObject)
    open var AnimationTrack: AnimTrack
    open var PreviewBasePose: AnimSequence

    companion object {
        fun Load(ResourceName: String): AnimComposite
        fun Find(Outer: UObject, ResourceName: String): AnimComposite
        fun GetDefaultObject(): AnimComposite
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimComposite
        fun C(Other: UObject): AnimComposite
        fun C(Other: Any): AnimComposite
    }
}

external open class AnimCompress_BitwiseCompressOnly : AnimCompress {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimCompress_BitwiseCompressOnly
        fun Find(Outer: UObject, ResourceName: String): AnimCompress_BitwiseCompressOnly
        fun GetDefaultObject(): AnimCompress_BitwiseCompressOnly
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimCompress_BitwiseCompressOnly
        fun C(Other: UObject): AnimCompress_BitwiseCompressOnly
        fun C(Other: Any): AnimCompress_BitwiseCompressOnly
    }
}

external open class AnimCompress_LeastDestructive : AnimCompress_BitwiseCompressOnly {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimCompress_LeastDestructive
        fun Find(Outer: UObject, ResourceName: String): AnimCompress_LeastDestructive
        fun GetDefaultObject(): AnimCompress_LeastDestructive
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimCompress_LeastDestructive
        fun C(Other: UObject): AnimCompress_LeastDestructive
        fun C(Other: Any): AnimCompress_LeastDestructive
    }
}

external open class AnimCompress_RemoveLinearKeys : AnimCompress {
    constructor()
    constructor(Outer: UObject)
    open var MaxPosDiff: Number
    open var MaxAngleDiff: Number
    open var MaxScaleDiff: Number
    open var MaxEffectorDiff: Number
    open var MinEffectorDiff: Number
    open var EffectorDiffSocket: Number
    open var ParentKeyScale: Number
    open var bRetarget: Boolean
    open var bActuallyFilterLinearKeys: Boolean

    companion object {
        fun Load(ResourceName: String): AnimCompress_RemoveLinearKeys
        fun Find(Outer: UObject, ResourceName: String): AnimCompress_RemoveLinearKeys
        fun GetDefaultObject(): AnimCompress_RemoveLinearKeys
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimCompress_RemoveLinearKeys
        fun C(Other: UObject): AnimCompress_RemoveLinearKeys
        fun C(Other: Any): AnimCompress_RemoveLinearKeys
    }
}

external open class AnimCompress_PerTrackCompression : AnimCompress_RemoveLinearKeys {
    constructor()
    constructor(Outer: UObject)
    open var MaxZeroingThreshold: Number
    open var MaxPosDiffBitwise: Number
    open var MaxAngleDiffBitwise: Number
    open var MaxScaleDiffBitwise: Number
    open var AllowedRotationFormats: Array<String /* "ACF_None" | "ACF_Float96NoW" | "ACF_Fixed48NoW" | "ACF_IntervalFixed32NoW" | "ACF_Fixed32NoW" | "ACF_Float32NoW" | "ACF_Identity" | "ACF_MAX" */>
    open var AllowedTranslationFormats: Array<String /* "ACF_None" | "ACF_Float96NoW" | "ACF_Fixed48NoW" | "ACF_IntervalFixed32NoW" | "ACF_Fixed32NoW" | "ACF_Float32NoW" | "ACF_Identity" | "ACF_MAX" */>
    open var AllowedScaleFormats: Array<String /* "ACF_None" | "ACF_Float96NoW" | "ACF_Fixed48NoW" | "ACF_IntervalFixed32NoW" | "ACF_Fixed32NoW" | "ACF_Float32NoW" | "ACF_Identity" | "ACF_MAX" */>
    open var bResampleAnimation: Boolean
    open var ResampledFramerate: Number
    open var MinKeysForResampling: Number
    open var bUseAdaptiveError: Boolean
    open var bUseOverrideForEndEffectors: Boolean
    open var TrackHeightBias: Number
    open var ParentingDivisor: Number
    open var ParentingDivisorExponent: Number
    open var bUseAdaptiveError2: Boolean
    open var RotationErrorSourceRatio: Number
    open var TranslationErrorSourceRatio: Number
    open var ScaleErrorSourceRatio: Number
    open var MaxErrorPerTrackRatio: Number
    open var PerturbationProbeSize: Number

    companion object {
        fun Load(ResourceName: String): AnimCompress_PerTrackCompression
        fun Find(Outer: UObject, ResourceName: String): AnimCompress_PerTrackCompression
        fun GetDefaultObject(): AnimCompress_PerTrackCompression
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimCompress_PerTrackCompression
        fun C(Other: UObject): AnimCompress_PerTrackCompression
        fun C(Other: Any): AnimCompress_PerTrackCompression
    }
}

external open class AnimCompress_RemoveEverySecondKey : AnimCompress {
    constructor()
    constructor(Outer: UObject)
    open var MinKeys: Number
    open var bStartAtSecondKey: Boolean

    companion object {
        fun Load(ResourceName: String): AnimCompress_RemoveEverySecondKey
        fun Find(Outer: UObject, ResourceName: String): AnimCompress_RemoveEverySecondKey
        fun GetDefaultObject(): AnimCompress_RemoveEverySecondKey
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimCompress_RemoveEverySecondKey
        fun C(Other: UObject): AnimCompress_RemoveEverySecondKey
        fun C(Other: Any): AnimCompress_RemoveEverySecondKey
    }
}

external open class AnimCompress_RemoveTrivialKeys : AnimCompress {
    constructor()
    constructor(Outer: UObject)
    open var MaxPosDiff: Number
    open var MaxAngleDiff: Number
    open var MaxScaleDiff: Number

    companion object {
        fun Load(ResourceName: String): AnimCompress_RemoveTrivialKeys
        fun Find(Outer: UObject, ResourceName: String): AnimCompress_RemoveTrivialKeys
        fun GetDefaultObject(): AnimCompress_RemoveTrivialKeys
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimCompress_RemoveTrivialKeys
        fun C(Other: UObject): AnimCompress_RemoveTrivialKeys
        fun C(Other: Any): AnimCompress_RemoveTrivialKeys
    }
}

external open class AnimCurveCompressionCodec_CompressedRichCurve : AnimCurveCompressionCodec {
    constructor()
    constructor(Outer: UObject)
    open var MaxCurveError: Number
    open var UseAnimSequenceSampleRate: Boolean
    open var ErrorSampleRate: Number

    companion object {
        fun Load(ResourceName: String): AnimCurveCompressionCodec_CompressedRichCurve
        fun Find(Outer: UObject, ResourceName: String): AnimCurveCompressionCodec_CompressedRichCurve
        fun GetDefaultObject(): AnimCurveCompressionCodec_CompressedRichCurve
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimCurveCompressionCodec_CompressedRichCurve
        fun C(Other: UObject): AnimCurveCompressionCodec_CompressedRichCurve
        fun C(Other: Any): AnimCurveCompressionCodec_CompressedRichCurve
    }
}

external open class AnimCurveCompressionCodec_UniformIndexable : AnimCurveCompressionCodec {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimCurveCompressionCodec_UniformIndexable
        fun Find(Outer: UObject, ResourceName: String): AnimCurveCompressionCodec_UniformIndexable
        fun GetDefaultObject(): AnimCurveCompressionCodec_UniformIndexable
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimCurveCompressionCodec_UniformIndexable
        fun C(Other: UObject): AnimCurveCompressionCodec_UniformIndexable
        fun C(Other: Any): AnimCurveCompressionCodec_UniformIndexable
    }
}

external open class AnimCurveCompressionCodec_UniformlySampled : AnimCurveCompressionCodec {
    constructor()
    constructor(Outer: UObject)
    open var UseAnimSequenceSampleRate: Boolean
    open var SampleRate: Number

    companion object {
        fun Load(ResourceName: String): AnimCurveCompressionCodec_UniformlySampled
        fun Find(Outer: UObject, ResourceName: String): AnimCurveCompressionCodec_UniformlySampled
        fun GetDefaultObject(): AnimCurveCompressionCodec_UniformlySampled
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimCurveCompressionCodec_UniformlySampled
        fun C(Other: UObject): AnimCurveCompressionCodec_UniformlySampled
        fun C(Other: Any): AnimCurveCompressionCodec_UniformlySampled
    }
}

external open class AnimNotify_PauseClothingSimulation : AnimNotify {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimNotify_PauseClothingSimulation
        fun Find(Outer: UObject, ResourceName: String): AnimNotify_PauseClothingSimulation
        fun GetDefaultObject(): AnimNotify_PauseClothingSimulation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimNotify_PauseClothingSimulation
        fun C(Other: UObject): AnimNotify_PauseClothingSimulation
        fun C(Other: Any): AnimNotify_PauseClothingSimulation
    }
}

external open class AnimNotify_PlayParticleEffect : AnimNotify {
    constructor()
    constructor(Outer: UObject)
    open var PSTemplate: ParticleSystem
    open var LocationOffset: Vector
    open var RotationOffset: Rotator
    open var Scale: Vector
    open var Attached: Boolean
    open var SocketName: String

    companion object {
        fun Load(ResourceName: String): AnimNotify_PlayParticleEffect
        fun Find(Outer: UObject, ResourceName: String): AnimNotify_PlayParticleEffect
        fun GetDefaultObject(): AnimNotify_PlayParticleEffect
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimNotify_PlayParticleEffect
        fun C(Other: UObject): AnimNotify_PlayParticleEffect
        fun C(Other: Any): AnimNotify_PlayParticleEffect
    }
}

external open class AnimNotify_PlaySound : AnimNotify {
    constructor()
    constructor(Outer: UObject)
    open var Sound: SoundBase
    open var VolumeMultiplier: Number
    open var PitchMultiplier: Number
    open var bFollow: Boolean
    open var bPreviewIgnoreAttenuation: Boolean
    open var AttachName: String

    companion object {
        fun Load(ResourceName: String): AnimNotify_PlaySound
        fun Find(Outer: UObject, ResourceName: String): AnimNotify_PlaySound
        fun GetDefaultObject(): AnimNotify_PlaySound
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimNotify_PlaySound
        fun C(Other: UObject): AnimNotify_PlaySound
        fun C(Other: Any): AnimNotify_PlaySound
    }
}

external open class AnimNotify_ResetClothingSimulation : AnimNotify {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimNotify_ResetClothingSimulation
        fun Find(Outer: UObject, ResourceName: String): AnimNotify_ResetClothingSimulation
        fun GetDefaultObject(): AnimNotify_ResetClothingSimulation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimNotify_ResetClothingSimulation
        fun C(Other: UObject): AnimNotify_ResetClothingSimulation
        fun C(Other: Any): AnimNotify_ResetClothingSimulation
    }
}

external open class AnimNotify_ResetDynamics : AnimNotify {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimNotify_ResetDynamics
        fun Find(Outer: UObject, ResourceName: String): AnimNotify_ResetDynamics
        fun GetDefaultObject(): AnimNotify_ResetDynamics
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimNotify_ResetDynamics
        fun C(Other: UObject): AnimNotify_ResetDynamics
        fun C(Other: Any): AnimNotify_ResetDynamics
    }
}

external open class AnimNotify_ResumeClothingSimulation : AnimNotify {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimNotify_ResumeClothingSimulation
        fun Find(Outer: UObject, ResourceName: String): AnimNotify_ResumeClothingSimulation
        fun GetDefaultObject(): AnimNotify_ResumeClothingSimulation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimNotify_ResumeClothingSimulation
        fun C(Other: UObject): AnimNotify_ResumeClothingSimulation
        fun C(Other: Any): AnimNotify_ResumeClothingSimulation
    }
}

external open class AnimNotifyState_DisableRootMotion : AnimNotifyState {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimNotifyState_DisableRootMotion
        fun Find(Outer: UObject, ResourceName: String): AnimNotifyState_DisableRootMotion
        fun GetDefaultObject(): AnimNotifyState_DisableRootMotion
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimNotifyState_DisableRootMotion
        fun C(Other: UObject): AnimNotifyState_DisableRootMotion
        fun C(Other: Any): AnimNotifyState_DisableRootMotion
    }
}

external open class AnimNotifyState_TimedParticleEffect : AnimNotifyState {
    constructor()
    constructor(Outer: UObject)
    open var PSTemplate: ParticleSystem
    open var SocketName: String
    open var LocationOffset: Vector
    open var RotationOffset: Rotator
    open var bDestroyAtEnd: Boolean
    open var PreviousPSTemplates: Array<ParticleSystem>
    open var PreviousSocketNames: Array<String>

    companion object {
        fun Load(ResourceName: String): AnimNotifyState_TimedParticleEffect
        fun Find(Outer: UObject, ResourceName: String): AnimNotifyState_TimedParticleEffect
        fun GetDefaultObject(): AnimNotifyState_TimedParticleEffect
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimNotifyState_TimedParticleEffect
        fun C(Other: UObject): AnimNotifyState_TimedParticleEffect
        fun C(Other: Any): AnimNotifyState_TimedParticleEffect
    }
}

external open class AnimNotifyState_Trail : AnimNotifyState {
    constructor()
    constructor(Outer: UObject)
    open var PSTemplate: ParticleSystem
    open var FirstSocketName: String
    open var SecondSocketName: String
    open var WidthScaleMode: String /* "ETrailWidthMode_FromCentre" | "ETrailWidthMode_FromFirst" | "ETrailWidthMode_FromSecond" | "ETrailWidthMode_MAX" */
    open var WidthScaleCurve: String
    open var bRecycleSpawnedSystems: Boolean
    open var bRenderGeometry: Boolean
    open var bRenderSpawnPoints: Boolean
    open var bRenderTangents: Boolean
    open var bRenderTessellation: Boolean
    open fun OverridePSTemplate(MeshComp: SkeletalMeshComponent, Animation: AnimSequenceBase): ParticleSystem

    companion object {
        fun Load(ResourceName: String): AnimNotifyState_Trail
        fun Find(Outer: UObject, ResourceName: String): AnimNotifyState_Trail
        fun GetDefaultObject(): AnimNotifyState_Trail
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimNotifyState_Trail
        fun C(Other: UObject): AnimNotifyState_Trail
        fun C(Other: Any): AnimNotifyState_Trail
    }
}

external open class AnimSetMeshLinkup {
    open var BoneToTrackTable: Array<Number>
    open fun clone(): AnimSetMeshLinkup

    companion object {
        fun C(Other: UObject): AnimSetMeshLinkup
        fun C(Other: Any): AnimSetMeshLinkup
    }
}

external open class AnimSet : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bAnimRotationOnly: Boolean
    open var TrackBoneNames: Array<String>
    open var Sequences: Array<AnimSequence>
    open var LinkupCache: Array<AnimSetMeshLinkup>
    open var BoneUseAnimTranslation: Array<Number>
    open var ForceUseMeshTranslation: Array<Number>
    open var UseTranslationBoneNames: Array<String>
    open var ForceMeshTranslationBoneNames: Array<String>
    open var PreviewSkelMeshName: String
    open var BestRatioSkelMeshName: String

    companion object {
        fun Load(ResourceName: String): AnimSet
        fun Find(Outer: UObject, ResourceName: String): AnimSet
        fun GetDefaultObject(): AnimSet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimSet
        fun C(Other: UObject): AnimSet
        fun C(Other: Any): AnimSet
    }
}

external open class AnimStateMachineTypes : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimStateMachineTypes
        fun Find(Outer: UObject, ResourceName: String): AnimStateMachineTypes
        fun GetDefaultObject(): AnimStateMachineTypes
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimStateMachineTypes
        fun C(Other: UObject): AnimStateMachineTypes
        fun C(Other: Any): AnimStateMachineTypes
    }
}

external open class RawAnimSequenceTrack {
    open var PosKeys: Array<Vector>
    open var RotKeys: Array<Quat>
    open var ScaleKeys: Array<Vector>
    open fun clone(): RawAnimSequenceTrack

    companion object {
        fun C(Other: UObject): RawAnimSequenceTrack
        fun C(Other: Any): RawAnimSequenceTrack
    }
}

external open class AnimStreamable : AnimSequenceBase {
    constructor()
    constructor(Outer: UObject)
    open var NumFrames: Number
    open var Interpolation: String /* "Linear" | "Step" | "EAnimInterpolationType_MAX" */
    open var RetargetSource: String
    open var SourceSequence: AnimSequence
    open var RawDataGuid: Guid
    open var RawAnimationData: Array<RawAnimSequenceTrack>
    open var TrackToSkeletonMapTable: Array<TrackToSkeletonMap>
    open var AnimationTrackNames: Array<String>
    open var BoneCompressionSettings: AnimBoneCompressionSettings
    open var CurveCompressionSettings: AnimCurveCompressionSettings
    open var bEnableRootMotion: Boolean
    open var RootMotionRootLock: String /* "RefPose" | "AnimFirstFrame" | "Zero" | "ERootMotionRootLock_MAX" */
    open var bForceRootLock: Boolean
    open var bUseNormalizedRootMotionScale: Boolean

    companion object {
        fun Load(ResourceName: String): AnimStreamable
        fun Find(Outer: UObject, ResourceName: String): AnimStreamable
        fun GetDefaultObject(): AnimStreamable
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimStreamable
        fun C(Other: UObject): AnimStreamable
        fun C(Other: Any): AnimStreamable
    }
}

external object ETemperatureSeverityType {
    var Unknown: String /* "Unknown" */
    var Good: String /* "Good" */
    var Bad: String /* "Bad" */
    var Serious: String /* "Serious" */
    var Critical: String /* "Critical" */
    var NumSeverities: String /* "NumSeverities" */
    var ETemperatureSeverityType_MAX: String /* "ETemperatureSeverityType_MAX" */
}

external open class ApplicationLifecycleComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var ApplicationWillDeactivateDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var ApplicationHasReactivatedDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var ApplicationWillEnterBackgroundDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var ApplicationHasEnteredForegroundDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var ApplicationWillTerminateDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var ApplicationShouldUnloadResourcesDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var ApplicationReceivedStartupArgumentsDelegate: UnrealEngineMulticastDelegate<(StartupArguments: Array<String>) -> Unit>
    open var OnTemperatureChangeDelegate: UnrealEngineMulticastDelegate<(Severity: String /* "Unknown" | "Good" | "Bad" | "Serious" | "Critical" | "NumSeverities" | "ETemperatureSeverityType_MAX" */) -> Unit>
    open var OnLowPowerModeDelegate: UnrealEngineMulticastDelegate<(bInLowPowerMode: Boolean) -> Unit>

    companion object {
        fun Load(ResourceName: String): ApplicationLifecycleComponent
        fun Find(Outer: UObject, ResourceName: String): ApplicationLifecycleComponent
        fun GetDefaultObject(): ApplicationLifecycleComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ApplicationLifecycleComponent
        fun C(Other: UObject): ApplicationLifecycleComponent
        fun C(Other: Any): ApplicationLifecycleComponent
    }
}

external object EPrimaryAssetCookRule {
    var Unknown: String /* "Unknown" */
    var NeverCook: String /* "NeverCook" */
    var DevelopmentCook: String /* "DevelopmentCook" */
    var DevelopmentAlwaysCook: String /* "DevelopmentAlwaysCook" */
    var AlwaysCook: String /* "AlwaysCook" */
    var EPrimaryAssetCookRule_MAX: String /* "EPrimaryAssetCookRule_MAX" */
}

external open class PrimaryAssetRules {
    open var Priority: Number
    open var ChunkID: Number
    open var bApplyRecursively: Boolean
    open var CookRule: String /* "Unknown" | "NeverCook" | "DevelopmentCook" | "DevelopmentAlwaysCook" | "AlwaysCook" | "EPrimaryAssetCookRule_MAX" */
    open fun clone(): PrimaryAssetRules

    companion object {
        fun C(Other: UObject): PrimaryAssetRules
        fun C(Other: Any): PrimaryAssetRules
    }
}

external open class PrimaryAssetTypeInfo {
    open var PrimaryAssetType: String
    open var AssetBaseClass: Class
    open var AssetBaseClassLoaded: UnrealEngineClass
    open var bHasBlueprintClasses: Boolean
    open var bIsEditorOnly: Boolean
    open var Directories: Array<DirectoryPath>
    open var SpecificAssets: Array<SoftObjectPath>
    open var Rules: PrimaryAssetRules
    open var AssetScanPaths: Array<String>
    open var bIsDynamicAsset: Boolean
    open var NumberOfAssets: Number
    open fun clone(): PrimaryAssetTypeInfo

    companion object {
        fun C(Other: UObject): PrimaryAssetTypeInfo
        fun C(Other: Any): PrimaryAssetTypeInfo
    }
}

external open class PrimaryAssetRulesOverride {
    open var PrimaryAssetId: PrimaryAssetId
    open var Rules: PrimaryAssetRules
    open fun clone(): PrimaryAssetRulesOverride

    companion object {
        fun C(Other: UObject): PrimaryAssetRulesOverride
        fun C(Other: Any): PrimaryAssetRulesOverride
    }
}

external open class PrimaryAssetRulesCustomOverride {
    open var PrimaryAssetType: PrimaryAssetType
    open var FilterDirectory: DirectoryPath
    open var FilterString: String
    open var Rules: PrimaryAssetRules
    open fun clone(): PrimaryAssetRulesCustomOverride

    companion object {
        fun C(Other: UObject): PrimaryAssetRulesCustomOverride
        fun C(Other: Any): PrimaryAssetRulesCustomOverride
    }
}

external open class AssetManagerRedirect {
    open var Old: String
    open var New: String
    open fun clone(): AssetManagerRedirect

    companion object {
        fun C(Other: UObject): AssetManagerRedirect
        fun C(Other: Any): AssetManagerRedirect
    }
}

external open class AssetManagerSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var PrimaryAssetTypesToScan: Array<PrimaryAssetTypeInfo>
    open var DirectoriesToExclude: Array<DirectoryPath>
    open var PrimaryAssetRules: Array<PrimaryAssetRulesOverride>
    open var CustomPrimaryAssetRules: Array<PrimaryAssetRulesCustomOverride>
    open var bOnlyCookProductionAssets: Boolean
    open var bShouldManagerDetermineTypeAndName: Boolean
    open var bShouldGuessTypeAndNameInEditor: Boolean
    open var bShouldAcquireMissingChunksOnLoad: Boolean
    open var PrimaryAssetIdRedirects: Array<AssetManagerRedirect>
    open var PrimaryAssetTypeRedirects: Array<AssetManagerRedirect>
    open var AssetPathRedirects: Array<AssetManagerRedirect>
    open var MetaDataTagsForAssetRegistry: Any

    companion object {
        fun Load(ResourceName: String): AssetManagerSettings
        fun Find(Outer: UObject, ResourceName: String): AssetManagerSettings
        fun GetDefaultObject(): AssetManagerSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AssetManagerSettings
        fun C(Other: UObject): AssetManagerSettings
        fun C(Other: Any): AssetManagerSettings
    }
}

external open class AsyncActionHandleSaveGame : BlueprintAsyncActionBase {
    constructor()
    constructor(Outer: UObject)
    open var Completed: UnrealEngineMulticastDelegate<(SaveGame: SaveGame, bSuccess: Boolean) -> Unit>
    open var SaveGameObject: SaveGame

    companion object {
        fun Load(ResourceName: String): AsyncActionHandleSaveGame
        fun Find(Outer: UObject, ResourceName: String): AsyncActionHandleSaveGame
        fun GetDefaultObject(): AsyncActionHandleSaveGame
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AsyncActionHandleSaveGame
        fun AsyncSaveGameToSlot(WorldContextObject: UObject, SaveGameObject: SaveGame, SlotName: String, UserIndex: Number): AsyncActionHandleSaveGame
        fun AsyncLoadGameFromSlot(WorldContextObject: UObject, SlotName: String, UserIndex: Number): AsyncActionHandleSaveGame
        fun C(Other: UObject): AsyncActionHandleSaveGame
        fun C(Other: Any): AsyncActionHandleSaveGame
    }
}

external open class AsyncActionLoadPrimaryAssetBase : BlueprintAsyncActionBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AsyncActionLoadPrimaryAssetBase
        fun Find(Outer: UObject, ResourceName: String): AsyncActionLoadPrimaryAssetBase
        fun GetDefaultObject(): AsyncActionLoadPrimaryAssetBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AsyncActionLoadPrimaryAssetBase
        fun C(Other: UObject): AsyncActionLoadPrimaryAssetBase
        fun C(Other: Any): AsyncActionLoadPrimaryAssetBase
    }
}

external open class AsyncActionLoadPrimaryAsset : AsyncActionLoadPrimaryAssetBase {
    constructor()
    constructor(Outer: UObject)
    open var Completed: UnrealEngineMulticastDelegate<(Loaded: UObject) -> Unit>

    companion object {
        fun Load(ResourceName: String): AsyncActionLoadPrimaryAsset
        fun Find(Outer: UObject, ResourceName: String): AsyncActionLoadPrimaryAsset
        fun GetDefaultObject(): AsyncActionLoadPrimaryAsset
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AsyncActionLoadPrimaryAsset
        fun AsyncLoadPrimaryAsset(WorldContextObject: UObject, PrimaryAsset: PrimaryAssetId, LoadBundles: Array<String>): AsyncActionLoadPrimaryAsset
        fun C(Other: UObject): AsyncActionLoadPrimaryAsset
        fun C(Other: Any): AsyncActionLoadPrimaryAsset
    }
}

external open class AsyncActionLoadPrimaryAssetClass : AsyncActionLoadPrimaryAssetBase {
    constructor()
    constructor(Outer: UObject)
    open var Completed: UnrealEngineMulticastDelegate<(Loaded: UnrealEngineClass) -> Unit>

    companion object {
        fun Load(ResourceName: String): AsyncActionLoadPrimaryAssetClass
        fun Find(Outer: UObject, ResourceName: String): AsyncActionLoadPrimaryAssetClass
        fun GetDefaultObject(): AsyncActionLoadPrimaryAssetClass
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AsyncActionLoadPrimaryAssetClass
        fun AsyncLoadPrimaryAssetClass(WorldContextObject: UObject, PrimaryAsset: PrimaryAssetId, LoadBundles: Array<String>): AsyncActionLoadPrimaryAssetClass
        fun C(Other: UObject): AsyncActionLoadPrimaryAssetClass
        fun C(Other: Any): AsyncActionLoadPrimaryAssetClass
    }
}

external open class AsyncActionLoadPrimaryAssetList : AsyncActionLoadPrimaryAssetBase {
    constructor()
    constructor(Outer: UObject)
    open var Completed: UnrealEngineMulticastDelegate<(Loaded: Array<UObject>) -> Unit>

    companion object {
        fun Load(ResourceName: String): AsyncActionLoadPrimaryAssetList
        fun Find(Outer: UObject, ResourceName: String): AsyncActionLoadPrimaryAssetList
        fun GetDefaultObject(): AsyncActionLoadPrimaryAssetList
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AsyncActionLoadPrimaryAssetList
        fun AsyncLoadPrimaryAssetList(WorldContextObject: UObject, PrimaryAssetList: Array<PrimaryAssetId>, LoadBundles: Array<String>): AsyncActionLoadPrimaryAssetList
        fun C(Other: UObject): AsyncActionLoadPrimaryAssetList
        fun C(Other: Any): AsyncActionLoadPrimaryAssetList
    }
}

external open class AsyncActionLoadPrimaryAssetClassList : AsyncActionLoadPrimaryAssetBase {
    constructor()
    constructor(Outer: UObject)
    open var Completed: UnrealEngineMulticastDelegate<(Loaded: Array<UnrealEngineClass>) -> Unit>

    companion object {
        fun Load(ResourceName: String): AsyncActionLoadPrimaryAssetClassList
        fun Find(Outer: UObject, ResourceName: String): AsyncActionLoadPrimaryAssetClassList
        fun GetDefaultObject(): AsyncActionLoadPrimaryAssetClassList
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AsyncActionLoadPrimaryAssetClassList
        fun AsyncLoadPrimaryAssetClassList(WorldContextObject: UObject, PrimaryAssetList: Array<PrimaryAssetId>, LoadBundles: Array<String>): AsyncActionLoadPrimaryAssetClassList
        fun C(Other: UObject): AsyncActionLoadPrimaryAssetClassList
        fun C(Other: Any): AsyncActionLoadPrimaryAssetClassList
    }
}

external open class AsyncActionChangePrimaryAssetBundles : AsyncActionLoadPrimaryAssetBase {
    constructor()
    constructor(Outer: UObject)
    open var Completed: UnrealEngineMulticastDelegate<() -> Unit>

    companion object {
        fun Load(ResourceName: String): AsyncActionChangePrimaryAssetBundles
        fun Find(Outer: UObject, ResourceName: String): AsyncActionChangePrimaryAssetBundles
        fun GetDefaultObject(): AsyncActionChangePrimaryAssetBundles
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AsyncActionChangePrimaryAssetBundles
        fun AsyncChangeBundleStateForPrimaryAssetList(WorldContextObject: UObject, PrimaryAssetList: Array<PrimaryAssetId>, AddBundles: Array<String>, RemoveBundles: Array<String>): AsyncActionChangePrimaryAssetBundles
        fun AsyncChangeBundleStateForMatchingPrimaryAssets(WorldContextObject: UObject, NewBundles: Array<String>, OldBundles: Array<String>): AsyncActionChangePrimaryAssetBundles
        fun C(Other: UObject): AsyncActionChangePrimaryAssetBundles
        fun C(Other: Any): AsyncActionChangePrimaryAssetBundles
    }
}

external open class AtmospherePrecomputeParameters {
    open var DensityHeight: Number
    open var DecayHeight: Number
    open var MaxScatteringOrder: Number
    open var TransmittanceTexWidth: Number
    open var TransmittanceTexHeight: Number
    open var IrradianceTexWidth: Number
    open var IrradianceTexHeight: Number
    open var InscatterAltitudeSampleNum: Number
    open var InscatterMuNum: Number
    open var InscatterMuSNum: Number
    open var InscatterNuNum: Number
    open fun clone(): AtmospherePrecomputeParameters

    companion object {
        fun C(Other: UObject): AtmospherePrecomputeParameters
        fun C(Other: Any): AtmospherePrecomputeParameters
    }
}

external open class AtmosphericFogComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var SunMultiplier: Number
    open var FogMultiplier: Number
    open var DensityMultiplier: Number
    open var DensityOffset: Number
    open var DistanceScale: Number
    open var AltitudeScale: Number
    open var DistanceOffset: Number
    open var GroundOffset: Number
    open var StartDistance: Number
    open var SunDiscScale: Number
    open var DefaultBrightness: Number
    open var DefaultLightColor: Color
    open var bDisableSunDisk: Boolean
    open var bAtmosphereAffectsSunIlluminance: Boolean
    open var bDisableGroundScattering: Boolean
    open var PrecomputeParams: AtmospherePrecomputeParameters
    open var TransmittanceTexture: Texture2D
    open var IrradianceTexture: Texture2D
    open fun StartPrecompute()
    open fun SetSunMultiplier(NewSunMultiplier: Number)
    open fun SetStartDistance(NewStartDistance: Number)
    open fun SetPrecomputeParams(DensityHeight: Number, MaxScatteringOrder: Number, InscatterAltitudeSampleNum: Number)
    open fun SetFogMultiplier(NewFogMultiplier: Number)
    open fun SetDistanceScale(NewDistanceScale: Number)
    open fun SetDistanceOffset(NewDistanceOffset: Number)
    open fun SetDensityOffset(NewDensityOffset: Number)
    open fun SetDensityMultiplier(NewDensityMultiplier: Number)
    open fun SetDefaultLightColor(NewLightColor: LinearColor)
    open fun SetDefaultBrightness(NewBrightness: Number)
    open fun SetAltitudeScale(NewAltitudeScale: Number)
    open fun DisableSunDisk(NewSunDisk: Boolean)
    open fun DisableGroundScattering(NewGroundScattering: Boolean)

    companion object {
        fun Load(ResourceName: String): AtmosphericFogComponent
        fun Find(Outer: UObject, ResourceName: String): AtmosphericFogComponent
        fun GetDefaultObject(): AtmosphericFogComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AtmosphericFogComponent
        fun C(Other: UObject): AtmosphericFogComponent
        fun C(Other: Any): AtmosphericFogComponent
    }
}

external open class AtmosphericFog(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Info {
    open var AtmosphericFogComponent: AtmosphericFogComponent
    open var ArrowComponent: ArrowComponent

    companion object {
        fun GetDefaultObject(): AtmosphericFog
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AtmosphericFog
        fun C(Other: UObject): AtmosphericFog
        fun C(Other: Any): AtmosphericFog
    }
}

external object EVoiceSampleRate {
    var Low16000Hz: String /* "Low16000Hz" */
    var Normal24000Hz: String /* "Normal24000Hz" */
    var EVoiceSampleRate_MAX: String /* "EVoiceSampleRate_MAX" */
}

external open class AudioQualitySettings {
    open var DisplayName: String
    open var MaxChannels: Number
    open fun clone(): AudioQualitySettings

    companion object {
        fun C(Other: UObject): AudioQualitySettings
        fun C(Other: Any): AudioQualitySettings
    }
}

external object EPanningMethod {
    var Linear: String /* "Linear" */
    var EqualPower: String /* "EqualPower" */
    var EPanningMethod_MAX: String /* "EPanningMethod_MAX" */
}

external object EMonoChannelUpmixMethod {
    var Linear: String /* "Linear" */
    var EqualPower: String /* "EqualPower" */
    var FullVolume: String /* "FullVolume" */
    var EMonoChannelUpmixMethod_MAX: String /* "EMonoChannelUpmixMethod_MAX" */
}

external open class SoundDebugEntry {
    open var DebugName: String
    open var Sound: SoftObjectPath
    open fun clone(): SoundDebugEntry

    companion object {
        fun C(Other: UObject): SoundDebugEntry
        fun C(Other: Any): SoundDebugEntry
    }
}

external open class DefaultAudioBusSettings {
    open var AudioBus: SoftObjectPath
    open fun clone(): DefaultAudioBusSettings

    companion object {
        fun C(Other: UObject): DefaultAudioBusSettings
        fun C(Other: Any): DefaultAudioBusSettings
    }
}

external open class AudioSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var DefaultSoundClassName: SoftObjectPath
    open var DefaultMediaSoundClassName: SoftObjectPath
    open var DefaultSoundConcurrencyName: SoftObjectPath
    open var DefaultBaseSoundMix: SoftObjectPath
    open var VoiPSoundClass: SoftObjectPath
    open var MasterSubmix: SoftObjectPath
    open var BaseDefaultSubmix: SoftObjectPath
    open var ReverbSubmix: SoftObjectPath
    open var EQSubmix: SoftObjectPath
    open var VoiPSampleRate: String /* "Low16000Hz" | "Normal24000Hz" | "EVoiceSampleRate_MAX" */
    open var DefaultReverbSendLevel: Number
    open var MaximumConcurrentStreams: Number
    open var GlobalMinPitchScale: Number
    open var GlobalMaxPitchScale: Number
    open var QualityLevels: Array<AudioQualitySettings>
    open var bAllowPlayWhenSilent: Boolean
    open var bDisableMasterEQ: Boolean
    open var bAllowCenterChannel3DPanning: Boolean
    open var NumStoppingSources: Any
    open var PanningMethod: String /* "Linear" | "EqualPower" | "EPanningMethod_MAX" */
    open var MonoChannelUpmixMethod: String /* "Linear" | "EqualPower" | "FullVolume" | "EMonoChannelUpmixMethod_MAX" */
    open var DialogueFilenameFormat: String
    open var DebugSounds: Array<SoundDebugEntry>
    open var DefaultAudioBuses: Array<DefaultAudioBusSettings>
    open var DefaultSoundClass: SoundClass
    open var DefaultMediaSoundClass: SoundClass
    open var DefaultSoundConcurrency: SoundConcurrency

    companion object {
        fun Load(ResourceName: String): AudioSettings
        fun Find(Outer: UObject, ResourceName: String): AudioSettings
        fun GetDefaultObject(): AudioSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AudioSettings
        fun C(Other: UObject): AudioSettings
        fun C(Other: Any): AudioSettings
    }
}

external object EAudioVolumeLocationState {
    var InsideTheVolume: String /* "InsideTheVolume" */
    var OutsideTheVolume: String /* "OutsideTheVolume" */
    var EAudioVolumeLocationState_MAX: String /* "EAudioVolumeLocationState_MAX" */
}

external open class AudioVolumeSubmixSendSettings {
    open var ListenerLocationState: String /* "InsideTheVolume" | "OutsideTheVolume" | "EAudioVolumeLocationState_MAX" */
    open var SourceLocationState: String /* "InsideTheVolume" | "OutsideTheVolume" | "EAudioVolumeLocationState_MAX" */
    open var SubmixSends: Array<SoundSubmixSendInfo>
    open fun clone(): AudioVolumeSubmixSendSettings

    companion object {
        fun C(Other: UObject): AudioVolumeSubmixSendSettings
        fun C(Other: Any): AudioVolumeSubmixSendSettings
    }
}

external open class AudioVolumeSubmixOverrideSettings {
    open var Submix: SoundSubmix
    open var SubmixEffectChain: Array<SoundEffectSubmixPreset>
    open var CrossfadeTime: Number
    open fun clone(): AudioVolumeSubmixOverrideSettings

    companion object {
        fun C(Other: UObject): AudioVolumeSubmixOverrideSettings
        fun C(Other: Any): AudioVolumeSubmixOverrideSettings
    }
}

external open class AudioVolume(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Volume {
    open var Priority: Number
    open var bEnabled: Boolean
    open var Settings: ReverbSettings
    open var AmbientZoneSettings: InteriorSettings
    open var SubmixSendSettings: Array<AudioVolumeSubmixSendSettings>
    open var SubmixOverrideSettings: Array<AudioVolumeSubmixOverrideSettings>
    open fun SetSubmixSendSettings(NewSubmixSendSettings: Array<AudioVolumeSubmixSendSettings>)
    open fun SetSubmixOverrideSettings(NewSubmixOverrideSettings: Array<AudioVolumeSubmixOverrideSettings>)
    open fun SetReverbSettings(NewReverbSettings: ReverbSettings)
    open fun SetPriority(NewPriority: Number)
    open fun SetInteriorSettings(NewInteriorSettings: InteriorSettings)
    open fun SetEnabled(bNewEnabled: Boolean)
    open fun OnRep_bEnabled()

    companion object {
        fun GetDefaultObject(): AudioVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AudioVolume
        fun C(Other: UObject): AudioVolume
        fun C(Other: Any): AudioVolume
    }
}

external open class AutoDestroySubsystem : TickableWorldSubsystem {
    constructor()
    constructor(Outer: UObject)
    open var ActorsToPoll: Array<Actor>
    open fun OnActorEndPlay(Actor: Actor, EndPlayReason: String /* "Destroyed" | "LevelTransition" | "EndPlayInEditor" | "RemovedFromWorld" | "Quit" | "EEndPlayReason_MAX" */)

    companion object {
        fun Load(ResourceName: String): AutoDestroySubsystem
        fun Find(Outer: UObject, ResourceName: String): AutoDestroySubsystem
        fun GetDefaultObject(): AutoDestroySubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AutoDestroySubsystem
        fun C(Other: UObject): AutoDestroySubsystem
        fun C(Other: Any): AutoDestroySubsystem
    }
}

external open class EditorMapPerformanceTestDefinition {
    open var PerformanceTestmap: SoftObjectPath
    open var TestTimer: Number
    open fun clone(): EditorMapPerformanceTestDefinition

    companion object {
        fun C(Other: UObject): EditorMapPerformanceTestDefinition
        fun C(Other: Any): EditorMapPerformanceTestDefinition
    }
}

external open class ImportFactorySettingValues {
    open var SettingName: String
    open var Value: String
    open fun clone(): ImportFactorySettingValues

    companion object {
        fun C(Other: UObject): ImportFactorySettingValues
        fun C(Other: Any): ImportFactorySettingValues
    }
}

external open class EditorImportWorkflowDefinition {
    open var ImportFilePath: FilePath
    open var FactorySettings: Array<ImportFactorySettingValues>
    open fun clone(): EditorImportWorkflowDefinition

    companion object {
        fun C(Other: UObject): EditorImportWorkflowDefinition
        fun C(Other: Any): EditorImportWorkflowDefinition
    }
}

external open class BuildPromotionImportWorkflowSettings {
    open var Diffuse: EditorImportWorkflowDefinition
    open var Normal: EditorImportWorkflowDefinition
    open var StaticMesh: EditorImportWorkflowDefinition
    open var ReimportStaticMesh: EditorImportWorkflowDefinition
    open var BlendShapeMesh: EditorImportWorkflowDefinition
    open var MorphMesh: EditorImportWorkflowDefinition
    open var SkeletalMesh: EditorImportWorkflowDefinition
    open var Animation: EditorImportWorkflowDefinition
    open var Sound: EditorImportWorkflowDefinition
    open var SurroundSound: EditorImportWorkflowDefinition
    open var OtherAssetsToImport: Array<EditorImportWorkflowDefinition>
    open fun clone(): BuildPromotionImportWorkflowSettings

    companion object {
        fun C(Other: UObject): BuildPromotionImportWorkflowSettings
        fun C(Other: Any): BuildPromotionImportWorkflowSettings
    }
}

external open class BuildPromotionOpenAssetSettings {
    open var BlueprintAsset: FilePath
    open var MaterialAsset: FilePath
    open var ParticleSystemAsset: FilePath
    open var SkeletalMeshAsset: FilePath
    open var StaticMeshAsset: FilePath
    open var TextureAsset: FilePath
    open fun clone(): BuildPromotionOpenAssetSettings

    companion object {
        fun C(Other: UObject): BuildPromotionOpenAssetSettings
        fun C(Other: Any): BuildPromotionOpenAssetSettings
    }
}

external open class BuildPromotionNewProjectSettings {
    open var NewProjectFolderOverride: DirectoryPath
    open var NewProjectNameOverride: String
    open fun clone(): BuildPromotionNewProjectSettings

    companion object {
        fun C(Other: UObject): BuildPromotionNewProjectSettings
        fun C(Other: Any): BuildPromotionNewProjectSettings
    }
}

external open class BuildPromotionTestSettings {
    open var DefaultStaticMeshAsset: FilePath
    open var ImportWorkflow: BuildPromotionImportWorkflowSettings
    open var OpenAssets: BuildPromotionOpenAssetSettings
    open var NewProjectSettings: BuildPromotionNewProjectSettings
    open var SourceControlMaterial: FilePath
    open fun clone(): BuildPromotionTestSettings

    companion object {
        fun C(Other: UObject): BuildPromotionTestSettings
        fun C(Other: Any): BuildPromotionTestSettings
    }
}

external open class MaterialEditorPromotionSettings {
    open var DefaultMaterialAsset: FilePath
    open var DefaultDiffuseTexture: FilePath
    open var DefaultNormalTexture: FilePath
    open fun clone(): MaterialEditorPromotionSettings

    companion object {
        fun C(Other: UObject): MaterialEditorPromotionSettings
        fun C(Other: Any): MaterialEditorPromotionSettings
    }
}

external open class ParticleEditorPromotionSettings {
    open var DefaultParticleAsset: FilePath
    open fun clone(): ParticleEditorPromotionSettings

    companion object {
        fun C(Other: UObject): ParticleEditorPromotionSettings
        fun C(Other: Any): ParticleEditorPromotionSettings
    }
}

external open class BlueprintEditorPromotionSettings {
    open var FirstMeshPath: FilePath
    open var SecondMeshPath: FilePath
    open var DefaultParticleAsset: FilePath
    open fun clone(): BlueprintEditorPromotionSettings

    companion object {
        fun C(Other: UObject): BlueprintEditorPromotionSettings
        fun C(Other: Any): BlueprintEditorPromotionSettings
    }
}

external open class ExternalToolDefinition {
    open var ToolName: String
    open var ExecutablePath: FilePath
    open var CommandLineOptions: String
    open var WorkingDirectory: DirectoryPath
    open var ScriptExtension: String
    open var ScriptDirectory: DirectoryPath
    open fun clone(): ExternalToolDefinition

    companion object {
        fun C(Other: UObject): ExternalToolDefinition
        fun C(Other: Any): ExternalToolDefinition
    }
}

external open class EditorImportExportTestDefinition {
    open var ImportFilePath: FilePath
    open var ExportFileExtension: String
    open var bSkipExport: Boolean
    open var FactorySettings: Array<ImportFactorySettingValues>
    open fun clone(): EditorImportExportTestDefinition

    companion object {
        fun C(Other: UObject): EditorImportExportTestDefinition
        fun C(Other: Any): EditorImportExportTestDefinition
    }
}

external open class LaunchOnTestSettings {
    open var LaunchOnTestmap: FilePath
    open var DeviceID: String
    open fun clone(): LaunchOnTestSettings

    companion object {
        fun C(Other: UObject): LaunchOnTestSettings
        fun C(Other: Any): LaunchOnTestSettings
    }
}

external open class AutomationTestSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var EngineTestModules: Array<String>
    open var EditorTestModules: Array<String>
    open var AutomationTestmap: SoftObjectPath
    open var EditorPerformanceTestMaps: Array<EditorMapPerformanceTestDefinition>
    open var AssetsToOpen: Array<SoftObjectPath>
    open var MapsToPIETest: Array<String>
    open var BuildPromotionTest: BuildPromotionTestSettings
    open var MaterialEditorPromotionTest: MaterialEditorPromotionSettings
    open var ParticleEditorPromotionTest: ParticleEditorPromotionSettings
    open var BlueprintEditorPromotionTest: BlueprintEditorPromotionSettings
    open var TestLevelFolders: Array<String>
    open var ExternalTools: Array<ExternalToolDefinition>
    open var ImportExportTestDefinitions: Array<EditorImportExportTestDefinition>
    open var LaunchOnSettings: Array<LaunchOnTestSettings>
    open var DefaultScreenshotResolution: IntPoint
    open var PIETestDuration: Number

    companion object {
        fun Load(ResourceName: String): AutomationTestSettings
        fun Find(Outer: UObject, ResourceName: String): AutomationTestSettings
        fun GetDefaultObject(): AutomationTestSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AutomationTestSettings
        fun C(Other: UObject): AutomationTestSettings
        fun C(Other: Any): AutomationTestSettings
    }
}

external open class BandwidthTestItem {
    open var Kilobyte: Array<Number>
    open fun clone(): BandwidthTestItem

    companion object {
        fun C(Other: UObject): BandwidthTestItem
        fun C(Other: Any): BandwidthTestItem
    }
}

external open class BandwidthTestGenerator {
    open var ReplicatedBuffers: Array<BandwidthTestItem>
    open fun clone(): BandwidthTestGenerator

    companion object {
        fun C(Other: UObject): BandwidthTestGenerator
        fun C(Other: Any): BandwidthTestGenerator
    }
}

external open class BandwidthTestActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var BandwidthGenerator: BandwidthTestGenerator

    companion object {
        fun GetDefaultObject(): BandwidthTestActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BandwidthTestActor
        fun C(Other: UObject): BandwidthTestActor
        fun C(Other: Any): BandwidthTestActor
    }
}

external open class BlendableInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlendableInterface
        fun Find(Outer: UObject, ResourceName: String): BlendableInterface
        fun GetDefaultObject(): BlendableInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlendableInterface
        fun C(Other: UObject): BlendableInterface
        fun C(Other: Any): BlendableInterface
    }
}

external open class BlockingVolume(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Volume {
    companion object {
        fun GetDefaultObject(): BlockingVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlockingVolume
        fun C(Other: UObject): BlockingVolume
        fun C(Other: Any): BlockingVolume
    }
}

external interface `T$643` {
    var Values: Array<Number>
}

external interface `T$644` {
    var Keys: Array<Number>
}

external interface `T$645` {
    var Value: Number
    var `$`: Boolean
}

external open class BlueprintMapLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlueprintMapLibrary
        fun Find(Outer: UObject, ResourceName: String): BlueprintMapLibrary
        fun GetDefaultObject(): BlueprintMapLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintMapLibrary
        fun SetMapPropertyByName(UObject: UObject, PropertyName: String, Value: Any)
        fun Values(TargetMap: Any, Values: Array<Number> = definedExternally): `T$643`
        fun Remove(TargetMap: Any, Key: Number): Boolean
        fun Length(TargetMap: Any): Number
        fun Keys(TargetMap: Any, Keys: Array<Number> = definedExternally): `T$644`
        fun Find(TargetMap: Any, Key: Number, Value: Number = definedExternally): `T$645`
        fun Contains(TargetMap: Any, Key: Number): Boolean
        fun Clear(TargetMap: Any)
        fun Add(TargetMap: Any, Key: Number, Value: Number)
        fun C(Other: UObject): BlueprintMapLibrary
        fun C(Other: Any): BlueprintMapLibrary
    }
}

external interface `T$646` {
    var bDidSucceed: Boolean
    var OutReason: String
}

external interface `T$647` {
    var PathPart: String
    var FilenamePart: String
    var ExtensionPart: String
}

external interface `T$648` {
    var OutPath: String
}

external interface `T$649` {
    var OutPath: String
    var `$`: Boolean
}

external open class BlueprintPathsLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlueprintPathsLibrary
        fun Find(Outer: UObject, ResourceName: String): BlueprintPathsLibrary
        fun GetDefaultObject(): BlueprintPathsLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintPathsLibrary
        fun VideoCaptureDir(): String
        fun ValidatePath(InPath: String, bDidSucceed: Boolean = definedExternally, OutReason: String = definedExternally): `T$646`
        fun Split(InPath: String, PathPart: String = definedExternally, FilenamePart: String = definedExternally, ExtensionPart: String = definedExternally): `T$647`
        fun SourceConfigDir(): String
        fun ShouldSaveToUserDir(): Boolean
        fun ShaderWorkingDir(): String
        fun SetProjectFilePath(NewGameProjectFilePath: String)
        fun SetExtension(InPath: String, InNewExtension: String): String
        fun ScreenShotDir(): String
        fun SandboxesDir(): String
        fun RootDir(): String
        fun RemoveDuplicateSlashes(InPath: String, OutPath: String = definedExternally): `T$648`
        fun ProjectUserDir(): String
        fun ProjectSavedDir(): String
        fun ProjectPluginsDir(): String
        fun ProjectPersistentDownloadDir(): String
        fun ProjectModsDir(): String
        fun ProjectLogDir(): String
        fun ProjectIntermediateDir(): String
        fun ProjectDir(): String
        fun ProjectContentDir(): String
        fun ProjectConfigDir(): String
        fun ProfilingDir(): String
        fun NormalizeFilename(InPath: String, OutPath: String = definedExternally): `T$648`
        fun NormalizeDirectoryName(InPath: String, OutPath: String = definedExternally): `T$648`
        fun MakeValidFileName(inString: String, InReplacementChar: String): String
        fun MakeStandardFilename(InPath: String, OutPath: String = definedExternally): `T$648`
        fun MakePlatformFilename(InPath: String, OutPath: String = definedExternally): `T$648`
        fun MakePathRelativeTo(InPath: String, InRelativeTo: String, OutPath: String = definedExternally): `T$649`
        fun LaunchDir(): String
        fun IsSamePath(PathA: String, PathB: String): Boolean
        fun IsRestrictedPath(InPath: String): Boolean
        fun IsRelative(InPath: String): Boolean
        fun IsProjectFilePathSet(): Boolean
        fun IsDrive(InPath: String): Boolean
        fun HasProjectPersistentDownloadDir(): Boolean
        fun GetToolTipLocalizationPaths(): Array<String>
        fun GetRestrictedFolderNames(): Array<String>
        fun GetRelativePathToRoot(): String
        fun GetPropertyNameLocalizationPaths(): Array<String>
        fun GetProjectFilePath(): String
        fun GetPath(InPath: String): String
        fun GetInvalidFileSystemChars(): String
        fun GetGameLocalizationPaths(): Array<String>
        fun GetExtension(InPath: String, bIncludeDot: Boolean): String
        fun GetEngineLocalizationPaths(): Array<String>
        fun GetEditorLocalizationPaths(): Array<String>
        fun GetCleanFilename(InPath: String): String
        fun GetBaseFilename(InPath: String, bRemovePath: Boolean): String
        fun GeneratedConfigDir(): String
        fun GameUserDeveloperDir(): String
        fun GameSourceDir(): String
        fun GameDevelopersDir(): String
        fun GameAgnosticSavedDir(): String
        fun FileExists(InPath: String): Boolean
        fun FeaturePackDir(): String
        fun EnterprisePluginsDir(): String
        fun EnterpriseFeaturePackDir(): String
        fun EnterpriseDir(): String
        fun EngineVersionAgnosticUserDir(): String
        fun EngineUserDir(): String
        fun EngineSourceDir(): String
        fun EngineSavedDir(): String
        fun EnginePluginsDir(): String
        fun EngineIntermediateDir(): String
        fun EngineDir(): String
        fun EngineContentDir(): String
        fun EngineConfigDir(): String
        fun DirectoryExists(InPath: String): Boolean
        fun DiffDir(): String
        fun CreateTempFilename(Path: String, Prefix: String, Extension: String): String
        fun ConvertToSandboxPath(InPath: String, InSandboxName: String): String
        fun ConvertRelativePathToFull(InPath: String, InBasePath: String): String
        fun ConvertFromSandboxPath(InPath: String, InSandboxName: String): String
        fun Combine(InPaths: Array<String>): String
        fun CollapseRelativeDirectories(InPath: String, OutPath: String = definedExternally): `T$649`
        fun CloudDir(): String
        fun ChangeExtension(InPath: String, InNewExtension: String): String
        fun BugItDir(): String
        fun AutomationTransientDir(): String
        fun AutomationLogDir(): String
        fun AutomationDir(): String
        fun C(Other: UObject): BlueprintPathsLibrary
        fun C(Other: Any): BlueprintPathsLibrary
    }
}

external object EApplicationState {
    var Unknown: String /* "Unknown" */
    var Inactive: String /* "Inactive" */
    var Background: String /* "Background" */
    var Active: String /* "Active" */
    var EApplicationState_MAX: String /* "EApplicationState_MAX" */
}

external object EScreenOrientation {
    var Unknown: String /* "Unknown" */
    var Portrait: String /* "Portrait" */
    var PortraitUpsideDown: String /* "PortraitUpsideDown" */
    var LandscapeLeft: String /* "LandscapeLeft" */
    var LandscapeRight: String /* "LandscapeRight" */
    var FaceUp: String /* "FaceUp" */
    var FaceDown: String /* "FaceDown" */
    var EScreenOrientation_MAX: String /* "EScreenOrientation_MAX" */
}

external open class PlatformGameInstance : GameInstance {
    constructor()
    constructor(Outer: UObject)
    open var ApplicationWillDeactivateDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var ApplicationHasReactivatedDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var ApplicationWillEnterBackgroundDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var ApplicationHasEnteredForegroundDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var ApplicationWillTerminateDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var ApplicationShouldUnloadResourcesDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var ApplicationReceivedStartupArgumentsDelegate: UnrealEngineMulticastDelegate<(StartupArguments: Array<String>) -> Unit>
    open var ApplicationRegisteredForRemoteNotificationsDelegate: UnrealEngineMulticastDelegate<(inArray: Array<Number>) -> Unit>
    open var ApplicationRegisteredForUserNotificationsDelegate: UnrealEngineMulticastDelegate<(inInt: Number) -> Unit>
    open var ApplicationFailedToRegisterForRemoteNotificationsDelegate: UnrealEngineMulticastDelegate<(inString: String) -> Unit>
    open var ApplicationReceivedRemoteNotificationDelegate: UnrealEngineMulticastDelegate<(inString: String, inAppState: String /* "Unknown" | "Inactive" | "Background" | "Active" | "EApplicationState_MAX" */) -> Unit>
    open var ApplicationReceivedLocalNotificationDelegate: UnrealEngineMulticastDelegate<(inString: String, inInt: Number, inAppState: String /* "Unknown" | "Inactive" | "Background" | "Active" | "EApplicationState_MAX" */) -> Unit>
    open var ApplicationReceivedScreenOrientationChangedNotificationDelegate: UnrealEngineMulticastDelegate<(inScreenOrientation: String /* "Unknown" | "Portrait" | "PortraitUpsideDown" | "LandscapeLeft" | "LandscapeRight" | "FaceUp" | "FaceDown" | "EScreenOrientation_MAX" */) -> Unit>

    companion object {
        fun Load(ResourceName: String): PlatformGameInstance
        fun Find(Outer: UObject, ResourceName: String): PlatformGameInstance
        fun GetDefaultObject(): PlatformGameInstance
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PlatformGameInstance
        fun C(Other: UObject): PlatformGameInstance
        fun C(Other: Any): PlatformGameInstance
    }
}

external interface `T$650` {
    var NotificationLaunchedApp: Boolean
    var ActivationEvent: String
    var FireDate: Number
}

external open class BlueprintPlatformLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlueprintPlatformLibrary
        fun Find(Outer: UObject, ResourceName: String): BlueprintPlatformLibrary
        fun GetDefaultObject(): BlueprintPlatformLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintPlatformLibrary
        fun ScheduleLocalNotificationFromNow(inSecondsFromNow: Number, Title: String, Body: String, Action: String, ActivationEvent: String): Number
        fun ScheduleLocalNotificationBadgeFromNow(inSecondsFromNow: Number, ActivationEvent: String)
        fun ScheduleLocalNotificationBadgeAtTime(FireDateTime: DateTime, LocalTime: Boolean, ActivationEvent: String): Number
        fun ScheduleLocalNotificationAtTime(FireDateTime: DateTime, LocalTime: Boolean, Title: String, Body: String, Action: String, ActivationEvent: String): Number
        fun GetLaunchNotification(NotificationLaunchedApp: Boolean = definedExternally, ActivationEvent: String = definedExternally, FireDate: Number = definedExternally): `T$650`
        fun GetDeviceOrientation(): String /* "Unknown" | "Portrait" | "PortraitUpsideDown" | "LandscapeLeft" | "LandscapeRight" | "FaceUp" | "FaceDown" | "EScreenOrientation_MAX" */
        fun ClearAllLocalNotifications()
        fun CancelLocalNotificationById(NotificationId: Number)
        fun CancelLocalNotification(ActivationEvent: String)
        fun C(Other: UObject): BlueprintPlatformLibrary
        fun C(Other: Any): BlueprintPlatformLibrary
    }
}

external interface `T$651` {
    var Result: Any
}

external interface `T$652` {
    var Result: Array<Number>
}

external open class BlueprintSetLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlueprintSetLibrary
        fun Find(Outer: UObject, ResourceName: String): BlueprintSetLibrary
        fun GetDefaultObject(): BlueprintSetLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintSetLibrary
        fun SetSetPropertyByName(UObject: UObject, PropertyName: String, Value: Any)
        fun Union(A: Any, B: Any, Result: Any = definedExternally): `T$651`
        fun ToArray(A: Any, Result: Array<Number> = definedExternally): `T$652`
        fun RemoveItems(TargetSet: Any, Items: Array<Number>)
        fun Remove(TargetSet: Any, Item: Number): Boolean
        fun Length(TargetSet: Any): Number
        fun Intersection(A: Any, B: Any, Result: Any = definedExternally): `T$651`
        fun Difference(A: Any, B: Any, Result: Any = definedExternally): `T$651`
        fun ContainsItem(TargetSet: Any, ItemToFind: Number): Boolean
        fun Clear(TargetSet: Any)
        fun AddItems(TargetSet: Any, NewItems: Array<Number>)
        fun Add(TargetSet: Any, NewItem: Number)
        fun C(Other: UObject): BlueprintSetLibrary
        fun C(Other: Any): BlueprintSetLibrary
    }
}

external open class BoneMaskFilter : UObject {
    constructor()
    constructor(Outer: UObject)
    open var BlendPoses: Array<InputBlendPose>

    companion object {
        fun Load(ResourceName: String): BoneMaskFilter
        fun Find(Outer: UObject, ResourceName: String): BoneMaskFilter
        fun GetDefaultObject(): BoneMaskFilter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BoneMaskFilter
        fun C(Other: UObject): BoneMaskFilter
        fun C(Other: Any): BoneMaskFilter
    }
}

external open class BookMark2D : BookmarkBase {
    constructor()
    constructor(Outer: UObject)
    open var Zoom2D: Number
    open var Location: IntPoint

    companion object {
        fun Load(ResourceName: String): BookMark2D
        fun Find(Outer: UObject, ResourceName: String): BookMark2D
        fun GetDefaultObject(): BookMark2D
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BookMark2D
        fun C(Other: UObject): BookMark2D
        fun C(Other: Any): BookMark2D
    }
}

external open class BoundsCopyComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var BoundsSourceActor: Actor
    open var bUseCollidingComponentsForSourceBounds: Boolean
    open var bKeepOwnBoundsScale: Boolean
    open var bUseCollidingComponentsForOwnBounds: Boolean
    open var PostTransform: Transform
    open var bCopyXBounds: Boolean
    open var bCopyYBounds: Boolean
    open var bCopyZBounds: Boolean
    open fun CopyBounds()
    open fun CopyRotation()

    companion object {
        fun Load(ResourceName: String): BoundsCopyComponent
        fun Find(Outer: UObject, ResourceName: String): BoundsCopyComponent
        fun GetDefaultObject(): BoundsCopyComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BoundsCopyComponent
        fun C(Other: UObject): BoundsCopyComponent
        fun C(Other: Any): BoundsCopyComponent
    }
}

external object EReflectionSourceType {
    var CapturedScene: String /* "CapturedScene" */
    var SpecifiedCubemap: String /* "SpecifiedCubemap" */
    var EReflectionSourceType_MAX: String /* "EReflectionSourceType_MAX" */
}

external object EMobileReflectionCompression {
    var Default: String /* "Default" */
    var On: String /* "On" */
    var Off: String /* "Off" */
    var EMobileReflectionCompression_MAX: String /* "EMobileReflectionCompression_MAX" */
}

external open class ReflectionCaptureComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var CaptureOffsetComponent: BillboardComponent
    open var ReflectionSourceType: String /* "CapturedScene" | "SpecifiedCubemap" | "EReflectionSourceType_MAX" */
    open var MobileReflectionCompression: String /* "Default" | "On" | "Off" | "EMobileReflectionCompression_MAX" */
    open var Cubemap: TextureCube
    open var SourceCubemapAngle: Number
    open var Brightness: Number
    open var bModifyMaxValueRGBM: Boolean
    open var MaxValueRGBM: Number
    open var CaptureOffset: Vector
    open var MapBuildDataId: Guid
    open var CachedEncodedHDRCubemap: TextureCube

    companion object {
        fun Load(ResourceName: String): ReflectionCaptureComponent
        fun Find(Outer: UObject, ResourceName: String): ReflectionCaptureComponent
        fun GetDefaultObject(): ReflectionCaptureComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ReflectionCaptureComponent
        fun C(Other: UObject): ReflectionCaptureComponent
        fun C(Other: Any): ReflectionCaptureComponent
    }
}

external open class ReflectionCapture(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var CaptureComponent: ReflectionCaptureComponent
    open var SpriteComponent: BillboardComponent
    open var CaptureOffsetComponent: BillboardComponent

    companion object {
        fun GetDefaultObject(): ReflectionCapture
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ReflectionCapture
        fun C(Other: UObject): ReflectionCapture
        fun C(Other: Any): ReflectionCapture
    }
}

external open class BoxReflectionCapture(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : ReflectionCapture {
    companion object {
        fun GetDefaultObject(): BoxReflectionCapture
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BoxReflectionCapture
        fun C(Other: UObject): BoxReflectionCapture
        fun C(Other: Any): BoxReflectionCapture
    }
}

external open class BoxReflectionCaptureComponent : ReflectionCaptureComponent {
    constructor()
    constructor(Outer: UObject)
    open var BoxTransitionDistance: Number
    open var PreviewInfluenceBox: BoxComponent
    open var PreviewCaptureBox: BoxComponent

    companion object {
        fun Load(ResourceName: String): BoxReflectionCaptureComponent
        fun Find(Outer: UObject, ResourceName: String): BoxReflectionCaptureComponent
        fun GetDefaultObject(): BoxReflectionCaptureComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BoxReflectionCaptureComponent
        fun C(Other: UObject): BoxReflectionCaptureComponent
        fun C(Other: Any): BoxReflectionCaptureComponent
    }
}

external open class BrushShape(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Brush {
    companion object {
        fun GetDefaultObject(): BrushShape
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BrushShape
        fun C(Other: UObject): BrushShape
        fun C(Other: Any): BrushShape
    }
}

external open class ButtonStyleAsset : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ButtonStyle: ButtonStyle

    companion object {
        fun Load(ResourceName: String): ButtonStyleAsset
        fun Find(Outer: UObject, ResourceName: String): ButtonStyleAsset
        fun GetDefaultObject(): ButtonStyleAsset
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ButtonStyleAsset
        fun C(Other: UObject): ButtonStyleAsset
        fun C(Other: Any): ButtonStyleAsset
    }
}

external open class CameraBlockingVolume(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Volume {
    companion object {
        fun GetDefaultObject(): CameraBlockingVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CameraBlockingVolume
        fun C(Other: UObject): CameraBlockingVolume
        fun C(Other: Any): CameraBlockingVolume
    }
}

external open class CameraShakeSourceActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var CameraShakeSourceComponent: CameraShakeSourceComponent

    companion object {
        fun GetDefaultObject(): CameraShakeSourceActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CameraShakeSourceActor
        fun C(Other: UObject): CameraShakeSourceActor
        fun C(Other: Any): CameraShakeSourceActor
    }
}

external interface `T$653` {
    var Width: Number
    var Height: Number
}

external open class CanvasRenderTarget2D : TextureRenderTarget2D {
    constructor()
    constructor(Outer: UObject)
    open var OnCanvasRenderTargetUpdate: UnrealEngineMulticastDelegate<(Canvas: Canvas, Width: Number, Height: Number) -> Unit>
    open var World: Any
    open var bShouldClearRenderTargetOnReceiveUpdate: Boolean
    open fun UpdateResource()
    open fun ReceiveUpdate(Canvas: Canvas, Width: Number, Height: Number)
    open fun GetSize(Width: Number = definedExternally, Height: Number = definedExternally): `T$653`

    companion object {
        fun Load(ResourceName: String): CanvasRenderTarget2D
        fun Find(Outer: UObject, ResourceName: String): CanvasRenderTarget2D
        fun GetDefaultObject(): CanvasRenderTarget2D
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CanvasRenderTarget2D
        fun CreateCanvasRenderTarget2D(WorldContextObject: UObject, CanvasRenderTarget2DClass: UnrealEngineClass, Width: Number, Height: Number): CanvasRenderTarget2D
        fun C(Other: UObject): CanvasRenderTarget2D
        fun C(Other: Any): CanvasRenderTarget2D
    }
}

external open class CheckBoxStyleAsset : UObject {
    constructor()
    constructor(Outer: UObject)
    open var CheckBoxStyle: CheckBoxStyle

    companion object {
        fun Load(ResourceName: String): CheckBoxStyleAsset
        fun Find(Outer: UObject, ResourceName: String): CheckBoxStyleAsset
        fun GetDefaultObject(): CheckBoxStyleAsset
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CheckBoxStyleAsset
        fun C(Other: UObject): CheckBoxStyleAsset
        fun C(Other: Any): CheckBoxStyleAsset
    }
}

external object EPlatformInterfaceDataType {
    var PIDT_None: String /* "PIDT_None" */
    var PIDT_Int: String /* "PIDT_Int" */
    var PIDT_Float: String /* "PIDT_Float" */
    var PIDT_String: String /* "PIDT_String" */
    var PIDT_Object: String /* "PIDT_Object" */
    var PIDT_Custom: String /* "PIDT_Custom" */
    var PIDT_MAX: String /* "PIDT_MAX" */
}

external open class PlatformInterfaceData {
    open var DataName: String
    open var Type: String /* "PIDT_None" | "PIDT_Int" | "PIDT_Float" | "PIDT_String" | "PIDT_Object" | "PIDT_Custom" | "PIDT_MAX" */
    open var IntValue: Number
    open var FloatValue: Number
    open var StringValue: String
    open var ObjectValue: UObject
    open fun clone(): PlatformInterfaceData

    companion object {
        fun C(Other: UObject): PlatformInterfaceData
        fun C(Other: Any): PlatformInterfaceData
    }
}

external open class PlatformInterfaceDelegateResult {
    open var bSuccessful: Boolean
    open var Data: PlatformInterfaceData
    open fun clone(): PlatformInterfaceDelegateResult

    companion object {
        fun C(Other: UObject): PlatformInterfaceDelegateResult
        fun C(Other: Any): PlatformInterfaceDelegateResult
    }
}

external open class DelegateArray {
    open var Delegates: Array<UnrealEngineDelegate<(Result: PlatformInterfaceDelegateResult) -> Unit>>
    open fun clone(): DelegateArray

    companion object {
        fun C(Other: UObject): DelegateArray
        fun C(Other: Any): DelegateArray
    }
}

external open class PlatformInterfaceBase : UObject {
    constructor()
    constructor(Outer: UObject)
    open var AllDelegates: Array<DelegateArray>

    companion object {
        fun Load(ResourceName: String): PlatformInterfaceBase
        fun Find(Outer: UObject, ResourceName: String): PlatformInterfaceBase
        fun GetDefaultObject(): PlatformInterfaceBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PlatformInterfaceBase
        fun C(Other: UObject): PlatformInterfaceBase
        fun C(Other: Any): PlatformInterfaceBase
    }
}

external open class CloudStorageBase : PlatformInterfaceBase {
    constructor()
    constructor(Outer: UObject)
    open var LocalCloudFiles: Array<String>
    open var bSuppressDelegateCalls: Boolean

    companion object {
        fun Load(ResourceName: String): CloudStorageBase
        fun Find(Outer: UObject, ResourceName: String): CloudStorageBase
        fun GetDefaultObject(): CloudStorageBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CloudStorageBase
        fun C(Other: UObject): CloudStorageBase
        fun C(Other: Any): CloudStorageBase
    }
}

external open class CollisionResponseTemplate {
    open var Name: String
    open var CollisionEnabled: String /* "NoCollision" | "QueryOnly" | "PhysicsOnly" | "QueryAndPhysics" | "ECollisionEnabled_MAX" */
    open var bCanModify: Boolean
    open var ObjectTypeName: String
    open var CustomResponses: Array<ResponseChannel>
    open var HelpMessage: String
    open fun clone(): CollisionResponseTemplate

    companion object {
        fun C(Other: UObject): CollisionResponseTemplate
        fun C(Other: Any): CollisionResponseTemplate
    }
}

external open class CustomChannelSetup {
    open var Channel: String /* "ECC_WorldStatic" | "ECC_WorldDynamic" | "ECC_Pawn" | "ECC_Visibility" | "ECC_Camera" | "ECC_PhysicsBody" | "ECC_Vehicle" | "ECC_Destructible" | "ECC_EngineTraceChannel1" | "ECC_EngineTraceChannel2" | "ECC_EngineTraceChannel3" | "ECC_EngineTraceChannel4" | "ECC_EngineTraceChannel5" | "ECC_EngineTraceChannel6" | "ECC_GameTraceChannel1" | "ECC_GameTraceChannel2" | "ECC_GameTraceChannel3" | "ECC_GameTraceChannel4" | "ECC_GameTraceChannel5" | "ECC_GameTraceChannel6" | "ECC_GameTraceChannel7" | "ECC_GameTraceChannel8" | "ECC_GameTraceChannel9" | "ECC_GameTraceChannel10" | "ECC_GameTraceChannel11" | "ECC_GameTraceChannel12" | "ECC_GameTraceChannel13" | "ECC_GameTraceChannel14" | "ECC_GameTraceChannel15" | "ECC_GameTraceChannel16" | "ECC_GameTraceChannel17" | "ECC_GameTraceChannel18" | "ECC_OverlapAll_Deprecated" | "ECC_MAX" */
    open var DefaultResponse: String /* "ECR_Ignore" | "ECR_Overlap" | "ECR_Block" | "ECR_MAX" */
    open var bTraceType: Boolean
    open var bStaticObject: Boolean
    open var Name: String
    open fun clone(): CustomChannelSetup

    companion object {
        fun C(Other: UObject): CustomChannelSetup
        fun C(Other: Any): CustomChannelSetup
    }
}

external open class CustomProfile {
    open var Name: String
    open var CustomResponses: Array<ResponseChannel>
    open fun clone(): CustomProfile

    companion object {
        fun C(Other: UObject): CustomProfile
        fun C(Other: Any): CustomProfile
    }
}

external open class Redirector {
    open var OldName: String
    open var NewName: String
    open fun clone(): Redirector

    companion object {
        fun C(Other: UObject): Redirector
        fun C(Other: Any): Redirector
    }
}

external open class CollisionProfile : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var Profiles: Array<CollisionResponseTemplate>
    open var DefaultChannelResponses: Array<CustomChannelSetup>
    open var EditProfiles: Array<CustomProfile>
    open var ProfileRedirects: Array<Redirector>
    open var CollisionChannelRedirects: Array<Redirector>

    companion object {
        fun Load(ResourceName: String): CollisionProfile
        fun Find(Outer: UObject, ResourceName: String): CollisionProfile
        fun GetDefaultObject(): CollisionProfile
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CollisionProfile
        fun C(Other: UObject): CollisionProfile
        fun C(Other: Any): CollisionProfile
    }
}

external open class BlueprintComponentDelegateBinding {
    open var ComponentPropertyName: String
    open var DelegatePropertyName: String
    open var FunctionNameToBind: String
    open fun clone(): BlueprintComponentDelegateBinding

    companion object {
        fun C(Other: UObject): BlueprintComponentDelegateBinding
        fun C(Other: Any): BlueprintComponentDelegateBinding
    }
}

external open class ComponentDelegateBinding : DynamicBlueprintBinding {
    constructor()
    constructor(Outer: UObject)
    open var ComponentDelegateBindings: Array<BlueprintComponentDelegateBinding>

    companion object {
        fun Load(ResourceName: String): ComponentDelegateBinding
        fun Find(Outer: UObject, ResourceName: String): ComponentDelegateBinding
        fun GetDefaultObject(): ComponentDelegateBinding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ComponentDelegateBinding
        fun C(Other: UObject): ComponentDelegateBinding
        fun C(Other: Any): ComponentDelegateBinding
    }
}

external open class ActorComponentInstanceDataTransientOuter : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorComponentInstanceDataTransientOuter
        fun Find(Outer: UObject, ResourceName: String): ActorComponentInstanceDataTransientOuter
        fun GetDefaultObject(): ActorComponentInstanceDataTransientOuter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorComponentInstanceDataTransientOuter
        fun C(Other: UObject): ActorComponentInstanceDataTransientOuter
        fun C(Other: Any): ActorComponentInstanceDataTransientOuter
    }
}

external open class CompositeCurveTable : CurveTable {
    constructor()
    constructor(Outer: UObject)
    open var ParentTables: Array<CurveTable>
    open var OldParentTables: Array<CurveTable>

    companion object {
        fun Load(ResourceName: String): CompositeCurveTable
        fun Find(Outer: UObject, ResourceName: String): CompositeCurveTable
        fun GetDefaultObject(): CompositeCurveTable
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CompositeCurveTable
        fun C(Other: UObject): CompositeCurveTable
        fun C(Other: Any): CompositeCurveTable
    }
}

external open class CompositeDataTable : DataTable {
    constructor()
    constructor(Outer: UObject)
    open var ParentTables: Array<DataTable>
    open var OldParentTables: Array<DataTable>

    companion object {
        fun Load(ResourceName: String): CompositeDataTable
        fun Find(Outer: UObject, ResourceName: String): CompositeDataTable
        fun GetDefaultObject(): CompositeDataTable
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CompositeDataTable
        fun C(Other: UObject): CompositeDataTable
        fun C(Other: Any): CompositeDataTable
    }
}

external open class ControlChannel : Channel {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ControlChannel
        fun Find(Outer: UObject, ResourceName: String): ControlChannel
        fun GetDefaultObject(): ControlChannel
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ControlChannel
        fun C(Other: UObject): ControlChannel
        fun C(Other: Any): ControlChannel
    }
}

external open class StreamingSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var AsyncLoadingThreadEnabled: Boolean
    open var WarnIfTimeLimitExceeded: Boolean
    open var TimeLimitExceededMultiplier: Number
    open var TimeLimitExceededMinTime: Number
    open var MinBulkDataSizeForAsyncLoading: Number
    open var UseBackgroundLevelStreaming: Boolean
    open var AsyncLoadingUseFullTimeLimit: Boolean
    open var AsyncLoadingTimeLimit: Number
    open var PriorityAsyncLoadingExtraTime: Number
    open var LevelStreamingActorsUpdateTimeLimit: Number
    open var PriorityLevelStreamingActorsUpdateExtraTime: Number
    open var LevelStreamingComponentsRegistrationGranularity: Number
    open var LevelStreamingUnregisterComponentsTimeLimit: Number
    open var LevelStreamingComponentsUnregistrationGranularity: Number
    open var FlushStreamingOnExit: Boolean
    open var EventDrivenLoaderEnabled: Boolean

    companion object {
        fun Load(ResourceName: String): StreamingSettings
        fun Find(Outer: UObject, ResourceName: String): StreamingSettings
        fun GetDefaultObject(): StreamingSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): StreamingSettings
        fun C(Other: UObject): StreamingSettings
        fun C(Other: Any): StreamingSettings
    }
}

external open class GarbageCollectionSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var TimeBetweenPurgingPendingKillObjects: Number
    open var FlushStreamingOnGC: Boolean
    open var AllowParallelGC: Boolean
    open var IncrementalBeginDestroyEnabled: Boolean
    open var MultithreadedDestructionEnabled: Boolean
    open var CreateGCClusters: Boolean
    open var AssetClusteringEnabled: Boolean
    open var ActorClusteringEnabled: Boolean
    open var BlueprintClusteringEnabled: Boolean
    open var UseDisregardForGCOnDedicatedServers: Boolean
    open var MinGCClusterSize: Number
    open var NumRetriesBeforeForcingGC: Number
    open var MaxObjectsNotConsideredByGC: Number
    open var SizeOfPermanentObjectPool: Number
    open var MaxObjectsInGame: Number
    open var MaxObjectsInEditor: Number

    companion object {
        fun Load(ResourceName: String): GarbageCollectionSettings
        fun Find(Outer: UObject, ResourceName: String): GarbageCollectionSettings
        fun GetDefaultObject(): GarbageCollectionSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GarbageCollectionSettings
        fun C(Other: UObject): GarbageCollectionSettings
        fun C(Other: Any): GarbageCollectionSettings
    }
}

external open class CullDistanceSizePair {
    open var Size: Number
    open var CullDistance: Number
    open fun clone(): CullDistanceSizePair

    companion object {
        fun C(Other: UObject): CullDistanceSizePair
        fun C(Other: Any): CullDistanceSizePair
    }
}

external open class CullDistanceVolume(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Volume {
    open var CullDistances: Array<CullDistanceSizePair>
    open var bEnabled: Boolean

    companion object {
        fun GetDefaultObject(): CullDistanceVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CullDistanceVolume
        fun C(Other: UObject): CullDistanceVolume
        fun C(Other: Any): CullDistanceVolume
    }
}

external open class CurveEdPresetCurve : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CurveEdPresetCurve
        fun Find(Outer: UObject, ResourceName: String): CurveEdPresetCurve
        fun GetDefaultObject(): CurveEdPresetCurve
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CurveEdPresetCurve
        fun C(Other: UObject): CurveEdPresetCurve
        fun C(Other: Any): CurveEdPresetCurve
    }
}

external open class NamedCurveValue {
    open var Name: String
    open var Value: Number
    open fun clone(): NamedCurveValue

    companion object {
        fun C(Other: UObject): NamedCurveValue
        fun C(Other: Any): NamedCurveValue
    }
}

external interface `T$654` {
    var OutValues: Array<NamedCurveValue>
}

external open class CurveSourceInterface : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun GetCurveValue(CurveName: String): Number
    open fun GetCurves(OutValues: Array<NamedCurveValue> = definedExternally): `T$654`
    open fun GetBindingName(): String

    companion object {
        fun Load(ResourceName: String): CurveSourceInterface
        fun Find(Outer: UObject, ResourceName: String): CurveSourceInterface
        fun GetDefaultObject(): CurveSourceInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CurveSourceInterface
        fun C(Other: UObject): CurveSourceInterface
        fun C(Other: Any): CurveSourceInterface
    }
}

external open class AssetBundleEntry {
    open var BundleName: String
    open var BundleAssets: Array<SoftObjectPath>
    open fun clone(): AssetBundleEntry

    companion object {
        fun C(Other: UObject): AssetBundleEntry
        fun C(Other: Any): AssetBundleEntry
    }
}

external open class AssetBundleData {
    open var Bundles: Array<AssetBundleEntry>
    open fun clone(): AssetBundleData

    companion object {
        fun C(Other: UObject): AssetBundleData
        fun C(Other: Any): AssetBundleData
    }
}

external open class PrimaryDataAsset : DataAsset {
    constructor()
    constructor(Outer: UObject)
    open var AssetBundleData: AssetBundleData

    companion object {
        fun Load(ResourceName: String): PrimaryDataAsset
        fun Find(Outer: UObject, ResourceName: String): PrimaryDataAsset
        fun GetDefaultObject(): PrimaryDataAsset
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PrimaryDataAsset
        fun C(Other: UObject): PrimaryDataAsset
        fun C(Other: Any): PrimaryDataAsset
    }
}

external open class DataDrivenCVarEngineSubsystem : EngineSubsystem {
    constructor()
    constructor(Outer: UObject)
    open var OnDataDrivenCVarDelegate: UnrealEngineMulticastDelegate<(CVarName: String) -> Unit>

    companion object {
        fun Load(ResourceName: String): DataDrivenCVarEngineSubsystem
        fun Find(Outer: UObject, ResourceName: String): DataDrivenCVarEngineSubsystem
        fun GetDefaultObject(): DataDrivenCVarEngineSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DataDrivenCVarEngineSubsystem
        fun C(Other: UObject): DataDrivenCVarEngineSubsystem
        fun C(Other: Any): DataDrivenCVarEngineSubsystem
    }
}

external object FDataDrivenCVarType {
    var CVarFloat: String /* "CVarFloat" */
    var CVarInt: String /* "CVarInt" */
    var CVarBool: String /* "CVarBool" */
    var FDataDrivenCVarType_MAX: String /* "FDataDrivenCVarType_MAX" */
}

external open class DataDrivenConsoleVariable {
    open var Type: String /* "CVarFloat" | "CVarInt" | "CVarBool" | "FDataDrivenCVarType_MAX" */
    open var Name: String
    open var Tooltip: String
    open var DefaultValueFloat: Number
    open var DefaultValueInt: Number
    open var DefaultValueBool: Boolean
    open fun clone(): DataDrivenConsoleVariable

    companion object {
        fun C(Other: UObject): DataDrivenConsoleVariable
        fun C(Other: Any): DataDrivenConsoleVariable
    }
}

external open class DataDrivenConsoleVariableSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var CVarsArray: Array<DataDrivenConsoleVariable>

    companion object {
        fun Load(ResourceName: String): DataDrivenConsoleVariableSettings
        fun Find(Outer: UObject, ResourceName: String): DataDrivenConsoleVariableSettings
        fun GetDefaultObject(): DataDrivenConsoleVariableSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DataDrivenConsoleVariableSettings
        fun C(Other: UObject): DataDrivenConsoleVariableSettings
        fun C(Other: Any): DataDrivenConsoleVariableSettings
    }
}

external interface `T$655` {
    var OutRowNames: Array<String>
}

external open class DataTableFunctionLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DataTableFunctionLibrary
        fun Find(Outer: UObject, ResourceName: String): DataTableFunctionLibrary
        fun GetDefaultObject(): DataTableFunctionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DataTableFunctionLibrary
        fun GetDataTableRowNames(Table: DataTable, OutRowNames: Array<String> = definedExternally): `T$655`
        fun GetDataTableRowFromName(Table: DataTable, RowName: String, OutRow: TableRowBase = definedExternally): `T$576`
        fun GetDataTableColumnAsString(DataTable: DataTable, PropertyName: String): Array<String>
        fun FillDataTableFromJSONString(DataTable: DataTable, JsonString: String): Boolean
        fun FillDataTableFromJSONFile(DataTable: DataTable, JSONFilePath: String, ImportRowStruct: ScriptStruct): Boolean
        fun FillDataTableFromCSVString(DataTable: DataTable, CSVString: String): Boolean
        fun FillDataTableFromCSVFile(DataTable: DataTable, CSVFilePath: String): Boolean
        fun EvaluateCurveTableRow(CurveTable: CurveTable, RowName: String, InXY: Number, OutResult: String /* "RowFound" | "RowNotFound" | "EEvaluateCurveTableResult_MAX" */ = definedExternally, OutXY: Number = definedExternally, ContextString: String = definedExternally): `T$176`
        fun DoesDataTableRowExist(Table: DataTable, RowName: String): Boolean
        fun C(Other: UObject): DataTableFunctionLibrary
        fun C(Other: Any): DataTableFunctionLibrary
    }
}

external open class DebugCameraControllerSettingsViewModeIndex {
    open var ViewModeIndex: String /* "VMI_BrushWireframe" | "VMI_Wireframe" | "VMI_Unlit" | "VMI_Lit" | "VMI_Lit_DetailLighting" | "VMI_LightingOnly" | "VMI_LightComplexity" | "VMI_ShaderComplexity" | "VMI_LightmapDensity" | "VMI_LitLightmapDensity" | "VMI_ReflectionOverride" | "VMI_VisualizeBuffer" | "VMI_StationaryLightOverlap" | "VMI_CollisionPawn" | "VMI_CollisionVisibility" | "VMI_LODColoration" | "VMI_QuadOverdraw" | "VMI_PrimitiveDistanceAccuracy" | "VMI_MeshUVDensityAccuracy" | "VMI_ShaderComplexityWithQuadOverdraw" | "VMI_HLODColoration" | "VMI_GroupLODColoration" | "VMI_MaterialTextureScaleAccuracy" | "VMI_RequiredTextureResolution" | "VMI_PathTracing" | "VMI_RayTracingDebug" | "VMI_Max" | "VMI_Unknown" */
    open fun clone(): DebugCameraControllerSettingsViewModeIndex

    companion object {
        fun C(Other: UObject): DebugCameraControllerSettingsViewModeIndex
        fun C(Other: Any): DebugCameraControllerSettingsViewModeIndex
    }
}

external open class DebugCameraControllerSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var CycleViewModes: Array<DebugCameraControllerSettingsViewModeIndex>

    companion object {
        fun Load(ResourceName: String): DebugCameraControllerSettings
        fun Find(Outer: UObject, ResourceName: String): DebugCameraControllerSettings
        fun GetDefaultObject(): DebugCameraControllerSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DebugCameraControllerSettings
        fun C(Other: UObject): DebugCameraControllerSettings
        fun C(Other: Any): DebugCameraControllerSettings
    }
}

external open class DebugCameraHUD(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : HUD {
    companion object {
        fun GetDefaultObject(): DebugCameraHUD
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DebugCameraHUD
        fun C(Other: UObject): DebugCameraHUD
        fun C(Other: Any): DebugCameraHUD
    }
}

external open class DebugDrawService : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DebugDrawService
        fun Find(Outer: UObject, ResourceName: String): DebugDrawService
        fun GetDefaultObject(): DebugDrawService
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DebugDrawService
        fun C(Other: UObject): DebugDrawService
        fun C(Other: Any): DebugDrawService
    }
}

external open class DecalActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var Decal: DecalComponent
    open var ArrowComponent: ArrowComponent
    open var SpriteComponent: BillboardComponent
    open var BoxComponent: BoxComponent
    open fun SetDecalMaterial(NewDecalMaterial: MaterialInterface)
    open fun GetDecalMaterial(): MaterialInterface
    open fun CreateDynamicMaterialInstance(): MaterialInstanceDynamic

    companion object {
        fun GetDefaultObject(): DecalActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DecalActor
        fun C(Other: UObject): DecalActor
        fun C(Other: Any): DecalActor
    }
}

external open class DemoNetConnection : NetConnection {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DemoNetConnection
        fun Find(Outer: UObject, ResourceName: String): DemoNetConnection
        fun GetDefaultObject(): DemoNetConnection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DemoNetConnection
        fun C(Other: UObject): DemoNetConnection
        fun C(Other: Any): DemoNetConnection
    }
}

external open class PendingNetGame : UObject {
    constructor()
    constructor(Outer: UObject)
    open var NetDriver: NetDriver
    open var DemoNetDriver: DemoNetDriver

    companion object {
        fun Load(ResourceName: String): PendingNetGame
        fun Find(Outer: UObject, ResourceName: String): PendingNetGame
        fun GetDefaultObject(): PendingNetGame
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PendingNetGame
        fun C(Other: UObject): PendingNetGame
        fun C(Other: Any): PendingNetGame
    }
}

external open class DemoPendingNetGame : PendingNetGame {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DemoPendingNetGame
        fun Find(Outer: UObject, ResourceName: String): DemoPendingNetGame
        fun GetDefaultObject(): DemoPendingNetGame
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DemoPendingNetGame
        fun C(Other: UObject): DemoPendingNetGame
        fun C(Other: Any): DemoPendingNetGame
    }
}

external open class DestructibleInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DestructibleInterface
        fun Find(Outer: UObject, ResourceName: String): DestructibleInterface
        fun GetDefaultObject(): DestructibleInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DestructibleInterface
        fun C(Other: UObject): DestructibleInterface
        fun C(Other: Any): DestructibleInterface
    }
}

external open class TextureLODGroup {
    open var Group: String /* "TEXTUREGROUP_World" | "TEXTUREGROUP_WorldNormalMap" | "TEXTUREGROUP_WorldSpecular" | "TEXTUREGROUP_Character" | "TEXTUREGROUP_CharacterNormalMap" | "TEXTUREGROUP_CharacterSpecular" | "TEXTUREGROUP_Weapon" | "TEXTUREGROUP_WeaponNormalMap" | "TEXTUREGROUP_WeaponSpecular" | "TEXTUREGROUP_Vehicle" | "TEXTUREGROUP_VehicleNormalMap" | "TEXTUREGROUP_VehicleSpecular" | "TEXTUREGROUP_Cinematic" | "TEXTUREGROUP_Effects" | "TEXTUREGROUP_EffectsNotFiltered" | "TEXTUREGROUP_Skybox" | "TEXTUREGROUP_UI" | "TEXTUREGROUP_Lightmap" | "TEXTUREGROUP_RenderTarget" | "TEXTUREGROUP_MobileFlattened" | "TEXTUREGROUP_ProcBuilding_Face" | "TEXTUREGROUP_ProcBuilding_LightMap" | "TEXTUREGROUP_Shadowmap" | "TEXTUREGROUP_ColorLookupTable" | "TEXTUREGROUP_Terrain_Heightmap" | "TEXTUREGROUP_Terrain_Weightmap" | "TEXTUREGROUP_Bokeh" | "TEXTUREGROUP_IESLightProfile" | "TEXTUREGROUP_Pixels2D" | "TEXTUREGROUP_HierarchicalLOD" | "TEXTUREGROUP_Impostor" | "TEXTUREGROUP_ImpostorNormalDepth" | "TEXTUREGROUP_8BitData" | "TEXTUREGROUP_16BitData" | "TEXTUREGROUP_Project01" | "TEXTUREGROUP_Project02" | "TEXTUREGROUP_Project03" | "TEXTUREGROUP_Project04" | "TEXTUREGROUP_Project05" | "TEXTUREGROUP_Project06" | "TEXTUREGROUP_Project07" | "TEXTUREGROUP_Project08" | "TEXTUREGROUP_Project09" | "TEXTUREGROUP_Project10" | "TEXTUREGROUP_Project11" | "TEXTUREGROUP_Project12" | "TEXTUREGROUP_Project13" | "TEXTUREGROUP_Project14" | "TEXTUREGROUP_Project15" | "TEXTUREGROUP_MAX" */
    open var LODBias: Number
    open var LODBias_Smaller: Number
    open var LODBias_Smallest: Number
    open var NumStreamedMips: Number
    open var MipGenSettings: String /* "TMGS_FromTextureGroup" | "TMGS_SimpleAverage" | "TMGS_Sharpen0" | "TMGS_Sharpen1" | "TMGS_Sharpen2" | "TMGS_Sharpen3" | "TMGS_Sharpen4" | "TMGS_Sharpen5" | "TMGS_Sharpen6" | "TMGS_Sharpen7" | "TMGS_Sharpen8" | "TMGS_Sharpen9" | "TMGS_Sharpen10" | "TMGS_NoMipmaps" | "TMGS_LeaveExistingMips" | "TMGS_Blur1" | "TMGS_Blur2" | "TMGS_Blur3" | "TMGS_Blur4" | "TMGS_Blur5" | "TMGS_Unfiltered" | "TMGS_MAX" */
    open var MinLODSize: Number
    open var MaxLODSize: Number
    open var MaxLODSize_Smaller: Number
    open var MaxLODSize_Smallest: Number
    open var OptionalLODBias: Number
    open var OptionalMaxLODSize: Number
    open var MinMagFilter: String
    open var MipFilter: String
    open var MipLoadOptions: String /* "Default" | "AllMips" | "OnlyFirstMip" | "ETextureMipLoadOptions_MAX" */
    open var HighPriorityLoad: Boolean
    open var DuplicateNonOptionalMips: Boolean
    open var Downscale: Number
    open var DownscaleOptions: String /* "Default" | "Unfiltered" | "SimpleAverage" | "Sharpen0" | "Sharpen1" | "Sharpen2" | "Sharpen3" | "Sharpen4" | "Sharpen5" | "Sharpen6" | "Sharpen7" | "Sharpen8" | "Sharpen9" | "Sharpen10" | "ETextureDownscaleOptions_MAX" */
    open var VirtualTextureTileCountBias: Number
    open var VirtualTextureTileSizeBias: Number
    open var LossyCompressionAmount: String /* "TLCA_Default" | "TLCA_None" | "TLCA_Lowest" | "TLCA_Low" | "TLCA_Medium" | "TLCA_High" | "TLCA_Highest" | "TLCA_MAX" */
    open fun clone(): TextureLODGroup

    companion object {
        fun C(Other: UObject): TextureLODGroup
        fun C(Other: Any): TextureLODGroup
    }
}

external open class TextureLODSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var TextureLODGroups: Array<TextureLODGroup>

    companion object {
        fun Load(ResourceName: String): TextureLODSettings
        fun Find(Outer: UObject, ResourceName: String): TextureLODSettings
        fun GetDefaultObject(): TextureLODSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextureLODSettings
        fun C(Other: UObject): TextureLODSettings
        fun C(Other: Any): TextureLODSettings
    }
}

external open class DeviceProfile : TextureLODSettings {
    constructor()
    constructor(Outer: UObject)
    open var DeviceType: String
    open var BaseProfileName: String
    open var Parent: UObject
    open var CVars: Array<String>

    companion object {
        fun Load(ResourceName: String): DeviceProfile
        fun Find(Outer: UObject, ResourceName: String): DeviceProfile
        fun GetDefaultObject(): DeviceProfile
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DeviceProfile
        fun C(Other: UObject): DeviceProfile
        fun C(Other: Any): DeviceProfile
    }
}

external open class DeviceProfileFragment : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DeviceProfileFragment
        fun Find(Outer: UObject, ResourceName: String): DeviceProfileFragment
        fun GetDefaultObject(): DeviceProfileFragment
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DeviceProfileFragment
        fun C(Other: UObject): DeviceProfileFragment
        fun C(Other: Any): DeviceProfileFragment
    }
}

external open class DeviceProfileManager : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Profiles: Array<UObject>

    companion object {
        fun Load(ResourceName: String): DeviceProfileManager
        fun Find(Outer: UObject, ResourceName: String): DeviceProfileManager
        fun GetDefaultObject(): DeviceProfileManager
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DeviceProfileManager
        fun C(Other: UObject): DeviceProfileManager
        fun C(Other: Any): DeviceProfileManager
    }
}

external open class Light(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var LightComponent: LightComponent
    open var bEnabled: Boolean
    open fun ToggleEnabled()
    open fun SetLightFunctionScale(NewLightFunctionScale: Vector)
    open fun SetLightFunctionMaterial(NewLightFunctionMaterial: MaterialInterface)
    open fun SetLightFunctionFadeDistance(NewLightFunctionFadeDistance: Number)
    open fun SetLightColor(NewLightColor: LinearColor)
    open fun SetEnabled(bSetEnabled: Boolean)
    open fun SetCastShadows(bNewValue: Boolean)
    open fun SetBrightness(NewBrightness: Number)
    open fun SetAffectTranslucentLighting(bNewValue: Boolean)
    open fun OnRep_bEnabled()
    open fun IsEnabled(): Boolean
    open fun GetLightColor(): LinearColor
    open fun GetBrightness(): Number

    companion object {
        fun GetDefaultObject(): Light
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Light
        fun C(Other: UObject): Light
        fun C(Other: Any): Light
    }
}

external open class LightmassDirectionalLightSettings : LightmassLightSettings {
    open var LightSourceAngle: Number
    override fun clone(): LightmassDirectionalLightSettings

    companion object {
        fun C(Other: UObject): LightmassDirectionalLightSettings
        fun C(Other: Any): LightmassDirectionalLightSettings
    }
}

external open class DirectionalLightComponent : LightComponent {
    constructor()
    constructor(Outer: UObject)
    open var ShadowCascadeBiasDistribution: Number
    open var bEnableLightShaftOcclusion: Boolean
    open var OcclusionMaskDarkness: Number
    open var OcclusionDepthRange: Number
    open var LightShaftOverrideDirection: Vector
    open var WholeSceneDynamicShadowRadius: Number
    open var DynamicShadowDistanceMovableLight: Number
    open var DynamicShadowDistanceStationaryLight: Number
    open var DynamicShadowCascades: Number
    open var CascadeDistributionExponent: Number
    open var CascadeTransitionFraction: Number
    open var ShadowDistanceFadeoutFraction: Number
    open var bUseInsetShadowsForMovableObjects: Boolean
    open var FarShadowCascadeCount: Number
    open var FarShadowDistance: Number
    open var DistanceFieldShadowDistance: Number
    open var LightSourceAngle: Number
    open var LightSourceSoftAngle: Number
    open var ShadowSourceAngleFactor: Number
    open var TraceDistance: Number
    open var bUsedAsAtmosphereSunLight: Boolean
    open var AtmosphereSunLightIndex: Number
    open var AtmosphereSunDiskColorScale: LinearColor
    open var bPerPixelAtmosphereTransmittance: Boolean
    open var bCastShadowsOnClouds: Boolean
    open var bCastShadowsOnAtmosphere: Boolean
    open var bCastCloudShadows: Boolean
    open var CloudShadowStrength: Number
    open var CloudShadowOnAtmosphereStrength: Number
    open var CloudShadowOnSurfaceStrength: Number
    open var CloudShadowDepthBias: Number
    open var CloudShadowExtent: Number
    open var CloudShadowMapResolutionScale: Number
    open var CloudShadowRaySampleCountScale: Number
    open var CloudScatteredLuminanceScale: LinearColor
    open var LightmassSettings: LightmassDirectionalLightSettings
    open var bCastModulatedShadows: Boolean
    open var ModulatedShadowColor: Color
    open var ShadowAmount: Number
    open fun SetShadowDistanceFadeoutFraction(NewValue: Number)
    open fun SetShadowAmount(NewValue: Number)
    open fun SetOcclusionMaskDarkness(NewValue: Number)
    open fun SetLightShaftOverrideDirection(NewValue: Vector)
    open fun SetEnableLightShaftOcclusion(bNewValue: Boolean)
    open fun SetDynamicShadowDistanceStationaryLight(NewValue: Number)
    open fun SetDynamicShadowDistanceMovableLight(NewValue: Number)
    open fun SetDynamicShadowCascades(NewValue: Number)
    open fun SetCascadeTransitionFraction(NewValue: Number)
    open fun SetCascadeDistributionExponent(NewValue: Number)
    open fun SetAtmosphereSunLightIndex(NewValue: Number)
    open fun SetAtmosphereSunLight(bNewValue: Boolean)

    companion object {
        fun Load(ResourceName: String): DirectionalLightComponent
        fun Find(Outer: UObject, ResourceName: String): DirectionalLightComponent
        fun GetDefaultObject(): DirectionalLightComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DirectionalLightComponent
        fun C(Other: UObject): DirectionalLightComponent
        fun C(Other: Any): DirectionalLightComponent
    }
}

external open class DirectionalLight(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Light {
    open var ArrowComponent: ArrowComponent
    open var DirectionalLightComponent: DirectionalLightComponent

    companion object {
        fun GetDefaultObject(): DirectionalLight
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DirectionalLight
        fun C(Other: UObject): DirectionalLight
        fun C(Other: Any): DirectionalLight
    }
}

external open class DistributionFloatConstant : DistributionFloat {
    constructor()
    constructor(Outer: UObject)
    open var Constant: Number

    companion object {
        fun Load(ResourceName: String): DistributionFloatConstant
        fun Find(Outer: UObject, ResourceName: String): DistributionFloatConstant
        fun GetDefaultObject(): DistributionFloatConstant
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DistributionFloatConstant
        fun C(Other: UObject): DistributionFloatConstant
        fun C(Other: Any): DistributionFloatConstant
    }
}

external open class DistributionFloatConstantCurve : DistributionFloat {
    constructor()
    constructor(Outer: UObject)
    open var ConstantCurve: InterpCurveFloat

    companion object {
        fun Load(ResourceName: String): DistributionFloatConstantCurve
        fun Find(Outer: UObject, ResourceName: String): DistributionFloatConstantCurve
        fun GetDefaultObject(): DistributionFloatConstantCurve
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DistributionFloatConstantCurve
        fun C(Other: UObject): DistributionFloatConstantCurve
        fun C(Other: Any): DistributionFloatConstantCurve
    }
}

external object DistributionParamMode {
    var DPM_Normal: String /* "DPM_Normal" */
    var DPM_Abs: String /* "DPM_Abs" */
    var DPM_Direct: String /* "DPM_Direct" */
    var DPM_MAX: String /* "DPM_MAX" */
}

external open class DistributionFloatParameterBase : DistributionFloatConstant {
    constructor()
    constructor(Outer: UObject)
    open var ParameterName: String
    open var MinInput: Number
    open var MaxInput: Number
    open var MinOutput: Number
    open var MaxOutput: Number
    open var ParamMode: String /* "DPM_Normal" | "DPM_Abs" | "DPM_Direct" | "DPM_MAX" */

    companion object {
        fun Load(ResourceName: String): DistributionFloatParameterBase
        fun Find(Outer: UObject, ResourceName: String): DistributionFloatParameterBase
        fun GetDefaultObject(): DistributionFloatParameterBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DistributionFloatParameterBase
        fun C(Other: UObject): DistributionFloatParameterBase
        fun C(Other: Any): DistributionFloatParameterBase
    }
}

external open class DistributionFloatParticleParameter : DistributionFloatParameterBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DistributionFloatParticleParameter
        fun Find(Outer: UObject, ResourceName: String): DistributionFloatParticleParameter
        fun GetDefaultObject(): DistributionFloatParticleParameter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DistributionFloatParticleParameter
        fun C(Other: UObject): DistributionFloatParticleParameter
        fun C(Other: Any): DistributionFloatParticleParameter
    }
}

external open class DistributionFloatUniform : DistributionFloat {
    constructor()
    constructor(Outer: UObject)
    open var Min: Number
    open var Max: Number

    companion object {
        fun Load(ResourceName: String): DistributionFloatUniform
        fun Find(Outer: UObject, ResourceName: String): DistributionFloatUniform
        fun GetDefaultObject(): DistributionFloatUniform
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DistributionFloatUniform
        fun C(Other: UObject): DistributionFloatUniform
        fun C(Other: Any): DistributionFloatUniform
    }
}

external open class InterpCurvePointVector2D {
    open var InVal: Number
    open var OutVal: Vector2D
    open var ArriveTangent: Vector2D
    open var LeaveTangent: Vector2D
    open var InterpMode: String /* "CIM_Linear" | "CIM_CurveAuto" | "CIM_Constant" | "CIM_CurveUser" | "CIM_CurveBreak" | "CIM_CurveAutoClamped" | "CIM_MAX" */
    open fun clone(): InterpCurvePointVector2D

    companion object {
        fun C(Other: UObject): InterpCurvePointVector2D
        fun C(Other: Any): InterpCurvePointVector2D
    }
}

external open class InterpCurveVector2D {
    open var Points: Array<InterpCurvePointVector2D>
    open var bIsLooped: Boolean
    open var LoopKeyOffset: Number
    open fun clone(): InterpCurveVector2D

    companion object {
        fun C(Other: UObject): InterpCurveVector2D
        fun C(Other: Any): InterpCurveVector2D
    }
}

external open class DistributionFloatUniformCurve : DistributionFloat {
    constructor()
    constructor(Outer: UObject)
    open var ConstantCurve: InterpCurveVector2D

    companion object {
        fun Load(ResourceName: String): DistributionFloatUniformCurve
        fun Find(Outer: UObject, ResourceName: String): DistributionFloatUniformCurve
        fun GetDefaultObject(): DistributionFloatUniformCurve
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DistributionFloatUniformCurve
        fun C(Other: UObject): DistributionFloatUniformCurve
        fun C(Other: Any): DistributionFloatUniformCurve
    }
}

external object EDistributionVectorLockFlags {
    var EDVLF_None: String /* "EDVLF_None" */
    var EDVLF_XY: String /* "EDVLF_XY" */
    var EDVLF_XZ: String /* "EDVLF_XZ" */
    var EDVLF_YZ: String /* "EDVLF_YZ" */
    var EDVLF_XYZ: String /* "EDVLF_XYZ" */
    var EDVLF_MAX: String /* "EDVLF_MAX" */
}

external open class DistributionVectorConstant : DistributionVector {
    constructor()
    constructor(Outer: UObject)
    open var Constant: Vector
    open var bLockAxes: Boolean
    open var LockedAxes: String /* "EDVLF_None" | "EDVLF_XY" | "EDVLF_XZ" | "EDVLF_YZ" | "EDVLF_XYZ" | "EDVLF_MAX" */

    companion object {
        fun Load(ResourceName: String): DistributionVectorConstant
        fun Find(Outer: UObject, ResourceName: String): DistributionVectorConstant
        fun GetDefaultObject(): DistributionVectorConstant
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DistributionVectorConstant
        fun C(Other: UObject): DistributionVectorConstant
        fun C(Other: Any): DistributionVectorConstant
    }
}

external open class DistributionVectorConstantCurve : DistributionVector {
    constructor()
    constructor(Outer: UObject)
    open var ConstantCurve: InterpCurveVector
    open var bLockAxes: Boolean
    open var LockedAxes: String /* "EDVLF_None" | "EDVLF_XY" | "EDVLF_XZ" | "EDVLF_YZ" | "EDVLF_XYZ" | "EDVLF_MAX" */

    companion object {
        fun Load(ResourceName: String): DistributionVectorConstantCurve
        fun Find(Outer: UObject, ResourceName: String): DistributionVectorConstantCurve
        fun GetDefaultObject(): DistributionVectorConstantCurve
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DistributionVectorConstantCurve
        fun C(Other: UObject): DistributionVectorConstantCurve
        fun C(Other: Any): DistributionVectorConstantCurve
    }
}

external open class DistributionVectorParameterBase : DistributionVectorConstant {
    constructor()
    constructor(Outer: UObject)
    open var ParameterName: String
    open var MinInput: Vector
    open var MaxInput: Vector
    open var MinOutput: Vector
    open var MaxOutput: Vector
    open var ParamModes: String /* "DPM_Normal" | "DPM_Abs" | "DPM_Direct" | "DPM_MAX" */

    companion object {
        fun Load(ResourceName: String): DistributionVectorParameterBase
        fun Find(Outer: UObject, ResourceName: String): DistributionVectorParameterBase
        fun GetDefaultObject(): DistributionVectorParameterBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DistributionVectorParameterBase
        fun C(Other: UObject): DistributionVectorParameterBase
        fun C(Other: Any): DistributionVectorParameterBase
    }
}

external open class DistributionVectorParticleParameter : DistributionVectorParameterBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DistributionVectorParticleParameter
        fun Find(Outer: UObject, ResourceName: String): DistributionVectorParticleParameter
        fun GetDefaultObject(): DistributionVectorParticleParameter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DistributionVectorParticleParameter
        fun C(Other: UObject): DistributionVectorParticleParameter
        fun C(Other: Any): DistributionVectorParticleParameter
    }
}

external object EDistributionVectorMirrorFlags {
    var EDVMF_Same: String /* "EDVMF_Same" */
    var EDVMF_Different: String /* "EDVMF_Different" */
    var EDVMF_Mirror: String /* "EDVMF_Mirror" */
    var EDVMF_MAX: String /* "EDVMF_MAX" */
}

external open class DistributionVectorUniform : DistributionVector {
    constructor()
    constructor(Outer: UObject)
    open var Max: Vector
    open var Min: Vector
    open var bLockAxes: Boolean
    open var LockedAxes: String /* "EDVLF_None" | "EDVLF_XY" | "EDVLF_XZ" | "EDVLF_YZ" | "EDVLF_XYZ" | "EDVLF_MAX" */
    open var MirrorFlags: String /* "EDVMF_Same" | "EDVMF_Different" | "EDVMF_Mirror" | "EDVMF_MAX" */
    open var bUseExtremes: Boolean

    companion object {
        fun Load(ResourceName: String): DistributionVectorUniform
        fun Find(Outer: UObject, ResourceName: String): DistributionVectorUniform
        fun GetDefaultObject(): DistributionVectorUniform
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DistributionVectorUniform
        fun C(Other: UObject): DistributionVectorUniform
        fun C(Other: Any): DistributionVectorUniform
    }
}

external open class TwoVectors {
    open var v1: Vector
    open var v2: Vector
    open fun clone(): TwoVectors

    companion object {
        fun C(Other: UObject): TwoVectors
        fun C(Other: Any): TwoVectors
    }
}

external open class InterpCurvePointTwoVectors {
    open var InVal: Number
    open var OutVal: TwoVectors
    open var ArriveTangent: TwoVectors
    open var LeaveTangent: TwoVectors
    open var InterpMode: String /* "CIM_Linear" | "CIM_CurveAuto" | "CIM_Constant" | "CIM_CurveUser" | "CIM_CurveBreak" | "CIM_CurveAutoClamped" | "CIM_MAX" */
    open fun clone(): InterpCurvePointTwoVectors

    companion object {
        fun C(Other: UObject): InterpCurvePointTwoVectors
        fun C(Other: Any): InterpCurvePointTwoVectors
    }
}

external open class InterpCurveTwoVectors {
    open var Points: Array<InterpCurvePointTwoVectors>
    open var bIsLooped: Boolean
    open var LoopKeyOffset: Number
    open fun clone(): InterpCurveTwoVectors

    companion object {
        fun C(Other: UObject): InterpCurveTwoVectors
        fun C(Other: Any): InterpCurveTwoVectors
    }
}

external open class DistributionVectorUniformCurve : DistributionVector {
    constructor()
    constructor(Outer: UObject)
    open var ConstantCurve: InterpCurveTwoVectors
    open var bLockAxes1: Boolean
    open var bLockAxes2: Boolean
    open var LockedAxes: String /* "EDVLF_None" | "EDVLF_XY" | "EDVLF_XZ" | "EDVLF_YZ" | "EDVLF_XYZ" | "EDVLF_MAX" */
    open var MirrorFlags: String /* "EDVMF_Same" | "EDVMF_Different" | "EDVMF_Mirror" | "EDVMF_MAX" */
    open var bUseExtremes: Boolean

    companion object {
        fun Load(ResourceName: String): DistributionVectorUniformCurve
        fun Find(Outer: UObject, ResourceName: String): DistributionVectorUniformCurve
        fun GetDefaultObject(): DistributionVectorUniformCurve
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DistributionVectorUniformCurve
        fun C(Other: UObject): DistributionVectorUniformCurve
        fun C(Other: Any): DistributionVectorUniformCurve
    }
}

external open class MaterialSpriteElement {
    open var Material: MaterialInterface
    open var DistanceToOpacityCurve: CurveFloat
    open var bSizeIsInScreenSpace: Boolean
    open var BaseSizeX: Number
    open var BaseSizeY: Number
    open var DistanceToSizeCurve: CurveFloat
    open fun clone(): MaterialSpriteElement

    companion object {
        fun C(Other: UObject): MaterialSpriteElement
        fun C(Other: Any): MaterialSpriteElement
    }
}

external open class MaterialBillboardComponent : PrimitiveComponent {
    constructor()
    constructor(Outer: UObject)
    open var Elements: Array<MaterialSpriteElement>
    open fun SetElements(NewElements: Array<MaterialSpriteElement>)
    open fun AddElement(Material: MaterialInterface, DistanceToOpacityCurve: CurveFloat, bSizeIsInScreenSpace: Boolean, BaseSizeX: Number, BaseSizeY: Number, DistanceToSizeCurve: CurveFloat)

    companion object {
        fun Load(ResourceName: String): MaterialBillboardComponent
        fun Find(Outer: UObject, ResourceName: String): MaterialBillboardComponent
        fun GetDefaultObject(): MaterialBillboardComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialBillboardComponent
        fun C(Other: UObject): MaterialBillboardComponent
        fun C(Other: Any): MaterialBillboardComponent
    }
}

external open class DocumentationActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var DocumentLink: String
    open var Billboard: MaterialBillboardComponent

    companion object {
        fun GetDefaultObject(): DocumentationActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DocumentationActor
        fun C(Other: UObject): DocumentationActor
        fun C(Other: Any): DocumentationActor
    }
}

external open class DPICustomScalingRule : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DPICustomScalingRule
        fun Find(Outer: UObject, ResourceName: String): DPICustomScalingRule
        fun GetDefaultObject(): DPICustomScalingRule
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DPICustomScalingRule
        fun C(Other: UObject): DPICustomScalingRule
        fun C(Other: Any): DPICustomScalingRule
    }
}

external open class DrawSphereComponent : SphereComponent {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DrawSphereComponent
        fun Find(Outer: UObject, ResourceName: String): DrawSphereComponent
        fun GetDefaultObject(): DrawSphereComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DrawSphereComponent
        fun C(Other: UObject): DrawSphereComponent
        fun C(Other: Any): DrawSphereComponent
    }
}

external open class GraphNodeContextMenuContext : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Blueprint: Blueprint
    open var Graph: EdGraph
    open var UNode: EdGraphNode
    open var bIsDebugging: Boolean

    companion object {
        fun Load(ResourceName: String): GraphNodeContextMenuContext
        fun Find(Outer: UObject, ResourceName: String): GraphNodeContextMenuContext
        fun GetDefaultObject(): GraphNodeContextMenuContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GraphNodeContextMenuContext
        fun C(Other: UObject): GraphNodeContextMenuContext
        fun C(Other: Any): GraphNodeContextMenuContext
    }
}

external open class EdGraphNode_Documentation : EdGraphNode {
    constructor()
    constructor(Outer: UObject)
    open var Link: String
    open var Excerpt: String

    companion object {
        fun Load(ResourceName: String): EdGraphNode_Documentation
        fun Find(Outer: UObject, ResourceName: String): EdGraphNode_Documentation
        fun GetDefaultObject(): EdGraphNode_Documentation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EdGraphNode_Documentation
        fun C(Other: UObject): EdGraphNode_Documentation
        fun C(Other: Any): EdGraphNode_Documentation
    }
}

external open class ViewModeUtils : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ViewModeUtils
        fun Find(Outer: UObject, ResourceName: String): ViewModeUtils
        fun GetDefaultObject(): ViewModeUtils
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ViewModeUtils
        fun C(Other: UObject): ViewModeUtils
        fun C(Other: Any): ViewModeUtils
    }
}

external open class EngineBaseTypes : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EngineBaseTypes
        fun Find(Outer: UObject, ResourceName: String): EngineBaseTypes
        fun GetDefaultObject(): EngineBaseTypes
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EngineBaseTypes
        fun C(Other: UObject): EngineBaseTypes
        fun C(Other: Any): EngineBaseTypes
    }
}

external open class EngineHandlerComponentFactory : HandlerComponentFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EngineHandlerComponentFactory
        fun Find(Outer: UObject, ResourceName: String): EngineHandlerComponentFactory
        fun GetDefaultObject(): EngineHandlerComponentFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EngineHandlerComponentFactory
        fun C(Other: UObject): EngineHandlerComponentFactory
        fun C(Other: Any): EngineHandlerComponentFactory
    }
}

external open class EngineMessage : LocalMessage {
    constructor()
    constructor(Outer: UObject)
    open var FailedPlaceMessage: String
    open var MaxedOutMessage: String
    open var EnteredMessage: String
    open var LeftMessage: String
    open var GlobalNameChange: String
    open var SpecEnteredMessage: String
    open var NewPlayerMessage: String
    open var NewSpecMessage: String

    companion object {
        fun Load(ResourceName: String): EngineMessage
        fun Find(Outer: UObject, ResourceName: String): EngineMessage
        fun GetDefaultObject(): EngineMessage
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EngineMessage
        fun C(Other: UObject): EngineMessage
        fun C(Other: Any): EngineMessage
    }
}

external open class EngineTypes : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EngineTypes
        fun Find(Outer: UObject, ResourceName: String): EngineTypes
        fun GetDefaultObject(): EngineTypes
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EngineTypes
        fun C(Other: UObject): EngineTypes
        fun C(Other: Any): EngineTypes
    }
}

external open class ExponentialHeightFogData {
    open var FogDensity: Number
    open var FogHeightFalloff: Number
    open var FogHeightOffset: Number
    open fun clone(): ExponentialHeightFogData

    companion object {
        fun C(Other: UObject): ExponentialHeightFogData
        fun C(Other: Any): ExponentialHeightFogData
    }
}

external open class ExponentialHeightFogComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var FogDensity: Number
    open var FogHeightFalloff: Number
    open var SecondFogData: ExponentialHeightFogData
    open var FogInscatteringColor: LinearColor
    open var InscatteringColorCubemap: TextureCube
    open var InscatteringColorCubemapAngle: Number
    open var InscatteringTextureTint: LinearColor
    open var FullyDirectionalInscatteringColorDistance: Number
    open var NonDirectionalInscatteringColorDistance: Number
    open var DirectionalInscatteringExponent: Number
    open var DirectionalInscatteringStartDistance: Number
    open var DirectionalInscatteringColor: LinearColor
    open var FogMaxOpacity: Number
    open var StartDistance: Number
    open var FogCutoffDistance: Number
    open var bEnableVolumetricFog: Boolean
    open var VolumetricFogScatteringDistribution: Number
    open var VolumetricFogAlbedo: Color
    open var VolumetricFogEmissive: LinearColor
    open var VolumetricFogExtinctionScale: Number
    open var VolumetricFogDistance: Number
    open var VolumetricFogStaticLightingScatteringIntensity: Number
    open var bOverrideLightColorsWithFogInscatteringColors: Boolean
    open fun SetVolumetricFogScatteringDistribution(NewValue: Number)
    open fun SetVolumetricFogExtinctionScale(NewValue: Number)
    open fun SetVolumetricFogEmissive(NewValue: LinearColor)
    open fun SetVolumetricFogDistance(NewValue: Number)
    open fun SetVolumetricFogAlbedo(NewValue: Color)
    open fun SetVolumetricFog(bNewValue: Boolean)
    open fun SetStartDistance(Value: Number)
    open fun SetNonDirectionalInscatteringColorDistance(Value: Number)
    open fun SetInscatteringTextureTint(Value: LinearColor)
    open fun SetInscatteringColorCubemapAngle(Value: Number)
    open fun SetInscatteringColorCubemap(Value: TextureCube)
    open fun SetFullyDirectionalInscatteringColorDistance(Value: Number)
    open fun SetFogMaxOpacity(Value: Number)
    open fun SetFogInscatteringColor(Value: LinearColor)
    open fun SetFogHeightFalloff(Value: Number)
    open fun SetFogDensity(Value: Number)
    open fun SetFogCutoffDistance(Value: Number)
    open fun SetDirectionalInscatteringStartDistance(Value: Number)
    open fun SetDirectionalInscatteringExponent(Value: Number)
    open fun SetDirectionalInscatteringColor(Value: LinearColor)

    companion object {
        fun Load(ResourceName: String): ExponentialHeightFogComponent
        fun Find(Outer: UObject, ResourceName: String): ExponentialHeightFogComponent
        fun GetDefaultObject(): ExponentialHeightFogComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ExponentialHeightFogComponent
        fun C(Other: UObject): ExponentialHeightFogComponent
        fun C(Other: Any): ExponentialHeightFogComponent
    }
}

external open class ExponentialHeightFog(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Info {
    open var Component: ExponentialHeightFogComponent
    open var bEnabled: Boolean
    open fun OnRep_bEnabled()

    companion object {
        fun GetDefaultObject(): ExponentialHeightFog
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ExponentialHeightFog
        fun C(Other: UObject): ExponentialHeightFog
        fun C(Other: Any): ExponentialHeightFog
    }
}

external open class FloatingPawnMovement : PawnMovementComponent {
    constructor()
    constructor(Outer: UObject)
    open var MaxSpeed: Number
    open var Acceleration: Number
    open var Deceleration: Number
    open var TurningBoost: Number
    open var bPositionCorrected: Boolean

    companion object {
        fun Load(ResourceName: String): FloatingPawnMovement
        fun Find(Outer: UObject, ResourceName: String): FloatingPawnMovement
        fun GetDefaultObject(): FloatingPawnMovement
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FloatingPawnMovement
        fun C(Other: UObject): FloatingPawnMovement
        fun C(Other: Any): FloatingPawnMovement
    }
}

external object EFontLayoutMethod {
    var Metrics: String /* "Metrics" */
    var BoundingBox: String /* "BoundingBox" */
    var EFontLayoutMethod_MAX: String /* "EFontLayoutMethod_MAX" */
}

external open class FontFace : UObject {
    constructor()
    constructor(Outer: UObject)
    open var SourceFilename: String
    open var Hinting: String /* "Default" | "Auto" | "AutoLight" | "Monochrome" | "None" | "EFontHinting_MAX" */
    open var LoadingPolicy: String /* "LazyLoad" | "Stream" | "Inline" | "EFontLoadingPolicy_MAX" */
    open var LayoutMethod: String /* "Metrics" | "BoundingBox" | "EFontLayoutMethod_MAX" */
    open var FontFaceData: Array<Number>
    open var SubFaces: Array<String>

    companion object {
        fun Load(ResourceName: String): FontFace
        fun Find(Outer: UObject, ResourceName: String): FontFace
        fun GetDefaultObject(): FontFace
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FontFace
        fun C(Other: UObject): FontFace
        fun C(Other: Any): FontFace
    }
}

external open class GameEngine : Engine {
    constructor()
    constructor(Outer: UObject)
    open var MaxDeltaTime: Number
    open var ServerFlushLogInterval: Number
    open var GameInstance: GameInstance

    companion object {
        fun Load(ResourceName: String): GameEngine
        fun Find(Outer: UObject, ResourceName: String): GameEngine
        fun GetDefaultObject(): GameEngine
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameEngine
        fun C(Other: UObject): GameEngine
        fun C(Other: Any): GameEngine
    }
}

external interface `T$656` {
    var Key: String
    var Value: String
}

external interface `T$657` {
    var OutActors: Array<Actor>
}

external interface `T$658` {
    var OutActors: Array<Actor>
}

external interface `T$659` {
    var OutActors: Array<Actor>
}

external interface `T$660` {
    var OutActors: Array<Actor>
}

external interface `T$661` {
    var Center: Vector
    var BoxExtent: Vector
}

external interface `T$662` {
    var Seconds: Number
    var PartialSeconds: Number
}

external interface `T$663` {
    var OutHit: HitResult
    var OutPathPositions: Array<Vector>
    var OutLastTraceDestination: Vector
    var `$`: Boolean
}

external interface `T$664` {
    var OutHit: HitResult
    var OutPathPositions: Array<Vector>
    var OutLastTraceDestination: Vector
    var `$`: Boolean
}

external open class GameplayStatics : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GameplayStatics
        fun Find(Outer: UObject, ResourceName: String): GameplayStatics
        fun GetDefaultObject(): GameplayStatics
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayStatics
        fun UnRetainAllSoundsInSoundClass(InSoundClass: SoundClass)
        fun UnloadStreamLevelBySoftObjectPtr(WorldContextObject: UObject, Level: World, LatentInfo: LatentActionInfo, bShouldBlockOnUnload: Boolean)
        fun UnloadStreamLevel(WorldContextObject: UObject, LevelName: String, LatentInfo: LatentActionInfo, bShouldBlockOnUnload: Boolean)
        fun SuggestProjectileVelocity_CustomArc(WorldContextObject: UObject, OutLaunchVelocity: Vector = definedExternally, StartPos: Vector = definedExternally, EndPos: Vector = definedExternally, OverrideGravityZ: Number = definedExternally, ArcParam: Number = definedExternally): `T$320`
        fun SpawnSoundAttached(Sound: SoundBase, AttachToComponent: SceneComponent, AttachPointName: String, Location: Vector, Rotation: Rotator, LocationType: String /* "KeepRelativeOffset" | "KeepWorldPosition" | "SnapToTarget" | "SnapToTargetIncludingScale" | "EAttachLocation_MAX" */, bStopWhenAttachedToDestroyed: Boolean, VolumeMultiplier: Number, PitchMultiplier: Number, StartTime: Number, AttenuationSettings: SoundAttenuation, ConcurrencySettings: SoundConcurrency, bAutoDestroy: Boolean): AudioComponent
        fun SpawnSoundAtLocation(WorldContextObject: UObject, Sound: SoundBase, Location: Vector, Rotation: Rotator, VolumeMultiplier: Number, PitchMultiplier: Number, StartTime: Number, AttenuationSettings: SoundAttenuation, ConcurrencySettings: SoundConcurrency, bAutoDestroy: Boolean): AudioComponent
        fun SpawnSound2D(WorldContextObject: UObject, Sound: SoundBase, VolumeMultiplier: Number, PitchMultiplier: Number, StartTime: Number, ConcurrencySettings: SoundConcurrency, bPersistAcrossLevelTransition: Boolean, bAutoDestroy: Boolean): AudioComponent
        fun SpawnObject(ObjectClass: UnrealEngineClass, Outer: UObject): UObject
        fun SpawnForceFeedbackAttached(ForceFeedbackEffect: ForceFeedbackEffect, AttachToComponent: SceneComponent, AttachPointName: String, Location: Vector, Rotation: Rotator, LocationType: String /* "KeepRelativeOffset" | "KeepWorldPosition" | "SnapToTarget" | "SnapToTargetIncludingScale" | "EAttachLocation_MAX" */, bStopWhenAttachedToDestroyed: Boolean, bLooping: Boolean, IntensityMultiplier: Number, StartTime: Number, AttenuationSettings: ForceFeedbackAttenuation, bAutoDestroy: Boolean): ForceFeedbackComponent
        fun SpawnForceFeedbackAtLocation(WorldContextObject: UObject, ForceFeedbackEffect: ForceFeedbackEffect, Location: Vector, Rotation: Rotator, bLooping: Boolean, IntensityMultiplier: Number, StartTime: Number, AttenuationSettings: ForceFeedbackAttenuation, bAutoDestroy: Boolean): ForceFeedbackComponent
        fun SpawnEmitterAttached(EmitterTemplate: ParticleSystem, AttachToComponent: SceneComponent, AttachPointName: String, Location: Vector, Rotation: Rotator, Scale: Vector, LocationType: String /* "KeepRelativeOffset" | "KeepWorldPosition" | "SnapToTarget" | "SnapToTargetIncludingScale" | "EAttachLocation_MAX" */, bAutoDestroy: Boolean, PoolingMethod: String /* "None" | "AutoRelease" | "ManualRelease" | "ManualRelease_OnComplete" | "FreeInPool" | "EPSCPoolMethod_MAX" */, bAutoActivate: Boolean): ParticleSystemComponent
        fun SpawnEmitterAtLocation(WorldContextObject: UObject, EmitterTemplate: ParticleSystem, Location: Vector, Rotation: Rotator, Scale: Vector, bAutoDestroy: Boolean, PoolingMethod: String /* "None" | "AutoRelease" | "ManualRelease" | "ManualRelease_OnComplete" | "FreeInPool" | "EPSCPoolMethod_MAX" */, bAutoActivateSystem: Boolean): ParticleSystemComponent
        fun SpawnDialogueAttached(Dialogue: DialogueWave, Context: DialogueContext, AttachToComponent: SceneComponent, AttachPointName: String, Location: Vector, Rotation: Rotator, LocationType: String /* "KeepRelativeOffset" | "KeepWorldPosition" | "SnapToTarget" | "SnapToTargetIncludingScale" | "EAttachLocation_MAX" */, bStopWhenAttachedToDestroyed: Boolean, VolumeMultiplier: Number, PitchMultiplier: Number, StartTime: Number, AttenuationSettings: SoundAttenuation, bAutoDestroy: Boolean): AudioComponent
        fun SpawnDialogueAtLocation(WorldContextObject: UObject, Dialogue: DialogueWave, Context: DialogueContext, Location: Vector, Rotation: Rotator, VolumeMultiplier: Number, PitchMultiplier: Number, StartTime: Number, AttenuationSettings: SoundAttenuation, bAutoDestroy: Boolean): AudioComponent
        fun SpawnDialogue2D(WorldContextObject: UObject, Dialogue: DialogueWave, Context: DialogueContext, VolumeMultiplier: Number, PitchMultiplier: Number, StartTime: Number, bAutoDestroy: Boolean): AudioComponent
        fun SpawnDecalAttached(DecalMaterial: MaterialInterface, DecalSize: Vector, AttachToComponent: SceneComponent, AttachPointName: String, Location: Vector, Rotation: Rotator, LocationType: String /* "KeepRelativeOffset" | "KeepWorldPosition" | "SnapToTarget" | "SnapToTargetIncludingScale" | "EAttachLocation_MAX" */, LifeSpan: Number): DecalComponent
        fun SpawnDecalAtLocation(WorldContextObject: UObject, DecalMaterial: MaterialInterface, DecalSize: Vector, Location: Vector, Rotation: Rotator, LifeSpan: Number): DecalComponent
        fun SetWorldOriginLocation(WorldContextObject: UObject, NewLocation: IntVector)
        fun SetViewportMouseCaptureMode(WorldContextObject: UObject, MouseCaptureMode: String /* "NoCapture" | "CapturePermanently" | "CapturePermanently_IncludingInitialMouseDown" | "CaptureDuringMouseDown" | "CaptureDuringRightMouseDown" | "EMouseCaptureMode_MAX" */)
        fun SetSubtitlesEnabled(bEnabled: Boolean)
        fun SetSoundMixClassOverride(WorldContextObject: UObject, InSoundMixModifier: SoundMix, InSoundClass: SoundClass, Volume: Number, Pitch: Number, FadeInTime: Number, bApplyToChildren: Boolean)
        fun SetSoundClassDistanceScale(WorldContextObject: UObject, SoundClass: SoundClass, DistanceAttenuationScale: Number, TimeSec: Number)
        fun SetPlayerControllerID(Player: PlayerController, ControllerId: Number)
        fun SetMaxAudioChannelsScaled(WorldContextObject: UObject, MaxChannelCountScale: Number)
        fun SetGlobalTimeDilation(WorldContextObject: UObject, TimeDilation: Number)
        fun SetGlobalPitchModulation(WorldContextObject: UObject, PitchModulation: Number, TimeSec: Number)
        fun SetGlobalListenerFocusParameters(WorldContextObject: UObject, FocusAzimuthScale: Number, NonFocusAzimuthScale: Number, FocusDistanceScale: Number, NonFocusDistanceScale: Number, FocusVolumeScale: Number, NonFocusVolumeScale: Number, FocusPriorityScale: Number, NonFocusPriorityScale: Number)
        fun SetGamePaused(WorldContextObject: UObject, bPaused: Boolean): Boolean
        fun SetForceDisableSplitscreen(WorldContextObject: UObject, bDisable: Boolean)
        fun SetEnableWorldRendering(WorldContextObject: UObject, bEnable: Boolean)
        fun SetBaseSoundMix(WorldContextObject: UObject, InSoundMix: SoundMix)
        fun SaveGameToSlot(SaveGameObject: SaveGame, SlotName: String, UserIndex: Number): Boolean
        fun RemovePlayer(Player: PlayerController, bDestroyPawn: Boolean)
        fun RebaseZeroOriginOntoLocal(WorldContextObject: UObject, WorldLocation: Vector): Vector
        fun RebaseLocalOriginOntoZero(WorldContextObject: UObject, WorldLocation: Vector): Vector
        fun PushSoundMixModifier(WorldContextObject: UObject, InSoundMixModifier: SoundMix)
        fun ProjectWorldToScreen(Player: PlayerController, WorldPosition: Vector, ScreenPosition: Vector2D = definedExternally, bPlayerViewportRelative: Boolean = definedExternally): `T$192`
        fun PrimeSound(InSound: SoundBase)
        fun PrimeAllSoundsInSoundClass(InSoundClass: SoundClass)
        fun PopSoundMixModifier(WorldContextObject: UObject, InSoundMixModifier: SoundMix)
        fun PlayWorldCameraShake(WorldContextObject: UObject, Shake: UnrealEngineClass, Epicenter: Vector, InnerRadius: Number, OuterRadius: Number, Falloff: Number, bOrientShakeTowardsEpicenter: Boolean)
        fun PlaySoundAtLocation(WorldContextObject: UObject, Sound: SoundBase, Location: Vector, Rotation: Rotator, VolumeMultiplier: Number, PitchMultiplier: Number, StartTime: Number, AttenuationSettings: SoundAttenuation, ConcurrencySettings: SoundConcurrency, OwningActor: Actor)
        fun PlaySound2D(WorldContextObject: UObject, Sound: SoundBase, VolumeMultiplier: Number, PitchMultiplier: Number, StartTime: Number, ConcurrencySettings: SoundConcurrency, OwningActor: Actor, bIsUISound: Boolean)
        fun PlayDialogueAtLocation(WorldContextObject: UObject, Dialogue: DialogueWave, Context: DialogueContext, Location: Vector, Rotation: Rotator, VolumeMultiplier: Number, PitchMultiplier: Number, StartTime: Number, AttenuationSettings: SoundAttenuation)
        fun PlayDialogue2D(WorldContextObject: UObject, Dialogue: DialogueWave, Context: DialogueContext, VolumeMultiplier: Number, PitchMultiplier: Number, StartTime: Number)
        fun ParseOption(Options: String, Key: String): String
        fun OpenLevelBySoftObjectPtr(WorldContextObject: UObject, Level: World, bAbsolute: Boolean, Options: String)
        fun OpenLevel(WorldContextObject: UObject, LevelName: String, bAbsolute: Boolean, Options: String)
        fun MakeHitResult(bBlockingHit: Boolean, bInitialOverlap: Boolean, Time: Number, Distance: Number, Location: Vector, ImpactPoint: Vector, Normal: Vector, ImpactNormal: Vector, PhysMat: PhysicalMaterial, HitActor: Actor, HitComponent: PrimitiveComponent, HitBoneName: String, HitItem: Number, ElementIndex: Number, FaceIndex: Number, TraceStart: Vector, TraceEnd: Vector): HitResult
        fun LoadStreamLevelBySoftObjectPtr(WorldContextObject: UObject, Level: World, bMakeVisibleAfterLoad: Boolean, bShouldBlockOnLoad: Boolean, LatentInfo: LatentActionInfo)
        fun LoadStreamLevel(WorldContextObject: UObject, LevelName: String, bMakeVisibleAfterLoad: Boolean, bShouldBlockOnLoad: Boolean, LatentInfo: LatentActionInfo)
        fun LoadGameFromSlot(SlotName: String, UserIndex: Number): SaveGame
        fun IsSplitscreenForceDisabled(WorldContextObject: UObject): Boolean
        fun IsGamePaused(WorldContextObject: UObject): Boolean
        fun HasOption(Options: String, InKey: String): Boolean
        fun HasLaunchOption(OptionToCheck: String): Boolean
        fun GrassOverlappingSphereCount(WorldContextObject: UObject, StaticMesh: StaticMesh, CenterPosition: Vector, Radius: Number): Number
        fun GetWorldOriginLocation(WorldContextObject: UObject): IntVector
        fun GetWorldDeltaSeconds(WorldContextObject: UObject): Number
        fun GetViewProjectionMatrix(DesiredView: MinimalViewInfo, ViewMatrix: Matrix = definedExternally, ProjectionMatrix: Matrix = definedExternally, ViewProjectionMatrix: Matrix = definedExternally): `T$151`
        fun GetViewportMouseCaptureMode(WorldContextObject: UObject): String /* "NoCapture" | "CapturePermanently" | "CapturePermanently_IncludingInitialMouseDown" | "CaptureDuringMouseDown" | "CaptureDuringRightMouseDown" | "EMouseCaptureMode_MAX" */
        fun GetUnpausedTimeSeconds(WorldContextObject: UObject): Number
        fun GetTimeSeconds(WorldContextObject: UObject): Number
        fun GetSurfaceType(Hit: HitResult): String /* "SurfaceType_Default" | "SurfaceType1" | "SurfaceType2" | "SurfaceType3" | "SurfaceType4" | "SurfaceType5" | "SurfaceType6" | "SurfaceType7" | "SurfaceType8" | "SurfaceType9" | "SurfaceType10" | "SurfaceType11" | "SurfaceType12" | "SurfaceType13" | "SurfaceType14" | "SurfaceType15" | "SurfaceType16" | "SurfaceType17" | "SurfaceType18" | "SurfaceType19" | "SurfaceType20" | "SurfaceType21" | "SurfaceType22" | "SurfaceType23" | "SurfaceType24" | "SurfaceType25" | "SurfaceType26" | "SurfaceType27" | "SurfaceType28" | "SurfaceType29" | "SurfaceType30" | "SurfaceType31" | "SurfaceType32" | "SurfaceType33" | "SurfaceType34" | "SurfaceType35" | "SurfaceType36" | "SurfaceType37" | "SurfaceType38" | "SurfaceType39" | "SurfaceType40" | "SurfaceType41" | "SurfaceType42" | "SurfaceType43" | "SurfaceType44" | "SurfaceType45" | "SurfaceType46" | "SurfaceType47" | "SurfaceType48" | "SurfaceType49" | "SurfaceType50" | "SurfaceType51" | "SurfaceType52" | "SurfaceType53" | "SurfaceType54" | "SurfaceType55" | "SurfaceType56" | "SurfaceType57" | "SurfaceType58" | "SurfaceType59" | "SurfaceType60" | "SurfaceType61" | "SurfaceType62" | "SurfaceType_Max" | "EPhysicalSurface_MAX" */
        fun GetStreamingLevel(WorldContextObject: UObject, PackageName: String): LevelStreaming
        fun GetRealTimeSeconds(WorldContextObject: UObject): Number
        fun GetPlayerPawn(WorldContextObject: UObject, PlayerIndex: Number): Pawn
        fun GetPlayerControllerID(Player: PlayerController): Number
        fun GetPlayerControllerFromID(WorldContextObject: UObject, ControllerId: Number): PlayerController
        fun GetPlayerController(WorldContextObject: UObject, PlayerIndex: Number): PlayerController
        fun GetPlayerCharacter(WorldContextObject: UObject, PlayerIndex: Number): Character
        fun GetPlayerCameraManager(WorldContextObject: UObject, PlayerIndex: Number): PlayerCameraManager
        fun GetPlatformName(): String
        fun GetObjectClass(UObject: UObject): UnrealEngineClass
        fun GetMaxAudioChannelCount(WorldContextObject: UObject): Number
        fun GetKeyValue(Pair: String, Key: String = definedExternally, Value: String = definedExternally): `T$656`
        fun GetIntOption(Options: String, Key: String, DefaultValue: Number): Number
        fun GetGlobalTimeDilation(WorldContextObject: UObject): Number
        fun GetGameState(WorldContextObject: UObject): GameStateBase
        fun GetGameMode(WorldContextObject: UObject): GameModeBase
        fun GetGameInstance(WorldContextObject: UObject): GameInstance
        fun GetEnableWorldRendering(WorldContextObject: UObject): Boolean
        fun GetCurrentReverbEffect(WorldContextObject: UObject): ReverbEffect
        fun GetCurrentLevelName(WorldContextObject: UObject, bRemovePrefixString: Boolean): String
        fun GetClosestListenerLocation(WorldContextObject: UObject, Location: Vector, MaximumRange: Number, bAllowAttenuationOverride: Boolean, ListenerPosition: Vector = definedExternally): `T$319`
        fun GetAudioTimeSeconds(WorldContextObject: UObject): Number
        fun GetAllActorsWithTag(WorldContextObject: UObject, Tag: String, OutActors: Array<Actor> = definedExternally): `T$657`
        fun GetAllActorsWithInterface(WorldContextObject: UObject, Interface: UnrealEngineClass, OutActors: Array<Actor> = definedExternally): `T$658`
        fun GetAllActorsOfClassWithTag(WorldContextObject: UObject, ActorClass: UnrealEngineClass, Tag: String, OutActors: Array<Actor> = definedExternally): `T$659`
        fun GetAllActorsOfClass(WorldContextObject: UObject, ActorClass: UnrealEngineClass, OutActors: Array<Actor> = definedExternally): `T$660`
        fun GetActorOfClass(WorldContextObject: UObject, ActorClass: UnrealEngineClass): Actor
        fun GetActorArrayBounds(Actors: Array<Actor>, bOnlyCollidingComponents: Boolean, Center: Vector = definedExternally, BoxExtent: Vector = definedExternally): `T$661`
        fun GetActorArrayAverageLocation(Actors: Array<Actor>): Vector
        fun GetAccurateRealTime(Seconds: Number = definedExternally, PartialSeconds: Number = definedExternally): `T$662`
        fun FlushLevelStreaming(WorldContextObject: UObject)
        fun FinishSpawningActor(Actor: Actor, SpawnTransform: Transform): Actor
        fun FindNearestActor(Origin: Vector, ActorsToCheck: Array<Actor>, Distance: Number = definedExternally): `T$246`
        fun FindCollisionUV(Hit: HitResult, UVChannel: Number, UV: Vector2D = definedExternally): `T$28`
        fun EnableLiveStreaming(Enable: Boolean)
        fun DoesSaveGameExist(SlotName: String, UserIndex: Number): Boolean
        fun DeprojectScreenToWorld(Player: PlayerController, ScreenPosition: Vector2D, WorldPosition: Vector = definedExternally, WorldDirection: Vector = definedExternally): `T$191`
        fun DeleteGameInSlot(SlotName: String, UserIndex: Number): Boolean
        fun DeactivateReverbEffect(WorldContextObject: UObject, TagName: String)
        fun CreateSound2D(WorldContextObject: UObject, Sound: SoundBase, VolumeMultiplier: Number, PitchMultiplier: Number, StartTime: Number, ConcurrencySettings: SoundConcurrency, bPersistAcrossLevelTransition: Boolean, bAutoDestroy: Boolean): AudioComponent
        fun CreateSaveGameObject(SaveGameClass: UnrealEngineClass): SaveGame
        fun CreatePlayer(WorldContextObject: UObject, ControllerId: Number, bSpawnPlayerController: Boolean): PlayerController
        fun ClearSoundMixModifiers(WorldContextObject: UObject)
        fun ClearSoundMixClassOverride(WorldContextObject: UObject, InSoundMixModifier: SoundMix, InSoundClass: SoundClass, FadeOutTime: Number)
        fun CancelAsyncLoading()
        fun BreakHitResult(Hit: HitResult, bBlockingHit: Boolean = definedExternally, bInitialOverlap: Boolean = definedExternally, Time: Number = definedExternally, Distance: Number = definedExternally, Location: Vector = definedExternally, ImpactPoint: Vector = definedExternally, Normal: Vector = definedExternally, ImpactNormal: Vector = definedExternally, PhysMat: PhysicalMaterial = definedExternally, HitActor: Actor = definedExternally, HitComponent: PrimitiveComponent = definedExternally, HitBoneName: String = definedExternally, HitItem: Number = definedExternally, ElementIndex: Number = definedExternally, FaceIndex: Number = definedExternally, TraceStart: Vector = definedExternally, TraceEnd: Vector = definedExternally): `T$27`
        fun BlueprintSuggestProjectileVelocity(WorldContextObject: UObject, TossVelocity: Vector = definedExternally, StartLocation: Vector = definedExternally, EndLocation: Vector = definedExternally, LaunchSpeed: Number = definedExternally, OverrideGravityZ: Number = definedExternally, TraceOption: String /* "DoNotTrace" | "TraceFullPath" | "OnlyTraceWhileAscending" | "ESuggestProjVelocityTraceOption_MAX" */ = definedExternally, CollisionRadius: Number = definedExternally, bFavorHighArc: Boolean = definedExternally, bDrawDebug: Boolean = definedExternally): `T$314`
        fun Blueprint_PredictProjectilePath_ByTraceChannel(WorldContextObject: UObject, OutHit: HitResult = definedExternally, OutPathPositions: Array<Vector> = definedExternally, OutLastTraceDestination: Vector = definedExternally, StartPos: Vector = definedExternally, LaunchVelocity: Vector = definedExternally, bTracePath: Boolean = definedExternally, ProjectileRadius: Number = definedExternally, TraceChannel: String /* "ECC_WorldStatic" | "ECC_WorldDynamic" | "ECC_Pawn" | "ECC_Visibility" | "ECC_Camera" | "ECC_PhysicsBody" | "ECC_Vehicle" | "ECC_Destructible" | "ECC_EngineTraceChannel1" | "ECC_EngineTraceChannel2" | "ECC_EngineTraceChannel3" | "ECC_EngineTraceChannel4" | "ECC_EngineTraceChannel5" | "ECC_EngineTraceChannel6" | "ECC_GameTraceChannel1" | "ECC_GameTraceChannel2" | "ECC_GameTraceChannel3" | "ECC_GameTraceChannel4" | "ECC_GameTraceChannel5" | "ECC_GameTraceChannel6" | "ECC_GameTraceChannel7" | "ECC_GameTraceChannel8" | "ECC_GameTraceChannel9" | "ECC_GameTraceChannel10" | "ECC_GameTraceChannel11" | "ECC_GameTraceChannel12" | "ECC_GameTraceChannel13" | "ECC_GameTraceChannel14" | "ECC_GameTraceChannel15" | "ECC_GameTraceChannel16" | "ECC_GameTraceChannel17" | "ECC_GameTraceChannel18" | "ECC_OverlapAll_Deprecated" | "ECC_MAX" */ = definedExternally, bTraceComplex: Boolean = definedExternally, ActorsToIgnore: Array<Actor> = definedExternally, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */ = definedExternally, DrawDebugTime: Number = definedExternally, SimFrequency: Number = definedExternally, MaxSimTime: Number = definedExternally, OverrideGravityZ: Number = definedExternally): `T$663`
        fun Blueprint_PredictProjectilePath_ByObjectType(WorldContextObject: UObject, OutHit: HitResult = definedExternally, OutPathPositions: Array<Vector> = definedExternally, OutLastTraceDestination: Vector = definedExternally, StartPos: Vector = definedExternally, LaunchVelocity: Vector = definedExternally, bTracePath: Boolean = definedExternally, ProjectileRadius: Number = definedExternally, ObjectTypes: Array<String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */> = definedExternally, bTraceComplex: Boolean = definedExternally, ActorsToIgnore: Array<Actor> = definedExternally, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */ = definedExternally, DrawDebugTime: Number = definedExternally, SimFrequency: Number = definedExternally, MaxSimTime: Number = definedExternally, OverrideGravityZ: Number = definedExternally): `T$664`
        fun Blueprint_PredictProjectilePath_Advanced(WorldContextObject: UObject, PredictParams: PredictProjectilePathParams, PredictResult: PredictProjectilePathResult = definedExternally): `T$311`
        fun BeginSpawningActorFromClass(WorldContextObject: UObject, ActorClass: UnrealEngineClass, SpawnTransform: Transform, bNoCollisionFail: Boolean, Owner: Actor): Actor
        fun BeginSpawningActorFromBlueprint(WorldContextObject: UObject, Blueprint: Blueprint, SpawnTransform: Transform, bNoCollisionFail: Boolean): Actor
        fun BeginDeferredActorSpawnFromClass(WorldContextObject: UObject, ActorClass: UnrealEngineClass, SpawnTransform: Transform, CollisionHandlingOverride: String /* "Undefined" | "AlwaysSpawn" | "AdjustIfPossibleButAlwaysSpawn" | "AdjustIfPossibleButDontSpawnIfColliding" | "DontSpawnIfColliding" | "ESpawnActorCollisionHandlingMethod_MAX" */, Owner: Actor): Actor
        fun AreSubtitlesEnabled(): Boolean
        fun AreAnyListenersWithinRange(WorldContextObject: UObject, Location: Vector, MaximumRange: Number): Boolean
        fun ApplyRadialDamageWithFalloff(WorldContextObject: UObject, BaseDamage: Number, MinimumDamage: Number, Origin: Vector, DamageInnerRadius: Number, DamageOuterRadius: Number, DamageFalloff: Number, DamageTypeClass: UnrealEngineClass, IgnoreActors: Array<Actor>, DamageCauser: Actor, InstigatedByController: Controller, DamagePreventionChannel: String /* "ECC_WorldStatic" | "ECC_WorldDynamic" | "ECC_Pawn" | "ECC_Visibility" | "ECC_Camera" | "ECC_PhysicsBody" | "ECC_Vehicle" | "ECC_Destructible" | "ECC_EngineTraceChannel1" | "ECC_EngineTraceChannel2" | "ECC_EngineTraceChannel3" | "ECC_EngineTraceChannel4" | "ECC_EngineTraceChannel5" | "ECC_EngineTraceChannel6" | "ECC_GameTraceChannel1" | "ECC_GameTraceChannel2" | "ECC_GameTraceChannel3" | "ECC_GameTraceChannel4" | "ECC_GameTraceChannel5" | "ECC_GameTraceChannel6" | "ECC_GameTraceChannel7" | "ECC_GameTraceChannel8" | "ECC_GameTraceChannel9" | "ECC_GameTraceChannel10" | "ECC_GameTraceChannel11" | "ECC_GameTraceChannel12" | "ECC_GameTraceChannel13" | "ECC_GameTraceChannel14" | "ECC_GameTraceChannel15" | "ECC_GameTraceChannel16" | "ECC_GameTraceChannel17" | "ECC_GameTraceChannel18" | "ECC_OverlapAll_Deprecated" | "ECC_MAX" */): Boolean
        fun ApplyRadialDamage(WorldContextObject: UObject, BaseDamage: Number, Origin: Vector, DamageRadius: Number, DamageTypeClass: UnrealEngineClass, IgnoreActors: Array<Actor>, DamageCauser: Actor, InstigatedByController: Controller, bDoFullDamage: Boolean, DamagePreventionChannel: String /* "ECC_WorldStatic" | "ECC_WorldDynamic" | "ECC_Pawn" | "ECC_Visibility" | "ECC_Camera" | "ECC_PhysicsBody" | "ECC_Vehicle" | "ECC_Destructible" | "ECC_EngineTraceChannel1" | "ECC_EngineTraceChannel2" | "ECC_EngineTraceChannel3" | "ECC_EngineTraceChannel4" | "ECC_EngineTraceChannel5" | "ECC_EngineTraceChannel6" | "ECC_GameTraceChannel1" | "ECC_GameTraceChannel2" | "ECC_GameTraceChannel3" | "ECC_GameTraceChannel4" | "ECC_GameTraceChannel5" | "ECC_GameTraceChannel6" | "ECC_GameTraceChannel7" | "ECC_GameTraceChannel8" | "ECC_GameTraceChannel9" | "ECC_GameTraceChannel10" | "ECC_GameTraceChannel11" | "ECC_GameTraceChannel12" | "ECC_GameTraceChannel13" | "ECC_GameTraceChannel14" | "ECC_GameTraceChannel15" | "ECC_GameTraceChannel16" | "ECC_GameTraceChannel17" | "ECC_GameTraceChannel18" | "ECC_OverlapAll_Deprecated" | "ECC_MAX" */): Boolean
        fun ApplyPointDamage(DamagedActor: Actor, BaseDamage: Number, HitFromDirection: Vector, HitInfo: HitResult, EventInstigator: Controller, DamageCauser: Actor, DamageTypeClass: UnrealEngineClass): Number
        fun ApplyDamage(DamagedActor: Actor, BaseDamage: Number, EventInstigator: Controller, DamageCauser: Actor, DamageTypeClass: UnrealEngineClass): Number
        fun AnnounceAccessibleString(AnnouncementString: String)
        fun ActivateReverbEffect(WorldContextObject: UObject, ReverbEffect: ReverbEffect, TagName: String, Priority: Number, Volume: Number, FadeTime: Number)
        fun C(Other: UObject): GameplayStatics
        fun C(Other: Any): GameplayStatics
    }
}

external open class SpotLightComponent : PointLightComponent {
    constructor()
    constructor(Outer: UObject)
    open var InnerConeAngle: Number
    open var OuterConeAngle: Number
    open fun SetOuterConeAngle(NewOuterConeAngle: Number)
    open fun SetInnerConeAngle(NewInnerConeAngle: Number)

    companion object {
        fun Load(ResourceName: String): SpotLightComponent
        fun Find(Outer: UObject, ResourceName: String): SpotLightComponent
        fun GetDefaultObject(): SpotLightComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SpotLightComponent
        fun C(Other: UObject): SpotLightComponent
        fun C(Other: Any): SpotLightComponent
    }
}

external open class SpotLight(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Light {
    open var SpotLightComponent: SpotLightComponent
    open var ArrowComponent: ArrowComponent
    open fun SetOuterConeAngle(NewOuterConeAngle: Number)
    open fun SetInnerConeAngle(NewInnerConeAngle: Number)

    companion object {
        fun GetDefaultObject(): SpotLight
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SpotLight
        fun C(Other: UObject): SpotLight
        fun C(Other: Any): SpotLight
    }
}

external open class GeneratedMeshAreaLight(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : SpotLight {
    companion object {
        fun GetDefaultObject(): GeneratedMeshAreaLight
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GeneratedMeshAreaLight
        fun C(Other: UObject): GeneratedMeshAreaLight
        fun C(Other: Any): GeneratedMeshAreaLight
    }
}

external open class HapticFeedbackEffect_Buffer : HapticFeedbackEffect_Base {
    constructor()
    constructor(Outer: UObject)
    open var Amplitudes: Array<Number>
    open var SampleRate: Number

    companion object {
        fun Load(ResourceName: String): HapticFeedbackEffect_Buffer
        fun Find(Outer: UObject, ResourceName: String): HapticFeedbackEffect_Buffer
        fun GetDefaultObject(): HapticFeedbackEffect_Buffer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): HapticFeedbackEffect_Buffer
        fun C(Other: UObject): HapticFeedbackEffect_Buffer
        fun C(Other: Any): HapticFeedbackEffect_Buffer
    }
}

external open class HapticFeedbackDetails_Curve {
    open var Frequency: RuntimeFloatCurve
    open var Amplitude: RuntimeFloatCurve
    open fun clone(): HapticFeedbackDetails_Curve

    companion object {
        fun C(Other: UObject): HapticFeedbackDetails_Curve
        fun C(Other: Any): HapticFeedbackDetails_Curve
    }
}

external open class HapticFeedbackEffect_Curve : HapticFeedbackEffect_Base {
    constructor()
    constructor(Outer: UObject)
    open var HapticDetails: HapticFeedbackDetails_Curve

    companion object {
        fun Load(ResourceName: String): HapticFeedbackEffect_Curve
        fun Find(Outer: UObject, ResourceName: String): HapticFeedbackEffect_Curve
        fun GetDefaultObject(): HapticFeedbackEffect_Curve
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): HapticFeedbackEffect_Curve
        fun C(Other: UObject): HapticFeedbackEffect_Curve
        fun C(Other: Any): HapticFeedbackEffect_Curve
    }
}

external open class HapticFeedbackEffect_SoundWave : HapticFeedbackEffect_Base {
    constructor()
    constructor(Outer: UObject)
    open var SoundWave: SoundWave

    companion object {
        fun Load(ResourceName: String): HapticFeedbackEffect_SoundWave
        fun Find(Outer: UObject, ResourceName: String): HapticFeedbackEffect_SoundWave
        fun GetDefaultObject(): HapticFeedbackEffect_SoundWave
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): HapticFeedbackEffect_SoundWave
        fun C(Other: UObject): HapticFeedbackEffect_SoundWave
        fun C(Other: Any): HapticFeedbackEffect_SoundWave
    }
}

external open class HealthSnapshotBlueprintLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): HealthSnapshotBlueprintLibrary
        fun Find(Outer: UObject, ResourceName: String): HealthSnapshotBlueprintLibrary
        fun GetDefaultObject(): HealthSnapshotBlueprintLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): HealthSnapshotBlueprintLibrary
        fun StopPerformanceSnapshots()
        fun StartPerformanceSnapshots()
        fun LogPerformanceSnapshot(SnapshotTitle: String, bResetStats: Boolean)
        fun C(Other: UObject): HealthSnapshotBlueprintLibrary
        fun C(Other: Any): HealthSnapshotBlueprintLibrary
    }
}

external open class HLODEngineSubsystem : EngineSubsystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): HLODEngineSubsystem
        fun Find(Outer: UObject, ResourceName: String): HLODEngineSubsystem
        fun GetDefaultObject(): HLODEngineSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): HLODEngineSubsystem
        fun C(Other: UObject): HLODEngineSubsystem
        fun C(Other: Any): HLODEngineSubsystem
    }
}

external open class HLODProxyMesh {
    open var LODActor: Any
    open var StaticMesh: StaticMesh
    open var Key: String
    open fun clone(): HLODProxyMesh

    companion object {
        fun C(Other: UObject): HLODProxyMesh
        fun C(Other: Any): HLODProxyMesh
    }
}

external open class HLODProxy : UObject {
    constructor()
    constructor(Outer: UObject)
    open var OwningMap: World
    open var ProxyMeshes: Array<HLODProxyMesh>
    open var HLODActors: Any

    companion object {
        fun Load(ResourceName: String): HLODProxy
        fun Find(Outer: UObject, ResourceName: String): HLODProxy
        fun GetDefaultObject(): HLODProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): HLODProxy
        fun C(Other: UObject): HLODProxy
        fun C(Other: Any): HLODProxy
    }
}

external open class HLODISMComponentDesc {
    open var StaticMesh: StaticMesh
    open var Material: MaterialInterface
    open var Instances: Array<Transform>
    open fun clone(): HLODISMComponentDesc

    companion object {
        fun C(Other: UObject): HLODISMComponentDesc
        fun C(Other: Any): HLODISMComponentDesc
    }
}

external open class HLODProxyDesc : UObject {
    constructor()
    constructor(Outer: UObject)
    open var SubActors: Array<String>
    open var StaticMesh: StaticMesh
    open var ISMComponentsDesc: Array<HLODISMComponentDesc>
    open var LODDrawDistance: Number
    open var bOverrideMaterialMergeSettings: Boolean
    open var MaterialSettings: MaterialProxySettings
    open var bOverrideTransitionScreenSize: Boolean
    open var TransitionScreenSize: Number
    open var bOverrideScreenSize: Boolean
    open var ScreenSize: Number
    open var Key: String
    open var LODLevel: Number
    open var LODActorTag: String
    open var Location: Vector
    open var HLODBakingTransform: Transform
    open var SubHLODDescs: Array<HLODProxyDesc>

    companion object {
        fun Load(ResourceName: String): HLODProxyDesc
        fun Find(Outer: UObject, ResourceName: String): HLODProxyDesc
        fun GetDefaultObject(): HLODProxyDesc
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): HLODProxyDesc
        fun C(Other: UObject): HLODProxyDesc
        fun C(Other: Any): HLODProxyDesc
    }
}

external open class ImportanceSamplingLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ImportanceSamplingLibrary
        fun Find(Outer: UObject, ResourceName: String): ImportanceSamplingLibrary
        fun GetDefaultObject(): ImportanceSamplingLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ImportanceSamplingLibrary
        fun RandomSobolFloat(index: Number, Dimension: Number, Seed: Number): Number
        fun RandomSobolCell3D(index: Number, NumCells: Number, Cell: Vector, Seed: Vector): Vector
        fun RandomSobolCell2D(index: Number, NumCells: Number, Cell: Vector2D, Seed: Vector2D): Vector2D
        fun NextSobolFloat(index: Number, Dimension: Number, PreviousValue: Number): Number
        fun NextSobolCell3D(index: Number, NumCells: Number, PreviousValue: Vector): Vector
        fun NextSobolCell2D(index: Number, NumCells: Number, PreviousValue: Vector2D): Vector2D
        fun MakeImportanceTexture(Texture: Texture2D, WeightingFunc: String /* "Luminance" | "Red" | "Green" | "Blue" | "Alpha" | "EImportanceWeight_MAX" */): ImportanceTexture
        fun ImportanceSample(Texture: ImportanceTexture, Rand: Vector2D, Samples: Number, Intensity: Number, SamplePosition: Vector2D = definedExternally, SampleColor: LinearColor = definedExternally, SampleIntensity: Number = definedExternally, SampleSize: Number = definedExternally): `T$34`
        fun BreakImportanceTexture(ImportanceTexture: ImportanceTexture, Texture: Texture2D = definedExternally, WeightingFunc: String /* "Luminance" | "Red" | "Green" | "Blue" | "Alpha" | "EImportanceWeight_MAX" */ = definedExternally): `T$33`
        fun C(Other: UObject): ImportanceSamplingLibrary
        fun C(Other: Any): ImportanceSamplingLibrary
    }
}

external open class ImportantToggleSettingInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ImportantToggleSettingInterface
        fun Find(Outer: UObject, ResourceName: String): ImportantToggleSettingInterface
        fun GetDefaultObject(): ImportantToggleSettingInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ImportantToggleSettingInterface
        fun C(Other: UObject): ImportantToggleSettingInterface
        fun C(Other: Any): ImportantToggleSettingInterface
    }
}

external open class InGameAdManager : PlatformInterfaceBase {
    constructor()
    constructor(Outer: UObject)
    open var bShouldPauseWhileAdOpen: Boolean
    open var ClickedBannerDelegates: Array<UnrealEngineDelegate<() -> Unit>>
    open var ClosedAdDelegates: Array<UnrealEngineDelegate<() -> Unit>>

    companion object {
        fun Load(ResourceName: String): InGameAdManager
        fun Find(Outer: UObject, ResourceName: String): InGameAdManager
        fun GetDefaultObject(): InGameAdManager
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InGameAdManager
        fun C(Other: UObject): InGameAdManager
        fun C(Other: Any): InGameAdManager
    }
}

external open class InputDelegateBinding : DynamicBlueprintBinding {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InputDelegateBinding
        fun Find(Outer: UObject, ResourceName: String): InputDelegateBinding
        fun GetDefaultObject(): InputDelegateBinding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InputDelegateBinding
        fun C(Other: UObject): InputDelegateBinding
        fun C(Other: Any): InputDelegateBinding
    }
}

external open class BlueprintInputDelegateBinding {
    open var bConsumeInput: Boolean
    open var bExecuteWhenPaused: Boolean
    open var bOverrideParentBinding: Boolean
    open fun clone(): BlueprintInputDelegateBinding

    companion object {
        fun C(Other: UObject): BlueprintInputDelegateBinding
        fun C(Other: Any): BlueprintInputDelegateBinding
    }
}

external open class BlueprintInputActionDelegateBinding : BlueprintInputDelegateBinding {
    open var InputActionName: String
    open var InputKeyEvent: String /* "IE_Pressed" | "IE_Released" | "IE_Repeat" | "IE_DoubleClick" | "IE_Axis" | "IE_MAX" */
    open var FunctionNameToBind: String
    override fun clone(): BlueprintInputActionDelegateBinding

    companion object {
        fun C(Other: UObject): BlueprintInputActionDelegateBinding
        fun C(Other: Any): BlueprintInputActionDelegateBinding
    }
}

external open class InputActionDelegateBinding : InputDelegateBinding {
    constructor()
    constructor(Outer: UObject)
    open var InputActionDelegateBindings: Array<BlueprintInputActionDelegateBinding>

    companion object {
        fun Load(ResourceName: String): InputActionDelegateBinding
        fun Find(Outer: UObject, ResourceName: String): InputActionDelegateBinding
        fun GetDefaultObject(): InputActionDelegateBinding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InputActionDelegateBinding
        fun C(Other: UObject): InputActionDelegateBinding
        fun C(Other: Any): InputActionDelegateBinding
    }
}

external open class BlueprintInputAxisDelegateBinding : BlueprintInputDelegateBinding {
    open var InputAxisName: String
    open var FunctionNameToBind: String
    override fun clone(): BlueprintInputAxisDelegateBinding

    companion object {
        fun C(Other: UObject): BlueprintInputAxisDelegateBinding
        fun C(Other: Any): BlueprintInputAxisDelegateBinding
    }
}

external open class InputAxisDelegateBinding : InputDelegateBinding {
    constructor()
    constructor(Outer: UObject)
    open var InputAxisDelegateBindings: Array<BlueprintInputAxisDelegateBinding>

    companion object {
        fun Load(ResourceName: String): InputAxisDelegateBinding
        fun Find(Outer: UObject, ResourceName: String): InputAxisDelegateBinding
        fun GetDefaultObject(): InputAxisDelegateBinding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InputAxisDelegateBinding
        fun C(Other: UObject): InputAxisDelegateBinding
        fun C(Other: Any): InputAxisDelegateBinding
    }
}

external open class BlueprintInputAxisKeyDelegateBinding : BlueprintInputDelegateBinding {
    open var AxisKey: Key
    open var FunctionNameToBind: String
    override fun clone(): BlueprintInputAxisKeyDelegateBinding

    companion object {
        fun C(Other: UObject): BlueprintInputAxisKeyDelegateBinding
        fun C(Other: Any): BlueprintInputAxisKeyDelegateBinding
    }
}

external open class InputAxisKeyDelegateBinding : InputDelegateBinding {
    constructor()
    constructor(Outer: UObject)
    open var InputAxisKeyDelegateBindings: Array<BlueprintInputAxisKeyDelegateBinding>

    companion object {
        fun Load(ResourceName: String): InputAxisKeyDelegateBinding
        fun Find(Outer: UObject, ResourceName: String): InputAxisKeyDelegateBinding
        fun GetDefaultObject(): InputAxisKeyDelegateBinding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InputAxisKeyDelegateBinding
        fun C(Other: UObject): InputAxisKeyDelegateBinding
        fun C(Other: Any): InputAxisKeyDelegateBinding
    }
}

external open class BlueprintInputKeyDelegateBinding : BlueprintInputDelegateBinding {
    open var InputChord: InputChord
    open var InputKeyEvent: String /* "IE_Pressed" | "IE_Released" | "IE_Repeat" | "IE_DoubleClick" | "IE_Axis" | "IE_MAX" */
    open var FunctionNameToBind: String
    override fun clone(): BlueprintInputKeyDelegateBinding

    companion object {
        fun C(Other: UObject): BlueprintInputKeyDelegateBinding
        fun C(Other: Any): BlueprintInputKeyDelegateBinding
    }
}

external open class InputKeyDelegateBinding : InputDelegateBinding {
    constructor()
    constructor(Outer: UObject)
    open var InputKeyDelegateBindings: Array<BlueprintInputKeyDelegateBinding>

    companion object {
        fun Load(ResourceName: String): InputKeyDelegateBinding
        fun Find(Outer: UObject, ResourceName: String): InputKeyDelegateBinding
        fun GetDefaultObject(): InputKeyDelegateBinding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InputKeyDelegateBinding
        fun C(Other: UObject): InputKeyDelegateBinding
        fun C(Other: Any): InputKeyDelegateBinding
    }
}

external open class InputAxisProperties {
    open var DeadZone: Number
    open var Sensitivity: Number
    open var Exponent: Number
    open var bInvert: Boolean
    open fun clone(): InputAxisProperties

    companion object {
        fun C(Other: UObject): InputAxisProperties
        fun C(Other: Any): InputAxisProperties
    }
}

external open class InputAxisConfigEntry {
    open var AxisKeyName: String
    open var AxisProperties: InputAxisProperties
    open fun clone(): InputAxisConfigEntry

    companion object {
        fun C(Other: UObject): InputAxisConfigEntry
        fun C(Other: Any): InputAxisConfigEntry
    }
}

external open class InputActionKeyMapping {
    open var ActionName: String
    open var bShift: Boolean
    open var bCtrl: Boolean
    open var bAlt: Boolean
    open var bCmd: Boolean
    open var Key: Key
    open fun clone(): InputActionKeyMapping

    companion object {
        fun C(Other: UObject): InputActionKeyMapping
        fun C(Other: Any): InputActionKeyMapping
    }
}

external open class InputAxisKeyMapping {
    open var AxisName: String
    open var Scale: Number
    open var Key: Key
    open fun clone(): InputAxisKeyMapping

    companion object {
        fun C(Other: UObject): InputAxisKeyMapping
        fun C(Other: Any): InputAxisKeyMapping
    }
}

external open class InputActionSpeechMapping {
    open var ActionName: String
    open var SpeechKeyword: String
    open fun clone(): InputActionSpeechMapping

    companion object {
        fun C(Other: UObject): InputActionSpeechMapping
        fun C(Other: Any): InputActionSpeechMapping
    }
}

external interface `T$665` {
    var AxisNames: Array<String>
}

external interface `T$666` {
    var OutMappings: Array<InputAxisKeyMapping>
}

external interface `T$667` {
    var ActionNames: Array<String>
}

external interface `T$668` {
    var OutMappings: Array<InputActionKeyMapping>
}

external open class InputSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var AxisConfig: Array<InputAxisConfigEntry>
    open var bAltEnterTogglesFullscreen: Boolean
    open var bF11TogglesFullscreen: Boolean
    open var bUseMouseForTouch: Boolean
    open var bEnableMouseSmoothing: Boolean
    open var bEnableFOVScaling: Boolean
    open var bCaptureMouseOnLaunch: Boolean
    open var bDefaultViewportMouseLock: Boolean
    open var bAlwaysShowTouchInterface: Boolean
    open var bShowConsoleOnFourFingerTap: Boolean
    open var bEnableGestureRecognizer: Boolean
    open var bUseAutocorrect: Boolean
    open var ExcludedAutocorrectOS: Array<String>
    open var ExcludedAutocorrectCultures: Array<String>
    open var ExcludedAutocorrectDeviceModels: Array<String>
    open var DefaultViewportMouseCaptureMode: String /* "NoCapture" | "CapturePermanently" | "CapturePermanently_IncludingInitialMouseDown" | "CaptureDuringMouseDown" | "CaptureDuringRightMouseDown" | "EMouseCaptureMode_MAX" */
    open var DefaultViewportMouseLockMode: String /* "DoNotLock" | "LockOnCapture" | "LockAlways" | "LockInFullscreen" | "EMouseLockMode_MAX" */
    open var FOVScale: Number
    open var DoubleClickTime: Number
    open var ActionMappings: Array<InputActionKeyMapping>
    open var AxisMappings: Array<InputAxisKeyMapping>
    open var SpeechMappings: Array<InputActionSpeechMapping>
    open var DefaultPlayerInputClass: Class
    open var DefaultInputComponentClass: Class
    open var DefaultTouchInterface: SoftObjectPath
    open var ConsoleKey: Key
    open var ConsoleKeys: Array<Key>
    open fun SaveKeyMappings()
    open fun RemoveAxisMapping(KeyMapping: InputAxisKeyMapping, bForceRebuildKeymaps: Boolean)
    open fun RemoveActionMapping(KeyMapping: InputActionKeyMapping, bForceRebuildKeymaps: Boolean)
    open fun GetAxisNames(AxisNames: Array<String> = definedExternally): `T$665`
    open fun GetAxisMappingByName(InAxisName: String, OutMappings: Array<InputAxisKeyMapping> = definedExternally): `T$666`
    open fun GetActionNames(ActionNames: Array<String> = definedExternally): `T$667`
    open fun GetActionMappingByName(InActionName: String, OutMappings: Array<InputActionKeyMapping> = definedExternally): `T$668`
    open fun ForceRebuildKeymaps()
    open fun AddAxisMapping(KeyMapping: InputAxisKeyMapping, bForceRebuildKeymaps: Boolean)
    open fun AddActionMapping(KeyMapping: InputActionKeyMapping, bForceRebuildKeymaps: Boolean)

    companion object {
        fun Load(ResourceName: String): InputSettings
        fun Find(Outer: UObject, ResourceName: String): InputSettings
        fun GetDefaultObject(): InputSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InputSettings
        fun GetInputSettings(): InputSettings
        fun C(Other: UObject): InputSettings
        fun C(Other: Any): InputSettings
    }
}

external open class BlueprintInputTouchDelegateBinding : BlueprintInputDelegateBinding {
    open var InputKeyEvent: String /* "IE_Pressed" | "IE_Released" | "IE_Repeat" | "IE_DoubleClick" | "IE_Axis" | "IE_MAX" */
    open var FunctionNameToBind: String
    override fun clone(): BlueprintInputTouchDelegateBinding

    companion object {
        fun C(Other: UObject): BlueprintInputTouchDelegateBinding
        fun C(Other: Any): BlueprintInputTouchDelegateBinding
    }
}

external open class InputTouchDelegateBinding : InputDelegateBinding {
    constructor()
    constructor(Outer: UObject)
    open var InputTouchDelegateBindings: Array<BlueprintInputTouchDelegateBinding>

    companion object {
        fun Load(ResourceName: String): InputTouchDelegateBinding
        fun Find(Outer: UObject, ResourceName: String): InputTouchDelegateBinding
        fun GetDefaultObject(): InputTouchDelegateBinding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InputTouchDelegateBinding
        fun C(Other: UObject): InputTouchDelegateBinding
        fun C(Other: Any): InputTouchDelegateBinding
    }
}

external open class InputVectorAxisDelegateBinding : InputAxisKeyDelegateBinding {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InputVectorAxisDelegateBinding
        fun Find(Outer: UObject, ResourceName: String): InputVectorAxisDelegateBinding
        fun GetDefaultObject(): InputVectorAxisDelegateBinding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InputVectorAxisDelegateBinding
        fun C(Other: UObject): InputVectorAxisDelegateBinding
        fun C(Other: Any): InputVectorAxisDelegateBinding
    }
}

external open class Interface_ActorSubobject : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): Interface_ActorSubobject
        fun Find(Outer: UObject, ResourceName: String): Interface_ActorSubobject
        fun GetDefaultObject(): Interface_ActorSubobject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Interface_ActorSubobject
        fun C(Other: UObject): Interface_ActorSubobject
        fun C(Other: Any): Interface_ActorSubobject
    }
}

external open class Interface_AssetUserData : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): Interface_AssetUserData
        fun Find(Outer: UObject, ResourceName: String): Interface_AssetUserData
        fun GetDefaultObject(): Interface_AssetUserData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Interface_AssetUserData
        fun C(Other: UObject): Interface_AssetUserData
        fun C(Other: Any): Interface_AssetUserData
    }
}

external open class BoneReferenceSkeletonProvider : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BoneReferenceSkeletonProvider
        fun Find(Outer: UObject, ResourceName: String): BoneReferenceSkeletonProvider
        fun GetDefaultObject(): BoneReferenceSkeletonProvider
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BoneReferenceSkeletonProvider
        fun C(Other: UObject): BoneReferenceSkeletonProvider
        fun C(Other: Any): BoneReferenceSkeletonProvider
    }
}

external open class Interface_CollisionDataProvider : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): Interface_CollisionDataProvider
        fun Find(Outer: UObject, ResourceName: String): Interface_CollisionDataProvider
        fun GetDefaultObject(): Interface_CollisionDataProvider
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Interface_CollisionDataProvider
        fun C(Other: UObject): Interface_CollisionDataProvider
        fun C(Other: Any): Interface_CollisionDataProvider
    }
}

external open class Interface_PostProcessVolume : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): Interface_PostProcessVolume
        fun Find(Outer: UObject, ResourceName: String): Interface_PostProcessVolume
        fun GetDefaultObject(): Interface_PostProcessVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Interface_PostProcessVolume
        fun C(Other: UObject): Interface_PostProcessVolume
        fun C(Other: Any): Interface_PostProcessVolume
    }
}

external open class Interface_PreviewMeshProvider : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): Interface_PreviewMeshProvider
        fun Find(Outer: UObject, ResourceName: String): Interface_PreviewMeshProvider
        fun GetDefaultObject(): Interface_PreviewMeshProvider
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Interface_PreviewMeshProvider
        fun C(Other: UObject): Interface_PreviewMeshProvider
        fun C(Other: Any): Interface_PreviewMeshProvider
    }
}

external open class InterpFilter_Classes : InterpFilter {
    constructor()
    constructor(Outer: UObject)
    open var ClassToFilterBy: UnrealEngineClass
    open var TrackClasses: Array<UnrealEngineClass>

    companion object {
        fun Load(ResourceName: String): InterpFilter_Classes
        fun Find(Outer: UObject, ResourceName: String): InterpFilter_Classes
        fun GetDefaultObject(): InterpFilter_Classes
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpFilter_Classes
        fun C(Other: UObject): InterpFilter_Classes
        fun C(Other: Any): InterpFilter_Classes
    }
}

external open class InterpFilter_Custom : InterpFilter {
    constructor()
    constructor(Outer: UObject)
    open var GroupsToInclude: Array<InterpGroup>

    companion object {
        fun Load(ResourceName: String): InterpFilter_Custom
        fun Find(Outer: UObject, ResourceName: String): InterpFilter_Custom
        fun GetDefaultObject(): InterpFilter_Custom
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpFilter_Custom
        fun C(Other: UObject): InterpFilter_Custom
        fun C(Other: Any): InterpFilter_Custom
    }
}

external open class CameraPreviewInfo {
    open var PawnClass: UnrealEngineClass
    open var AnimSeq: AnimSequence
    open var Location: Vector
    open var Rotation: Rotator
    open var PawnInst: Pawn
    open fun clone(): CameraPreviewInfo

    companion object {
        fun C(Other: UObject): CameraPreviewInfo
        fun C(Other: Any): CameraPreviewInfo
    }
}

external open class InterpGroupCamera : InterpGroup {
    constructor()
    constructor(Outer: UObject)
    open var CameraAnimInst: CameraAnim
    open var Target: CameraPreviewInfo
    open var CompressTolerance: Number

    companion object {
        fun Load(ResourceName: String): InterpGroupCamera
        fun Find(Outer: UObject, ResourceName: String): InterpGroupCamera
        fun GetDefaultObject(): InterpGroupCamera
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpGroupCamera
        fun C(Other: UObject): InterpGroupCamera
        fun C(Other: Any): InterpGroupCamera
    }
}

external open class InterpGroupInstCamera : InterpGroupInst {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InterpGroupInstCamera
        fun Find(Outer: UObject, ResourceName: String): InterpGroupInstCamera
        fun GetDefaultObject(): InterpGroupInstCamera
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpGroupInstCamera
        fun C(Other: UObject): InterpGroupInstCamera
        fun C(Other: Any): InterpGroupInstCamera
    }
}

external open class InterpGroupInstDirector : InterpGroupInst {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InterpGroupInstDirector
        fun Find(Outer: UObject, ResourceName: String): InterpGroupInstDirector
        fun GetDefaultObject(): InterpGroupInstDirector
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpGroupInstDirector
        fun C(Other: UObject): InterpGroupInstDirector
        fun C(Other: Any): InterpGroupInstDirector
    }
}

external object EInterpToBehaviourType {
    var OneShot: String /* "OneShot" */
    var OneShot_Reverse: String /* "OneShot_Reverse" */
    var Loop_Reset: String /* "Loop_Reset" */
    var PingPong: String /* "PingPong" */
    var EInterpToBehaviourType_MAX: String /* "EInterpToBehaviourType_MAX" */
}

external open class InterpControlPoint {
    open var PositionControlPoint: Vector
    open var bPositionIsRelative: Boolean
    open fun clone(): InterpControlPoint

    companion object {
        fun C(Other: UObject): InterpControlPoint
        fun C(Other: Any): InterpControlPoint
    }
}

external open class InterpToMovementComponent : MovementComponent {
    constructor()
    constructor(Outer: UObject)
    open var Duration: Number
    open var bPauseOnImpact: Boolean
    open var bSweep: Boolean
    open var TeleportType: String /* "None" | "TeleportPhysics" | "ResetPhysics" | "ETeleportType_MAX" */
    open var BehaviourType: String /* "OneShot" | "OneShot_Reverse" | "Loop_Reset" | "PingPong" | "EInterpToBehaviourType_MAX" */
    open var bCheckIfStillInWorld: Boolean
    open var bForceSubStepping: Boolean
    open var OnInterpToReverse: UnrealEngineMulticastDelegate<(ImpactResult: HitResult, Time: Number) -> Unit>
    open var OnInterpToStop: UnrealEngineMulticastDelegate<(ImpactResult: HitResult, Time: Number) -> Unit>
    open var OnWaitBeginDelegate: UnrealEngineMulticastDelegate<(ImpactResult: HitResult, Time: Number) -> Unit>
    open var OnWaitEndDelegate: UnrealEngineMulticastDelegate<(ImpactResult: HitResult, Time: Number) -> Unit>
    open var OnResetDelegate: UnrealEngineMulticastDelegate<(ImpactResult: HitResult, Time: Number) -> Unit>
    open var MaxSimulationTimeStep: Number
    open var MaxSimulationIterations: Number
    open var ControlPoints: Array<InterpControlPoint>
    open fun StopSimulating(HitResult: HitResult)
    open fun RestartMovement(InitialDirection: Number)
    open fun ResetControlPoints()
    open fun FinaliseControlPoints()
    open fun AddControlPointPosition(Pos: Vector, bPositionIsRelative: Boolean)

    companion object {
        fun Load(ResourceName: String): InterpToMovementComponent
        fun Find(Outer: UObject, ResourceName: String): InterpToMovementComponent
        fun GetDefaultObject(): InterpToMovementComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpToMovementComponent
        fun C(Other: UObject): InterpToMovementComponent
        fun C(Other: Any): InterpToMovementComponent
    }
}

external open class InterpTrackFloatBase : InterpTrack {
    constructor()
    constructor(Outer: UObject)
    open var FloatTrack: InterpCurveFloat
    open var CurveTension: Number

    companion object {
        fun Load(ResourceName: String): InterpTrackFloatBase
        fun Find(Outer: UObject, ResourceName: String): InterpTrackFloatBase
        fun GetDefaultObject(): InterpTrackFloatBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackFloatBase
        fun C(Other: UObject): InterpTrackFloatBase
        fun C(Other: Any): InterpTrackFloatBase
    }
}

external open class AnimControlTrackKey {
    open var StartTime: Number
    open var AnimSeq: AnimSequence
    open var AnimStartOffset: Number
    open var AnimEndOffset: Number
    open var AnimPlayRate: Number
    open var bLooping: Boolean
    open var bReverse: Boolean
    open fun clone(): AnimControlTrackKey

    companion object {
        fun C(Other: UObject): AnimControlTrackKey
        fun C(Other: Any): AnimControlTrackKey
    }
}

external open class InterpTrackAnimControl : InterpTrackFloatBase {
    constructor()
    constructor(Outer: UObject)
    open var SlotName: String
    open var AnimSeqs: Array<AnimControlTrackKey>
    open var bSkipAnimNotifiers: Boolean

    companion object {
        fun Load(ResourceName: String): InterpTrackAnimControl
        fun Find(Outer: UObject, ResourceName: String): InterpTrackAnimControl
        fun GetDefaultObject(): InterpTrackAnimControl
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackAnimControl
        fun C(Other: UObject): InterpTrackAnimControl
        fun C(Other: Any): InterpTrackAnimControl
    }
}

external open class InterpTrackVectorBase : InterpTrack {
    constructor()
    constructor(Outer: UObject)
    open var VectorTrack: InterpCurveVector
    open var CurveTension: Number

    companion object {
        fun Load(ResourceName: String): InterpTrackVectorBase
        fun Find(Outer: UObject, ResourceName: String): InterpTrackVectorBase
        fun GetDefaultObject(): InterpTrackVectorBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackVectorBase
        fun C(Other: UObject): InterpTrackVectorBase
        fun C(Other: Any): InterpTrackVectorBase
    }
}

external open class InterpTrackAudioMaster : InterpTrackVectorBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InterpTrackAudioMaster
        fun Find(Outer: UObject, ResourceName: String): InterpTrackAudioMaster
        fun GetDefaultObject(): InterpTrackAudioMaster
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackAudioMaster
        fun C(Other: UObject): InterpTrackAudioMaster
        fun C(Other: Any): InterpTrackAudioMaster
    }
}

external open class BoolTrackKey {
    open var Time: Number
    open var Value: Boolean
    open fun clone(): BoolTrackKey

    companion object {
        fun C(Other: UObject): BoolTrackKey
        fun C(Other: Any): BoolTrackKey
    }
}

external open class InterpTrackBoolProp : InterpTrack {
    constructor()
    constructor(Outer: UObject)
    open var BoolTrack: Array<BoolTrackKey>
    open var PropertyName: String

    companion object {
        fun Load(ResourceName: String): InterpTrackBoolProp
        fun Find(Outer: UObject, ResourceName: String): InterpTrackBoolProp
        fun GetDefaultObject(): InterpTrackBoolProp
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackBoolProp
        fun C(Other: UObject): InterpTrackBoolProp
        fun C(Other: Any): InterpTrackBoolProp
    }
}

external open class InterpTrackColorProp : InterpTrackVectorBase {
    constructor()
    constructor(Outer: UObject)
    open var PropertyName: String

    companion object {
        fun Load(ResourceName: String): InterpTrackColorProp
        fun Find(Outer: UObject, ResourceName: String): InterpTrackColorProp
        fun GetDefaultObject(): InterpTrackColorProp
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackColorProp
        fun C(Other: UObject): InterpTrackColorProp
        fun C(Other: Any): InterpTrackColorProp
    }
}

external open class InterpTrackColorScale : InterpTrackVectorBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InterpTrackColorScale
        fun Find(Outer: UObject, ResourceName: String): InterpTrackColorScale
        fun GetDefaultObject(): InterpTrackColorScale
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackColorScale
        fun C(Other: UObject): InterpTrackColorScale
        fun C(Other: Any): InterpTrackColorScale
    }
}

external open class DirectorTrackCut {
    open var Time: Number
    open var TransitionTime: Number
    open var TargetCamGroup: String
    open var ShotNumber: Number
    open fun clone(): DirectorTrackCut

    companion object {
        fun C(Other: UObject): DirectorTrackCut
        fun C(Other: Any): DirectorTrackCut
    }
}

external open class InterpTrackDirector : InterpTrack {
    constructor()
    constructor(Outer: UObject)
    open var CutTrack: Array<DirectorTrackCut>
    open var bSimulateCameraCutsOnClients: Boolean
    open var PreviewCamera: CameraActor

    companion object {
        fun Load(ResourceName: String): InterpTrackDirector
        fun Find(Outer: UObject, ResourceName: String): InterpTrackDirector
        fun GetDefaultObject(): InterpTrackDirector
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackDirector
        fun C(Other: UObject): InterpTrackDirector
        fun C(Other: Any): InterpTrackDirector
    }
}

external open class EventTrackKey {
    open var Time: Number
    open var EventName: String
    open fun clone(): EventTrackKey

    companion object {
        fun C(Other: UObject): EventTrackKey
        fun C(Other: Any): EventTrackKey
    }
}

external open class InterpTrackEvent : InterpTrack {
    constructor()
    constructor(Outer: UObject)
    open var EventTrack: Array<EventTrackKey>
    open var bFireEventsWhenForwards: Boolean
    open var bFireEventsWhenBackwards: Boolean
    open var bFireEventsWhenJumpingForwards: Boolean
    open var bUseCustomEventName: Boolean

    companion object {
        fun Load(ResourceName: String): InterpTrackEvent
        fun Find(Outer: UObject, ResourceName: String): InterpTrackEvent
        fun GetDefaultObject(): InterpTrackEvent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackEvent
        fun C(Other: UObject): InterpTrackEvent
        fun C(Other: Any): InterpTrackEvent
    }
}

external open class InterpTrackFade : InterpTrackFloatBase {
    constructor()
    constructor(Outer: UObject)
    open var bPersistFade: Boolean
    open var bFadeAudio: Boolean
    open var FadeColor: LinearColor

    companion object {
        fun Load(ResourceName: String): InterpTrackFade
        fun Find(Outer: UObject, ResourceName: String): InterpTrackFade
        fun GetDefaultObject(): InterpTrackFade
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackFade
        fun C(Other: UObject): InterpTrackFade
        fun C(Other: Any): InterpTrackFade
    }
}

external open class InterpTrackFloatAnimBPParam : InterpTrackFloatBase {
    constructor()
    constructor(Outer: UObject)
    open var AnimBlueprintClass: UnrealEngineClass
    open var AnimClass: UnrealEngineClass
    open var ParamName: String

    companion object {
        fun Load(ResourceName: String): InterpTrackFloatAnimBPParam
        fun Find(Outer: UObject, ResourceName: String): InterpTrackFloatAnimBPParam
        fun GetDefaultObject(): InterpTrackFloatAnimBPParam
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackFloatAnimBPParam
        fun C(Other: UObject): InterpTrackFloatAnimBPParam
        fun C(Other: Any): InterpTrackFloatAnimBPParam
    }
}

external open class InterpTrackFloatMaterialParam : InterpTrackFloatBase {
    constructor()
    constructor(Outer: UObject)
    open var TargetMaterials: Array<MaterialInterface>
    open var ParamName: String

    companion object {
        fun Load(ResourceName: String): InterpTrackFloatMaterialParam
        fun Find(Outer: UObject, ResourceName: String): InterpTrackFloatMaterialParam
        fun GetDefaultObject(): InterpTrackFloatMaterialParam
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackFloatMaterialParam
        fun C(Other: UObject): InterpTrackFloatMaterialParam
        fun C(Other: Any): InterpTrackFloatMaterialParam
    }
}

external open class InterpTrackFloatParticleParam : InterpTrackFloatBase {
    constructor()
    constructor(Outer: UObject)
    open var ParamName: String

    companion object {
        fun Load(ResourceName: String): InterpTrackFloatParticleParam
        fun Find(Outer: UObject, ResourceName: String): InterpTrackFloatParticleParam
        fun GetDefaultObject(): InterpTrackFloatParticleParam
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackFloatParticleParam
        fun C(Other: UObject): InterpTrackFloatParticleParam
        fun C(Other: Any): InterpTrackFloatParticleParam
    }
}

external open class InterpTrackFloatProp : InterpTrackFloatBase {
    constructor()
    constructor(Outer: UObject)
    open var PropertyName: String

    companion object {
        fun Load(ResourceName: String): InterpTrackFloatProp
        fun Find(Outer: UObject, ResourceName: String): InterpTrackFloatProp
        fun GetDefaultObject(): InterpTrackFloatProp
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackFloatProp
        fun C(Other: UObject): InterpTrackFloatProp
        fun C(Other: Any): InterpTrackFloatProp
    }
}

external open class InterpTrackInstAnimControl : InterpTrackInst {
    constructor()
    constructor(Outer: UObject)
    open var LastUpdatePosition: Number
    open var InitPosition: Vector
    open var InitRotation: Rotator

    companion object {
        fun Load(ResourceName: String): InterpTrackInstAnimControl
        fun Find(Outer: UObject, ResourceName: String): InterpTrackInstAnimControl
        fun GetDefaultObject(): InterpTrackInstAnimControl
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackInstAnimControl
        fun C(Other: UObject): InterpTrackInstAnimControl
        fun C(Other: Any): InterpTrackInstAnimControl
    }
}

external open class InterpTrackInstAudioMaster : InterpTrackInst {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InterpTrackInstAudioMaster
        fun Find(Outer: UObject, ResourceName: String): InterpTrackInstAudioMaster
        fun GetDefaultObject(): InterpTrackInstAudioMaster
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackInstAudioMaster
        fun C(Other: UObject): InterpTrackInstAudioMaster
        fun C(Other: Any): InterpTrackInstAudioMaster
    }
}

external open class InterpTrackInstProperty : InterpTrackInst {
    constructor()
    constructor(Outer: UObject)
    open var InterpProperty: Any
    open var PropertyOuterObjectInst: UObject

    companion object {
        fun Load(ResourceName: String): InterpTrackInstProperty
        fun Find(Outer: UObject, ResourceName: String): InterpTrackInstProperty
        fun GetDefaultObject(): InterpTrackInstProperty
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackInstProperty
        fun C(Other: UObject): InterpTrackInstProperty
        fun C(Other: Any): InterpTrackInstProperty
    }
}

external open class InterpTrackInstBoolProp : InterpTrackInstProperty {
    constructor()
    constructor(Outer: UObject)
    open var ResetBool: Boolean

    companion object {
        fun Load(ResourceName: String): InterpTrackInstBoolProp
        fun Find(Outer: UObject, ResourceName: String): InterpTrackInstBoolProp
        fun GetDefaultObject(): InterpTrackInstBoolProp
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackInstBoolProp
        fun C(Other: UObject): InterpTrackInstBoolProp
        fun C(Other: Any): InterpTrackInstBoolProp
    }
}

external open class InterpTrackInstColorProp : InterpTrackInstProperty {
    constructor()
    constructor(Outer: UObject)
    open var ResetColor: Color

    companion object {
        fun Load(ResourceName: String): InterpTrackInstColorProp
        fun Find(Outer: UObject, ResourceName: String): InterpTrackInstColorProp
        fun GetDefaultObject(): InterpTrackInstColorProp
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackInstColorProp
        fun C(Other: UObject): InterpTrackInstColorProp
        fun C(Other: Any): InterpTrackInstColorProp
    }
}

external open class InterpTrackInstColorScale : InterpTrackInst {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InterpTrackInstColorScale
        fun Find(Outer: UObject, ResourceName: String): InterpTrackInstColorScale
        fun GetDefaultObject(): InterpTrackInstColorScale
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackInstColorScale
        fun C(Other: UObject): InterpTrackInstColorScale
        fun C(Other: Any): InterpTrackInstColorScale
    }
}

external open class InterpTrackInstEvent : InterpTrackInst {
    constructor()
    constructor(Outer: UObject)
    open var LastUpdatePosition: Number

    companion object {
        fun Load(ResourceName: String): InterpTrackInstEvent
        fun Find(Outer: UObject, ResourceName: String): InterpTrackInstEvent
        fun GetDefaultObject(): InterpTrackInstEvent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackInstEvent
        fun C(Other: UObject): InterpTrackInstEvent
        fun C(Other: Any): InterpTrackInstEvent
    }
}

external open class InterpTrackInstFade : InterpTrackInst {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InterpTrackInstFade
        fun Find(Outer: UObject, ResourceName: String): InterpTrackInstFade
        fun GetDefaultObject(): InterpTrackInstFade
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackInstFade
        fun C(Other: UObject): InterpTrackInstFade
        fun C(Other: Any): InterpTrackInstFade
    }
}

external open class InterpTrackInstFloatAnimBPParam : InterpTrackInst {
    constructor()
    constructor(Outer: UObject)
    open var AnimScriptInstance: AnimInstance
    open var ResetFloat: Number

    companion object {
        fun Load(ResourceName: String): InterpTrackInstFloatAnimBPParam
        fun Find(Outer: UObject, ResourceName: String): InterpTrackInstFloatAnimBPParam
        fun GetDefaultObject(): InterpTrackInstFloatAnimBPParam
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackInstFloatAnimBPParam
        fun C(Other: UObject): InterpTrackInstFloatAnimBPParam
        fun C(Other: Any): InterpTrackInstFloatAnimBPParam
    }
}

external open class PrimitiveMaterialRef {
    open var Primitive: PrimitiveComponent
    open var Decal: DecalComponent
    open var ElementIndex: Number
    open fun clone(): PrimitiveMaterialRef

    companion object {
        fun C(Other: UObject): PrimitiveMaterialRef
        fun C(Other: Any): PrimitiveMaterialRef
    }
}

external open class InterpTrackInstFloatMaterialParam : InterpTrackInst {
    constructor()
    constructor(Outer: UObject)
    open var MaterialInstances: Array<MaterialInstanceDynamic>
    open var ResetFloats: Array<Number>
    open var PrimitiveMaterialRefs: Array<PrimitiveMaterialRef>
    open var InstancedTrack: InterpTrackFloatMaterialParam

    companion object {
        fun Load(ResourceName: String): InterpTrackInstFloatMaterialParam
        fun Find(Outer: UObject, ResourceName: String): InterpTrackInstFloatMaterialParam
        fun GetDefaultObject(): InterpTrackInstFloatMaterialParam
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackInstFloatMaterialParam
        fun C(Other: UObject): InterpTrackInstFloatMaterialParam
        fun C(Other: Any): InterpTrackInstFloatMaterialParam
    }
}

external open class InterpTrackInstFloatParticleParam : InterpTrackInst {
    constructor()
    constructor(Outer: UObject)
    open var ResetFloat: Number

    companion object {
        fun Load(ResourceName: String): InterpTrackInstFloatParticleParam
        fun Find(Outer: UObject, ResourceName: String): InterpTrackInstFloatParticleParam
        fun GetDefaultObject(): InterpTrackInstFloatParticleParam
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackInstFloatParticleParam
        fun C(Other: UObject): InterpTrackInstFloatParticleParam
        fun C(Other: Any): InterpTrackInstFloatParticleParam
    }
}

external open class InterpTrackInstFloatProp : InterpTrackInstProperty {
    constructor()
    constructor(Outer: UObject)
    open var ResetFloat: Number

    companion object {
        fun Load(ResourceName: String): InterpTrackInstFloatProp
        fun Find(Outer: UObject, ResourceName: String): InterpTrackInstFloatProp
        fun GetDefaultObject(): InterpTrackInstFloatProp
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackInstFloatProp
        fun C(Other: UObject): InterpTrackInstFloatProp
        fun C(Other: Any): InterpTrackInstFloatProp
    }
}

external open class InterpTrackInstLinearColorProp : InterpTrackInstProperty {
    constructor()
    constructor(Outer: UObject)
    open var ResetColor: LinearColor

    companion object {
        fun Load(ResourceName: String): InterpTrackInstLinearColorProp
        fun Find(Outer: UObject, ResourceName: String): InterpTrackInstLinearColorProp
        fun GetDefaultObject(): InterpTrackInstLinearColorProp
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackInstLinearColorProp
        fun C(Other: UObject): InterpTrackInstLinearColorProp
        fun C(Other: Any): InterpTrackInstLinearColorProp
    }
}

external open class InterpTrackInstParticleReplay : InterpTrackInst {
    constructor()
    constructor(Outer: UObject)
    open var LastUpdatePosition: Number

    companion object {
        fun Load(ResourceName: String): InterpTrackInstParticleReplay
        fun Find(Outer: UObject, ResourceName: String): InterpTrackInstParticleReplay
        fun GetDefaultObject(): InterpTrackInstParticleReplay
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackInstParticleReplay
        fun C(Other: UObject): InterpTrackInstParticleReplay
        fun C(Other: Any): InterpTrackInstParticleReplay
    }
}

external open class InterpTrackInstSlomo : InterpTrackInst {
    constructor()
    constructor(Outer: UObject)
    open var OldTimeDilation: Number

    companion object {
        fun Load(ResourceName: String): InterpTrackInstSlomo
        fun Find(Outer: UObject, ResourceName: String): InterpTrackInstSlomo
        fun GetDefaultObject(): InterpTrackInstSlomo
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackInstSlomo
        fun C(Other: UObject): InterpTrackInstSlomo
        fun C(Other: Any): InterpTrackInstSlomo
    }
}

external open class InterpTrackInstSound : InterpTrackInst {
    constructor()
    constructor(Outer: UObject)
    open var LastUpdatePosition: Number
    open var PlayAudioComp: AudioComponent

    companion object {
        fun Load(ResourceName: String): InterpTrackInstSound
        fun Find(Outer: UObject, ResourceName: String): InterpTrackInstSound
        fun GetDefaultObject(): InterpTrackInstSound
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackInstSound
        fun C(Other: UObject): InterpTrackInstSound
        fun C(Other: Any): InterpTrackInstSound
    }
}

external object ETrackToggleAction {
    var ETTA_Off: String /* "ETTA_Off" */
    var ETTA_On: String /* "ETTA_On" */
    var ETTA_Toggle: String /* "ETTA_Toggle" */
    var ETTA_Trigger: String /* "ETTA_Trigger" */
    var ETTA_MAX: String /* "ETTA_MAX" */
}

external open class InterpTrackInstToggle : InterpTrackInst {
    constructor()
    constructor(Outer: UObject)
    open var Action: String /* "ETTA_Off" | "ETTA_On" | "ETTA_Toggle" | "ETTA_Trigger" | "ETTA_MAX" */
    open var LastUpdatePosition: Number
    open var bSavedActiveState: Boolean

    companion object {
        fun Load(ResourceName: String): InterpTrackInstToggle
        fun Find(Outer: UObject, ResourceName: String): InterpTrackInstToggle
        fun GetDefaultObject(): InterpTrackInstToggle
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackInstToggle
        fun C(Other: UObject): InterpTrackInstToggle
        fun C(Other: Any): InterpTrackInstToggle
    }
}

external open class InterpTrackVectorMaterialParam : InterpTrackVectorBase {
    constructor()
    constructor(Outer: UObject)
    open var TargetMaterials: Array<MaterialInterface>
    open var ParamName: String

    companion object {
        fun Load(ResourceName: String): InterpTrackVectorMaterialParam
        fun Find(Outer: UObject, ResourceName: String): InterpTrackVectorMaterialParam
        fun GetDefaultObject(): InterpTrackVectorMaterialParam
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackVectorMaterialParam
        fun C(Other: UObject): InterpTrackVectorMaterialParam
        fun C(Other: Any): InterpTrackVectorMaterialParam
    }
}

external open class InterpTrackInstVectorMaterialParam : InterpTrackInst {
    constructor()
    constructor(Outer: UObject)
    open var MaterialInstances: Array<MaterialInstanceDynamic>
    open var ResetVectors: Array<Vector>
    open var PrimitiveMaterialRefs: Array<PrimitiveMaterialRef>
    open var InstancedTrack: InterpTrackVectorMaterialParam

    companion object {
        fun Load(ResourceName: String): InterpTrackInstVectorMaterialParam
        fun Find(Outer: UObject, ResourceName: String): InterpTrackInstVectorMaterialParam
        fun GetDefaultObject(): InterpTrackInstVectorMaterialParam
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackInstVectorMaterialParam
        fun C(Other: UObject): InterpTrackInstVectorMaterialParam
        fun C(Other: Any): InterpTrackInstVectorMaterialParam
    }
}

external open class InterpTrackInstVectorProp : InterpTrackInstProperty {
    constructor()
    constructor(Outer: UObject)
    open var ResetVector: Vector

    companion object {
        fun Load(ResourceName: String): InterpTrackInstVectorProp
        fun Find(Outer: UObject, ResourceName: String): InterpTrackInstVectorProp
        fun GetDefaultObject(): InterpTrackInstVectorProp
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackInstVectorProp
        fun C(Other: UObject): InterpTrackInstVectorProp
        fun C(Other: Any): InterpTrackInstVectorProp
    }
}

external object EVisibilityTrackAction {
    var EVTA_Hide: String /* "EVTA_Hide" */
    var EVTA_Show: String /* "EVTA_Show" */
    var EVTA_Toggle: String /* "EVTA_Toggle" */
    var EVTA_MAX: String /* "EVTA_MAX" */
}

external open class InterpTrackInstVisibility : InterpTrackInst {
    constructor()
    constructor(Outer: UObject)
    open var Action: String /* "EVTA_Hide" | "EVTA_Show" | "EVTA_Toggle" | "EVTA_MAX" */
    open var LastUpdatePosition: Number

    companion object {
        fun Load(ResourceName: String): InterpTrackInstVisibility
        fun Find(Outer: UObject, ResourceName: String): InterpTrackInstVisibility
        fun GetDefaultObject(): InterpTrackInstVisibility
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackInstVisibility
        fun C(Other: UObject): InterpTrackInstVisibility
        fun C(Other: Any): InterpTrackInstVisibility
    }
}

external open class InterpCurvePointLinearColor {
    open var InVal: Number
    open var OutVal: LinearColor
    open var ArriveTangent: LinearColor
    open var LeaveTangent: LinearColor
    open var InterpMode: String /* "CIM_Linear" | "CIM_CurveAuto" | "CIM_Constant" | "CIM_CurveUser" | "CIM_CurveBreak" | "CIM_CurveAutoClamped" | "CIM_MAX" */
    open fun clone(): InterpCurvePointLinearColor

    companion object {
        fun C(Other: UObject): InterpCurvePointLinearColor
        fun C(Other: Any): InterpCurvePointLinearColor
    }
}

external open class InterpCurveLinearColor {
    open var Points: Array<InterpCurvePointLinearColor>
    open var bIsLooped: Boolean
    open var LoopKeyOffset: Number
    open fun clone(): InterpCurveLinearColor

    companion object {
        fun C(Other: UObject): InterpCurveLinearColor
        fun C(Other: Any): InterpCurveLinearColor
    }
}

external open class InterpTrackLinearColorBase : InterpTrack {
    constructor()
    constructor(Outer: UObject)
    open var LinearColorTrack: InterpCurveLinearColor
    open var CurveTension: Number

    companion object {
        fun Load(ResourceName: String): InterpTrackLinearColorBase
        fun Find(Outer: UObject, ResourceName: String): InterpTrackLinearColorBase
        fun GetDefaultObject(): InterpTrackLinearColorBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackLinearColorBase
        fun C(Other: UObject): InterpTrackLinearColorBase
        fun C(Other: Any): InterpTrackLinearColorBase
    }
}

external open class InterpTrackLinearColorProp : InterpTrackLinearColorBase {
    constructor()
    constructor(Outer: UObject)
    open var PropertyName: String

    companion object {
        fun Load(ResourceName: String): InterpTrackLinearColorProp
        fun Find(Outer: UObject, ResourceName: String): InterpTrackLinearColorProp
        fun GetDefaultObject(): InterpTrackLinearColorProp
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackLinearColorProp
        fun C(Other: UObject): InterpTrackLinearColorProp
        fun C(Other: Any): InterpTrackLinearColorProp
    }
}

external object EInterpMoveAxis {
    var AXIS_TranslationX: String /* "AXIS_TranslationX" */
    var AXIS_TranslationY: String /* "AXIS_TranslationY" */
    var AXIS_TranslationZ: String /* "AXIS_TranslationZ" */
    var AXIS_RotationX: String /* "AXIS_RotationX" */
    var AXIS_RotationY: String /* "AXIS_RotationY" */
    var AXIS_RotationZ: String /* "AXIS_RotationZ" */
    var AXIS_MAX: String /* "AXIS_MAX" */
}

external open class InterpTrackMoveAxis : InterpTrackFloatBase {
    constructor()
    constructor(Outer: UObject)
    open var MoveAxis: String /* "AXIS_TranslationX" | "AXIS_TranslationY" | "AXIS_TranslationZ" | "AXIS_RotationX" | "AXIS_RotationY" | "AXIS_RotationZ" | "AXIS_MAX" */
    open var LookupTrack: InterpLookupTrack

    companion object {
        fun Load(ResourceName: String): InterpTrackMoveAxis
        fun Find(Outer: UObject, ResourceName: String): InterpTrackMoveAxis
        fun GetDefaultObject(): InterpTrackMoveAxis
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackMoveAxis
        fun C(Other: UObject): InterpTrackMoveAxis
        fun C(Other: Any): InterpTrackMoveAxis
    }
}

external open class ParticleReplayTrackKey {
    open var Time: Number
    open var Duration: Number
    open var ClipIDNumber: Number
    open fun clone(): ParticleReplayTrackKey

    companion object {
        fun C(Other: UObject): ParticleReplayTrackKey
        fun C(Other: Any): ParticleReplayTrackKey
    }
}

external open class InterpTrackParticleReplay : InterpTrack {
    constructor()
    constructor(Outer: UObject)
    open var TrackKeys: Array<ParticleReplayTrackKey>
    open var bIsCapturingReplay: Boolean
    open var FixedTimeStep: Number

    companion object {
        fun Load(ResourceName: String): InterpTrackParticleReplay
        fun Find(Outer: UObject, ResourceName: String): InterpTrackParticleReplay
        fun GetDefaultObject(): InterpTrackParticleReplay
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackParticleReplay
        fun C(Other: UObject): InterpTrackParticleReplay
        fun C(Other: Any): InterpTrackParticleReplay
    }
}

external open class InterpTrackSlomo : InterpTrackFloatBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InterpTrackSlomo
        fun Find(Outer: UObject, ResourceName: String): InterpTrackSlomo
        fun GetDefaultObject(): InterpTrackSlomo
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackSlomo
        fun C(Other: UObject): InterpTrackSlomo
        fun C(Other: Any): InterpTrackSlomo
    }
}

external open class SoundTrackKey {
    open var Time: Number
    open var Volume: Number
    open var Pitch: Number
    open var Sound: SoundBase
    open fun clone(): SoundTrackKey

    companion object {
        fun C(Other: UObject): SoundTrackKey
        fun C(Other: Any): SoundTrackKey
    }
}

external open class InterpTrackSound : InterpTrackVectorBase {
    constructor()
    constructor(Outer: UObject)
    open var Sounds: Array<SoundTrackKey>
    open var bPlayOnReverse: Boolean
    open var bContinueSoundOnMatineeEnd: Boolean
    open var bSuppressSubtitles: Boolean
    open var bTreatAsDialogue: Boolean
    open var bAttach: Boolean

    companion object {
        fun Load(ResourceName: String): InterpTrackSound
        fun Find(Outer: UObject, ResourceName: String): InterpTrackSound
        fun GetDefaultObject(): InterpTrackSound
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackSound
        fun C(Other: UObject): InterpTrackSound
        fun C(Other: Any): InterpTrackSound
    }
}

external open class ToggleTrackKey {
    open var Time: Number
    open var ToggleAction: String /* "ETTA_Off" | "ETTA_On" | "ETTA_Toggle" | "ETTA_Trigger" | "ETTA_MAX" */
    open fun clone(): ToggleTrackKey

    companion object {
        fun C(Other: UObject): ToggleTrackKey
        fun C(Other: Any): ToggleTrackKey
    }
}

external open class InterpTrackToggle : InterpTrack {
    constructor()
    constructor(Outer: UObject)
    open var ToggleTrack: Array<ToggleTrackKey>
    open var bActivateSystemEachUpdate: Boolean
    open var bActivateWithJustAttachedFlag: Boolean
    open var bFireEventsWhenForwards: Boolean
    open var bFireEventsWhenBackwards: Boolean
    open var bFireEventsWhenJumpingForwards: Boolean

    companion object {
        fun Load(ResourceName: String): InterpTrackToggle
        fun Find(Outer: UObject, ResourceName: String): InterpTrackToggle
        fun GetDefaultObject(): InterpTrackToggle
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackToggle
        fun C(Other: UObject): InterpTrackToggle
        fun C(Other: Any): InterpTrackToggle
    }
}

external open class InterpTrackVectorProp : InterpTrackVectorBase {
    constructor()
    constructor(Outer: UObject)
    open var PropertyName: String

    companion object {
        fun Load(ResourceName: String): InterpTrackVectorProp
        fun Find(Outer: UObject, ResourceName: String): InterpTrackVectorProp
        fun GetDefaultObject(): InterpTrackVectorProp
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackVectorProp
        fun C(Other: UObject): InterpTrackVectorProp
        fun C(Other: Any): InterpTrackVectorProp
    }
}

external object EVisibilityTrackCondition {
    var EVTC_Always: String /* "EVTC_Always" */
    var EVTC_GoreEnabled: String /* "EVTC_GoreEnabled" */
    var EVTC_GoreDisabled: String /* "EVTC_GoreDisabled" */
    var EVTC_MAX: String /* "EVTC_MAX" */
}

external open class VisibilityTrackKey {
    open var Time: Number
    open var Action: String /* "EVTA_Hide" | "EVTA_Show" | "EVTA_Toggle" | "EVTA_MAX" */
    open var ActiveCondition: String /* "EVTC_Always" | "EVTC_GoreEnabled" | "EVTC_GoreDisabled" | "EVTC_MAX" */
    open fun clone(): VisibilityTrackKey

    companion object {
        fun C(Other: UObject): VisibilityTrackKey
        fun C(Other: Any): VisibilityTrackKey
    }
}

external open class InterpTrackVisibility : InterpTrack {
    constructor()
    constructor(Outer: UObject)
    open var VisibilityTrack: Array<VisibilityTrackKey>
    open var bFireEventsWhenForwards: Boolean
    open var bFireEventsWhenBackwards: Boolean
    open var bFireEventsWhenJumpingForwards: Boolean

    companion object {
        fun Load(ResourceName: String): InterpTrackVisibility
        fun Find(Outer: UObject, ResourceName: String): InterpTrackVisibility
        fun GetDefaultObject(): InterpTrackVisibility
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackVisibility
        fun C(Other: UObject): InterpTrackVisibility
        fun C(Other: Any): InterpTrackVisibility
    }
}

external open class IntSerialization : UObject {
    constructor()
    constructor(Outer: UObject)
    open var UnsignedInt16Variable: Any
    open var UnsignedInt32Variable: Any
    open var UnsignedInt64Variable: Any
    open var SignedInt8Variable: Any
    open var SignedInt16Variable: Any
    open var SignedInt64Variable: Any
    open var UnsignedInt8Variable: Number
    open var SignedInt32Variable: Number

    companion object {
        fun Load(ResourceName: String): IntSerialization
        fun Find(Outer: UObject, ResourceName: String): IntSerialization
        fun GetDefaultObject(): IntSerialization
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): IntSerialization
        fun C(Other: UObject): IntSerialization
        fun C(Other: Any): IntSerialization
    }
}

external open class KillZVolume(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : PhysicsVolume {
    companion object {
        fun GetDefaultObject(): KillZVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): KillZVolume
        fun C(Other: UObject): KillZVolume
        fun C(Other: Any): KillZVolume
    }
}

external interface `T$669` {
    var FilteredArray: Array<Actor>
}

external interface `T$670` {
    var RandomStream: RandomStream
    var OutItem: Number
    var OutIndex: Number
}

external interface `T$671` {
    var OutItem: Number
    var OutIndex: Number
}

external interface `T$672` {
    var Item: Number
}

external open class KismetArrayLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): KismetArrayLibrary
        fun Find(Outer: UObject, ResourceName: String): KismetArrayLibrary
        fun GetDefaultObject(): KismetArrayLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): KismetArrayLibrary
        fun SetArrayPropertyByName(UObject: UObject, PropertyName: String, Value: Array<Number>)
        fun FilterArray(TargetArray: Array<Actor>, FilterClass: UnrealEngineClass, FilteredArray: Array<Actor> = definedExternally): `T$669`
        fun SwapArrayElements(TargetArray: Array<Number>, FirstIndex: Number, SecondIndex: Number)
        fun Shuffle(TargetArray: Array<Number>)
        fun SetArrayElem(TargetArray: Array<Number>, index: Number, Item: Number, bSizeToFit: Boolean)
        fun Reverse(TargetArray: Array<Number>)
        fun Resize(TargetArray: Array<Number>, Size: Number)
        fun RemoveItem(TargetArray: Array<Number>, Item: Number): Boolean
        fun RemoveIndex(TargetArray: Array<Number>, IndexToRemove: Number)
        fun RandomArrayItemfromStream(TargetArray: Array<Number>, RandomStream: RandomStream = definedExternally, OutItem: Number = definedExternally, OutIndex: Number = definedExternally): `T$670`
        fun RandomArrayItem(TargetArray: Array<Number>, OutItem: Number = definedExternally, OutIndex: Number = definedExternally): `T$671`
        fun Length(TargetArray: Array<Number>): Number
        fun LastIndex(TargetArray: Array<Number>): Number
        fun IsValidIndex(TargetArray: Array<Number>, IndexToTest: Number): Boolean
        fun Insert(TargetArray: Array<Number>, NewItem: Number, index: Number)
        fun Identical(ArrayA: Array<Number>, ArrayB: Array<Number>): Boolean
        fun Get(TargetArray: Array<Number>, index: Number, Item: Number = definedExternally): `T$672`
        fun FindItem(TargetArray: Array<Number>, ItemToFind: Number): Number
        fun ContainsItem(TargetArray: Array<Number>, ItemToFind: Number): Boolean
        fun Clear(TargetArray: Array<Number>)
        fun AppendArray(TargetArray: Array<Number>, SourceArray: Array<Number>)
        fun AddUnique(TargetArray: Array<Number>, NewItem: Number): Number
        fun Add(TargetArray: Array<Number>, NewItem: Number): Number
        fun C(Other: UObject): KismetArrayLibrary
        fun C(Other: Any): KismetArrayLibrary
    }
}

external interface `T$673` {
    var OutGuid: Guid
    var Success: Boolean
}

external open class KismetGuidLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): KismetGuidLibrary
        fun Find(Outer: UObject, ResourceName: String): KismetGuidLibrary
        fun GetDefaultObject(): KismetGuidLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): KismetGuidLibrary
        fun ParseStringtoGuid(GuidString: String, OutGuid: Guid = definedExternally, Success: Boolean = definedExternally): `T$673`
        fun NotEqual_GuidGuid(A: Guid, B: Guid): Boolean
        fun NewGuid(): Guid
        fun IsValid_Guid(InGuid: Guid): Boolean
        fun Invalidate_Guid(InGuid: Guid = definedExternally): `T$19`
        fun EqualEqual_GuidGuid(A: Guid, B: Guid): Boolean
        fun Conv_GuidToString(InGuid: Guid): String
        fun C(Other: UObject): KismetGuidLibrary
        fun C(Other: Any): KismetGuidLibrary
    }
}

external open class KismetInputLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): KismetInputLibrary
        fun Find(Outer: UObject, ResourceName: String): KismetInputLibrary
        fun GetDefaultObject(): KismetInputLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): KismetInputLibrary
        fun PointerEvent_IsTouchEvent(Input: UPointerEvent): Boolean
        fun PointerEvent_IsMouseButtonDown(Input: UPointerEvent, MouseButton: Key): Boolean
        fun PointerEvent_GetWheelDelta(Input: UPointerEvent): Number
        fun PointerEvent_GetUserIndex(Input: UPointerEvent): Number
        fun PointerEvent_GetTouchpadIndex(Input: UPointerEvent): Number
        fun PointerEvent_GetScreenSpacePosition(Input: UPointerEvent): Vector2D
        fun PointerEvent_GetPointerIndex(Input: UPointerEvent): Number
        fun PointerEvent_GetLastScreenSpacePosition(Input: UPointerEvent): Vector2D
        fun PointerEvent_GetGestureType(Input: UPointerEvent): String /* "None" | "Scroll" | "Magnify" | "Swipe" | "Rotate" | "LongPress" | "ESlateGesture_MAX" */
        fun PointerEvent_GetGestureDelta(Input: UPointerEvent): Vector2D
        fun PointerEvent_GetEffectingButton(Input: UPointerEvent): Key
        fun PointerEvent_GetCursorDelta(Input: UPointerEvent): Vector2D
        fun Key_IsVectorAxis(Key: Key): Boolean
        fun Key_IsValid(Key: Key): Boolean
        fun Key_IsMouseButton(Key: Key): Boolean
        fun Key_IsModifierKey(Key: Key): Boolean
        fun Key_IsKeyboardKey(Key: Key): Boolean
        fun Key_IsGamepadKey(Key: Key): Boolean
        fun Key_IsDigital(Key: Key): Boolean
        fun Key_IsButtonAxis(Key: Key): Boolean
        fun Key_IsAxis3D(Key: Key): Boolean
        fun Key_IsAxis2D(Key: Key): Boolean
        fun Key_IsAxis1D(Key: Key): Boolean
        fun Key_IsAnalog(Key: Key): Boolean
        fun Key_GetNavigationDirectionFromKey(InKeyEvent: KeyEvent): String /* "Left" | "Right" | "Up" | "Down" | "Next" | "Previous" | "Num" | "Invalid" | "EUINavigation_MAX" */
        fun Key_GetNavigationDirectionFromAnalog(InAnalogEvent: AnalogInputEvent): String /* "Left" | "Right" | "Up" | "Down" | "Next" | "Previous" | "Num" | "Invalid" | "EUINavigation_MAX" */
        fun Key_GetNavigationActionFromKey(InKeyEvent: KeyEvent): String /* "Accept" | "Back" | "Num" | "Invalid" | "EUINavigationAction_MAX" */
        fun Key_GetNavigationAction(InKey: Key): String /* "Accept" | "Back" | "Num" | "Invalid" | "EUINavigationAction_MAX" */
        fun Key_GetDisplayName(Key: Key): String
        fun InputEvent_IsShiftDown(Input: InputEvent): Boolean
        fun InputEvent_IsRightShiftDown(Input: InputEvent): Boolean
        fun InputEvent_IsRightControlDown(Input: InputEvent): Boolean
        fun InputEvent_IsRightCommandDown(Input: InputEvent): Boolean
        fun InputEvent_IsRightAltDown(Input: InputEvent): Boolean
        fun InputEvent_IsRepeat(Input: InputEvent): Boolean
        fun InputEvent_IsLeftShiftDown(Input: InputEvent): Boolean
        fun InputEvent_IsLeftControlDown(Input: InputEvent): Boolean
        fun InputEvent_IsLeftCommandDown(Input: InputEvent): Boolean
        fun InputEvent_IsLeftAltDown(Input: InputEvent): Boolean
        fun InputEvent_IsControlDown(Input: InputEvent): Boolean
        fun InputEvent_IsCommandDown(Input: InputEvent): Boolean
        fun InputEvent_IsAltDown(Input: InputEvent): Boolean
        fun InputChord_GetDisplayName(Key: InputChord): String
        fun GetUserIndex(Input: KeyEvent): Number
        fun GetKey(Input: KeyEvent): Key
        fun GetAnalogValue(Input: AnalogInputEvent): Number
        fun EqualEqual_KeyKey(A: Key, B: Key): Boolean
        fun EqualEqual_InputChordInputChord(A: InputChord, B: InputChord): Boolean
        fun CalibrateTilt()
        fun C(Other: UObject): KismetInputLibrary
        fun C(Other: Any): KismetInputLibrary
    }
}

external object ELocalizedTextSourceCategory {
    var Game: String /* "Game" */
    var Engine: String /* "Engine" */
    var Editor: String /* "Editor" */
    var ELocalizedTextSourceCategory_MAX: String /* "ELocalizedTextSourceCategory_MAX" */
}

external open class KismetInternationalizationLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): KismetInternationalizationLibrary
        fun Find(Outer: UObject, ResourceName: String): KismetInternationalizationLibrary
        fun GetDefaultObject(): KismetInternationalizationLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): KismetInternationalizationLibrary
        fun SetCurrentLocale(Culture: String, SaveToConfig: Boolean): Boolean
        fun SetCurrentLanguageAndLocale(Culture: String, SaveToConfig: Boolean): Boolean
        fun SetCurrentLanguage(Culture: String, SaveToConfig: Boolean): Boolean
        fun SetCurrentCulture(Culture: String, SaveToConfig: Boolean): Boolean
        fun SetCurrentAssetGroupCulture(AssetGroup: String, Culture: String, SaveToConfig: Boolean): Boolean
        fun GetSuitableCulture(AvailableCultures: Array<String>, CultureToMatch: String, FallbackCulture: String): String
        fun GetNativeCulture(TextCategory: String /* "Game" | "Engine" | "Editor" | "ELocalizedTextSourceCategory_MAX" */): String
        fun GetLocalizedCultures(IncludeGame: Boolean, IncludeEngine: Boolean, IncludeEditor: Boolean, IncludeAdditional: Boolean): Array<String>
        fun GetCurrentLocale(): String
        fun GetCurrentLanguage(): String
        fun GetCurrentCulture(): String
        fun GetCurrentAssetGroupCulture(AssetGroup: String): String
        fun GetCultureDisplayName(Culture: String, Localized: Boolean): String
        fun ClearCurrentAssetGroupCulture(AssetGroup: String, SaveToConfig: Boolean)
        fun C(Other: UObject): KismetInternationalizationLibrary
        fun C(Other: Any): KismetInternationalizationLibrary
    }
}

external open class KismetMaterialLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): KismetMaterialLibrary
        fun Find(Outer: UObject, ResourceName: String): KismetMaterialLibrary
        fun GetDefaultObject(): KismetMaterialLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): KismetMaterialLibrary
        fun SetVectorParameterValue(WorldContextObject: UObject, Collection: MaterialParameterCollection, ParameterName: String, ParameterValue: LinearColor)
        fun SetScalarParameterValue(WorldContextObject: UObject, Collection: MaterialParameterCollection, ParameterName: String, ParameterValue: Number)
        fun GetVectorParameterValue(WorldContextObject: UObject, Collection: MaterialParameterCollection, ParameterName: String): LinearColor
        fun GetScalarParameterValue(WorldContextObject: UObject, Collection: MaterialParameterCollection, ParameterName: String): Number
        fun CreateDynamicMaterialInstance(WorldContextObject: UObject, Parent: MaterialInterface, OptionalName: String, CreationFlags: String /* "None" | "Transient" | "EMIDCreationFlags_MAX" */): MaterialInstanceDynamic
        fun C(Other: UObject): KismetMaterialLibrary
        fun C(Other: Any): KismetMaterialLibrary
    }
}

external interface `T$674` {
    var SpringState: FloatSpringState
}

external open class FloatSpringState {
    open fun clone(): FloatSpringState
    open fun ResetFloatSpringState(): `T$674`

    companion object {
        fun C(Other: UObject): FloatSpringState
        fun C(Other: Any): FloatSpringState
        fun ResetFloatSpringState(SpringState: FloatSpringState = definedExternally): `T$674`
    }
}

external interface `T$675` {
    var Result: Timespan
    var `$`: Boolean
}

external interface `T$676` {
    var IndexOfMinValue: Number
    var MinValue: Number
}

external interface `T$677` {
    var IndexOfMaxValue: Number
    var MaxValue: Number
}

external interface `T$678` {
    var Remainder: Number
    var `$`: Number
}

external interface `T$679` {
    var SpringState: FloatSpringState
    var `$`: Number
}

external interface `T$680` {
    var Result: DateTime
    var `$`: Boolean
}

external open class KismetMathLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): KismetMathLibrary
        fun Find(Outer: UObject, ResourceName: String): KismetMathLibrary
        fun GetDefaultObject(): KismetMathLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): KismetMathLibrary
        fun BitwiseXOR(A: Number, B: Number): Number
        fun BitwiseXOR(A: Any, B: Any): Any
        fun Wrap(Value: Number, Min: Number, Max: Number): Number
        fun WeightedMovingAverage_FVector(CurrentSample: Vector, PreviousSample: Vector, Weight: Number): Vector
        fun WeightedMovingAverage_FRotator(CurrentSample: Rotator, PreviousSample: Rotator, Weight: Number): Rotator
        fun WeightedMovingAverageFloat(CurrentSample: Number, PreviousSample: Number, Weight: Number): Number
        fun VSizeXYSquared(A: Vector): Number
        fun VSizeXY(A: Vector): Number
        fun VSizeSquared(A: Vector): Number
        fun VSize2DSquared(A: Vector2D): Number
        fun VSize2D(A: Vector2D): Number
        fun VSize(A: Vector): Number
        fun VLerp(A: Vector, B: Vector, Alpha: Number): Vector
        fun VInterpTo_Constant(Current: Vector, Target: Vector, DeltaTime: Number, InterpSpeed: Number): Vector
        fun VInterpTo(Current: Vector, Target: Vector, DeltaTime: Number, InterpSpeed: Number): Vector
        fun VectorSpringInterp(Current: Vector, Target: Vector, SpringState: VectorSpringState = definedExternally, Stiffness: Number = definedExternally, CriticalDampingFactor: Number = definedExternally, DeltaTime: Number = definedExternally, Mass: Number = definedExternally): `T$245`
        fun Vector_Zero(): Vector
        fun Vector_Up(): Vector
        fun Vector_UnwindEuler(A: Vector = definedExternally): `T$244`
        fun Vector_UnitCartesianToSpherical(A: Vector): Vector2D
        fun Vector_ToRadians(A: Vector): Vector
        fun Vector_ToDegrees(A: Vector): Vector
        fun Vector_SnappedToGrid(InVect: Vector, InGridSize: Number): Vector
        fun Vector_Set(A: Vector = definedExternally, X: Number = definedExternally, Y: Number = definedExternally, Z: Number = definedExternally): `T$244`
        fun Vector_Right(): Vector
        fun Vector_Reciprocal(A: Vector): Vector
        fun Vector_ProjectOnToNormal(V: Vector, InNormal: Vector): Vector
        fun Vector_One(): Vector
        fun Vector_NormalUnsafe(A: Vector): Vector
        fun Vector_Normalize(A: Vector = definedExternally, Tolerance: Number = definedExternally): `T$244`
        fun Vector_Normal2D(A: Vector, Tolerance: Number): Vector
        fun Vector_MirrorByPlane(A: Vector, InPlane: Plane): Vector
        fun Vector_Left(): Vector
        fun Vector_IsZero(A: Vector): Boolean
        fun Vector_IsUnit(A: Vector, SquaredLenthTolerance: Number): Boolean
        fun Vector_IsUniform(A: Vector, Tolerance: Number): Boolean
        fun Vector_IsNormal(A: Vector): Boolean
        fun Vector_IsNearlyZero(A: Vector, Tolerance: Number): Boolean
        fun Vector_IsNAN(A: Vector): Boolean
        fun Vector_HeadingAngle(A: Vector): Number
        fun Vector_GetSignVector(A: Vector): Vector
        fun Vector_GetProjection(A: Vector): Vector
        fun Vector_GetAbsMin(A: Vector): Number
        fun Vector_GetAbsMax(A: Vector): Number
        fun Vector_GetAbs(A: Vector): Vector
        fun Vector_Forward(): Vector
        fun Vector_Down(): Vector
        fun Vector_DistanceSquared(v1: Vector, v2: Vector): Number
        fun Vector_Distance2DSquared(v1: Vector, v2: Vector): Number
        fun Vector_Distance2D(v1: Vector, v2: Vector): Number
        fun Vector_Distance(v1: Vector, v2: Vector): Number
        fun Vector_CosineAngle2D(A: Vector, B: Vector): Number
        fun Vector_ComponentMin(A: Vector, B: Vector): Vector
        fun Vector_ComponentMax(A: Vector, B: Vector): Vector
        fun Vector_ClampSizeMax2D(A: Vector, Max: Number): Vector
        fun Vector_ClampSizeMax(A: Vector, Max: Number): Vector
        fun Vector_ClampSize2D(A: Vector, Min: Number, Max: Number): Vector
        fun Vector_BoundedToCube(InVect: Vector, InRadius: Number): Vector
        fun Vector_BoundedToBox(InVect: Vector, InBoxMin: Vector, InBoxMax: Vector): Vector
        fun Vector_Backward(): Vector
        fun Vector_Assign(A: Vector = definedExternally, InVector: Vector = definedExternally): `T$244`
        fun Vector_AddBounded(A: Vector = definedExternally, InAddVect: Vector = definedExternally, InRadius: Number = definedExternally): `T$244`
        fun Vector4_Zero(): Vector4
        fun Vector4_SizeSquared3(A: Vector4): Number
        fun Vector4_SizeSquared(A: Vector4): Number
        fun Vector4_Size3(A: Vector4): Number
        fun Vector4_Size(A: Vector4): Number
        fun Vector4_Set(A: Vector4 = definedExternally, X: Number = definedExternally, Y: Number = definedExternally, Z: Number = definedExternally, W: Number = definedExternally): `T$4`
        fun Vector4_NormalUnsafe3(A: Vector4): Vector4
        fun Vector4_Normalize3(A: Vector4 = definedExternally, Tolerance: Number = definedExternally): `T$4`
        fun Vector4_Normal3(A: Vector4, Tolerance: Number): Vector4
        fun Vector4_Negated(A: Vector4): Vector4
        fun Vector4_MirrorByVector3(Direction: Vector4, SurfaceNormal: Vector4): Vector4
        fun Vector4_IsZero(A: Vector4): Boolean
        fun Vector4_IsUnit3(A: Vector4, SquaredLenthTolerance: Number): Boolean
        fun Vector4_IsNormal3(A: Vector4): Boolean
        fun Vector4_IsNearlyZero3(A: Vector4, Tolerance: Number): Boolean
        fun Vector4_IsNAN(A: Vector4): Boolean
        fun Vector4_DotProduct3(A: Vector4, B: Vector4): Number
        fun Vector4_DotProduct(A: Vector4, B: Vector4): Number
        fun Vector4_CrossProduct3(A: Vector4, B: Vector4): Vector4
        fun Vector4_Assign(A: Vector4 = definedExternally, InVector: Vector4 = definedExternally): `T$4`
        fun Vector2DInterpTo_Constant(Current: Vector2D, Target: Vector2D, DeltaTime: Number, InterpSpeed: Number): Vector2D
        fun Vector2DInterpTo(Current: Vector2D, Target: Vector2D, DeltaTime: Number, InterpSpeed: Number): Vector2D
        fun Vector2D_Zero(): Vector2D
        fun Vector2D_Unit45Deg(): Vector2D
        fun Vector2D_One(): Vector2D
        fun VEase(A: Vector, B: Vector, Alpha: Number, EasingFunc: String /* "Linear" | "Step" | "SinusoidalIn" | "SinusoidalOut" | "SinusoidalInOut" | "EaseIn" | "EaseOut" | "EaseInOut" | "ExpoIn" | "ExpoOut" | "ExpoInOut" | "CircularIn" | "CircularOut" | "CircularInOut" | "EEasingFunc_MAX" */, BlendExp: Number, Steps: Number): Vector
        fun UtcNow(): DateTime
        fun TransformVector4(Matrix: Matrix, Vec4: Vector4): Vector4
        fun TransformRotation(T: Transform, Rotation: Rotator): Rotator
        fun TransformLocation(T: Transform, Location: Vector): Vector
        fun TransformDirection(T: Transform, Direction: Vector): Vector
        fun Transform_Determinant(Transform: Transform): Number
        fun ToSign2D(A: Vector2D): Vector2D
        fun ToRounded2D(A: Vector2D): Vector2D
        fun ToDirectionAndLength2D(A: Vector2D, OutDir: Vector2D = definedExternally, OutLength: Number = definedExternally): `T$230`
        fun Today(): DateTime
        fun TLerp(A: Transform, B: Transform, Alpha: Number, InterpMode: String /* "QuatInterp" | "EulerInterp" | "DualQuatInterp" | "ELerpInterpolationMode_MAX" */): Transform
        fun TInterpTo(Current: Transform, Target: Transform, DeltaTime: Number, InterpSpeed: Number): Transform
        fun TimespanZeroValue(): Timespan
        fun TimespanRatio(A: Timespan, B: Timespan): Number
        fun TimespanMinValue(): Timespan
        fun TimespanMaxValue(): Timespan
        fun TimespanFromString(TimespanString: String, Result: Timespan = definedExternally): `T$675`
        fun TEase(A: Transform, B: Transform, Alpha: Number, EasingFunc: String /* "Linear" | "Step" | "SinusoidalIn" | "SinusoidalOut" | "SinusoidalInOut" | "EaseIn" | "EaseOut" | "EaseInOut" | "ExpoIn" | "ExpoOut" | "ExpoInOut" | "CircularIn" | "CircularOut" | "CircularInOut" | "EEasingFunc_MAX" */, BlendExp: Number, Steps: Number): Transform
        fun Tan(A: Number): Number
        fun Subtract_VectorVector(A: Vector, B: Vector): Vector
        fun Subtract_VectorInt(A: Vector, B: Number): Vector
        fun Subtract_VectorFloat(A: Vector, B: Number): Vector
        fun Subtract_Vector4Vector4(A: Vector4, B: Vector4): Vector4
        fun Subtract_Vector2DVector2D(A: Vector2D, B: Vector2D): Vector2D
        fun Subtract_Vector2DFloat(A: Vector2D, B: Number): Vector2D
        fun Subtract_TimespanTimespan(A: Timespan, B: Timespan): Timespan
        fun Subtract_QuatQuat(A: Quat, B: Quat): Quat
        fun Subtract_LinearColorLinearColor(A: LinearColor, B: LinearColor): LinearColor
        fun Subtract_IntPointIntPoint(A: IntPoint, B: IntPoint): IntPoint
        fun Subtract_IntPointInt(A: IntPoint, B: Number): IntPoint
        fun Subtract_IntInt(A: Number, B: Number): Number
        fun Subtract_Int64Int64(A: Any, B: Any): Any
        fun Subtract_FloatFloat(A: Number, B: Number): Number
        fun Subtract_DateTimeTimespan(A: DateTime, B: Timespan): DateTime
        fun Subtract_DateTimeDateTime(A: DateTime, B: DateTime): Timespan
        fun Subtract_ByteByte(A: Number, B: Number): Number
        fun Square(A: Number): Number
        fun Sqrt(A: Number): Number
        fun Spherical2DToUnitCartesian(A: Vector2D): Vector
        fun Sin(A: Number): Number
        fun Sign(A: Any): Any
        fun Sign(A: Number): Number
        fun SetRandomStreamSeed(Stream: RandomStream = definedExternally, NewSeed: Number = definedExternally): `T$11`
        fun Set2D(A: Vector2D = definedExternally, X: Number = definedExternally, Y: Number = definedExternally): `T$229`
        fun SelectVector(A: Vector, B: Vector, bPickA: Boolean): Vector
        fun SelectTransform(A: Transform, B: Transform, bPickA: Boolean): Transform
        fun SelectString(A: String, B: String, bPickA: Boolean): String
        fun SelectRotator(A: Rotator, B: Rotator, bPickA: Boolean): Rotator
        fun SelectObject(A: UObject, B: UObject, bSelectA: Boolean): UObject
        fun SelectInt(A: Number, B: Number, bPickA: Boolean): Number
        fun SelectFloat(A: Number, B: Number, bPickA: Boolean): Number
        fun SelectColor(A: LinearColor, B: LinearColor, bPickA: Boolean): LinearColor
        fun SelectClass(A: UnrealEngineClass, B: UnrealEngineClass, bSelectA: Boolean): UnrealEngineClass
        fun SeedRandomStream(Stream: RandomStream = definedExternally): `T$11`
        fun SafeDivide(A: Number, B: Number): Number
        fun RoundtoInt64(A: Number): Any
        fun Round(A: Number): Number
        fun RotatorFromAxisAndAngle(Axis: Vector, Angle: Number): Rotator
        fun RotateAngleAxis(InVect: Vector, AngleDeg: Number, Axis: Vector): Vector
        fun RLerp(A: Rotator, B: Rotator, Alpha: Number, bShortestPath: Boolean): Rotator
        fun RInterpTo_Constant(Current: Rotator, Target: Rotator, DeltaTime: Number, InterpSpeed: Number): Rotator
        fun RInterpTo(Current: Rotator, Target: Rotator, DeltaTime: Number, InterpSpeed: Number): Rotator
        fun RGBToHSV_Vector(RGB: LinearColor, HSV: LinearColor = definedExternally): `T$24`
        fun RGBToHSV(InColor: LinearColor, H: Number = definedExternally, S: Number = definedExternally, V: Number = definedExternally, A: Number = definedExternally): `T$23`
        fun RGBLinearToHSV(RGB: LinearColor): LinearColor
        fun ResetVectorSpringState(SpringState: VectorSpringState = definedExternally): `T$231`
        fun ResetRandomStream(Stream: RandomStream)
        fun ResetFloatSpringState(SpringState: FloatSpringState = definedExternally): `T$674`
        fun REase(A: Rotator, B: Rotator, Alpha: Number, bShortestPath: Boolean, EasingFunc: String /* "Linear" | "Step" | "SinusoidalIn" | "SinusoidalOut" | "SinusoidalInOut" | "EaseIn" | "EaseOut" | "EaseInOut" | "ExpoIn" | "ExpoOut" | "ExpoInOut" | "CircularIn" | "CircularOut" | "CircularInOut" | "EEasingFunc_MAX" */, BlendExp: Number, Steps: Number): Rotator
        fun RandomUnitVectorInEllipticalConeInRadiansFromStream(ConeDir: Vector, MaxYawInRadians: Number, MaxPitchInRadians: Number, Stream: RandomStream): Vector
        fun RandomUnitVectorInEllipticalConeInRadians(ConeDir: Vector, MaxYawInRadians: Number, MaxPitchInRadians: Number): Vector
        fun RandomUnitVectorInEllipticalConeInDegreesFromStream(ConeDir: Vector, MaxYawInDegrees: Number, MaxPitchInDegrees: Number, Stream: RandomStream): Vector
        fun RandomUnitVectorInEllipticalConeInDegrees(ConeDir: Vector, MaxYawInDegrees: Number, MaxPitchInDegrees: Number): Vector
        fun RandomUnitVectorInConeInRadiansFromStream(ConeDir: Vector, ConeHalfAngleInRadians: Number, Stream: RandomStream): Vector
        fun RandomUnitVectorInConeInRadians(ConeDir: Vector, ConeHalfAngleInRadians: Number): Vector
        fun RandomUnitVectorInConeInDegreesFromStream(ConeDir: Vector, ConeHalfAngleInDegrees: Number, Stream: RandomStream): Vector
        fun RandomUnitVectorInConeInDegrees(ConeDir: Vector, ConeHalfAngleInDegrees: Number): Vector
        fun RandomUnitVectorFromStream(Stream: RandomStream): Vector
        fun RandomUnitVector(): Vector
        fun RandomRotatorFromStream(bRoll: Boolean, Stream: RandomStream): Rotator
        fun RandomRotator(bRoll: Boolean): Rotator
        fun RandomPointInBoundingBox(Origin: Vector, BoxExtent: Vector): Vector
        fun RandomIntegerInRangeFromStream(Min: Number, Max: Number, Stream: RandomStream): Number
        fun RandomIntegerInRange(Min: Number, Max: Number): Number
        fun RandomIntegerFromStream(Max: Number, Stream: RandomStream): Number
        fun RandomInteger64InRange(Min: Any, Max: Any): Any
        fun RandomInteger64(Max: Any): Any
        fun RandomInteger(Max: Number): Number
        fun RandomFloatInRangeFromStream(Min: Number, Max: Number, Stream: RandomStream): Number
        fun RandomFloatInRange(Min: Number, Max: Number): Number
        fun RandomFloatFromStream(Stream: RandomStream): Number
        fun RandomFloat(): Number
        fun RandomBoolWithWeightFromStream(Weight: Number, RandomStream: RandomStream): Boolean
        fun RandomBoolWithWeight(Weight: Number): Boolean
        fun RandomBoolFromStream(Stream: RandomStream): Boolean
        fun RandomBool(): Boolean
        fun RadiansToDegrees(A: Number): Number
        fun Quat_VectorUp(Q: Quat): Vector
        fun Quat_VectorRight(Q: Quat): Vector
        fun Quat_VectorForward(Q: Quat): Vector
        fun Quat_UnrotateVector(Q: Quat, V: Vector): Vector
        fun Quat_SizeSquared(Q: Quat): Number
        fun Quat_Size(Q: Quat): Number
        fun Quat_SetFromEuler(Q: Quat = definedExternally, Euler: Vector = definedExternally): `T$2`
        fun Quat_SetComponents(Q: Quat = definedExternally, X: Number = definedExternally, Y: Number = definedExternally, Z: Number = definedExternally, W: Number = definedExternally): `T$2`
        fun Quat_Rotator(Q: Quat): Rotator
        fun Quat_RotateVector(Q: Quat, V: Vector): Vector
        fun Quat_Normalized(Q: Quat, Tolerance: Number): Quat
        fun Quat_Normalize(Q: Quat = definedExternally, Tolerance: Number = definedExternally): `T$2`
        fun Quat_MakeFromEuler(Euler: Vector): Quat
        fun Quat_Log(Q: Quat): Quat
        fun Quat_IsNormalized(Q: Quat): Boolean
        fun Quat_IsNonFinite(Q: Quat): Boolean
        fun Quat_IsIdentity(Q: Quat, Tolerance: Number): Boolean
        fun Quat_IsFinite(Q: Quat): Boolean
        fun Quat_Inversed(Q: Quat): Quat
        fun Quat_Identity(): Quat
        fun Quat_GetRotationAxis(Q: Quat): Vector
        fun Quat_GetAxisZ(Q: Quat): Vector
        fun Quat_GetAxisY(Q: Quat): Vector
        fun Quat_GetAxisX(Q: Quat): Vector
        fun Quat_GetAngle(Q: Quat): Number
        fun Quat_Exp(Q: Quat): Quat
        fun Quat_Euler(Q: Quat): Vector
        fun Quat_EnforceShortestArcWith(A: Quat = definedExternally, B: Quat = definedExternally): `T$1`
        fun Quat_AngularDistance(A: Quat, B: Quat): Number
        fun ProjectVectorOnToVector(V: Vector, Target: Vector): Vector
        fun ProjectVectorOnToPlane(V: Vector, PlaneNormal: Vector): Vector
        fun ProjectPointOnToPlane(Point: Vector, PlaneBase: Vector, PlaneNormal: Vector): Vector
        fun PointsAreCoplanar(Points: Array<Vector>, Tolerance: Number): Boolean
        fun PerlinNoise1D(Value: Number): Number
        fun Percent_IntInt(A: Number, B: Number): Number
        fun Percent_FloatFloat(A: Number, B: Number): Number
        fun Percent_ByteByte(A: Number, B: Number): Number
        fun BitwiseOR(A: Number, B: Number): Number
        fun BitwiseOR(A: Any, B: Any): Any
        fun Now(): DateTime
        fun NotEqualExactly_VectorVector(A: Vector, B: Vector): Boolean
        fun NotEqualExactly_Vector4Vector4(A: Vector4, B: Vector4): Boolean
        fun NotEqualExactly_Vector2DVector2D(A: Vector2D, B: Vector2D): Boolean
        fun NotEqual_VectorVector(A: Vector, B: Vector, ErrorTolerance: Number): Boolean
        fun NotEqual_Vector4Vector4(A: Vector4, B: Vector4, ErrorTolerance: Number): Boolean
        fun NotEqual_Vector2DVector2D(A: Vector2D, B: Vector2D, ErrorTolerance: Number): Boolean
        fun NotEqual_TimespanTimespan(A: Timespan, B: Timespan): Boolean
        fun NotEqual_RotatorRotator(A: Rotator, B: Rotator, ErrorTolerance: Number): Boolean
        fun NotEqual_QuatQuat(A: Quat, B: Quat, ErrorTolerance: Number): Boolean
        fun NotEqual_ObjectObject(A: UObject, B: UObject): Boolean
        fun NotEqual(A: String, B: String): Boolean
        fun NotEqual_MatrixMatrix(A: Matrix, B: Matrix, Tolerance: Number): Boolean
        fun NotEqual_LinearColorLinearColor(A: LinearColor, B: LinearColor): Boolean
        fun NotEqual_IntPointIntPoint(A: IntPoint, B: IntPoint): Boolean
        fun NotEqual(A: Number, B: Number): Boolean
        fun NotEqual(A: Any, B: Any): Boolean
        fun NotEqual_DateTimeDateTime(A: DateTime, B: DateTime): Boolean
        fun NotEqual_ClassClass(A: UnrealEngineClass, B: UnrealEngineClass): Boolean
        fun NotEqualBoolean(A: Boolean, B: Boolean): Boolean
        fun NOTBoolean(A: Boolean): Boolean
        fun BitwiseNOT(A: Any): Any
        fun BitwiseNOT(A: Number): Number
        fun NormalSafe2D(A: Vector2D, Tolerance: Number): Vector2D
        fun NormalizeToRange(Value: Number, RangeMin: Number, RangeMax: Number): Number
        fun NormalizedDeltaRotator(A: Rotator, B: Rotator): Rotator
        fun NormalizeAxis(Angle: Number): Number
        fun Normalize2D(A: Vector2D = definedExternally, Tolerance: Number = definedExternally): `T$229`
        fun Normal2D(A: Vector2D): Vector2D
        fun Normal(A: Vector, Tolerance: Number): Vector
        fun NegateVector(A: Vector): Vector
        fun NegateRotator(A: Rotator): Rotator
        fun Negated2D(A: Vector2D): Vector2D
        fun NearlyEqual_TransformTransform(A: Transform, B: Transform, LocationTolerance: Number, RotationTolerance: Number, Scale3DTolerance: Number): Boolean
        fun NearlyEqual(A: Number, B: Number, ErrorTolerance: Number): Boolean
        fun Power(Base: Number, Exp: Number): Number
        fun MultiplyByPi(Value: Number): Number
        fun Multiply_VectorVector(A: Vector, B: Vector): Vector
        fun Multiply_VectorInt(A: Vector, B: Number): Vector
        fun Multiply_VectorFloat(A: Vector, B: Number): Vector
        fun Multiply_Vector4Vector4(A: Vector4, B: Vector4): Vector4
        fun Multiply_Vector2DVector2D(A: Vector2D, B: Vector2D): Vector2D
        fun Multiply_Vector2DFloat(A: Vector2D, B: Number): Vector2D
        fun Multiply_TimespanFloat(A: Timespan, Scalar: Number): Timespan
        fun Multiply_RotatorInt(A: Rotator, B: Number): Rotator
        fun Multiply_RotatorFloat(A: Rotator, B: Number): Rotator
        fun Multiply_QuatQuat(A: Quat, B: Quat): Quat
        fun Multiply_MatrixMatrix(A: Matrix, B: Matrix): Matrix
        fun Multiply_MatrixFloat(A: Matrix, B: Number): Matrix
        fun Multiply_LinearColorLinearColor(A: LinearColor, B: LinearColor): LinearColor
        fun Multiply_LinearColorFloat(A: LinearColor, B: Number): LinearColor
        fun Multiply_IntPointIntPoint(A: IntPoint, B: IntPoint): IntPoint
        fun Multiply_IntPointInt(A: IntPoint, B: Number): IntPoint
        fun Multiply_IntInt(A: Number, B: Number): Number
        fun Multiply_IntFloat(A: Number, B: Number): Number
        fun Multiply_Int64Int64(A: Any, B: Any): Any
        fun Multiply_FloatFloat(A: Number, B: Number): Number
        fun Multiply_ByteByte(A: Number, B: Number): Number
        fun MirrorVectorByNormal(InVect: Vector, InNormal: Vector): Vector
        fun MinOfIntArray(IntArray: Array<Number>, IndexOfMinValue: Number = definedExternally, MinValue: Number = definedExternally): `T$676`
        fun MinOfFloatArray(FloatArray: Array<Number>, IndexOfMinValue: Number = definedExternally, MinValue: Number = definedExternally): `T$676`
        fun MinOfByteArray(ByteArray: Array<Number>, IndexOfMinValue: Number = definedExternally, MinValue: Number = definedExternally): `T$676`
        fun Min(A: Any, B: Any): Any
        fun MinimumAreaRectangle(WorldContextObject: UObject, InVerts: Array<Vector>, SampleSurfaceNormal: Vector, OutRectCenter: Vector = definedExternally, OutRectRotation: Rotator = definedExternally, OutSideLengthX: Number = definedExternally, OutSideLengthY: Number = definedExternally, bDebugDraw: Boolean = definedExternally): `T$310`
        fun Min(A: Number, B: Number): Number
        fun MaxOfIntArray(IntArray: Array<Number>, IndexOfMaxValue: Number = definedExternally, MaxValue: Number = definedExternally): `T$677`
        fun MaxOfFloatArray(FloatArray: Array<Number>, IndexOfMaxValue: Number = definedExternally, MaxValue: Number = definedExternally): `T$677`
        fun MaxOfByteArray(ByteArray: Array<Number>, IndexOfMaxValue: Number = definedExternally, MaxValue: Number = definedExternally): `T$677`
        fun Max(A: Any, B: Any): Any
        fun Max(A: Number, B: Number): Number
        fun Matrix_TransformVector4(M: Matrix, V: Vector4): Vector4
        fun Matrix_TransformVector(M: Matrix, V: Vector): Vector4
        fun Matrix_TransformPosition(M: Matrix, V: Vector): Vector4
        fun Matrix_ToQuat(M: Matrix): Quat
        fun Matrix_SetOrigin(M: Matrix = definedExternally, NewOrigin: Vector = definedExternally): `T$7`
        fun Matrix_SetColumn(M: Matrix = definedExternally, Column: String /* "First" | "Second" | "Third" | "Fourth" | "EMatrixColumns_MAX" */ = definedExternally, Value: Vector = definedExternally): `T$7`
        fun Matrix_SetAxis(M: Matrix = definedExternally, Axis: String /* "None" | "X" | "Y" | "Z" | "EAxis_MAX" */ = definedExternally, AxisVector: Vector = definedExternally): `T$7`
        fun Matrix_ScaleTranslation(M: Matrix, Scale3D: Vector): Matrix
        fun Matrix_RemoveTranslation(M: Matrix): Matrix
        fun Matrix_RemoveScaling(M: Matrix = definedExternally, Tolerance: Number = definedExternally): `T$7`
        fun Matrix_Mirror(M: Matrix, MirrorAxis: String /* "None" | "X" | "Y" | "Z" | "EAxis_MAX" */, FlipAxis: String /* "None" | "X" | "Y" | "Z" | "EAxis_MAX" */): Matrix
        fun Matrix_InverseTransformVector(M: Matrix, V: Vector): Vector
        fun Matrix_InverseTransformPosition(M: Matrix, V: Vector): Vector
        fun Matrix_Identity(): Matrix
        fun Matrix_GetUnitAxis(M: Matrix, Axis: String /* "None" | "X" | "Y" | "Z" | "EAxis_MAX" */): Vector
        fun Matrix_GetUnitAxes(M: Matrix, X: Vector = definedExternally, Y: Vector = definedExternally, Z: Vector = definedExternally): `T$6`
        fun Matrix_GetTransposed(M: Matrix): Matrix
        fun Matrix_GetTransposeAdjoint(M: Matrix): Matrix
        fun Matrix_GetScaleVector(M: Matrix, Tolerance: Number): Vector
        fun Matrix_GetScaledAxis(M: Matrix, Axis: String /* "None" | "X" | "Y" | "Z" | "EAxis_MAX" */): Vector
        fun Matrix_GetScaledAxes(M: Matrix, X: Vector = definedExternally, Y: Vector = definedExternally, Z: Vector = definedExternally): `T$6`
        fun Matrix_GetRotDeterminant(M: Matrix): Number
        fun Matrix_GetRotator(M: Matrix): Rotator
        fun Matrix_GetOrigin(InMatrix: Matrix): Vector
        fun Matrix_GetMaximumAxisScale(M: Matrix): Number
        fun Matrix_GetMatrixWithoutScale(M: Matrix, Tolerance: Number): Matrix
        fun Matrix_GetInverse(M: Matrix): Matrix
        fun Matrix_GetFrustumTopPlane(M: Matrix, OutPlane: Plane = definedExternally): `T$5`
        fun Matrix_GetFrustumRightPlane(M: Matrix, OutPlane: Plane = definedExternally): `T$5`
        fun Matrix_GetFrustumNearPlane(M: Matrix, OutPlane: Plane = definedExternally): `T$5`
        fun Matrix_GetFrustumLeftPlane(M: Matrix, OutPlane: Plane = definedExternally): `T$5`
        fun Matrix_GetFrustumFarPlane(M: Matrix, OutPlane: Plane = definedExternally): `T$5`
        fun Matrix_GetFrustumBottomPlane(M: Matrix, OutPlane: Plane = definedExternally): `T$5`
        fun Matrix_GetDeterminant(M: Matrix): Number
        fun Matrix_GetColumn(M: Matrix, Column: String /* "First" | "Second" | "Third" | "Fourth" | "EMatrixColumns_MAX" */): Vector
        fun Matrix_ContainsNaN(M: Matrix): Boolean
        fun Matrix_ConcatenateTranslation(M: Matrix, Translation: Vector): Matrix
        fun Matrix_ApplyScale(M: Matrix, Scale: Number): Matrix
        fun MapRangeUnclamped(Value: Number, InRangeA: Number, InRangeB: Number, OutRangeA: Number, OutRangeB: Number): Number
        fun MapRangeClamped(Value: Number, InRangeA: Number, InRangeB: Number, OutRangeA: Number, OutRangeB: Number): Number
        fun MakeVector4(X: Number, Y: Number, Z: Number, W: Number): Vector4
        fun MakeVector2D(X: Number, Y: Number): Vector2D
        fun MakeVector(X: Number, Y: Number, Z: Number): Vector
        fun MakeTransform(Location: Vector, Rotation: Rotator, Scale: Vector): Transform
        fun MakeTimespan2(Days: Number, Hours: Number, Minutes: Number, Seconds: Number, FractionNano: Number): Timespan
        fun MakeTimespan(Days: Number, Hours: Number, Minutes: Number, Seconds: Number, Milliseconds: Number): Timespan
        fun MakeRotFromZY(Z: Vector, Y: Vector): Rotator
        fun MakeRotFromZX(Z: Vector, X: Vector): Rotator
        fun MakeRotFromZ(Z: Vector): Rotator
        fun MakeRotFromYZ(Y: Vector, Z: Vector): Rotator
        fun MakeRotFromYX(Y: Vector, X: Vector): Rotator
        fun MakeRotFromY(Y: Vector): Rotator
        fun MakeRotFromXZ(X: Vector, Z: Vector): Rotator
        fun MakeRotFromXY(X: Vector, Y: Vector): Rotator
        fun MakeRotFromX(X: Vector): Rotator
        fun MakeRotator(Roll: Number, Pitch: Number, Yaw: Number): Rotator
        fun MakeRotationFromAxes(Forward: Vector, Right: Vector, Up: Vector): Rotator
        fun MakeRelativeTransform(A: Transform, RelativeTo: Transform): Transform
        fun MakeRandomStream(InitialSeed: Number): RandomStream
        fun MakeQualifiedFrameTime(Frame: FrameNumber, FrameRate: FrameRate, SubFrame: Number): QualifiedFrameTime
        fun MakePulsatingValue(InCurrentTime: Number, InPulsesPerSecond: Number, InPhase: Number): Number
        fun MakePlaneFromPointAndNormal(Point: Vector, Normal: Vector): Plane
        fun MakeFrameRate(Numerator: Number, Denominator: Number): FrameRate
        fun MakeDateTime(Year: Number, Month: Number, Day: Number, Hour: Number, Minute: Number, Second: Number, Millisecond: Number): DateTime
        fun MakeColor(R: Number, G: Number, B: Number, A: Number): LinearColor
        fun MakeBox2D(Min: Vector2D, Max: Vector2D): Box2D
        fun MakeBox(Min: Vector, Max: Vector): Box
        fun Loge(A: Number): Number
        fun Log(A: Number, Base: Number): Number
        fun LinePlaneIntersection_OriginNormal(LineStart: Vector, LineEnd: Vector, PlaneOrigin: Vector, PlaneNormal: Vector, T: Number = definedExternally, Intersection: Vector = definedExternally): `T$243`
        fun LinePlaneIntersection(LineStart: Vector, LineEnd: Vector, APlane: Plane, T: Number = definedExternally, Intersection: Vector = definedExternally): `T$243`
        fun LinearColorLerpUsingHSV(A: LinearColor, B: LinearColor, Alpha: Number): LinearColor
        fun LinearColorLerp(A: LinearColor, B: LinearColor, Alpha: Number): LinearColor
        fun LinearColor_Yellow(): LinearColor
        fun LinearColor_White(): LinearColor
        fun LinearColor_Transparent(): LinearColor
        fun LinearColor_ToRGBE(InLinearColor: LinearColor): Color
        fun LinearColor_ToNewOpacity(InColor: LinearColor, InOpacity: Number): LinearColor
        fun LinearColor_SetTemperature(InOutColor: LinearColor = definedExternally, InTemperature: Number = definedExternally): `T$22`
        fun LinearColor_SetRGBA(InOutColor: LinearColor = definedExternally, R: Number = definedExternally, G: Number = definedExternally, B: Number = definedExternally, A: Number = definedExternally): `T$22`
        fun LinearColor_SetRandomHue(InOutColor: LinearColor = definedExternally): `T$22`
        fun LinearColor_SetFromSRGB(InOutColor: LinearColor = definedExternally, InSRGB: Color = definedExternally): `T$22`
        fun LinearColor_SetFromPow22(InOutColor: LinearColor = definedExternally, InColor: Color = definedExternally): `T$22`
        fun LinearColor_SetFromHSV(InOutColor: LinearColor = definedExternally, H: Number = definedExternally, S: Number = definedExternally, V: Number = definedExternally, A: Number = definedExternally): `T$22`
        fun LinearColor_Set(InOutColor: LinearColor = definedExternally, InColor: LinearColor = definedExternally): `T$22`
        fun LinearColor_Red(): LinearColor
        fun LinearColor_QuantizeRound(InColor: LinearColor): Color
        fun LinearColor_Quantize(InColor: LinearColor): Color
        fun LinearColor_IsNearEqual(A: LinearColor, B: LinearColor, Tolerance: Number): Boolean
        fun LinearColor_Green(): LinearColor
        fun LinearColor_Gray(): LinearColor
        fun LinearColor_GetMin(InColor: LinearColor): Number
        fun LinearColor_GetMax(InColor: LinearColor): Number
        fun LinearColor_GetLuminance(InColor: LinearColor): Number
        fun LinearColor_Distance(C1: LinearColor, C2: LinearColor): Number
        fun LinearColor_Desaturated(InColor: LinearColor, InDesaturation: Number): LinearColor
        fun LinearColor_Blue(): LinearColor
        fun LinearColor_Black(): LinearColor
        fun LessLess_VectorRotator(A: Vector, B: Rotator): Vector
        fun LessEqual_TimespanTimespan(A: Timespan, B: Timespan): Boolean
        fun LessEqual_IntInt(A: Number, B: Number): Boolean
        fun LessEqual_Int64Int64(A: Any, B: Any): Boolean
        fun LessEqual_FloatFloat(A: Number, B: Number): Boolean
        fun LessEqual_DateTimeDateTime(A: DateTime, B: DateTime): Boolean
        fun LessEqual_ByteByte(A: Number, B: Number): Boolean
        fun Less_TimespanTimespan(A: Timespan, B: Timespan): Boolean
        fun Less_IntInt(A: Number, B: Number): Boolean
        fun Less_Int64Int64(A: Any, B: Any): Boolean
        fun Less_FloatFloat(A: Number, B: Number): Boolean
        fun Less_DateTimeDateTime(A: DateTime, B: DateTime): Boolean
        fun Less_ByteByte(A: Number, B: Number): Boolean
        fun Lerp(A: Number, B: Number, Alpha: Number): Number
        fun IsZero2D(A: Vector2D): Boolean
        fun IsPointInBoxWithTransform(Point: Vector, BoxWorldTransform: Transform, BoxExtent: Vector): Boolean
        fun IsPointInBox(Point: Vector, BoxOrigin: Vector, BoxExtent: Vector): Boolean
        fun IsNearlyZero2D(A: Vector2D, Tolerance: Number): Boolean
        fun IsMorning(A: DateTime): Boolean
        fun IsLeapYear(Year: Number): Boolean
        fun IsAfternoon(A: DateTime): Boolean
        fun InvertTransform(T: Transform): Transform
        fun InverseTransformRotation(T: Transform, Rotation: Rotator): Rotator
        fun InverseTransformLocation(T: Transform, Location: Vector): Vector
        fun InverseTransformDirection(T: Transform, Direction: Vector): Vector
        fun IntPoint_Zero(): IntPoint
        fun IntPoint_Up(): IntPoint
        fun IntPoint_Right(): IntPoint
        fun IntPoint_One(): IntPoint
        fun IntPoint_Left(): IntPoint
        fun IntPoint_Down(): IntPoint
        fun InRange(Value: Number, Min: Number, Max: Number, InclusiveMin: Boolean, InclusiveMax: Boolean): Boolean
        fun InRange(Value: Any, Min: Any, Max: Any, InclusiveMin: Boolean, InclusiveMax: Boolean): Boolean
        fun Hypotenuse(Width: Number, Height: Number): Number
        fun HSVToRGBLinear(HSV: LinearColor): LinearColor
        fun HSVToRGB_Vector(HSV: LinearColor, RGB: LinearColor = definedExternally): `T$21`
        fun HSVToRGB(H: Number, S: Number, V: Number, A: Number): LinearColor
        fun Snaptogrid(Location: Number, GridSize: Number): Number
        fun GreaterGreater_VectorRotator(A: Vector, B: Rotator): Vector
        fun GreaterEqual_TimespanTimespan(A: Timespan, B: Timespan): Boolean
        fun GreaterEqual_IntInt(A: Number, B: Number): Boolean
        fun GreaterEqual_Int64Int64(A: Any, B: Any): Boolean
        fun GreaterEqual_FloatFloat(A: Number, B: Number): Boolean
        fun GreaterEqual_DateTimeDateTime(A: DateTime, B: DateTime): Boolean
        fun GreaterEqual_ByteByte(A: Number, B: Number): Boolean
        fun Greater_TimespanTimespan(A: Timespan, B: Timespan): Boolean
        fun Greater_IntInt(A: Number, B: Number): Boolean
        fun Greater_Int64Int64(A: Any, B: Any): Boolean
        fun Greater_FloatFloat(A: Number, B: Number): Boolean
        fun Greater_DateTimeDateTime(A: DateTime, B: DateTime): Boolean
        fun Greater_ByteByte(A: Number, B: Number): Boolean
        fun GetYear(A: DateTime): Number
        fun GetYawPitchFromVector(InVec: Vector, Yaw: Number = definedExternally, Pitch: Number = definedExternally): `T$242`
        fun GetVectorArrayAverage(Vectors: Array<Vector>): Vector
        fun GetUpVector(InRot: Rotator): Vector
        fun GetTotalSeconds(A: Timespan): Number
        fun GetTotalMinutes(A: Timespan): Number
        fun GetTotalMilliseconds(A: Timespan): Number
        fun GetTotalHours(A: Timespan): Number
        fun GetTotalDays(A: Timespan): Number
        fun GetTimeOfDay(A: DateTime): Timespan
        fun GetTAU(): Number
        fun GetSlopeDegreeAngles(MyRightYAxis: Vector, FloorNormal: Vector, UpVector: Vector, OutSlopePitchDegreeAngle: Number = definedExternally, OutSlopeRollDegreeAngle: Number = definedExternally): `T$241`
        fun GetSeconds(A: Timespan): Number
        fun GetSecond(A: DateTime): Number
        fun GetRotated2D(A: Vector2D, AngleDeg: Number): Vector2D
        fun GetRightVector(InRot: Rotator): Vector
        fun GetReflectionVector(Direction: Vector, SurfaceNormal: Vector): Vector
        fun GetPointDistanceToSegment(Point: Vector, SegmentStart: Vector, SegmentEnd: Vector): Number
        fun GetPointDistanceToLine(Point: Vector, LineOrigin: Vector, LineDirection: Vector): Number
        fun GetPI(): Number
        fun GetMonth(A: DateTime): Number
        fun GetMinutes(A: Timespan): Number
        fun GetMinute(A: DateTime): Number
        fun GetMinElement(A: Vector): Number
        fun GetMin2D(A: Vector2D): Number
        fun GetMilliseconds(A: Timespan): Number
        fun GetMillisecond(A: DateTime): Number
        fun GetMaxElement(A: Vector): Number
        fun GetMax2D(A: Vector2D): Number
        fun GetHours(A: Timespan): Number
        fun GetHour12(A: DateTime): Number
        fun GetHour(A: DateTime): Number
        fun GetForwardVector(InRot: Rotator): Vector
        fun GetDuration(A: Timespan): Timespan
        fun GetDirectionUnitVector(From: Vector, To: Vector): Vector
        fun GetDays(A: Timespan): Number
        fun GetDayOfYear(A: DateTime): Number
        fun GetDay(A: DateTime): Number
        fun GetDate(A: DateTime): DateTime
        fun GetAzimuthAndElevation(InDirection: Vector, ReferenceFrame: Transform, Azimuth: Number = definedExternally, Elevation: Number = definedExternally): `T$240`
        fun GetAxes(A: Rotator, X: Vector = definedExternally, Y: Vector = definedExternally, Z: Vector = definedExternally): `T$6`
        fun GetAbsMax2D(A: Vector2D): Number
        fun GetAbs2D(A: Vector2D): Vector2D
        fun FTruncVector(InVector: Vector): IntVector
        fun TruncatetoInt64(A: Number): Any
        fun Truncate(A: Number): Number
        fun FromSeconds(Seconds: Number): Timespan
        fun FromMinutes(Minutes: Number): Timespan
        fun FromMilliseconds(Milliseconds: Number): Timespan
        fun FromHours(Hours: Number): Timespan
        fun FromDays(Days: Number): Timespan
        fun Fraction(A: Number): Number
        fun Division(Dividend: Number, Divisor: Number, Remainder: Number = definedExternally): `T$678`
        fun FloatSpringInterp(Current: Number, Target: Number, SpringState: FloatSpringState = definedExternally, Stiffness: Number = definedExternally, CriticalDampingFactor: Number = definedExternally, DeltaTime: Number = definedExternally, Mass: Number = definedExternally): `T$679`
        fun FixedTurn(InCurrent: Number, InDesired: Number, InDeltaRate: Number): Number
        fun FInterpTo_Constant(Current: Number, Target: Number, DeltaTime: Number, InterpSpeed: Number): Number
        fun FInterpTo(Current: Number, Target: Number, DeltaTime: Number, InterpSpeed: Number): Number
        fun FInterpEaseInOut(A: Number, B: Number, Alpha: Number, Exponent: Number): Number
        fun FindNearestPointsOnLineSegments(Segment1Start: Vector, Segment1End: Vector, Segment2Start: Vector, Segment2End: Vector, Segment1Point: Vector = definedExternally, Segment2Point: Vector = definedExternally): `T$239`
        fun FindLookAtRotation(Start: Vector, Target: Vector): Rotator
        fun FindClosestPointOnSegment(Point: Vector, SegmentStart: Vector, SegmentEnd: Vector): Vector
        fun FindClosestPointOnLine(Point: Vector, LineOrigin: Vector, LineDirection: Vector): Vector
        fun FloortoInt64(A: Number): Any
        fun Floor(A: Number): Number
        fun Clamp(Value: Number, Min: Number, Max: Number): Number
        fun CeiltoInt64(A: Number): Any
        fun Ceil(A: Number): Number
        fun Exp(A: Number): Number
        fun EqualExactly_VectorVector(A: Vector, B: Vector): Boolean
        fun EqualExactly_Vector4Vector4(A: Vector4, B: Vector4): Boolean
        fun EqualExactly_Vector2DVector2D(A: Vector2D, B: Vector2D): Boolean
        fun EqualEqual_VectorVector(A: Vector, B: Vector, ErrorTolerance: Number): Boolean
        fun EqualEqual_Vector4Vector4(A: Vector4, B: Vector4, ErrorTolerance: Number): Boolean
        fun EqualEqual_Vector2DVector2D(A: Vector2D, B: Vector2D, ErrorTolerance: Number): Boolean
        fun EqualEqual_TransformTransform(A: Transform, B: Transform): Boolean
        fun EqualEqual_TimespanTimespan(A: Timespan, B: Timespan): Boolean
        fun EqualEqual_RotatorRotator(A: Rotator, B: Rotator, ErrorTolerance: Number): Boolean
        fun EqualEqual_QuatQuat(A: Quat, B: Quat, Tolerance: Number): Boolean
        fun EqualEqual_ObjectObject(A: UObject, B: UObject): Boolean
        fun Equal(A: String, B: String): Boolean
        fun EqualEqual_MatrixMatrix(A: Matrix, B: Matrix, Tolerance: Number): Boolean
        fun EqualEqual_LinearColorLinearColor(A: LinearColor, B: LinearColor): Boolean
        fun Equal(A: Number, B: Number): Boolean
        fun Equal(A: Any, B: Any): Boolean
        fun EqualEqual_DateTimeDateTime(A: DateTime, B: DateTime): Boolean
        fun EqualEqual_ClassClass(A: UnrealEngineClass, B: UnrealEngineClass): Boolean
        fun EqualBoolean(A: Boolean, B: Boolean): Boolean
        fun Equal_IntPointIntPoint(A: IntPoint, B: IntPoint): Boolean
        fun Ease(A: Number, B: Number, Alpha: Number, EasingFunc: String /* "Linear" | "Step" | "SinusoidalIn" | "SinusoidalOut" | "SinusoidalInOut" | "EaseIn" | "EaseOut" | "EaseInOut" | "ExpoIn" | "ExpoOut" | "ExpoInOut" | "CircularIn" | "CircularOut" | "CircularInOut" | "EEasingFunc_MAX" */, BlendExp: Number, Steps: Number): Number
        fun DynamicWeightedMovingAverage_FVector(CurrentSample: Vector, PreviousSample: Vector, MaxDistance: Number, MinWeight: Number, MaxWeight: Number): Vector
        fun DynamicWeightedMovingAverage_FRotator(CurrentSample: Rotator, PreviousSample: Rotator, MaxDistance: Number, MinWeight: Number, MaxWeight: Number): Rotator
        fun DynamicWeightedMovingAverageFloat(CurrentSample: Number, PreviousSample: Number, MaxDistance: Number, MinWeight: Number, MaxWeight: Number): Number
        fun DotProduct2D(A: Vector2D, B: Vector2D): Number
        fun Dot_VectorVector(A: Vector, B: Vector): Number
        fun Divide_VectorVector(A: Vector, B: Vector): Vector
        fun Divide_VectorInt(A: Vector, B: Number): Vector
        fun Divide_VectorFloat(A: Vector, B: Number): Vector
        fun Divide_Vector4Vector4(A: Vector4, B: Vector4): Vector4
        fun Divide_Vector2DVector2D(A: Vector2D, B: Vector2D): Vector2D
        fun Divide_Vector2DFloat(A: Vector2D, B: Number): Vector2D
        fun Divide_TimespanFloat(A: Timespan, Scalar: Number): Timespan
        fun Divide_LinearColorLinearColor(A: LinearColor, B: LinearColor): LinearColor
        fun Divide_IntPointIntPoint(A: IntPoint, B: IntPoint): IntPoint
        fun Divide_IntPointInt(A: IntPoint, B: Number): IntPoint
        fun Divide_IntInt(A: Number, B: Number): Number
        fun Divide_Int64Int64(A: Any, B: Any): Any
        fun Divide_FloatFloat(A: Number, B: Number): Number
        fun Divide_ByteByte(A: Number, B: Number): Number
        fun DistanceSquared2D(v1: Vector2D, v2: Vector2D): Number
        fun Distance2D(v1: Vector2D, v2: Vector2D): Number
        fun DegreesToRadians(A: Number): Number
        fun Cos(A: Number): Number
        fun Atan2(Y: Number, X: Number): Number
        fun Atan(A: Number): Number
        fun Asin(A: Number): Number
        fun Acos(A: Number): Number
        fun DaysInYear(Year: Number): Number
        fun DaysInMonth(Year: Number, Month: Number): Number
        fun DateTimeMinValue(): DateTime
        fun DateTimeMaxValue(): DateTime
        fun DateTimeFromString(DateTimeString: String, Result: DateTime = definedExternally): `T$680`
        fun DateTimeFromIsoString(IsoString: String, Result: DateTime = definedExternally): `T$680`
        fun CrossProduct2D(A: Vector2D, B: Vector2D): Number
        fun Cross_VectorVector(A: Vector, B: Vector): Vector
        fun CreateVectorFromYawPitch(Yaw: Number, Pitch: Number, Length: Number): Vector
        fun ConvertTransformToRelative(Transform: Transform, ParentTransform: Transform): Transform
        fun Conv_VectorToVector2D(InVector: Vector): Vector2D
        fun Conv_VectorToTransform(InLocation: Vector): Transform
        fun Conv_VectorToRotator(InVec: Vector): Rotator
        fun Conv_VectorToQuaternion(InVec: Vector): Quat
        fun Conv_VectorToLinearColor(InVec: Vector): LinearColor
        fun Conv_Vector4ToVector(InVector4: Vector4): Vector
        fun Conv_Vector4ToRotator(InVec: Vector4): Rotator
        fun Conv_Vector4ToQuaternion(InVec: Vector4): Quat
        fun Conv_Vector2DToVector(InVector2D: Vector2D, Z: Number): Vector
        fun Conv_Vector2DToIntPoint(InVector2D: Vector2D): IntPoint
        fun Conv_TransformToMatrix(Transform: Transform): Matrix
        fun Conv_RotatorToVector(InRot: Rotator): Vector
        fun Conv_RotatorToTransform(InRotator: Rotator): Transform
        fun Conv_MatrixToTransform(InMatrix: Matrix): Transform
        fun Conv_MatrixToRotator(InMatrix: Matrix): Rotator
        fun Conv_LinearColorToVector(InLinearColor: LinearColor): Vector
        fun Conv_LinearColorToColor(InLinearColor: LinearColor, InUseSRGB: Boolean): Color
        fun Conv_IntVectorToVector(InIntVector: IntVector): Vector
        fun Conv_IntToIntVector(inInt: Number): IntVector
        fun ToInt64(inInt: Number): Any
        fun ToFloat(inInt: Number): Number
        fun ToByte(inInt: Number): Number
        fun ToBool(inInt: Number): Boolean
        fun Conv_IntPointToVector2D(InIntPoint: IntPoint): Vector2D
        fun ToInt(inInt: Any): Number
        fun ToByte(inInt: Any): Number
        fun Conv_FloatToVector(InFloat: Number): Vector
        fun Conv_FloatToLinearColor(InFloat: Number): LinearColor
        fun Conv_ColorToLinearColor(InColor: Color): LinearColor
        fun ToInt(InByte: Number): Number
        fun ToFloat(InByte: Number): Number
        fun ToInt(InBool: Boolean): Number
        fun ToFloat(InBool: Boolean): Number
        fun ToByte(InBool: Boolean): Number
        fun ComposeTransforms(A: Transform, B: Transform): Transform
        fun ComposeRotators(A: Rotator, B: Rotator): Rotator
        fun ClassIsChildOf(TestClass: UnrealEngineClass, ParentClass: UnrealEngineClass): Boolean
        fun ClampVectorSize(A: Vector, Min: Number, Max: Number): Vector
        fun Clamp(Value: Any, Min: Any, Max: Any): Any
        fun ClampAxis(Angle: Number): Number
        fun ClampAxes2D(A: Vector2D, MinAxisVal: Number, MaxAxisVal: Number): Vector2D
        fun ClampAngle(AngleDegrees: Number, MinAngleDegrees: Number, MaxAngleDegrees: Number): Number
        fun CInterpTo(Current: LinearColor, Target: LinearColor, DeltaTime: Number, InterpSpeed: Number): LinearColor
        fun BreakVector4(InVec: Vector4, X: Number = definedExternally, Y: Number = definedExternally, Z: Number = definedExternally, W: Number = definedExternally): `T$3`
        fun BreakVector2D(InVec: Vector2D, X: Number = definedExternally, Y: Number = definedExternally): `T$228`
        fun BreakVector(InVec: Vector, X: Number = definedExternally, Y: Number = definedExternally, Z: Number = definedExternally): `T$238`
        fun BreakTransform(InTransform: Transform, Location: Vector = definedExternally, Rotation: Rotator = definedExternally, Scale: Vector = definedExternally): `T$8`
        fun BreakTimespan2(InTimespan: Timespan, Days: Number = definedExternally, Hours: Number = definedExternally, Minutes: Number = definedExternally, Seconds: Number = definedExternally, FractionNano: Number = definedExternally): `T$281`
        fun BreakTimespan(InTimespan: Timespan, Days: Number = definedExternally, Hours: Number = definedExternally, Minutes: Number = definedExternally, Seconds: Number = definedExternally, Milliseconds: Number = definedExternally): `T$280`
        fun BreakRotIntoAxes(InRot: Rotator, X: Vector = definedExternally, Y: Vector = definedExternally, Z: Vector = definedExternally): `T$6`
        fun BreakRotator(InRot: Rotator, Roll: Number = definedExternally, Pitch: Number = definedExternally, Yaw: Number = definedExternally): `T$15`
        fun BreakRandomStream(InRandomStream: RandomStream, InitialSeed: Number = definedExternally): `T$10`
        fun BreakQualifiedFrameTime(InFrameTime: QualifiedFrameTime, Frame: FrameNumber = definedExternally, FrameRate: FrameRate = definedExternally, SubFrame: Number = definedExternally): `T$161`
        fun BreakFrameRate(InFrameRate: FrameRate, Numerator: Number = definedExternally, Denominator: Number = definedExternally): `T$160`
        fun BreakDateTime(InDateTime: DateTime, Year: Number = definedExternally, Month: Number = definedExternally, Day: Number = definedExternally, Hour: Number = definedExternally, Minute: Number = definedExternally, Second: Number = definedExternally, Millisecond: Number = definedExternally): `T$585`
        fun BreakColor(InColor: LinearColor, R: Number = definedExternally, G: Number = definedExternally, B: Number = definedExternally, A: Number = definedExternally): `T$20`
        fun XORBoolean(A: Boolean, B: Boolean): Boolean
        fun ORBoolean(A: Boolean, B: Boolean): Boolean
        fun NORBoolean(A: Boolean, B: Boolean): Boolean
        fun NANDBoolean(A: Boolean, B: Boolean): Boolean
        fun ANDBoolean(A: Boolean, B: Boolean): Boolean
        fun BitwiseAND(A: Number, B: Number): Number
        fun BitwiseAND(A: Any, B: Any): Any
        fun Add_VectorVector(A: Vector, B: Vector): Vector
        fun Add_VectorInt(A: Vector, B: Number): Vector
        fun Add_VectorFloat(A: Vector, B: Number): Vector
        fun Add_Vector4Vector4(A: Vector4, B: Vector4): Vector4
        fun Add_Vector2DVector2D(A: Vector2D, B: Vector2D): Vector2D
        fun Add_Vector2DFloat(A: Vector2D, B: Number): Vector2D
        fun Add_TimespanTimespan(A: Timespan, B: Timespan): Timespan
        fun Add_QuatQuat(A: Quat, B: Quat): Quat
        fun Add_MatrixMatrix(A: Matrix, B: Matrix): Matrix
        fun Add_LinearColorLinearColor(A: LinearColor, B: LinearColor): LinearColor
        fun Add_IntPointIntPoint(A: IntPoint, B: IntPoint): IntPoint
        fun Add_IntPointInt(A: IntPoint, B: Number): IntPoint
        fun Add_IntInt(A: Number, B: Number): Number
        fun Add_Int64Int64(A: Any, B: Any): Any
        fun Add_FloatFloat(A: Number, B: Number): Number
        fun Add_DateTimeTimespan(A: DateTime, B: Timespan): DateTime
        fun Add_DateTimeDateTime(A: DateTime, B: DateTime): DateTime
        fun Add_ByteByte(A: Number, B: Number): Number
        fun Absolute(A: Any): Any
        fun Absolute(A: Number): Number
        fun C(Other: UObject): KismetMathLibrary
        fun C(Other: Any): KismetMathLibrary
    }
}

external interface `T$681` {
    var Data: Number
}

external open class KismetNodeHelperLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): KismetNodeHelperLibrary
        fun Find(Outer: UObject, ResourceName: String): KismetNodeHelperLibrary
        fun GetDefaultObject(): KismetNodeHelperLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): KismetNodeHelperLibrary
        fun MarkBit(Data: Number = definedExternally, index: Number = definedExternally): `T$681`
        fun HasUnmarkedBit(Data: Number, NumBits: Number): Boolean
        fun HasMarkedBit(Data: Number, NumBits: Number): Boolean
        fun GetValidValue(Enum: Enum, EnumeratorValue: Number): Number
        fun GetUnmarkedBit(Data: Number, StartIdx: Number, NumBits: Number, bRandom: Boolean): Number
        fun GetRandomUnmarkedBit(Data: Number, StartIdx: Number, NumBits: Number): Number
        fun GetFirstUnmarkedBit(Data: Number, StartIdx: Number, NumBits: Number): Number
        fun GetEnumeratorValueFromIndex(Enum: Enum, EnumeratorIndex: Number): Number
        fun GetEnumeratorUserFriendlyName(Enum: Enum, EnumeratorValue: Number): String
        fun GetEnumeratorName(Enum: Enum, EnumeratorValue: Number): String
        fun ClearBit(Data: Number = definedExternally, index: Number = definedExternally): `T$681`
        fun ClearAllBits(Data: Number = definedExternally): `T$681`
        fun BitIsMarked(Data: Number, index: Number): Boolean
        fun C(Other: UObject): KismetNodeHelperLibrary
        fun C(Other: Any): KismetNodeHelperLibrary
    }
}

external open class KismetRenderingLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): KismetRenderingLibrary
        fun Find(Outer: UObject, ResourceName: String): KismetRenderingLibrary
        fun GetDefaultObject(): KismetRenderingLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): KismetRenderingLibrary
        fun SetCastInsetShadowForAllAttachments(PrimitiveComponent: PrimitiveComponent, bCastInsetShadow: Boolean, bLightAttachmentsAsGroup: Boolean)
        fun RenderTargetCreateStaticTexture2DEditorOnly(RenderTarget: TextureRenderTarget2D, Name: String, CompressionSettings: String /* "TC_Default" | "TC_Normalmap" | "TC_Masks" | "TC_Grayscale" | "TC_Displacementmap" | "TC_VectorDisplacementmap" | "TC_HDR" | "TC_EditorIcon" | "TC_Alpha" | "TC_DistanceFieldFont" | "TC_HDR_Compressed" | "TC_BC7" | "TC_HalfFloat" | "TC_EncodedReflectionCapture" | "TC_MAX" */, MipSettings: String /* "TMGS_FromTextureGroup" | "TMGS_SimpleAverage" | "TMGS_Sharpen0" | "TMGS_Sharpen1" | "TMGS_Sharpen2" | "TMGS_Sharpen3" | "TMGS_Sharpen4" | "TMGS_Sharpen5" | "TMGS_Sharpen6" | "TMGS_Sharpen7" | "TMGS_Sharpen8" | "TMGS_Sharpen9" | "TMGS_Sharpen10" | "TMGS_NoMipmaps" | "TMGS_LeaveExistingMips" | "TMGS_Blur1" | "TMGS_Blur2" | "TMGS_Blur3" | "TMGS_Blur4" | "TMGS_Blur5" | "TMGS_Unfiltered" | "TMGS_MAX" */): Texture2D
        fun ReleaseRenderTarget2D(TextureRenderTarget: TextureRenderTarget2D)
        fun ReadRenderTargetUV(WorldContextObject: UObject, TextureRenderTarget: TextureRenderTarget2D, U: Number, V: Number): Color
        fun ReadRenderTargetRawUV(WorldContextObject: UObject, TextureRenderTarget: TextureRenderTarget2D, U: Number, V: Number): LinearColor
        fun ReadRenderTargetRawPixel(WorldContextObject: UObject, TextureRenderTarget: TextureRenderTarget2D, X: Number, Y: Number): LinearColor
        fun ReadRenderTargetPixel(WorldContextObject: UObject, TextureRenderTarget: TextureRenderTarget2D, X: Number, Y: Number): Color
        fun MakeSkinWeightInfo(Bone0: Number, Weight0: Number, Bone1: Number, Weight1: Number, Bone2: Number, Weight2: Number, Bone3: Number, Weight3: Number): SkelMeshSkinWeightInfo
        fun ImportFileAsTexture2D(WorldContextObject: UObject, Filename: String): Texture2D
        fun ImportBufferAsTexture2D(WorldContextObject: UObject, Buffer: Array<Number>): Texture2D
        fun ExportTexture2D(WorldContextObject: UObject, Texture: Texture2D, FilePath: String, Filename: String)
        fun ExportRenderTarget(WorldContextObject: UObject, TextureRenderTarget: TextureRenderTarget2D, FilePath: String, Filename: String)
        fun EndDrawCanvasToRenderTarget(WorldContextObject: UObject, Context: DrawToRenderTargetContext)
        fun DrawMaterialToRenderTarget(WorldContextObject: UObject, TextureRenderTarget: TextureRenderTarget2D, Material: MaterialInterface)
        fun CreateRenderTargetVolume(WorldContextObject: UObject, Width: Number, Height: Number, Depth: Number, Format: String /* "RTF_R8" | "RTF_RG8" | "RTF_RGBA8" | "RTF_RGBA8_SRGB" | "RTF_R16f" | "RTF_RG16f" | "RTF_RGBA16f" | "RTF_R32f" | "RTF_RG32f" | "RTF_RGBA32f" | "RTF_RGB10A2" | "RTF_MAX" */, ClearColor: LinearColor, bAutoGenerateMipMaps: Boolean): TextureRenderTargetVolume
        fun CreateRenderTarget2DArray(WorldContextObject: UObject, Width: Number, Height: Number, Slices: Number, Format: String /* "RTF_R8" | "RTF_RG8" | "RTF_RGBA8" | "RTF_RGBA8_SRGB" | "RTF_R16f" | "RTF_RG16f" | "RTF_RGBA16f" | "RTF_R32f" | "RTF_RG32f" | "RTF_RGBA32f" | "RTF_RGB10A2" | "RTF_MAX" */, ClearColor: LinearColor, bAutoGenerateMipMaps: Boolean): TextureRenderTarget2DArray
        fun CreateRenderTarget2D(WorldContextObject: UObject, Width: Number, Height: Number, Format: String /* "RTF_R8" | "RTF_RG8" | "RTF_RGBA8" | "RTF_RGBA8_SRGB" | "RTF_R16f" | "RTF_RG16f" | "RTF_RGBA16f" | "RTF_R32f" | "RTF_RG32f" | "RTF_RGBA32f" | "RTF_RGB10A2" | "RTF_MAX" */, ClearColor: LinearColor, bAutoGenerateMipMaps: Boolean): TextureRenderTarget2D
        fun ConvertRenderTargetToTexture2DEditorOnly(WorldContextObject: UObject, RenderTarget: TextureRenderTarget2D, Texture: Texture2D)
        fun ClearRenderTarget2D(WorldContextObject: UObject, TextureRenderTarget: TextureRenderTarget2D, ClearColor: LinearColor)
        fun BreakSkinWeightInfo(InWeight: SkelMeshSkinWeightInfo, Bone0: Number = definedExternally, Weight0: Number = definedExternally, Bone1: Number = definedExternally, Weight1: Number = definedExternally, Bone2: Number = definedExternally, Weight2: Number = definedExternally, Bone3: Number = definedExternally, Weight3: Number = definedExternally): `T$207`
        fun BeginDrawCanvasToRenderTarget(WorldContextObject: UObject, TextureRenderTarget: TextureRenderTarget2D, Canvas: Canvas = definedExternally, Size: Vector2D = definedExternally, Context: DrawToRenderTargetContext = definedExternally): `T$309`
        fun C(Other: UObject): KismetRenderingLibrary
        fun C(Other: Any): KismetRenderingLibrary
    }
}

external object ESearchCase {
    var CaseSensitive: String /* "CaseSensitive" */
    var IgnoreCase: String /* "IgnoreCase" */
    var ESearchCase_MAX: String /* "ESearchCase_MAX" */
}

external object ESearchDir {
    var FromStart: String /* "FromStart" */
    var FromEnd: String /* "FromEnd" */
    var ESearchDir_MAX: String /* "ESearchDir_MAX" */
}

external interface `T$682` {
    var LeftS: String
    var RightS: String
    var `$`: Boolean
}

external interface `T$683` {
    var SourceString: String
    var `$`: Number
}

external interface `T$684` {
    var inArray: Array<String>
    var `$`: Number
}

external interface `T$685` {
    var OutConvertedVector2D: Vector2D
    var OutIsValid: Boolean
}

external interface `T$686` {
    var OutConvertedVector: Vector
    var OutIsValid: Boolean
}

external interface `T$687` {
    var OutConvertedRotator: Rotator
    var OutIsValid: Boolean
}

external interface `T$688` {
    var OutConvertedColor: LinearColor
    var OutIsValid: Boolean
}

external open class KismetStringLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): KismetStringLibrary
        fun Find(Outer: UObject, ResourceName: String): KismetStringLibrary
        fun GetDefaultObject(): KismetStringLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): KismetStringLibrary
        fun TrimTrailing(SourceString: String): String
        fun Trim(SourceString: String): String
        fun ToUpper(SourceString: String): String
        fun ToLower(SourceString: String): String
        fun TimeSecondsToString(InSeconds: Number): String
        fun StartsWith(SourceString: String, InPrefix: String, SearchCase: String /* "CaseSensitive" | "IgnoreCase" | "ESearchCase_MAX" */): Boolean
        fun Split(SourceString: String, InStr: String, LeftS: String = definedExternally, RightS: String = definedExternally, SearchCase: String /* "CaseSensitive" | "IgnoreCase" | "ESearchCase_MAX" */ = definedExternally, SearchDir: String /* "FromStart" | "FromEnd" | "ESearchDir_MAX" */ = definedExternally): `T$682`
        fun RightPad(SourceString: String, ChCount: Number): String
        fun RightChop(SourceString: String, Count: Number): String
        fun Right(SourceString: String, Count: Number): String
        fun Reverse(SourceString: String): String
        fun ReplaceInline(SourceString: String = definedExternally, SearchText: String = definedExternally, ReplacementText: String = definedExternally, SearchCase: String /* "CaseSensitive" | "IgnoreCase" | "ESearchCase_MAX" */ = definedExternally): `T$683`
        fun Replace(SourceString: String, From: String, To: String, SearchCase: String /* "CaseSensitive" | "IgnoreCase" | "ESearchCase_MAX" */): String
        fun ParseIntoArray(SourceString: String, Delimiter: String, CullEmptyStrings: Boolean): Array<String>
        fun NotEqual(A: String, B: String): Boolean
        fun NotEqual_StriStri(A: String, B: String): Boolean
        fun Mid(SourceString: String, Start: Number, Count: Number): String
        fun MatchesWildcard(SourceString: String, wildcard: String, SearchCase: String /* "CaseSensitive" | "IgnoreCase" | "ESearchCase_MAX" */): Boolean
        fun Len(S: String): Number
        fun LeftPad(SourceString: String, ChCount: Number): String
        fun LeftChop(SourceString: String, Count: Number): String
        fun Left(SourceString: String, Count: Number): String
        fun JoinStringArray(SourceArray: Array<String>, Separator: String): String
        fun IsNumeric(SourceString: String): Boolean
        fun IsEmpty(inString: String): Boolean
        fun GetSubstring(SourceString: String, StartIndex: Number, Length: Number): String
        fun GetCharacterAsNumber(SourceString: String, index: Number): Number
        fun GetCharacterArrayFromString(SourceString: String): Array<String>
        fun FindSubstring(SearchIn: String, Substring: String, bUseCase: Boolean, bSearchFromEnd: Boolean, StartPosition: Number): Number
        fun Equal(A: String, B: String): Boolean
        fun EqualEqual_StriStri(A: String, B: String): Boolean
        fun EndsWith(SourceString: String, InSuffix: String, SearchCase: String /* "CaseSensitive" | "IgnoreCase" | "ESearchCase_MAX" */): Boolean
        fun CullArray(SourceString: String, inArray: Array<String> = definedExternally): `T$684`
        fun Conv_VectorToString(InVec: Vector): String
        fun Conv_Vector2dToString(InVec: Vector2D): String
        fun Conv_TransformToString(InTrans: Transform): String
        fun StringtoVector2D(inString: String, OutConvertedVector2D: Vector2D = definedExternally, OutIsValid: Boolean = definedExternally): `T$685`
        fun StringtoVector(inString: String, OutConvertedVector: Vector = definedExternally, OutIsValid: Boolean = definedExternally): `T$686`
        fun StringtoRotator(inString: String, OutConvertedRotator: Rotator = definedExternally, OutIsValid: Boolean = definedExternally): `T$687`
        fun StringToName(inString: String): String
        fun StringToInt(inString: String): Number
        fun StringToFloat(inString: String): Number
        fun StringtoColor(inString: String, OutConvertedColor: LinearColor = definedExternally, OutIsValid: Boolean = definedExternally): `T$688`
        fun Conv_RotatorToString(InRot: Rotator): String
        fun Conv_ObjectToString(InObj: UObject): String
        fun ToString(InName: String): String
        fun Conv_MatrixToString(InMatrix: Matrix): String
        fun Conv_IntVectorToString(InIntVec: IntVector): String
        fun ToString(inInt: Number): String
        fun Conv_IntPointToString(InIntPoint: IntPoint): String
        fun ToString(InFloat: Number): String
        fun Conv_ColorToString(InColor: LinearColor): String
        fun ToString(InByte: Number): String
        fun ToString(InBool: Boolean): String
        fun Contains(SearchIn: String, Substring: String, bUseCase: Boolean, bSearchFromEnd: Boolean): Boolean
        fun Append(A: String, B: String): String
        fun BuildString(AppendTo: String, Prefix: String, InVector2D: Vector2D, Suffix: String): String
        fun BuildString(AppendTo: String, Prefix: String, InVector: Vector, Suffix: String): String
        fun BuildString(AppendTo: String, Prefix: String, InRot: Rotator, Suffix: String): String
        fun BuildString(AppendTo: String, Prefix: String, InObj: UObject, Suffix: String): String
        fun BuildString(AppendTo: String, Prefix: String, InName: String, Suffix: String): String
        fun BuildString(AppendTo: String, Prefix: String, InIntVector: IntVector, Suffix: String): String
        fun BuildString(AppendTo: String, Prefix: String, inInt: Number, Suffix: String): String
        fun BuildString(AppendTo: String, Prefix: String, InFloat: Number, Suffix: String): String
        fun BuildString(AppendTo: String, Prefix: String, InColor: LinearColor, Suffix: String): String
        fun BuildString(AppendTo: String, Prefix: String, InBool: Boolean, Suffix: String): String
        fun C(Other: UObject): KismetStringLibrary
        fun C(Other: Any): KismetStringLibrary
    }
}

external open class KismetStringTableLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): KismetStringTableLibrary
        fun Find(Outer: UObject, ResourceName: String): KismetStringTableLibrary
        fun GetDefaultObject(): KismetStringTableLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): KismetStringTableLibrary
        fun IsStringTableRegistered(TableId: String): Boolean
        fun IsStringTableEntryRegistered(TableId: String, Key: String): Boolean
        fun GetStringTableNamespace(TableId: String): String
        fun GetStringTableEntrySourceString(TableId: String, Key: String): String
        fun GetTableEntryMetaData(TableId: String, Key: String, MetaDataId: String): String
        fun GetRegisteredStringTables(): Array<String>
        fun GetMetaDataIdsFromStringTableEntry(TableId: String, Key: String): Array<String>
        fun GetKeysFromStringTable(TableId: String): Array<String>
        fun C(Other: UObject): KismetStringTableLibrary
        fun C(Other: Any): KismetStringTableLibrary
    }
}

external open class UserActivity {
    open var ActionName: String
    open fun clone(): UserActivity
    open fun SetUserActivity()

    companion object {
        fun C(Other: UObject): UserActivity
        fun C(Other: Any): UserActivity
        fun SetUserActivity(UserActivity: UserActivity)
    }
}

external interface `T$689` {
    var OutHits: Array<HitResult>
    var `$`: Boolean
}

external interface `T$690` {
    var OutHits: Array<HitResult>
    var `$`: Boolean
}

external interface `T$691` {
    var OutHits: Array<HitResult>
    var `$`: Boolean
}

external interface `T$692` {
    var OutComponents: Array<PrimitiveComponent>
    var `$`: Boolean
}

external interface `T$693` {
    var OutActors: Array<Actor>
    var `$`: Boolean
}

external interface `T$694` {
    var OutTokens: Array<String>
    var OutSwitches: Array<String>
    var OutParams: Any
}

external interface `T$695` {
    var OutHits: Array<HitResult>
    var `$`: Boolean
}

external interface `T$696` {
    var OutHits: Array<HitResult>
    var `$`: Boolean
}

external interface `T$697` {
    var OutHits: Array<HitResult>
    var `$`: Boolean
}

external interface `T$698` {
    var Resolutions: Array<IntPoint>
    var `$`: Boolean
}

external interface `T$699` {
    var OutPrimaryAssetIdList: Array<PrimaryAssetId>
}

external interface `T$700` {
    var OutPrimaryAssetIdList: Array<PrimaryAssetId>
}

external interface `T$701` {
    var OutBundles: Array<String>
    var `$`: Boolean
}

external interface `T$702` {
    var Resolutions: Array<IntPoint>
    var `$`: Boolean
}

external interface `T$703` {
    var OutActorList: Array<Actor>
}

external interface `T$704` {
    var OutComponents: Array<PrimitiveComponent>
    var `$`: Boolean
}

external interface `T$705` {
    var OutActors: Array<Actor>
    var `$`: Boolean
}

external interface `T$706` {
    var OutHits: Array<HitResult>
    var `$`: Boolean
}

external interface `T$707` {
    var OutHits: Array<HitResult>
    var `$`: Boolean
}

external interface `T$708` {
    var OutHits: Array<HitResult>
    var `$`: Boolean
}

external interface `T$709` {
    var OutComponents: Array<PrimitiveComponent>
    var `$`: Boolean
}

external interface `T$710` {
    var OutActors: Array<Actor>
    var `$`: Boolean
}

external interface `T$711` {
    var OutHits: Array<HitResult>
    var `$`: Boolean
}

external interface `T$712` {
    var OutHits: Array<HitResult>
    var `$`: Boolean
}

external interface `T$713` {
    var OutHits: Array<HitResult>
    var `$`: Boolean
}

external interface `T$714` {
    var OutComponents: Array<PrimitiveComponent>
    var `$`: Boolean
}

external interface `T$715` {
    var OutActors: Array<Actor>
    var `$`: Boolean
}

external open class KismetSystemLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): KismetSystemLibrary
        fun Find(Outer: UObject, ResourceName: String): KismetSystemLibrary
        fun GetDefaultObject(): KismetSystemLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): KismetSystemLibrary
        fun UnregisterForRemoteNotifications()
        fun UnloadPrimaryAssetList(PrimaryAssetIdList: Array<PrimaryAssetId>)
        fun UnloadPrimaryAsset(PrimaryAssetId: PrimaryAssetId)
        fun TransactObject(UObject: UObject)
        fun StackTrace()
        fun SphereTraceSingleForObjects(WorldContextObject: UObject, Start: Vector, End: Vector, Radius: Number, ObjectTypes: Array<String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */>, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHit: HitResult = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$171`
        fun SphereTraceSingleByProfile(WorldContextObject: UObject, Start: Vector, End: Vector, Radius: Number, ProfileName: String, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHit: HitResult = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$171`
        fun SphereTraceSingle(WorldContextObject: UObject, Start: Vector, End: Vector, Radius: Number, TraceChannel: String /* "TraceTypeQuery1" | "TraceTypeQuery2" | "TraceTypeQuery3" | "TraceTypeQuery4" | "TraceTypeQuery5" | "TraceTypeQuery6" | "TraceTypeQuery7" | "TraceTypeQuery8" | "TraceTypeQuery9" | "TraceTypeQuery10" | "TraceTypeQuery11" | "TraceTypeQuery12" | "TraceTypeQuery13" | "TraceTypeQuery14" | "TraceTypeQuery15" | "TraceTypeQuery16" | "TraceTypeQuery17" | "TraceTypeQuery18" | "TraceTypeQuery19" | "TraceTypeQuery20" | "TraceTypeQuery21" | "TraceTypeQuery22" | "TraceTypeQuery23" | "TraceTypeQuery24" | "TraceTypeQuery25" | "TraceTypeQuery26" | "TraceTypeQuery27" | "TraceTypeQuery28" | "TraceTypeQuery29" | "TraceTypeQuery30" | "TraceTypeQuery31" | "TraceTypeQuery32" | "TraceTypeQuery_MAX" | "ETraceTypeQuery_MAX" */, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHit: HitResult = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$171`
        fun SphereTraceMultiForObjects(WorldContextObject: UObject, Start: Vector, End: Vector, Radius: Number, ObjectTypes: Array<String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */>, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHits: Array<HitResult> = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$689`
        fun SphereTraceMultiByProfile(WorldContextObject: UObject, Start: Vector, End: Vector, Radius: Number, ProfileName: String, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHits: Array<HitResult> = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$690`
        fun SphereTraceMulti(WorldContextObject: UObject, Start: Vector, End: Vector, Radius: Number, TraceChannel: String /* "TraceTypeQuery1" | "TraceTypeQuery2" | "TraceTypeQuery3" | "TraceTypeQuery4" | "TraceTypeQuery5" | "TraceTypeQuery6" | "TraceTypeQuery7" | "TraceTypeQuery8" | "TraceTypeQuery9" | "TraceTypeQuery10" | "TraceTypeQuery11" | "TraceTypeQuery12" | "TraceTypeQuery13" | "TraceTypeQuery14" | "TraceTypeQuery15" | "TraceTypeQuery16" | "TraceTypeQuery17" | "TraceTypeQuery18" | "TraceTypeQuery19" | "TraceTypeQuery20" | "TraceTypeQuery21" | "TraceTypeQuery22" | "TraceTypeQuery23" | "TraceTypeQuery24" | "TraceTypeQuery25" | "TraceTypeQuery26" | "TraceTypeQuery27" | "TraceTypeQuery28" | "TraceTypeQuery29" | "TraceTypeQuery30" | "TraceTypeQuery31" | "TraceTypeQuery32" | "TraceTypeQuery_MAX" | "ETraceTypeQuery_MAX" */, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHits: Array<HitResult> = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$691`
        fun SphereOverlapComponents(WorldContextObject: UObject, SpherePos: Vector, SphereRadius: Number, ObjectTypes: Array<String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */>, ComponentClassFilter: UnrealEngineClass, ActorsToIgnore: Array<Actor>, OutComponents: Array<PrimitiveComponent> = definedExternally): `T$692`
        fun SphereOverlapActors(WorldContextObject: UObject, SpherePos: Vector, SphereRadius: Number, ObjectTypes: Array<String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */>, ActorClassFilter: UnrealEngineClass, ActorsToIgnore: Array<Actor>, OutActors: Array<Actor> = definedExternally): `T$693`
        fun SnapshotObject(UObject: UObject)
        fun ShowPlatformSpecificLeaderboardScreen(CategoryName: String)
        fun ShowPlatformSpecificAchievementsScreen(SpecificPlayer: PlayerController)
        fun ShowInterstitialAd()
        fun ShowAdBanner(AdIdIndex: Number, bShowOnBottomOfScreen: Boolean)
        fun SetWindowTitle(Title: String)
        fun SetVolumeButtonsHandledBySystem(bEnabled: Boolean)
        fun SetVectorPropertyByName(UObject: UObject, PropertyName: String, Value: Vector)
        fun SetUserActivity(UserActivity: UserActivity)
        fun SetTransformPropertyByName(UObject: UObject, PropertyName: String, Value: Transform)
        fun SetTextPropertyByName(UObject: UObject, PropertyName: String, Value: String)
        fun SetSuppressViewportTransitionMessage(WorldContextObject: UObject, bState: Boolean)
        fun SetStructurePropertyByName(UObject: UObject, PropertyName: String, Value: GenericStruct)
        fun SetStringPropertyByName(UObject: UObject, PropertyName: String, Value: String)
        fun SetSoftObjectPropertyByName(UObject: UObject, PropertyName: String, Value: UObject)
        fun SetSoftClassPropertyByName(UObject: UObject, PropertyName: String, Value: Class)
        fun SetRotatorPropertyByName(UObject: UObject, PropertyName: String, Value: Rotator)
        fun SetObjectPropertyByName(UObject: UObject, PropertyName: String, Value: UObject)
        fun SetNamePropertyByName(UObject: UObject, PropertyName: String, Value: String)
        fun SetLinearColorPropertyByName(UObject: UObject, PropertyName: String, Value: LinearColor)
        fun SetIntPropertyByName(UObject: UObject, PropertyName: String, Value: Number)
        fun SetInt64PropertyByName(UObject: UObject, PropertyName: String, Value: Any)
        fun SetGamepadsBlockDeviceFeedback(bBlock: Boolean)
        fun SetFloatPropertyByName(UObject: UObject, PropertyName: String, Value: Number)
        fun SetFieldPathPropertyByName(UObject: UObject, PropertyName: String, Value: Any)
        fun SetEditorProperty(UObject: UObject, PropertyName: String, PropertyValue: Number, ChangeNotifyMode: String /* "Default" | "Never" | "Always" | "EPropertyAccessChangeNotifyMode_MAX" */): Boolean
        fun SetColorPropertyByName(UObject: UObject, PropertyName: String, Value: Color)
        fun SetCollisionProfileNameProperty(UObject: UObject, PropertyName: String, Value: CollisionProfileName)
        fun SetClassPropertyByName(UObject: UObject, PropertyName: String, Value: UnrealEngineClass)
        fun SetBytePropertyByName(UObject: UObject, PropertyName: String, Value: Number)
        fun SetBoolPropertyByName(UObject: UObject, PropertyName: String, Value: Boolean)
        fun RetriggerableDelay(WorldContextObject: UObject, Duration: Number, LatentInfo: LatentActionInfo)
        fun ResetGamepadAssignmentToController(ControllerId: Number)
        fun ResetGamepadAssignments()
        fun RegisterForRemoteNotifications()
        fun QuitGame(WorldContextObject: UObject, SpecificPlayer: PlayerController, QuitPreference: String /* "Quit" | "Background" | "EQuitPreference_MAX" */, bIgnorePlatformRestrictions: Boolean)
        fun QuitEditor()
        fun PrintWarning(inString: String)
        fun PrintText(WorldContextObject: UObject, InText: String, bPrintToScreen: Boolean, bPrintToLog: Boolean, TextColor: LinearColor, Duration: Number)
        fun PrintString(WorldContextObject: UObject, inString: String, bPrintToScreen: Boolean, bPrintToLog: Boolean, TextColor: LinearColor, Duration: Number)
        fun ParseParamValue(inString: String, InParam: String, OutValue: String = definedExternally): `T$212`
        fun ParseParam(inString: String, InParam: String): Boolean
        fun ParseCommandLine(InCmdLine: String, OutTokens: Array<String> = definedExternally, OutSwitches: Array<String> = definedExternally, OutParams: Any = definedExternally): `T$694`
        fun NotEqual_SoftObjectReference(A: UObject, B: UObject): Boolean
        fun NotEqual_SoftClassReference(A: Class, B: Class): Boolean
        fun NotEqual_PrimaryAssetType(A: PrimaryAssetType, B: PrimaryAssetType): Boolean
        fun NotEqual_PrimaryAssetId(A: PrimaryAssetId, B: PrimaryAssetId): Boolean
        fun NormalizeFilename(InFilename: String): String
        fun MoveComponentTo(Component: SceneComponent, TargetRelativeLocation: Vector, TargetRelativeRotation: Rotator, bEaseOut: Boolean, bEaseIn: Boolean, OverTime: Number, bForceShortestRotationPath: Boolean, MoveAction: String /* "Move" | "Stop" | "Return" | "EMoveComponentAction_MAX" */, LatentInfo: LatentActionInfo)
        fun MakeSoftObjectPath(PathString: String): SoftObjectPath
        fun MakeSoftClassPath(PathString: String): SoftClassPath
        fun MakeLiteralText(Value: String): String
        fun MakeLiteralString(Value: String): String
        fun MakeLiteralName(Value: String): String
        fun MakeLiteralInt(Value: Number): Number
        fun MakeLiteralFloat(Value: Number): Number
        fun MakeLiteralByte(Value: Number): Number
        fun MakeLiteralBool(Value: Boolean): Boolean
        fun LoadInterstitialAd(AdIdIndex: Number)
        fun LoadClassAsset_Blocking(AssetClass: Class): UnrealEngineClass
        fun LoadAsset_Blocking(Asset: UObject): UObject
        fun LineTraceSingleForObjects(WorldContextObject: UObject, Start: Vector, End: Vector, ObjectTypes: Array<String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */>, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHit: HitResult = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$171`
        fun LineTraceSingleByProfile(WorldContextObject: UObject, Start: Vector, End: Vector, ProfileName: String, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHit: HitResult = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$171`
        fun LineTraceSingle(WorldContextObject: UObject, Start: Vector, End: Vector, TraceChannel: String /* "TraceTypeQuery1" | "TraceTypeQuery2" | "TraceTypeQuery3" | "TraceTypeQuery4" | "TraceTypeQuery5" | "TraceTypeQuery6" | "TraceTypeQuery7" | "TraceTypeQuery8" | "TraceTypeQuery9" | "TraceTypeQuery10" | "TraceTypeQuery11" | "TraceTypeQuery12" | "TraceTypeQuery13" | "TraceTypeQuery14" | "TraceTypeQuery15" | "TraceTypeQuery16" | "TraceTypeQuery17" | "TraceTypeQuery18" | "TraceTypeQuery19" | "TraceTypeQuery20" | "TraceTypeQuery21" | "TraceTypeQuery22" | "TraceTypeQuery23" | "TraceTypeQuery24" | "TraceTypeQuery25" | "TraceTypeQuery26" | "TraceTypeQuery27" | "TraceTypeQuery28" | "TraceTypeQuery29" | "TraceTypeQuery30" | "TraceTypeQuery31" | "TraceTypeQuery32" | "TraceTypeQuery_MAX" | "ETraceTypeQuery_MAX" */, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHit: HitResult = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$171`
        fun LineTraceMultiForObjects(WorldContextObject: UObject, Start: Vector, End: Vector, ObjectTypes: Array<String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */>, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHits: Array<HitResult> = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$695`
        fun LineTraceMultiByProfile(WorldContextObject: UObject, Start: Vector, End: Vector, ProfileName: String, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHits: Array<HitResult> = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$696`
        fun LineTraceMulti(WorldContextObject: UObject, Start: Vector, End: Vector, TraceChannel: String /* "TraceTypeQuery1" | "TraceTypeQuery2" | "TraceTypeQuery3" | "TraceTypeQuery4" | "TraceTypeQuery5" | "TraceTypeQuery6" | "TraceTypeQuery7" | "TraceTypeQuery8" | "TraceTypeQuery9" | "TraceTypeQuery10" | "TraceTypeQuery11" | "TraceTypeQuery12" | "TraceTypeQuery13" | "TraceTypeQuery14" | "TraceTypeQuery15" | "TraceTypeQuery16" | "TraceTypeQuery17" | "TraceTypeQuery18" | "TraceTypeQuery19" | "TraceTypeQuery20" | "TraceTypeQuery21" | "TraceTypeQuery22" | "TraceTypeQuery23" | "TraceTypeQuery24" | "TraceTypeQuery25" | "TraceTypeQuery26" | "TraceTypeQuery27" | "TraceTypeQuery28" | "TraceTypeQuery29" | "TraceTypeQuery30" | "TraceTypeQuery31" | "TraceTypeQuery32" | "TraceTypeQuery_MAX" | "ETraceTypeQuery_MAX" */, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHits: Array<HitResult> = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$697`
        fun LaunchURL(URL: String)
        fun K2_UnPauseTimerHandle(WorldContextObject: UObject, Handle: TimerHandle)
        fun K2_UnPauseTimer(UObject: UObject, FunctionName: String)
        fun K2_TimerExistsHandle(WorldContextObject: UObject, Handle: TimerHandle): Boolean
        fun K2_TimerExists(UObject: UObject, FunctionName: String): Boolean
        fun K2_SetTimer(UObject: UObject, FunctionName: String, Time: Number, bLooping: Boolean, InitialStartDelay: Number, InitialStartDelayVariance: Number): TimerHandle
        fun K2_PauseTimerHandle(WorldContextObject: UObject, Handle: TimerHandle)
        fun K2_PauseTimer(UObject: UObject, FunctionName: String)
        fun K2_IsValidTimerHandle(Handle: TimerHandle): Boolean
        fun K2_IsTimerPausedHandle(WorldContextObject: UObject, Handle: TimerHandle): Boolean
        fun K2_IsTimerPaused(UObject: UObject, FunctionName: String): Boolean
        fun K2_IsTimerActiveHandle(WorldContextObject: UObject, Handle: TimerHandle): Boolean
        fun K2_IsTimerActive(UObject: UObject, FunctionName: String): Boolean
        fun K2_InvalidateTimerHandle(Handle: TimerHandle = definedExternally): `T$279`
        fun K2_GetTimerRemainingTimeHandle(WorldContextObject: UObject, Handle: TimerHandle): Number
        fun K2_GetTimerRemainingTime(UObject: UObject, FunctionName: String): Number
        fun K2_GetTimerElapsedTimeHandle(WorldContextObject: UObject, Handle: TimerHandle): Number
        fun K2_GetTimerElapsedTime(UObject: UObject, FunctionName: String): Number
        fun K2_ClearTimerHandle(WorldContextObject: UObject, Handle: TimerHandle)
        fun K2_ClearTimer(UObject: UObject, FunctionName: String)
        fun K2_ClearAndInvalidateTimerHandle(WorldContextObject: UObject, Handle: TimerHandle = definedExternally): `T$300`
        fun IsValidSoftObjectReference(SoftObjectReference: UObject): Boolean
        fun IsValidSoftClassReference(SoftClassReference: Class): Boolean
        fun IsValidPrimaryAssetType(PrimaryAssetType: PrimaryAssetType): Boolean
        fun IsValidPrimaryAssetId(PrimaryAssetId: PrimaryAssetId): Boolean
        fun IsValidClass(Class: UnrealEngineClass): Boolean
        fun IsValid(UObject: UObject): Boolean
        fun IsUnattended(): Boolean
        fun IsStandalone(WorldContextObject: UObject): Boolean
        fun IsSplitScreen(WorldContextObject: UObject): Boolean
        fun IsServer(WorldContextObject: UObject): Boolean
        fun IsScreensaverEnabled(): Boolean
        fun IsPackagedForDistribution(): Boolean
        fun IsLoggedIn(SpecificPlayer: PlayerController): Boolean
        fun IsInterstitialAdRequested(): Boolean
        fun IsInterstitialAdAvailable(): Boolean
        fun IsDedicatedServer(WorldContextObject: UObject): Boolean
        fun IsControllerAssignedToGamepad(ControllerId: Number): Boolean
        fun HideAdBanner()
        fun GetVolumeButtonsHandledBySystem(): Boolean
        fun GetUniqueDeviceId(): String
        fun GetSystemPath(UObject: UObject): String
        fun GetSupportedFullscreenResolutions(Resolutions: Array<IntPoint> = definedExternally): `T$698`
        fun GetSoftObjectReferenceFromPrimaryAssetId(PrimaryAssetId: PrimaryAssetId): UObject
        fun GetSoftClassReferenceFromPrimaryAssetId(PrimaryAssetId: PrimaryAssetId): Class
        fun GetRenderingMaterialQualityLevel(): Number
        fun GetRenderingDetailMode(): Number
        fun GetProjectSavedDirectory(): String
        fun GetProjectDirectory(): String
        fun GetProjectContentDirectory(): String
        fun GetPrimaryAssetsWithBundleState(RequiredBundles: Array<String>, ExcludedBundles: Array<String>, ValidTypes: Array<PrimaryAssetType>, bForceCurrentState: Boolean, OutPrimaryAssetIdList: Array<PrimaryAssetId> = definedExternally): `T$699`
        fun GetPrimaryAssetIdList(PrimaryAssetType: PrimaryAssetType, OutPrimaryAssetIdList: Array<PrimaryAssetId> = definedExternally): `T$700`
        fun GetPrimaryAssetIdFromSoftObjectReference(SoftObjectReference: UObject): PrimaryAssetId
        fun GetPrimaryAssetIdFromSoftClassReference(SoftClassReference: Class): PrimaryAssetId
        fun GetPrimaryAssetIdFromObject(UObject: UObject): PrimaryAssetId
        fun GetPrimaryAssetIdFromClass(Class: UnrealEngineClass): PrimaryAssetId
        fun GetPreferredLanguages(): Array<String>
        fun GetPlatformUserName(): String
        fun GetPlatformUserDir(): String
        fun GetPathName(UObject: UObject): String
        fun GetOuterObject(UObject: UObject): UObject
        fun GetObjectName(UObject: UObject): String
        fun GetObjectFromPrimaryAssetId(PrimaryAssetId: PrimaryAssetId): UObject
        fun GetMinYResolutionForUI(): Number
        fun GetMinYResolutionFor3DView(): Number
        fun GetLocalCurrencySymbol(): String
        fun GetLocalCurrencyCode(): String
        fun GetGameTimeInSeconds(WorldContextObject: UObject): Number
        fun GetGamepadControllerName(ControllerId: Number): String
        fun GetGamepadButtonGlyph(ButtonKey: String, ControllerIndex: Number): Texture2D
        fun GetGameName(): String
        fun GetGameBundleId(): String
        fun GetFrameCount(): Any
        fun GetEngineVersion(): String
        fun GetEditorProperty(UObject: UObject, PropertyName: String, PropertyValue: Number = definedExternally): `T$369`
        fun GetDisplayName(UObject: UObject): String
        fun GetDeviceId(): String
        fun GetDefaultLocale(): String
        fun GetDefaultLanguage(): String
        fun GetCurrentBundleState(PrimaryAssetId: PrimaryAssetId, bForceCurrentState: Boolean, OutBundles: Array<String> = definedExternally): `T$701`
        fun GetConvenientWindowedResolutions(Resolutions: Array<IntPoint> = definedExternally): `T$702`
        fun GetConsoleVariableIntValue(VariableName: String): Number
        fun GetConsoleVariableFloatValue(VariableName: String): Number
        fun GetConsoleVariableBoolValue(VariableName: String): Boolean
        fun GetComponentBounds(Component: SceneComponent, Origin: Vector = definedExternally, BoxExtent: Vector = definedExternally, SphereRadius: Number = definedExternally): `T$32`
        fun GetCommandLine(): String
        fun GetClassFromPrimaryAssetId(PrimaryAssetId: PrimaryAssetId): UnrealEngineClass
        fun GetClassDisplayName(Class: UnrealEngineClass): String
        fun GetAdIDCount(): Number
        fun GetActorListFromComponentList(ComponentList: Array<PrimitiveComponent>, ActorClassFilter: UnrealEngineClass, OutActorList: Array<Actor> = definedExternally): `T$703`
        fun GetActorBounds(Actor: Actor, Origin: Vector = definedExternally, BoxExtent: Vector = definedExternally): `T$277`
        fun ForceCloseAdBanner()
        fun FlushPersistentDebugLines(WorldContextObject: UObject)
        fun FlushDebugStrings(WorldContextObject: UObject)
        fun ExecuteConsoleCommand(WorldContextObject: UObject, Command: String, SpecificPlayer: PlayerController)
        fun EqualEqual_SoftObjectReference(A: UObject, B: UObject): Boolean
        fun EqualEqual_SoftClassReference(A: Class, B: Class): Boolean
        fun EqualEqual_PrimaryAssetType(A: PrimaryAssetType, B: PrimaryAssetType): Boolean
        fun EqualEqual_PrimaryAssetId(A: PrimaryAssetId, B: PrimaryAssetId): Boolean
        fun EndTransaction(): Number
        fun DrawDebugString(WorldContextObject: UObject, TextLocation: Vector, text: String, TestBaseActor: Actor, TextColor: LinearColor, Duration: Number)
        fun DrawDebugSphere(WorldContextObject: UObject, Center: Vector, Radius: Number, Segments: Number, LineColor: LinearColor, Duration: Number, Thickness: Number)
        fun DrawDebugPoint(WorldContextObject: UObject, Position: Vector, Size: Number, PointColor: LinearColor, Duration: Number)
        fun DrawDebugPlane(WorldContextObject: UObject, PlaneCoordinates: Plane, Location: Vector, Size: Number, PlaneColor: LinearColor, Duration: Number)
        fun DrawDebugLine(WorldContextObject: UObject, LineStart: Vector, LineEnd: Vector, LineColor: LinearColor, Duration: Number, Thickness: Number)
        fun DrawDebugFrustum(WorldContextObject: UObject, FrustumTransform: Transform, FrustumColor: LinearColor, Duration: Number, Thickness: Number)
        fun DrawDebugFloatHistoryTransform(WorldContextObject: UObject, FloatHistory: DebugFloatHistory, DrawTransform: Transform, DrawSize: Vector2D, DrawColor: LinearColor, Duration: Number)
        fun DrawDebugFloatHistoryLocation(WorldContextObject: UObject, FloatHistory: DebugFloatHistory, DrawLocation: Vector, DrawSize: Vector2D, DrawColor: LinearColor, Duration: Number)
        fun DrawDebugCylinder(WorldContextObject: UObject, Start: Vector, End: Vector, Radius: Number, Segments: Number, LineColor: LinearColor, Duration: Number, Thickness: Number)
        fun DrawDebugCoordinateSystem(WorldContextObject: UObject, AxisLoc: Vector, AxisRot: Rotator, Scale: Number, Duration: Number, Thickness: Number)
        fun DrawDebugConeInDegrees(WorldContextObject: UObject, Origin: Vector, Direction: Vector, Length: Number, AngleWidth: Number, AngleHeight: Number, NumSides: Number, LineColor: LinearColor, Duration: Number, Thickness: Number)
        fun DrawDebugCone(WorldContextObject: UObject, Origin: Vector, Direction: Vector, Length: Number, AngleWidth: Number, AngleHeight: Number, NumSides: Number, LineColor: LinearColor, Duration: Number, Thickness: Number)
        fun DrawDebugCircle(WorldContextObject: UObject, Center: Vector, Radius: Number, NumSegments: Number, LineColor: LinearColor, Duration: Number, Thickness: Number, YAxis: Vector, ZAxis: Vector, bDrawAxis: Boolean)
        fun DrawDebugCapsule(WorldContextObject: UObject, Center: Vector, HalfHeight: Number, Radius: Number, Rotation: Rotator, LineColor: LinearColor, Duration: Number, Thickness: Number)
        fun DrawDebugCamera(CameraActor: CameraActor, CameraColor: LinearColor, Duration: Number)
        fun DrawDebugBox(WorldContextObject: UObject, Center: Vector, Extent: Vector, LineColor: LinearColor, Rotation: Rotator, Duration: Number, Thickness: Number)
        fun DrawDebugArrow(WorldContextObject: UObject, LineStart: Vector, LineEnd: Vector, ArrowSize: Number, LineColor: LinearColor, Duration: Number, Thickness: Number)
        fun DoesImplementInterface(TestObject: UObject, Interface: UnrealEngineClass): Boolean
        fun Delay(WorldContextObject: UObject, Duration: Number, LatentInfo: LatentActionInfo)
        fun CreateCopyForUndoBuffer(ObjectToModify: UObject)
        fun ConvertToRelativePath(Filename: String): String
        fun ConvertToAbsolutePath(Filename: String): String
        fun Conv_SoftObjPathToSoftObjRef(SoftObjectPath: SoftObjectPath): UObject
        fun Conv_SoftObjectReferenceToString(SoftObjectReference: UObject): String
        fun Conv_SoftObjectReferenceToObject(softobject: UObject): UObject
        fun Conv_SoftClassReferenceToString(SoftClassReference: Class): String
        fun Conv_SoftClassReferenceToClass(softclass: Class): UnrealEngineClass
        fun Conv_SoftClassPathToSoftClassRef(SoftClassPath: SoftClassPath): Class
        fun Conv_PrimaryAssetTypeToString(PrimaryAssetType: PrimaryAssetType): String
        fun Conv_PrimaryAssetIdToString(PrimaryAssetId: PrimaryAssetId): String
        fun Conv_ObjectToSoftObjectReference(UObject: UObject): UObject
        fun Conv_ClassToSoftClassReference(Class: UnrealEngineClass): Class
        fun ControlScreensaver(bAllowScreenSaver: Boolean)
        fun ComponentOverlapComponents(Component: PrimitiveComponent, ComponentTransform: Transform, ObjectTypes: Array<String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */>, ComponentClassFilter: UnrealEngineClass, ActorsToIgnore: Array<Actor>, OutComponents: Array<PrimitiveComponent> = definedExternally): `T$704`
        fun ComponentOverlapActors(Component: PrimitiveComponent, ComponentTransform: Transform, ObjectTypes: Array<String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */>, ActorClassFilter: UnrealEngineClass, ActorsToIgnore: Array<Actor>, OutActors: Array<Actor> = definedExternally): `T$705`
        fun CollectGarbage()
        fun CapsuleTraceSingleForObjects(WorldContextObject: UObject, Start: Vector, End: Vector, Radius: Number, HalfHeight: Number, ObjectTypes: Array<String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */>, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHit: HitResult = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$171`
        fun CapsuleTraceSingleByProfile(WorldContextObject: UObject, Start: Vector, End: Vector, Radius: Number, HalfHeight: Number, ProfileName: String, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHit: HitResult = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$171`
        fun CapsuleTraceSingle(WorldContextObject: UObject, Start: Vector, End: Vector, Radius: Number, HalfHeight: Number, TraceChannel: String /* "TraceTypeQuery1" | "TraceTypeQuery2" | "TraceTypeQuery3" | "TraceTypeQuery4" | "TraceTypeQuery5" | "TraceTypeQuery6" | "TraceTypeQuery7" | "TraceTypeQuery8" | "TraceTypeQuery9" | "TraceTypeQuery10" | "TraceTypeQuery11" | "TraceTypeQuery12" | "TraceTypeQuery13" | "TraceTypeQuery14" | "TraceTypeQuery15" | "TraceTypeQuery16" | "TraceTypeQuery17" | "TraceTypeQuery18" | "TraceTypeQuery19" | "TraceTypeQuery20" | "TraceTypeQuery21" | "TraceTypeQuery22" | "TraceTypeQuery23" | "TraceTypeQuery24" | "TraceTypeQuery25" | "TraceTypeQuery26" | "TraceTypeQuery27" | "TraceTypeQuery28" | "TraceTypeQuery29" | "TraceTypeQuery30" | "TraceTypeQuery31" | "TraceTypeQuery32" | "TraceTypeQuery_MAX" | "ETraceTypeQuery_MAX" */, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHit: HitResult = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$171`
        fun CapsuleTraceMultiForObjects(WorldContextObject: UObject, Start: Vector, End: Vector, Radius: Number, HalfHeight: Number, ObjectTypes: Array<String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */>, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHits: Array<HitResult> = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$706`
        fun CapsuleTraceMultiByProfile(WorldContextObject: UObject, Start: Vector, End: Vector, Radius: Number, HalfHeight: Number, ProfileName: String, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHits: Array<HitResult> = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$707`
        fun CapsuleTraceMulti(WorldContextObject: UObject, Start: Vector, End: Vector, Radius: Number, HalfHeight: Number, TraceChannel: String /* "TraceTypeQuery1" | "TraceTypeQuery2" | "TraceTypeQuery3" | "TraceTypeQuery4" | "TraceTypeQuery5" | "TraceTypeQuery6" | "TraceTypeQuery7" | "TraceTypeQuery8" | "TraceTypeQuery9" | "TraceTypeQuery10" | "TraceTypeQuery11" | "TraceTypeQuery12" | "TraceTypeQuery13" | "TraceTypeQuery14" | "TraceTypeQuery15" | "TraceTypeQuery16" | "TraceTypeQuery17" | "TraceTypeQuery18" | "TraceTypeQuery19" | "TraceTypeQuery20" | "TraceTypeQuery21" | "TraceTypeQuery22" | "TraceTypeQuery23" | "TraceTypeQuery24" | "TraceTypeQuery25" | "TraceTypeQuery26" | "TraceTypeQuery27" | "TraceTypeQuery28" | "TraceTypeQuery29" | "TraceTypeQuery30" | "TraceTypeQuery31" | "TraceTypeQuery32" | "TraceTypeQuery_MAX" | "ETraceTypeQuery_MAX" */, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHits: Array<HitResult> = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$708`
        fun CapsuleOverlapComponents(WorldContextObject: UObject, CapsulePos: Vector, Radius: Number, HalfHeight: Number, ObjectTypes: Array<String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */>, ComponentClassFilter: UnrealEngineClass, ActorsToIgnore: Array<Actor>, OutComponents: Array<PrimitiveComponent> = definedExternally): `T$709`
        fun CapsuleOverlapActors(WorldContextObject: UObject, CapsulePos: Vector, Radius: Number, HalfHeight: Number, ObjectTypes: Array<String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */>, ActorClassFilter: UnrealEngineClass, ActorsToIgnore: Array<Actor>, OutActors: Array<Actor> = definedExternally): `T$710`
        fun CanLaunchURL(URL: String): Boolean
        fun CancelTransaction(index: Number)
        fun BreakSoftObjectPath(InSoftObjectPath: SoftObjectPath, PathString: String = definedExternally): `T$35`
        fun BreakSoftClassPath(InSoftClassPath: SoftClassPath, PathString: String = definedExternally): `T$35`
        fun BoxTraceSingleForObjects(WorldContextObject: UObject, Start: Vector, End: Vector, HalfSize: Vector, Orientation: Rotator, ObjectTypes: Array<String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */>, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHit: HitResult = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$171`
        fun BoxTraceSingleByProfile(WorldContextObject: UObject, Start: Vector, End: Vector, HalfSize: Vector, Orientation: Rotator, ProfileName: String, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHit: HitResult = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$171`
        fun BoxTraceSingle(WorldContextObject: UObject, Start: Vector, End: Vector, HalfSize: Vector, Orientation: Rotator, TraceChannel: String /* "TraceTypeQuery1" | "TraceTypeQuery2" | "TraceTypeQuery3" | "TraceTypeQuery4" | "TraceTypeQuery5" | "TraceTypeQuery6" | "TraceTypeQuery7" | "TraceTypeQuery8" | "TraceTypeQuery9" | "TraceTypeQuery10" | "TraceTypeQuery11" | "TraceTypeQuery12" | "TraceTypeQuery13" | "TraceTypeQuery14" | "TraceTypeQuery15" | "TraceTypeQuery16" | "TraceTypeQuery17" | "TraceTypeQuery18" | "TraceTypeQuery19" | "TraceTypeQuery20" | "TraceTypeQuery21" | "TraceTypeQuery22" | "TraceTypeQuery23" | "TraceTypeQuery24" | "TraceTypeQuery25" | "TraceTypeQuery26" | "TraceTypeQuery27" | "TraceTypeQuery28" | "TraceTypeQuery29" | "TraceTypeQuery30" | "TraceTypeQuery31" | "TraceTypeQuery32" | "TraceTypeQuery_MAX" | "ETraceTypeQuery_MAX" */, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHit: HitResult = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$171`
        fun BoxTraceMultiForObjects(WorldContextObject: UObject, Start: Vector, End: Vector, HalfSize: Vector, Orientation: Rotator, ObjectTypes: Array<String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */>, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHits: Array<HitResult> = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$711`
        fun BoxTraceMultiByProfile(WorldContextObject: UObject, Start: Vector, End: Vector, HalfSize: Vector, Orientation: Rotator, ProfileName: String, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHits: Array<HitResult> = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$712`
        fun BoxTraceMulti(WorldContextObject: UObject, Start: Vector, End: Vector, HalfSize: Vector, Orientation: Rotator, TraceChannel: String /* "TraceTypeQuery1" | "TraceTypeQuery2" | "TraceTypeQuery3" | "TraceTypeQuery4" | "TraceTypeQuery5" | "TraceTypeQuery6" | "TraceTypeQuery7" | "TraceTypeQuery8" | "TraceTypeQuery9" | "TraceTypeQuery10" | "TraceTypeQuery11" | "TraceTypeQuery12" | "TraceTypeQuery13" | "TraceTypeQuery14" | "TraceTypeQuery15" | "TraceTypeQuery16" | "TraceTypeQuery17" | "TraceTypeQuery18" | "TraceTypeQuery19" | "TraceTypeQuery20" | "TraceTypeQuery21" | "TraceTypeQuery22" | "TraceTypeQuery23" | "TraceTypeQuery24" | "TraceTypeQuery25" | "TraceTypeQuery26" | "TraceTypeQuery27" | "TraceTypeQuery28" | "TraceTypeQuery29" | "TraceTypeQuery30" | "TraceTypeQuery31" | "TraceTypeQuery32" | "TraceTypeQuery_MAX" | "ETraceTypeQuery_MAX" */, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHits: Array<HitResult> = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$713`
        fun BoxOverlapComponents(WorldContextObject: UObject, BoxPos: Vector, Extent: Vector, ObjectTypes: Array<String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */>, ComponentClassFilter: UnrealEngineClass, ActorsToIgnore: Array<Actor>, OutComponents: Array<PrimitiveComponent> = definedExternally): `T$714`
        fun BoxOverlapActors(WorldContextObject: UObject, BoxPos: Vector, BoxExtent: Vector, ObjectTypes: Array<String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */>, ActorClassFilter: UnrealEngineClass, ActorsToIgnore: Array<Actor>, OutActors: Array<Actor> = definedExternally): `T$715`
        fun BeginTransaction(Context: String, Description: String, PrimaryObject: UObject): Number
        fun AddFloatHistorySample(Value: Number, FloatHistory: DebugFloatHistory): DebugFloatHistory
        fun C(Other: UObject): KismetSystemLibrary
        fun C(Other: Any): KismetSystemLibrary
    }
}

external interface `T$716` {
    var IsValid: Boolean
    var ErrorMessage: String
}

external open class PolyglotTextData {
    open var Category: String /* "Game" | "Engine" | "Editor" | "ELocalizedTextSourceCategory_MAX" */
    open var NativeCulture: String
    open var Namespace: String
    open var Key: String
    open var NativeString: String
    open var LocalizedStrings: Any
    open var bIsMinimalPatch: Boolean
    open var CachedText: String
    open fun clone(): PolyglotTextData
    open fun IsPolyglotDataValid(IsValid: Boolean = definedExternally, ErrorMessage: String = definedExternally): `T$716`
    open fun PolyglotDataToText(): String

    companion object {
        fun C(Other: UObject): PolyglotTextData
        fun C(Other: Any): PolyglotTextData
        fun IsPolyglotDataValid(PolyglotData: PolyglotTextData, IsValid: Boolean = definedExternally, ErrorMessage: String = definedExternally): `T$716`
        fun PolyglotDataToText(PolyglotData: PolyglotTextData): String
    }
}

external object EFormatArgumentType {
    var Int: String /* "Int" */
    var UInt: String /* "UInt" */
    var Float: String /* "Float" */
    var Double: String /* "Double" */
    var Text: String /* "Text" */
    var Gender: String /* "Gender" */
    var EFormatArgumentType_MAX: String /* "EFormatArgumentType_MAX" */
}

external object ETextGender {
    var Masculine: String /* "Masculine" */
    var Feminine: String /* "Feminine" */
    var Neuter: String /* "Neuter" */
    var ETextGender_MAX: String /* "ETextGender_MAX" */
}

external open class FormatArgumentData {
    open var ArgumentName: String
    open var ArgumentValueType: String /* "Int" | "UInt" | "Float" | "Double" | "Text" | "Gender" | "EFormatArgumentType_MAX" */
    open var ArgumentValue: String
    open var ArgumentValueInt: Number
    open var ArgumentValueFloat: Number
    open var ArgumentValueGender: String /* "Masculine" | "Feminine" | "Neuter" | "ETextGender_MAX" */
    open fun clone(): FormatArgumentData

    companion object {
        fun C(Other: UObject): FormatArgumentData
        fun C(Other: Any): FormatArgumentData
    }
}

external object ERoundingMode {
    var HalfToEven: String /* "HalfToEven" */
    var HalfFromZero: String /* "HalfFromZero" */
    var HalfToZero: String /* "HalfToZero" */
    var FromZero: String /* "FromZero" */
    var ToZero: String /* "ToZero" */
    var ToNegativeInfinity: String /* "ToNegativeInfinity" */
    var ToPositiveInfinity: String /* "ToPositiveInfinity" */
    var ERoundingMode_MAX: String /* "ERoundingMode_MAX" */
}

external interface `T$717` {
    var OutTableId: String
    var OutKey: String
    var `$`: Boolean
}

external interface `T$718` {
    var OutText: String
    var `$`: Boolean
}

external open class KismetTextLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): KismetTextLibrary
        fun Find(Outer: UObject, ResourceName: String): KismetTextLibrary
        fun GetDefaultObject(): KismetTextLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): KismetTextLibrary
        fun TextTrimTrailing(InText: String): String
        fun TextTrimPrecedingAndTrailing(InText: String): String
        fun TextTrimPreceding(InText: String): String
        fun TextToUpper(InText: String): String
        fun TextToLower(InText: String): String
        fun TextIsTransient(InText: String): Boolean
        fun IsTextfromStringTable(text: String): Boolean
        fun TextIsEmpty(InText: String): Boolean
        fun TextIsCultureInvariant(InText: String): Boolean
        fun MakeTextfromStringTable(TableId: String, Key: String): String
        fun FindStringTableIDandKeyfromText(text: String, OutTableId: String = definedExternally, OutKey: String = definedExternally): `T$717`
        fun PolyglotDataToText(PolyglotData: PolyglotTextData): String
        fun NotEqual(A: String, B: String): Boolean
        fun NotEqual_IgnoreCase_TextText(A: String, B: String): Boolean
        fun IsPolyglotDataValid(PolyglotData: PolyglotTextData, IsValid: Boolean = definedExternally, ErrorMessage: String = definedExternally): `T$716`
        fun GetEmptyText(): String
        fun Format(InPattern: String, InArgs: Array<FormatArgumentData>): String
        fun FindTextInLocalizationTable(Namespace: String, Key: String, OutText: String = definedExternally): `T$718`
        fun Equal(A: String, B: String): Boolean
        fun EqualEqual_IgnoreCase_TextText(A: String, B: String): Boolean
        fun Conv_VectorToText(InVec: Vector): String
        fun Conv_Vector2dToText(InVec: Vector2D): String
        fun Conv_TransformToText(InTrans: Transform): String
        fun ToString(InText: String): String
        fun ToText(inString: String): String
        fun Conv_RotatorToText(InRot: Rotator): String
        fun Conv_ObjectToText(InObj: UObject): String
        fun ToText(InName: String): String
        fun ToText(Value: Number, bAlwaysSign: Boolean, bUseGrouping: Boolean, MinimumIntegralDigits: Number, MaximumIntegralDigits: Number): String
        fun ToText(Value: Any, bAlwaysSign: Boolean, bUseGrouping: Boolean, MinimumIntegralDigits: Number, MaximumIntegralDigits: Number): String
        fun ToText(Value: Number, RoundingMode: String /* "HalfToEven" | "HalfFromZero" | "HalfToZero" | "FromZero" | "ToZero" | "ToNegativeInfinity" | "ToPositiveInfinity" | "ERoundingMode_MAX" */, bAlwaysSign: Boolean, bUseGrouping: Boolean, MinimumIntegralDigits: Number, MaximumIntegralDigits: Number, MinimumFractionalDigits: Number, MaximumFractionalDigits: Number): String
        fun Conv_ColorToText(InColor: LinearColor): String
        fun ToText(Value: Number): String
        fun ToText(InBool: Boolean): String
        fun AsTimeZoneTime_DateTime(InDateTime: DateTime, InTimeZone: String): String
        fun AsTimeZoneDateTime_DateTime(InDateTime: DateTime, InTimeZone: String): String
        fun AsTimeZoneDate_DateTime(InDateTime: DateTime, InTimeZone: String): String
        fun AsTimespan_Timespan(InTimespan: Timespan): String
        fun AsTime_DateTime(In: DateTime): String
        fun AsPercent(Value: Number, RoundingMode: String /* "HalfToEven" | "HalfFromZero" | "HalfToZero" | "FromZero" | "ToZero" | "ToNegativeInfinity" | "ToPositiveInfinity" | "ERoundingMode_MAX" */, bAlwaysSign: Boolean, bUseGrouping: Boolean, MinimumIntegralDigits: Number, MaximumIntegralDigits: Number, MinimumFractionalDigits: Number, MaximumFractionalDigits: Number): String
        fun AsDateTime_DateTime(In: DateTime): String
        fun AsDate_DateTime(InDateTime: DateTime): String
        fun AsCurrency(BaseValue: Number, CurrencyCode: String): String
        fun AsCurrency(Value: Number, RoundingMode: String /* "HalfToEven" | "HalfFromZero" | "HalfToZero" | "FromZero" | "ToZero" | "ToNegativeInfinity" | "ToPositiveInfinity" | "ERoundingMode_MAX" */, bAlwaysSign: Boolean, bUseGrouping: Boolean, MinimumIntegralDigits: Number, MaximumIntegralDigits: Number, MinimumFractionalDigits: Number, MaximumFractionalDigits: Number, CurrencyCode: String): String
        fun C(Other: UObject): KismetTextLibrary
        fun C(Other: Any): KismetTextLibrary
    }
}

external open class LevelPartitionInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LevelPartitionInterface
        fun Find(Outer: UObject, ResourceName: String): LevelPartitionInterface
        fun GetDefaultObject(): LevelPartitionInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelPartitionInterface
        fun C(Other: UObject): LevelPartitionInterface
        fun C(Other: Any): LevelPartitionInterface
    }
}

external open class LevelBounds(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var BoxComponent: BoxComponent
    open var bAutoUpdateBounds: Boolean

    companion object {
        fun GetDefaultObject(): LevelBounds
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelBounds
        fun C(Other: UObject): LevelBounds
        fun C(Other: Any): LevelBounds
    }
}

external open class LevelStreamingAlwaysLoaded : LevelStreaming {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LevelStreamingAlwaysLoaded
        fun Find(Outer: UObject, ResourceName: String): LevelStreamingAlwaysLoaded
        fun GetDefaultObject(): LevelStreamingAlwaysLoaded
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelStreamingAlwaysLoaded
        fun C(Other: UObject): LevelStreamingAlwaysLoaded
        fun C(Other: Any): LevelStreamingAlwaysLoaded
    }
}

external interface `T$719` {
    var bOutSuccess: Boolean
    var `$`: LevelStreamingDynamic
}

external open class LevelStreamingDynamic : LevelStreaming {
    constructor()
    constructor(Outer: UObject)
    open var bInitiallyLoaded: Boolean
    open var bInitiallyVisible: Boolean

    companion object {
        fun Load(ResourceName: String): LevelStreamingDynamic
        fun Find(Outer: UObject, ResourceName: String): LevelStreamingDynamic
        fun GetDefaultObject(): LevelStreamingDynamic
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelStreamingDynamic
        fun LoadLevelInstance(WorldContextObject: UObject, Level: World, Location: Vector, Rotation: Rotator, bOutSuccess: Boolean = definedExternally, OptionalLevelNameOverride: String = definedExternally): `T$719`
        fun LoadLevelInstance(WorldContextObject: UObject, LevelName: String, Location: Vector, Rotation: Rotator, bOutSuccess: Boolean = definedExternally, OptionalLevelNameOverride: String = definedExternally): `T$719`
        fun C(Other: UObject): LevelStreamingDynamic
        fun C(Other: Any): LevelStreamingDynamic
    }
}

external open class LevelStreamingPersistent : LevelStreaming {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LevelStreamingPersistent
        fun Find(Outer: UObject, ResourceName: String): LevelStreamingPersistent
        fun GetDefaultObject(): LevelStreamingPersistent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelStreamingPersistent
        fun C(Other: UObject): LevelStreamingPersistent
        fun C(Other: Any): LevelStreamingPersistent
    }
}

external open class LightmappedSurfaceCollection : UObject {
    constructor()
    constructor(Outer: UObject)
    open var SourceModel: Model
    open var Surfaces: Array<Number>

    companion object {
        fun Load(ResourceName: String): LightmappedSurfaceCollection
        fun Find(Outer: UObject, ResourceName: String): LightmappedSurfaceCollection
        fun GetDefaultObject(): LightmappedSurfaceCollection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LightmappedSurfaceCollection
        fun C(Other: UObject): LightmappedSurfaceCollection
        fun C(Other: Any): LightmappedSurfaceCollection
    }
}

external open class LightMapTexture2D : Texture2D {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LightMapTexture2D
        fun Find(Outer: UObject, ResourceName: String): LightMapTexture2D
        fun GetDefaultObject(): LightMapTexture2D
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LightMapTexture2D
        fun C(Other: UObject): LightMapTexture2D
        fun C(Other: Any): LightMapTexture2D
    }
}

external open class LightMapVirtualTexture2D : Texture2D {
    constructor()
    constructor(Outer: UObject)
    open var TypeToLayer: Array<Any>

    companion object {
        fun Load(ResourceName: String): LightMapVirtualTexture2D
        fun Find(Outer: UObject, ResourceName: String): LightMapVirtualTexture2D
        fun GetDefaultObject(): LightMapVirtualTexture2D
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LightMapVirtualTexture2D
        fun C(Other: UObject): LightMapVirtualTexture2D
        fun C(Other: Any): LightMapVirtualTexture2D
    }
}

external open class LightmassCharacterIndirectDetailVolume(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Volume {
    companion object {
        fun GetDefaultObject(): LightmassCharacterIndirectDetailVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LightmassCharacterIndirectDetailVolume
        fun C(Other: UObject): LightmassCharacterIndirectDetailVolume
        fun C(Other: Any): LightmassCharacterIndirectDetailVolume
    }
}

external open class LightmassImportanceVolume(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Volume {
    companion object {
        fun GetDefaultObject(): LightmassImportanceVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LightmassImportanceVolume
        fun C(Other: UObject): LightmassImportanceVolume
        fun C(Other: Any): LightmassImportanceVolume
    }
}

external open class LightmassPortalComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var PreviewBox: BoxComponent

    companion object {
        fun Load(ResourceName: String): LightmassPortalComponent
        fun Find(Outer: UObject, ResourceName: String): LightmassPortalComponent
        fun GetDefaultObject(): LightmassPortalComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LightmassPortalComponent
        fun C(Other: UObject): LightmassPortalComponent
        fun C(Other: Any): LightmassPortalComponent
    }
}

external open class LightmassPortal(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var PortalComponent: LightmassPortalComponent
    open var SpriteComponent: BillboardComponent

    companion object {
        fun GetDefaultObject(): LightmassPortal
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LightmassPortal
        fun C(Other: UObject): LightmassPortal
        fun C(Other: Any): LightmassPortal
    }
}

external open class LightmassPrimitiveSettingsObject : UObject {
    constructor()
    constructor(Outer: UObject)
    open var LightmassSettings: LightmassPrimitiveSettings

    companion object {
        fun Load(ResourceName: String): LightmassPrimitiveSettingsObject
        fun Find(Outer: UObject, ResourceName: String): LightmassPrimitiveSettingsObject
        fun GetDefaultObject(): LightmassPrimitiveSettingsObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LightmassPrimitiveSettingsObject
        fun C(Other: UObject): LightmassPrimitiveSettingsObject
        fun C(Other: Any): LightmassPrimitiveSettingsObject
    }
}

external open class LODActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var StaticMeshComponent: StaticMeshComponent
    open var InstancedStaticMeshComponents: Any
    open var Proxy: HLODProxy
    open var Key: String
    open var LODDrawDistance: Number
    open var LODLevel: Number
    open var SubActors: Array<Actor>
    open var CachedNumHLODLevels: Number
    open var NumTrianglesInSubActors: Any
    open var NumTrianglesInMergedMesh: Any
    open var bOverrideMaterialMergeSettings: Boolean
    open var MaterialSettings: MaterialProxySettings
    open var bOverrideTransitionScreenSize: Boolean
    open var TransitionScreenSize: Number
    open var bOverrideScreenSize: Boolean
    open var ScreenSize: Number
    open var LODActorTag: String
    open var bBuiltFromHLODDesc: Boolean
    open var ProxyDesc: HLODProxyDesc

    companion object {
        fun GetDefaultObject(): LODActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LODActor
        fun C(Other: UObject): LODActor
        fun C(Other: Any): LODActor
    }
}

external object ESyncOption {
    var Drive: String /* "Drive" */
    var Passive: String /* "Passive" */
    var Disabled: String /* "Disabled" */
    var ESyncOption_MAX: String /* "ESyncOption_MAX" */
}

external open class ComponentSync {
    open var Name: String
    open var SyncOption: String /* "Drive" | "Passive" | "Disabled" | "ESyncOption_MAX" */
    open fun clone(): ComponentSync

    companion object {
        fun C(Other: UObject): ComponentSync
        fun C(Other: Any): ComponentSync
    }
}

external open class LODSyncComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var NumLODs: Number
    open var ForcedLOD: Number
    open var ComponentsToSync: Array<ComponentSync>
    open var CustomLODMapping: Any
    open var CurrentLOD: Number
    open var CurrentNumLODs: Number
    open var DriveComponents: Array<PrimitiveComponent>
    open var SubComponents: Array<PrimitiveComponent>
    open fun GetLODSyncDebugText(): String

    companion object {
        fun Load(ResourceName: String): LODSyncComponent
        fun Find(Outer: UObject, ResourceName: String): LODSyncComponent
        fun GetDefaultObject(): LODSyncComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LODSyncComponent
        fun C(Other: UObject): LODSyncComponent
        fun C(Other: Any): LODSyncComponent
    }
}

external open class LODSyncInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LODSyncInterface
        fun Find(Outer: UObject, ResourceName: String): LODSyncInterface
        fun GetDefaultObject(): LODSyncInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LODSyncInterface
        fun C(Other: UObject): LODSyncInterface
        fun C(Other: Any): LODSyncInterface
    }
}

external open class MaterialExpressionAbs : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionAbs
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionAbs
        fun GetDefaultObject(): MaterialExpressionAbs
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionAbs
        fun C(Other: UObject): MaterialExpressionAbs
        fun C(Other: Any): MaterialExpressionAbs
    }
}

external open class MaterialExpressionActorPositionWS : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionActorPositionWS
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionActorPositionWS
        fun GetDefaultObject(): MaterialExpressionActorPositionWS
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionActorPositionWS
        fun C(Other: UObject): MaterialExpressionActorPositionWS
        fun C(Other: Any): MaterialExpressionActorPositionWS
    }
}

external open class MaterialExpressionAdd : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var A: ExpressionInput
    open var B: ExpressionInput
    open var ConstA: Number
    open var ConstB: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionAdd
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionAdd
        fun GetDefaultObject(): MaterialExpressionAdd
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionAdd
        fun C(Other: UObject): MaterialExpressionAdd
        fun C(Other: Any): MaterialExpressionAdd
    }
}

external object EMaterialSamplerType {
    var SAMPLERTYPE_Color: String /* "SAMPLERTYPE_Color" */
    var SAMPLERTYPE_Grayscale: String /* "SAMPLERTYPE_Grayscale" */
    var SAMPLERTYPE_Alpha: String /* "SAMPLERTYPE_Alpha" */
    var SAMPLERTYPE_Normal: String /* "SAMPLERTYPE_Normal" */
    var SAMPLERTYPE_Masks: String /* "SAMPLERTYPE_Masks" */
    var SAMPLERTYPE_DistanceFieldFont: String /* "SAMPLERTYPE_DistanceFieldFont" */
    var SAMPLERTYPE_LinearColor: String /* "SAMPLERTYPE_LinearColor" */
    var SAMPLERTYPE_LinearGrayscale: String /* "SAMPLERTYPE_LinearGrayscale" */
    var SAMPLERTYPE_Data: String /* "SAMPLERTYPE_Data" */
    var SAMPLERTYPE_External: String /* "SAMPLERTYPE_External" */
    var SAMPLERTYPE_VirtualColor: String /* "SAMPLERTYPE_VirtualColor" */
    var SAMPLERTYPE_VirtualGrayscale: String /* "SAMPLERTYPE_VirtualGrayscale" */
    var SAMPLERTYPE_VirtualAlpha: String /* "SAMPLERTYPE_VirtualAlpha" */
    var SAMPLERTYPE_VirtualNormal: String /* "SAMPLERTYPE_VirtualNormal" */
    var SAMPLERTYPE_VirtualMasks: String /* "SAMPLERTYPE_VirtualMasks" */
    var SAMPLERTYPE_VirtualLinearColor: String /* "SAMPLERTYPE_VirtualLinearColor" */
    var SAMPLERTYPE_VirtualLinearGrayscale: String /* "SAMPLERTYPE_VirtualLinearGrayscale" */
    var SAMPLERTYPE_MAX: String /* "SAMPLERTYPE_MAX" */
}

external open class MaterialExpressionTextureBase : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Texture: Texture
    open var SamplerType: String /* "SAMPLERTYPE_Color" | "SAMPLERTYPE_Grayscale" | "SAMPLERTYPE_Alpha" | "SAMPLERTYPE_Normal" | "SAMPLERTYPE_Masks" | "SAMPLERTYPE_DistanceFieldFont" | "SAMPLERTYPE_LinearColor" | "SAMPLERTYPE_LinearGrayscale" | "SAMPLERTYPE_Data" | "SAMPLERTYPE_External" | "SAMPLERTYPE_VirtualColor" | "SAMPLERTYPE_VirtualGrayscale" | "SAMPLERTYPE_VirtualAlpha" | "SAMPLERTYPE_VirtualNormal" | "SAMPLERTYPE_VirtualMasks" | "SAMPLERTYPE_VirtualLinearColor" | "SAMPLERTYPE_VirtualLinearGrayscale" | "SAMPLERTYPE_MAX" */
    open var IsDefaultMeshpaintTexture: Boolean

    companion object {
        fun Load(ResourceName: String): MaterialExpressionTextureBase
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionTextureBase
        fun GetDefaultObject(): MaterialExpressionTextureBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionTextureBase
        fun C(Other: UObject): MaterialExpressionTextureBase
        fun C(Other: Any): MaterialExpressionTextureBase
    }
}

external object ETextureMipValueMode {
    var TMVM_None: String /* "TMVM_None" */
    var TMVM_MipLevel: String /* "TMVM_MipLevel" */
    var TMVM_MipBias: String /* "TMVM_MipBias" */
    var TMVM_Derivative: String /* "TMVM_Derivative" */
    var TMVM_MAX: String /* "TMVM_MAX" */
}

external object ESamplerSourceMode {
    var SSM_FromTextureAsset: String /* "SSM_FromTextureAsset" */
    var SSM_Wrap_WorldGroupSettings: String /* "SSM_Wrap_WorldGroupSettings" */
    var SSM_Clamp_WorldGroupSettings: String /* "SSM_Clamp_WorldGroupSettings" */
    var SSM_MAX: String /* "SSM_MAX" */
}

external open class MaterialExpressionTextureSample : MaterialExpressionTextureBase {
    constructor()
    constructor(Outer: UObject)
    open var Coordinates: ExpressionInput
    open var TextureObject: ExpressionInput
    open var MipValue: ExpressionInput
    open var CoordinatesDX: ExpressionInput
    open var CoordinatesDY: ExpressionInput
    open var AutomaticViewMipBiasValue: ExpressionInput
    open var MipValueMode: String /* "TMVM_None" | "TMVM_MipLevel" | "TMVM_MipBias" | "TMVM_Derivative" | "TMVM_MAX" */
    open var SamplerSource: String /* "SSM_FromTextureAsset" | "SSM_Wrap_WorldGroupSettings" | "SSM_Clamp_WorldGroupSettings" | "SSM_MAX" */
    open var AutomaticViewMipBias: Boolean
    open var ConstCoordinate: Number
    open var ConstMipValue: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionTextureSample
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionTextureSample
        fun GetDefaultObject(): MaterialExpressionTextureSample
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionTextureSample
        fun C(Other: UObject): MaterialExpressionTextureSample
        fun C(Other: Any): MaterialExpressionTextureSample
    }
}

external open class MaterialExpressionTextureSampleParameter : MaterialExpressionTextureSample {
    constructor()
    constructor(Outer: UObject)
    open var ParameterName: String
    open var ExpressionGUID: Guid
    open var Group: String
    open var SortPriority: Number
    open var ChannelNames: ParameterChannelNames

    companion object {
        fun Load(ResourceName: String): MaterialExpressionTextureSampleParameter
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionTextureSampleParameter
        fun GetDefaultObject(): MaterialExpressionTextureSampleParameter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionTextureSampleParameter
        fun C(Other: UObject): MaterialExpressionTextureSampleParameter
        fun C(Other: Any): MaterialExpressionTextureSampleParameter
    }
}

external open class MaterialExpressionTextureSampleParameter2D : MaterialExpressionTextureSampleParameter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionTextureSampleParameter2D
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionTextureSampleParameter2D
        fun GetDefaultObject(): MaterialExpressionTextureSampleParameter2D
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionTextureSampleParameter2D
        fun C(Other: UObject): MaterialExpressionTextureSampleParameter2D
        fun C(Other: Any): MaterialExpressionTextureSampleParameter2D
    }
}

external object ETextureColorChannel {
    var TCC_Red: String /* "TCC_Red" */
    var TCC_Green: String /* "TCC_Green" */
    var TCC_Blue: String /* "TCC_Blue" */
    var TCC_Alpha: String /* "TCC_Alpha" */
    var TCC_MAX: String /* "TCC_MAX" */
}

external open class MaterialExpressionAntialiasedTextureMask : MaterialExpressionTextureSampleParameter2D {
    constructor()
    constructor(Outer: UObject)
    open var Threshold: Number
    open var Channel: String /* "TCC_Red" | "TCC_Green" | "TCC_Blue" | "TCC_Alpha" | "TCC_MAX" */

    companion object {
        fun Load(ResourceName: String): MaterialExpressionAntialiasedTextureMask
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionAntialiasedTextureMask
        fun GetDefaultObject(): MaterialExpressionAntialiasedTextureMask
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionAntialiasedTextureMask
        fun C(Other: UObject): MaterialExpressionAntialiasedTextureMask
        fun C(Other: Any): MaterialExpressionAntialiasedTextureMask
    }
}

external open class MaterialExpressionAppendVector : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var A: ExpressionInput
    open var B: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionAppendVector
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionAppendVector
        fun GetDefaultObject(): MaterialExpressionAppendVector
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionAppendVector
        fun C(Other: UObject): MaterialExpressionAppendVector
        fun C(Other: Any): MaterialExpressionAppendVector
    }
}

external open class MaterialExpressionArccosine : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionArccosine
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionArccosine
        fun GetDefaultObject(): MaterialExpressionArccosine
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionArccosine
        fun C(Other: UObject): MaterialExpressionArccosine
        fun C(Other: Any): MaterialExpressionArccosine
    }
}

external open class MaterialExpressionArccosineFast : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionArccosineFast
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionArccosineFast
        fun GetDefaultObject(): MaterialExpressionArccosineFast
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionArccosineFast
        fun C(Other: UObject): MaterialExpressionArccosineFast
        fun C(Other: Any): MaterialExpressionArccosineFast
    }
}

external open class MaterialExpressionArcsine : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionArcsine
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionArcsine
        fun GetDefaultObject(): MaterialExpressionArcsine
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionArcsine
        fun C(Other: UObject): MaterialExpressionArcsine
        fun C(Other: Any): MaterialExpressionArcsine
    }
}

external open class MaterialExpressionArcsineFast : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionArcsineFast
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionArcsineFast
        fun GetDefaultObject(): MaterialExpressionArcsineFast
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionArcsineFast
        fun C(Other: UObject): MaterialExpressionArcsineFast
        fun C(Other: Any): MaterialExpressionArcsineFast
    }
}

external open class MaterialExpressionArctangent : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionArctangent
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionArctangent
        fun GetDefaultObject(): MaterialExpressionArctangent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionArctangent
        fun C(Other: UObject): MaterialExpressionArctangent
        fun C(Other: Any): MaterialExpressionArctangent
    }
}

external open class MaterialExpressionArctangent2 : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Y: ExpressionInput
    open var X: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionArctangent2
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionArctangent2
        fun GetDefaultObject(): MaterialExpressionArctangent2
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionArctangent2
        fun C(Other: UObject): MaterialExpressionArctangent2
        fun C(Other: Any): MaterialExpressionArctangent2
    }
}

external open class MaterialExpressionArctangent2Fast : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Y: ExpressionInput
    open var X: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionArctangent2Fast
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionArctangent2Fast
        fun GetDefaultObject(): MaterialExpressionArctangent2Fast
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionArctangent2Fast
        fun C(Other: UObject): MaterialExpressionArctangent2Fast
        fun C(Other: Any): MaterialExpressionArctangent2Fast
    }
}

external open class MaterialExpressionArctangentFast : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionArctangentFast
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionArctangentFast
        fun GetDefaultObject(): MaterialExpressionArctangentFast
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionArctangentFast
        fun C(Other: UObject): MaterialExpressionArctangentFast
        fun C(Other: Any): MaterialExpressionArctangentFast
    }
}

external open class MaterialExpressionAtmosphericFogColor : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var WorldPosition: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionAtmosphericFogColor
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionAtmosphericFogColor
        fun GetDefaultObject(): MaterialExpressionAtmosphericFogColor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionAtmosphericFogColor
        fun C(Other: UObject): MaterialExpressionAtmosphericFogColor
        fun C(Other: Any): MaterialExpressionAtmosphericFogColor
    }
}

external open class MaterialExpressionAtmosphericLightColor : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionAtmosphericLightColor
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionAtmosphericLightColor
        fun GetDefaultObject(): MaterialExpressionAtmosphericLightColor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionAtmosphericLightColor
        fun C(Other: UObject): MaterialExpressionAtmosphericLightColor
        fun C(Other: Any): MaterialExpressionAtmosphericLightColor
    }
}

external open class MaterialExpressionAtmosphericLightVector : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionAtmosphericLightVector
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionAtmosphericLightVector
        fun GetDefaultObject(): MaterialExpressionAtmosphericLightVector
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionAtmosphericLightVector
        fun C(Other: UObject): MaterialExpressionAtmosphericLightVector
        fun C(Other: Any): MaterialExpressionAtmosphericLightVector
    }
}

external open class MaterialExpressionBentNormalCustomOutput : MaterialExpressionCustomOutput {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionBentNormalCustomOutput
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionBentNormalCustomOutput
        fun GetDefaultObject(): MaterialExpressionBentNormalCustomOutput
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionBentNormalCustomOutput
        fun C(Other: UObject): MaterialExpressionBentNormalCustomOutput
        fun C(Other: Any): MaterialExpressionBentNormalCustomOutput
    }
}

external open class MaterialExpressionBlackBody : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Temp: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionBlackBody
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionBlackBody
        fun GetDefaultObject(): MaterialExpressionBlackBody
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionBlackBody
        fun C(Other: UObject): MaterialExpressionBlackBody
        fun C(Other: Any): MaterialExpressionBlackBody
    }
}

external object EMaterialAttributeBlend {
    var Blend: String /* "Blend" */
    var UseA: String /* "UseA" */
    var UseB: String /* "UseB" */
    var EMaterialAttributeBlend_MAX: String /* "EMaterialAttributeBlend_MAX" */
}

external open class MaterialExpressionBlendMaterialAttributes : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var A: MaterialAttributesInput
    open var B: MaterialAttributesInput
    open var Alpha: ExpressionInput
    open var PixelAttributeBlendType: String /* "Blend" | "UseA" | "UseB" | "EMaterialAttributeBlend_MAX" */
    open var VertexAttributeBlendType: String /* "Blend" | "UseA" | "UseB" | "EMaterialAttributeBlend_MAX" */

    companion object {
        fun Load(ResourceName: String): MaterialExpressionBlendMaterialAttributes
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionBlendMaterialAttributes
        fun GetDefaultObject(): MaterialExpressionBlendMaterialAttributes
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionBlendMaterialAttributes
        fun C(Other: UObject): MaterialExpressionBlendMaterialAttributes
        fun C(Other: Any): MaterialExpressionBlendMaterialAttributes
    }
}

external open class MaterialExpressionBreakMaterialAttributes : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var MaterialAttributes: MaterialAttributesInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionBreakMaterialAttributes
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionBreakMaterialAttributes
        fun GetDefaultObject(): MaterialExpressionBreakMaterialAttributes
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionBreakMaterialAttributes
        fun C(Other: UObject): MaterialExpressionBreakMaterialAttributes
        fun C(Other: Any): MaterialExpressionBreakMaterialAttributes
    }
}

external open class MaterialExpressionBumpOffset : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Coordinate: ExpressionInput
    open var Height: ExpressionInput
    open var HeightRatioInput: ExpressionInput
    open var HeightRatio: Number
    open var ReferencePlane: Number
    open var ConstCoordinate: Any

    companion object {
        fun Load(ResourceName: String): MaterialExpressionBumpOffset
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionBumpOffset
        fun GetDefaultObject(): MaterialExpressionBumpOffset
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionBumpOffset
        fun C(Other: UObject): MaterialExpressionBumpOffset
        fun C(Other: Any): MaterialExpressionBumpOffset
    }
}

external open class MaterialExpressionCameraPositionWS : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionCameraPositionWS
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionCameraPositionWS
        fun GetDefaultObject(): MaterialExpressionCameraPositionWS
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionCameraPositionWS
        fun C(Other: UObject): MaterialExpressionCameraPositionWS
        fun C(Other: Any): MaterialExpressionCameraPositionWS
    }
}

external open class MaterialExpressionCameraVectorWS : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionCameraVectorWS
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionCameraVectorWS
        fun GetDefaultObject(): MaterialExpressionCameraVectorWS
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionCameraVectorWS
        fun C(Other: UObject): MaterialExpressionCameraVectorWS
        fun C(Other: Any): MaterialExpressionCameraVectorWS
    }
}

external open class MaterialExpressionCeil : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionCeil
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionCeil
        fun GetDefaultObject(): MaterialExpressionCeil
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionCeil
        fun C(Other: UObject): MaterialExpressionCeil
        fun C(Other: Any): MaterialExpressionCeil
    }
}

external open class MaterialExpressionParameter : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var ParameterName: String
    open var ExpressionGUID: Guid
    open var Group: String
    open var SortPriority: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionParameter
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionParameter
        fun GetDefaultObject(): MaterialExpressionParameter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionParameter
        fun C(Other: UObject): MaterialExpressionParameter
        fun C(Other: Any): MaterialExpressionParameter
    }
}

external open class MaterialExpressionVectorParameter : MaterialExpressionParameter {
    constructor()
    constructor(Outer: UObject)
    open var DefaultValue: LinearColor
    open var bUseCustomPrimitiveData: Boolean
    open var PrimitiveDataIndex: Number
    open var ChannelNames: ParameterChannelNames

    companion object {
        fun Load(ResourceName: String): MaterialExpressionVectorParameter
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionVectorParameter
        fun GetDefaultObject(): MaterialExpressionVectorParameter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionVectorParameter
        fun C(Other: UObject): MaterialExpressionVectorParameter
        fun C(Other: Any): MaterialExpressionVectorParameter
    }
}

external object EChannelMaskParameterColor {
    var Red: String /* "Red" */
    var Green: String /* "Green" */
    var Blue: String /* "Blue" */
    var Alpha: String /* "Alpha" */
    var EChannelMaskParameterColor_MAX: String /* "EChannelMaskParameterColor_MAX" */
}

external open class MaterialExpressionChannelMaskParameter : MaterialExpressionVectorParameter {
    constructor()
    constructor(Outer: UObject)
    open var MaskChannel: String /* "Red" | "Green" | "Blue" | "Alpha" | "EChannelMaskParameterColor_MAX" */
    open var Input: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionChannelMaskParameter
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionChannelMaskParameter
        fun GetDefaultObject(): MaterialExpressionChannelMaskParameter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionChannelMaskParameter
        fun C(Other: UObject): MaterialExpressionChannelMaskParameter
        fun C(Other: Any): MaterialExpressionChannelMaskParameter
    }
}

external object EClampMode {
    var CMODE_Clamp: String /* "CMODE_Clamp" */
    var CMODE_ClampMin: String /* "CMODE_ClampMin" */
    var CMODE_ClampMax: String /* "CMODE_ClampMax" */
    var CMODE_MAX: String /* "CMODE_MAX" */
}

external open class MaterialExpressionClamp : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput
    open var Min: ExpressionInput
    open var Max: ExpressionInput
    open var ClampMode: String /* "CMODE_Clamp" | "CMODE_ClampMin" | "CMODE_ClampMax" | "CMODE_MAX" */
    open var MinDefault: Number
    open var MaxDefault: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionClamp
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionClamp
        fun GetDefaultObject(): MaterialExpressionClamp
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionClamp
        fun C(Other: UObject): MaterialExpressionClamp
        fun C(Other: Any): MaterialExpressionClamp
    }
}

external open class MaterialExpressionClearCoatNormalCustomOutput : MaterialExpressionCustomOutput {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionClearCoatNormalCustomOutput
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionClearCoatNormalCustomOutput
        fun GetDefaultObject(): MaterialExpressionClearCoatNormalCustomOutput
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionClearCoatNormalCustomOutput
        fun C(Other: UObject): MaterialExpressionClearCoatNormalCustomOutput
        fun C(Other: Any): MaterialExpressionClearCoatNormalCustomOutput
    }
}

external open class MaterialExpressionCloudSampleAttribute : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionCloudSampleAttribute
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionCloudSampleAttribute
        fun GetDefaultObject(): MaterialExpressionCloudSampleAttribute
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionCloudSampleAttribute
        fun C(Other: UObject): MaterialExpressionCloudSampleAttribute
        fun C(Other: Any): MaterialExpressionCloudSampleAttribute
    }
}

external open class MaterialExpressionCollectionParameter : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Collection: MaterialParameterCollection
    open var ParameterName: String
    open var ParameterId: Guid

    companion object {
        fun Load(ResourceName: String): MaterialExpressionCollectionParameter
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionCollectionParameter
        fun GetDefaultObject(): MaterialExpressionCollectionParameter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionCollectionParameter
        fun C(Other: UObject): MaterialExpressionCollectionParameter
        fun C(Other: Any): MaterialExpressionCollectionParameter
    }
}

external open class MaterialExpressionComponentMask : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput
    open var R: Boolean
    open var G: Boolean
    open var B: Boolean
    open var A: Boolean

    companion object {
        fun Load(ResourceName: String): MaterialExpressionComponentMask
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionComponentMask
        fun GetDefaultObject(): MaterialExpressionComponentMask
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionComponentMask
        fun C(Other: UObject): MaterialExpressionComponentMask
        fun C(Other: Any): MaterialExpressionComponentMask
    }
}

external open class MaterialExpressionConstant : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var R: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionConstant
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionConstant
        fun GetDefaultObject(): MaterialExpressionConstant
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionConstant
        fun C(Other: UObject): MaterialExpressionConstant
        fun C(Other: Any): MaterialExpressionConstant
    }
}

external open class MaterialExpressionConstant2Vector : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var R: Number
    open var G: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionConstant2Vector
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionConstant2Vector
        fun GetDefaultObject(): MaterialExpressionConstant2Vector
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionConstant2Vector
        fun C(Other: UObject): MaterialExpressionConstant2Vector
        fun C(Other: Any): MaterialExpressionConstant2Vector
    }
}

external open class MaterialExpressionConstant3Vector : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Constant: LinearColor

    companion object {
        fun Load(ResourceName: String): MaterialExpressionConstant3Vector
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionConstant3Vector
        fun GetDefaultObject(): MaterialExpressionConstant3Vector
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionConstant3Vector
        fun C(Other: UObject): MaterialExpressionConstant3Vector
        fun C(Other: Any): MaterialExpressionConstant3Vector
    }
}

external open class MaterialExpressionConstant4Vector : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Constant: LinearColor

    companion object {
        fun Load(ResourceName: String): MaterialExpressionConstant4Vector
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionConstant4Vector
        fun GetDefaultObject(): MaterialExpressionConstant4Vector
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionConstant4Vector
        fun C(Other: UObject): MaterialExpressionConstant4Vector
        fun C(Other: Any): MaterialExpressionConstant4Vector
    }
}

external open class MaterialExpressionConstantBiasScale : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput
    open var Bias: Number
    open var Scale: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionConstantBiasScale
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionConstantBiasScale
        fun GetDefaultObject(): MaterialExpressionConstantBiasScale
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionConstantBiasScale
        fun C(Other: UObject): MaterialExpressionConstantBiasScale
        fun C(Other: Any): MaterialExpressionConstantBiasScale
    }
}

external open class MaterialExpressionCosine : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput
    open var Period: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionCosine
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionCosine
        fun GetDefaultObject(): MaterialExpressionCosine
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionCosine
        fun C(Other: UObject): MaterialExpressionCosine
        fun C(Other: Any): MaterialExpressionCosine
    }
}

external open class MaterialExpressionCrossProduct : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var A: ExpressionInput
    open var B: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionCrossProduct
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionCrossProduct
        fun GetDefaultObject(): MaterialExpressionCrossProduct
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionCrossProduct
        fun C(Other: UObject): MaterialExpressionCrossProduct
        fun C(Other: Any): MaterialExpressionCrossProduct
    }
}

external open class MaterialExpressionScalarParameter : MaterialExpressionParameter {
    constructor()
    constructor(Outer: UObject)
    open var DefaultValue: Number
    open var bUseCustomPrimitiveData: Boolean
    open var PrimitiveDataIndex: Number
    open var SliderMin: Number
    open var SliderMax: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionScalarParameter
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionScalarParameter
        fun GetDefaultObject(): MaterialExpressionScalarParameter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionScalarParameter
        fun C(Other: UObject): MaterialExpressionScalarParameter
        fun C(Other: Any): MaterialExpressionScalarParameter
    }
}

external open class MaterialExpressionCurveAtlasRowParameter : MaterialExpressionScalarParameter {
    constructor()
    constructor(Outer: UObject)
    open var Curve: CurveLinearColor
    open var Atlas: CurveLinearColorAtlas
    open var InputTime: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionCurveAtlasRowParameter
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionCurveAtlasRowParameter
        fun GetDefaultObject(): MaterialExpressionCurveAtlasRowParameter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionCurveAtlasRowParameter
        fun C(Other: UObject): MaterialExpressionCurveAtlasRowParameter
        fun C(Other: Any): MaterialExpressionCurveAtlasRowParameter
    }
}

external object ECustomMaterialOutputType {
    var CMOT_Float1: String /* "CMOT_Float1" */
    var CMOT_Float2: String /* "CMOT_Float2" */
    var CMOT_Float3: String /* "CMOT_Float3" */
    var CMOT_Float4: String /* "CMOT_Float4" */
    var CMOT_MaterialAttributes: String /* "CMOT_MaterialAttributes" */
    var CMOT_MAX: String /* "CMOT_MAX" */
}

external open class CustomInput {
    open var InputName: String
    open var Input: ExpressionInput
    open fun clone(): CustomInput

    companion object {
        fun C(Other: UObject): CustomInput
        fun C(Other: Any): CustomInput
    }
}

external open class CustomOutput {
    open var OutputName: String
    open var OutputType: String /* "CMOT_Float1" | "CMOT_Float2" | "CMOT_Float3" | "CMOT_Float4" | "CMOT_MaterialAttributes" | "CMOT_MAX" */
    open fun clone(): CustomOutput

    companion object {
        fun C(Other: UObject): CustomOutput
        fun C(Other: Any): CustomOutput
    }
}

external open class CustomDefine {
    open var DefineName: String
    open var DefineValue: String
    open fun clone(): CustomDefine

    companion object {
        fun C(Other: UObject): CustomDefine
        fun C(Other: Any): CustomDefine
    }
}

external open class MaterialExpressionCustom : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Code: String
    open var OutputType: String /* "CMOT_Float1" | "CMOT_Float2" | "CMOT_Float3" | "CMOT_Float4" | "CMOT_MaterialAttributes" | "CMOT_MAX" */
    open var Description: String
    open var Inputs: Array<CustomInput>
    open var AdditionalOutputs: Array<CustomOutput>
    open var AdditionalDefines: Array<CustomDefine>
    open var IncludeFilePaths: Array<String>

    companion object {
        fun Load(ResourceName: String): MaterialExpressionCustom
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionCustom
        fun GetDefaultObject(): MaterialExpressionCustom
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionCustom
        fun C(Other: UObject): MaterialExpressionCustom
        fun C(Other: Any): MaterialExpressionCustom
    }
}

external open class MaterialExpressionDDX : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Value: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionDDX
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionDDX
        fun GetDefaultObject(): MaterialExpressionDDX
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionDDX
        fun C(Other: UObject): MaterialExpressionDDX
        fun C(Other: Any): MaterialExpressionDDX
    }
}

external open class MaterialExpressionDDY : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Value: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionDDY
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionDDY
        fun GetDefaultObject(): MaterialExpressionDDY
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionDDY
        fun C(Other: UObject): MaterialExpressionDDY
        fun C(Other: Any): MaterialExpressionDDY
    }
}

external open class MaterialExpressionDecalDerivative : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionDecalDerivative
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionDecalDerivative
        fun GetDefaultObject(): MaterialExpressionDecalDerivative
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionDecalDerivative
        fun C(Other: UObject): MaterialExpressionDecalDerivative
        fun C(Other: Any): MaterialExpressionDecalDerivative
    }
}

external open class MaterialExpressionDecalLifetimeOpacity : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionDecalLifetimeOpacity
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionDecalLifetimeOpacity
        fun GetDefaultObject(): MaterialExpressionDecalLifetimeOpacity
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionDecalLifetimeOpacity
        fun C(Other: UObject): MaterialExpressionDecalLifetimeOpacity
        fun C(Other: Any): MaterialExpressionDecalLifetimeOpacity
    }
}

external open class MaterialExpressionDecalMipmapLevel : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var TextureSize: ExpressionInput
    open var ConstWidth: Number
    open var ConstHeight: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionDecalMipmapLevel
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionDecalMipmapLevel
        fun GetDefaultObject(): MaterialExpressionDecalMipmapLevel
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionDecalMipmapLevel
        fun C(Other: UObject): MaterialExpressionDecalMipmapLevel
        fun C(Other: Any): MaterialExpressionDecalMipmapLevel
    }
}

external open class MaterialExpressionDeltaTime : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionDeltaTime
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionDeltaTime
        fun GetDefaultObject(): MaterialExpressionDeltaTime
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionDeltaTime
        fun C(Other: UObject): MaterialExpressionDeltaTime
        fun C(Other: Any): MaterialExpressionDeltaTime
    }
}

external open class MaterialExpressionDepthFade : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var InOpacity: ExpressionInput
    open var FadeDistance: ExpressionInput
    open var OpacityDefault: Number
    open var FadeDistanceDefault: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionDepthFade
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionDepthFade
        fun GetDefaultObject(): MaterialExpressionDepthFade
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionDepthFade
        fun C(Other: UObject): MaterialExpressionDepthFade
        fun C(Other: Any): MaterialExpressionDepthFade
    }
}

external object EDepthOfFieldFunctionValue {
    var TDOF_NearAndFarMask: String /* "TDOF_NearAndFarMask" */
    var TDOF_NearMask: String /* "TDOF_NearMask" */
    var TDOF_FarMask: String /* "TDOF_FarMask" */
    var TDOF_CircleOfConfusionRadius: String /* "TDOF_CircleOfConfusionRadius" */
    var TDOF_MAX: String /* "TDOF_MAX" */
}

external open class MaterialExpressionDepthOfFieldFunction : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var FunctionValue: String /* "TDOF_NearAndFarMask" | "TDOF_NearMask" | "TDOF_FarMask" | "TDOF_CircleOfConfusionRadius" | "TDOF_MAX" */
    open var Depth: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionDepthOfFieldFunction
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionDepthOfFieldFunction
        fun GetDefaultObject(): MaterialExpressionDepthOfFieldFunction
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionDepthOfFieldFunction
        fun C(Other: UObject): MaterialExpressionDepthOfFieldFunction
        fun C(Other: Any): MaterialExpressionDepthOfFieldFunction
    }
}

external open class MaterialExpressionDeriveNormalZ : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var InXY: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionDeriveNormalZ
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionDeriveNormalZ
        fun GetDefaultObject(): MaterialExpressionDeriveNormalZ
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionDeriveNormalZ
        fun C(Other: UObject): MaterialExpressionDeriveNormalZ
        fun C(Other: Any): MaterialExpressionDeriveNormalZ
    }
}

external open class MaterialExpressionDesaturation : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput
    open var Fraction: ExpressionInput
    open var LuminanceFactors: LinearColor

    companion object {
        fun Load(ResourceName: String): MaterialExpressionDesaturation
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionDesaturation
        fun GetDefaultObject(): MaterialExpressionDesaturation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionDesaturation
        fun C(Other: UObject): MaterialExpressionDesaturation
        fun C(Other: Any): MaterialExpressionDesaturation
    }
}

external open class MaterialExpressionDistance : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var A: ExpressionInput
    open var B: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionDistance
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionDistance
        fun GetDefaultObject(): MaterialExpressionDistance
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionDistance
        fun C(Other: UObject): MaterialExpressionDistance
        fun C(Other: Any): MaterialExpressionDistance
    }
}

external open class MaterialExpressionDistanceCullFade : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionDistanceCullFade
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionDistanceCullFade
        fun GetDefaultObject(): MaterialExpressionDistanceCullFade
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionDistanceCullFade
        fun C(Other: UObject): MaterialExpressionDistanceCullFade
        fun C(Other: Any): MaterialExpressionDistanceCullFade
    }
}

external open class MaterialExpressionDistanceFieldGradient : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Position: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionDistanceFieldGradient
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionDistanceFieldGradient
        fun GetDefaultObject(): MaterialExpressionDistanceFieldGradient
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionDistanceFieldGradient
        fun C(Other: UObject): MaterialExpressionDistanceFieldGradient
        fun C(Other: Any): MaterialExpressionDistanceFieldGradient
    }
}

external open class MaterialExpressionDistanceFieldsRenderingSwitch : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var No: ExpressionInput
    open var Yes: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionDistanceFieldsRenderingSwitch
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionDistanceFieldsRenderingSwitch
        fun GetDefaultObject(): MaterialExpressionDistanceFieldsRenderingSwitch
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionDistanceFieldsRenderingSwitch
        fun C(Other: UObject): MaterialExpressionDistanceFieldsRenderingSwitch
        fun C(Other: Any): MaterialExpressionDistanceFieldsRenderingSwitch
    }
}

external open class MaterialExpressionDistanceToNearestSurface : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Position: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionDistanceToNearestSurface
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionDistanceToNearestSurface
        fun GetDefaultObject(): MaterialExpressionDistanceToNearestSurface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionDistanceToNearestSurface
        fun C(Other: UObject): MaterialExpressionDistanceToNearestSurface
        fun C(Other: Any): MaterialExpressionDistanceToNearestSurface
    }
}

external open class MaterialExpressionDivide : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var A: ExpressionInput
    open var B: ExpressionInput
    open var ConstA: Number
    open var ConstB: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionDivide
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionDivide
        fun GetDefaultObject(): MaterialExpressionDivide
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionDivide
        fun C(Other: UObject): MaterialExpressionDivide
        fun C(Other: Any): MaterialExpressionDivide
    }
}

external open class MaterialExpressionDotProduct : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var A: ExpressionInput
    open var B: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionDotProduct
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionDotProduct
        fun GetDefaultObject(): MaterialExpressionDotProduct
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionDotProduct
        fun C(Other: UObject): MaterialExpressionDotProduct
        fun C(Other: Any): MaterialExpressionDotProduct
    }
}

external open class MaterialExpressionDynamicParameter : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var ParamNames: Array<String>
    open var DefaultValue: LinearColor
    open var ParameterIndex: Any

    companion object {
        fun Load(ResourceName: String): MaterialExpressionDynamicParameter
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionDynamicParameter
        fun GetDefaultObject(): MaterialExpressionDynamicParameter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionDynamicParameter
        fun C(Other: UObject): MaterialExpressionDynamicParameter
        fun C(Other: Any): MaterialExpressionDynamicParameter
    }
}

external open class MaterialExpressionEyeAdaptation : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionEyeAdaptation
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionEyeAdaptation
        fun GetDefaultObject(): MaterialExpressionEyeAdaptation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionEyeAdaptation
        fun C(Other: UObject): MaterialExpressionEyeAdaptation
        fun C(Other: Any): MaterialExpressionEyeAdaptation
    }
}

external open class MaterialExpressionFeatureLevelSwitch : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Default: ExpressionInput
    open var Inputs: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionFeatureLevelSwitch
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionFeatureLevelSwitch
        fun GetDefaultObject(): MaterialExpressionFeatureLevelSwitch
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionFeatureLevelSwitch
        fun C(Other: UObject): MaterialExpressionFeatureLevelSwitch
        fun C(Other: Any): MaterialExpressionFeatureLevelSwitch
    }
}

external open class MaterialExpressionFloor : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionFloor
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionFloor
        fun GetDefaultObject(): MaterialExpressionFloor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionFloor
        fun C(Other: UObject): MaterialExpressionFloor
        fun C(Other: Any): MaterialExpressionFloor
    }
}

external open class MaterialExpressionFmod : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var A: ExpressionInput
    open var B: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionFmod
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionFmod
        fun GetDefaultObject(): MaterialExpressionFmod
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionFmod
        fun C(Other: UObject): MaterialExpressionFmod
        fun C(Other: Any): MaterialExpressionFmod
    }
}

external open class MaterialExpressionFontSample : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Font: Font
    open var FontTexturePage: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionFontSample
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionFontSample
        fun GetDefaultObject(): MaterialExpressionFontSample
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionFontSample
        fun C(Other: UObject): MaterialExpressionFontSample
        fun C(Other: Any): MaterialExpressionFontSample
    }
}

external open class MaterialExpressionFontSampleParameter : MaterialExpressionFontSample {
    constructor()
    constructor(Outer: UObject)
    open var ParameterName: String
    open var ExpressionGUID: Guid
    open var Group: String
    open var SortPriority: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionFontSampleParameter
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionFontSampleParameter
        fun GetDefaultObject(): MaterialExpressionFontSampleParameter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionFontSampleParameter
        fun C(Other: UObject): MaterialExpressionFontSampleParameter
        fun C(Other: Any): MaterialExpressionFontSampleParameter
    }
}

external open class MaterialExpressionFrac : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionFrac
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionFrac
        fun GetDefaultObject(): MaterialExpressionFrac
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionFrac
        fun C(Other: UObject): MaterialExpressionFrac
        fun C(Other: Any): MaterialExpressionFrac
    }
}

external open class MaterialExpressionFresnel : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var ExponentIn: ExpressionInput
    open var Exponent: Number
    open var BaseReflectFractionIn: ExpressionInput
    open var BaseReflectFraction: Number
    open var Normal: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionFresnel
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionFresnel
        fun GetDefaultObject(): MaterialExpressionFresnel
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionFresnel
        fun C(Other: UObject): MaterialExpressionFresnel
        fun C(Other: Any): MaterialExpressionFresnel
    }
}

external open class MaterialExpressionGetMaterialAttributes : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var MaterialAttributes: MaterialAttributesInput
    open var AttributeGetTypes: Array<Guid>

    companion object {
        fun Load(ResourceName: String): MaterialExpressionGetMaterialAttributes
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionGetMaterialAttributes
        fun GetDefaultObject(): MaterialExpressionGetMaterialAttributes
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionGetMaterialAttributes
        fun C(Other: UObject): MaterialExpressionGetMaterialAttributes
        fun C(Other: Any): MaterialExpressionGetMaterialAttributes
    }
}

external open class MaterialExpressionGIReplace : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Default: ExpressionInput
    open var StaticIndirect: ExpressionInput
    open var DynamicIndirect: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionGIReplace
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionGIReplace
        fun GetDefaultObject(): MaterialExpressionGIReplace
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionGIReplace
        fun C(Other: UObject): MaterialExpressionGIReplace
        fun C(Other: Any): MaterialExpressionGIReplace
    }
}

external open class MaterialExpressionHairAttributes : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var bUseTangentSpace: Boolean

    companion object {
        fun Load(ResourceName: String): MaterialExpressionHairAttributes
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionHairAttributes
        fun GetDefaultObject(): MaterialExpressionHairAttributes
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionHairAttributes
        fun C(Other: UObject): MaterialExpressionHairAttributes
        fun C(Other: Any): MaterialExpressionHairAttributes
    }
}

external open class MaterialExpressionHairColor : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Melanin: ExpressionInput
    open var Redness: ExpressionInput
    open var DyeColor: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionHairColor
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionHairColor
        fun GetDefaultObject(): MaterialExpressionHairColor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionHairColor
        fun C(Other: UObject): MaterialExpressionHairColor
        fun C(Other: Any): MaterialExpressionHairColor
    }
}

external open class MaterialExpressionIf : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var A: ExpressionInput
    open var B: ExpressionInput
    open var AGreaterThanB: ExpressionInput
    open var AEqualsB: ExpressionInput
    open var ALessThanB: ExpressionInput
    open var EqualsThreshold: Number
    open var ConstB: Number
    open var ConstAEqualsB: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionIf
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionIf
        fun GetDefaultObject(): MaterialExpressionIf
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionIf
        fun C(Other: UObject): MaterialExpressionIf
        fun C(Other: Any): MaterialExpressionIf
    }
}

external open class MaterialExpressionInverseLinearInterpolate : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var A: ExpressionInput
    open var B: ExpressionInput
    open var Value: ExpressionInput
    open var ConstA: Number
    open var ConstB: Number
    open var ConstValue: Number
    open var bClampResult: Boolean

    companion object {
        fun Load(ResourceName: String): MaterialExpressionInverseLinearInterpolate
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionInverseLinearInterpolate
        fun GetDefaultObject(): MaterialExpressionInverseLinearInterpolate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionInverseLinearInterpolate
        fun C(Other: UObject): MaterialExpressionInverseLinearInterpolate
        fun C(Other: Any): MaterialExpressionInverseLinearInterpolate
    }
}

external open class MaterialExpressionLightmapUVs : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionLightmapUVs
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionLightmapUVs
        fun GetDefaultObject(): MaterialExpressionLightmapUVs
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionLightmapUVs
        fun C(Other: UObject): MaterialExpressionLightmapUVs
        fun C(Other: Any): MaterialExpressionLightmapUVs
    }
}

external open class MaterialExpressionLightmassReplace : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Realtime: ExpressionInput
    open var Lightmass: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionLightmassReplace
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionLightmassReplace
        fun GetDefaultObject(): MaterialExpressionLightmassReplace
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionLightmassReplace
        fun C(Other: UObject): MaterialExpressionLightmassReplace
        fun C(Other: Any): MaterialExpressionLightmassReplace
    }
}

external open class MaterialExpressionLightVector : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionLightVector
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionLightVector
        fun GetDefaultObject(): MaterialExpressionLightVector
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionLightVector
        fun C(Other: UObject): MaterialExpressionLightVector
        fun C(Other: Any): MaterialExpressionLightVector
    }
}

external open class MaterialExpressionLinearInterpolate : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var A: ExpressionInput
    open var B: ExpressionInput
    open var Alpha: ExpressionInput
    open var ConstA: Number
    open var ConstB: Number
    open var ConstAlpha: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionLinearInterpolate
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionLinearInterpolate
        fun GetDefaultObject(): MaterialExpressionLinearInterpolate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionLinearInterpolate
        fun C(Other: UObject): MaterialExpressionLinearInterpolate
        fun C(Other: Any): MaterialExpressionLinearInterpolate
    }
}

external open class MaterialExpressionLogarithm10 : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var X: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionLogarithm10
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionLogarithm10
        fun GetDefaultObject(): MaterialExpressionLogarithm10
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionLogarithm10
        fun C(Other: UObject): MaterialExpressionLogarithm10
        fun C(Other: Any): MaterialExpressionLogarithm10
    }
}

external open class MaterialExpressionLogarithm2 : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var X: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionLogarithm2
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionLogarithm2
        fun GetDefaultObject(): MaterialExpressionLogarithm2
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionLogarithm2
        fun C(Other: UObject): MaterialExpressionLogarithm2
        fun C(Other: Any): MaterialExpressionLogarithm2
    }
}

external open class MaterialExpressionMakeMaterialAttributes : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var BaseColor: ExpressionInput
    open var Metallic: ExpressionInput
    open var Specular: ExpressionInput
    open var Roughness: ExpressionInput
    open var Anisotropy: ExpressionInput
    open var EmissiveColor: ExpressionInput
    open var Opacity: ExpressionInput
    open var OpacityMask: ExpressionInput
    open var Normal: ExpressionInput
    open var Tangent: ExpressionInput
    open var WorldPositionOffset: ExpressionInput
    open var WorldDisplacement: ExpressionInput
    open var TessellationMultiplier: ExpressionInput
    open var SubsurfaceColor: ExpressionInput
    open var ClearCoat: ExpressionInput
    open var ClearCoatRoughness: ExpressionInput
    open var AmbientOcclusion: ExpressionInput
    open var Refraction: ExpressionInput
    open var CustomizedUVs: ExpressionInput
    open var PixelDepthOffset: ExpressionInput
    open var ShadingModel: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionMakeMaterialAttributes
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionMakeMaterialAttributes
        fun GetDefaultObject(): MaterialExpressionMakeMaterialAttributes
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionMakeMaterialAttributes
        fun C(Other: UObject): MaterialExpressionMakeMaterialAttributes
        fun C(Other: Any): MaterialExpressionMakeMaterialAttributes
    }
}

external open class MaterialExpressionMapARPassthroughCameraUV : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Coordinates: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionMapARPassthroughCameraUV
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionMapARPassthroughCameraUV
        fun GetDefaultObject(): MaterialExpressionMapARPassthroughCameraUV
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionMapARPassthroughCameraUV
        fun C(Other: UObject): MaterialExpressionMapARPassthroughCameraUV
        fun C(Other: Any): MaterialExpressionMapARPassthroughCameraUV
    }
}

external open class MaterialExpressionMaterialAttributeLayers : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var ParameterName: String
    open var ExpressionGUID: Guid
    open var Input: MaterialAttributesInput
    open var DefaultLayers: MaterialLayersFunctions
    open var LayerCallers: Array<MaterialExpressionMaterialFunctionCall>
    open var NumActiveLayerCallers: Number
    open var BlendCallers: Array<MaterialExpressionMaterialFunctionCall>
    open var NumActiveBlendCallers: Number
    open var bIsLayerGraphBuilt: Boolean

    companion object {
        fun Load(ResourceName: String): MaterialExpressionMaterialAttributeLayers
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionMaterialAttributeLayers
        fun GetDefaultObject(): MaterialExpressionMaterialAttributeLayers
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionMaterialAttributeLayers
        fun C(Other: UObject): MaterialExpressionMaterialAttributeLayers
        fun C(Other: Any): MaterialExpressionMaterialAttributeLayers
    }
}

external open class MaterialExpressionMaterialLayerOutput : MaterialExpressionFunctionOutput {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionMaterialLayerOutput
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionMaterialLayerOutput
        fun GetDefaultObject(): MaterialExpressionMaterialLayerOutput
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionMaterialLayerOutput
        fun C(Other: UObject): MaterialExpressionMaterialLayerOutput
        fun C(Other: Any): MaterialExpressionMaterialLayerOutput
    }
}

external open class MaterialExpressionMaterialProxyReplace : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Realtime: ExpressionInput
    open var MaterialProxy: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionMaterialProxyReplace
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionMaterialProxyReplace
        fun GetDefaultObject(): MaterialExpressionMaterialProxyReplace
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionMaterialProxyReplace
        fun C(Other: UObject): MaterialExpressionMaterialProxyReplace
        fun C(Other: Any): MaterialExpressionMaterialProxyReplace
    }
}

external open class MaterialExpressionMax : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var A: ExpressionInput
    open var B: ExpressionInput
    open var ConstA: Number
    open var ConstB: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionMax
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionMax
        fun GetDefaultObject(): MaterialExpressionMax
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionMax
        fun C(Other: UObject): MaterialExpressionMax
        fun C(Other: Any): MaterialExpressionMax
    }
}

external open class MaterialExpressionMin : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var A: ExpressionInput
    open var B: ExpressionInput
    open var ConstA: Number
    open var ConstB: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionMin
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionMin
        fun GetDefaultObject(): MaterialExpressionMin
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionMin
        fun C(Other: UObject): MaterialExpressionMin
        fun C(Other: Any): MaterialExpressionMin
    }
}

external open class MaterialExpressionMultiply : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var A: ExpressionInput
    open var B: ExpressionInput
    open var ConstA: Number
    open var ConstB: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionMultiply
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionMultiply
        fun GetDefaultObject(): MaterialExpressionMultiply
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionMultiply
        fun C(Other: UObject): MaterialExpressionMultiply
        fun C(Other: Any): MaterialExpressionMultiply
    }
}

external open class MaterialExpressionRerouteBase : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionRerouteBase
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionRerouteBase
        fun GetDefaultObject(): MaterialExpressionRerouteBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionRerouteBase
        fun C(Other: UObject): MaterialExpressionRerouteBase
        fun C(Other: Any): MaterialExpressionRerouteBase
    }
}

external open class MaterialExpressionNamedRerouteBase : MaterialExpressionRerouteBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionNamedRerouteBase
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionNamedRerouteBase
        fun GetDefaultObject(): MaterialExpressionNamedRerouteBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionNamedRerouteBase
        fun C(Other: UObject): MaterialExpressionNamedRerouteBase
        fun C(Other: Any): MaterialExpressionNamedRerouteBase
    }
}

external open class MaterialExpressionNamedRerouteDeclaration : MaterialExpressionNamedRerouteBase {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput
    open var Name: String
    open var NodeColor: LinearColor
    open var VariableGuid: Guid

    companion object {
        fun Load(ResourceName: String): MaterialExpressionNamedRerouteDeclaration
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionNamedRerouteDeclaration
        fun GetDefaultObject(): MaterialExpressionNamedRerouteDeclaration
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionNamedRerouteDeclaration
        fun C(Other: UObject): MaterialExpressionNamedRerouteDeclaration
        fun C(Other: Any): MaterialExpressionNamedRerouteDeclaration
    }
}

external open class MaterialExpressionNamedRerouteUsage : MaterialExpressionNamedRerouteBase {
    constructor()
    constructor(Outer: UObject)
    open var Declaration: MaterialExpressionNamedRerouteDeclaration
    open var DeclarationGuid: Guid

    companion object {
        fun Load(ResourceName: String): MaterialExpressionNamedRerouteUsage
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionNamedRerouteUsage
        fun GetDefaultObject(): MaterialExpressionNamedRerouteUsage
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionNamedRerouteUsage
        fun C(Other: UObject): MaterialExpressionNamedRerouteUsage
        fun C(Other: Any): MaterialExpressionNamedRerouteUsage
    }
}

external object ENoiseFunction {
    var NOISEFUNCTION_SimplexTex: String /* "NOISEFUNCTION_SimplexTex" */
    var NOISEFUNCTION_GradientTex: String /* "NOISEFUNCTION_GradientTex" */
    var NOISEFUNCTION_GradientTex3D: String /* "NOISEFUNCTION_GradientTex3D" */
    var NOISEFUNCTION_GradientALU: String /* "NOISEFUNCTION_GradientALU" */
    var NOISEFUNCTION_ValueALU: String /* "NOISEFUNCTION_ValueALU" */
    var NOISEFUNCTION_VoronoiALU: String /* "NOISEFUNCTION_VoronoiALU" */
    var NOISEFUNCTION_MAX: String /* "NOISEFUNCTION_MAX" */
}

external open class MaterialExpressionNoise : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Position: ExpressionInput
    open var FilterWidth: ExpressionInput
    open var Scale: Number
    open var Quality: Number
    open var NoiseFunction: String /* "NOISEFUNCTION_SimplexTex" | "NOISEFUNCTION_GradientTex" | "NOISEFUNCTION_GradientTex3D" | "NOISEFUNCTION_GradientALU" | "NOISEFUNCTION_ValueALU" | "NOISEFUNCTION_VoronoiALU" | "NOISEFUNCTION_MAX" */
    open var bTurbulence: Boolean
    open var Levels: Number
    open var OutputMin: Number
    open var OutputMax: Number
    open var LevelScale: Number
    open var bTiling: Boolean
    open var RepeatSize: Any

    companion object {
        fun Load(ResourceName: String): MaterialExpressionNoise
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionNoise
        fun GetDefaultObject(): MaterialExpressionNoise
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionNoise
        fun C(Other: UObject): MaterialExpressionNoise
        fun C(Other: Any): MaterialExpressionNoise
    }
}

external open class MaterialExpressionNormalize : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var VectorInput: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionNormalize
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionNormalize
        fun GetDefaultObject(): MaterialExpressionNormalize
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionNormalize
        fun C(Other: UObject): MaterialExpressionNormalize
        fun C(Other: Any): MaterialExpressionNormalize
    }
}

external open class MaterialExpressionObjectBounds : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionObjectBounds
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionObjectBounds
        fun GetDefaultObject(): MaterialExpressionObjectBounds
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionObjectBounds
        fun C(Other: UObject): MaterialExpressionObjectBounds
        fun C(Other: Any): MaterialExpressionObjectBounds
    }
}

external open class MaterialExpressionObjectOrientation : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionObjectOrientation
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionObjectOrientation
        fun GetDefaultObject(): MaterialExpressionObjectOrientation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionObjectOrientation
        fun C(Other: UObject): MaterialExpressionObjectOrientation
        fun C(Other: Any): MaterialExpressionObjectOrientation
    }
}

external open class MaterialExpressionObjectPositionWS : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionObjectPositionWS
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionObjectPositionWS
        fun GetDefaultObject(): MaterialExpressionObjectPositionWS
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionObjectPositionWS
        fun C(Other: UObject): MaterialExpressionObjectPositionWS
        fun C(Other: Any): MaterialExpressionObjectPositionWS
    }
}

external open class MaterialExpressionObjectRadius : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionObjectRadius
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionObjectRadius
        fun GetDefaultObject(): MaterialExpressionObjectRadius
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionObjectRadius
        fun C(Other: UObject): MaterialExpressionObjectRadius
        fun C(Other: Any): MaterialExpressionObjectRadius
    }
}

external open class MaterialExpressionOneMinus : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionOneMinus
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionOneMinus
        fun GetDefaultObject(): MaterialExpressionOneMinus
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionOneMinus
        fun C(Other: UObject): MaterialExpressionOneMinus
        fun C(Other: Any): MaterialExpressionOneMinus
    }
}

external open class MaterialExpressionPanner : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Coordinate: ExpressionInput
    open var Time: ExpressionInput
    open var Speed: ExpressionInput
    open var SpeedX: Number
    open var SpeedY: Number
    open var ConstCoordinate: Any
    open var bFractionalPart: Boolean

    companion object {
        fun Load(ResourceName: String): MaterialExpressionPanner
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionPanner
        fun GetDefaultObject(): MaterialExpressionPanner
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionPanner
        fun C(Other: UObject): MaterialExpressionPanner
        fun C(Other: Any): MaterialExpressionPanner
    }
}

external open class MaterialExpressionParticleColor : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionParticleColor
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionParticleColor
        fun GetDefaultObject(): MaterialExpressionParticleColor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionParticleColor
        fun C(Other: UObject): MaterialExpressionParticleColor
        fun C(Other: Any): MaterialExpressionParticleColor
    }
}

external open class MaterialExpressionParticleDirection : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionParticleDirection
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionParticleDirection
        fun GetDefaultObject(): MaterialExpressionParticleDirection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionParticleDirection
        fun C(Other: UObject): MaterialExpressionParticleDirection
        fun C(Other: Any): MaterialExpressionParticleDirection
    }
}

external open class MaterialExpressionParticleMacroUV : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionParticleMacroUV
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionParticleMacroUV
        fun GetDefaultObject(): MaterialExpressionParticleMacroUV
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionParticleMacroUV
        fun C(Other: UObject): MaterialExpressionParticleMacroUV
        fun C(Other: Any): MaterialExpressionParticleMacroUV
    }
}

external open class MaterialExpressionParticleMotionBlurFade : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionParticleMotionBlurFade
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionParticleMotionBlurFade
        fun GetDefaultObject(): MaterialExpressionParticleMotionBlurFade
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionParticleMotionBlurFade
        fun C(Other: UObject): MaterialExpressionParticleMotionBlurFade
        fun C(Other: Any): MaterialExpressionParticleMotionBlurFade
    }
}

external open class MaterialExpressionParticlePositionWS : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionParticlePositionWS
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionParticlePositionWS
        fun GetDefaultObject(): MaterialExpressionParticlePositionWS
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionParticlePositionWS
        fun C(Other: UObject): MaterialExpressionParticlePositionWS
        fun C(Other: Any): MaterialExpressionParticlePositionWS
    }
}

external open class MaterialExpressionParticleRadius : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionParticleRadius
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionParticleRadius
        fun GetDefaultObject(): MaterialExpressionParticleRadius
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionParticleRadius
        fun C(Other: UObject): MaterialExpressionParticleRadius
        fun C(Other: Any): MaterialExpressionParticleRadius
    }
}

external open class MaterialExpressionParticleRandom : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionParticleRandom
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionParticleRandom
        fun GetDefaultObject(): MaterialExpressionParticleRandom
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionParticleRandom
        fun C(Other: UObject): MaterialExpressionParticleRandom
        fun C(Other: Any): MaterialExpressionParticleRandom
    }
}

external open class MaterialExpressionParticleRelativeTime : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionParticleRelativeTime
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionParticleRelativeTime
        fun GetDefaultObject(): MaterialExpressionParticleRelativeTime
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionParticleRelativeTime
        fun C(Other: UObject): MaterialExpressionParticleRelativeTime
        fun C(Other: Any): MaterialExpressionParticleRelativeTime
    }
}

external open class MaterialExpressionParticleSize : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionParticleSize
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionParticleSize
        fun GetDefaultObject(): MaterialExpressionParticleSize
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionParticleSize
        fun C(Other: UObject): MaterialExpressionParticleSize
        fun C(Other: Any): MaterialExpressionParticleSize
    }
}

external open class MaterialExpressionParticleSpeed : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionParticleSpeed
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionParticleSpeed
        fun GetDefaultObject(): MaterialExpressionParticleSpeed
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionParticleSpeed
        fun C(Other: UObject): MaterialExpressionParticleSpeed
        fun C(Other: Any): MaterialExpressionParticleSpeed
    }
}

external open class MaterialExpressionParticleSubUV : MaterialExpressionTextureSample {
    constructor()
    constructor(Outer: UObject)
    open var bBlend: Boolean

    companion object {
        fun Load(ResourceName: String): MaterialExpressionParticleSubUV
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionParticleSubUV
        fun GetDefaultObject(): MaterialExpressionParticleSubUV
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionParticleSubUV
        fun C(Other: UObject): MaterialExpressionParticleSubUV
        fun C(Other: Any): MaterialExpressionParticleSubUV
    }
}

external open class MaterialExpressionParticleSubUVProperties : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionParticleSubUVProperties
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionParticleSubUVProperties
        fun GetDefaultObject(): MaterialExpressionParticleSubUVProperties
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionParticleSubUVProperties
        fun C(Other: UObject): MaterialExpressionParticleSubUVProperties
        fun C(Other: Any): MaterialExpressionParticleSubUVProperties
    }
}

external open class MaterialExpressionPerInstanceCustomData : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var DefaultValue: ExpressionInput
    open var ConstDefaultValue: Number
    open var DataIndex: Any

    companion object {
        fun Load(ResourceName: String): MaterialExpressionPerInstanceCustomData
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionPerInstanceCustomData
        fun GetDefaultObject(): MaterialExpressionPerInstanceCustomData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionPerInstanceCustomData
        fun C(Other: UObject): MaterialExpressionPerInstanceCustomData
        fun C(Other: Any): MaterialExpressionPerInstanceCustomData
    }
}

external open class MaterialExpressionPerInstanceFadeAmount : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionPerInstanceFadeAmount
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionPerInstanceFadeAmount
        fun GetDefaultObject(): MaterialExpressionPerInstanceFadeAmount
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionPerInstanceFadeAmount
        fun C(Other: UObject): MaterialExpressionPerInstanceFadeAmount
        fun C(Other: Any): MaterialExpressionPerInstanceFadeAmount
    }
}

external open class MaterialExpressionPerInstanceRandom : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionPerInstanceRandom
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionPerInstanceRandom
        fun GetDefaultObject(): MaterialExpressionPerInstanceRandom
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionPerInstanceRandom
        fun C(Other: UObject): MaterialExpressionPerInstanceRandom
        fun C(Other: Any): MaterialExpressionPerInstanceRandom
    }
}

external open class MaterialExpressionPixelDepth : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionPixelDepth
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionPixelDepth
        fun GetDefaultObject(): MaterialExpressionPixelDepth
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionPixelDepth
        fun C(Other: UObject): MaterialExpressionPixelDepth
        fun C(Other: Any): MaterialExpressionPixelDepth
    }
}

external open class MaterialExpressionPixelNormalWS : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionPixelNormalWS
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionPixelNormalWS
        fun GetDefaultObject(): MaterialExpressionPixelNormalWS
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionPixelNormalWS
        fun C(Other: UObject): MaterialExpressionPixelNormalWS
        fun C(Other: Any): MaterialExpressionPixelNormalWS
    }
}

external open class MaterialExpressionPower : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Base: ExpressionInput
    open var Exponent: ExpressionInput
    open var ConstExponent: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionPower
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionPower
        fun GetDefaultObject(): MaterialExpressionPower
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionPower
        fun C(Other: UObject): MaterialExpressionPower
        fun C(Other: Any): MaterialExpressionPower
    }
}

external open class MaterialExpressionPrecomputedAOMask : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionPrecomputedAOMask
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionPrecomputedAOMask
        fun GetDefaultObject(): MaterialExpressionPrecomputedAOMask
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionPrecomputedAOMask
        fun C(Other: UObject): MaterialExpressionPrecomputedAOMask
        fun C(Other: Any): MaterialExpressionPrecomputedAOMask
    }
}

external open class MaterialExpressionPreSkinnedLocalBounds : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionPreSkinnedLocalBounds
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionPreSkinnedLocalBounds
        fun GetDefaultObject(): MaterialExpressionPreSkinnedLocalBounds
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionPreSkinnedLocalBounds
        fun C(Other: UObject): MaterialExpressionPreSkinnedLocalBounds
        fun C(Other: Any): MaterialExpressionPreSkinnedLocalBounds
    }
}

external open class MaterialExpressionPreSkinnedNormal : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionPreSkinnedNormal
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionPreSkinnedNormal
        fun GetDefaultObject(): MaterialExpressionPreSkinnedNormal
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionPreSkinnedNormal
        fun C(Other: UObject): MaterialExpressionPreSkinnedNormal
        fun C(Other: Any): MaterialExpressionPreSkinnedNormal
    }
}

external open class MaterialExpressionPreSkinnedPosition : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionPreSkinnedPosition
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionPreSkinnedPosition
        fun GetDefaultObject(): MaterialExpressionPreSkinnedPosition
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionPreSkinnedPosition
        fun C(Other: UObject): MaterialExpressionPreSkinnedPosition
        fun C(Other: Any): MaterialExpressionPreSkinnedPosition
    }
}

external open class MaterialExpressionPreviousFrameSwitch : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var CurrentFrame: ExpressionInput
    open var PreviousFrame: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionPreviousFrameSwitch
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionPreviousFrameSwitch
        fun GetDefaultObject(): MaterialExpressionPreviousFrameSwitch
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionPreviousFrameSwitch
        fun C(Other: UObject): MaterialExpressionPreviousFrameSwitch
        fun C(Other: Any): MaterialExpressionPreviousFrameSwitch
    }
}

external open class MaterialExpressionQualitySwitch : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Default: ExpressionInput
    open var Inputs: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionQualitySwitch
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionQualitySwitch
        fun GetDefaultObject(): MaterialExpressionQualitySwitch
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionQualitySwitch
        fun C(Other: UObject): MaterialExpressionQualitySwitch
        fun C(Other: Any): MaterialExpressionQualitySwitch
    }
}

external open class MaterialExpressionRayTracingQualitySwitch : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Normal: ExpressionInput
    open var RayTraced: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionRayTracingQualitySwitch
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionRayTracingQualitySwitch
        fun GetDefaultObject(): MaterialExpressionRayTracingQualitySwitch
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionRayTracingQualitySwitch
        fun C(Other: UObject): MaterialExpressionRayTracingQualitySwitch
        fun C(Other: Any): MaterialExpressionRayTracingQualitySwitch
    }
}

external open class MaterialExpressionReflectionCapturePassSwitch : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Default: ExpressionInput
    open var Reflection: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionReflectionCapturePassSwitch
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionReflectionCapturePassSwitch
        fun GetDefaultObject(): MaterialExpressionReflectionCapturePassSwitch
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionReflectionCapturePassSwitch
        fun C(Other: UObject): MaterialExpressionReflectionCapturePassSwitch
        fun C(Other: Any): MaterialExpressionReflectionCapturePassSwitch
    }
}

external open class MaterialExpressionReflectionVectorWS : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var CustomWorldNormal: ExpressionInput
    open var bNormalizeCustomWorldNormal: Boolean

    companion object {
        fun Load(ResourceName: String): MaterialExpressionReflectionVectorWS
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionReflectionVectorWS
        fun GetDefaultObject(): MaterialExpressionReflectionVectorWS
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionReflectionVectorWS
        fun C(Other: UObject): MaterialExpressionReflectionVectorWS
        fun C(Other: Any): MaterialExpressionReflectionVectorWS
    }
}

external open class MaterialExpressionReroute : MaterialExpressionRerouteBase {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionReroute
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionReroute
        fun GetDefaultObject(): MaterialExpressionReroute
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionReroute
        fun C(Other: UObject): MaterialExpressionReroute
        fun C(Other: Any): MaterialExpressionReroute
    }
}

external open class MaterialExpressionRotateAboutAxis : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var NormalizedRotationAxis: ExpressionInput
    open var RotationAngle: ExpressionInput
    open var PivotPoint: ExpressionInput
    open var Position: ExpressionInput
    open var Period: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionRotateAboutAxis
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionRotateAboutAxis
        fun GetDefaultObject(): MaterialExpressionRotateAboutAxis
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionRotateAboutAxis
        fun C(Other: UObject): MaterialExpressionRotateAboutAxis
        fun C(Other: Any): MaterialExpressionRotateAboutAxis
    }
}

external open class MaterialExpressionRotator : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Coordinate: ExpressionInput
    open var Time: ExpressionInput
    open var CenterX: Number
    open var CenterY: Number
    open var Speed: Number
    open var ConstCoordinate: Any

    companion object {
        fun Load(ResourceName: String): MaterialExpressionRotator
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionRotator
        fun GetDefaultObject(): MaterialExpressionRotator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionRotator
        fun C(Other: UObject): MaterialExpressionRotator
        fun C(Other: Any): MaterialExpressionRotator
    }
}

external open class MaterialExpressionRound : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionRound
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionRound
        fun GetDefaultObject(): MaterialExpressionRound
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionRound
        fun C(Other: UObject): MaterialExpressionRound
        fun C(Other: Any): MaterialExpressionRound
    }
}

external open class MaterialExpressionRuntimeVirtualTextureOutput : MaterialExpressionCustomOutput {
    constructor()
    constructor(Outer: UObject)
    open var BaseColor: ExpressionInput
    open var Specular: ExpressionInput
    open var Roughness: ExpressionInput
    open var Normal: ExpressionInput
    open var WorldHeight: ExpressionInput
    open var Opacity: ExpressionInput
    open var mask: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionRuntimeVirtualTextureOutput
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionRuntimeVirtualTextureOutput
        fun GetDefaultObject(): MaterialExpressionRuntimeVirtualTextureOutput
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionRuntimeVirtualTextureOutput
        fun C(Other: UObject): MaterialExpressionRuntimeVirtualTextureOutput
        fun C(Other: Any): MaterialExpressionRuntimeVirtualTextureOutput
    }
}

external open class MaterialExpressionRuntimeVirtualTextureReplace : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Default: ExpressionInput
    open var VirtualTextureOutput: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionRuntimeVirtualTextureReplace
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionRuntimeVirtualTextureReplace
        fun GetDefaultObject(): MaterialExpressionRuntimeVirtualTextureReplace
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionRuntimeVirtualTextureReplace
        fun C(Other: UObject): MaterialExpressionRuntimeVirtualTextureReplace
        fun C(Other: Any): MaterialExpressionRuntimeVirtualTextureReplace
    }
}

external object ERuntimeVirtualTextureMipValueMode {
    var RVTMVM_None: String /* "RVTMVM_None" */
    var RVTMVM_MipLevel: String /* "RVTMVM_MipLevel" */
    var RVTMVM_MipBias: String /* "RVTMVM_MipBias" */
    var RVTMVM_MAX: String /* "RVTMVM_MAX" */
}

external object ERuntimeVirtualTextureTextureAddressMode {
    var RVTTA_Clamp: String /* "RVTTA_Clamp" */
    var RVTTA_Wrap: String /* "RVTTA_Wrap" */
    var RVTTA_MAX: String /* "RVTTA_MAX" */
}

external open class MaterialExpressionRuntimeVirtualTextureSample : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Coordinates: ExpressionInput
    open var WorldPosition: ExpressionInput
    open var MipValue: ExpressionInput
    open var VirtualTexture: RuntimeVirtualTexture
    open var MaterialType: String /* "BaseColor" | "BaseColor_Normal_DEPRECATED" | "BaseColor_Normal_Specular" | "BaseColor_Normal_Specular_YCoCg" | "BaseColor_Normal_Specular_Mask_YCoCg" | "WorldHeight" | "Count" | "ERuntimeVirtualTextureMaterialType_MAX" */
    open var bSinglePhysicalSpace: Boolean
    open var bAdaptive: Boolean
    open var MipValueMode: String /* "RVTMVM_None" | "RVTMVM_MipLevel" | "RVTMVM_MipBias" | "RVTMVM_MAX" */
    open var TextureAddressMode: String /* "RVTTA_Clamp" | "RVTTA_Wrap" | "RVTTA_MAX" */

    companion object {
        fun Load(ResourceName: String): MaterialExpressionRuntimeVirtualTextureSample
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionRuntimeVirtualTextureSample
        fun GetDefaultObject(): MaterialExpressionRuntimeVirtualTextureSample
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionRuntimeVirtualTextureSample
        fun C(Other: UObject): MaterialExpressionRuntimeVirtualTextureSample
        fun C(Other: Any): MaterialExpressionRuntimeVirtualTextureSample
    }
}

external open class MaterialExpressionRuntimeVirtualTextureSampleParameter : MaterialExpressionRuntimeVirtualTextureSample {
    constructor()
    constructor(Outer: UObject)
    open var ParameterName: String
    open var ExpressionGUID: Guid
    open var Group: String
    open var SortPriority: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionRuntimeVirtualTextureSampleParameter
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionRuntimeVirtualTextureSampleParameter
        fun GetDefaultObject(): MaterialExpressionRuntimeVirtualTextureSampleParameter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionRuntimeVirtualTextureSampleParameter
        fun C(Other: UObject): MaterialExpressionRuntimeVirtualTextureSampleParameter
        fun C(Other: Any): MaterialExpressionRuntimeVirtualTextureSampleParameter
    }
}

external object EFieldVectorType {
    var Vector_LinearForce: String /* "Vector_LinearForce" */
    var Vector_LinearVelocity: String /* "Vector_LinearVelocity" */
    var Vector_AngularVelocity: String /* "Vector_AngularVelocity" */
    var Vector_AngularTorque: String /* "Vector_AngularTorque" */
    var Vector_PositionTarget: String /* "Vector_PositionTarget" */
    var Vector_TargetMax: String /* "Vector_TargetMax" */
    var Vector_MAX: String /* "Vector_MAX" */
}

external open class MaterialExpressionSamplePhysicsVectorField : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var WorldPosition: ExpressionInput
    open var FieldTarget: String /* "Vector_LinearForce" | "Vector_LinearVelocity" | "Vector_AngularVelocity" | "Vector_AngularTorque" | "Vector_PositionTarget" | "Vector_TargetMax" | "Vector_MAX" */

    companion object {
        fun Load(ResourceName: String): MaterialExpressionSamplePhysicsVectorField
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionSamplePhysicsVectorField
        fun GetDefaultObject(): MaterialExpressionSamplePhysicsVectorField
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionSamplePhysicsVectorField
        fun C(Other: UObject): MaterialExpressionSamplePhysicsVectorField
        fun C(Other: Any): MaterialExpressionSamplePhysicsVectorField
    }
}

external object EFieldScalarType {
    var Scalar_ExternalClusterStrain: String /* "Scalar_ExternalClusterStrain" */
    var Scalar_Kill: String /* "Scalar_Kill" */
    var Scalar_DisableThreshold: String /* "Scalar_DisableThreshold" */
    var Scalar_SleepingThreshold: String /* "Scalar_SleepingThreshold" */
    var Scalar_InternalClusterStrain: String /* "Scalar_InternalClusterStrain" */
    var Scalar_DynamicConstraint: String /* "Scalar_DynamicConstraint" */
    var Scalar_TargetMax: String /* "Scalar_TargetMax" */
    var Scalar_MAX: String /* "Scalar_MAX" */
}

external open class MaterialExpressionSamplePhysicsScalarField : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var WorldPosition: ExpressionInput
    open var FieldTarget: String /* "Scalar_ExternalClusterStrain" | "Scalar_Kill" | "Scalar_DisableThreshold" | "Scalar_SleepingThreshold" | "Scalar_InternalClusterStrain" | "Scalar_DynamicConstraint" | "Scalar_TargetMax" | "Scalar_MAX" */

    companion object {
        fun Load(ResourceName: String): MaterialExpressionSamplePhysicsScalarField
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionSamplePhysicsScalarField
        fun GetDefaultObject(): MaterialExpressionSamplePhysicsScalarField
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionSamplePhysicsScalarField
        fun C(Other: UObject): MaterialExpressionSamplePhysicsScalarField
        fun C(Other: Any): MaterialExpressionSamplePhysicsScalarField
    }
}

external object EFieldIntegerType {
    var Integer_DynamicState: String /* "Integer_DynamicState" */
    var Integer_ActivateDisabled: String /* "Integer_ActivateDisabled" */
    var Integer_CollisionGroup: String /* "Integer_CollisionGroup" */
    var Integer_PositionAnimated: String /* "Integer_PositionAnimated" */
    var Integer_PositionStatic: String /* "Integer_PositionStatic" */
    var Integer_TargetMax: String /* "Integer_TargetMax" */
    var Integer_MAX: String /* "Integer_MAX" */
}

external open class MaterialExpressionSamplePhysicsIntegerField : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var WorldPosition: ExpressionInput
    open var FieldTarget: String /* "Integer_DynamicState" | "Integer_ActivateDisabled" | "Integer_CollisionGroup" | "Integer_PositionAnimated" | "Integer_PositionStatic" | "Integer_TargetMax" | "Integer_MAX" */

    companion object {
        fun Load(ResourceName: String): MaterialExpressionSamplePhysicsIntegerField
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionSamplePhysicsIntegerField
        fun GetDefaultObject(): MaterialExpressionSamplePhysicsIntegerField
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionSamplePhysicsIntegerField
        fun C(Other: UObject): MaterialExpressionSamplePhysicsIntegerField
        fun C(Other: Any): MaterialExpressionSamplePhysicsIntegerField
    }
}

external open class MaterialExpressionSaturate : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionSaturate
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionSaturate
        fun GetDefaultObject(): MaterialExpressionSaturate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionSaturate
        fun C(Other: UObject): MaterialExpressionSaturate
        fun C(Other: Any): MaterialExpressionSaturate
    }
}

external object EMaterialSceneAttributeInputMode {
    var Coordinates: String /* "Coordinates" */
    var OffsetFraction: String /* "OffsetFraction" */
    var EMaterialSceneAttributeInputMode_MAX: String /* "EMaterialSceneAttributeInputMode_MAX" */
}

external open class MaterialExpressionSceneColor : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var InputMode: String /* "Coordinates" | "OffsetFraction" | "EMaterialSceneAttributeInputMode_MAX" */
    open var Input: ExpressionInput
    open var OffsetFraction: ExpressionInput
    open var ConstInput: Vector2D

    companion object {
        fun Load(ResourceName: String): MaterialExpressionSceneColor
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionSceneColor
        fun GetDefaultObject(): MaterialExpressionSceneColor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionSceneColor
        fun C(Other: UObject): MaterialExpressionSceneColor
        fun C(Other: Any): MaterialExpressionSceneColor
    }
}

external open class MaterialExpressionSceneDepth : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var InputMode: String /* "Coordinates" | "OffsetFraction" | "EMaterialSceneAttributeInputMode_MAX" */
    open var Input: ExpressionInput
    open var Coordinates: ExpressionInput
    open var ConstInput: Vector2D

    companion object {
        fun Load(ResourceName: String): MaterialExpressionSceneDepth
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionSceneDepth
        fun GetDefaultObject(): MaterialExpressionSceneDepth
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionSceneDepth
        fun C(Other: UObject): MaterialExpressionSceneDepth
        fun C(Other: Any): MaterialExpressionSceneDepth
    }
}

external open class MaterialExpressionSceneDepthWithoutWater : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var InputMode: String /* "Coordinates" | "OffsetFraction" | "EMaterialSceneAttributeInputMode_MAX" */
    open var Input: ExpressionInput
    open var ConstInput: Vector2D
    open var FallbackDepth: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionSceneDepthWithoutWater
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionSceneDepthWithoutWater
        fun GetDefaultObject(): MaterialExpressionSceneDepthWithoutWater
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionSceneDepthWithoutWater
        fun C(Other: UObject): MaterialExpressionSceneDepthWithoutWater
        fun C(Other: Any): MaterialExpressionSceneDepthWithoutWater
    }
}

external open class MaterialExpressionSceneTexelSize : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionSceneTexelSize
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionSceneTexelSize
        fun GetDefaultObject(): MaterialExpressionSceneTexelSize
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionSceneTexelSize
        fun C(Other: UObject): MaterialExpressionSceneTexelSize
        fun C(Other: Any): MaterialExpressionSceneTexelSize
    }
}

external object ESceneTextureId {
    var PPI_SceneColor: String /* "PPI_SceneColor" */
    var PPI_SceneDepth: String /* "PPI_SceneDepth" */
    var PPI_DiffuseColor: String /* "PPI_DiffuseColor" */
    var PPI_SpecularColor: String /* "PPI_SpecularColor" */
    var PPI_SubsurfaceColor: String /* "PPI_SubsurfaceColor" */
    var PPI_BaseColor: String /* "PPI_BaseColor" */
    var PPI_Specular: String /* "PPI_Specular" */
    var PPI_Metallic: String /* "PPI_Metallic" */
    var PPI_WorldNormal: String /* "PPI_WorldNormal" */
    var PPI_SeparateTranslucency: String /* "PPI_SeparateTranslucency" */
    var PPI_Opacity: String /* "PPI_Opacity" */
    var PPI_Roughness: String /* "PPI_Roughness" */
    var PPI_MaterialAO: String /* "PPI_MaterialAO" */
    var PPI_CustomDepth: String /* "PPI_CustomDepth" */
    var PPI_PostProcessInput0: String /* "PPI_PostProcessInput0" */
    var PPI_PostProcessInput1: String /* "PPI_PostProcessInput1" */
    var PPI_PostProcessInput2: String /* "PPI_PostProcessInput2" */
    var PPI_PostProcessInput3: String /* "PPI_PostProcessInput3" */
    var PPI_PostProcessInput4: String /* "PPI_PostProcessInput4" */
    var PPI_PostProcessInput5: String /* "PPI_PostProcessInput5" */
    var PPI_PostProcessInput6: String /* "PPI_PostProcessInput6" */
    var PPI_DecalMask: String /* "PPI_DecalMask" */
    var PPI_ShadingModelColor: String /* "PPI_ShadingModelColor" */
    var PPI_ShadingModelID: String /* "PPI_ShadingModelID" */
    var PPI_AmbientOcclusion: String /* "PPI_AmbientOcclusion" */
    var PPI_CustomStencil: String /* "PPI_CustomStencil" */
    var PPI_StoredBaseColor: String /* "PPI_StoredBaseColor" */
    var PPI_StoredSpecular: String /* "PPI_StoredSpecular" */
    var PPI_Velocity: String /* "PPI_Velocity" */
    var PPI_WorldTangent: String /* "PPI_WorldTangent" */
    var PPI_Anisotropy: String /* "PPI_Anisotropy" */
    var PPI_MAX: String /* "PPI_MAX" */
}

external open class MaterialExpressionSceneTexture : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Coordinates: ExpressionInput
    open var SceneTextureId: String /* "PPI_SceneColor" | "PPI_SceneDepth" | "PPI_DiffuseColor" | "PPI_SpecularColor" | "PPI_SubsurfaceColor" | "PPI_BaseColor" | "PPI_Specular" | "PPI_Metallic" | "PPI_WorldNormal" | "PPI_SeparateTranslucency" | "PPI_Opacity" | "PPI_Roughness" | "PPI_MaterialAO" | "PPI_CustomDepth" | "PPI_PostProcessInput0" | "PPI_PostProcessInput1" | "PPI_PostProcessInput2" | "PPI_PostProcessInput3" | "PPI_PostProcessInput4" | "PPI_PostProcessInput5" | "PPI_PostProcessInput6" | "PPI_DecalMask" | "PPI_ShadingModelColor" | "PPI_ShadingModelID" | "PPI_AmbientOcclusion" | "PPI_CustomStencil" | "PPI_StoredBaseColor" | "PPI_StoredSpecular" | "PPI_Velocity" | "PPI_WorldTangent" | "PPI_Anisotropy" | "PPI_MAX" */
    open var bFiltered: Boolean

    companion object {
        fun Load(ResourceName: String): MaterialExpressionSceneTexture
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionSceneTexture
        fun GetDefaultObject(): MaterialExpressionSceneTexture
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionSceneTexture
        fun C(Other: UObject): MaterialExpressionSceneTexture
        fun C(Other: Any): MaterialExpressionSceneTexture
    }
}

external open class MaterialExpressionScreenPosition : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionScreenPosition
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionScreenPosition
        fun GetDefaultObject(): MaterialExpressionScreenPosition
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionScreenPosition
        fun C(Other: UObject): MaterialExpressionScreenPosition
        fun C(Other: Any): MaterialExpressionScreenPosition
    }
}

external open class MaterialExpressionSetMaterialAttributes : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Inputs: Array<ExpressionInput>
    open var AttributeSetTypes: Array<Guid>

    companion object {
        fun Load(ResourceName: String): MaterialExpressionSetMaterialAttributes
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionSetMaterialAttributes
        fun GetDefaultObject(): MaterialExpressionSetMaterialAttributes
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionSetMaterialAttributes
        fun C(Other: UObject): MaterialExpressionSetMaterialAttributes
        fun C(Other: Any): MaterialExpressionSetMaterialAttributes
    }
}

external open class MaterialExpressionShaderStageSwitch : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var PixelShader: ExpressionInput
    open var VertexShader: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionShaderStageSwitch
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionShaderStageSwitch
        fun GetDefaultObject(): MaterialExpressionShaderStageSwitch
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionShaderStageSwitch
        fun C(Other: UObject): MaterialExpressionShaderStageSwitch
        fun C(Other: Any): MaterialExpressionShaderStageSwitch
    }
}

external open class MaterialExpressionShadingModel : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var ShadingModel: String /* "MSM_Unlit" | "MSM_DefaultLit" | "MSM_Subsurface" | "MSM_PreintegratedSkin" | "MSM_ClearCoat" | "MSM_SubsurfaceProfile" | "MSM_TwoSidedFoliage" | "MSM_Hair" | "MSM_Cloth" | "MSM_Eye" | "MSM_SingleLayerWater" | "MSM_ThinTranslucent" | "MSM_NUM" | "MSM_FromMaterialExpression" | "MSM_MAX" */

    companion object {
        fun Load(ResourceName: String): MaterialExpressionShadingModel
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionShadingModel
        fun GetDefaultObject(): MaterialExpressionShadingModel
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionShadingModel
        fun C(Other: UObject): MaterialExpressionShadingModel
        fun C(Other: Any): MaterialExpressionShadingModel
    }
}

external open class MaterialExpressionShadingPathSwitch : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Default: ExpressionInput
    open var Inputs: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionShadingPathSwitch
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionShadingPathSwitch
        fun GetDefaultObject(): MaterialExpressionShadingPathSwitch
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionShadingPathSwitch
        fun C(Other: UObject): MaterialExpressionShadingPathSwitch
        fun C(Other: Any): MaterialExpressionShadingPathSwitch
    }
}

external open class MaterialExpressionShadowReplace : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Default: ExpressionInput
    open var Shadow: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionShadowReplace
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionShadowReplace
        fun GetDefaultObject(): MaterialExpressionShadowReplace
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionShadowReplace
        fun C(Other: UObject): MaterialExpressionShadowReplace
        fun C(Other: Any): MaterialExpressionShadowReplace
    }
}

external open class MaterialExpressionSign : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionSign
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionSign
        fun GetDefaultObject(): MaterialExpressionSign
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionSign
        fun C(Other: UObject): MaterialExpressionSign
        fun C(Other: Any): MaterialExpressionSign
    }
}

external open class MaterialExpressionSine : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput
    open var Period: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionSine
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionSine
        fun GetDefaultObject(): MaterialExpressionSine
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionSine
        fun C(Other: UObject): MaterialExpressionSine
        fun C(Other: Any): MaterialExpressionSine
    }
}

external open class MaterialExpressionSingleLayerWaterMaterialOutput : MaterialExpressionCustomOutput {
    constructor()
    constructor(Outer: UObject)
    open var ScatteringCoefficients: ExpressionInput
    open var AbsorptionCoefficients: ExpressionInput
    open var PhaseG: ExpressionInput
    open var ColorScaleBehindWater: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionSingleLayerWaterMaterialOutput
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionSingleLayerWaterMaterialOutput
        fun GetDefaultObject(): MaterialExpressionSingleLayerWaterMaterialOutput
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionSingleLayerWaterMaterialOutput
        fun C(Other: UObject): MaterialExpressionSingleLayerWaterMaterialOutput
        fun C(Other: Any): MaterialExpressionSingleLayerWaterMaterialOutput
    }
}

external open class MaterialExpressionSkinningVertexOffsets : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionSkinningVertexOffsets
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionSkinningVertexOffsets
        fun GetDefaultObject(): MaterialExpressionSkinningVertexOffsets
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionSkinningVertexOffsets
        fun C(Other: UObject): MaterialExpressionSkinningVertexOffsets
        fun C(Other: Any): MaterialExpressionSkinningVertexOffsets
    }
}

external open class MaterialExpressionSkyAtmosphereLightDirection : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var LightIndex: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionSkyAtmosphereLightDirection
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionSkyAtmosphereLightDirection
        fun GetDefaultObject(): MaterialExpressionSkyAtmosphereLightDirection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionSkyAtmosphereLightDirection
        fun C(Other: UObject): MaterialExpressionSkyAtmosphereLightDirection
        fun C(Other: Any): MaterialExpressionSkyAtmosphereLightDirection
    }
}

external open class MaterialExpressionSkyAtmosphereLightIlluminance : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var LightIndex: Number
    open var WorldPosition: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionSkyAtmosphereLightIlluminance
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionSkyAtmosphereLightIlluminance
        fun GetDefaultObject(): MaterialExpressionSkyAtmosphereLightIlluminance
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionSkyAtmosphereLightIlluminance
        fun C(Other: UObject): MaterialExpressionSkyAtmosphereLightIlluminance
        fun C(Other: Any): MaterialExpressionSkyAtmosphereLightIlluminance
    }
}

external open class MaterialExpressionSkyAtmosphereLightDiskLuminance : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var LightIndex: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionSkyAtmosphereLightDiskLuminance
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionSkyAtmosphereLightDiskLuminance
        fun GetDefaultObject(): MaterialExpressionSkyAtmosphereLightDiskLuminance
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionSkyAtmosphereLightDiskLuminance
        fun C(Other: UObject): MaterialExpressionSkyAtmosphereLightDiskLuminance
        fun C(Other: Any): MaterialExpressionSkyAtmosphereLightDiskLuminance
    }
}

external open class MaterialExpressionSkyAtmosphereAerialPerspective : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var WorldPosition: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionSkyAtmosphereAerialPerspective
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionSkyAtmosphereAerialPerspective
        fun GetDefaultObject(): MaterialExpressionSkyAtmosphereAerialPerspective
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionSkyAtmosphereAerialPerspective
        fun C(Other: UObject): MaterialExpressionSkyAtmosphereAerialPerspective
        fun C(Other: Any): MaterialExpressionSkyAtmosphereAerialPerspective
    }
}

external open class MaterialExpressionSkyAtmosphereDistantLightScatteredLuminance : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionSkyAtmosphereDistantLightScatteredLuminance
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionSkyAtmosphereDistantLightScatteredLuminance
        fun GetDefaultObject(): MaterialExpressionSkyAtmosphereDistantLightScatteredLuminance
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionSkyAtmosphereDistantLightScatteredLuminance
        fun C(Other: UObject): MaterialExpressionSkyAtmosphereDistantLightScatteredLuminance
        fun C(Other: Any): MaterialExpressionSkyAtmosphereDistantLightScatteredLuminance
    }
}

external open class MaterialExpressionSkyAtmosphereViewLuminance : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionSkyAtmosphereViewLuminance
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionSkyAtmosphereViewLuminance
        fun GetDefaultObject(): MaterialExpressionSkyAtmosphereViewLuminance
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionSkyAtmosphereViewLuminance
        fun C(Other: UObject): MaterialExpressionSkyAtmosphereViewLuminance
        fun C(Other: Any): MaterialExpressionSkyAtmosphereViewLuminance
    }
}

external open class MaterialExpressionSmoothStep : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Min: ExpressionInput
    open var Max: ExpressionInput
    open var Value: ExpressionInput
    open var ConstMin: Number
    open var ConstMax: Number
    open var ConstValue: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionSmoothStep
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionSmoothStep
        fun GetDefaultObject(): MaterialExpressionSmoothStep
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionSmoothStep
        fun C(Other: UObject): MaterialExpressionSmoothStep
        fun C(Other: Any): MaterialExpressionSmoothStep
    }
}

external open class MaterialExpressionSobol : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Cell: ExpressionInput
    open var index: ExpressionInput
    open var Seed: ExpressionInput
    open var ConstIndex: Any
    open var ConstSeed: Vector2D

    companion object {
        fun Load(ResourceName: String): MaterialExpressionSobol
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionSobol
        fun GetDefaultObject(): MaterialExpressionSobol
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionSobol
        fun C(Other: UObject): MaterialExpressionSobol
        fun C(Other: Any): MaterialExpressionSobol
    }
}

external object ESpeedTreeGeometryType {
    var STG_Branch: String /* "STG_Branch" */
    var STG_Frond: String /* "STG_Frond" */
    var STG_Leaf: String /* "STG_Leaf" */
    var STG_FacingLeaf: String /* "STG_FacingLeaf" */
    var STG_Billboard: String /* "STG_Billboard" */
    var STG_MAX: String /* "STG_MAX" */
}

external object ESpeedTreeWindType {
    var STW_None: String /* "STW_None" */
    var STW_Fastest: String /* "STW_Fastest" */
    var STW_Fast: String /* "STW_Fast" */
    var STW_Better: String /* "STW_Better" */
    var STW_Best: String /* "STW_Best" */
    var STW_Palm: String /* "STW_Palm" */
    var STW_BestPlus: String /* "STW_BestPlus" */
    var STW_MAX: String /* "STW_MAX" */
}

external object ESpeedTreeLODType {
    var STLOD_Pop: String /* "STLOD_Pop" */
    var STLOD_Smooth: String /* "STLOD_Smooth" */
    var STLOD_MAX: String /* "STLOD_MAX" */
}

external open class MaterialExpressionSpeedTree : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var GeometryInput: ExpressionInput
    open var WindInput: ExpressionInput
    open var LODInput: ExpressionInput
    open var ExtraBendWS: ExpressionInput
    open var GeometryType: String /* "STG_Branch" | "STG_Frond" | "STG_Leaf" | "STG_FacingLeaf" | "STG_Billboard" | "STG_MAX" */
    open var WindType: String /* "STW_None" | "STW_Fastest" | "STW_Fast" | "STW_Better" | "STW_Best" | "STW_Palm" | "STW_BestPlus" | "STW_MAX" */
    open var LODType: String /* "STLOD_Pop" | "STLOD_Smooth" | "STLOD_MAX" */
    open var BillboardThreshold: Number
    open var bAccurateWindVelocities: Boolean

    companion object {
        fun Load(ResourceName: String): MaterialExpressionSpeedTree
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionSpeedTree
        fun GetDefaultObject(): MaterialExpressionSpeedTree
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionSpeedTree
        fun C(Other: UObject): MaterialExpressionSpeedTree
        fun C(Other: Any): MaterialExpressionSpeedTree
    }
}

external open class MaterialExpressionSphereMask : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var A: ExpressionInput
    open var B: ExpressionInput
    open var Radius: ExpressionInput
    open var Hardness: ExpressionInput
    open var AttenuationRadius: Number
    open var HardnessPercent: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionSphereMask
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionSphereMask
        fun GetDefaultObject(): MaterialExpressionSphereMask
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionSphereMask
        fun C(Other: UObject): MaterialExpressionSphereMask
        fun C(Other: Any): MaterialExpressionSphereMask
    }
}

external open class MaterialExpressionSphericalParticleOpacity : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Density: ExpressionInput
    open var ConstantDensity: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionSphericalParticleOpacity
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionSphericalParticleOpacity
        fun GetDefaultObject(): MaterialExpressionSphericalParticleOpacity
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionSphericalParticleOpacity
        fun C(Other: UObject): MaterialExpressionSphericalParticleOpacity
        fun C(Other: Any): MaterialExpressionSphericalParticleOpacity
    }
}

external open class MaterialExpressionSquareRoot : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionSquareRoot
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionSquareRoot
        fun GetDefaultObject(): MaterialExpressionSquareRoot
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionSquareRoot
        fun C(Other: UObject): MaterialExpressionSquareRoot
        fun C(Other: Any): MaterialExpressionSquareRoot
    }
}

external open class MaterialExpressionStaticBool : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Value: Boolean

    companion object {
        fun Load(ResourceName: String): MaterialExpressionStaticBool
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionStaticBool
        fun GetDefaultObject(): MaterialExpressionStaticBool
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionStaticBool
        fun C(Other: UObject): MaterialExpressionStaticBool
        fun C(Other: Any): MaterialExpressionStaticBool
    }
}

external open class MaterialExpressionStaticBoolParameter : MaterialExpressionParameter {
    constructor()
    constructor(Outer: UObject)
    open var DefaultValue: Boolean

    companion object {
        fun Load(ResourceName: String): MaterialExpressionStaticBoolParameter
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionStaticBoolParameter
        fun GetDefaultObject(): MaterialExpressionStaticBoolParameter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionStaticBoolParameter
        fun C(Other: UObject): MaterialExpressionStaticBoolParameter
        fun C(Other: Any): MaterialExpressionStaticBoolParameter
    }
}

external open class MaterialExpressionStaticComponentMaskParameter : MaterialExpressionParameter {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput
    open var DefaultR: Boolean
    open var DefaultG: Boolean
    open var DefaultB: Boolean
    open var DefaultA: Boolean

    companion object {
        fun Load(ResourceName: String): MaterialExpressionStaticComponentMaskParameter
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionStaticComponentMaskParameter
        fun GetDefaultObject(): MaterialExpressionStaticComponentMaskParameter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionStaticComponentMaskParameter
        fun C(Other: UObject): MaterialExpressionStaticComponentMaskParameter
        fun C(Other: Any): MaterialExpressionStaticComponentMaskParameter
    }
}

external open class MaterialExpressionStaticSwitch : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var DefaultValue: Boolean
    open var A: ExpressionInput
    open var B: ExpressionInput
    open var Value: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionStaticSwitch
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionStaticSwitch
        fun GetDefaultObject(): MaterialExpressionStaticSwitch
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionStaticSwitch
        fun C(Other: UObject): MaterialExpressionStaticSwitch
        fun C(Other: Any): MaterialExpressionStaticSwitch
    }
}

external open class MaterialExpressionStaticSwitchParameter : MaterialExpressionStaticBoolParameter {
    constructor()
    constructor(Outer: UObject)
    open var A: ExpressionInput
    open var B: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionStaticSwitchParameter
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionStaticSwitchParameter
        fun GetDefaultObject(): MaterialExpressionStaticSwitchParameter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionStaticSwitchParameter
        fun C(Other: UObject): MaterialExpressionStaticSwitchParameter
        fun C(Other: Any): MaterialExpressionStaticSwitchParameter
    }
}

external open class MaterialExpressionStep : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Y: ExpressionInput
    open var X: ExpressionInput
    open var ConstY: Number
    open var ConstX: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionStep
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionStep
        fun GetDefaultObject(): MaterialExpressionStep
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionStep
        fun C(Other: UObject): MaterialExpressionStep
        fun C(Other: Any): MaterialExpressionStep
    }
}

external open class MaterialExpressionSubtract : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var A: ExpressionInput
    open var B: ExpressionInput
    open var ConstA: Number
    open var ConstB: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionSubtract
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionSubtract
        fun GetDefaultObject(): MaterialExpressionSubtract
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionSubtract
        fun C(Other: UObject): MaterialExpressionSubtract
        fun C(Other: Any): MaterialExpressionSubtract
    }
}

external open class MaterialExpressionTangent : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput
    open var Period: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionTangent
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionTangent
        fun GetDefaultObject(): MaterialExpressionTangent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionTangent
        fun C(Other: UObject): MaterialExpressionTangent
        fun C(Other: Any): MaterialExpressionTangent
    }
}

external open class MaterialExpressionTangentOutput : MaterialExpressionCustomOutput {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionTangentOutput
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionTangentOutput
        fun GetDefaultObject(): MaterialExpressionTangentOutput
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionTangentOutput
        fun C(Other: UObject): MaterialExpressionTangentOutput
        fun C(Other: Any): MaterialExpressionTangentOutput
    }
}

external open class MaterialExpressionTemporalSobol : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var index: ExpressionInput
    open var Seed: ExpressionInput
    open var ConstIndex: Any
    open var ConstSeed: Vector2D

    companion object {
        fun Load(ResourceName: String): MaterialExpressionTemporalSobol
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionTemporalSobol
        fun GetDefaultObject(): MaterialExpressionTemporalSobol
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionTemporalSobol
        fun C(Other: UObject): MaterialExpressionTemporalSobol
        fun C(Other: Any): MaterialExpressionTemporalSobol
    }
}

external open class MaterialExpressionTextureCoordinate : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var CoordinateIndex: Number
    open var UTiling: Number
    open var VTiling: Number
    open var UnMirrorU: Boolean
    open var UnMirrorV: Boolean

    companion object {
        fun Load(ResourceName: String): MaterialExpressionTextureCoordinate
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionTextureCoordinate
        fun GetDefaultObject(): MaterialExpressionTextureCoordinate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionTextureCoordinate
        fun C(Other: UObject): MaterialExpressionTextureCoordinate
        fun C(Other: Any): MaterialExpressionTextureCoordinate
    }
}

external open class MaterialExpressionTextureObject : MaterialExpressionTextureBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionTextureObject
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionTextureObject
        fun GetDefaultObject(): MaterialExpressionTextureObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionTextureObject
        fun C(Other: UObject): MaterialExpressionTextureObject
        fun C(Other: Any): MaterialExpressionTextureObject
    }
}

external open class MaterialExpressionTextureObjectParameter : MaterialExpressionTextureSampleParameter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionTextureObjectParameter
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionTextureObjectParameter
        fun GetDefaultObject(): MaterialExpressionTextureObjectParameter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionTextureObjectParameter
        fun C(Other: UObject): MaterialExpressionTextureObjectParameter
        fun C(Other: Any): MaterialExpressionTextureObjectParameter
    }
}

external object EMaterialExposedTextureProperty {
    var TMTM_TextureSize: String /* "TMTM_TextureSize" */
    var TMTM_TexelSize: String /* "TMTM_TexelSize" */
    var TMTM_MAX: String /* "TMTM_MAX" */
}

external open class MaterialExpressionTextureProperty : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var TextureObject: ExpressionInput
    open var Property: String /* "TMTM_TextureSize" | "TMTM_TexelSize" | "TMTM_MAX" */

    companion object {
        fun Load(ResourceName: String): MaterialExpressionTextureProperty
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionTextureProperty
        fun GetDefaultObject(): MaterialExpressionTextureProperty
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionTextureProperty
        fun C(Other: UObject): MaterialExpressionTextureProperty
        fun C(Other: Any): MaterialExpressionTextureProperty
    }
}

external open class MaterialExpressionTextureSampleParameter2DArray : MaterialExpressionTextureSampleParameter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionTextureSampleParameter2DArray
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionTextureSampleParameter2DArray
        fun GetDefaultObject(): MaterialExpressionTextureSampleParameter2DArray
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionTextureSampleParameter2DArray
        fun C(Other: UObject): MaterialExpressionTextureSampleParameter2DArray
        fun C(Other: Any): MaterialExpressionTextureSampleParameter2DArray
    }
}

external open class MaterialExpressionTextureSampleParameterCube : MaterialExpressionTextureSampleParameter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionTextureSampleParameterCube
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionTextureSampleParameterCube
        fun GetDefaultObject(): MaterialExpressionTextureSampleParameterCube
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionTextureSampleParameterCube
        fun C(Other: UObject): MaterialExpressionTextureSampleParameterCube
        fun C(Other: Any): MaterialExpressionTextureSampleParameterCube
    }
}

external open class MaterialExpressionTextureSampleParameterSubUV : MaterialExpressionTextureSampleParameter2D {
    constructor()
    constructor(Outer: UObject)
    open var bBlend: Boolean

    companion object {
        fun Load(ResourceName: String): MaterialExpressionTextureSampleParameterSubUV
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionTextureSampleParameterSubUV
        fun GetDefaultObject(): MaterialExpressionTextureSampleParameterSubUV
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionTextureSampleParameterSubUV
        fun C(Other: UObject): MaterialExpressionTextureSampleParameterSubUV
        fun C(Other: Any): MaterialExpressionTextureSampleParameterSubUV
    }
}

external open class MaterialExpressionTextureSampleParameterVolume : MaterialExpressionTextureSampleParameter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionTextureSampleParameterVolume
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionTextureSampleParameterVolume
        fun GetDefaultObject(): MaterialExpressionTextureSampleParameterVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionTextureSampleParameterVolume
        fun C(Other: UObject): MaterialExpressionTextureSampleParameterVolume
        fun C(Other: Any): MaterialExpressionTextureSampleParameterVolume
    }
}

external open class MaterialExpressionThinTranslucentMaterialOutput : MaterialExpressionCustomOutput {
    constructor()
    constructor(Outer: UObject)
    open var TransmittanceColor: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionThinTranslucentMaterialOutput
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionThinTranslucentMaterialOutput
        fun GetDefaultObject(): MaterialExpressionThinTranslucentMaterialOutput
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionThinTranslucentMaterialOutput
        fun C(Other: UObject): MaterialExpressionThinTranslucentMaterialOutput
        fun C(Other: Any): MaterialExpressionThinTranslucentMaterialOutput
    }
}

external open class MaterialExpressionTime : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var bIgnorePause: Boolean
    open var bOverride_Period: Boolean
    open var Period: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionTime
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionTime
        fun GetDefaultObject(): MaterialExpressionTime
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionTime
        fun C(Other: UObject): MaterialExpressionTime
        fun C(Other: Any): MaterialExpressionTime
    }
}

external object EMaterialVectorCoordTransformSource {
    var TRANSFORMSOURCE_Tangent: String /* "TRANSFORMSOURCE_Tangent" */
    var TRANSFORMSOURCE_Local: String /* "TRANSFORMSOURCE_Local" */
    var TRANSFORMSOURCE_World: String /* "TRANSFORMSOURCE_World" */
    var TRANSFORMSOURCE_View: String /* "TRANSFORMSOURCE_View" */
    var TRANSFORMSOURCE_Camera: String /* "TRANSFORMSOURCE_Camera" */
    var TRANSFORMSOURCE_ParticleWorld: String /* "TRANSFORMSOURCE_ParticleWorld" */
    var TRANSFORMSOURCE_MAX: String /* "TRANSFORMSOURCE_MAX" */
}

external object EMaterialVectorCoordTransform {
    var TRANSFORM_Tangent: String /* "TRANSFORM_Tangent" */
    var TRANSFORM_Local: String /* "TRANSFORM_Local" */
    var TRANSFORM_World: String /* "TRANSFORM_World" */
    var TRANSFORM_View: String /* "TRANSFORM_View" */
    var TRANSFORM_Camera: String /* "TRANSFORM_Camera" */
    var TRANSFORM_ParticleWorld: String /* "TRANSFORM_ParticleWorld" */
    var TRANSFORM_MAX: String /* "TRANSFORM_MAX" */
}

external open class MaterialExpressionTransform : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput
    open var TransformSourceType: String /* "TRANSFORMSOURCE_Tangent" | "TRANSFORMSOURCE_Local" | "TRANSFORMSOURCE_World" | "TRANSFORMSOURCE_View" | "TRANSFORMSOURCE_Camera" | "TRANSFORMSOURCE_ParticleWorld" | "TRANSFORMSOURCE_MAX" */
    open var TransformType: String /* "TRANSFORM_Tangent" | "TRANSFORM_Local" | "TRANSFORM_World" | "TRANSFORM_View" | "TRANSFORM_Camera" | "TRANSFORM_ParticleWorld" | "TRANSFORM_MAX" */

    companion object {
        fun Load(ResourceName: String): MaterialExpressionTransform
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionTransform
        fun GetDefaultObject(): MaterialExpressionTransform
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionTransform
        fun C(Other: UObject): MaterialExpressionTransform
        fun C(Other: Any): MaterialExpressionTransform
    }
}

external object EMaterialPositionTransformSource {
    var TRANSFORMPOSSOURCE_Local: String /* "TRANSFORMPOSSOURCE_Local" */
    var TRANSFORMPOSSOURCE_World: String /* "TRANSFORMPOSSOURCE_World" */
    var TRANSFORMPOSSOURCE_TranslatedWorld: String /* "TRANSFORMPOSSOURCE_TranslatedWorld" */
    var TRANSFORMPOSSOURCE_View: String /* "TRANSFORMPOSSOURCE_View" */
    var TRANSFORMPOSSOURCE_Camera: String /* "TRANSFORMPOSSOURCE_Camera" */
    var TRANSFORMPOSSOURCE_Particle: String /* "TRANSFORMPOSSOURCE_Particle" */
    var TRANSFORMPOSSOURCE_MAX: String /* "TRANSFORMPOSSOURCE_MAX" */
}

external open class MaterialExpressionTransformPosition : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput
    open var TransformSourceType: String /* "TRANSFORMPOSSOURCE_Local" | "TRANSFORMPOSSOURCE_World" | "TRANSFORMPOSSOURCE_TranslatedWorld" | "TRANSFORMPOSSOURCE_View" | "TRANSFORMPOSSOURCE_Camera" | "TRANSFORMPOSSOURCE_Particle" | "TRANSFORMPOSSOURCE_MAX" */
    open var TransformType: String /* "TRANSFORMPOSSOURCE_Local" | "TRANSFORMPOSSOURCE_World" | "TRANSFORMPOSSOURCE_TranslatedWorld" | "TRANSFORMPOSSOURCE_View" | "TRANSFORMPOSSOURCE_Camera" | "TRANSFORMPOSSOURCE_Particle" | "TRANSFORMPOSSOURCE_MAX" */

    companion object {
        fun Load(ResourceName: String): MaterialExpressionTransformPosition
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionTransformPosition
        fun GetDefaultObject(): MaterialExpressionTransformPosition
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionTransformPosition
        fun C(Other: UObject): MaterialExpressionTransformPosition
        fun C(Other: Any): MaterialExpressionTransformPosition
    }
}

external open class MaterialExpressionTruncate : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionTruncate
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionTruncate
        fun GetDefaultObject(): MaterialExpressionTruncate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionTruncate
        fun C(Other: UObject): MaterialExpressionTruncate
        fun C(Other: Any): MaterialExpressionTruncate
    }
}

external open class MaterialExpressionTwoSidedSign : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionTwoSidedSign
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionTwoSidedSign
        fun GetDefaultObject(): MaterialExpressionTwoSidedSign
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionTwoSidedSign
        fun C(Other: UObject): MaterialExpressionTwoSidedSign
        fun C(Other: Any): MaterialExpressionTwoSidedSign
    }
}

external object EVectorNoiseFunction {
    var VNF_CellnoiseALU: String /* "VNF_CellnoiseALU" */
    var VNF_VectorALU: String /* "VNF_VectorALU" */
    var VNF_GradientALU: String /* "VNF_GradientALU" */
    var VNF_CurlALU: String /* "VNF_CurlALU" */
    var VNF_VoronoiALU: String /* "VNF_VoronoiALU" */
    var VNF_MAX: String /* "VNF_MAX" */
}

external open class MaterialExpressionVectorNoise : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Position: ExpressionInput
    open var NoiseFunction: String /* "VNF_CellnoiseALU" | "VNF_VectorALU" | "VNF_GradientALU" | "VNF_CurlALU" | "VNF_VoronoiALU" | "VNF_MAX" */
    open var Quality: Number
    open var bTiling: Boolean
    open var TileSize: Any

    companion object {
        fun Load(ResourceName: String): MaterialExpressionVectorNoise
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionVectorNoise
        fun GetDefaultObject(): MaterialExpressionVectorNoise
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionVectorNoise
        fun C(Other: UObject): MaterialExpressionVectorNoise
        fun C(Other: Any): MaterialExpressionVectorNoise
    }
}

external open class MaterialExpressionVertexColor : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionVertexColor
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionVertexColor
        fun GetDefaultObject(): MaterialExpressionVertexColor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionVertexColor
        fun C(Other: UObject): MaterialExpressionVertexColor
        fun C(Other: Any): MaterialExpressionVertexColor
    }
}

external open class MaterialExpressionVertexInterpolator : MaterialExpressionCustomOutput {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionVertexInterpolator
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionVertexInterpolator
        fun GetDefaultObject(): MaterialExpressionVertexInterpolator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionVertexInterpolator
        fun C(Other: UObject): MaterialExpressionVertexInterpolator
        fun C(Other: Any): MaterialExpressionVertexInterpolator
    }
}

external open class MaterialExpressionVertexNormalWS : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionVertexNormalWS
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionVertexNormalWS
        fun GetDefaultObject(): MaterialExpressionVertexNormalWS
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionVertexNormalWS
        fun C(Other: UObject): MaterialExpressionVertexNormalWS
        fun C(Other: Any): MaterialExpressionVertexNormalWS
    }
}

external open class MaterialExpressionVertexTangentWS : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionVertexTangentWS
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionVertexTangentWS
        fun GetDefaultObject(): MaterialExpressionVertexTangentWS
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionVertexTangentWS
        fun C(Other: UObject): MaterialExpressionVertexTangentWS
        fun C(Other: Any): MaterialExpressionVertexTangentWS
    }
}

external object EMaterialExposedViewProperty {
    var MEVP_BufferSize: String /* "MEVP_BufferSize" */
    var MEVP_FieldOfView: String /* "MEVP_FieldOfView" */
    var MEVP_TanHalfFieldOfView: String /* "MEVP_TanHalfFieldOfView" */
    var MEVP_ViewSize: String /* "MEVP_ViewSize" */
    var MEVP_WorldSpaceViewPosition: String /* "MEVP_WorldSpaceViewPosition" */
    var MEVP_WorldSpaceCameraPosition: String /* "MEVP_WorldSpaceCameraPosition" */
    var MEVP_ViewportOffset: String /* "MEVP_ViewportOffset" */
    var MEVP_TemporalSampleCount: String /* "MEVP_TemporalSampleCount" */
    var MEVP_TemporalSampleIndex: String /* "MEVP_TemporalSampleIndex" */
    var MEVP_TemporalSampleOffset: String /* "MEVP_TemporalSampleOffset" */
    var MEVP_RuntimeVirtualTextureOutputLevel: String /* "MEVP_RuntimeVirtualTextureOutputLevel" */
    var MEVP_RuntimeVirtualTextureOutputDerivative: String /* "MEVP_RuntimeVirtualTextureOutputDerivative" */
    var MEVP_PreExposure: String /* "MEVP_PreExposure" */
    var MEVP_RuntimeVirtualTextureMaxLevel: String /* "MEVP_RuntimeVirtualTextureMaxLevel" */
    var MEVP_MAX: String /* "MEVP_MAX" */
}

external open class MaterialExpressionViewProperty : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Property: String /* "MEVP_BufferSize" | "MEVP_FieldOfView" | "MEVP_TanHalfFieldOfView" | "MEVP_ViewSize" | "MEVP_WorldSpaceViewPosition" | "MEVP_WorldSpaceCameraPosition" | "MEVP_ViewportOffset" | "MEVP_TemporalSampleCount" | "MEVP_TemporalSampleIndex" | "MEVP_TemporalSampleOffset" | "MEVP_RuntimeVirtualTextureOutputLevel" | "MEVP_RuntimeVirtualTextureOutputDerivative" | "MEVP_PreExposure" | "MEVP_RuntimeVirtualTextureMaxLevel" | "MEVP_MAX" */

    companion object {
        fun Load(ResourceName: String): MaterialExpressionViewProperty
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionViewProperty
        fun GetDefaultObject(): MaterialExpressionViewProperty
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionViewProperty
        fun C(Other: UObject): MaterialExpressionViewProperty
        fun C(Other: Any): MaterialExpressionViewProperty
    }
}

external open class MaterialExpressionViewSize : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionViewSize
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionViewSize
        fun GetDefaultObject(): MaterialExpressionViewSize
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionViewSize
        fun C(Other: UObject): MaterialExpressionViewSize
        fun C(Other: Any): MaterialExpressionViewSize
    }
}

external open class MaterialExpressionVirtualTextureFeatureSwitch : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var No: ExpressionInput
    open var Yes: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionVirtualTextureFeatureSwitch
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionVirtualTextureFeatureSwitch
        fun GetDefaultObject(): MaterialExpressionVirtualTextureFeatureSwitch
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionVirtualTextureFeatureSwitch
        fun C(Other: UObject): MaterialExpressionVirtualTextureFeatureSwitch
        fun C(Other: Any): MaterialExpressionVirtualTextureFeatureSwitch
    }
}

external open class MaterialExpressionVolumetricAdvancedMaterialInput : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionVolumetricAdvancedMaterialInput
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionVolumetricAdvancedMaterialInput
        fun GetDefaultObject(): MaterialExpressionVolumetricAdvancedMaterialInput
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionVolumetricAdvancedMaterialInput
        fun C(Other: UObject): MaterialExpressionVolumetricAdvancedMaterialInput
        fun C(Other: Any): MaterialExpressionVolumetricAdvancedMaterialInput
    }
}

external open class MaterialExpressionVolumetricAdvancedMaterialOutput : MaterialExpressionCustomOutput {
    constructor()
    constructor(Outer: UObject)
    open var PhaseG: ExpressionInput
    open var PhaseG2: ExpressionInput
    open var PhaseBlend: ExpressionInput
    open var MultiScatteringContribution: ExpressionInput
    open var MultiScatteringOcclusion: ExpressionInput
    open var MultiScatteringEccentricity: ExpressionInput
    open var ConservativeDensity: ExpressionInput
    open var ConstPhaseG: Number
    open var ConstPhaseG2: Number
    open var ConstPhaseBlend: Number
    open var PerSamplePhaseEvaluation: Boolean
    open var MultiScatteringApproximationOctaveCount: Any
    open var ConstMultiScatteringContribution: Number
    open var ConstMultiScatteringOcclusion: Number
    open var ConstMultiScatteringEccentricity: Number
    open var bGroundContribution: Boolean
    open var bGrayScaleMaterial: Boolean
    open var bRayMarchVolumeShadow: Boolean

    companion object {
        fun Load(ResourceName: String): MaterialExpressionVolumetricAdvancedMaterialOutput
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionVolumetricAdvancedMaterialOutput
        fun GetDefaultObject(): MaterialExpressionVolumetricAdvancedMaterialOutput
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionVolumetricAdvancedMaterialOutput
        fun C(Other: UObject): MaterialExpressionVolumetricAdvancedMaterialOutput
        fun C(Other: Any): MaterialExpressionVolumetricAdvancedMaterialOutput
    }
}

external object EWorldPositionIncludedOffsets {
    var WPT_Default: String /* "WPT_Default" */
    var WPT_ExcludeAllShaderOffsets: String /* "WPT_ExcludeAllShaderOffsets" */
    var WPT_CameraRelative: String /* "WPT_CameraRelative" */
    var WPT_CameraRelativeNoOffsets: String /* "WPT_CameraRelativeNoOffsets" */
    var WPT_MAX: String /* "WPT_MAX" */
}

external open class MaterialExpressionWorldPosition : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var WorldPositionShaderOffset: String /* "WPT_Default" | "WPT_ExcludeAllShaderOffsets" | "WPT_CameraRelative" | "WPT_CameraRelativeNoOffsets" | "WPT_MAX" */

    companion object {
        fun Load(ResourceName: String): MaterialExpressionWorldPosition
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionWorldPosition
        fun GetDefaultObject(): MaterialExpressionWorldPosition
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionWorldPosition
        fun C(Other: UObject): MaterialExpressionWorldPosition
        fun C(Other: Any): MaterialExpressionWorldPosition
    }
}

external open class MaterialFunctionMaterialLayer : MaterialFunction {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialFunctionMaterialLayer
        fun Find(Outer: UObject, ResourceName: String): MaterialFunctionMaterialLayer
        fun GetDefaultObject(): MaterialFunctionMaterialLayer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialFunctionMaterialLayer
        fun C(Other: UObject): MaterialFunctionMaterialLayer
        fun C(Other: Any): MaterialFunctionMaterialLayer
    }
}

external open class MaterialFunctionMaterialLayerInstance : MaterialFunctionInstance {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialFunctionMaterialLayerInstance
        fun Find(Outer: UObject, ResourceName: String): MaterialFunctionMaterialLayerInstance
        fun GetDefaultObject(): MaterialFunctionMaterialLayerInstance
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialFunctionMaterialLayerInstance
        fun C(Other: UObject): MaterialFunctionMaterialLayerInstance
        fun C(Other: Any): MaterialFunctionMaterialLayerInstance
    }
}

external open class MaterialFunctionMaterialLayerBlend : MaterialFunction {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialFunctionMaterialLayerBlend
        fun Find(Outer: UObject, ResourceName: String): MaterialFunctionMaterialLayerBlend
        fun GetDefaultObject(): MaterialFunctionMaterialLayerBlend
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialFunctionMaterialLayerBlend
        fun C(Other: UObject): MaterialFunctionMaterialLayerBlend
        fun C(Other: Any): MaterialFunctionMaterialLayerBlend
    }
}

external open class MaterialFunctionMaterialLayerBlendInstance : MaterialFunctionInstance {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialFunctionMaterialLayerBlendInstance
        fun Find(Outer: UObject, ResourceName: String): MaterialFunctionMaterialLayerBlendInstance
        fun GetDefaultObject(): MaterialFunctionMaterialLayerBlendInstance
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialFunctionMaterialLayerBlendInstance
        fun C(Other: UObject): MaterialFunctionMaterialLayerBlendInstance
        fun C(Other: Any): MaterialFunctionMaterialLayerBlendInstance
    }
}

external open class MaterialInstanceActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var TargetActors: Array<Actor>

    companion object {
        fun GetDefaultObject(): MaterialInstanceActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialInstanceActor
        fun C(Other: UObject): MaterialInstanceActor
        fun C(Other: Any): MaterialInstanceActor
    }
}

external open class MatineeActorCameraAnim(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : MatineeActor {
    open var CameraAnim: CameraAnim

    companion object {
        fun GetDefaultObject(): MatineeActorCameraAnim
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MatineeActorCameraAnim
        fun C(Other: UObject): MatineeActorCameraAnim
        fun C(Other: Any): MatineeActorCameraAnim
    }
}

external open class MatineeAnimInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MatineeAnimInterface
        fun Find(Outer: UObject, ResourceName: String): MatineeAnimInterface
        fun GetDefaultObject(): MatineeAnimInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MatineeAnimInterface
        fun C(Other: UObject): MatineeAnimInterface
        fun C(Other: Any): MatineeAnimInterface
    }
}

external open class MatineeInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MatineeInterface
        fun Find(Outer: UObject, ResourceName: String): MatineeInterface
        fun GetDefaultObject(): MatineeInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MatineeInterface
        fun C(Other: UObject): MatineeInterface
        fun C(Other: Any): MatineeInterface
    }
}

external open class MeshMergeCullingVolume(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Volume {
    companion object {
        fun GetDefaultObject(): MeshMergeCullingVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MeshMergeCullingVolume
        fun C(Other: UObject): MeshMergeCullingVolume
        fun C(Other: Any): MeshMergeCullingVolume
    }
}

external open class MeshSimplificationSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var MeshReductionModuleName: String

    companion object {
        fun Load(ResourceName: String): MeshSimplificationSettings
        fun Find(Outer: UObject, ResourceName: String): MeshSimplificationSettings
        fun GetDefaultObject(): MeshSimplificationSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MeshSimplificationSettings
        fun C(Other: UObject): MeshSimplificationSettings
        fun C(Other: Any): MeshSimplificationSettings
    }
}

external open class MeshVertexPainterKismetLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MeshVertexPainterKismetLibrary
        fun Find(Outer: UObject, ResourceName: String): MeshVertexPainterKismetLibrary
        fun GetDefaultObject(): MeshVertexPainterKismetLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MeshVertexPainterKismetLibrary
        fun RemovePaintedVertices(StaticMeshComponent: StaticMeshComponent)
        fun PaintVerticesSingleColor(StaticMeshComponent: StaticMeshComponent, FillColor: LinearColor, bConvertToSRGB: Boolean)
        fun PaintVerticesLerpAlongAxis(StaticMeshComponent: StaticMeshComponent, StartColor: LinearColor, EndColor: LinearColor, Axis: String /* "X" | "Y" | "Z" | "EVertexPaintAxis_MAX" */, bConvertToSRGB: Boolean)
        fun C(Other: UObject): MeshVertexPainterKismetLibrary
        fun C(Other: Any): MeshVertexPainterKismetLibrary
    }
}

external open class PurchaseInfo {
    open var Identifier: String
    open var DisplayName: String
    open var DisplayDescription: String
    open var DisplayPrice: String
    open fun clone(): PurchaseInfo

    companion object {
        fun C(Other: UObject): PurchaseInfo
        fun C(Other: Any): PurchaseInfo
    }
}

external open class MicroTransactionBase : PlatformInterfaceBase {
    constructor()
    constructor(Outer: UObject)
    open var AvailableProducts: Array<PurchaseInfo>
    open var LastError: String
    open var LastErrorSolution: String

    companion object {
        fun Load(ResourceName: String): MicroTransactionBase
        fun Find(Outer: UObject, ResourceName: String): MicroTransactionBase
        fun GetDefaultObject(): MicroTransactionBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MicroTransactionBase
        fun C(Other: UObject): MicroTransactionBase
        fun C(Other: Any): MicroTransactionBase
    }
}

external open class NavAgentInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NavAgentInterface
        fun Find(Outer: UObject, ResourceName: String): NavAgentInterface
        fun GetDefaultObject(): NavAgentInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavAgentInterface
        fun C(Other: UObject): NavAgentInterface
        fun C(Other: Any): NavAgentInterface
    }
}

external open class NavEdgeProviderInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NavEdgeProviderInterface
        fun Find(Outer: UObject, ResourceName: String): NavEdgeProviderInterface
        fun GetDefaultObject(): NavEdgeProviderInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavEdgeProviderInterface
        fun C(Other: UObject): NavEdgeProviderInterface
        fun C(Other: Any): NavEdgeProviderInterface
    }
}

external open class NavigationDataInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NavigationDataInterface
        fun Find(Outer: UObject, ResourceName: String): NavigationDataInterface
        fun GetDefaultObject(): NavigationDataInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavigationDataInterface
        fun C(Other: UObject): NavigationDataInterface
        fun C(Other: Any): NavigationDataInterface
    }
}

external open class NullNavSysConfig : NavigationSystemConfig {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NullNavSysConfig
        fun Find(Outer: UObject, ResourceName: String): NullNavSysConfig
        fun GetDefaultObject(): NullNavSysConfig
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NullNavSysConfig
        fun C(Other: UObject): NullNavSysConfig
        fun C(Other: Any): NullNavSysConfig
    }
}

external open class NavPathObserverInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NavPathObserverInterface
        fun Find(Outer: UObject, ResourceName: String): NavPathObserverInterface
        fun GetDefaultObject(): NavPathObserverInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavPathObserverInterface
        fun C(Other: UObject): NavPathObserverInterface
        fun C(Other: Any): NavPathObserverInterface
    }
}

external open class NavRelevantInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NavRelevantInterface
        fun Find(Outer: UObject, ResourceName: String): NavRelevantInterface
        fun GetDefaultObject(): NavRelevantInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavRelevantInterface
        fun C(Other: UObject): NavRelevantInterface
        fun C(Other: Any): NavRelevantInterface
    }
}

external open class SimulatedClientNetConnection : NetConnection {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SimulatedClientNetConnection
        fun Find(Outer: UObject, ResourceName: String): SimulatedClientNetConnection
        fun GetDefaultObject(): SimulatedClientNetConnection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SimulatedClientNetConnection
        fun C(Other: UObject): SimulatedClientNetConnection
        fun C(Other: Any): SimulatedClientNetConnection
    }
}

external open class NetPushModelHelpers : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NetPushModelHelpers
        fun Find(Outer: UObject, ResourceName: String): NetPushModelHelpers
        fun GetDefaultObject(): NetPushModelHelpers
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NetPushModelHelpers
        fun MarkPropertyDirtyFromRepIndex(UObject: UObject, RepIndex: Number, PropertyName: String)
        fun MarkPropertyDirty(UObject: UObject, PropertyName: String)
        fun C(Other: UObject): NetPushModelHelpers
        fun C(Other: Any): NetPushModelHelpers
    }
}

external open class NetworkPredictionInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NetworkPredictionInterface
        fun Find(Outer: UObject, ResourceName: String): NetworkPredictionInterface
        fun GetDefaultObject(): NetworkPredictionInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NetworkPredictionInterface
        fun C(Other: UObject): NetworkPredictionInterface
        fun C(Other: Any): NetworkPredictionInterface
    }
}

external open class NetworkEmulationProfileDescription {
    open var ProfileName: String
    open var Tooltip: String
    open fun clone(): NetworkEmulationProfileDescription

    companion object {
        fun C(Other: UObject): NetworkEmulationProfileDescription
        fun C(Other: Any): NetworkEmulationProfileDescription
    }
}

external open class NetworkSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var bVerifyPeer: Boolean
    open var bEnableMultiplayerWorldOriginRebasing: Boolean
    open var MaxRepArraySize: Number
    open var MaxRepArrayMemory: Number
    open var NetworkEmulationProfiles: Array<NetworkEmulationProfileDescription>

    companion object {
        fun Load(ResourceName: String): NetworkSettings
        fun Find(Outer: UObject, ResourceName: String): NetworkSettings
        fun GetDefaultObject(): NetworkSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NetworkSettings
        fun C(Other: UObject): NetworkSettings
        fun C(Other: Any): NetworkSettings
    }
}

external open class NodeMappingProviderInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NodeMappingProviderInterface
        fun Find(Outer: UObject, ResourceName: String): NodeMappingProviderInterface
        fun GetDefaultObject(): NodeMappingProviderInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NodeMappingProviderInterface
        fun C(Other: UObject): NodeMappingProviderInterface
        fun C(Other: Any): NodeMappingProviderInterface
    }
}

external open class Note(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var text: String
    open var SpriteComponent: BillboardComponent
    open var ArrowComponent: ArrowComponent

    companion object {
        fun GetDefaultObject(): Note
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Note
        fun C(Other: UObject): Note
        fun C(Other: Any): Note
    }
}

external open class ObjectLibrary : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ObjectBaseClass: UnrealEngineClass
    open var bHasBlueprintClasses: Boolean
    open var Objects: Array<UObject>
    open var WeakObjects: Array<Any>
    open var bUseWeakReferences: Boolean
    open var bIsFullyLoaded: Boolean

    companion object {
        fun Load(ResourceName: String): ObjectLibrary
        fun Find(Outer: UObject, ResourceName: String): ObjectLibrary
        fun GetDefaultObject(): ObjectLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ObjectLibrary
        fun C(Other: UObject): ObjectLibrary
        fun C(Other: Any): ObjectLibrary
    }
}

external open class ObjectReferencer : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ReferencedObjects: Array<UObject>

    companion object {
        fun Load(ResourceName: String): ObjectReferencer
        fun Find(Outer: UObject, ResourceName: String): ObjectReferencer
        fun GetDefaultObject(): ObjectReferencer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ObjectReferencer
        fun C(Other: UObject): ObjectReferencer
        fun C(Other: Any): ObjectReferencer
    }
}

external open class ObjectTraceWorldSubsystem : WorldSubsystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ObjectTraceWorldSubsystem
        fun Find(Outer: UObject, ResourceName: String): ObjectTraceWorldSubsystem
        fun GetDefaultObject(): ObjectTraceWorldSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ObjectTraceWorldSubsystem
        fun C(Other: UObject): ObjectTraceWorldSubsystem
        fun C(Other: Any): ObjectTraceWorldSubsystem
    }
}

external open class OnlineBlueprintCallProxyBase : BlueprintAsyncActionBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): OnlineBlueprintCallProxyBase
        fun Find(Outer: UObject, ResourceName: String): OnlineBlueprintCallProxyBase
        fun GetDefaultObject(): OnlineBlueprintCallProxyBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): OnlineBlueprintCallProxyBase
        fun C(Other: UObject): OnlineBlueprintCallProxyBase
        fun C(Other: Any): OnlineBlueprintCallProxyBase
    }
}

external open class OnlineEngineInterface : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): OnlineEngineInterface
        fun Find(Outer: UObject, ResourceName: String): OnlineEngineInterface
        fun GetDefaultObject(): OnlineEngineInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): OnlineEngineInterface
        fun C(Other: UObject): OnlineEngineInterface
        fun C(Other: Any): OnlineEngineInterface
    }
}

external open class PackageMapClient : PackageMap {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PackageMapClient
        fun Find(Outer: UObject, ResourceName: String): PackageMapClient
        fun GetDefaultObject(): PackageMapClient
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PackageMapClient
        fun C(Other: UObject): PackageMapClient
        fun C(Other: Any): PackageMapClient
    }
}

external open class PainCausingVolume(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : PhysicsVolume {
    open var bPainCausing: Boolean
    open var DamagePerSec: Number
    open var DamageType: UnrealEngineClass
    open var PainInterval: Number
    open var bEntryPain: Boolean
    open var BACKUP_bPainCausing: Boolean
    open var DamageInstigator: Controller

    companion object {
        fun GetDefaultObject(): PainCausingVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PainCausingVolume
        fun C(Other: UObject): PainCausingVolume
        fun C(Other: Any): PainCausingVolume
    }
}

external open class ParticleModuleAccelerationBase : ParticleModule {
    constructor()
    constructor(Outer: UObject)
    open var bAlwaysInWorldSpace: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleAccelerationBase
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleAccelerationBase
        fun GetDefaultObject(): ParticleModuleAccelerationBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleAccelerationBase
        fun C(Other: UObject): ParticleModuleAccelerationBase
        fun C(Other: Any): ParticleModuleAccelerationBase
    }
}

external open class ParticleModuleAcceleration : ParticleModuleAccelerationBase {
    constructor()
    constructor(Outer: UObject)
    open var Acceleration: RawDistributionVector
    open var bApplyOwnerScale: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleAcceleration
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleAcceleration
        fun GetDefaultObject(): ParticleModuleAcceleration
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleAcceleration
        fun C(Other: UObject): ParticleModuleAcceleration
        fun C(Other: Any): ParticleModuleAcceleration
    }
}

external open class ParticleModuleAccelerationConstant : ParticleModuleAccelerationBase {
    constructor()
    constructor(Outer: UObject)
    open var Acceleration: Vector

    companion object {
        fun Load(ResourceName: String): ParticleModuleAccelerationConstant
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleAccelerationConstant
        fun GetDefaultObject(): ParticleModuleAccelerationConstant
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleAccelerationConstant
        fun C(Other: UObject): ParticleModuleAccelerationConstant
        fun C(Other: Any): ParticleModuleAccelerationConstant
    }
}

external open class ParticleModuleAccelerationDrag : ParticleModuleAccelerationBase {
    constructor()
    constructor(Outer: UObject)
    open var DragCoefficient: DistributionFloat
    open var DragCoefficientRaw: RawDistributionFloat

    companion object {
        fun Load(ResourceName: String): ParticleModuleAccelerationDrag
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleAccelerationDrag
        fun GetDefaultObject(): ParticleModuleAccelerationDrag
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleAccelerationDrag
        fun C(Other: UObject): ParticleModuleAccelerationDrag
        fun C(Other: Any): ParticleModuleAccelerationDrag
    }
}

external open class ParticleModuleAccelerationDragScaleOverLife : ParticleModuleAccelerationBase {
    constructor()
    constructor(Outer: UObject)
    open var DragScale: DistributionFloat
    open var DragScaleRaw: RawDistributionFloat

    companion object {
        fun Load(ResourceName: String): ParticleModuleAccelerationDragScaleOverLife
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleAccelerationDragScaleOverLife
        fun GetDefaultObject(): ParticleModuleAccelerationDragScaleOverLife
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleAccelerationDragScaleOverLife
        fun C(Other: UObject): ParticleModuleAccelerationDragScaleOverLife
        fun C(Other: Any): ParticleModuleAccelerationDragScaleOverLife
    }
}

external open class ParticleModuleAccelerationOverLifetime : ParticleModuleAccelerationBase {
    constructor()
    constructor(Outer: UObject)
    open var AccelOverLife: RawDistributionVector

    companion object {
        fun Load(ResourceName: String): ParticleModuleAccelerationOverLifetime
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleAccelerationOverLifetime
        fun GetDefaultObject(): ParticleModuleAccelerationOverLifetime
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleAccelerationOverLifetime
        fun C(Other: UObject): ParticleModuleAccelerationOverLifetime
        fun C(Other: Any): ParticleModuleAccelerationOverLifetime
    }
}

external open class ParticleModuleAttractorBase : ParticleModule {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ParticleModuleAttractorBase
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleAttractorBase
        fun GetDefaultObject(): ParticleModuleAttractorBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleAttractorBase
        fun C(Other: UObject): ParticleModuleAttractorBase
        fun C(Other: Any): ParticleModuleAttractorBase
    }
}

external open class ParticleModuleAttractorLine : ParticleModuleAttractorBase {
    constructor()
    constructor(Outer: UObject)
    open var EndPoint0: Vector
    open var EndPoint1: Vector
    open var Range: RawDistributionFloat
    open var Strength: RawDistributionFloat

    companion object {
        fun Load(ResourceName: String): ParticleModuleAttractorLine
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleAttractorLine
        fun GetDefaultObject(): ParticleModuleAttractorLine
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleAttractorLine
        fun C(Other: UObject): ParticleModuleAttractorLine
        fun C(Other: Any): ParticleModuleAttractorLine
    }
}

external object EAttractorParticleSelectionMethod {
    var EAPSM_Random: String /* "EAPSM_Random" */
    var EAPSM_Sequential: String /* "EAPSM_Sequential" */
    var EAPSM_MAX: String /* "EAPSM_MAX" */
}

external open class ParticleModuleAttractorParticle : ParticleModuleAttractorBase {
    constructor()
    constructor(Outer: UObject)
    open var EmitterName: String
    open var Range: RawDistributionFloat
    open var bStrengthByDistance: Boolean
    open var Strength: RawDistributionFloat
    open var bAffectBaseVelocity: Boolean
    open var SelectionMethod: String /* "EAPSM_Random" | "EAPSM_Sequential" | "EAPSM_MAX" */
    open var bRenewSource: Boolean
    open var bInheritSourceVel: Boolean
    open var LastSelIndex: Number

    companion object {
        fun Load(ResourceName: String): ParticleModuleAttractorParticle
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleAttractorParticle
        fun GetDefaultObject(): ParticleModuleAttractorParticle
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleAttractorParticle
        fun C(Other: UObject): ParticleModuleAttractorParticle
        fun C(Other: Any): ParticleModuleAttractorParticle
    }
}

external open class ParticleModuleAttractorPoint : ParticleModuleAttractorBase {
    constructor()
    constructor(Outer: UObject)
    open var Position: RawDistributionVector
    open var Range: RawDistributionFloat
    open var Strength: RawDistributionFloat
    open var StrengthByDistance: Boolean
    open var bAffectBaseVelocity: Boolean
    open var bOverrideVelocity: Boolean
    open var bUseWorldSpacePosition: Boolean
    open var Positive_X: Boolean
    open var Positive_Y: Boolean
    open var Positive_Z: Boolean
    open var Negative_X: Boolean
    open var Negative_Y: Boolean
    open var Negative_Z: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleAttractorPoint
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleAttractorPoint
        fun GetDefaultObject(): ParticleModuleAttractorPoint
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleAttractorPoint
        fun C(Other: UObject): ParticleModuleAttractorPoint
        fun C(Other: Any): ParticleModuleAttractorPoint
    }
}

external open class ParticleModuleAttractorPointGravity : ParticleModuleAttractorBase {
    constructor()
    constructor(Outer: UObject)
    open var Position: Vector
    open var Radius: Number
    open var Strength: DistributionFloat
    open var StrengthRaw: RawDistributionFloat

    companion object {
        fun Load(ResourceName: String): ParticleModuleAttractorPointGravity
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleAttractorPointGravity
        fun GetDefaultObject(): ParticleModuleAttractorPointGravity
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleAttractorPointGravity
        fun C(Other: UObject): ParticleModuleAttractorPointGravity
        fun C(Other: Any): ParticleModuleAttractorPointGravity
    }
}

external open class ParticleModuleBeamBase : ParticleModule {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ParticleModuleBeamBase
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleBeamBase
        fun GetDefaultObject(): ParticleModuleBeamBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleBeamBase
        fun C(Other: UObject): ParticleModuleBeamBase
        fun C(Other: Any): ParticleModuleBeamBase
    }
}

external object BeamModifierType {
    var PEB2MT_Source: String /* "PEB2MT_Source" */
    var PEB2MT_Target: String /* "PEB2MT_Target" */
    var PEB2MT_MAX: String /* "PEB2MT_MAX" */
}

external open class BeamModifierOptions {
    open var bModify: Boolean
    open var bScale: Boolean
    open var bLock: Boolean
    open fun clone(): BeamModifierOptions

    companion object {
        fun C(Other: UObject): BeamModifierOptions
        fun C(Other: Any): BeamModifierOptions
    }
}

external open class ParticleModuleBeamModifier : ParticleModuleBeamBase {
    constructor()
    constructor(Outer: UObject)
    open var ModifierType: String /* "PEB2MT_Source" | "PEB2MT_Target" | "PEB2MT_MAX" */
    open var PositionOptions: BeamModifierOptions
    open var Position: RawDistributionVector
    open var TangentOptions: BeamModifierOptions
    open var Tangent: RawDistributionVector
    open var bAbsoluteTangent: Boolean
    open var StrengthOptions: BeamModifierOptions
    open var Strength: RawDistributionFloat

    companion object {
        fun Load(ResourceName: String): ParticleModuleBeamModifier
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleBeamModifier
        fun GetDefaultObject(): ParticleModuleBeamModifier
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleBeamModifier
        fun C(Other: UObject): ParticleModuleBeamModifier
        fun C(Other: Any): ParticleModuleBeamModifier
    }
}

external open class ParticleModuleBeamNoise : ParticleModuleBeamBase {
    constructor()
    constructor(Outer: UObject)
    open var bLowFreq_Enabled: Boolean
    open var Frequency: Number
    open var Frequency_LowRange: Number
    open var NoiseRange: RawDistributionVector
    open var NoiseRangeScale: RawDistributionFloat
    open var bNRScaleEmitterTime: Boolean
    open var NoiseSpeed: RawDistributionVector
    open var bSmooth: Boolean
    open var NoiseLockRadius: Number
    open var bNoiseLock: Boolean
    open var bOscillate: Boolean
    open var NoiseLockTime: Number
    open var NoiseTension: Number
    open var bUseNoiseTangents: Boolean
    open var NoiseTangentStrength: RawDistributionFloat
    open var NoiseTessellation: Number
    open var bTargetNoise: Boolean
    open var FrequencyDistance: Number
    open var bApplyNoiseScale: Boolean
    open var NoiseScale: RawDistributionFloat

    companion object {
        fun Load(ResourceName: String): ParticleModuleBeamNoise
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleBeamNoise
        fun GetDefaultObject(): ParticleModuleBeamNoise
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleBeamNoise
        fun C(Other: UObject): ParticleModuleBeamNoise
        fun C(Other: Any): ParticleModuleBeamNoise
    }
}

external object Beam2SourceTargetMethod {
    var PEB2STM_Default: String /* "PEB2STM_Default" */
    var PEB2STM_UserSet: String /* "PEB2STM_UserSet" */
    var PEB2STM_Emitter: String /* "PEB2STM_Emitter" */
    var PEB2STM_Particle: String /* "PEB2STM_Particle" */
    var PEB2STM_Actor: String /* "PEB2STM_Actor" */
    var PEB2STM_MAX: String /* "PEB2STM_MAX" */
}

external object Beam2SourceTargetTangentMethod {
    var PEB2STTM_Direct: String /* "PEB2STTM_Direct" */
    var PEB2STTM_UserSet: String /* "PEB2STTM_UserSet" */
    var PEB2STTM_Distribution: String /* "PEB2STTM_Distribution" */
    var PEB2STTM_Emitter: String /* "PEB2STTM_Emitter" */
    var PEB2STTM_MAX: String /* "PEB2STTM_MAX" */
}

external open class ParticleModuleBeamSource : ParticleModuleBeamBase {
    constructor()
    constructor(Outer: UObject)
    open var SourceMethod: String /* "PEB2STM_Default" | "PEB2STM_UserSet" | "PEB2STM_Emitter" | "PEB2STM_Particle" | "PEB2STM_Actor" | "PEB2STM_MAX" */
    open var SourceName: String
    open var bSourceAbsolute: Boolean
    open var Source: RawDistributionVector
    open var bLockSource: Boolean
    open var SourceTangentMethod: String /* "PEB2STTM_Direct" | "PEB2STTM_UserSet" | "PEB2STTM_Distribution" | "PEB2STTM_Emitter" | "PEB2STTM_MAX" */
    open var SourceTangent: RawDistributionVector
    open var bLockSourceTangent: Boolean
    open var SourceStrength: RawDistributionFloat
    open var bLockSourceStength: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleBeamSource
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleBeamSource
        fun GetDefaultObject(): ParticleModuleBeamSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleBeamSource
        fun C(Other: UObject): ParticleModuleBeamSource
        fun C(Other: Any): ParticleModuleBeamSource
    }
}

external open class ParticleModuleBeamTarget : ParticleModuleBeamBase {
    constructor()
    constructor(Outer: UObject)
    open var TargetMethod: String /* "PEB2STM_Default" | "PEB2STM_UserSet" | "PEB2STM_Emitter" | "PEB2STM_Particle" | "PEB2STM_Actor" | "PEB2STM_MAX" */
    open var TargetName: String
    open var Target: RawDistributionVector
    open var bTargetAbsolute: Boolean
    open var bLockTarget: Boolean
    open var TargetTangentMethod: String /* "PEB2STTM_Direct" | "PEB2STTM_UserSet" | "PEB2STTM_Distribution" | "PEB2STTM_Emitter" | "PEB2STTM_MAX" */
    open var TargetTangent: RawDistributionVector
    open var bLockTargetTangent: Boolean
    open var TargetStrength: RawDistributionFloat
    open var bLockTargetStength: Boolean
    open var LockRadius: Number

    companion object {
        fun Load(ResourceName: String): ParticleModuleBeamTarget
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleBeamTarget
        fun GetDefaultObject(): ParticleModuleBeamTarget
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleBeamTarget
        fun C(Other: UObject): ParticleModuleBeamTarget
        fun C(Other: Any): ParticleModuleBeamTarget
    }
}

external open class ParticleModuleCameraBase : ParticleModule {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ParticleModuleCameraBase
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleCameraBase
        fun GetDefaultObject(): ParticleModuleCameraBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleCameraBase
        fun C(Other: UObject): ParticleModuleCameraBase
        fun C(Other: Any): ParticleModuleCameraBase
    }
}

external object EParticleCameraOffsetUpdateMethod {
    var EPCOUM_DirectSet: String /* "EPCOUM_DirectSet" */
    var EPCOUM_Additive: String /* "EPCOUM_Additive" */
    var EPCOUM_Scalar: String /* "EPCOUM_Scalar" */
    var EPCOUM_MAX: String /* "EPCOUM_MAX" */
}

external open class ParticleModuleCameraOffset : ParticleModuleCameraBase {
    constructor()
    constructor(Outer: UObject)
    open var CameraOffset: RawDistributionFloat
    open var bSpawnTimeOnly: Boolean
    open var UpdateMethod: String /* "EPCOUM_DirectSet" | "EPCOUM_Additive" | "EPCOUM_Scalar" | "EPCOUM_MAX" */

    companion object {
        fun Load(ResourceName: String): ParticleModuleCameraOffset
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleCameraOffset
        fun GetDefaultObject(): ParticleModuleCameraOffset
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleCameraOffset
        fun C(Other: UObject): ParticleModuleCameraOffset
        fun C(Other: Any): ParticleModuleCameraOffset
    }
}

external open class ParticleModuleCollisionBase : ParticleModule {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ParticleModuleCollisionBase
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleCollisionBase
        fun GetDefaultObject(): ParticleModuleCollisionBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleCollisionBase
        fun C(Other: UObject): ParticleModuleCollisionBase
        fun C(Other: Any): ParticleModuleCollisionBase
    }
}

external object EParticleCollisionComplete {
    var EPCC_Kill: String /* "EPCC_Kill" */
    var EPCC_Freeze: String /* "EPCC_Freeze" */
    var EPCC_HaltCollisions: String /* "EPCC_HaltCollisions" */
    var EPCC_FreezeTranslation: String /* "EPCC_FreezeTranslation" */
    var EPCC_FreezeRotation: String /* "EPCC_FreezeRotation" */
    var EPCC_FreezeMovement: String /* "EPCC_FreezeMovement" */
    var EPCC_MAX: String /* "EPCC_MAX" */
}

external open class ParticleModuleCollision : ParticleModuleCollisionBase {
    constructor()
    constructor(Outer: UObject)
    open var DampingFactor: RawDistributionVector
    open var DampingFactorRotation: RawDistributionVector
    open var MaxCollisions: RawDistributionFloat
    open var CollisionCompletionOption: String /* "EPCC_Kill" | "EPCC_Freeze" | "EPCC_HaltCollisions" | "EPCC_FreezeTranslation" | "EPCC_FreezeRotation" | "EPCC_FreezeMovement" | "EPCC_MAX" */
    open var CollisionTypes: Array<String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */>
    open var bApplyPhysics: Boolean
    open var bIgnoreTriggerVolumes: Boolean
    open var ParticleMass: RawDistributionFloat
    open var DirScalar: Number
    open var bPawnsDoNotDecrementCount: Boolean
    open var bOnlyVerticalNormalsDecrementCount: Boolean
    open var VerticalFudgeFactor: Number
    open var DelayAmount: RawDistributionFloat
    open var bDropDetail: Boolean
    open var bCollideOnlyIfVisible: Boolean
    open var bIgnoreSourceActor: Boolean
    open var MaxCollisionDistance: Number

    companion object {
        fun Load(ResourceName: String): ParticleModuleCollision
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleCollision
        fun GetDefaultObject(): ParticleModuleCollision
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleCollision
        fun C(Other: UObject): ParticleModuleCollision
        fun C(Other: Any): ParticleModuleCollision
    }
}

external object EParticleCollisionResponse {
    var Bounce: String /* "Bounce" */
    var Stop: String /* "Stop" */
    var Kill: String /* "Kill" */
    var EParticleCollisionResponse_MAX: String /* "EParticleCollisionResponse_MAX" */
}

external object EParticleCollisionMode {
    var SceneDepth: String /* "SceneDepth" */
    var DistanceField: String /* "DistanceField" */
    var EParticleCollisionMode_MAX: String /* "EParticleCollisionMode_MAX" */
}

external open class ParticleModuleCollisionGPU : ParticleModuleCollisionBase {
    constructor()
    constructor(Outer: UObject)
    open var Resilience: RawDistributionFloat
    open var ResilienceScaleOverLife: RawDistributionFloat
    open var Friction: Number
    open var RandomSpread: Number
    open var RandomDistribution: Number
    open var RadiusScale: Number
    open var RadiusBias: Number
    open var Response: String /* "Bounce" | "Stop" | "Kill" | "EParticleCollisionResponse_MAX" */
    open var CollisionMode: String /* "SceneDepth" | "DistanceField" | "EParticleCollisionMode_MAX" */

    companion object {
        fun Load(ResourceName: String): ParticleModuleCollisionGPU
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleCollisionGPU
        fun GetDefaultObject(): ParticleModuleCollisionGPU
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleCollisionGPU
        fun C(Other: UObject): ParticleModuleCollisionGPU
        fun C(Other: Any): ParticleModuleCollisionGPU
    }
}

external open class ParticleModuleColorBase : ParticleModule {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ParticleModuleColorBase
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleColorBase
        fun GetDefaultObject(): ParticleModuleColorBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleColorBase
        fun C(Other: UObject): ParticleModuleColorBase
        fun C(Other: Any): ParticleModuleColorBase
    }
}

external open class ParticleModuleColor : ParticleModuleColorBase {
    constructor()
    constructor(Outer: UObject)
    open var StartColor: RawDistributionVector
    open var StartAlpha: RawDistributionFloat
    open var bClampAlpha: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleColor
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleColor
        fun GetDefaultObject(): ParticleModuleColor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleColor
        fun C(Other: UObject): ParticleModuleColor
        fun C(Other: Any): ParticleModuleColor
    }
}

external open class ParticleRandomSeedInfo {
    open var ParameterName: String
    open var bGetSeedFromInstance: Boolean
    open var bInstanceSeedIsIndex: Boolean
    open var bResetSeedOnEmitterLooping: Boolean
    open var bRandomlySelectSeedArray: Boolean
    open var RandomSeeds: Array<Number>
    open fun clone(): ParticleRandomSeedInfo

    companion object {
        fun C(Other: UObject): ParticleRandomSeedInfo
        fun C(Other: Any): ParticleRandomSeedInfo
    }
}

external open class ParticleModuleColor_Seeded : ParticleModuleColor {
    constructor()
    constructor(Outer: UObject)
    open var RandomSeedInfo: ParticleRandomSeedInfo

    companion object {
        fun Load(ResourceName: String): ParticleModuleColor_Seeded
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleColor_Seeded
        fun GetDefaultObject(): ParticleModuleColor_Seeded
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleColor_Seeded
        fun C(Other: UObject): ParticleModuleColor_Seeded
        fun C(Other: Any): ParticleModuleColor_Seeded
    }
}

external open class ParticleModuleColorOverLife : ParticleModuleColorBase {
    constructor()
    constructor(Outer: UObject)
    open var ColorOverLife: RawDistributionVector
    open var AlphaOverLife: RawDistributionFloat
    open var bClampAlpha: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleColorOverLife
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleColorOverLife
        fun GetDefaultObject(): ParticleModuleColorOverLife
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleColorOverLife
        fun C(Other: UObject): ParticleModuleColorOverLife
        fun C(Other: Any): ParticleModuleColorOverLife
    }
}

external open class ParticleModuleColorScaleOverLife : ParticleModuleColorBase {
    constructor()
    constructor(Outer: UObject)
    open var ColorScaleOverLife: RawDistributionVector
    open var AlphaScaleOverLife: RawDistributionFloat
    open var bEmitterTime: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleColorScaleOverLife
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleColorScaleOverLife
        fun GetDefaultObject(): ParticleModuleColorScaleOverLife
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleColorScaleOverLife
        fun C(Other: UObject): ParticleModuleColorScaleOverLife
        fun C(Other: Any): ParticleModuleColorScaleOverLife
    }
}

external open class ParticleModuleEventReceiverKillParticles : ParticleModuleEventReceiverBase {
    constructor()
    constructor(Outer: UObject)
    open var bStopSpawning: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleEventReceiverKillParticles
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleEventReceiverKillParticles
        fun GetDefaultObject(): ParticleModuleEventReceiverKillParticles
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleEventReceiverKillParticles
        fun C(Other: UObject): ParticleModuleEventReceiverKillParticles
        fun C(Other: Any): ParticleModuleEventReceiverKillParticles
    }
}

external open class ParticleModuleEventReceiverSpawn : ParticleModuleEventReceiverBase {
    constructor()
    constructor(Outer: UObject)
    open var SpawnCount: RawDistributionFloat
    open var bUseParticleTime: Boolean
    open var bUsePSysLocation: Boolean
    open var bInheritVelocity: Boolean
    open var InheritVelocityScale: RawDistributionVector
    open var PhysicalMaterials: Array<PhysicalMaterial>
    open var bBanPhysicalMaterials: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleEventReceiverSpawn
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleEventReceiverSpawn
        fun GetDefaultObject(): ParticleModuleEventReceiverSpawn
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleEventReceiverSpawn
        fun C(Other: UObject): ParticleModuleEventReceiverSpawn
        fun C(Other: Any): ParticleModuleEventReceiverSpawn
    }
}

external open class ParticleModuleKillBase : ParticleModule {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ParticleModuleKillBase
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleKillBase
        fun GetDefaultObject(): ParticleModuleKillBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleKillBase
        fun C(Other: UObject): ParticleModuleKillBase
        fun C(Other: Any): ParticleModuleKillBase
    }
}

external open class ParticleModuleKillBox : ParticleModuleKillBase {
    constructor()
    constructor(Outer: UObject)
    open var LowerLeftCorner: RawDistributionVector
    open var UpperRightCorner: RawDistributionVector
    open var bAbsolute: Boolean
    open var bKillInside: Boolean
    open var bAxisAlignedAndFixedSize: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleKillBox
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleKillBox
        fun GetDefaultObject(): ParticleModuleKillBox
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleKillBox
        fun C(Other: UObject): ParticleModuleKillBox
        fun C(Other: Any): ParticleModuleKillBox
    }
}

external open class ParticleModuleKillHeight : ParticleModuleKillBase {
    constructor()
    constructor(Outer: UObject)
    open var Height: RawDistributionFloat
    open var bAbsolute: Boolean
    open var bFloor: Boolean
    open var bApplyPSysScale: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleKillHeight
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleKillHeight
        fun GetDefaultObject(): ParticleModuleKillHeight
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleKillHeight
        fun C(Other: UObject): ParticleModuleKillHeight
        fun C(Other: Any): ParticleModuleKillHeight
    }
}

external open class ParticleModuleLifetimeBase : ParticleModule {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ParticleModuleLifetimeBase
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleLifetimeBase
        fun GetDefaultObject(): ParticleModuleLifetimeBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleLifetimeBase
        fun C(Other: UObject): ParticleModuleLifetimeBase
        fun C(Other: Any): ParticleModuleLifetimeBase
    }
}

external open class ParticleModuleLifetime : ParticleModuleLifetimeBase {
    constructor()
    constructor(Outer: UObject)
    open var LifeTime: RawDistributionFloat

    companion object {
        fun Load(ResourceName: String): ParticleModuleLifetime
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleLifetime
        fun GetDefaultObject(): ParticleModuleLifetime
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleLifetime
        fun C(Other: UObject): ParticleModuleLifetime
        fun C(Other: Any): ParticleModuleLifetime
    }
}

external open class ParticleModuleLifetime_Seeded : ParticleModuleLifetime {
    constructor()
    constructor(Outer: UObject)
    open var RandomSeedInfo: ParticleRandomSeedInfo

    companion object {
        fun Load(ResourceName: String): ParticleModuleLifetime_Seeded
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleLifetime_Seeded
        fun GetDefaultObject(): ParticleModuleLifetime_Seeded
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleLifetime_Seeded
        fun C(Other: UObject): ParticleModuleLifetime_Seeded
        fun C(Other: Any): ParticleModuleLifetime_Seeded
    }
}

external open class ParticleModuleLightBase : ParticleModule {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ParticleModuleLightBase
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleLightBase
        fun GetDefaultObject(): ParticleModuleLightBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleLightBase
        fun C(Other: UObject): ParticleModuleLightBase
        fun C(Other: Any): ParticleModuleLightBase
    }
}

external open class ParticleModuleLight : ParticleModuleLightBase {
    constructor()
    constructor(Outer: UObject)
    open var bUseInverseSquaredFalloff: Boolean
    open var bAffectsTranslucency: Boolean
    open var bPreviewLightRadius: Boolean
    open var SpawnFraction: Number
    open var ColorScaleOverLife: RawDistributionVector
    open var BrightnessOverLife: RawDistributionFloat
    open var RadiusScale: RawDistributionFloat
    open var LightExponent: RawDistributionFloat
    open var LightingChannels: LightingChannels
    open var VolumetricScatteringIntensity: Number
    open var bHighQualityLights: Boolean
    open var bShadowCastingLights: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleLight
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleLight
        fun GetDefaultObject(): ParticleModuleLight
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleLight
        fun C(Other: UObject): ParticleModuleLight
        fun C(Other: Any): ParticleModuleLight
    }
}

external open class ParticleModuleLight_Seeded : ParticleModuleLight {
    constructor()
    constructor(Outer: UObject)
    open var RandomSeedInfo: ParticleRandomSeedInfo

    companion object {
        fun Load(ResourceName: String): ParticleModuleLight_Seeded
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleLight_Seeded
        fun GetDefaultObject(): ParticleModuleLight_Seeded
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleLight_Seeded
        fun C(Other: UObject): ParticleModuleLight_Seeded
        fun C(Other: Any): ParticleModuleLight_Seeded
    }
}

external open class ParticleModuleLocationBase : ParticleModule {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ParticleModuleLocationBase
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleLocationBase
        fun GetDefaultObject(): ParticleModuleLocationBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleLocationBase
        fun C(Other: UObject): ParticleModuleLocationBase
        fun C(Other: Any): ParticleModuleLocationBase
    }
}

external open class ParticleModuleLocation : ParticleModuleLocationBase {
    constructor()
    constructor(Outer: UObject)
    open var StartLocation: RawDistributionVector
    open var DistributeOverNPoints: Number
    open var DistributeThreshold: Number

    companion object {
        fun Load(ResourceName: String): ParticleModuleLocation
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleLocation
        fun GetDefaultObject(): ParticleModuleLocation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleLocation
        fun C(Other: UObject): ParticleModuleLocation
        fun C(Other: Any): ParticleModuleLocation
    }
}

external open class ParticleModuleLocation_Seeded : ParticleModuleLocation {
    constructor()
    constructor(Outer: UObject)
    open var RandomSeedInfo: ParticleRandomSeedInfo

    companion object {
        fun Load(ResourceName: String): ParticleModuleLocation_Seeded
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleLocation_Seeded
        fun GetDefaultObject(): ParticleModuleLocation_Seeded
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleLocation_Seeded
        fun C(Other: UObject): ParticleModuleLocation_Seeded
        fun C(Other: Any): ParticleModuleLocation_Seeded
    }
}

external object ELocationBoneSocketSource {
    var BONESOCKETSOURCE_Bones: String /* "BONESOCKETSOURCE_Bones" */
    var BONESOCKETSOURCE_Sockets: String /* "BONESOCKETSOURCE_Sockets" */
    var BONESOCKETSOURCE_MAX: String /* "BONESOCKETSOURCE_MAX" */
}

external open class LocationBoneSocketInfo {
    open var BoneSocketName: String
    open var Offset: Vector
    open fun clone(): LocationBoneSocketInfo

    companion object {
        fun C(Other: UObject): LocationBoneSocketInfo
        fun C(Other: Any): LocationBoneSocketInfo
    }
}

external object ELocationBoneSocketSelectionMethod {
    var BONESOCKETSEL_Sequential: String /* "BONESOCKETSEL_Sequential" */
    var BONESOCKETSEL_Random: String /* "BONESOCKETSEL_Random" */
    var BONESOCKETSEL_MAX: String /* "BONESOCKETSEL_MAX" */
}

external open class ParticleModuleLocationBoneSocket : ParticleModuleLocationBase {
    constructor()
    constructor(Outer: UObject)
    open var SourceType: String /* "BONESOCKETSOURCE_Bones" | "BONESOCKETSOURCE_Sockets" | "BONESOCKETSOURCE_MAX" */
    open var UniversalOffset: Vector
    open var SourceLocations: Array<LocationBoneSocketInfo>
    open var SelectionMethod: String /* "BONESOCKETSEL_Sequential" | "BONESOCKETSEL_Random" | "BONESOCKETSEL_MAX" */
    open var bUpdatePositionEachFrame: Boolean
    open var bOrientMeshEmitters: Boolean
    open var bInheritBoneVelocity: Boolean
    open var InheritVelocityScale: Number
    open var SkelMeshActorParamName: String
    open var NumPreSelectedIndices: Number
    open var EditorSkelMesh: SkeletalMesh

    companion object {
        fun Load(ResourceName: String): ParticleModuleLocationBoneSocket
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleLocationBoneSocket
        fun GetDefaultObject(): ParticleModuleLocationBoneSocket
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleLocationBoneSocket
        fun C(Other: UObject): ParticleModuleLocationBoneSocket
        fun C(Other: Any): ParticleModuleLocationBoneSocket
    }
}

external open class ParticleModuleLocationDirect : ParticleModuleLocationBase {
    constructor()
    constructor(Outer: UObject)
    open var Location: RawDistributionVector
    open var LocationOffset: RawDistributionVector
    open var ScaleFactor: RawDistributionVector
    open var Direction: RawDistributionVector

    companion object {
        fun Load(ResourceName: String): ParticleModuleLocationDirect
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleLocationDirect
        fun GetDefaultObject(): ParticleModuleLocationDirect
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleLocationDirect
        fun C(Other: UObject): ParticleModuleLocationDirect
        fun C(Other: Any): ParticleModuleLocationDirect
    }
}

external object ELocationEmitterSelectionMethod {
    var ELESM_Random: String /* "ELESM_Random" */
    var ELESM_Sequential: String /* "ELESM_Sequential" */
    var ELESM_MAX: String /* "ELESM_MAX" */
}

external open class ParticleModuleLocationEmitter : ParticleModuleLocationBase {
    constructor()
    constructor(Outer: UObject)
    open var EmitterName: String
    open var SelectionMethod: String /* "ELESM_Random" | "ELESM_Sequential" | "ELESM_MAX" */
    open var InheritSourceVelocity: Boolean
    open var InheritSourceVelocityScale: Number
    open var bInheritSourceRotation: Boolean
    open var InheritSourceRotationScale: Number

    companion object {
        fun Load(ResourceName: String): ParticleModuleLocationEmitter
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleLocationEmitter
        fun GetDefaultObject(): ParticleModuleLocationEmitter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleLocationEmitter
        fun C(Other: UObject): ParticleModuleLocationEmitter
        fun C(Other: Any): ParticleModuleLocationEmitter
    }
}

external open class ParticleModuleLocationEmitterDirect : ParticleModuleLocationBase {
    constructor()
    constructor(Outer: UObject)
    open var EmitterName: String

    companion object {
        fun Load(ResourceName: String): ParticleModuleLocationEmitterDirect
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleLocationEmitterDirect
        fun GetDefaultObject(): ParticleModuleLocationEmitterDirect
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleLocationEmitterDirect
        fun C(Other: UObject): ParticleModuleLocationEmitterDirect
        fun C(Other: Any): ParticleModuleLocationEmitterDirect
    }
}

external open class ParticleModuleLocationPrimitiveBase : ParticleModuleLocationBase {
    constructor()
    constructor(Outer: UObject)
    open var Positive_X: Boolean
    open var Positive_Y: Boolean
    open var Positive_Z: Boolean
    open var Negative_X: Boolean
    open var Negative_Y: Boolean
    open var Negative_Z: Boolean
    open var SurfaceOnly: Boolean
    open var Velocity: Boolean
    open var VelocityScale: RawDistributionFloat
    open var StartLocation: RawDistributionVector

    companion object {
        fun Load(ResourceName: String): ParticleModuleLocationPrimitiveBase
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleLocationPrimitiveBase
        fun GetDefaultObject(): ParticleModuleLocationPrimitiveBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleLocationPrimitiveBase
        fun C(Other: UObject): ParticleModuleLocationPrimitiveBase
        fun C(Other: Any): ParticleModuleLocationPrimitiveBase
    }
}

external object CylinderHeightAxis {
    var PMLPC_HEIGHTAXIS_X: String /* "PMLPC_HEIGHTAXIS_X" */
    var PMLPC_HEIGHTAXIS_Y: String /* "PMLPC_HEIGHTAXIS_Y" */
    var PMLPC_HEIGHTAXIS_Z: String /* "PMLPC_HEIGHTAXIS_Z" */
    var PMLPC_HEIGHTAXIS_MAX: String /* "PMLPC_HEIGHTAXIS_MAX" */
}

external open class ParticleModuleLocationPrimitiveCylinder : ParticleModuleLocationPrimitiveBase {
    constructor()
    constructor(Outer: UObject)
    open var RadialVelocity: Boolean
    open var StartRadius: RawDistributionFloat
    open var StartHeight: RawDistributionFloat
    open var HeightAxis: String /* "PMLPC_HEIGHTAXIS_X" | "PMLPC_HEIGHTAXIS_Y" | "PMLPC_HEIGHTAXIS_Z" | "PMLPC_HEIGHTAXIS_MAX" */

    companion object {
        fun Load(ResourceName: String): ParticleModuleLocationPrimitiveCylinder
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleLocationPrimitiveCylinder
        fun GetDefaultObject(): ParticleModuleLocationPrimitiveCylinder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleLocationPrimitiveCylinder
        fun C(Other: UObject): ParticleModuleLocationPrimitiveCylinder
        fun C(Other: Any): ParticleModuleLocationPrimitiveCylinder
    }
}

external open class ParticleModuleLocationPrimitiveCylinder_Seeded : ParticleModuleLocationPrimitiveCylinder {
    constructor()
    constructor(Outer: UObject)
    open var RandomSeedInfo: ParticleRandomSeedInfo

    companion object {
        fun Load(ResourceName: String): ParticleModuleLocationPrimitiveCylinder_Seeded
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleLocationPrimitiveCylinder_Seeded
        fun GetDefaultObject(): ParticleModuleLocationPrimitiveCylinder_Seeded
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleLocationPrimitiveCylinder_Seeded
        fun C(Other: UObject): ParticleModuleLocationPrimitiveCylinder_Seeded
        fun C(Other: Any): ParticleModuleLocationPrimitiveCylinder_Seeded
    }
}

external open class ParticleModuleLocationPrimitiveSphere : ParticleModuleLocationPrimitiveBase {
    constructor()
    constructor(Outer: UObject)
    open var StartRadius: RawDistributionFloat

    companion object {
        fun Load(ResourceName: String): ParticleModuleLocationPrimitiveSphere
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleLocationPrimitiveSphere
        fun GetDefaultObject(): ParticleModuleLocationPrimitiveSphere
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleLocationPrimitiveSphere
        fun C(Other: UObject): ParticleModuleLocationPrimitiveSphere
        fun C(Other: Any): ParticleModuleLocationPrimitiveSphere
    }
}

external open class ParticleModuleLocationPrimitiveSphere_Seeded : ParticleModuleLocationPrimitiveSphere {
    constructor()
    constructor(Outer: UObject)
    open var RandomSeedInfo: ParticleRandomSeedInfo

    companion object {
        fun Load(ResourceName: String): ParticleModuleLocationPrimitiveSphere_Seeded
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleLocationPrimitiveSphere_Seeded
        fun GetDefaultObject(): ParticleModuleLocationPrimitiveSphere_Seeded
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleLocationPrimitiveSphere_Seeded
        fun C(Other: UObject): ParticleModuleLocationPrimitiveSphere_Seeded
        fun C(Other: Any): ParticleModuleLocationPrimitiveSphere_Seeded
    }
}

external open class ParticleModuleLocationPrimitiveTriangle : ParticleModuleLocationBase {
    constructor()
    constructor(Outer: UObject)
    open var StartOffset: RawDistributionVector
    open var Height: RawDistributionFloat
    open var Angle: RawDistributionFloat
    open var Thickness: RawDistributionFloat

    companion object {
        fun Load(ResourceName: String): ParticleModuleLocationPrimitiveTriangle
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleLocationPrimitiveTriangle
        fun GetDefaultObject(): ParticleModuleLocationPrimitiveTriangle
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleLocationPrimitiveTriangle
        fun C(Other: UObject): ParticleModuleLocationPrimitiveTriangle
        fun C(Other: Any): ParticleModuleLocationPrimitiveTriangle
    }
}

external object ELocationSkelVertSurfaceSource {
    var VERTSURFACESOURCE_Vert: String /* "VERTSURFACESOURCE_Vert" */
    var VERTSURFACESOURCE_Surface: String /* "VERTSURFACESOURCE_Surface" */
    var VERTSURFACESOURCE_MAX: String /* "VERTSURFACESOURCE_MAX" */
}

external open class ParticleModuleLocationSkelVertSurface : ParticleModuleLocationBase {
    constructor()
    constructor(Outer: UObject)
    open var SourceType: String /* "VERTSURFACESOURCE_Vert" | "VERTSURFACESOURCE_Surface" | "VERTSURFACESOURCE_MAX" */
    open var UniversalOffset: Vector
    open var bUpdatePositionEachFrame: Boolean
    open var bOrientMeshEmitters: Boolean
    open var bInheritBoneVelocity: Boolean
    open var InheritVelocityScale: Number
    open var SkelMeshActorParamName: String
    open var EditorSkelMesh: SkeletalMesh
    open var ValidAssociatedBones: Array<String>
    open var bEnforceNormalCheck: Boolean
    open var NormalToCompare: Vector
    open var NormalCheckToleranceDegrees: Number
    open var NormalCheckTolerance: Number
    open var ValidMaterialIndices: Array<Number>
    open var bInheritVertexColor: Boolean
    open var bInheritUV: Boolean
    open var InheritUVChannel: Any

    companion object {
        fun Load(ResourceName: String): ParticleModuleLocationSkelVertSurface
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleLocationSkelVertSurface
        fun GetDefaultObject(): ParticleModuleLocationSkelVertSurface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleLocationSkelVertSurface
        fun C(Other: UObject): ParticleModuleLocationSkelVertSurface
        fun C(Other: Any): ParticleModuleLocationSkelVertSurface
    }
}

external open class ParticleModuleLocationWorldOffset : ParticleModuleLocation {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ParticleModuleLocationWorldOffset
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleLocationWorldOffset
        fun GetDefaultObject(): ParticleModuleLocationWorldOffset
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleLocationWorldOffset
        fun C(Other: UObject): ParticleModuleLocationWorldOffset
        fun C(Other: Any): ParticleModuleLocationWorldOffset
    }
}

external open class ParticleModuleLocationWorldOffset_Seeded : ParticleModuleLocationWorldOffset {
    constructor()
    constructor(Outer: UObject)
    open var RandomSeedInfo: ParticleRandomSeedInfo

    companion object {
        fun Load(ResourceName: String): ParticleModuleLocationWorldOffset_Seeded
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleLocationWorldOffset_Seeded
        fun GetDefaultObject(): ParticleModuleLocationWorldOffset_Seeded
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleLocationWorldOffset_Seeded
        fun C(Other: UObject): ParticleModuleLocationWorldOffset_Seeded
        fun C(Other: Any): ParticleModuleLocationWorldOffset_Seeded
    }
}

external open class ParticleModuleMaterialBase : ParticleModule {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ParticleModuleMaterialBase
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleMaterialBase
        fun GetDefaultObject(): ParticleModuleMaterialBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleMaterialBase
        fun C(Other: UObject): ParticleModuleMaterialBase
        fun C(Other: Any): ParticleModuleMaterialBase
    }
}

external open class ParticleModuleMeshMaterial : ParticleModuleMaterialBase {
    constructor()
    constructor(Outer: UObject)
    open var MeshMaterials: Array<MaterialInterface>

    companion object {
        fun Load(ResourceName: String): ParticleModuleMeshMaterial
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleMeshMaterial
        fun GetDefaultObject(): ParticleModuleMeshMaterial
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleMeshMaterial
        fun C(Other: UObject): ParticleModuleMeshMaterial
        fun C(Other: Any): ParticleModuleMeshMaterial
    }
}

external open class ParticleModuleRotationBase : ParticleModule {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ParticleModuleRotationBase
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleRotationBase
        fun GetDefaultObject(): ParticleModuleRotationBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleRotationBase
        fun C(Other: UObject): ParticleModuleRotationBase
        fun C(Other: Any): ParticleModuleRotationBase
    }
}

external open class ParticleModuleMeshRotation : ParticleModuleRotationBase {
    constructor()
    constructor(Outer: UObject)
    open var StartRotation: RawDistributionVector
    open var bInheritParent: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleMeshRotation
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleMeshRotation
        fun GetDefaultObject(): ParticleModuleMeshRotation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleMeshRotation
        fun C(Other: UObject): ParticleModuleMeshRotation
        fun C(Other: Any): ParticleModuleMeshRotation
    }
}

external open class ParticleModuleMeshRotation_Seeded : ParticleModuleMeshRotation {
    constructor()
    constructor(Outer: UObject)
    open var RandomSeedInfo: ParticleRandomSeedInfo

    companion object {
        fun Load(ResourceName: String): ParticleModuleMeshRotation_Seeded
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleMeshRotation_Seeded
        fun GetDefaultObject(): ParticleModuleMeshRotation_Seeded
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleMeshRotation_Seeded
        fun C(Other: UObject): ParticleModuleMeshRotation_Seeded
        fun C(Other: Any): ParticleModuleMeshRotation_Seeded
    }
}

external open class ParticleModuleRotationRateBase : ParticleModule {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ParticleModuleRotationRateBase
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleRotationRateBase
        fun GetDefaultObject(): ParticleModuleRotationRateBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleRotationRateBase
        fun C(Other: UObject): ParticleModuleRotationRateBase
        fun C(Other: Any): ParticleModuleRotationRateBase
    }
}

external open class ParticleModuleMeshRotationRate : ParticleModuleRotationRateBase {
    constructor()
    constructor(Outer: UObject)
    open var StartRotationRate: RawDistributionVector

    companion object {
        fun Load(ResourceName: String): ParticleModuleMeshRotationRate
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleMeshRotationRate
        fun GetDefaultObject(): ParticleModuleMeshRotationRate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleMeshRotationRate
        fun C(Other: UObject): ParticleModuleMeshRotationRate
        fun C(Other: Any): ParticleModuleMeshRotationRate
    }
}

external open class ParticleModuleMeshRotationRate_Seeded : ParticleModuleMeshRotationRate {
    constructor()
    constructor(Outer: UObject)
    open var RandomSeedInfo: ParticleRandomSeedInfo

    companion object {
        fun Load(ResourceName: String): ParticleModuleMeshRotationRate_Seeded
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleMeshRotationRate_Seeded
        fun GetDefaultObject(): ParticleModuleMeshRotationRate_Seeded
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleMeshRotationRate_Seeded
        fun C(Other: UObject): ParticleModuleMeshRotationRate_Seeded
        fun C(Other: Any): ParticleModuleMeshRotationRate_Seeded
    }
}

external open class ParticleModuleMeshRotationRateMultiplyLife : ParticleModuleRotationRateBase {
    constructor()
    constructor(Outer: UObject)
    open var LifeMultiplier: RawDistributionVector

    companion object {
        fun Load(ResourceName: String): ParticleModuleMeshRotationRateMultiplyLife
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleMeshRotationRateMultiplyLife
        fun GetDefaultObject(): ParticleModuleMeshRotationRateMultiplyLife
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleMeshRotationRateMultiplyLife
        fun C(Other: UObject): ParticleModuleMeshRotationRateMultiplyLife
        fun C(Other: Any): ParticleModuleMeshRotationRateMultiplyLife
    }
}

external open class ParticleModuleMeshRotationRateOverLife : ParticleModuleRotationRateBase {
    constructor()
    constructor(Outer: UObject)
    open var RotRate: RawDistributionVector
    open var bScaleRotRate: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleMeshRotationRateOverLife
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleMeshRotationRateOverLife
        fun GetDefaultObject(): ParticleModuleMeshRotationRateOverLife
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleMeshRotationRateOverLife
        fun C(Other: UObject): ParticleModuleMeshRotationRateOverLife
        fun C(Other: Any): ParticleModuleMeshRotationRateOverLife
    }
}

external open class ParticleModuleOrientationBase : ParticleModule {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ParticleModuleOrientationBase
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleOrientationBase
        fun GetDefaultObject(): ParticleModuleOrientationBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleOrientationBase
        fun C(Other: UObject): ParticleModuleOrientationBase
        fun C(Other: Any): ParticleModuleOrientationBase
    }
}

external object EParticleAxisLock {
    var EPAL_NONE: String /* "EPAL_NONE" */
    var EPAL_X: String /* "EPAL_X" */
    var EPAL_Y: String /* "EPAL_Y" */
    var EPAL_Z: String /* "EPAL_Z" */
    var EPAL_NEGATIVE_X: String /* "EPAL_NEGATIVE_X" */
    var EPAL_NEGATIVE_Y: String /* "EPAL_NEGATIVE_Y" */
    var EPAL_NEGATIVE_Z: String /* "EPAL_NEGATIVE_Z" */
    var EPAL_ROTATE_X: String /* "EPAL_ROTATE_X" */
    var EPAL_ROTATE_Y: String /* "EPAL_ROTATE_Y" */
    var EPAL_ROTATE_Z: String /* "EPAL_ROTATE_Z" */
    var EPAL_MAX: String /* "EPAL_MAX" */
}

external open class ParticleModuleOrientationAxisLock : ParticleModuleOrientationBase {
    constructor()
    constructor(Outer: UObject)
    open var LockAxisFlags: String /* "EPAL_NONE" | "EPAL_X" | "EPAL_Y" | "EPAL_Z" | "EPAL_NEGATIVE_X" | "EPAL_NEGATIVE_Y" | "EPAL_NEGATIVE_Z" | "EPAL_ROTATE_X" | "EPAL_ROTATE_Y" | "EPAL_ROTATE_Z" | "EPAL_MAX" */

    companion object {
        fun Load(ResourceName: String): ParticleModuleOrientationAxisLock
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleOrientationAxisLock
        fun GetDefaultObject(): ParticleModuleOrientationAxisLock
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleOrientationAxisLock
        fun C(Other: UObject): ParticleModuleOrientationAxisLock
        fun C(Other: Any): ParticleModuleOrientationAxisLock
    }
}

external open class ParticleModuleParameterBase : ParticleModule {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ParticleModuleParameterBase
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleParameterBase
        fun GetDefaultObject(): ParticleModuleParameterBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleParameterBase
        fun C(Other: UObject): ParticleModuleParameterBase
        fun C(Other: Any): ParticleModuleParameterBase
    }
}

external object EEmitterDynamicParameterValue {
    var EDPV_UserSet: String /* "EDPV_UserSet" */
    var EDPV_AutoSet: String /* "EDPV_AutoSet" */
    var EDPV_VelocityX: String /* "EDPV_VelocityX" */
    var EDPV_VelocityY: String /* "EDPV_VelocityY" */
    var EDPV_VelocityZ: String /* "EDPV_VelocityZ" */
    var EDPV_VelocityMag: String /* "EDPV_VelocityMag" */
    var EDPV_MAX: String /* "EDPV_MAX" */
}

external open class EmitterDynamicParameter {
    open var ParamName: String
    open var bUseEmitterTime: Boolean
    open var bSpawnTimeOnly: Boolean
    open var ValueMethod: String /* "EDPV_UserSet" | "EDPV_AutoSet" | "EDPV_VelocityX" | "EDPV_VelocityY" | "EDPV_VelocityZ" | "EDPV_VelocityMag" | "EDPV_MAX" */
    open var bScaleVelocityByParamValue: Boolean
    open var ParamValue: RawDistributionFloat
    open fun clone(): EmitterDynamicParameter

    companion object {
        fun C(Other: UObject): EmitterDynamicParameter
        fun C(Other: Any): EmitterDynamicParameter
    }
}

external open class ParticleModuleParameterDynamic : ParticleModuleParameterBase {
    constructor()
    constructor(Outer: UObject)
    open var DynamicParams: Array<EmitterDynamicParameter>
    open var UpdateFlags: Number
    open var bUsesVelocity: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleParameterDynamic
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleParameterDynamic
        fun GetDefaultObject(): ParticleModuleParameterDynamic
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleParameterDynamic
        fun C(Other: UObject): ParticleModuleParameterDynamic
        fun C(Other: Any): ParticleModuleParameterDynamic
    }
}

external open class ParticleModuleParameterDynamic_Seeded : ParticleModuleParameterDynamic {
    constructor()
    constructor(Outer: UObject)
    open var RandomSeedInfo: ParticleRandomSeedInfo

    companion object {
        fun Load(ResourceName: String): ParticleModuleParameterDynamic_Seeded
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleParameterDynamic_Seeded
        fun GetDefaultObject(): ParticleModuleParameterDynamic_Seeded
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleParameterDynamic_Seeded
        fun C(Other: UObject): ParticleModuleParameterDynamic_Seeded
        fun C(Other: Any): ParticleModuleParameterDynamic_Seeded
    }
}

external open class ParticleModulePivotOffset : ParticleModuleLocationBase {
    constructor()
    constructor(Outer: UObject)
    open var PivotOffset: Vector2D

    companion object {
        fun Load(ResourceName: String): ParticleModulePivotOffset
        fun Find(Outer: UObject, ResourceName: String): ParticleModulePivotOffset
        fun GetDefaultObject(): ParticleModulePivotOffset
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModulePivotOffset
        fun C(Other: UObject): ParticleModulePivotOffset
        fun C(Other: Any): ParticleModulePivotOffset
    }
}

external open class ParticleModuleRotation : ParticleModuleRotationBase {
    constructor()
    constructor(Outer: UObject)
    open var StartRotation: RawDistributionFloat

    companion object {
        fun Load(ResourceName: String): ParticleModuleRotation
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleRotation
        fun GetDefaultObject(): ParticleModuleRotation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleRotation
        fun C(Other: UObject): ParticleModuleRotation
        fun C(Other: Any): ParticleModuleRotation
    }
}

external open class ParticleModuleRotation_Seeded : ParticleModuleRotation {
    constructor()
    constructor(Outer: UObject)
    open var RandomSeedInfo: ParticleRandomSeedInfo

    companion object {
        fun Load(ResourceName: String): ParticleModuleRotation_Seeded
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleRotation_Seeded
        fun GetDefaultObject(): ParticleModuleRotation_Seeded
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleRotation_Seeded
        fun C(Other: UObject): ParticleModuleRotation_Seeded
        fun C(Other: Any): ParticleModuleRotation_Seeded
    }
}

external open class ParticleModuleRotationOverLifetime : ParticleModuleRotationBase {
    constructor()
    constructor(Outer: UObject)
    open var RotationOverLife: RawDistributionFloat
    open var Scale: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleRotationOverLifetime
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleRotationOverLifetime
        fun GetDefaultObject(): ParticleModuleRotationOverLifetime
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleRotationOverLifetime
        fun C(Other: UObject): ParticleModuleRotationOverLifetime
        fun C(Other: Any): ParticleModuleRotationOverLifetime
    }
}

external open class ParticleModuleRotationRate : ParticleModuleRotationRateBase {
    constructor()
    constructor(Outer: UObject)
    open var StartRotationRate: RawDistributionFloat

    companion object {
        fun Load(ResourceName: String): ParticleModuleRotationRate
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleRotationRate
        fun GetDefaultObject(): ParticleModuleRotationRate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleRotationRate
        fun C(Other: UObject): ParticleModuleRotationRate
        fun C(Other: Any): ParticleModuleRotationRate
    }
}

external open class ParticleModuleRotationRate_Seeded : ParticleModuleRotationRate {
    constructor()
    constructor(Outer: UObject)
    open var RandomSeedInfo: ParticleRandomSeedInfo

    companion object {
        fun Load(ResourceName: String): ParticleModuleRotationRate_Seeded
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleRotationRate_Seeded
        fun GetDefaultObject(): ParticleModuleRotationRate_Seeded
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleRotationRate_Seeded
        fun C(Other: UObject): ParticleModuleRotationRate_Seeded
        fun C(Other: Any): ParticleModuleRotationRate_Seeded
    }
}

external open class ParticleModuleRotationRateMultiplyLife : ParticleModuleRotationRateBase {
    constructor()
    constructor(Outer: UObject)
    open var LifeMultiplier: RawDistributionFloat

    companion object {
        fun Load(ResourceName: String): ParticleModuleRotationRateMultiplyLife
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleRotationRateMultiplyLife
        fun GetDefaultObject(): ParticleModuleRotationRateMultiplyLife
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleRotationRateMultiplyLife
        fun C(Other: UObject): ParticleModuleRotationRateMultiplyLife
        fun C(Other: Any): ParticleModuleRotationRateMultiplyLife
    }
}

external open class ParticleModuleSizeBase : ParticleModule {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ParticleModuleSizeBase
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleSizeBase
        fun GetDefaultObject(): ParticleModuleSizeBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleSizeBase
        fun C(Other: UObject): ParticleModuleSizeBase
        fun C(Other: Any): ParticleModuleSizeBase
    }
}

external open class ParticleModuleSize : ParticleModuleSizeBase {
    constructor()
    constructor(Outer: UObject)
    open var StartSize: RawDistributionVector

    companion object {
        fun Load(ResourceName: String): ParticleModuleSize
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleSize
        fun GetDefaultObject(): ParticleModuleSize
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleSize
        fun C(Other: UObject): ParticleModuleSize
        fun C(Other: Any): ParticleModuleSize
    }
}

external open class ParticleModuleSize_Seeded : ParticleModuleSize {
    constructor()
    constructor(Outer: UObject)
    open var RandomSeedInfo: ParticleRandomSeedInfo

    companion object {
        fun Load(ResourceName: String): ParticleModuleSize_Seeded
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleSize_Seeded
        fun GetDefaultObject(): ParticleModuleSize_Seeded
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleSize_Seeded
        fun C(Other: UObject): ParticleModuleSize_Seeded
        fun C(Other: Any): ParticleModuleSize_Seeded
    }
}

external open class ParticleModuleSizeMultiplyLife : ParticleModuleSizeBase {
    constructor()
    constructor(Outer: UObject)
    open var LifeMultiplier: RawDistributionVector
    open var MultiplyX: Boolean
    open var MultiplyY: Boolean
    open var MultiplyZ: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleSizeMultiplyLife
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleSizeMultiplyLife
        fun GetDefaultObject(): ParticleModuleSizeMultiplyLife
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleSizeMultiplyLife
        fun C(Other: UObject): ParticleModuleSizeMultiplyLife
        fun C(Other: Any): ParticleModuleSizeMultiplyLife
    }
}

external open class ParticleModuleSizeScale : ParticleModuleSizeBase {
    constructor()
    constructor(Outer: UObject)
    open var SizeScale: RawDistributionVector
    open var EnableX: Boolean
    open var EnableY: Boolean
    open var EnableZ: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleSizeScale
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleSizeScale
        fun GetDefaultObject(): ParticleModuleSizeScale
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleSizeScale
        fun C(Other: UObject): ParticleModuleSizeScale
        fun C(Other: Any): ParticleModuleSizeScale
    }
}

external open class ParticleModuleSizeScaleBySpeed : ParticleModuleSizeBase {
    constructor()
    constructor(Outer: UObject)
    open var SpeedScale: Vector2D
    open var MaxScale: Vector2D

    companion object {
        fun Load(ResourceName: String): ParticleModuleSizeScaleBySpeed
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleSizeScaleBySpeed
        fun GetDefaultObject(): ParticleModuleSizeScaleBySpeed
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleSizeScaleBySpeed
        fun C(Other: UObject): ParticleModuleSizeScaleBySpeed
        fun C(Other: Any): ParticleModuleSizeScaleBySpeed
    }
}

external open class ParticleModuleSourceMovement : ParticleModuleLocationBase {
    constructor()
    constructor(Outer: UObject)
    open var SourceMovementScale: RawDistributionVector

    companion object {
        fun Load(ResourceName: String): ParticleModuleSourceMovement
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleSourceMovement
        fun GetDefaultObject(): ParticleModuleSourceMovement
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleSourceMovement
        fun C(Other: UObject): ParticleModuleSourceMovement
        fun C(Other: Any): ParticleModuleSourceMovement
    }
}

external open class ParticleModuleSpawnPerUnit : ParticleModuleSpawnBase {
    constructor()
    constructor(Outer: UObject)
    open var UnitScalar: Number
    open var MovementTolerance: Number
    open var SpawnPerUnit: RawDistributionFloat
    open var MaxFrameDistance: Number
    open var bIgnoreSpawnRateWhenMoving: Boolean
    open var bIgnoreMovementAlongX: Boolean
    open var bIgnoreMovementAlongY: Boolean
    open var bIgnoreMovementAlongZ: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleSpawnPerUnit
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleSpawnPerUnit
        fun GetDefaultObject(): ParticleModuleSpawnPerUnit
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleSpawnPerUnit
        fun C(Other: UObject): ParticleModuleSpawnPerUnit
        fun C(Other: Any): ParticleModuleSpawnPerUnit
    }
}

external open class ParticleModuleSubUVBase : ParticleModule {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ParticleModuleSubUVBase
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleSubUVBase
        fun GetDefaultObject(): ParticleModuleSubUVBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleSubUVBase
        fun C(Other: UObject): ParticleModuleSubUVBase
        fun C(Other: Any): ParticleModuleSubUVBase
    }
}

external open class SubUVAnimation : UObject {
    constructor()
    constructor(Outer: UObject)
    open var SubUVTexture: Texture2D
    open var SubImages_Horizontal: Number
    open var SubImages_Vertical: Number
    open var BoundingMode: String /* "BVC_FourVertices" | "BVC_EightVertices" | "BVC_MAX" */
    open var OpacitySourceMode: String /* "OSM_Alpha" | "OSM_ColorBrightness" | "OSM_RedChannel" | "OSM_GreenChannel" | "OSM_BlueChannel" | "OSM_MAX" */
    open var AlphaThreshold: Number

    companion object {
        fun Load(ResourceName: String): SubUVAnimation
        fun Find(Outer: UObject, ResourceName: String): SubUVAnimation
        fun GetDefaultObject(): SubUVAnimation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SubUVAnimation
        fun C(Other: UObject): SubUVAnimation
        fun C(Other: Any): SubUVAnimation
    }
}

external open class ParticleModuleSubUV : ParticleModuleSubUVBase {
    constructor()
    constructor(Outer: UObject)
    open var Animation: SubUVAnimation
    open var SubImageIndex: RawDistributionFloat
    open var bUseRealTime: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleSubUV
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleSubUV
        fun GetDefaultObject(): ParticleModuleSubUV
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleSubUV
        fun C(Other: UObject): ParticleModuleSubUV
        fun C(Other: Any): ParticleModuleSubUV
    }
}

external open class ParticleModuleSubUVMovie : ParticleModuleSubUV {
    constructor()
    constructor(Outer: UObject)
    open var bUseEmitterTime: Boolean
    open var FrameRate: RawDistributionFloat
    open var StartingFrame: Number

    companion object {
        fun Load(ResourceName: String): ParticleModuleSubUVMovie
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleSubUVMovie
        fun GetDefaultObject(): ParticleModuleSubUVMovie
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleSubUVMovie
        fun C(Other: UObject): ParticleModuleSubUVMovie
        fun C(Other: Any): ParticleModuleSubUVMovie
    }
}

external open class ParticleModuleTrailBase : ParticleModule {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ParticleModuleTrailBase
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleTrailBase
        fun GetDefaultObject(): ParticleModuleTrailBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleTrailBase
        fun C(Other: UObject): ParticleModuleTrailBase
        fun C(Other: Any): ParticleModuleTrailBase
    }
}

external object ETrail2SourceMethod {
    var PET2SRCM_Default: String /* "PET2SRCM_Default" */
    var PET2SRCM_Particle: String /* "PET2SRCM_Particle" */
    var PET2SRCM_Actor: String /* "PET2SRCM_Actor" */
    var PET2SRCM_MAX: String /* "PET2SRCM_MAX" */
}

external object EParticleSourceSelectionMethod {
    var EPSSM_Random: String /* "EPSSM_Random" */
    var EPSSM_Sequential: String /* "EPSSM_Sequential" */
    var EPSSM_MAX: String /* "EPSSM_MAX" */
}

external open class ParticleModuleTrailSource : ParticleModuleTrailBase {
    constructor()
    constructor(Outer: UObject)
    open var SourceMethod: String /* "PET2SRCM_Default" | "PET2SRCM_Particle" | "PET2SRCM_Actor" | "PET2SRCM_MAX" */
    open var SourceName: String
    open var SourceStrength: RawDistributionFloat
    open var bLockSourceStength: Boolean
    open var SourceOffsetCount: Number
    open var SourceOffsetDefaults: Array<Vector>
    open var SelectionMethod: String /* "EPSSM_Random" | "EPSSM_Sequential" | "EPSSM_MAX" */
    open var bInheritRotation: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleTrailSource
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleTrailSource
        fun GetDefaultObject(): ParticleModuleTrailSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleTrailSource
        fun C(Other: UObject): ParticleModuleTrailSource
        fun C(Other: Any): ParticleModuleTrailSource
    }
}

external open class ParticleModuleTypeDataAnimTrail : ParticleModuleTypeDataBase {
    constructor()
    constructor(Outer: UObject)
    open var bDeadTrailsOnDeactivate: Boolean
    open var bEnablePreviousTangentRecalculation: Boolean
    open var bTangentRecalculationEveryFrame: Boolean
    open var TilingDistance: Number
    open var DistanceTessellationStepSize: Number
    open var TangentTessellationStepSize: Number
    open var WidthTessellationStepSize: Number

    companion object {
        fun Load(ResourceName: String): ParticleModuleTypeDataAnimTrail
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleTypeDataAnimTrail
        fun GetDefaultObject(): ParticleModuleTypeDataAnimTrail
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleTypeDataAnimTrail
        fun C(Other: UObject): ParticleModuleTypeDataAnimTrail
        fun C(Other: Any): ParticleModuleTypeDataAnimTrail
    }
}

external object EBeam2Method {
    var PEB2M_Distance: String /* "PEB2M_Distance" */
    var PEB2M_Target: String /* "PEB2M_Target" */
    var PEB2M_Branch: String /* "PEB2M_Branch" */
    var PEB2M_MAX: String /* "PEB2M_MAX" */
}

external object EBeamTaperMethod {
    var PEBTM_None: String /* "PEBTM_None" */
    var PEBTM_Full: String /* "PEBTM_Full" */
    var PEBTM_Partial: String /* "PEBTM_Partial" */
    var PEBTM_MAX: String /* "PEBTM_MAX" */
}

external open class ParticleModuleTypeDataBeam2 : ParticleModuleTypeDataBase {
    constructor()
    constructor(Outer: UObject)
    open var BeamMethod: String /* "PEB2M_Distance" | "PEB2M_Target" | "PEB2M_Branch" | "PEB2M_MAX" */
    open var TextureTile: Number
    open var TextureTileDistance: Number
    open var Sheets: Number
    open var MaxBeamCount: Number
    open var Speed: Number
    open var InterpolationPoints: Number
    open var bAlwaysOn: Boolean
    open var UpVectorStepSize: Number
    open var BranchParentName: String
    open var Distance: RawDistributionFloat
    open var TaperMethod: String /* "PEBTM_None" | "PEBTM_Full" | "PEBTM_Partial" | "PEBTM_MAX" */
    open var TaperFactor: RawDistributionFloat
    open var TaperScale: RawDistributionFloat
    open var RenderGeometry: Boolean
    open var RenderDirectLine: Boolean
    open var RenderLines: Boolean
    open var RenderTessellation: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleTypeDataBeam2
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleTypeDataBeam2
        fun GetDefaultObject(): ParticleModuleTypeDataBeam2
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleTypeDataBeam2
        fun C(Other: UObject): ParticleModuleTypeDataBeam2
        fun C(Other: Any): ParticleModuleTypeDataBeam2
    }
}

external open class VectorField : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Bounds: Box
    open var Intensity: Number

    companion object {
        fun Load(ResourceName: String): VectorField
        fun Find(Outer: UObject, ResourceName: String): VectorField
        fun GetDefaultObject(): VectorField
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VectorField
        fun C(Other: UObject): VectorField
        fun C(Other: Any): VectorField
    }
}

external open class GPUSpriteLocalVectorFieldInfo {
    open var Field: VectorField
    open var Transform: Transform
    open var MinInitialRotation: Rotator
    open var MaxInitialRotation: Rotator
    open var RotationRate: Rotator
    open var Intensity: Number
    open var Tightness: Number
    open var bIgnoreComponentTransform: Boolean
    open var bTileX: Boolean
    open var bTileY: Boolean
    open var bTileZ: Boolean
    open var bUseFixDT: Boolean
    open fun clone(): GPUSpriteLocalVectorFieldInfo

    companion object {
        fun C(Other: UObject): GPUSpriteLocalVectorFieldInfo
        fun C(Other: Any): GPUSpriteLocalVectorFieldInfo
    }
}

external open class FloatDistribution {
    open var Table: DistributionLookupTable
    open fun clone(): FloatDistribution

    companion object {
        fun C(Other: UObject): FloatDistribution
        fun C(Other: Any): FloatDistribution
    }
}

external open class GPUSpriteEmitterInfo {
    open var RequiredModule: ParticleModuleRequired
    open var SpawnModule: ParticleModuleSpawn
    open var SpawnPerUnitModule: ParticleModuleSpawnPerUnit
    open var SpawnModules: Array<ParticleModule>
    open var LocalVectorField: GPUSpriteLocalVectorFieldInfo
    open var VectorFieldScale: FloatDistribution
    open var DragCoefficient: FloatDistribution
    open var PointAttractorStrength: FloatDistribution
    open var Resilience: FloatDistribution
    open var ConstantAcceleration: Vector
    open var PointAttractorPosition: Vector
    open var PointAttractorRadiusSq: Number
    open var OrbitOffsetBase: Vector
    open var OrbitOffsetRange: Vector
    open var InvMaxSize: Vector2D
    open var InvRotationRateScale: Number
    open var MaxLifetime: Number
    open var MaxParticleCount: Number
    open var ScreenAlignment: String /* "PSA_FacingCameraPosition" | "PSA_Square" | "PSA_Rectangle" | "PSA_Velocity" | "PSA_AwayFromCenter" | "PSA_TypeSpecific" | "PSA_FacingCameraDistanceBlend" | "PSA_MAX" */
    open var LockAxisFlag: String /* "EPAL_NONE" | "EPAL_X" | "EPAL_Y" | "EPAL_Z" | "EPAL_NEGATIVE_X" | "EPAL_NEGATIVE_Y" | "EPAL_NEGATIVE_Z" | "EPAL_ROTATE_X" | "EPAL_ROTATE_Y" | "EPAL_ROTATE_Z" | "EPAL_MAX" */
    open var bEnableCollision: Boolean
    open var CollisionMode: String /* "SceneDepth" | "DistanceField" | "EParticleCollisionMode_MAX" */
    open var bRemoveHMDRoll: Boolean
    open var MinFacingCameraBlendDistance: Number
    open var MaxFacingCameraBlendDistance: Number
    open var DynamicColor: RawDistributionVector
    open var DynamicAlpha: RawDistributionFloat
    open var DynamicColorScale: RawDistributionVector
    open var DynamicAlphaScale: RawDistributionFloat
    open fun clone(): GPUSpriteEmitterInfo

    companion object {
        fun C(Other: UObject): GPUSpriteEmitterInfo
        fun C(Other: Any): GPUSpriteEmitterInfo
    }
}

external open class GPUSpriteResourceData {
    open var QuantizedColorSamples: Array<Color>
    open var QuantizedMiscSamples: Array<Color>
    open var QuantizedSimulationAttrSamples: Array<Color>
    open var ColorScale: Vector4
    open var ColorBias: Vector4
    open var MiscScale: Vector4
    open var MiscBias: Vector4
    open var SimulationAttrCurveScale: Vector4
    open var SimulationAttrCurveBias: Vector4
    open var SubImageSize: Vector4
    open var SizeBySpeed: Vector4
    open var ConstantAcceleration: Vector
    open var OrbitOffsetBase: Vector
    open var OrbitOffsetRange: Vector
    open var OrbitFrequencyBase: Vector
    open var OrbitFrequencyRange: Vector
    open var OrbitPhaseBase: Vector
    open var OrbitPhaseRange: Vector
    open var GlobalVectorFieldScale: Number
    open var GlobalVectorFieldTightness: Number
    open var PerParticleVectorFieldScale: Number
    open var PerParticleVectorFieldBias: Number
    open var DragCoefficientScale: Number
    open var DragCoefficientBias: Number
    open var ResilienceScale: Number
    open var ResilienceBias: Number
    open var CollisionRadiusScale: Number
    open var CollisionRadiusBias: Number
    open var CollisionTimeBias: Number
    open var CollisionRandomSpread: Number
    open var CollisionRandomDistribution: Number
    open var OneMinusFriction: Number
    open var RotationRateScale: Number
    open var CameraMotionBlurAmount: Number
    open var ScreenAlignment: String /* "PSA_FacingCameraPosition" | "PSA_Square" | "PSA_Rectangle" | "PSA_Velocity" | "PSA_AwayFromCenter" | "PSA_TypeSpecific" | "PSA_FacingCameraDistanceBlend" | "PSA_MAX" */
    open var LockAxisFlag: String /* "EPAL_NONE" | "EPAL_X" | "EPAL_Y" | "EPAL_Z" | "EPAL_NEGATIVE_X" | "EPAL_NEGATIVE_Y" | "EPAL_NEGATIVE_Z" | "EPAL_ROTATE_X" | "EPAL_ROTATE_Y" | "EPAL_ROTATE_Z" | "EPAL_MAX" */
    open var PivotOffset: Vector2D
    open var bRemoveHMDRoll: Boolean
    open var MinFacingCameraBlendDistance: Number
    open var MaxFacingCameraBlendDistance: Number
    open fun clone(): GPUSpriteResourceData

    companion object {
        fun C(Other: UObject): GPUSpriteResourceData
        fun C(Other: Any): GPUSpriteResourceData
    }
}

external open class ParticleModuleTypeDataGpu : ParticleModuleTypeDataBase {
    constructor()
    constructor(Outer: UObject)
    open var EmitterInfo: GPUSpriteEmitterInfo
    open var ResourceData: GPUSpriteResourceData
    open var CameraMotionBlurAmount: Number
    open var bClearExistingParticlesOnInit: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleTypeDataGpu
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleTypeDataGpu
        fun GetDefaultObject(): ParticleModuleTypeDataGpu
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleTypeDataGpu
        fun C(Other: UObject): ParticleModuleTypeDataGpu
        fun C(Other: Any): ParticleModuleTypeDataGpu
    }
}

external object EMeshScreenAlignment {
    var PSMA_MeshFaceCameraWithRoll: String /* "PSMA_MeshFaceCameraWithRoll" */
    var PSMA_MeshFaceCameraWithSpin: String /* "PSMA_MeshFaceCameraWithSpin" */
    var PSMA_MeshFaceCameraWithLockedAxis: String /* "PSMA_MeshFaceCameraWithLockedAxis" */
    var PSMA_MAX: String /* "PSMA_MAX" */
}

external object EMeshCameraFacingUpAxis {
    var CameraFacing_NoneUP: String /* "CameraFacing_NoneUP" */
    var CameraFacing_ZUp: String /* "CameraFacing_ZUp" */
    var CameraFacing_NegativeZUp: String /* "CameraFacing_NegativeZUp" */
    var CameraFacing_YUp: String /* "CameraFacing_YUp" */
    var CameraFacing_NegativeYUp: String /* "CameraFacing_NegativeYUp" */
    var CameraFacing_MAX: String /* "CameraFacing_MAX" */
}

external object EMeshCameraFacingOptions {
    var XAxisFacing_NoUp: String /* "XAxisFacing_NoUp" */
    var XAxisFacing_ZUp: String /* "XAxisFacing_ZUp" */
    var XAxisFacing_NegativeZUp: String /* "XAxisFacing_NegativeZUp" */
    var XAxisFacing_YUp: String /* "XAxisFacing_YUp" */
    var XAxisFacing_NegativeYUp: String /* "XAxisFacing_NegativeYUp" */
    var LockedAxis_ZAxisFacing: String /* "LockedAxis_ZAxisFacing" */
    var LockedAxis_NegativeZAxisFacing: String /* "LockedAxis_NegativeZAxisFacing" */
    var LockedAxis_YAxisFacing: String /* "LockedAxis_YAxisFacing" */
    var LockedAxis_NegativeYAxisFacing: String /* "LockedAxis_NegativeYAxisFacing" */
    var VelocityAligned_ZAxisFacing: String /* "VelocityAligned_ZAxisFacing" */
    var VelocityAligned_NegativeZAxisFacing: String /* "VelocityAligned_NegativeZAxisFacing" */
    var VelocityAligned_YAxisFacing: String /* "VelocityAligned_YAxisFacing" */
    var VelocityAligned_NegativeYAxisFacing: String /* "VelocityAligned_NegativeYAxisFacing" */
    var EMeshCameraFacingOptions_MAX: String /* "EMeshCameraFacingOptions_MAX" */
}

external open class ParticleModuleTypeDataMesh : ParticleModuleTypeDataBase {
    constructor()
    constructor(Outer: UObject)
    open var Mesh: StaticMesh
    open var LODSizeScale: Number
    open var bUseStaticMeshLODs: Boolean
    open var CastShadows: Boolean
    open var DoCollisions: Boolean
    open var MeshAlignment: String /* "PSMA_MeshFaceCameraWithRoll" | "PSMA_MeshFaceCameraWithSpin" | "PSMA_MeshFaceCameraWithLockedAxis" | "PSMA_MAX" */
    open var bOverrideMaterial: Boolean
    open var bOverrideDefaultMotionBlurSettings: Boolean
    open var bEnableMotionBlur: Boolean
    open var RollPitchYawRange: RawDistributionVector
    open var AxisLockOption: String /* "EPAL_NONE" | "EPAL_X" | "EPAL_Y" | "EPAL_Z" | "EPAL_NEGATIVE_X" | "EPAL_NEGATIVE_Y" | "EPAL_NEGATIVE_Z" | "EPAL_ROTATE_X" | "EPAL_ROTATE_Y" | "EPAL_ROTATE_Z" | "EPAL_MAX" */
    open var bCameraFacing: Boolean
    open var CameraFacingUpAxisOption: String /* "CameraFacing_NoneUP" | "CameraFacing_ZUp" | "CameraFacing_NegativeZUp" | "CameraFacing_YUp" | "CameraFacing_NegativeYUp" | "CameraFacing_MAX" */
    open var CameraFacingOption: String /* "XAxisFacing_NoUp" | "XAxisFacing_ZUp" | "XAxisFacing_NegativeZUp" | "XAxisFacing_YUp" | "XAxisFacing_NegativeYUp" | "LockedAxis_ZAxisFacing" | "LockedAxis_NegativeZAxisFacing" | "LockedAxis_YAxisFacing" | "LockedAxis_NegativeYAxisFacing" | "VelocityAligned_ZAxisFacing" | "VelocityAligned_NegativeZAxisFacing" | "VelocityAligned_YAxisFacing" | "VelocityAligned_NegativeYAxisFacing" | "EMeshCameraFacingOptions_MAX" */
    open var bApplyParticleRotationAsSpin: Boolean
    open var bFaceCameraDirectionRatherThanPosition: Boolean
    open var bCollisionsConsiderPartilceSize: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleTypeDataMesh
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleTypeDataMesh
        fun GetDefaultObject(): ParticleModuleTypeDataMesh
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleTypeDataMesh
        fun C(Other: UObject): ParticleModuleTypeDataMesh
        fun C(Other: Any): ParticleModuleTypeDataMesh
    }
}

external object ETrailsRenderAxisOption {
    var Trails_CameraUp: String /* "Trails_CameraUp" */
    var Trails_SourceUp: String /* "Trails_SourceUp" */
    var Trails_WorldUp: String /* "Trails_WorldUp" */
    var Trails_MAX: String /* "Trails_MAX" */
}

external open class ParticleModuleTypeDataRibbon : ParticleModuleTypeDataBase {
    constructor()
    constructor(Outer: UObject)
    open var MaxTessellationBetweenParticles: Number
    open var SheetsPerTrail: Number
    open var MaxTrailCount: Number
    open var MaxParticleInTrailCount: Number
    open var bDeadTrailsOnDeactivate: Boolean
    open var bDeadTrailsOnSourceLoss: Boolean
    open var bClipSourceSegement: Boolean
    open var bEnablePreviousTangentRecalculation: Boolean
    open var bTangentRecalculationEveryFrame: Boolean
    open var bSpawnInitialParticle: Boolean
    open var RenderAxis: String /* "Trails_CameraUp" | "Trails_SourceUp" | "Trails_WorldUp" | "Trails_MAX" */
    open var TangentSpawningScalar: Number
    open var bRenderGeometry: Boolean
    open var bRenderSpawnPoints: Boolean
    open var bRenderTangents: Boolean
    open var bRenderTessellation: Boolean
    open var TilingDistance: Number
    open var DistanceTessellationStepSize: Number
    open var bEnableTangentDiffInterpScale: Boolean
    open var TangentTessellationScalar: Number

    companion object {
        fun Load(ResourceName: String): ParticleModuleTypeDataRibbon
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleTypeDataRibbon
        fun GetDefaultObject(): ParticleModuleTypeDataRibbon
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleTypeDataRibbon
        fun C(Other: UObject): ParticleModuleTypeDataRibbon
        fun C(Other: Any): ParticleModuleTypeDataRibbon
    }
}

external open class ParticleModuleVectorFieldBase : ParticleModule {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ParticleModuleVectorFieldBase
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleVectorFieldBase
        fun GetDefaultObject(): ParticleModuleVectorFieldBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleVectorFieldBase
        fun C(Other: UObject): ParticleModuleVectorFieldBase
        fun C(Other: Any): ParticleModuleVectorFieldBase
    }
}

external open class ParticleModuleVectorFieldGlobal : ParticleModuleVectorFieldBase {
    constructor()
    constructor(Outer: UObject)
    open var bOverrideGlobalVectorFieldTightness: Boolean
    open var GlobalVectorFieldScale: Number
    open var GlobalVectorFieldTightness: Number

    companion object {
        fun Load(ResourceName: String): ParticleModuleVectorFieldGlobal
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleVectorFieldGlobal
        fun GetDefaultObject(): ParticleModuleVectorFieldGlobal
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleVectorFieldGlobal
        fun C(Other: UObject): ParticleModuleVectorFieldGlobal
        fun C(Other: Any): ParticleModuleVectorFieldGlobal
    }
}

external open class ParticleModuleVectorFieldLocal : ParticleModuleVectorFieldBase {
    constructor()
    constructor(Outer: UObject)
    open var VectorField: VectorField
    open var RelativeTranslation: Vector
    open var RelativeRotation: Rotator
    open var RelativeScale3D: Vector
    open var Intensity: Number
    open var Tightness: Number
    open var bIgnoreComponentTransform: Boolean
    open var bTileX: Boolean
    open var bTileY: Boolean
    open var bTileZ: Boolean
    open var bUseFixDT: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleVectorFieldLocal
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleVectorFieldLocal
        fun GetDefaultObject(): ParticleModuleVectorFieldLocal
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleVectorFieldLocal
        fun C(Other: UObject): ParticleModuleVectorFieldLocal
        fun C(Other: Any): ParticleModuleVectorFieldLocal
    }
}

external open class ParticleModuleVectorFieldRotation : ParticleModuleVectorFieldBase {
    constructor()
    constructor(Outer: UObject)
    open var MinInitialRotation: Vector
    open var MaxInitialRotation: Vector

    companion object {
        fun Load(ResourceName: String): ParticleModuleVectorFieldRotation
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleVectorFieldRotation
        fun GetDefaultObject(): ParticleModuleVectorFieldRotation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleVectorFieldRotation
        fun C(Other: UObject): ParticleModuleVectorFieldRotation
        fun C(Other: Any): ParticleModuleVectorFieldRotation
    }
}

external open class ParticleModuleVectorFieldRotationRate : ParticleModuleVectorFieldBase {
    constructor()
    constructor(Outer: UObject)
    open var RotationRate: Vector

    companion object {
        fun Load(ResourceName: String): ParticleModuleVectorFieldRotationRate
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleVectorFieldRotationRate
        fun GetDefaultObject(): ParticleModuleVectorFieldRotationRate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleVectorFieldRotationRate
        fun C(Other: UObject): ParticleModuleVectorFieldRotationRate
        fun C(Other: Any): ParticleModuleVectorFieldRotationRate
    }
}

external open class ParticleModuleVectorFieldScale : ParticleModuleVectorFieldBase {
    constructor()
    constructor(Outer: UObject)
    open var VectorFieldScale: DistributionFloat
    open var VectorFieldScaleRaw: RawDistributionFloat

    companion object {
        fun Load(ResourceName: String): ParticleModuleVectorFieldScale
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleVectorFieldScale
        fun GetDefaultObject(): ParticleModuleVectorFieldScale
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleVectorFieldScale
        fun C(Other: UObject): ParticleModuleVectorFieldScale
        fun C(Other: Any): ParticleModuleVectorFieldScale
    }
}

external open class ParticleModuleVectorFieldScaleOverLife : ParticleModuleVectorFieldBase {
    constructor()
    constructor(Outer: UObject)
    open var VectorFieldScaleOverLife: DistributionFloat
    open var VectorFieldScaleOverLifeRaw: RawDistributionFloat

    companion object {
        fun Load(ResourceName: String): ParticleModuleVectorFieldScaleOverLife
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleVectorFieldScaleOverLife
        fun GetDefaultObject(): ParticleModuleVectorFieldScaleOverLife
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleVectorFieldScaleOverLife
        fun C(Other: UObject): ParticleModuleVectorFieldScaleOverLife
        fun C(Other: Any): ParticleModuleVectorFieldScaleOverLife
    }
}

external open class ParticleModuleVelocityBase : ParticleModule {
    constructor()
    constructor(Outer: UObject)
    open var bInWorldSpace: Boolean
    open var bApplyOwnerScale: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleVelocityBase
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleVelocityBase
        fun GetDefaultObject(): ParticleModuleVelocityBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleVelocityBase
        fun C(Other: UObject): ParticleModuleVelocityBase
        fun C(Other: Any): ParticleModuleVelocityBase
    }
}

external open class ParticleModuleVelocity : ParticleModuleVelocityBase {
    constructor()
    constructor(Outer: UObject)
    open var StartVelocity: RawDistributionVector
    open var StartVelocityRadial: RawDistributionFloat

    companion object {
        fun Load(ResourceName: String): ParticleModuleVelocity
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleVelocity
        fun GetDefaultObject(): ParticleModuleVelocity
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleVelocity
        fun C(Other: UObject): ParticleModuleVelocity
        fun C(Other: Any): ParticleModuleVelocity
    }
}

external open class ParticleModuleVelocity_Seeded : ParticleModuleVelocity {
    constructor()
    constructor(Outer: UObject)
    open var RandomSeedInfo: ParticleRandomSeedInfo

    companion object {
        fun Load(ResourceName: String): ParticleModuleVelocity_Seeded
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleVelocity_Seeded
        fun GetDefaultObject(): ParticleModuleVelocity_Seeded
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleVelocity_Seeded
        fun C(Other: UObject): ParticleModuleVelocity_Seeded
        fun C(Other: Any): ParticleModuleVelocity_Seeded
    }
}

external open class ParticleModuleVelocityCone : ParticleModuleVelocityBase {
    constructor()
    constructor(Outer: UObject)
    open var Angle: RawDistributionFloat
    open var Velocity: RawDistributionFloat
    open var Direction: Vector

    companion object {
        fun Load(ResourceName: String): ParticleModuleVelocityCone
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleVelocityCone
        fun GetDefaultObject(): ParticleModuleVelocityCone
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleVelocityCone
        fun C(Other: UObject): ParticleModuleVelocityCone
        fun C(Other: Any): ParticleModuleVelocityCone
    }
}

external open class ParticleModuleVelocityInheritParent : ParticleModuleVelocityBase {
    constructor()
    constructor(Outer: UObject)
    open var Scale: RawDistributionVector

    companion object {
        fun Load(ResourceName: String): ParticleModuleVelocityInheritParent
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleVelocityInheritParent
        fun GetDefaultObject(): ParticleModuleVelocityInheritParent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleVelocityInheritParent
        fun C(Other: UObject): ParticleModuleVelocityInheritParent
        fun C(Other: Any): ParticleModuleVelocityInheritParent
    }
}

external open class ParticleModuleVelocityOverLifetime : ParticleModuleVelocityBase {
    constructor()
    constructor(Outer: UObject)
    open var VelOverLife: RawDistributionVector
    open var Absolute: Boolean

    companion object {
        fun Load(ResourceName: String): ParticleModuleVelocityOverLifetime
        fun Find(Outer: UObject, ResourceName: String): ParticleModuleVelocityOverLifetime
        fun GetDefaultObject(): ParticleModuleVelocityOverLifetime
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleModuleVelocityOverLifetime
        fun C(Other: UObject): ParticleModuleVelocityOverLifetime
        fun C(Other: Any): ParticleModuleVelocityOverLifetime
    }
}

external open class ParticleSpriteEmitter : ParticleEmitter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ParticleSpriteEmitter
        fun Find(Outer: UObject, ResourceName: String): ParticleSpriteEmitter
        fun GetDefaultObject(): ParticleSpriteEmitter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleSpriteEmitter
        fun C(Other: UObject): ParticleSpriteEmitter
        fun C(Other: Any): ParticleSpriteEmitter
    }
}

external open class PathFollowingAgentInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PathFollowingAgentInterface
        fun Find(Outer: UObject, ResourceName: String): PathFollowingAgentInterface
        fun GetDefaultObject(): PathFollowingAgentInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PathFollowingAgentInterface
        fun C(Other: UObject): PathFollowingAgentInterface
        fun C(Other: Any): PathFollowingAgentInterface
    }
}

external open class PawnNoiseEmitterComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var bAIPerceptionSystemCompatibilityMode: Boolean
    open var LastRemoteNoisePosition: Vector
    open var NoiseLifetime: Number
    open var LastRemoteNoiseVolume: Number
    open var LastRemoteNoiseTime: Number
    open var LastLocalNoiseVolume: Number
    open var LastLocalNoiseTime: Number
    open fun MakeNoise(NoiseMaker: Actor, Loudness: Number, NoiseLocation: Vector)

    companion object {
        fun Load(ResourceName: String): PawnNoiseEmitterComponent
        fun Find(Outer: UObject, ResourceName: String): PawnNoiseEmitterComponent
        fun GetDefaultObject(): PawnNoiseEmitterComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PawnNoiseEmitterComponent
        fun C(Other: UObject): PawnNoiseEmitterComponent
        fun C(Other: Any): PawnNoiseEmitterComponent
    }
}

external open class PhysicalAnimationComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var StrengthMultiplyer: Number
    open var SkeletalMeshComponent: SkeletalMeshComponent
    open fun SetStrengthMultiplyer(InStrengthMultiplyer: Number)
    open fun SetSkeletalMeshComponent(InSkeletalMeshComponent: SkeletalMeshComponent)
    open fun GetBodyTargetTransform(BodyName: String): Transform
    open fun ApplyPhysicalAnimationSettingsBelow(BodyName: String, PhysicalAnimationData: PhysicalAnimationData, bIncludeSelf: Boolean)
    open fun ApplyPhysicalAnimationSettings(BodyName: String, PhysicalAnimationData: PhysicalAnimationData)
    open fun ApplyPhysicalAnimationProfileBelow(BodyName: String, ProfileName: String, bIncludeSelf: Boolean, bClearNotFound: Boolean)

    companion object {
        fun Load(ResourceName: String): PhysicalAnimationComponent
        fun Find(Outer: UObject, ResourceName: String): PhysicalAnimationComponent
        fun GetDefaultObject(): PhysicalAnimationComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PhysicalAnimationComponent
        fun C(Other: UObject): PhysicalAnimationComponent
        fun C(Other: Any): PhysicalAnimationComponent
    }
}

external open class RigidBodyBase(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    companion object {
        fun GetDefaultObject(): RigidBodyBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RigidBodyBase
        fun C(Other: UObject): RigidBodyBase
        fun C(Other: Any): RigidBodyBase
    }
}

external open class ConstrainComponentPropName {
    open var ComponentName: String
    open fun clone(): ConstrainComponentPropName

    companion object {
        fun C(Other: UObject): ConstrainComponentPropName
        fun C(Other: Any): ConstrainComponentPropName
    }
}

external object EConstraintFrame {
    var Frame1: String /* "Frame1" */
    var Frame2: String /* "Frame2" */
    var EConstraintFrame_MAX: String /* "EConstraintFrame_MAX" */
}

external interface `T$720` {
    var OutLinearForce: Vector
    var OutAngularForce: Vector
}

external open class PhysicsConstraintComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var ConstraintActor1: Actor
    open var ComponentName1: ConstrainComponentPropName
    open var ConstraintActor2: Actor
    open var ComponentName2: ConstrainComponentPropName
    open var ConstraintSetup: PhysicsConstraintTemplate
    open var OnConstraintBroken: UnrealEngineMulticastDelegate<(ConstraintIndex: Number) -> Unit>
    open var ConstraintInstance: ConstraintInstance
    open fun SetOrientationDriveTwistAndSwing(bEnableTwistDrive: Boolean, bEnableSwingDrive: Boolean)
    open fun SetOrientationDriveSLERP(bEnableSLERP: Boolean)
    open fun SetLinearZLimit(ConstraintType: String /* "LCM_Free" | "LCM_Limited" | "LCM_Locked" | "LCM_MAX" */, LimitSize: Number)
    open fun SetLinearYLimit(ConstraintType: String /* "LCM_Free" | "LCM_Limited" | "LCM_Locked" | "LCM_MAX" */, LimitSize: Number)
    open fun SetLinearXLimit(ConstraintType: String /* "LCM_Free" | "LCM_Limited" | "LCM_Locked" | "LCM_MAX" */, LimitSize: Number)
    open fun SetLinearVelocityTarget(InVelTarget: Vector)
    open fun SetLinearVelocityDrive(bEnableDriveX: Boolean, bEnableDriveY: Boolean, bEnableDriveZ: Boolean)
    open fun SetLinearPositionTarget(InPosTarget: Vector)
    open fun SetLinearPositionDrive(bEnableDriveX: Boolean, bEnableDriveY: Boolean, bEnableDriveZ: Boolean)
    open fun SetLinearPlasticity(bLinearPlasticity: Boolean, LinearPlasticityThreshold: Number)
    open fun SetLinearDriveParams(PositionStrength: Number, VelocityStrength: Number, InForceLimit: Number)
    open fun SetLinearBreakable(bLinearBreakable: Boolean, LinearBreakThreshold: Number)
    open fun SetDisableCollision(bDisableCollision: Boolean)
    open fun SetConstraintReferencePosition(Frame: String /* "Frame1" | "Frame2" | "EConstraintFrame_MAX" */, RefPosition: Vector)
    open fun SetConstraintReferenceOrientation(Frame: String /* "Frame1" | "Frame2" | "EConstraintFrame_MAX" */, PriAxis: Vector, SecAxis: Vector)
    open fun SetConstraintReferenceFrame(Frame: String /* "Frame1" | "Frame2" | "EConstraintFrame_MAX" */, RefFrame: Transform)
    open fun SetConstrainedComponents(Component1: PrimitiveComponent, BoneName1: String, Component2: PrimitiveComponent, BoneName2: String)
    open fun SetAngularVelocityTarget(InVelTarget: Vector)
    open fun SetAngularVelocityDriveTwistAndSwing(bEnableTwistDrive: Boolean, bEnableSwingDrive: Boolean)
    open fun SetAngularVelocityDriveSLERP(bEnableSLERP: Boolean)
    open fun SetAngularVelocityDrive(bEnableSwingDrive: Boolean, bEnableTwistDrive: Boolean)
    open fun SetAngularTwistLimit(ConstraintType: String /* "ACM_Free" | "ACM_Limited" | "ACM_Locked" | "ACM_MAX" */, TwistLimitAngle: Number)
    open fun SetAngularSwing2Limit(MotionType: String /* "ACM_Free" | "ACM_Limited" | "ACM_Locked" | "ACM_MAX" */, Swing2LimitAngle: Number)
    open fun SetAngularSwing1Limit(MotionType: String /* "ACM_Free" | "ACM_Limited" | "ACM_Locked" | "ACM_MAX" */, Swing1LimitAngle: Number)
    open fun SetAngularPlasticity(bAngularPlasticity: Boolean, AngularPlasticityThreshold: Number)
    open fun SetAngularOrientationTarget(InPosTarget: Rotator)
    open fun SetAngularOrientationDrive(bEnableSwingDrive: Boolean, bEnableTwistDrive: Boolean)
    open fun SetAngularDriveParams(PositionStrength: Number, VelocityStrength: Number, InForceLimit: Number)
    open fun SetAngularDriveMode(DriveMode: String /* "SLERP" | "TwistAndSwing" | "EAngularDriveMode_MAX" */)
    open fun SetAngularBreakable(bAngularBreakable: Boolean, AngularBreakThreshold: Number)
    open fun IsBroken(): Boolean
    open fun GetCurrentTwist(): Number
    open fun GetCurrentSwing2(): Number
    open fun GetCurrentSwing1(): Number
    open fun GetConstraintForce(OutLinearForce: Vector = definedExternally, OutAngularForce: Vector = definedExternally): `T$720`
    open fun BreakConstraint()

    companion object {
        fun Load(ResourceName: String): PhysicsConstraintComponent
        fun Find(Outer: UObject, ResourceName: String): PhysicsConstraintComponent
        fun GetDefaultObject(): PhysicsConstraintComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PhysicsConstraintComponent
        fun C(Other: UObject): PhysicsConstraintComponent
        fun C(Other: Any): PhysicsConstraintComponent
    }
}

external open class PhysicsConstraintActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : RigidBodyBase {
    open var ConstraintComp: PhysicsConstraintComponent
    open var ConstraintActor1: Actor
    open var ConstraintActor2: Actor
    open var bDisableCollision: Boolean

    companion object {
        fun GetDefaultObject(): PhysicsConstraintActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PhysicsConstraintActor
        fun C(Other: UObject): PhysicsConstraintActor
        fun C(Other: Any): PhysicsConstraintActor
    }
}

external interface `T$721` {
    var TargetLocation: Vector
    var TargetRotation: Rotator
}

external open class PhysicsHandleComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var GrabbedComponent: PrimitiveComponent
    open var bSoftAngularConstraint: Boolean
    open var bSoftLinearConstraint: Boolean
    open var bInterpolateTarget: Boolean
    open var LinearDamping: Number
    open var LinearStiffness: Number
    open var AngularDamping: Number
    open var AngularStiffness: Number
    open var InterpolationSpeed: Number
    open fun SetTargetRotation(NewRotation: Rotator)
    open fun SetTargetLocationAndRotation(NewLocation: Vector, NewRotation: Rotator)
    open fun SetTargetLocation(NewLocation: Vector)
    open fun SetLinearStiffness(NewLinearStiffness: Number)
    open fun SetLinearDamping(NewLinearDamping: Number)
    open fun SetInterpolationSpeed(NewInterpolationSpeed: Number)
    open fun SetAngularStiffness(NewAngularStiffness: Number)
    open fun SetAngularDamping(NewAngularDamping: Number)
    open fun ReleaseComponent()
    open fun GrabComponentAtLocationWithRotation(Component: PrimitiveComponent, InBoneName: String, Location: Vector, Rotation: Rotator)
    open fun GrabComponentAtLocation(Component: PrimitiveComponent, InBoneName: String, GrabLocation: Vector)
    open fun GrabComponent(Component: PrimitiveComponent, InBoneName: String, GrabLocation: Vector, bConstrainRotation: Boolean)
    open fun GetTargetLocationAndRotation(TargetLocation: Vector = definedExternally, TargetRotation: Rotator = definedExternally): `T$721`
    open fun GetGrabbedComponent(): PrimitiveComponent

    companion object {
        fun Load(ResourceName: String): PhysicsHandleComponent
        fun Find(Outer: UObject, ResourceName: String): PhysicsHandleComponent
        fun GetDefaultObject(): PhysicsHandleComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PhysicsHandleComponent
        fun C(Other: UObject): PhysicsHandleComponent
        fun C(Other: Any): PhysicsHandleComponent
    }
}

external open class RigidBodyErrorCorrection {
    open var PingExtrapolation: Number
    open var PingLimit: Number
    open var ErrorPerLinearDifference: Number
    open var ErrorPerAngularDifference: Number
    open var MaxRestoredStateError: Number
    open var MaxLinearHardSnapDistance: Number
    open var PositionLerp: Number
    open var AngleLerp: Number
    open var LinearVelocityCoefficient: Number
    open var AngularVelocityCoefficient: Number
    open var ErrorAccumulationSeconds: Number
    open var ErrorAccumulationDistanceSq: Number
    open var ErrorAccumulationSimilarity: Number
    open fun clone(): RigidBodyErrorCorrection

    companion object {
        fun C(Other: UObject): RigidBodyErrorCorrection
        fun C(Other: Any): RigidBodyErrorCorrection
    }
}

external object ESettingsLockedAxis {
    var None: String /* "None" */
    var X: String /* "X" */
    var Y: String /* "Y" */
    var Z: String /* "Z" */
    var Invalid: String /* "Invalid" */
    var ESettingsLockedAxis_MAX: String /* "ESettingsLockedAxis_MAX" */
}

external object ESettingsDOF {
    var Full3D: String /* "Full3D" */
    var YZPlane: String /* "YZPlane" */
    var XZPlane: String /* "XZPlane" */
    var XYPlane: String /* "XYPlane" */
    var ESettingsDOF_MAX: String /* "ESettingsDOF_MAX" */
}

external open class PhysicalSurfaceName {
    open var Type: String /* "SurfaceType_Default" | "SurfaceType1" | "SurfaceType2" | "SurfaceType3" | "SurfaceType4" | "SurfaceType5" | "SurfaceType6" | "SurfaceType7" | "SurfaceType8" | "SurfaceType9" | "SurfaceType10" | "SurfaceType11" | "SurfaceType12" | "SurfaceType13" | "SurfaceType14" | "SurfaceType15" | "SurfaceType16" | "SurfaceType17" | "SurfaceType18" | "SurfaceType19" | "SurfaceType20" | "SurfaceType21" | "SurfaceType22" | "SurfaceType23" | "SurfaceType24" | "SurfaceType25" | "SurfaceType26" | "SurfaceType27" | "SurfaceType28" | "SurfaceType29" | "SurfaceType30" | "SurfaceType31" | "SurfaceType32" | "SurfaceType33" | "SurfaceType34" | "SurfaceType35" | "SurfaceType36" | "SurfaceType37" | "SurfaceType38" | "SurfaceType39" | "SurfaceType40" | "SurfaceType41" | "SurfaceType42" | "SurfaceType43" | "SurfaceType44" | "SurfaceType45" | "SurfaceType46" | "SurfaceType47" | "SurfaceType48" | "SurfaceType49" | "SurfaceType50" | "SurfaceType51" | "SurfaceType52" | "SurfaceType53" | "SurfaceType54" | "SurfaceType55" | "SurfaceType56" | "SurfaceType57" | "SurfaceType58" | "SurfaceType59" | "SurfaceType60" | "SurfaceType61" | "SurfaceType62" | "SurfaceType_Max" | "EPhysicalSurface_MAX" */
    open var Name: String
    open fun clone(): PhysicalSurfaceName

    companion object {
        fun C(Other: UObject): PhysicalSurfaceName
        fun C(Other: Any): PhysicalSurfaceName
    }
}

external object EChaosThreadingMode {
    var DedicatedThread: String /* "DedicatedThread" */
    var TaskGraph: String /* "TaskGraph" */
    var SingleThread: String /* "SingleThread" */
    var Num: String /* "Num" */
    var Invalid: String /* "Invalid" */
    var EChaosThreadingMode_MAX: String /* "EChaosThreadingMode_MAX" */
}

external object EChaosSolverTickMode {
    var Fixed: String /* "Fixed" */
    var Variable: String /* "Variable" */
    var VariableCapped: String /* "VariableCapped" */
    var VariableCappedWithTarget: String /* "VariableCappedWithTarget" */
    var EChaosSolverTickMode_MAX: String /* "EChaosSolverTickMode_MAX" */
}

external object EChaosBufferMode {
    var Double: String /* "Double" */
    var Triple: String /* "Triple" */
    var Num: String /* "Num" */
    var Invalid: String /* "Invalid" */
    var EChaosBufferMode_MAX: String /* "EChaosBufferMode_MAX" */
}

external open class ChaosPhysicsSettings {
    open var DefaultThreadingModel: String /* "DedicatedThread" | "TaskGraph" | "SingleThread" | "Num" | "Invalid" | "EChaosThreadingMode_MAX" */
    open var DedicatedThreadTickMode: String /* "Fixed" | "Variable" | "VariableCapped" | "VariableCappedWithTarget" | "EChaosSolverTickMode_MAX" */
    open var DedicatedThreadBufferMode: String /* "Double" | "Triple" | "Num" | "Invalid" | "EChaosBufferMode_MAX" */
    open fun clone(): ChaosPhysicsSettings

    companion object {
        fun C(Other: UObject): ChaosPhysicsSettings
        fun C(Other: Any): ChaosPhysicsSettings
    }
}

external open class PhysicsSettings : PhysicsSettingsCore {
    constructor()
    constructor(Outer: UObject)
    open var PhysicErrorCorrection: RigidBodyErrorCorrection
    open var LockedAxis: String /* "None" | "X" | "Y" | "Z" | "Invalid" | "ESettingsLockedAxis_MAX" */
    open var DefaultDegreesOfFreedom: String /* "Full3D" | "YZPlane" | "XZPlane" | "XYPlane" | "ESettingsDOF_MAX" */
    open var bSuppressFaceRemapTable: Boolean
    open var bSupportUVFromHitResults: Boolean
    open var bDisableActiveActors: Boolean
    open var bDisableKinematicStaticPairs: Boolean
    open var bDisableKinematicKinematicPairs: Boolean
    open var bDisableCCD: Boolean
    open var bEnableEnhancedDeterminism: Boolean
    open var AnimPhysicsMinDeltaTime: Number
    open var bSimulateAnimPhysicsAfterReset: Boolean
    open var MaxPhysicsDeltaTime: Number
    open var bSubstepping: Boolean
    open var bSubsteppingAsync: Boolean
    open var MaxSubstepDeltaTime: Number
    open var MaxSubsteps: Number
    open var SyncSceneSmoothingFactor: Number
    open var InitialAverageFrameRate: Number
    open var PhysXTreeRebuildRate: Number
    open var PhysicalSurfaces: Array<PhysicalSurfaceName>
    open var DefaultBroadphaseSettings: BroadphaseSettings
    open var MinDeltaVelocityForHitEvents: Number
    open var ChaosSettings: ChaosPhysicsSettings

    companion object {
        fun Load(ResourceName: String): PhysicsSettings
        fun Find(Outer: UObject, ResourceName: String): PhysicsSettings
        fun GetDefaultObject(): PhysicsSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PhysicsSettings
        fun C(Other: UObject): PhysicsSettings
        fun C(Other: Any): PhysicsSettings
    }
}

external open class PhysicsSpringComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var SpringStiffness: Number
    open var SpringDamping: Number
    open var SpringLengthAtRest: Number
    open var SpringRadius: Number
    open var SpringChannel: String /* "ECC_WorldStatic" | "ECC_WorldDynamic" | "ECC_Pawn" | "ECC_Visibility" | "ECC_Camera" | "ECC_PhysicsBody" | "ECC_Vehicle" | "ECC_Destructible" | "ECC_EngineTraceChannel1" | "ECC_EngineTraceChannel2" | "ECC_EngineTraceChannel3" | "ECC_EngineTraceChannel4" | "ECC_EngineTraceChannel5" | "ECC_EngineTraceChannel6" | "ECC_GameTraceChannel1" | "ECC_GameTraceChannel2" | "ECC_GameTraceChannel3" | "ECC_GameTraceChannel4" | "ECC_GameTraceChannel5" | "ECC_GameTraceChannel6" | "ECC_GameTraceChannel7" | "ECC_GameTraceChannel8" | "ECC_GameTraceChannel9" | "ECC_GameTraceChannel10" | "ECC_GameTraceChannel11" | "ECC_GameTraceChannel12" | "ECC_GameTraceChannel13" | "ECC_GameTraceChannel14" | "ECC_GameTraceChannel15" | "ECC_GameTraceChannel16" | "ECC_GameTraceChannel17" | "ECC_GameTraceChannel18" | "ECC_OverlapAll_Deprecated" | "ECC_MAX" */
    open var bIgnoreSelf: Boolean
    open var SpringCompression: Number
    open fun GetSpringRestingPoint(): Vector
    open fun GetSpringDirection(): Vector
    open fun GetSpringCurrentEndPoint(): Vector
    open fun GetNormalizedCompressionScalar(): Number

    companion object {
        fun Load(ResourceName: String): PhysicsSpringComponent
        fun Find(Outer: UObject, ResourceName: String): PhysicsSpringComponent
        fun GetDefaultObject(): PhysicsSpringComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PhysicsSpringComponent
        fun C(Other: UObject): PhysicsSpringComponent
        fun C(Other: Any): PhysicsSpringComponent
    }
}

external open class PhysicsThrusterComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var ThrustStrength: Number

    companion object {
        fun Load(ResourceName: String): PhysicsThrusterComponent
        fun Find(Outer: UObject, ResourceName: String): PhysicsThrusterComponent
        fun GetDefaultObject(): PhysicsThrusterComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PhysicsThrusterComponent
        fun C(Other: UObject): PhysicsThrusterComponent
        fun C(Other: Any): PhysicsThrusterComponent
    }
}

external open class PhysicsThruster(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : RigidBodyBase {
    open var ThrusterComponent: PhysicsThrusterComponent
    open var ArrowComponent: ArrowComponent

    companion object {
        fun GetDefaultObject(): PhysicsThruster
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PhysicsThruster
        fun C(Other: UObject): PhysicsThruster
        fun C(Other: Any): PhysicsThruster
    }
}

external open class SceneCapture(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var MeshComp: StaticMeshComponent
    open var SceneComponent: SceneComponent

    companion object {
        fun GetDefaultObject(): SceneCapture
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SceneCapture
        fun C(Other: UObject): SceneCapture
        fun C(Other: Any): SceneCapture
    }
}

external object ESceneCapturePrimitiveRenderMode {
    var PRM_LegacySceneCapture: String /* "PRM_LegacySceneCapture" */
    var PRM_RenderScenePrimitives: String /* "PRM_RenderScenePrimitives" */
    var PRM_UseShowOnlyList: String /* "PRM_UseShowOnlyList" */
    var PRM_MAX: String /* "PRM_MAX" */
}

external object ESceneCaptureSource {
    var SCS_SceneColorHDR: String /* "SCS_SceneColorHDR" */
    var SCS_SceneColorHDRNoAlpha: String /* "SCS_SceneColorHDRNoAlpha" */
    var SCS_FinalColorLDR: String /* "SCS_FinalColorLDR" */
    var SCS_SceneColorSceneDepth: String /* "SCS_SceneColorSceneDepth" */
    var SCS_SceneDepth: String /* "SCS_SceneDepth" */
    var SCS_DeviceDepth: String /* "SCS_DeviceDepth" */
    var SCS_Normal: String /* "SCS_Normal" */
    var SCS_BaseColor: String /* "SCS_BaseColor" */
    var SCS_FinalColorHDR: String /* "SCS_FinalColorHDR" */
    var SCS_FinalToneCurveHDR: String /* "SCS_FinalToneCurveHDR" */
    var SCS_MAX: String /* "SCS_MAX" */
}

external open class EngineShowFlagsSetting {
    open var ShowFlagName: String
    open var Enabled: Boolean
    open fun clone(): EngineShowFlagsSetting

    companion object {
        fun C(Other: UObject): EngineShowFlagsSetting
        fun C(Other: Any): EngineShowFlagsSetting
    }
}

external open class SceneCaptureComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var PrimitiveRenderMode: String /* "PRM_LegacySceneCapture" | "PRM_RenderScenePrimitives" | "PRM_UseShowOnlyList" | "PRM_MAX" */
    open var CaptureSource: String /* "SCS_SceneColorHDR" | "SCS_SceneColorHDRNoAlpha" | "SCS_FinalColorLDR" | "SCS_SceneColorSceneDepth" | "SCS_SceneDepth" | "SCS_DeviceDepth" | "SCS_Normal" | "SCS_BaseColor" | "SCS_FinalColorHDR" | "SCS_FinalToneCurveHDR" | "SCS_MAX" */
    open var bCaptureEveryFrame: Boolean
    open var bCaptureOnMovement: Boolean
    open var bAlwaysPersistRenderingState: Boolean
    open var HiddenComponents: Array<Any>
    open var HiddenActors: Array<Actor>
    open var ShowOnlyComponents: Array<Any>
    open var ShowOnlyActors: Array<Actor>
    open var LODDistanceFactor: Number
    open var MaxViewDistanceOverride: Number
    open var CaptureSortPriority: Number
    open var bUseRayTracingIfEnabled: Boolean
    open var ShowFlagSettings: Array<EngineShowFlagsSetting>
    open var ProfilingEventName: String
    open var CaptureMesh: StaticMesh
    open fun ShowOnlyComponent(InComponent: PrimitiveComponent)
    open fun ShowOnlyActorComponents(InActor: Actor, bIncludeFromChildActors: Boolean)
    open fun SetCaptureSortPriority(NewCaptureSortPriority: Number)
    open fun RemoveShowOnlyComponent(InComponent: PrimitiveComponent)
    open fun RemoveShowOnlyActorComponents(InActor: Actor, bIncludeFromChildActors: Boolean)
    open fun HideComponent(InComponent: PrimitiveComponent)
    open fun HideActorComponents(InActor: Actor, bIncludeFromChildActors: Boolean)
    open fun ClearShowOnlyComponents()
    open fun ClearHiddenComponents()

    companion object {
        fun Load(ResourceName: String): SceneCaptureComponent
        fun Find(Outer: UObject, ResourceName: String): SceneCaptureComponent
        fun GetDefaultObject(): SceneCaptureComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SceneCaptureComponent
        fun C(Other: UObject): SceneCaptureComponent
        fun C(Other: Any): SceneCaptureComponent
    }
}

external open class PlanarReflectionComponent : SceneCaptureComponent {
    constructor()
    constructor(Outer: UObject)
    open var PreviewBox: BoxComponent
    open var NormalDistortionStrength: Number
    open var PrefilterRoughness: Number
    open var PrefilterRoughnessDistance: Number
    open var ScreenPercentage: Number
    open var ExtraFOV: Number
    open var DistanceFromPlaneFadeStart: Number
    open var DistanceFromPlaneFadeEnd: Number
    open var DistanceFromPlaneFadeoutStart: Number
    open var DistanceFromPlaneFadeoutEnd: Number
    open var AngleFromPlaneFadeStart: Number
    open var AngleFromPlaneFadeEnd: Number
    open var bShowPreviewPlane: Boolean
    open var bRenderSceneTwoSided: Boolean
    open var CaptureMaterial: Material

    companion object {
        fun Load(ResourceName: String): PlanarReflectionComponent
        fun Find(Outer: UObject, ResourceName: String): PlanarReflectionComponent
        fun GetDefaultObject(): PlanarReflectionComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PlanarReflectionComponent
        fun C(Other: UObject): PlanarReflectionComponent
        fun C(Other: Any): PlanarReflectionComponent
    }
}

external open class PlanarReflection(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : SceneCapture {
    open var PlanarReflectionComponent: PlanarReflectionComponent
    open var SpriteComponent: BillboardComponent
    open var bShowPreviewPlane: Boolean
    open fun OnInterpToggle(bEnable: Boolean)

    companion object {
        fun GetDefaultObject(): PlanarReflection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PlanarReflection
        fun C(Other: UObject): PlanarReflection
        fun C(Other: Any): PlanarReflection
    }
}

external open class PlaneReflectionCapture(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : ReflectionCapture {
    companion object {
        fun GetDefaultObject(): PlaneReflectionCapture
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PlaneReflectionCapture
        fun C(Other: UObject): PlaneReflectionCapture
        fun C(Other: Any): PlaneReflectionCapture
    }
}

external open class PlaneReflectionCaptureComponent : ReflectionCaptureComponent {
    constructor()
    constructor(Outer: UObject)
    open var InfluenceRadiusScale: Number
    open var PreviewInfluenceRadius: DrawSphereComponent
    open var PreviewCaptureBox: BoxComponent

    companion object {
        fun Load(ResourceName: String): PlaneReflectionCaptureComponent
        fun Find(Outer: UObject, ResourceName: String): PlaneReflectionCaptureComponent
        fun GetDefaultObject(): PlaneReflectionCaptureComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PlaneReflectionCaptureComponent
        fun C(Other: UObject): PlaneReflectionCaptureComponent
        fun C(Other: Any): PlaneReflectionCaptureComponent
    }
}

external open class PlatformEventsComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var PlatformChangedToLaptopModeDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var PlatformChangedToTabletModeDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open fun SupportsConvertibleLaptops(): Boolean
    open fun IsInTabletMode(): Boolean
    open fun IsInLaptopMode(): Boolean

    companion object {
        fun Load(ResourceName: String): PlatformEventsComponent
        fun Find(Outer: UObject, ResourceName: String): PlatformEventsComponent
        fun GetDefaultObject(): PlatformEventsComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PlatformEventsComponent
        fun C(Other: UObject): PlatformEventsComponent
        fun C(Other: Any): PlatformEventsComponent
    }
}

external interface `T$722` {
    var Header: String
    var Value: String
}

external open class PlatformInterfaceWebResponse : UObject {
    constructor()
    constructor(Outer: UObject)
    open var OriginalURL: String
    open var ResponseCode: Number
    open var Tag: Number
    open var StringResponse: String
    open var BinaryResponse: Array<Number>
    open fun GetNumHeaders(): Number
    open fun GetHeaderValue(HeaderName: String): String
    open fun GetHeader(HeaderIndex: Number, Header: String = definedExternally, Value: String = definedExternally): `T$722`

    companion object {
        fun Load(ResourceName: String): PlatformInterfaceWebResponse
        fun Find(Outer: UObject, ResourceName: String): PlatformInterfaceWebResponse
        fun GetDefaultObject(): PlatformInterfaceWebResponse
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PlatformInterfaceWebResponse
        fun C(Other: UObject): PlatformInterfaceWebResponse
        fun C(Other: Any): PlatformInterfaceWebResponse
    }
}

external open class PlayerStart(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : NavigationObjectBase {
    open var PlayerStartTag: String
    open var ArrowComponent: ArrowComponent

    companion object {
        fun GetDefaultObject(): PlayerStart
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PlayerStart
        fun C(Other: UObject): PlayerStart
        fun C(Other: Any): PlayerStart
    }
}

external open class PlayerStartPIE(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : PlayerStart {
    companion object {
        fun GetDefaultObject(): PlayerStartPIE
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PlayerStartPIE
        fun C(Other: UObject): PlayerStartPIE
        fun C(Other: Any): PlayerStartPIE
    }
}

external open class PluginCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PluginCommandlet
        fun Find(Outer: UObject, ResourceName: String): PluginCommandlet
        fun GetDefaultObject(): PluginCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PluginCommandlet
        fun C(Other: UObject): PluginCommandlet
        fun C(Other: Any): PluginCommandlet
    }
}

external open class PointLight(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Light {
    open var PointLightComponent: PointLightComponent
    open fun SetRadius(NewRadius: Number)
    open fun SetLightFalloffExponent(NewLightFalloffExponent: Number)

    companion object {
        fun GetDefaultObject(): PointLight
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PointLight
        fun C(Other: UObject): PointLight
        fun C(Other: Any): PointLight
    }
}

external open class Polys : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): Polys
        fun Find(Outer: UObject, ResourceName: String): Polys
        fun GetDefaultObject(): Polys
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Polys
        fun C(Other: UObject): Polys
        fun C(Other: Any): Polys
    }
}

external object EBoneSpaces {
    var WorldSpace: String /* "WorldSpace" */
    var ComponentSpace: String /* "ComponentSpace" */
    var EBoneSpaces_MAX: String /* "EBoneSpaces_MAX" */
}

external open class PoseableMeshComponent : SkinnedMeshComponent {
    constructor()
    constructor(Outer: UObject)
    open fun SetBoneTransformByName(BoneName: String, InTransform: Transform, BoneSpace: String /* "WorldSpace" | "ComponentSpace" | "EBoneSpaces_MAX" */)
    open fun SetBoneScaleByName(BoneName: String, InScale3D: Vector, BoneSpace: String /* "WorldSpace" | "ComponentSpace" | "EBoneSpaces_MAX" */)
    open fun SetBoneRotationByName(BoneName: String, InRotation: Rotator, BoneSpace: String /* "WorldSpace" | "ComponentSpace" | "EBoneSpaces_MAX" */)
    open fun SetBoneLocationByName(BoneName: String, InLocation: Vector, BoneSpace: String /* "WorldSpace" | "ComponentSpace" | "EBoneSpaces_MAX" */)
    open fun ResetBoneTransformByName(BoneName: String)
    open fun GetBoneTransformByName(BoneName: String, BoneSpace: String /* "WorldSpace" | "ComponentSpace" | "EBoneSpaces_MAX" */): Transform
    open fun GetBoneScaleByName(BoneName: String, BoneSpace: String /* "WorldSpace" | "ComponentSpace" | "EBoneSpaces_MAX" */): Vector
    open fun GetBoneRotationByName(BoneName: String, BoneSpace: String /* "WorldSpace" | "ComponentSpace" | "EBoneSpaces_MAX" */): Rotator
    open fun GetBoneLocationByName(BoneName: String, BoneSpace: String /* "WorldSpace" | "ComponentSpace" | "EBoneSpaces_MAX" */): Vector
    open fun CopyPoseFromSkeletalComponent(InComponentToCopy: SkeletalMeshComponent)

    companion object {
        fun Load(ResourceName: String): PoseableMeshComponent
        fun Find(Outer: UObject, ResourceName: String): PoseableMeshComponent
        fun GetDefaultObject(): PoseableMeshComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PoseableMeshComponent
        fun C(Other: UObject): PoseableMeshComponent
        fun C(Other: Any): PoseableMeshComponent
    }
}

external open class PostProcessVolume(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Volume {
    open var Settings: PostProcessSettings
    open var Priority: Number
    open var BlendRadius: Number
    open var BlendWeight: Number
    open var bEnabled: Boolean
    open var bUnbound: Boolean

    companion object {
        fun GetDefaultObject(): PostProcessVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PostProcessVolume
        fun C(Other: UObject): PostProcessVolume
        fun C(Other: Any): PostProcessVolume
    }
}

external open class PrecomputedVisibilityOverrideVolume(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Volume {
    open var OverrideVisibleActors: Array<Actor>
    open var OverrideInvisibleActors: Array<Actor>
    open var OverrideInvisibleLevels: Array<String>

    companion object {
        fun GetDefaultObject(): PrecomputedVisibilityOverrideVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PrecomputedVisibilityOverrideVolume
        fun C(Other: UObject): PrecomputedVisibilityOverrideVolume
        fun C(Other: Any): PrecomputedVisibilityOverrideVolume
    }
}

external open class PrecomputedVisibilityVolume(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Volume {
    companion object {
        fun GetDefaultObject(): PrecomputedVisibilityVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PrecomputedVisibilityVolume
        fun C(Other: UObject): PrecomputedVisibilityVolume
        fun C(Other: Any): PrecomputedVisibilityVolume
    }
}

external open class PreviewCollectionInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PreviewCollectionInterface
        fun Find(Outer: UObject, ResourceName: String): PreviewCollectionInterface
        fun GetDefaultObject(): PreviewCollectionInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PreviewCollectionInterface
        fun C(Other: UObject): PreviewCollectionInterface
        fun C(Other: Any): PreviewCollectionInterface
    }
}

external open class PreviewMeshCollectionEntry {
    open var SkeletalMesh: SkeletalMesh
    open fun clone(): PreviewMeshCollectionEntry

    companion object {
        fun C(Other: UObject): PreviewMeshCollectionEntry
        fun C(Other: Any): PreviewMeshCollectionEntry
    }
}

external open class PreviewMeshCollection : DataAsset {
    constructor()
    constructor(Outer: UObject)
    open var Skeleton: Skeleton
    open var SkeletalMeshes: Array<PreviewMeshCollectionEntry>

    companion object {
        fun Load(ResourceName: String): PreviewMeshCollection
        fun Find(Outer: UObject, ResourceName: String): PreviewMeshCollection
        fun GetDefaultObject(): PreviewMeshCollection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PreviewMeshCollection
        fun C(Other: UObject): PreviewMeshCollection
        fun C(Other: Any): PreviewMeshCollection
    }
}

external open class CollectionReference {
    open var CollectionName: String
    open fun clone(): CollectionReference

    companion object {
        fun C(Other: UObject): CollectionReference
        fun C(Other: Any): CollectionReference
    }
}

external open class PrimaryAssetLabel : PrimaryDataAsset {
    constructor()
    constructor(Outer: UObject)
    open var Rules: PrimaryAssetRules
    open var bLabelAssetsInMyDirectory: Boolean
    open var bIsRuntimeLabel: Boolean
    open var ExplicitAssets: Array<UObject>
    open var ExplicitBlueprints: Array<Class>
    open var AssetCollection: CollectionReference

    companion object {
        fun Load(ResourceName: String): PrimaryAssetLabel
        fun Find(Outer: UObject, ResourceName: String): PrimaryAssetLabel
        fun GetDefaultObject(): PrimaryAssetLabel
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PrimaryAssetLabel
        fun C(Other: UObject): PrimaryAssetLabel
        fun C(Other: Any): PrimaryAssetLabel
    }
}

external open class ProjectileMovementComponent : MovementComponent {
    constructor()
    constructor(Outer: UObject)
    open var InitialSpeed: Number
    open var MaxSpeed: Number
    open var bRotationFollowsVelocity: Boolean
    open var bRotationRemainsVertical: Boolean
    open var bShouldBounce: Boolean
    open var bInitialVelocityInLocalSpace: Boolean
    open var bForceSubStepping: Boolean
    open var bSimulationEnabled: Boolean
    open var bSweepCollision: Boolean
    open var bIsHomingProjectile: Boolean
    open var bBounceAngleAffectsFriction: Boolean
    open var bIsSliding: Boolean
    open var bInterpMovement: Boolean
    open var bInterpRotation: Boolean
    open var PreviousHitTime: Number
    open var PreviousHitNormal: Vector
    open var ProjectileGravityScale: Number
    open var Buoyancy: Number
    open var Bounciness: Number
    open var Friction: Number
    open var BounceVelocityStopSimulatingThreshold: Number
    open var MinFrictionFraction: Number
    open var OnProjectileBounce: UnrealEngineMulticastDelegate<(ImpactResult: HitResult, ImpactVelocity: Vector) -> Unit>
    open var OnProjectileStop: UnrealEngineMulticastDelegate<(ImpactResult: HitResult) -> Unit>
    open var HomingAccelerationMagnitude: Number
    open var HomingTargetComponent: Any
    open var MaxSimulationTimeStep: Number
    open var MaxSimulationIterations: Number
    open var BounceAdditionalIterations: Number
    open var InterpLocationTime: Number
    open var InterpRotationTime: Number
    open var InterpLocationMaxLagDistance: Number
    open var InterpLocationSnapToTargetDistance: Number
    open fun StopSimulating(HitResult: HitResult)
    open fun SetVelocityInLocalSpace(NewVelocity: Vector)
    open fun SetInterpolatedComponent(Component: SceneComponent)
    open fun ResetInterpolation()
    open fun MoveInterpolationTarget(NewLocation: Vector, NewRotation: Rotator)
    open fun LimitVelocity(NewVelocity: Vector): Vector
    open fun IsVelocityUnderSimulationThreshold(): Boolean
    open fun IsInterpolationComplete(): Boolean

    companion object {
        fun Load(ResourceName: String): ProjectileMovementComponent
        fun Find(Outer: UObject, ResourceName: String): ProjectileMovementComponent
        fun GetDefaultObject(): ProjectileMovementComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ProjectileMovementComponent
        fun C(Other: UObject): ProjectileMovementComponent
        fun C(Other: Any): ProjectileMovementComponent
    }
}

external open class ProxyLODMeshSimplificationSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var ProxyLODMeshReductionModuleName: String

    companion object {
        fun Load(ResourceName: String): ProxyLODMeshSimplificationSettings
        fun Find(Outer: UObject, ResourceName: String): ProxyLODMeshSimplificationSettings
        fun GetDefaultObject(): ProxyLODMeshSimplificationSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ProxyLODMeshSimplificationSettings
        fun C(Other: UObject): ProxyLODMeshSimplificationSettings
        fun C(Other: Any): ProxyLODMeshSimplificationSettings
    }
}

external open class RadialForceComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var Radius: Number
    open var Falloff: String /* "RIF_Constant" | "RIF_Linear" | "RIF_MAX" */
    open var ImpulseStrength: Number
    open var bImpulseVelChange: Boolean
    open var bIgnoreOwningActor: Boolean
    open var ForceStrength: Number
    open var DestructibleDamage: Number
    open var ObjectTypesToAffect: Array<String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */>
    open fun RemoveObjectTypeToAffect(ObjectType: String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */)
    open fun FireImpulse()
    open fun AddObjectTypeToAffect(ObjectType: String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */)

    companion object {
        fun Load(ResourceName: String): RadialForceComponent
        fun Find(Outer: UObject, ResourceName: String): RadialForceComponent
        fun GetDefaultObject(): RadialForceComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RadialForceComponent
        fun C(Other: UObject): RadialForceComponent
        fun C(Other: Any): RadialForceComponent
    }
}

external open class RadialForceActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : RigidBodyBase {
    open var ForceComponent: RadialForceComponent
    open var SpriteComponent: BillboardComponent
    open fun ToggleForce()
    open fun FireImpulse()
    open fun EnableForce()
    open fun DisableForce()

    companion object {
        fun GetDefaultObject(): RadialForceActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RadialForceActor
        fun C(Other: UObject): RadialForceActor
        fun C(Other: Any): RadialForceActor
    }
}

external open class RectLightComponent : LocalLightComponent {
    constructor()
    constructor(Outer: UObject)
    open var SourceWidth: Number
    open var SourceHeight: Number
    open var BarnDoorAngle: Number
    open var BarnDoorLength: Number
    open var SourceTexture: Texture
    open fun SetSourceWidth(bNewValue: Number)
    open fun SetSourceTexture(bNewValue: Texture)
    open fun SetSourceHeight(NewValue: Number)
    open fun SetBarnDoorLength(NewValue: Number)
    open fun SetBarnDoorAngle(NewValue: Number)

    companion object {
        fun Load(ResourceName: String): RectLightComponent
        fun Find(Outer: UObject, ResourceName: String): RectLightComponent
        fun GetDefaultObject(): RectLightComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RectLightComponent
        fun C(Other: UObject): RectLightComponent
        fun C(Other: Any): RectLightComponent
    }
}

external open class RectLight(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Light {
    open var RectLightComponent: RectLightComponent

    companion object {
        fun GetDefaultObject(): RectLight
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RectLight
        fun C(Other: UObject): RectLight
        fun C(Other: Any): RectLight
    }
}

external object EMobileMSAASampleCount {
    var One: String /* "One" */
    var Two: String /* "Two" */
    var Four: String /* "Four" */
    var Eight: String /* "Eight" */
    var EMobileMSAASampleCount_MAX: String /* "EMobileMSAASampleCount_MAX" */
}

external object ETranslucentSortPolicy {
    var SortByDistance: String /* "SortByDistance" */
    var SortByProjectedZ: String /* "SortByProjectedZ" */
    var SortAlongAxis: String /* "SortAlongAxis" */
    var ETranslucentSortPolicy_MAX: String /* "ETranslucentSortPolicy_MAX" */
}

external object EFixedFoveationLevels {
    var Disabled: String /* "Disabled" */
    var Low: String /* "Low" */
    var Medium: String /* "Medium" */
    var High: String /* "High" */
    var EFixedFoveationLevels_MAX: String /* "EFixedFoveationLevels_MAX" */
}

external object ECustomDepthStencil {
    var Disabled: String /* "Disabled" */
    var Enabled: String /* "Enabled" */
    var EnabledOnDemand: String /* "EnabledOnDemand" */
    var EnabledWithStencil: String /* "EnabledWithStencil" */
    var ECustomDepthStencil_MAX: String /* "ECustomDepthStencil_MAX" */
}

external object EAlphaChannelMode {
    var Disabled: String /* "Disabled" */
    var LinearColorSpaceOnly: String /* "LinearColorSpaceOnly" */
    var AllowThroughTonemapper: String /* "AllowThroughTonemapper" */
    var EAlphaChannelMode_MAX: String /* "EAlphaChannelMode_MAX" */
}

external object EAutoExposureMethodUI {
    var AEM_Histogram: String /* "AEM_Histogram" */
    var AEM_Basic: String /* "AEM_Basic" */
    var AEM_Manual: String /* "AEM_Manual" */
    var AEM_MAX: String /* "AEM_MAX" */
}

external object EAntiAliasingMethod {
    var AAM_None: String /* "AAM_None" */
    var AAM_FXAA: String /* "AAM_FXAA" */
    var AAM_TemporalAA: String /* "AAM_TemporalAA" */
    var AAM_MSAA: String /* "AAM_MSAA" */
    var AAM_MAX: String /* "AAM_MAX" */
}

external object EDefaultBackBufferPixelFormat {
    var DBBPF_B8G8R8A8: String /* "DBBPF_B8G8R8A8" */
    var DBBPF_A16B16G16R16_DEPRECATED: String /* "DBBPF_A16B16G16R16_DEPRECATED" */
    var DBBPF_FloatRGB_DEPRECATED: String /* "DBBPF_FloatRGB_DEPRECATED" */
    var DBBPF_FloatRGBA: String /* "DBBPF_FloatRGBA" */
    var DBBPF_A2B10G10R10: String /* "DBBPF_A2B10G10R10" */
    var DBBPF_MAX: String /* "DBBPF_MAX" */
}

external object EEarlyZPass {
    var None: String /* "None" */
    var OpaqueOnly: String /* "OpaqueOnly" */
    var OpaqueAndMasked: String /* "OpaqueAndMasked" */
    var Auto: String /* "Auto" */
    var EEarlyZPass_MAX: String /* "EEarlyZPass_MAX" */
}

external object EClearSceneOptions {
    var NoClear: String /* "NoClear" */
    var HardwareClear: String /* "HardwareClear" */
    var QuadAtMaxZ: String /* "QuadAtMaxZ" */
    var EClearSceneOptions_MAX: String /* "EClearSceneOptions_MAX" */
}

external object EGBufferFormat {
    var Force8BitsPerChannel: String /* "Force8BitsPerChannel" */
    var Default: String /* "Default" */
    var HighPrecisionNormals: String /* "HighPrecisionNormals" */
    var Force16BitsPerChannel: String /* "Force16BitsPerChannel" */
    var EGBufferFormat_MAX: String /* "EGBufferFormat_MAX" */
}

external object ESkinCacheDefaultBehavior {
    var Exclusive: String /* "Exclusive" */
    var Inclusive: String /* "Inclusive" */
    var ESkinCacheDefaultBehavior_MAX: String /* "ESkinCacheDefaultBehavior_MAX" */
}

external object EMobilePlanarReflectionMode {
    var Usual: String /* "Usual" */
    var MobilePPRExclusive: String /* "MobilePPRExclusive" */
    var MobilePPR: String /* "MobilePPR" */
    var EMobilePlanarReflectionMode_MAX: String /* "EMobilePlanarReflectionMode_MAX" */
}

external open class RendererSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var bMobileDisableVertexFog: Boolean
    open var MaxMobileCascades: Number
    open var MobileMSAASampleCount: String /* "One" | "Two" | "Four" | "Eight" | "EMobileMSAASampleCount_MAX" */
    open var bMobileAllowDitheredLODTransition: Boolean
    open var bMobileAllowSoftwareOcclusionCulling: Boolean
    open var bMobileVirtualTextures: Boolean
    open var bDiscardUnusedQualityLevels: Boolean
    open var bOcclusionCulling: Boolean
    open var MinScreenRadiusForLights: Number
    open var MinScreenRadiusForEarlyZPass: Number
    open var MinScreenRadiusForCSMdepth: Number
    open var bPrecomputedVisibilityWarning: Boolean
    open var bTextureStreaming: Boolean
    open var bUseDXT5NormalMaps: Boolean
    open var bVirtualTextures: Boolean
    open var bVirtualTextureEnableAutoImport: Boolean
    open var bVirtualTexturedLightmaps: Boolean
    open var VirtualTextureTileSize: Any
    open var VirtualTextureTileBorderSize: Any
    open var VirtualTextureFeedbackFactor: Any
    open var bVirtualTextureEnableCompressZlib: Boolean
    open var bVirtualTextureEnableCompressCrunch: Boolean
    open var bClearCoatEnableSecondNormal: Boolean
    open var ReflectionCaptureResolution: Number
    open var bReflectionCaptureCompression: Boolean
    open var ReflectionEnvironmentLightmapMixBasedOnRoughness: Boolean
    open var bForwardShading: Boolean
    open var bVertexFoggingForOpaque: Boolean
    open var bAllowStaticLighting: Boolean
    open var bUseNormalMapsForStaticLighting: Boolean
    open var bGenerateMeshDistanceFields: Boolean
    open var bEightBitMeshDistanceFields: Boolean
    open var bGenerateLandscapeGIData: Boolean
    open var bCompressMeshDistanceFields: Boolean
    open var TessellationAdaptivePixelsPerTriangle: Number
    open var bSeparateTranslucency: Boolean
    open var TranslucentSortPolicy: String /* "SortByDistance" | "SortByProjectedZ" | "SortAlongAxis" | "ETranslucentSortPolicy_MAX" */
    open var TranslucentSortAxis: Vector
    open var HMDFixedFoveationLevel: String /* "Disabled" | "Low" | "Medium" | "High" | "EFixedFoveationLevels_MAX" */
    open var CustomDepthStencil: String /* "Disabled" | "Enabled" | "EnabledOnDemand" | "EnabledWithStencil" | "ECustomDepthStencil_MAX" */
    open var bCustomDepthTaaJitter: Boolean
    open var bEnableAlphaChannelInPostProcessing: String /* "Disabled" | "LinearColorSpaceOnly" | "AllowThroughTonemapper" | "EAlphaChannelMode_MAX" */
    open var bDefaultFeatureBloom: Boolean
    open var bDefaultFeatureAmbientOcclusion: Boolean
    open var bDefaultFeatureAmbientOcclusionStaticFraction: Boolean
    open var bDefaultFeatureAutoExposure: Boolean
    open var DefaultFeatureAutoExposure: String /* "AEM_Histogram" | "AEM_Basic" | "AEM_Manual" | "AEM_MAX" */
    open var DefaultFeatureAutoExposureBias: Number
    open var bExtendDefaultLuminanceRangeInAutoExposureSettings: Boolean
    open var bUsePreExposure: Boolean
    open var bEnablePreExposureOnlyInTheEditor: Boolean
    open var bDefaultFeatureMotionBlur: Boolean
    open var bDefaultFeatureLensFlare: Boolean
    open var bTemporalUpsampling: Boolean
    open var bSSGI: Boolean
    open var DefaultFeatureAntiAliasing: String /* "AAM_None" | "AAM_FXAA" | "AAM_TemporalAA" | "AAM_MSAA" | "AAM_MAX" */
    open var DefaultLightUnits: String /* "Unitless" | "Candelas" | "Lumens" | "ELightUnits_MAX" */
    open var DefaultBackBufferPixelFormat: String /* "DBBPF_B8G8R8A8" | "DBBPF_A16B16G16R16_DEPRECATED" | "DBBPF_FloatRGB_DEPRECATED" | "DBBPF_FloatRGBA" | "DBBPF_A2B10G10R10" | "DBBPF_MAX" */
    open var bRenderUnbuiltPreviewShadowsInGame: Boolean
    open var bStencilForLODDither: Boolean
    open var EarlyZPass: String /* "None" | "OpaqueOnly" | "OpaqueAndMasked" | "Auto" | "EEarlyZPass_MAX" */
    open var bEarlyZPassOnlyMaterialMasking: Boolean
    open var bDBuffer: Boolean
    open var ClearSceneMethod: String /* "NoClear" | "HardwareClear" | "QuadAtMaxZ" | "EClearSceneOptions_MAX" */
    open var bBasePassOutputsVelocity: Boolean
    open var bVertexDeformationOutputsVelocity: Boolean
    open var bSelectiveBasePassOutputs: Boolean
    open var bDefaultParticleCutouts: Boolean
    open var GPUSimulationTextureSizeX: Number
    open var GPUSimulationTextureSizeY: Number
    open var bGlobalClipPlane: Boolean
    open var GBufferFormat: String /* "Force8BitsPerChannel" | "Default" | "HighPrecisionNormals" | "Force16BitsPerChannel" | "EGBufferFormat_MAX" */
    open var bUseGPUMorphTargets: Boolean
    open var bNvidiaAftermathEnabled: Boolean
    open var bMultiView: Boolean
    open var bMobilePostProcessing: Boolean
    open var bMobileMultiView: Boolean
    open var bMobileUseHWsRGBEncoding: Boolean
    open var bRoundRobinOcclusion: Boolean
    open var bODSCapture: Boolean
    open var bMeshStreaming: Boolean
    open var WireframeCullThreshold: Number
    open var bEnableRayTracing: Boolean
    open var bEnableRayTracingTextureLOD: Boolean
    open var bSupportStationarySkylight: Boolean
    open var bSupportLowQualityLightmaps: Boolean
    open var bSupportPointLightWholeSceneShadows: Boolean
    open var bSupportAtmosphericFog: Boolean
    open var bSupportSkyAtmosphere: Boolean
    open var bSupportSkyAtmosphereAffectsHeightFog: Boolean
    open var bSupportSkinCacheShaders: Boolean
    open var DefaultSkinCacheBehavior: String /* "Exclusive" | "Inclusive" | "ESkinCacheDefaultBehavior_MAX" */
    open var SkinCacheSceneMemoryLimitInMB: Number
    open var bMobileEnableStaticAndCSMShadowReceivers: Boolean
    open var bMobileEnableMovableLightCSMShaderCulling: Boolean
    open var bMobileAllowDistanceFieldShadows: Boolean
    open var bMobileAllowMovableDirectionalLights: Boolean
    open var MobileNumDynamicPointLights: Any
    open var bMobileDynamicPointLightsUseStaticBranch: Boolean
    open var bMobileAllowMovableSpotlights: Boolean
    open var bMobileAllowMovableSpotlightShadows: Boolean
    open var bSupport16BitBoneIndex: Boolean
    open var bGPUSkinLimit2BoneInfluences: Boolean
    open var bSupportDepthOnlyIndexBuffers: Boolean
    open var bSupportReversedIndexBuffers: Boolean
    open var bLPV: Boolean
    open var bMobileAmbientOcclusion: Boolean
    open var bUseUnlimitedBoneInfluences: Boolean
    open var UnlimitedBonInfluencesThreshold: Number
    open var MaxSkinBones: PerPlatformInt
    open var MobilePlanarReflectionMode: String /* "Usual" | "MobilePPRExclusive" | "MobilePPR" | "EMobilePlanarReflectionMode_MAX" */
    open var bMobileSupportsGen4TAA: Boolean
    open var bStreamSkeletalMeshLODs: PerPlatformBool
    open var bDiscardSkeletalMeshOptionalLODs: PerPlatformBool
    open var VisualizeCalibrationColorMaterialPath: SoftObjectPath
    open var VisualizeCalibrationCustomMaterialPath: SoftObjectPath
    open var VisualizeCalibrationGrayscaleMaterialPath: SoftObjectPath

    companion object {
        fun Load(ResourceName: String): RendererSettings
        fun Find(Outer: UObject, ResourceName: String): RendererSettings
        fun GetDefaultObject(): RendererSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RendererSettings
        fun C(Other: UObject): RendererSettings
        fun C(Other: Any): RendererSettings
    }
}

external open class RendererOverrideSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var bSupportAllShaderPermutations: Boolean
    open var bForceRecomputeTangents: Boolean

    companion object {
        fun Load(ResourceName: String): RendererOverrideSettings
        fun Find(Outer: UObject, ResourceName: String): RendererOverrideSettings
        fun GetDefaultObject(): RendererOverrideSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RendererOverrideSettings
        fun C(Other: UObject): RendererOverrideSettings
        fun C(Other: Any): RendererOverrideSettings
    }
}

external open class ReplayNetConnection : NetConnection {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ReplayNetConnection
        fun Find(Outer: UObject, ResourceName: String): ReplayNetConnection
        fun GetDefaultObject(): ReplayNetConnection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ReplayNetConnection
        fun C(Other: UObject): ReplayNetConnection
        fun C(Other: Any): ReplayNetConnection
    }
}

external open class ReplaySubsystem : GameInstanceSubsystem {
    constructor()
    constructor(Outer: UObject)
    open var bLoadDefaultMapOnStop: Boolean

    companion object {
        fun Load(ResourceName: String): ReplaySubsystem
        fun Find(Outer: UObject, ResourceName: String): ReplaySubsystem
        fun GetDefaultObject(): ReplaySubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ReplaySubsystem
        fun C(Other: UObject): ReplaySubsystem
        fun C(Other: Any): ReplaySubsystem
    }
}

external open class ReplicationConnectionDriver : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ReplicationConnectionDriver
        fun Find(Outer: UObject, ResourceName: String): ReplicationConnectionDriver
        fun GetDefaultObject(): ReplicationConnectionDriver
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ReplicationConnectionDriver
        fun C(Other: UObject): ReplicationConnectionDriver
        fun C(Other: Any): ReplicationConnectionDriver
    }
}

external open class RotatingMovementComponent : MovementComponent {
    constructor()
    constructor(Outer: UObject)
    open var RotationRate: Rotator
    open var PivotTranslation: Vector
    open var bRotationInLocalSpace: Boolean

    companion object {
        fun Load(ResourceName: String): RotatingMovementComponent
        fun Find(Outer: UObject, ResourceName: String): RotatingMovementComponent
        fun GetDefaultObject(): RotatingMovementComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RotatingMovementComponent
        fun C(Other: UObject): RotatingMovementComponent
        fun C(Other: Any): RotatingMovementComponent
    }
}

external open class RuntimeOptionsBase : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): RuntimeOptionsBase
        fun Find(Outer: UObject, ResourceName: String): RuntimeOptionsBase
        fun GetDefaultObject(): RuntimeOptionsBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RuntimeOptionsBase
        fun C(Other: UObject): RuntimeOptionsBase
        fun C(Other: Any): RuntimeOptionsBase
    }
}

external open class VirtualTextureBuildSettings {
    open var TileSize: Number
    open var TileBorderSize: Number
    open var bEnableCompressCrunch: Boolean
    open var bEnableCompressZlib: Boolean
    open fun clone(): VirtualTextureBuildSettings

    companion object {
        fun C(Other: UObject): VirtualTextureBuildSettings
        fun C(Other: Any): VirtualTextureBuildSettings
    }
}

external open class VirtualTexture2D : Texture2D {
    constructor()
    constructor(Outer: UObject)
    open var Settings: VirtualTextureBuildSettings
    open var bContinuousUpdate: Boolean
    open var bSinglePhysicalSpace: Boolean

    companion object {
        fun Load(ResourceName: String): VirtualTexture2D
        fun Find(Outer: UObject, ResourceName: String): VirtualTexture2D
        fun GetDefaultObject(): VirtualTexture2D
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VirtualTexture2D
        fun C(Other: UObject): VirtualTexture2D
        fun C(Other: Any): VirtualTexture2D
    }
}

external open class VirtualTextureBuilder : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Texture: VirtualTexture2D
    open var BuildHash: Any

    companion object {
        fun Load(ResourceName: String): VirtualTextureBuilder
        fun Find(Outer: UObject, ResourceName: String): VirtualTextureBuilder
        fun GetDefaultObject(): VirtualTextureBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VirtualTextureBuilder
        fun C(Other: UObject): VirtualTextureBuilder
        fun C(Other: Any): VirtualTextureBuilder
    }
}

external open class RuntimeVirtualTextureComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var BoundsAlignActor: Actor
    open var bSetBoundsButton: Boolean
    open var bSnapBoundsToLandscape: Boolean
    open var VirtualTexture: RuntimeVirtualTexture
    open var bEnableScalability: Boolean
    open var ScalabilityGroup: Any
    open var bHidePrimitives: Boolean
    open var StreamingTexture: VirtualTextureBuilder
    open var StreamLowMips: Number
    open var bBuildStreamingMipsButton: Boolean
    open var bEnableCompressCrunch: Boolean
    open var bUseStreamingLowMipsInEditor: Boolean
    open var bBuildDebugStreamingMips: Boolean
    open fun Invalidate(WorldBounds: BoxSphereBounds)

    companion object {
        fun Load(ResourceName: String): RuntimeVirtualTextureComponent
        fun Find(Outer: UObject, ResourceName: String): RuntimeVirtualTextureComponent
        fun GetDefaultObject(): RuntimeVirtualTextureComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RuntimeVirtualTextureComponent
        fun C(Other: UObject): RuntimeVirtualTextureComponent
        fun C(Other: Any): RuntimeVirtualTextureComponent
    }
}

external open class RuntimeVirtualTextureVolume(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var VirtualTextureComponent: RuntimeVirtualTextureComponent
    open var Box: BoxComponent

    companion object {
        fun GetDefaultObject(): RuntimeVirtualTextureVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RuntimeVirtualTextureVolume
        fun C(Other: UObject): RuntimeVirtualTextureVolume
        fun C(Other: Any): RuntimeVirtualTextureVolume
    }
}

external open class RVOAvoidanceInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): RVOAvoidanceInterface
        fun Find(Outer: UObject, ResourceName: String): RVOAvoidanceInterface
        fun GetDefaultObject(): RVOAvoidanceInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RVOAvoidanceInterface
        fun C(Other: UObject): RVOAvoidanceInterface
        fun C(Other: Any): RVOAvoidanceInterface
    }
}

external open class Scene : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): Scene
        fun Find(Outer: UObject, ResourceName: String): Scene
        fun GetDefaultObject(): Scene
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Scene
        fun C(Other: UObject): Scene
        fun C(Other: Any): Scene
    }
}

external object ESceneCaptureCompositeMode {
    var SCCM_Overwrite: String /* "SCCM_Overwrite" */
    var SCCM_Additive: String /* "SCCM_Additive" */
    var SCCM_Composite: String /* "SCCM_Composite" */
    var SCCM_MAX: String /* "SCCM_MAX" */
}

external open class SceneCaptureComponent2D : SceneCaptureComponent {
    constructor()
    constructor(Outer: UObject)
    open var ProjectionType: String /* "Perspective" | "Orthographic" | "ECameraProjectionMode_MAX" */
    open var FOVAngle: Number
    open var OrthoWidth: Number
    open var TextureTarget: TextureRenderTarget2D
    open var CompositeMode: String /* "SCCM_Overwrite" | "SCCM_Additive" | "SCCM_Composite" | "SCCM_MAX" */
    open var PostProcessSettings: PostProcessSettings
    open var PostProcessBlendWeight: Number
    open var bOverride_CustomNearClippingPlane: Boolean
    open var CustomNearClippingPlane: Number
    open var bUseCustomProjectionMatrix: Boolean
    open var CustomProjectionMatrix: Matrix
    open var bEnableClipPlane: Boolean
    open var ClipPlaneBase: Vector
    open var ClipPlaneNormal: Vector
    open var bCameraCutThisFrame: Boolean
    open var bConsiderUnrenderedOpaquePixelAsFullyTranslucent: Boolean
    open var bDisableFlipCopyGLES: Boolean
    open fun CaptureScene()

    companion object {
        fun Load(ResourceName: String): SceneCaptureComponent2D
        fun Find(Outer: UObject, ResourceName: String): SceneCaptureComponent2D
        fun GetDefaultObject(): SceneCaptureComponent2D
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SceneCaptureComponent2D
        fun C(Other: UObject): SceneCaptureComponent2D
        fun C(Other: Any): SceneCaptureComponent2D
    }
}

external open class SceneCapture2D(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : SceneCapture {
    open var CaptureComponent2D: SceneCaptureComponent2D
    open fun OnInterpToggle(bEnable: Boolean)

    companion object {
        fun GetDefaultObject(): SceneCapture2D
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SceneCapture2D
        fun C(Other: UObject): SceneCapture2D
        fun C(Other: Any): SceneCapture2D
    }
}

external open class TextureRenderTargetCube : TextureRenderTarget {
    constructor()
    constructor(Outer: UObject)
    open var SizeX: Number
    open var ClearColor: LinearColor
    open var OverrideFormat: String /* "PF_Unknown" | "PF_A32B32G32R32F" | "PF_B8G8R8A8" | "PF_G8" | "PF_G16" | "PF_DXT1" | "PF_DXT3" | "PF_DXT5" | "PF_UYVY" | "PF_FloatRGB" | "PF_FloatRGBA" | "PF_DepthStencil" | "PF_ShadowDepth" | "PF_R32_FLOAT" | "PF_G16R16" | "PF_G16R16F" | "PF_G16R16F_FILTER" | "PF_G32R32F" | "PF_A2B10G10R10" | "PF_A16B16G16R16" | "PF_D24" | "PF_R16F" | "PF_R16F_FILTER" | "PF_BC5" | "PF_V8U8" | "PF_A1" | "PF_FloatR11G11B10" | "PF_A8" | "PF_R32_UINT" | "PF_R32_SINT" | "PF_PVRTC2" | "PF_PVRTC4" | "PF_R16_UINT" | "PF_R16_SINT" | "PF_R16G16B16A16_UINT" | "PF_R16G16B16A16_SINT" | "PF_R5G6B5_UNORM" | "PF_R8G8B8A8" | "PF_A8R8G8B8" | "PF_BC4" | "PF_R8G8" | "PF_ATC_RGB" | "PF_ATC_RGBA_E" | "PF_ATC_RGBA_I" | "PF_X24_G8" | "PF_ETC1" | "PF_ETC2_RGB" | "PF_ETC2_RGBA" | "PF_R32G32B32A32_UINT" | "PF_R16G16_UINT" | "PF_ASTC_4x4" | "PF_ASTC_6x6" | "PF_ASTC_8x8" | "PF_ASTC_10x10" | "PF_ASTC_12x12" | "PF_BC6H" | "PF_BC7" | "PF_R8_UINT" | "PF_L8" | "PF_XGXR8" | "PF_R8G8B8A8_UINT" | "PF_R8G8B8A8_SNORM" | "PF_R16G16B16A16_UNORM" | "PF_R16G16B16A16_SNORM" | "PF_PLATFORM_HDR_0" | "PF_PLATFORM_HDR_1" | "PF_PLATFORM_HDR_2" | "PF_NV12" | "PF_R32G32_UINT" | "PF_ETC2_R11_EAC" | "PF_ETC2_RG11_EAC" | "PF_MAX" */
    open var bHDR: Boolean
    open var bForceLinearGamma: Boolean

    companion object {
        fun Load(ResourceName: String): TextureRenderTargetCube
        fun Find(Outer: UObject, ResourceName: String): TextureRenderTargetCube
        fun GetDefaultObject(): TextureRenderTargetCube
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextureRenderTargetCube
        fun C(Other: UObject): TextureRenderTargetCube
        fun C(Other: Any): TextureRenderTargetCube
    }
}

external open class SceneCaptureComponentCube : SceneCaptureComponent {
    constructor()
    constructor(Outer: UObject)
    open var TextureTarget: TextureRenderTargetCube
    open var bCaptureRotation: Boolean
    open var TextureTargetLeft: TextureRenderTargetCube
    open var TextureTargetRight: TextureRenderTargetCube
    open var TextureTargetODS: TextureRenderTarget2D
    open var IPD: Number
    open fun CaptureScene()

    companion object {
        fun Load(ResourceName: String): SceneCaptureComponentCube
        fun Find(Outer: UObject, ResourceName: String): SceneCaptureComponentCube
        fun GetDefaultObject(): SceneCaptureComponentCube
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SceneCaptureComponentCube
        fun C(Other: UObject): SceneCaptureComponentCube
        fun C(Other: Any): SceneCaptureComponentCube
    }
}

external open class SceneCaptureCube(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : SceneCapture {
    open var CaptureComponentCube: SceneCaptureComponentCube
    open fun OnInterpToggle(bEnable: Boolean)

    companion object {
        fun GetDefaultObject(): SceneCaptureCube
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SceneCaptureCube
        fun C(Other: UObject): SceneCaptureCube
        fun C(Other: Any): SceneCaptureCube
    }
}

external object EShadowMapFlags {
    var SMF_None: String /* "SMF_None" */
    var SMF_Streamed: String /* "SMF_Streamed" */
    var SMF_MAX: String /* "SMF_MAX" */
}

external open class ShadowMapTexture2D : Texture2D {
    constructor()
    constructor(Outer: UObject)
    open var ShadowmapFlags: String /* "SMF_None" | "SMF_Streamed" | "SMF_MAX" */

    companion object {
        fun Load(ResourceName: String): ShadowMapTexture2D
        fun Find(Outer: UObject, ResourceName: String): ShadowMapTexture2D
        fun GetDefaultObject(): ShadowMapTexture2D
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ShadowMapTexture2D
        fun C(Other: UObject): ShadowMapTexture2D
        fun C(Other: Any): ShadowMapTexture2D
    }
}

external open class SkeletalMeshSimplificationSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var SkeletalMeshReductionModuleName: String

    companion object {
        fun Load(ResourceName: String): SkeletalMeshSimplificationSettings
        fun Find(Outer: UObject, ResourceName: String): SkeletalMeshSimplificationSettings
        fun GetDefaultObject(): SkeletalMeshSimplificationSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SkeletalMeshSimplificationSettings
        fun C(Other: UObject): SkeletalMeshSimplificationSettings
        fun C(Other: Any): SkeletalMeshSimplificationSettings
    }
}

external object ESkyAtmosphereTransformMode {
    var PlanetTopAtAbsoluteWorldOrigin: String /* "PlanetTopAtAbsoluteWorldOrigin" */
    var PlanetTopAtComponentTransform: String /* "PlanetTopAtComponentTransform" */
    var PlanetCenterAtComponentTransform: String /* "PlanetCenterAtComponentTransform" */
    var ESkyAtmosphereTransformMode_MAX: String /* "ESkyAtmosphereTransformMode_MAX" */
}

external open class TentDistribution {
    open var TipAltitude: Number
    open var TipValue: Number
    open var Width: Number
    open fun clone(): TentDistribution

    companion object {
        fun C(Other: UObject): TentDistribution
        fun C(Other: Any): TentDistribution
    }
}

external open class SkyAtmosphereComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var TransformMode: String /* "PlanetTopAtAbsoluteWorldOrigin" | "PlanetTopAtComponentTransform" | "PlanetCenterAtComponentTransform" | "ESkyAtmosphereTransformMode_MAX" */
    open var BottomRadius: Number
    open var GroundAlbedo: Color
    open var AtmosphereHeight: Number
    open var MultiScatteringFactor: Number
    open var TraceSampleCountScale: Number
    open var RayleighScatteringScale: Number
    open var RayleighScattering: LinearColor
    open var RayleighExponentialDistribution: Number
    open var MieScatteringScale: Number
    open var MieScattering: LinearColor
    open var MieAbsorptionScale: Number
    open var MieAbsorption: LinearColor
    open var MieAnisotropy: Number
    open var MieExponentialDistribution: Number
    open var OtherAbsorptionScale: Number
    open var OtherAbsorption: LinearColor
    open var OtherTentDistribution: TentDistribution
    open var SkyLuminanceFactor: LinearColor
    open var AerialPespectiveViewDistanceScale: Number
    open var HeightFogContribution: Number
    open var TransmittanceMinLightElevationAngle: Number
    open var AerialPerspectiveStartDepth: Number
    open var bStaticLightingBuiltGUID: Guid
    open fun SetSkyLuminanceFactor(NewValue: LinearColor)
    open fun SetRayleighScatteringScale(NewValue: Number)
    open fun SetRayleighScattering(NewValue: LinearColor)
    open fun SetRayleighExponentialDistribution(NewValue: Number)
    open fun SetAbsorptionScale(NewValue: Number)
    open fun SetAbsorption(NewValue: LinearColor)
    open fun SetMultiScatteringFactor(NewValue: Number)
    open fun SetMieScatteringScale(NewValue: Number)
    open fun SetMieScattering(NewValue: LinearColor)
    open fun SetMieExponentialDistribution(NewValue: Number)
    open fun SetMieAnisotropy(NewValue: Number)
    open fun SetMieAbsorptionScale(NewValue: Number)
    open fun SetMieAbsorption(NewValue: LinearColor)
    open fun SetHeightFogContribution(NewValue: Number)
    open fun SetAtmosphereHeight(NewValue: Number)
    open fun SetAerialPespectiveViewDistanceScale(NewValue: Number)
    open fun OverrideAtmosphereLightDirection(AtmosphereLightIndex: Number, LightDirection: Vector)
    open fun GetAtmosphereTransmitanceOnGroundAtPlanetTop(DirectionalLight: DirectionalLightComponent): LinearColor

    companion object {
        fun Load(ResourceName: String): SkyAtmosphereComponent
        fun Find(Outer: UObject, ResourceName: String): SkyAtmosphereComponent
        fun GetDefaultObject(): SkyAtmosphereComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SkyAtmosphereComponent
        fun C(Other: UObject): SkyAtmosphereComponent
        fun C(Other: Any): SkyAtmosphereComponent
    }
}

external open class SkyAtmosphere(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Info {
    open var SkyAtmosphereComponent: SkyAtmosphereComponent
    open var ArrowComponent: ArrowComponent

    companion object {
        fun GetDefaultObject(): SkyAtmosphere
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SkyAtmosphere
        fun C(Other: UObject): SkyAtmosphere
        fun C(Other: Any): SkyAtmosphere
    }
}

external open class SlateTextureAtlasInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SlateTextureAtlasInterface
        fun Find(Outer: UObject, ResourceName: String): SlateTextureAtlasInterface
        fun GetDefaultObject(): SlateTextureAtlasInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SlateTextureAtlasInterface
        fun C(Other: UObject): SlateTextureAtlasInterface
        fun C(Other: Any): SlateTextureAtlasInterface
    }
}

external open class SmokeTestCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SmokeTestCommandlet
        fun Find(Outer: UObject, ResourceName: String): SmokeTestCommandlet
        fun GetDefaultObject(): SmokeTestCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SmokeTestCommandlet
        fun C(Other: UObject): SmokeTestCommandlet
        fun C(Other: Any): SmokeTestCommandlet
    }
}

external open class SoundGroup {
    open var SoundGroup: String /* "SOUNDGROUP_Default" | "SOUNDGROUP_Effects" | "SOUNDGROUP_UI" | "SOUNDGROUP_Music" | "SOUNDGROUP_Voice" | "SOUNDGROUP_GameSoundGroup1" | "SOUNDGROUP_GameSoundGroup2" | "SOUNDGROUP_GameSoundGroup3" | "SOUNDGROUP_GameSoundGroup4" | "SOUNDGROUP_GameSoundGroup5" | "SOUNDGROUP_GameSoundGroup6" | "SOUNDGROUP_GameSoundGroup7" | "SOUNDGROUP_GameSoundGroup8" | "SOUNDGROUP_GameSoundGroup9" | "SOUNDGROUP_GameSoundGroup10" | "SOUNDGROUP_GameSoundGroup11" | "SOUNDGROUP_GameSoundGroup12" | "SOUNDGROUP_GameSoundGroup13" | "SOUNDGROUP_GameSoundGroup14" | "SOUNDGROUP_GameSoundGroup15" | "SOUNDGROUP_GameSoundGroup16" | "SOUNDGROUP_GameSoundGroup17" | "SOUNDGROUP_GameSoundGroup18" | "SOUNDGROUP_GameSoundGroup19" | "SOUNDGROUP_GameSoundGroup20" | "SOUNDGROUP_MAX" */
    open var DisplayName: String
    open var bAlwaysDecompressOnLoad: Boolean
    open var DecompressedDuration: Number
    open fun clone(): SoundGroup

    companion object {
        fun C(Other: UObject): SoundGroup
        fun C(Other: Any): SoundGroup
    }
}

external open class SoundGroups : UObject {
    constructor()
    constructor(Outer: UObject)
    open var SoundGroupProfiles: Array<SoundGroup>

    companion object {
        fun Load(ResourceName: String): SoundGroups
        fun Find(Outer: UObject, ResourceName: String): SoundGroups
        fun GetDefaultObject(): SoundGroups
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundGroups
        fun C(Other: UObject): SoundGroups
        fun C(Other: Any): SoundGroups
    }
}

external open class SoundNodeAssetReferencer : SoundNode {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundNodeAssetReferencer
        fun Find(Outer: UObject, ResourceName: String): SoundNodeAssetReferencer
        fun GetDefaultObject(): SoundNodeAssetReferencer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNodeAssetReferencer
        fun C(Other: UObject): SoundNodeAssetReferencer
        fun C(Other: Any): SoundNodeAssetReferencer
    }
}

external open class SoundNodeAttenuation : SoundNode {
    constructor()
    constructor(Outer: UObject)
    open var AttenuationSettings: SoundAttenuation
    open var AttenuationOverrides: SoundAttenuationSettings
    open var bOverrideAttenuation: Boolean

    companion object {
        fun Load(ResourceName: String): SoundNodeAttenuation
        fun Find(Outer: UObject, ResourceName: String): SoundNodeAttenuation
        fun GetDefaultObject(): SoundNodeAttenuation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNodeAttenuation
        fun C(Other: UObject): SoundNodeAttenuation
        fun C(Other: Any): SoundNodeAttenuation
    }
}

external open class SoundNodeBranch : SoundNode {
    constructor()
    constructor(Outer: UObject)
    open var BoolParameterName: String

    companion object {
        fun Load(ResourceName: String): SoundNodeBranch
        fun Find(Outer: UObject, ResourceName: String): SoundNodeBranch
        fun GetDefaultObject(): SoundNodeBranch
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNodeBranch
        fun C(Other: UObject): SoundNodeBranch
        fun C(Other: Any): SoundNodeBranch
    }
}

external open class SoundNodeConcatenator : SoundNode {
    constructor()
    constructor(Outer: UObject)
    open var InputVolume: Array<Number>

    companion object {
        fun Load(ResourceName: String): SoundNodeConcatenator
        fun Find(Outer: UObject, ResourceName: String): SoundNodeConcatenator
        fun GetDefaultObject(): SoundNodeConcatenator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNodeConcatenator
        fun C(Other: UObject): SoundNodeConcatenator
        fun C(Other: Any): SoundNodeConcatenator
    }
}

external open class SoundNodeDelay : SoundNode {
    constructor()
    constructor(Outer: UObject)
    open var DelayMin: Number
    open var DelayMax: Number

    companion object {
        fun Load(ResourceName: String): SoundNodeDelay
        fun Find(Outer: UObject, ResourceName: String): SoundNodeDelay
        fun GetDefaultObject(): SoundNodeDelay
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNodeDelay
        fun C(Other: UObject): SoundNodeDelay
        fun C(Other: Any): SoundNodeDelay
    }
}

external open class DialogueWaveParameter {
    open var DialogueWave: DialogueWave
    open var Context: DialogueContext
    open fun clone(): DialogueWaveParameter

    companion object {
        fun C(Other: UObject): DialogueWaveParameter
        fun C(Other: Any): DialogueWaveParameter
    }
}

external open class SoundNodeDialoguePlayer : SoundNode {
    constructor()
    constructor(Outer: UObject)
    open var DialogueWaveParameter: DialogueWaveParameter
    open var bLooping: Boolean

    companion object {
        fun Load(ResourceName: String): SoundNodeDialoguePlayer
        fun Find(Outer: UObject, ResourceName: String): SoundNodeDialoguePlayer
        fun GetDefaultObject(): SoundNodeDialoguePlayer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNodeDialoguePlayer
        fun C(Other: UObject): SoundNodeDialoguePlayer
        fun C(Other: Any): SoundNodeDialoguePlayer
    }
}

external open class DistanceDatum {
    open var FadeInDistanceStart: Number
    open var FadeInDistanceEnd: Number
    open var FadeOutDistanceStart: Number
    open var FadeOutDistanceEnd: Number
    open var Volume: Number
    open fun clone(): DistanceDatum

    companion object {
        fun C(Other: UObject): DistanceDatum
        fun C(Other: Any): DistanceDatum
    }
}

external open class SoundNodeDistanceCrossFade : SoundNode {
    constructor()
    constructor(Outer: UObject)
    open var CrossFadeInput: Array<DistanceDatum>

    companion object {
        fun Load(ResourceName: String): SoundNodeDistanceCrossFade
        fun Find(Outer: UObject, ResourceName: String): SoundNodeDistanceCrossFade
        fun GetDefaultObject(): SoundNodeDistanceCrossFade
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNodeDistanceCrossFade
        fun C(Other: UObject): SoundNodeDistanceCrossFade
        fun C(Other: Any): SoundNodeDistanceCrossFade
    }
}

external open class SoundNodeDoppler : SoundNode {
    constructor()
    constructor(Outer: UObject)
    open var DopplerIntensity: Number
    open var bUseSmoothing: Boolean
    open var SmoothingInterpSpeed: Number

    companion object {
        fun Load(ResourceName: String): SoundNodeDoppler
        fun Find(Outer: UObject, ResourceName: String): SoundNodeDoppler
        fun GetDefaultObject(): SoundNodeDoppler
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNodeDoppler
        fun C(Other: UObject): SoundNodeDoppler
        fun C(Other: Any): SoundNodeDoppler
    }
}

external open class SoundNodeEnveloper : SoundNode {
    constructor()
    constructor(Outer: UObject)
    open var LoopStart: Number
    open var LoopEnd: Number
    open var DurationAfterLoop: Number
    open var LoopCount: Number
    open var bLoopIndefinitely: Boolean
    open var bLoop: Boolean
    open var VolumeInterpCurve: DistributionFloatConstantCurve
    open var PitchInterpCurve: DistributionFloatConstantCurve
    open var VolumeCurve: RuntimeFloatCurve
    open var PitchCurve: RuntimeFloatCurve
    open var PitchMin: Number
    open var PitchMax: Number
    open var VolumeMin: Number
    open var VolumeMax: Number

    companion object {
        fun Load(ResourceName: String): SoundNodeEnveloper
        fun Find(Outer: UObject, ResourceName: String): SoundNodeEnveloper
        fun GetDefaultObject(): SoundNodeEnveloper
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNodeEnveloper
        fun C(Other: UObject): SoundNodeEnveloper
        fun C(Other: Any): SoundNodeEnveloper
    }
}

external open class SoundNodeGroupControl : SoundNode {
    constructor()
    constructor(Outer: UObject)
    open var GroupSizes: Array<Number>

    companion object {
        fun Load(ResourceName: String): SoundNodeGroupControl
        fun Find(Outer: UObject, ResourceName: String): SoundNodeGroupControl
        fun GetDefaultObject(): SoundNodeGroupControl
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNodeGroupControl
        fun C(Other: UObject): SoundNodeGroupControl
        fun C(Other: Any): SoundNodeGroupControl
    }
}

external open class SoundNodeLooping : SoundNode {
    constructor()
    constructor(Outer: UObject)
    open var LoopCount: Number
    open var bLoopIndefinitely: Boolean

    companion object {
        fun Load(ResourceName: String): SoundNodeLooping
        fun Find(Outer: UObject, ResourceName: String): SoundNodeLooping
        fun GetDefaultObject(): SoundNodeLooping
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNodeLooping
        fun C(Other: UObject): SoundNodeLooping
        fun C(Other: Any): SoundNodeLooping
    }
}

external open class SoundNodeMature : SoundNode {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundNodeMature
        fun Find(Outer: UObject, ResourceName: String): SoundNodeMature
        fun GetDefaultObject(): SoundNodeMature
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNodeMature
        fun C(Other: UObject): SoundNodeMature
        fun C(Other: Any): SoundNodeMature
    }
}

external open class SoundNodeMixer : SoundNode {
    constructor()
    constructor(Outer: UObject)
    open var InputVolume: Array<Number>

    companion object {
        fun Load(ResourceName: String): SoundNodeMixer
        fun Find(Outer: UObject, ResourceName: String): SoundNodeMixer
        fun GetDefaultObject(): SoundNodeMixer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNodeMixer
        fun C(Other: UObject): SoundNodeMixer
        fun C(Other: Any): SoundNodeMixer
    }
}

external open class SoundNodeModulator : SoundNode {
    constructor()
    constructor(Outer: UObject)
    open var PitchMin: Number
    open var PitchMax: Number
    open var VolumeMin: Number
    open var VolumeMax: Number

    companion object {
        fun Load(ResourceName: String): SoundNodeModulator
        fun Find(Outer: UObject, ResourceName: String): SoundNodeModulator
        fun GetDefaultObject(): SoundNodeModulator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNodeModulator
        fun C(Other: UObject): SoundNodeModulator
        fun C(Other: Any): SoundNodeModulator
    }
}

external object ModulationParamMode {
    var MPM_Normal: String /* "MPM_Normal" */
    var MPM_Abs: String /* "MPM_Abs" */
    var MPM_Direct: String /* "MPM_Direct" */
    var MPM_MAX: String /* "MPM_MAX" */
}

external open class ModulatorContinuousParams {
    open var ParameterName: String
    open var Default: Number
    open var MinInput: Number
    open var MaxInput: Number
    open var MinOutput: Number
    open var MaxOutput: Number
    open var ParamMode: String /* "MPM_Normal" | "MPM_Abs" | "MPM_Direct" | "MPM_MAX" */
    open fun clone(): ModulatorContinuousParams

    companion object {
        fun C(Other: UObject): ModulatorContinuousParams
        fun C(Other: Any): ModulatorContinuousParams
    }
}

external open class SoundNodeModulatorContinuous : SoundNode {
    constructor()
    constructor(Outer: UObject)
    open var PitchModulationParams: ModulatorContinuousParams
    open var VolumeModulationParams: ModulatorContinuousParams

    companion object {
        fun Load(ResourceName: String): SoundNodeModulatorContinuous
        fun Find(Outer: UObject, ResourceName: String): SoundNodeModulatorContinuous
        fun GetDefaultObject(): SoundNodeModulatorContinuous
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNodeModulatorContinuous
        fun C(Other: UObject): SoundNodeModulatorContinuous
        fun C(Other: Any): SoundNodeModulatorContinuous
    }
}

external open class SoundNodeOscillator : SoundNode {
    constructor()
    constructor(Outer: UObject)
    open var bModulateVolume: Boolean
    open var bModulatePitch: Boolean
    open var AmplitudeMin: Number
    open var AmplitudeMax: Number
    open var FrequencyMin: Number
    open var FrequencyMax: Number
    open var OffsetMin: Number
    open var OffsetMax: Number
    open var CenterMin: Number
    open var CenterMax: Number

    companion object {
        fun Load(ResourceName: String): SoundNodeOscillator
        fun Find(Outer: UObject, ResourceName: String): SoundNodeOscillator
        fun GetDefaultObject(): SoundNodeOscillator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNodeOscillator
        fun C(Other: UObject): SoundNodeOscillator
        fun C(Other: Any): SoundNodeOscillator
    }
}

external open class SoundNodeParamCrossFade : SoundNodeDistanceCrossFade {
    constructor()
    constructor(Outer: UObject)
    open var ParamName: String

    companion object {
        fun Load(ResourceName: String): SoundNodeParamCrossFade
        fun Find(Outer: UObject, ResourceName: String): SoundNodeParamCrossFade
        fun GetDefaultObject(): SoundNodeParamCrossFade
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNodeParamCrossFade
        fun C(Other: UObject): SoundNodeParamCrossFade
        fun C(Other: Any): SoundNodeParamCrossFade
    }
}

external open class SoundNodeQualityLevel : SoundNode {
    constructor()
    constructor(Outer: UObject)
    open var CookedQualityLevelIndex: Number

    companion object {
        fun Load(ResourceName: String): SoundNodeQualityLevel
        fun Find(Outer: UObject, ResourceName: String): SoundNodeQualityLevel
        fun GetDefaultObject(): SoundNodeQualityLevel
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNodeQualityLevel
        fun C(Other: UObject): SoundNodeQualityLevel
        fun C(Other: Any): SoundNodeQualityLevel
    }
}

external open class SoundNodeRandom : SoundNode {
    constructor()
    constructor(Outer: UObject)
    open var Weights: Array<Number>
    open var HasBeenUsed: Array<Boolean>
    open var NumRandomUsed: Number
    open var PreselectAtLevelLoad: Number
    open var bShouldExcludeFromBranchCulling: Boolean
    open var bSoundCueExcludedFromBranchCulling: Boolean
    open var bRandomizeWithoutReplacement: Boolean
    open var PIEHiddenNodes: Array<Number>

    companion object {
        fun Load(ResourceName: String): SoundNodeRandom
        fun Find(Outer: UObject, ResourceName: String): SoundNodeRandom
        fun GetDefaultObject(): SoundNodeRandom
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNodeRandom
        fun C(Other: UObject): SoundNodeRandom
        fun C(Other: Any): SoundNodeRandom
    }
}

external open class SoundNodeSoundClass : SoundNode {
    constructor()
    constructor(Outer: UObject)
    open var SoundClassOverride: SoundClass

    companion object {
        fun Load(ResourceName: String): SoundNodeSoundClass
        fun Find(Outer: UObject, ResourceName: String): SoundNodeSoundClass
        fun GetDefaultObject(): SoundNodeSoundClass
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNodeSoundClass
        fun C(Other: UObject): SoundNodeSoundClass
        fun C(Other: Any): SoundNodeSoundClass
    }
}

external open class SoundNodeSwitch : SoundNode {
    constructor()
    constructor(Outer: UObject)
    open var IntParameterName: String

    companion object {
        fun Load(ResourceName: String): SoundNodeSwitch
        fun Find(Outer: UObject, ResourceName: String): SoundNodeSwitch
        fun GetDefaultObject(): SoundNodeSwitch
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNodeSwitch
        fun C(Other: UObject): SoundNodeSwitch
        fun C(Other: Any): SoundNodeSwitch
    }
}

external open class SoundNodeWaveParam : SoundNode {
    constructor()
    constructor(Outer: UObject)
    open var WaveParameterName: String

    companion object {
        fun Load(ResourceName: String): SoundNodeWaveParam
        fun Find(Outer: UObject, ResourceName: String): SoundNodeWaveParam
        fun GetDefaultObject(): SoundNodeWaveParam
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNodeWaveParam
        fun C(Other: UObject): SoundNodeWaveParam
        fun C(Other: Any): SoundNodeWaveParam
    }
}

external open class SoundNodeWavePlayer : SoundNodeAssetReferencer {
    constructor()
    constructor(Outer: UObject)
    open var SoundWaveAssetPtr: SoundWave
    open var SoundWave: SoundWave
    open var bLooping: Boolean

    companion object {
        fun Load(ResourceName: String): SoundNodeWavePlayer
        fun Find(Outer: UObject, ResourceName: String): SoundNodeWavePlayer
        fun GetDefaultObject(): SoundNodeWavePlayer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNodeWavePlayer
        fun C(Other: UObject): SoundNodeWavePlayer
        fun C(Other: Any): SoundNodeWavePlayer
    }
}

external open class SoundfieldSubmix : SoundSubmixWithParentBase {
    constructor()
    constructor(Outer: UObject)
    open var SoundfieldEncodingFormat: String
    open var EncodingSettings: SoundfieldEncodingSettingsBase
    open var SoundfieldEffectChain: Array<SoundfieldEffectBase>
    open var EncodingSettingsClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): SoundfieldSubmix
        fun Find(Outer: UObject, ResourceName: String): SoundfieldSubmix
        fun GetDefaultObject(): SoundfieldSubmix
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundfieldSubmix
        fun C(Other: UObject): SoundfieldSubmix
        fun C(Other: Any): SoundfieldSubmix
    }
}

external open class EndpointSubmix : SoundSubmixBase {
    constructor()
    constructor(Outer: UObject)
    open var EndpointType: String
    open var EndpointSettingsClass: UnrealEngineClass
    open var EndpointSettings: AudioEndpointSettingsBase

    companion object {
        fun Load(ResourceName: String): EndpointSubmix
        fun Find(Outer: UObject, ResourceName: String): EndpointSubmix
        fun GetDefaultObject(): EndpointSubmix
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EndpointSubmix
        fun C(Other: UObject): EndpointSubmix
        fun C(Other: Any): EndpointSubmix
    }
}

external open class SoundfieldEndpointSubmix : SoundSubmixBase {
    constructor()
    constructor(Outer: UObject)
    open var SoundfieldEndpointType: String
    open var EndpointSettingsClass: UnrealEngineClass
    open var EndpointSettings: SoundfieldEndpointSettingsBase
    open var EncodingSettingsClass: UnrealEngineClass
    open var EncodingSettings: SoundfieldEncodingSettingsBase
    open var SoundfieldEffectChain: Array<SoundfieldEffectBase>

    companion object {
        fun Load(ResourceName: String): SoundfieldEndpointSubmix
        fun Find(Outer: UObject, ResourceName: String): SoundfieldEndpointSubmix
        fun GetDefaultObject(): SoundfieldEndpointSubmix
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundfieldEndpointSubmix
        fun C(Other: UObject): SoundfieldEndpointSubmix
        fun C(Other: Any): SoundfieldEndpointSubmix
    }
}

external open class SpectatorPawnMovement : FloatingPawnMovement {
    constructor()
    constructor(Outer: UObject)
    open var bIgnoreTimeDilation: Boolean

    companion object {
        fun Load(ResourceName: String): SpectatorPawnMovement
        fun Find(Outer: UObject, ResourceName: String): SpectatorPawnMovement
        fun GetDefaultObject(): SpectatorPawnMovement
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SpectatorPawnMovement
        fun C(Other: UObject): SpectatorPawnMovement
        fun C(Other: Any): SpectatorPawnMovement
    }
}

external open class SphereReflectionCapture(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : ReflectionCapture {
    open var DrawCaptureRadius: DrawSphereComponent

    companion object {
        fun GetDefaultObject(): SphereReflectionCapture
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SphereReflectionCapture
        fun C(Other: UObject): SphereReflectionCapture
        fun C(Other: Any): SphereReflectionCapture
    }
}

external open class SphereReflectionCaptureComponent : ReflectionCaptureComponent {
    constructor()
    constructor(Outer: UObject)
    open var InfluenceRadius: Number
    open var CaptureDistanceScale: Number
    open var PreviewInfluenceRadius: DrawSphereComponent

    companion object {
        fun Load(ResourceName: String): SphereReflectionCaptureComponent
        fun Find(Outer: UObject, ResourceName: String): SphereReflectionCaptureComponent
        fun GetDefaultObject(): SphereReflectionCaptureComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SphereReflectionCaptureComponent
        fun C(Other: UObject): SphereReflectionCaptureComponent
        fun C(Other: Any): SphereReflectionCaptureComponent
    }
}

external open class SplineMeshActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var SplineMeshComponent: SplineMeshComponent

    companion object {
        fun GetDefaultObject(): SplineMeshActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SplineMeshActor
        fun C(Other: UObject): SplineMeshActor
        fun C(Other: Any): SplineMeshActor
    }
}

external open class SpringArmComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var TargetArmLength: Number
    open var SocketOffset: Vector
    open var TargetOffset: Vector
    open var ProbeSize: Number
    open var ProbeChannel: String /* "ECC_WorldStatic" | "ECC_WorldDynamic" | "ECC_Pawn" | "ECC_Visibility" | "ECC_Camera" | "ECC_PhysicsBody" | "ECC_Vehicle" | "ECC_Destructible" | "ECC_EngineTraceChannel1" | "ECC_EngineTraceChannel2" | "ECC_EngineTraceChannel3" | "ECC_EngineTraceChannel4" | "ECC_EngineTraceChannel5" | "ECC_EngineTraceChannel6" | "ECC_GameTraceChannel1" | "ECC_GameTraceChannel2" | "ECC_GameTraceChannel3" | "ECC_GameTraceChannel4" | "ECC_GameTraceChannel5" | "ECC_GameTraceChannel6" | "ECC_GameTraceChannel7" | "ECC_GameTraceChannel8" | "ECC_GameTraceChannel9" | "ECC_GameTraceChannel10" | "ECC_GameTraceChannel11" | "ECC_GameTraceChannel12" | "ECC_GameTraceChannel13" | "ECC_GameTraceChannel14" | "ECC_GameTraceChannel15" | "ECC_GameTraceChannel16" | "ECC_GameTraceChannel17" | "ECC_GameTraceChannel18" | "ECC_OverlapAll_Deprecated" | "ECC_MAX" */
    open var bDoCollisionTest: Boolean
    open var bUsePawnControlRotation: Boolean
    open var bInheritPitch: Boolean
    open var bInheritYaw: Boolean
    open var bInheritRoll: Boolean
    open var bEnableCameraLag: Boolean
    open var bEnableCameraRotationLag: Boolean
    open var bUseCameraLagSubstepping: Boolean
    open var bDrawDebugLagMarkers: Boolean
    open var CameraLagSpeed: Number
    open var CameraRotationLagSpeed: Number
    open var CameraLagMaxTimeStep: Number
    open var CameraLagMaxDistance: Number
    open fun IsCollisionFixApplied(): Boolean
    open fun GetUnfixedCameraPosition(): Vector
    open fun GetTargetRotation(): Rotator

    companion object {
        fun Load(ResourceName: String): SpringArmComponent
        fun Find(Outer: UObject, ResourceName: String): SpringArmComponent
        fun GetDefaultObject(): SpringArmComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SpringArmComponent
        fun C(Other: UObject): SpringArmComponent
        fun C(Other: Any): SpringArmComponent
    }
}

external open class StereoLayerShape : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): StereoLayerShape
        fun Find(Outer: UObject, ResourceName: String): StereoLayerShape
        fun GetDefaultObject(): StereoLayerShape
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): StereoLayerShape
        fun C(Other: UObject): StereoLayerShape
        fun C(Other: Any): StereoLayerShape
    }
}

external open class StereoLayerShapeQuad : StereoLayerShape {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): StereoLayerShapeQuad
        fun Find(Outer: UObject, ResourceName: String): StereoLayerShapeQuad
        fun GetDefaultObject(): StereoLayerShapeQuad
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): StereoLayerShapeQuad
        fun C(Other: UObject): StereoLayerShapeQuad
        fun C(Other: Any): StereoLayerShapeQuad
    }
}

external open class StereoLayerShapeCylinder : StereoLayerShape {
    constructor()
    constructor(Outer: UObject)
    open var Radius: Number
    open var OverlayArc: Number
    open var Height: Number
    open fun SetRadius(InRadius: Number)
    open fun SetOverlayArc(InOverlayArc: Number)
    open fun SetHeight(InHeight: Number)

    companion object {
        fun Load(ResourceName: String): StereoLayerShapeCylinder
        fun Find(Outer: UObject, ResourceName: String): StereoLayerShapeCylinder
        fun GetDefaultObject(): StereoLayerShapeCylinder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): StereoLayerShapeCylinder
        fun C(Other: UObject): StereoLayerShapeCylinder
        fun C(Other: Any): StereoLayerShapeCylinder
    }
}

external open class StereoLayerShapeCubemap : StereoLayerShape {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): StereoLayerShapeCubemap
        fun Find(Outer: UObject, ResourceName: String): StereoLayerShapeCubemap
        fun GetDefaultObject(): StereoLayerShapeCubemap
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): StereoLayerShapeCubemap
        fun C(Other: UObject): StereoLayerShapeCubemap
        fun C(Other: Any): StereoLayerShapeCubemap
    }
}

external open class EquirectProps {
    open var LeftUVRect: Box2D
    open var RightUVRect: Box2D
    open var LeftScale: Vector2D
    open var RightScale: Vector2D
    open var LeftBias: Vector2D
    open var RightBias: Vector2D
    open fun clone(): EquirectProps

    companion object {
        fun C(Other: UObject): EquirectProps
        fun C(Other: Any): EquirectProps
    }
}

external open class StereoLayerShapeEquirect : StereoLayerShape {
    constructor()
    constructor(Outer: UObject)
    open var LeftUVRect: Box2D
    open var RightUVRect: Box2D
    open var LeftScale: Vector2D
    open var RightScale: Vector2D
    open var LeftBias: Vector2D
    open var RightBias: Vector2D
    open fun SetEquirectProps(InScaleBiases: EquirectProps)

    companion object {
        fun Load(ResourceName: String): StereoLayerShapeEquirect
        fun Find(Outer: UObject, ResourceName: String): StereoLayerShapeEquirect
        fun GetDefaultObject(): StereoLayerShapeEquirect
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): StereoLayerShapeEquirect
        fun C(Other: UObject): StereoLayerShapeEquirect
        fun C(Other: Any): StereoLayerShapeEquirect
    }
}

external object EStereoLayerType {
    var SLT_WorldLocked: String /* "SLT_WorldLocked" */
    var SLT_TrackerLocked: String /* "SLT_TrackerLocked" */
    var SLT_FaceLocked: String /* "SLT_FaceLocked" */
    var SLT_MAX: String /* "SLT_MAX" */
}

external object EStereoLayerShape {
    var SLSH_QuadLayer: String /* "SLSH_QuadLayer" */
    var SLSH_CylinderLayer: String /* "SLSH_CylinderLayer" */
    var SLSH_CubemapLayer: String /* "SLSH_CubemapLayer" */
    var SLSH_EquirectLayer: String /* "SLSH_EquirectLayer" */
    var SLSH_MAX: String /* "SLSH_MAX" */
}

external open class StereoLayerComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var bLiveTexture: Boolean
    open var bSupportsDepth: Boolean
    open var bNoAlphaChannel: Boolean
    open var Texture: Texture
    open var LeftTexture: Texture
    open var bQuadPreserveTextureRatio: Boolean
    open var QuadSize: Vector2D
    open var UVRect: Box2D
    open var CylinderRadius: Number
    open var CylinderOverlayArc: Number
    open var CylinderHeight: Number
    open var EquirectProps: EquirectProps
    open var StereoLayerType: String /* "SLT_WorldLocked" | "SLT_TrackerLocked" | "SLT_FaceLocked" | "SLT_MAX" */
    open var StereoLayerShape: String /* "SLSH_QuadLayer" | "SLSH_CylinderLayer" | "SLSH_CubemapLayer" | "SLSH_EquirectLayer" | "SLSH_MAX" */
    open var Shape: StereoLayerShape
    open var Priority: Number
    open fun SetUVRect(InUVRect: Box2D)
    open fun SetTexture(InTexture: Texture)
    open fun SetQuadSize(InQuadSize: Vector2D)
    open fun SetPriority(InPriority: Number)
    open fun SetLeftTexture(InTexture: Texture)
    open fun SetEquirectProps(InScaleBiases: EquirectProps)
    open fun MarkTextureForUpdate()
    open fun GetUVRect(): Box2D
    open fun GetTexture(): Texture
    open fun GetQuadSize(): Vector2D
    open fun GetPriority(): Number
    open fun GetLeftTexture(): Texture

    companion object {
        fun Load(ResourceName: String): StereoLayerComponent
        fun Find(Outer: UObject, ResourceName: String): StereoLayerComponent
        fun GetDefaultObject(): StereoLayerComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): StereoLayerComponent
        fun C(Other: UObject): StereoLayerComponent
        fun C(Other: Any): StereoLayerComponent
    }
}

external open class StereoLayerFunctionLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): StereoLayerFunctionLibrary
        fun Find(Outer: UObject, ResourceName: String): StereoLayerFunctionLibrary
        fun GetDefaultObject(): StereoLayerFunctionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): StereoLayerFunctionLibrary
        fun ShowSplashScreen()
        fun SetSplashScreen(Texture: Texture, Scale: Vector2D, Offset: Vector, bShowLoadingMovie: Boolean, bShowOnSet: Boolean)
        fun HideSplashScreen()
        fun EnableAutoLoadingSplashScreen(InAutoShowEnabled: Boolean)
        fun C(Other: UObject): StereoLayerFunctionLibrary
        fun C(Other: Any): StereoLayerFunctionLibrary
    }
}

external open class StringTable : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): StringTable
        fun Find(Outer: UObject, ResourceName: String): StringTable
        fun GetDefaultObject(): StringTable
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): StringTable
        fun C(Other: UObject): StringTable
        fun C(Other: Any): StringTable
    }
}

external open class SubsystemBlueprintLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SubsystemBlueprintLibrary
        fun Find(Outer: UObject, ResourceName: String): SubsystemBlueprintLibrary
        fun GetDefaultObject(): SubsystemBlueprintLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SubsystemBlueprintLibrary
        fun GetWorldSubsystem(ContextObject: UObject, Class: UnrealEngineClass): WorldSubsystem
        fun GetLocalPlayerSubSystemFromPlayerController(PlayerController: PlayerController, Class: UnrealEngineClass): LocalPlayerSubsystem
        fun GetLocalPlayerSubsystem(ContextObject: UObject, Class: UnrealEngineClass): LocalPlayerSubsystem
        fun GetGameInstanceSubsystem(ContextObject: UObject, Class: UnrealEngineClass): GameInstanceSubsystem
        fun GetEngineSubsystem(Class: UnrealEngineClass): EngineSubsystem
        fun C(Other: UObject): SubsystemBlueprintLibrary
        fun C(Other: Any): SubsystemBlueprintLibrary
    }
}

external open class SystemTimeTimecodeProvider : TimecodeProvider {
    constructor()
    constructor(Outer: UObject)
    open var FrameRate: FrameRate
    open var bGenerateFullFrame: Boolean
    open var bUseHighPerformanceClock: Boolean

    companion object {
        fun Load(ResourceName: String): SystemTimeTimecodeProvider
        fun Find(Outer: UObject, ResourceName: String): SystemTimeTimecodeProvider
        fun GetDefaultObject(): SystemTimeTimecodeProvider
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SystemTimeTimecodeProvider
        fun C(Other: UObject): SystemTimeTimecodeProvider
        fun C(Other: Any): SystemTimeTimecodeProvider
    }
}

external open class TargetPoint(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var SpriteComponent: BillboardComponent
    open var ArrowComponent: ArrowComponent

    companion object {
        fun GetDefaultObject(): TargetPoint
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TargetPoint
        fun C(Other: UObject): TargetPoint
        fun C(Other: Any): TargetPoint
    }
}

external open class TextPropertyTestObject : UObject {
    constructor()
    constructor(Outer: UObject)
    open var DefaultedText: String
    open var UndefaultedText: String
    open var TransientText: String

    companion object {
        fun Load(ResourceName: String): TextPropertyTestObject
        fun Find(Outer: UObject, ResourceName: String): TextPropertyTestObject
        fun GetDefaultObject(): TextPropertyTestObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextPropertyTestObject
        fun C(Other: UObject): TextPropertyTestObject
        fun C(Other: Any): TextPropertyTestObject
    }
}

external open class TextRenderActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var TextRender: TextRenderComponent
    open var SpriteComponent: BillboardComponent

    companion object {
        fun GetDefaultObject(): TextRenderActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextRenderActor
        fun C(Other: UObject): TextRenderActor
        fun C(Other: Any): TextRenderActor
    }
}

external open class TextureMipDataProviderFactory : AssetUserData {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TextureMipDataProviderFactory
        fun Find(Outer: UObject, ResourceName: String): TextureMipDataProviderFactory
        fun GetDefaultObject(): TextureMipDataProviderFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextureMipDataProviderFactory
        fun C(Other: UObject): TextureMipDataProviderFactory
        fun C(Other: Any): TextureMipDataProviderFactory
    }
}

external open class TimelineEventEntry {
    open var Time: Number
    open var EventFunc: UnrealEngineDelegate<() -> Unit>
    open fun clone(): TimelineEventEntry

    companion object {
        fun C(Other: UObject): TimelineEventEntry
        fun C(Other: Any): TimelineEventEntry
    }
}

external open class TimelineVectorTrack {
    open var VectorCurve: CurveVector
    open var InterpFunc: UnrealEngineDelegate<(Output: Vector) -> Unit>
    open var TrackName: String
    open var VectorPropertyName: String
    open fun clone(): TimelineVectorTrack

    companion object {
        fun C(Other: UObject): TimelineVectorTrack
        fun C(Other: Any): TimelineVectorTrack
    }
}

external open class TimelineFloatTrack {
    open var FloatCurve: CurveFloat
    open var InterpFunc: UnrealEngineDelegate<(Output: Number) -> Unit>
    open var TrackName: String
    open var FloatPropertyName: String
    open fun clone(): TimelineFloatTrack

    companion object {
        fun C(Other: UObject): TimelineFloatTrack
        fun C(Other: Any): TimelineFloatTrack
    }
}

external open class TimelineLinearColorTrack {
    open var LinearColorCurve: CurveLinearColor
    open var InterpFunc: UnrealEngineDelegate<(Output: LinearColor) -> Unit>
    open var TrackName: String
    open var LinearColorPropertyName: String
    open fun clone(): TimelineLinearColorTrack

    companion object {
        fun C(Other: UObject): TimelineLinearColorTrack
        fun C(Other: Any): TimelineLinearColorTrack
    }
}

external open class Timeline {
    open var LengthMode: String /* "TL_TimelineLength" | "TL_LastKeyFrame" | "TL_MAX" */
    open var bLooping: Boolean
    open var bReversePlayback: Boolean
    open var bPlaying: Boolean
    open var Length: Number
    open var PlayRate: Number
    open var Position: Number
    open var Events: Array<TimelineEventEntry>
    open var InterpVectors: Array<TimelineVectorTrack>
    open var InterpFloats: Array<TimelineFloatTrack>
    open var InterpLinearColors: Array<TimelineLinearColorTrack>
    open var TimelinePostUpdateFunc: UnrealEngineDelegate<() -> Unit>
    open var TimelineFinishedFunc: UnrealEngineDelegate<() -> Unit>
    open var PropertySetObject: Any
    open var DirectionPropertyName: String
    open fun clone(): Timeline

    companion object {
        fun C(Other: UObject): Timeline
        fun C(Other: Any): Timeline
    }
}

external open class TimelineComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var TheTimeline: Timeline
    open var bIgnoreTimeDilation: Boolean
    open fun Stop()
    open fun SetVectorCurve(NewVectorCurve: CurveVector, VectorTrackName: String)
    open fun SetTimelineLengthMode(NewLengthMode: String /* "TL_TimelineLength" | "TL_LastKeyFrame" | "TL_MAX" */)
    open fun SetTimelineLength(NewLength: Number)
    open fun SetPlayRate(NewRate: Number)
    open fun SetPlaybackPosition(NewPosition: Number, bFireEvents: Boolean, bFireUpdate: Boolean)
    open fun SetNewTime(NewTime: Number)
    open fun SetLooping(bNewLooping: Boolean)
    open fun SetLinearColorCurve(NewLinearColorCurve: CurveLinearColor, LinearColorTrackName: String)
    open fun SetIgnoreTimeDilation(bNewIgnoreTimeDilation: Boolean)
    open fun SetFloatCurve(NewFloatCurve: CurveFloat, FloatTrackName: String)
    open fun ReverseFromEnd()
    open fun Reverse()
    open fun PlayFromStart()
    open fun Play()
    open fun OnRep_Timeline()
    open fun IsReversing(): Boolean
    open fun IsPlaying(): Boolean
    open fun IsLooping(): Boolean
    open fun GetTimelineLength(): Number
    open fun GetPlayRate(): Number
    open fun GetPlaybackPosition(): Number
    open fun GetIgnoreTimeDilation(): Boolean

    companion object {
        fun Load(ResourceName: String): TimelineComponent
        fun Find(Outer: UObject, ResourceName: String): TimelineComponent
        fun GetDefaultObject(): TimelineComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TimelineComponent
        fun C(Other: UObject): TimelineComponent
        fun C(Other: Any): TimelineComponent
    }
}

external open class TireType : DataAsset {
    constructor()
    constructor(Outer: UObject)
    open var FrictionScale: Number

    companion object {
        fun Load(ResourceName: String): TireType
        fun Find(Outer: UObject, ResourceName: String): TireType
        fun GetDefaultObject(): TireType
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TireType
        fun C(Other: UObject): TireType
        fun C(Other: Any): TireType
    }
}

external open class TriggerBase(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var CollisionComponent: ShapeComponent
    open var SpriteComponent: BillboardComponent

    companion object {
        fun GetDefaultObject(): TriggerBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TriggerBase
        fun C(Other: UObject): TriggerBase
        fun C(Other: Any): TriggerBase
    }
}

external open class TriggerBox(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : TriggerBase {
    companion object {
        fun GetDefaultObject(): TriggerBox
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TriggerBox
        fun C(Other: UObject): TriggerBox
        fun C(Other: Any): TriggerBox
    }
}

external open class TriggerCapsule(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : TriggerBase {
    companion object {
        fun GetDefaultObject(): TriggerCapsule
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TriggerCapsule
        fun C(Other: UObject): TriggerCapsule
        fun C(Other: Any): TriggerCapsule
    }
}

external open class TriggerSphere(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : TriggerBase {
    companion object {
        fun GetDefaultObject(): TriggerSphere
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TriggerSphere
        fun C(Other: UObject): TriggerSphere
        fun C(Other: Any): TriggerSphere
    }
}

external open class TriggerVolume(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Volume {
    companion object {
        fun GetDefaultObject(): TriggerVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TriggerVolume
        fun C(Other: UObject): TriggerVolume
        fun C(Other: Any): TriggerVolume
    }
}

external object ETwitterRequestMethod {
    var TRM_Get: String /* "TRM_Get" */
    var TRM_Post: String /* "TRM_Post" */
    var TRM_Delete: String /* "TRM_Delete" */
    var TRM_MAX: String /* "TRM_MAX" */
}

external open class TwitterIntegrationBase : PlatformInterfaceBase {
    constructor()
    constructor(Outer: UObject)
    open fun TwitterRequest(URL: String, ParamKeysAndValues: Array<String>, RequestMethod: String /* "TRM_Get" | "TRM_Post" | "TRM_Delete" | "TRM_MAX" */, AccountIndex: Number): Boolean
    open fun ShowTweetUI(InitialMessage: String, URL: String, Picture: String): Boolean
    open fun Init()
    open fun GetNumAccounts(): Number
    open fun GetAccountName(AccountIndex: Number): String
    open fun CanShowTweetUI(): Boolean
    open fun AuthorizeAccounts(): Boolean

    companion object {
        fun Load(ResourceName: String): TwitterIntegrationBase
        fun Find(Outer: UObject, ResourceName: String): TwitterIntegrationBase
        fun GetDefaultObject(): TwitterIntegrationBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TwitterIntegrationBase
        fun C(Other: UObject): TwitterIntegrationBase
        fun C(Other: Any): TwitterIntegrationBase
    }
}

external open class UserDefinedEnum : Enum {
    constructor()
    constructor(Outer: UObject)
    open var UniqueNameIndex: Any
    open var EnumDescription: String
    open var DisplayNameMap: Any

    companion object {
        fun Load(ResourceName: String): UserDefinedEnum
        fun Find(Outer: UObject, ResourceName: String): UserDefinedEnum
        fun GetDefaultObject(): UserDefinedEnum
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UserDefinedEnum
        fun C(Other: UObject): UserDefinedEnum
        fun C(Other: Any): UserDefinedEnum
    }
}

external object EUserDefinedStructureStatus {
    var UDSS_UpToDate: String /* "UDSS_UpToDate" */
    var UDSS_Dirty: String /* "UDSS_Dirty" */
    var UDSS_Error: String /* "UDSS_Error" */
    var UDSS_Duplicate: String /* "UDSS_Duplicate" */
    var UDSS_MAX: String /* "UDSS_MAX" */
}

external open class UserDefinedStruct : ScriptStruct {
    constructor()
    constructor(Outer: UObject)
    open var PrimaryStruct: Any
    open var ErrorMessage: String
    open var EditorData: UObject
    open var Status: String /* "UDSS_UpToDate" | "UDSS_Dirty" | "UDSS_Error" | "UDSS_Duplicate" | "UDSS_MAX" */
    open var Guid: Guid

    companion object {
        fun Load(ResourceName: String): UserDefinedStruct
        fun Find(Outer: UObject, ResourceName: String): UserDefinedStruct
        fun GetDefaultObject(): UserDefinedStruct
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UserDefinedStruct
        fun C(Other: UObject): UserDefinedStruct
        fun C(Other: Any): UserDefinedStruct
    }
}

external object ERenderFocusRule {
    var Always: String /* "Always" */
    var NonPointer: String /* "NonPointer" */
    var NavigationOnly: String /* "NavigationOnly" */
    var Never: String /* "Never" */
    var ERenderFocusRule_MAX: String /* "ERenderFocusRule_MAX" */
}

external object EUIScalingRule {
    var ShortestSide: String /* "ShortestSide" */
    var LongestSide: String /* "LongestSide" */
    var Horizontal: String /* "Horizontal" */
    var Vertical: String /* "Vertical" */
    var ScaleToFit: String /* "ScaleToFit" */
    var Custom: String /* "Custom" */
    var EUIScalingRule_MAX: String /* "EUIScalingRule_MAX" */
}

external open class UserInterfaceSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var RenderFocusRule: String /* "Always" | "NonPointer" | "NavigationOnly" | "Never" | "ERenderFocusRule_MAX" */
    open var HardwareCursors: Any
    open var SoftwareCursors: Any
    open var DefaultCursor: SoftClassPath
    open var TextEditBeamCursor: SoftClassPath
    open var CrosshairsCursor: SoftClassPath
    open var HandCursor: SoftClassPath
    open var GrabHandCursor: SoftClassPath
    open var GrabHandClosedCursor: SoftClassPath
    open var SlashedCircleCursor: SoftClassPath
    open var ApplicationScale: Number
    open var UIScaleRule: String /* "ShortestSide" | "LongestSide" | "Horizontal" | "Vertical" | "ScaleToFit" | "Custom" | "EUIScalingRule_MAX" */
    open var CustomScalingRuleClass: SoftClassPath
    open var UIScaleCurve: RuntimeFloatCurve
    open var bAllowHighDPIInGameMode: Boolean
    open var DesignScreenSize: IntPoint
    open var bLoadWidgetsOnDedicatedServer: Boolean
    open var CursorClasses: Array<UObject>
    open var CustomScalingRuleClassInstance: UnrealEngineClass
    open var CustomScalingRule: DPICustomScalingRule

    companion object {
        fun Load(ResourceName: String): UserInterfaceSettings
        fun Find(Outer: UObject, ResourceName: String): UserInterfaceSettings
        fun GetDefaultObject(): UserInterfaceSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UserInterfaceSettings
        fun C(Other: UObject): UserInterfaceSettings
        fun C(Other: Any): UserInterfaceSettings
    }
}

external object EVectorFieldConstructionOp {
    var VFCO_Extrude: String /* "VFCO_Extrude" */
    var VFCO_Revolve: String /* "VFCO_Revolve" */
    var VFCO_MAX: String /* "VFCO_MAX" */
}

external open class VectorFieldStatic : VectorField {
    constructor()
    constructor(Outer: UObject)
    open var SizeX: Number
    open var SizeY: Number
    open var SizeZ: Number
    open var bAllowCPUAccess: Boolean
    open var SourceFilePath: String
    open var AssetImportData: AssetImportData

    companion object {
        fun Load(ResourceName: String): VectorFieldStatic
        fun Find(Outer: UObject, ResourceName: String): VectorFieldStatic
        fun GetDefaultObject(): VectorFieldStatic
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VectorFieldStatic
        fun C(Other: UObject): VectorFieldStatic
        fun C(Other: Any): VectorFieldStatic
    }
}

external open class VectorFieldAnimated : VectorField {
    constructor()
    constructor(Outer: UObject)
    open var Texture: Texture2D
    open var ConstructionOp: String /* "VFCO_Extrude" | "VFCO_Revolve" | "VFCO_MAX" */
    open var VolumeSizeX: Number
    open var VolumeSizeY: Number
    open var VolumeSizeZ: Number
    open var SubImagesX: Number
    open var SubImagesY: Number
    open var FrameCount: Number
    open var FramesPerSecond: Number
    open var bLoop: Boolean
    open var NoiseField: VectorFieldStatic
    open var NoiseScale: Number
    open var NoiseMax: Number

    companion object {
        fun Load(ResourceName: String): VectorFieldAnimated
        fun Find(Outer: UObject, ResourceName: String): VectorFieldAnimated
        fun GetDefaultObject(): VectorFieldAnimated
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VectorFieldAnimated
        fun C(Other: UObject): VectorFieldAnimated
        fun C(Other: Any): VectorFieldAnimated
    }
}

external open class VectorFieldComponent : PrimitiveComponent {
    constructor()
    constructor(Outer: UObject)
    open var VectorField: VectorField
    open var Intensity: Number
    open var Tightness: Number
    open var bPreviewVectorField: Boolean
    open fun SetIntensity(NewIntensity: Number)

    companion object {
        fun Load(ResourceName: String): VectorFieldComponent
        fun Find(Outer: UObject, ResourceName: String): VectorFieldComponent
        fun GetDefaultObject(): VectorFieldComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VectorFieldComponent
        fun C(Other: UObject): VectorFieldComponent
        fun C(Other: Any): VectorFieldComponent
    }
}

external open class VectorFieldVolume(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var VectorFieldComponent: VectorFieldComponent
    open var SpriteComponent: BillboardComponent

    companion object {
        fun GetDefaultObject(): VectorFieldVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VectorFieldVolume
        fun C(Other: UObject): VectorFieldVolume
        fun C(Other: Any): VectorFieldVolume
    }
}

external open class ViewportStatsSubsystem : WorldSubsystem {
    constructor()
    constructor(Outer: UObject)
    open fun RemoveDisplayDelegate(IndexToRemove: Number)
    open fun AddTimedDisplay(text: String, Color: LinearColor, Duration: Number)

    companion object {
        fun Load(ResourceName: String): ViewportStatsSubsystem
        fun Find(Outer: UObject, ResourceName: String): ViewportStatsSubsystem
        fun GetDefaultObject(): ViewportStatsSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ViewportStatsSubsystem
        fun C(Other: UObject): ViewportStatsSubsystem
        fun C(Other: Any): ViewportStatsSubsystem
    }
}

external open class VirtualTexture : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): VirtualTexture
        fun Find(Outer: UObject, ResourceName: String): VirtualTexture
        fun GetDefaultObject(): VirtualTexture
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VirtualTexture
        fun C(Other: UObject): VirtualTexture
        fun C(Other: Any): VirtualTexture
    }
}

external open class LightMapVirtualTexture : VirtualTexture {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LightMapVirtualTexture
        fun Find(Outer: UObject, ResourceName: String): LightMapVirtualTexture
        fun GetDefaultObject(): LightMapVirtualTexture
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LightMapVirtualTexture
        fun C(Other: UObject): LightMapVirtualTexture
        fun C(Other: Any): LightMapVirtualTexture
    }
}

external open class VirtualTextureSpacePoolConfig {
    open var MinTileSize: Number
    open var MaxTileSize: Number
    open var Formats: Array<String /* "PF_Unknown" | "PF_A32B32G32R32F" | "PF_B8G8R8A8" | "PF_G8" | "PF_G16" | "PF_DXT1" | "PF_DXT3" | "PF_DXT5" | "PF_UYVY" | "PF_FloatRGB" | "PF_FloatRGBA" | "PF_DepthStencil" | "PF_ShadowDepth" | "PF_R32_FLOAT" | "PF_G16R16" | "PF_G16R16F" | "PF_G16R16F_FILTER" | "PF_G32R32F" | "PF_A2B10G10R10" | "PF_A16B16G16R16" | "PF_D24" | "PF_R16F" | "PF_R16F_FILTER" | "PF_BC5" | "PF_V8U8" | "PF_A1" | "PF_FloatR11G11B10" | "PF_A8" | "PF_R32_UINT" | "PF_R32_SINT" | "PF_PVRTC2" | "PF_PVRTC4" | "PF_R16_UINT" | "PF_R16_SINT" | "PF_R16G16B16A16_UINT" | "PF_R16G16B16A16_SINT" | "PF_R5G6B5_UNORM" | "PF_R8G8B8A8" | "PF_A8R8G8B8" | "PF_BC4" | "PF_R8G8" | "PF_ATC_RGB" | "PF_ATC_RGBA_E" | "PF_ATC_RGBA_I" | "PF_X24_G8" | "PF_ETC1" | "PF_ETC2_RGB" | "PF_ETC2_RGBA" | "PF_R32G32B32A32_UINT" | "PF_R16G16_UINT" | "PF_ASTC_4x4" | "PF_ASTC_6x6" | "PF_ASTC_8x8" | "PF_ASTC_10x10" | "PF_ASTC_12x12" | "PF_BC6H" | "PF_BC7" | "PF_R8_UINT" | "PF_L8" | "PF_XGXR8" | "PF_R8G8B8A8_UINT" | "PF_R8G8B8A8_SNORM" | "PF_R16G16B16A16_UNORM" | "PF_R16G16B16A16_SNORM" | "PF_PLATFORM_HDR_0" | "PF_PLATFORM_HDR_1" | "PF_PLATFORM_HDR_2" | "PF_NV12" | "PF_R32G32_UINT" | "PF_ETC2_R11_EAC" | "PF_ETC2_RG11_EAC" | "PF_MAX" */>
    open var SizeInMegabyte: Number
    open var bAllowSizeScale: Boolean
    open var ScalabilityGroup: Any
    open fun clone(): VirtualTextureSpacePoolConfig

    companion object {
        fun C(Other: UObject): VirtualTextureSpacePoolConfig
        fun C(Other: Any): VirtualTextureSpacePoolConfig
    }
}

external open class VirtualTexturePoolConfig : UObject {
    constructor()
    constructor(Outer: UObject)
    open var DefaultSizeInMegabyte: Number
    open var Pools: Array<VirtualTextureSpacePoolConfig>

    companion object {
        fun Load(ResourceName: String): VirtualTexturePoolConfig
        fun Find(Outer: UObject, ResourceName: String): VirtualTexturePoolConfig
        fun GetDefaultObject(): VirtualTexturePoolConfig
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VirtualTexturePoolConfig
        fun C(Other: UObject): VirtualTexturePoolConfig
        fun C(Other: Any): VirtualTexturePoolConfig
    }
}

external open class VisualLoggerAutomationTests : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): VisualLoggerAutomationTests
        fun Find(Outer: UObject, ResourceName: String): VisualLoggerAutomationTests
        fun GetDefaultObject(): VisualLoggerAutomationTests
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VisualLoggerAutomationTests
        fun C(Other: UObject): VisualLoggerAutomationTests
        fun C(Other: Any): VisualLoggerAutomationTests
    }
}

external open class VisualLoggerDebugSnapshotInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): VisualLoggerDebugSnapshotInterface
        fun Find(Outer: UObject, ResourceName: String): VisualLoggerDebugSnapshotInterface
        fun GetDefaultObject(): VisualLoggerDebugSnapshotInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VisualLoggerDebugSnapshotInterface
        fun C(Other: UObject): VisualLoggerDebugSnapshotInterface
        fun C(Other: Any): VisualLoggerDebugSnapshotInterface
    }
}

external open class VisualLoggerKismetLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): VisualLoggerKismetLibrary
        fun Find(Outer: UObject, ResourceName: String): VisualLoggerKismetLibrary
        fun GetDefaultObject(): VisualLoggerKismetLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VisualLoggerKismetLibrary
        fun RedirectVislog(SourceOwner: UObject, DestinationOwner: UObject)
        fun LogText(WorldContextObject: UObject, text: String, LogCategory: String, bAddToMessageLog: Boolean)
        fun LogSegment(WorldContextObject: UObject, SegmentStart: Vector, SegmentEnd: Vector, text: String, ObjectColor: LinearColor, Thickness: Number, CategoryName: String, bAddToMessageLog: Boolean)
        fun LogLocation(WorldContextObject: UObject, Location: Vector, text: String, ObjectColor: LinearColor, Radius: Number, LogCategory: String, bAddToMessageLog: Boolean)
        fun LogBox(WorldContextObject: UObject, BoxShape: Box, text: String, ObjectColor: LinearColor, LogCategory: String, bAddToMessageLog: Boolean)
        fun EnableVisLogRecording(bEnabled: Boolean)
        fun C(Other: UObject): VisualLoggerKismetLibrary
        fun C(Other: Any): VisualLoggerKismetLibrary
    }
}

external open class VoiceChannel : Channel {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): VoiceChannel
        fun Find(Outer: UObject, ResourceName: String): VoiceChannel
        fun GetDefaultObject(): VoiceChannel
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VoiceChannel
        fun C(Other: UObject): VoiceChannel
        fun C(Other: Any): VoiceChannel
    }
}

external open class VoiceSettings {
    open var ComponentToAttachTo: SceneComponent
    open var AttenuationSettings: SoundAttenuation
    open var SourceEffectChain: SoundEffectSourcePresetChain
    open fun clone(): VoiceSettings

    companion object {
        fun C(Other: UObject): VoiceSettings
        fun C(Other: Any): VoiceSettings
    }
}

external open class VOIPTalker : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var Settings: VoiceSettings
    open fun RegisterWithPlayerState(OwningState: PlayerState)
    open fun GetVoiceLevel(): Number
    open fun EndTalking()
    open fun BeginTalking(AudioComponent: AudioComponent)

    companion object {
        fun Load(ResourceName: String): VOIPTalker
        fun Find(Outer: UObject, ResourceName: String): VOIPTalker
        fun GetDefaultObject(): VOIPTalker
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VOIPTalker
        fun CreateTalkerForPlayer(OwningState: PlayerState): VOIPTalker
        fun C(Other: UObject): VOIPTalker
        fun C(Other: Any): VOIPTalker
    }
}

external open class VOIPStatics : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): VOIPStatics
        fun Find(Outer: UObject, ResourceName: String): VOIPStatics
        fun GetDefaultObject(): VOIPStatics
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VOIPStatics
        fun SetMicThreshold(InThreshold: Number)
        fun C(Other: UObject): VOIPStatics
        fun C(Other: Any): VOIPStatics
    }
}

external open class VolumetricCloudComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var LayerBottomAltitude: Number
    open var LayerHeight: Number
    open var TracingStartMaxDistance: Number
    open var TracingMaxDistance: Number
    open var PlanetRadius: Number
    open var GroundAlbedo: Color
    open var Material: MaterialInterface
    open var bUsePerSampleAtmosphericLightTransmittance: Boolean
    open var SkyLightCloudBottomOcclusion: Number
    open var ViewSampleCountScale: Number
    open var ReflectionSampleCountScale: Number
    open var ShadowViewSampleCountScale: Number
    open var ShadowReflectionSampleCountScale: Number
    open var ShadowTracingDistance: Number
    open var StopTracingTransmittanceThreshold: Number
    open fun SetViewSampleCountScale(NewValue: Number)
    open fun SetTracingStartMaxDistance(NewValue: Number)
    open fun SetTracingMaxDistance(NewValue: Number)
    open fun SetStopTracingTransmittanceThreshold(NewValue: Number)
    open fun SetSkyLightCloudBottomOcclusion(NewValue: Number)
    open fun SetShadowViewSampleCountScale(NewValue: Number)
    open fun SetShadowTracingDistance(NewValue: Number)
    open fun SetShadowReflectionSampleCountScale(NewValue: Number)
    open fun SetReflectionSampleCountScale(NewValue: Number)
    open fun SetPlanetRadius(NewValue: Number)
    open fun SetMaterial(NewValue: MaterialInterface)
    open fun SetLayerHeight(NewValue: Number)
    open fun SetLayerBottomAltitude(NewValue: Number)
    open fun SetGroundAlbedo(NewValue: Color)
    open fun SetUsePerSampleAtmosphericLightTransmittance(NewValue: Boolean)

    companion object {
        fun Load(ResourceName: String): VolumetricCloudComponent
        fun Find(Outer: UObject, ResourceName: String): VolumetricCloudComponent
        fun GetDefaultObject(): VolumetricCloudComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VolumetricCloudComponent
        fun C(Other: UObject): VolumetricCloudComponent
        fun C(Other: Any): VolumetricCloudComponent
    }
}

external open class VolumetricCloud(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Info {
    open var VolumetricCloudComponent: VolumetricCloudComponent

    companion object {
        fun GetDefaultObject(): VolumetricCloud
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VolumetricCloud
        fun C(Other: UObject): VolumetricCloud
        fun C(Other: Any): VolumetricCloud
    }
}

external open class VolumetricLightmapDensityVolume(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Volume {
    open var AllowedMipLevelRange: Int32Interval

    companion object {
        fun GetDefaultObject(): VolumetricLightmapDensityVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VolumetricLightmapDensityVolume
        fun C(Other: UObject): VolumetricLightmapDensityVolume
        fun C(Other: Any): VolumetricLightmapDensityVolume
    }
}

external object EWindSourceType {
    var Directional: String /* "Directional" */
    var Point: String /* "Point" */
    var EWindSourceType_MAX: String /* "EWindSourceType_MAX" */
}

external open class WindDirectionalSourceComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var Strength: Number
    open var Speed: Number
    open var MinGustAmount: Number
    open var MaxGustAmount: Number
    open var Radius: Number
    open var bPointWind: Boolean
    open fun SetWindType(InNewType: String /* "Directional" | "Point" | "EWindSourceType_MAX" */)
    open fun SetStrength(InNewStrength: Number)
    open fun SetSpeed(InNewSpeed: Number)
    open fun SetRadius(InNewRadius: Number)
    open fun SetMinimumGustAmount(InNewMinGust: Number)
    open fun SetMaximumGustAmount(InNewMaxGust: Number)

    companion object {
        fun Load(ResourceName: String): WindDirectionalSourceComponent
        fun Find(Outer: UObject, ResourceName: String): WindDirectionalSourceComponent
        fun GetDefaultObject(): WindDirectionalSourceComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WindDirectionalSourceComponent
        fun C(Other: UObject): WindDirectionalSourceComponent
        fun C(Other: Any): WindDirectionalSourceComponent
    }
}

external open class WindDirectionalSource(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Info {
    open var Component: WindDirectionalSourceComponent
    open var ArrowComponent: ArrowComponent

    companion object {
        fun GetDefaultObject(): WindDirectionalSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WindDirectionalSource
        fun C(Other: UObject): WindDirectionalSource
        fun C(Other: Any): WindDirectionalSource
    }
}

external open class HierarchicalLODSetup : UObject {
    constructor()
    constructor(Outer: UObject)
    open var HierarchicalLODSetup: Array<HierarchicalSimplification>
    open var OverrideBaseMaterial: MaterialInterface

    companion object {
        fun Load(ResourceName: String): HierarchicalLODSetup
        fun Find(Outer: UObject, ResourceName: String): HierarchicalLODSetup
        fun GetDefaultObject(): HierarchicalLODSetup
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): HierarchicalLODSetup
        fun C(Other: UObject): HierarchicalLODSetup
        fun C(Other: Any): HierarchicalLODSetup
    }
}

external open class MoviePlayerSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bWaitForMoviesToComplete: Boolean
    open var bMoviesAreSkippable: Boolean
    open var StartupMovies: Array<String>

    companion object {
        fun Load(ResourceName: String): MoviePlayerSettings
        fun Find(Outer: UObject, ResourceName: String): MoviePlayerSettings
        fun GetDefaultObject(): MoviePlayerSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MoviePlayerSettings
        fun C(Other: UObject): MoviePlayerSettings
        fun C(Other: Any): MoviePlayerSettings
    }
}

external open class SHAHashData {
    open var Hash: Number
    open fun clone(): SHAHashData

    companion object {
        fun C(Other: UObject): SHAHashData
        fun C(Other: Any): SHAHashData
    }
}

external open class ChunkPartData {
    open var Guid: Guid
    open var Offset: Any
    open var Size: Any
    open fun clone(): ChunkPartData

    companion object {
        fun C(Other: UObject): ChunkPartData
        fun C(Other: Any): ChunkPartData
    }
}

external open class FileManifestData {
    open var Filename: String
    open var FileHash: SHAHashData
    open var FileChunkParts: Array<ChunkPartData>
    open var InstallTags: Array<String>
    open var bIsUnixExecutable: Boolean
    open var SymlinkTarget: String
    open var bIsReadOnly: Boolean
    open var bIsCompressed: Boolean
    open fun clone(): FileManifestData

    companion object {
        fun C(Other: UObject): FileManifestData
        fun C(Other: Any): FileManifestData
    }
}

external open class ChunkInfoData {
    open var Guid: Guid
    open var Hash: Any
    open var ShaHash: SHAHashData
    open var FileSize: Any
    open var GroupNumber: Number
    open fun clone(): ChunkInfoData

    companion object {
        fun C(Other: UObject): ChunkInfoData
        fun C(Other: Any): ChunkInfoData
    }
}

external open class CustomFieldData {
    open var Key: String
    open var Value: String
    open fun clone(): CustomFieldData

    companion object {
        fun C(Other: UObject): CustomFieldData
        fun C(Other: Any): CustomFieldData
    }
}

external open class BuildPatchManifest : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ManifestFileVersion: Number
    open var bIsFileData: Boolean
    open var AppID: Any
    open var AppName: String
    open var BuildVersion: String
    open var LaunchExe: String
    open var LaunchCommand: String
    open var PrereqIds: Any
    open var PrereqName: String
    open var PrereqPath: String
    open var PrereqArgs: String
    open var FileManifestList: Array<FileManifestData>
    open var ChunkList: Array<ChunkInfoData>
    open var CustomFields: Array<CustomFieldData>

    companion object {
        fun Load(ResourceName: String): BuildPatchManifest
        fun Find(Outer: UObject, ResourceName: String): BuildPatchManifest
        fun GetDefaultObject(): BuildPatchManifest
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BuildPatchManifest
        fun C(Other: UObject): BuildPatchManifest
        fun C(Other: Any): BuildPatchManifest
    }
}

external open class SoundFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var bAutoCreateCue: Boolean
    open var bIncludeAttenuationNode: Boolean
    open var bIncludeLoopingNode: Boolean
    open var bIncludeModulatorNode: Boolean
    open var CueVolume: Number
    open var CuePackageSuffix: String

    companion object {
        fun Load(ResourceName: String): SoundFactory
        fun Find(Outer: UObject, ResourceName: String): SoundFactory
        fun GetDefaultObject(): SoundFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundFactory
        fun C(Other: UObject): SoundFactory
        fun C(Other: Any): SoundFactory
    }
}

external open class ReimportSoundFactory : SoundFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ReimportSoundFactory
        fun Find(Outer: UObject, ResourceName: String): ReimportSoundFactory
        fun GetDefaultObject(): ReimportSoundFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ReimportSoundFactory
        fun C(Other: UObject): ReimportSoundFactory
        fun C(Other: Any): ReimportSoundFactory
    }
}

external open class LinuxTargetSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var SpatializationPlugin: String
    open var ReverbPlugin: String
    open var OcclusionPlugin: String
    open var SoundCueCookQualityIndex: Number
    open var TargetedRHIs: Array<String>

    companion object {
        fun Load(ResourceName: String): LinuxTargetSettings
        fun Find(Outer: UObject, ResourceName: String): LinuxTargetSettings
        fun GetDefaultObject(): LinuxTargetSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LinuxTargetSettings
        fun C(Other: UObject): LinuxTargetSettings
        fun C(Other: Any): LinuxTargetSettings
    }
}

external object EMacTargetArchitecture {
    var MacTargetArchitectureIntel: String /* "MacTargetArchitectureIntel" */
    var MacTargetArchitectureUniversal: String /* "MacTargetArchitectureUniversal" */
    var MacTargetArchitectureAppleSil: String /* "MacTargetArchitectureAppleSil" */
    var EMacTargetArchitecture_MAX: String /* "EMacTargetArchitecture_MAX" */
}

external open class MacTargetSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var TargetedRHIs: Array<String>
    open var TargetArchitecture: String /* "MacTargetArchitectureIntel" | "MacTargetArchitectureUniversal" | "MacTargetArchitectureAppleSil" | "EMacTargetArchitecture_MAX" */
    open var MaxShaderLanguageVersion: Number
    open var UseFastIntrinsics: Boolean
    open var ForceFloats: Boolean
    open var EnableMathOptimisations: Boolean
    open var IndirectArgumentTier: Number
    open var AudioSampleRate: Number
    open var AudioCallbackBufferFrameSize: Number
    open var AudioNumBuffersToEnqueue: Number
    open var AudioMaxChannels: Number
    open var AudioNumSourceWorkers: Number
    open var SpatializationPlugin: String
    open var ReverbPlugin: String
    open var OcclusionPlugin: String
    open var SoundCueCookQualityIndex: Number

    companion object {
        fun Load(ResourceName: String): MacTargetSettings
        fun Find(Outer: UObject, ResourceName: String): MacTargetSettings
        fun GetDefaultObject(): MacTargetSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MacTargetSettings
        fun C(Other: UObject): MacTargetSettings
        fun C(Other: Any): MacTargetSettings
    }
}

external open class AudioBusFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AudioBusFactory
        fun Find(Outer: UObject, ResourceName: String): AudioBusFactory
        fun GetDefaultObject(): AudioBusFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AudioBusFactory
        fun C(Other: UObject): AudioBusFactory
        fun C(Other: Any): AudioBusFactory
    }
}

external open class DialogueVoiceFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DialogueVoiceFactory
        fun Find(Outer: UObject, ResourceName: String): DialogueVoiceFactory
        fun GetDefaultObject(): DialogueVoiceFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DialogueVoiceFactory
        fun C(Other: UObject): DialogueVoiceFactory
        fun C(Other: Any): DialogueVoiceFactory
    }
}

external open class DialogueWaveFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var InitialSoundWave: SoundWave
    open var InitialSpeakerVoice: DialogueVoice
    open var HasSetInitialTargetVoice: Boolean
    open var InitialTargetVoices: Array<DialogueVoice>

    companion object {
        fun Load(ResourceName: String): DialogueWaveFactory
        fun Find(Outer: UObject, ResourceName: String): DialogueWaveFactory
        fun GetDefaultObject(): DialogueWaveFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DialogueWaveFactory
        fun C(Other: UObject): DialogueWaveFactory
        fun C(Other: Any): DialogueWaveFactory
    }
}

external open class ReverbEffectFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ReverbEffectFactory
        fun Find(Outer: UObject, ResourceName: String): ReverbEffectFactory
        fun GetDefaultObject(): ReverbEffectFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ReverbEffectFactory
        fun C(Other: UObject): ReverbEffectFactory
        fun C(Other: Any): ReverbEffectFactory
    }
}

external open class SoundAttenuationFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundAttenuationFactory
        fun Find(Outer: UObject, ResourceName: String): SoundAttenuationFactory
        fun GetDefaultObject(): SoundAttenuationFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundAttenuationFactory
        fun C(Other: UObject): SoundAttenuationFactory
        fun C(Other: Any): SoundAttenuationFactory
    }
}

external open class SoundClassFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundClassFactory
        fun Find(Outer: UObject, ResourceName: String): SoundClassFactory
        fun GetDefaultObject(): SoundClassFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundClassFactory
        fun C(Other: UObject): SoundClassFactory
        fun C(Other: Any): SoundClassFactory
    }
}

external open class SoundClassGraph : EdGraph {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundClassGraph
        fun Find(Outer: UObject, ResourceName: String): SoundClassGraph
        fun GetDefaultObject(): SoundClassGraph
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundClassGraph
        fun C(Other: UObject): SoundClassGraph
        fun C(Other: Any): SoundClassGraph
    }
}

external open class SoundClassGraphNode : EdGraphNode {
    constructor()
    constructor(Outer: UObject)
    open var SoundClass: SoundClass

    companion object {
        fun Load(ResourceName: String): SoundClassGraphNode
        fun Find(Outer: UObject, ResourceName: String): SoundClassGraphNode
        fun GetDefaultObject(): SoundClassGraphNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundClassGraphNode
        fun C(Other: UObject): SoundClassGraphNode
        fun C(Other: Any): SoundClassGraphNode
    }
}

external open class SoundClassGraphSchema : EdGraphSchema {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundClassGraphSchema
        fun Find(Outer: UObject, ResourceName: String): SoundClassGraphSchema
        fun GetDefaultObject(): SoundClassGraphSchema
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundClassGraphSchema
        fun C(Other: UObject): SoundClassGraphSchema
        fun C(Other: Any): SoundClassGraphSchema
    }
}

external open class SoundEffectSourcePresetClassTemplate : ClassTemplate {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundEffectSourcePresetClassTemplate
        fun Find(Outer: UObject, ResourceName: String): SoundEffectSourcePresetClassTemplate
        fun GetDefaultObject(): SoundEffectSourcePresetClassTemplate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundEffectSourcePresetClassTemplate
        fun C(Other: UObject): SoundEffectSourcePresetClassTemplate
        fun C(Other: Any): SoundEffectSourcePresetClassTemplate
    }
}

external open class SoundEffectSubmixPresetClassTemplate : ClassTemplate {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundEffectSubmixPresetClassTemplate
        fun Find(Outer: UObject, ResourceName: String): SoundEffectSubmixPresetClassTemplate
        fun GetDefaultObject(): SoundEffectSubmixPresetClassTemplate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundEffectSubmixPresetClassTemplate
        fun C(Other: UObject): SoundEffectSubmixPresetClassTemplate
        fun C(Other: Any): SoundEffectSubmixPresetClassTemplate
    }
}

external open class SynthComponentClassTemplate : ClassTemplate {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SynthComponentClassTemplate
        fun Find(Outer: UObject, ResourceName: String): SynthComponentClassTemplate
        fun GetDefaultObject(): SynthComponentClassTemplate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SynthComponentClassTemplate
        fun C(Other: UObject): SynthComponentClassTemplate
        fun C(Other: Any): SynthComponentClassTemplate
    }
}

external open class SoundConcurrencyFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundConcurrencyFactory
        fun Find(Outer: UObject, ResourceName: String): SoundConcurrencyFactory
        fun GetDefaultObject(): SoundConcurrencyFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundConcurrencyFactory
        fun C(Other: UObject): SoundConcurrencyFactory
        fun C(Other: Any): SoundConcurrencyFactory
    }
}

external open class SoundCueFactoryNew : Factory {
    constructor()
    constructor(Outer: UObject)
    open var InitialSoundWave: SoundWave
    open var InitialSoundWaves: Array<Any>
    open var InitialDialogueWave: DialogueWave
    open var InitialDialogueWaves: Array<Any>

    companion object {
        fun Load(ResourceName: String): SoundCueFactoryNew
        fun Find(Outer: UObject, ResourceName: String): SoundCueFactoryNew
        fun GetDefaultObject(): SoundCueFactoryNew
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundCueFactoryNew
        fun C(Other: UObject): SoundCueFactoryNew
        fun C(Other: Any): SoundCueFactoryNew
    }
}

external open class SoundCueGraph : EdGraph {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundCueGraph
        fun Find(Outer: UObject, ResourceName: String): SoundCueGraph
        fun GetDefaultObject(): SoundCueGraph
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundCueGraph
        fun C(Other: UObject): SoundCueGraph
        fun C(Other: Any): SoundCueGraph
    }
}

external open class SoundCueGraphNode_Base : EdGraphNode {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundCueGraphNode_Base
        fun Find(Outer: UObject, ResourceName: String): SoundCueGraphNode_Base
        fun GetDefaultObject(): SoundCueGraphNode_Base
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundCueGraphNode_Base
        fun C(Other: UObject): SoundCueGraphNode_Base
        fun C(Other: Any): SoundCueGraphNode_Base
    }
}

external open class SoundCueGraphNode : SoundCueGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var SoundNode: SoundNode

    companion object {
        fun Load(ResourceName: String): SoundCueGraphNode
        fun Find(Outer: UObject, ResourceName: String): SoundCueGraphNode
        fun GetDefaultObject(): SoundCueGraphNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundCueGraphNode
        fun C(Other: UObject): SoundCueGraphNode
        fun C(Other: Any): SoundCueGraphNode
    }
}

external open class SoundCueGraphNode_Root : SoundCueGraphNode_Base {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundCueGraphNode_Root
        fun Find(Outer: UObject, ResourceName: String): SoundCueGraphNode_Root
        fun GetDefaultObject(): SoundCueGraphNode_Root
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundCueGraphNode_Root
        fun C(Other: UObject): SoundCueGraphNode_Root
        fun C(Other: Any): SoundCueGraphNode_Root
    }
}

external open class SoundCueGraphSchema : EdGraphSchema {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundCueGraphSchema
        fun Find(Outer: UObject, ResourceName: String): SoundCueGraphSchema
        fun GetDefaultObject(): SoundCueGraphSchema
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundCueGraphSchema
        fun C(Other: UObject): SoundCueGraphSchema
        fun C(Other: Any): SoundCueGraphSchema
    }
}

external open class SoundEffectPresetUserWidget : UserWidget {
    constructor()
    constructor(Outer: UObject)
    open var Preset: SoundEffectPreset
    open fun OnPresetChanged(PropertyName: String)

    companion object {
        fun Load(ResourceName: String): SoundEffectPresetUserWidget
        fun Find(Outer: UObject, ResourceName: String): SoundEffectPresetUserWidget
        fun GetDefaultObject(): SoundEffectPresetUserWidget
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundEffectPresetUserWidget
        fun C(Other: UObject): SoundEffectPresetUserWidget
        fun C(Other: Any): SoundEffectPresetUserWidget
    }
}

external open class SoundMixFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundMixFactory
        fun Find(Outer: UObject, ResourceName: String): SoundMixFactory
        fun GetDefaultObject(): SoundMixFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundMixFactory
        fun C(Other: UObject): SoundMixFactory
        fun C(Other: Any): SoundMixFactory
    }
}

external open class SoundSourceBusFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundSourceBusFactory
        fun Find(Outer: UObject, ResourceName: String): SoundSourceBusFactory
        fun GetDefaultObject(): SoundSourceBusFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundSourceBusFactory
        fun C(Other: UObject): SoundSourceBusFactory
        fun C(Other: Any): SoundSourceBusFactory
    }
}

external open class SoundSourceEffectFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var SoundEffectSourcepresetClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): SoundSourceEffectFactory
        fun Find(Outer: UObject, ResourceName: String): SoundSourceEffectFactory
        fun GetDefaultObject(): SoundSourceEffectFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundSourceEffectFactory
        fun C(Other: UObject): SoundSourceEffectFactory
        fun C(Other: Any): SoundSourceEffectFactory
    }
}

external open class SoundSourceEffectChainFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundSourceEffectChainFactory
        fun Find(Outer: UObject, ResourceName: String): SoundSourceEffectChainFactory
        fun GetDefaultObject(): SoundSourceEffectChainFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundSourceEffectChainFactory
        fun C(Other: UObject): SoundSourceEffectChainFactory
        fun C(Other: Any): SoundSourceEffectChainFactory
    }
}

external open class SoundSubmixEffectFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var SoundEffectSubmixPresetClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): SoundSubmixEffectFactory
        fun Find(Outer: UObject, ResourceName: String): SoundSubmixEffectFactory
        fun GetDefaultObject(): SoundSubmixEffectFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundSubmixEffectFactory
        fun C(Other: UObject): SoundSubmixEffectFactory
        fun C(Other: Any): SoundSubmixEffectFactory
    }
}

external open class SoundSubmixFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundSubmixFactory
        fun Find(Outer: UObject, ResourceName: String): SoundSubmixFactory
        fun GetDefaultObject(): SoundSubmixFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundSubmixFactory
        fun C(Other: UObject): SoundSubmixFactory
        fun C(Other: Any): SoundSubmixFactory
    }
}

external open class SoundfieldSubmixFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundfieldSubmixFactory
        fun Find(Outer: UObject, ResourceName: String): SoundfieldSubmixFactory
        fun GetDefaultObject(): SoundfieldSubmixFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundfieldSubmixFactory
        fun C(Other: UObject): SoundfieldSubmixFactory
        fun C(Other: Any): SoundfieldSubmixFactory
    }
}

external open class EndpointSubmixFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EndpointSubmixFactory
        fun Find(Outer: UObject, ResourceName: String): EndpointSubmixFactory
        fun GetDefaultObject(): EndpointSubmixFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EndpointSubmixFactory
        fun C(Other: UObject): EndpointSubmixFactory
        fun C(Other: Any): EndpointSubmixFactory
    }
}

external open class SoundfieldEndpointSubmixFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundfieldEndpointSubmixFactory
        fun Find(Outer: UObject, ResourceName: String): SoundfieldEndpointSubmixFactory
        fun GetDefaultObject(): SoundfieldEndpointSubmixFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundfieldEndpointSubmixFactory
        fun C(Other: UObject): SoundfieldEndpointSubmixFactory
        fun C(Other: Any): SoundfieldEndpointSubmixFactory
    }
}

external open class SoundSubmixGraph : EdGraph {
    constructor()
    constructor(Outer: UObject)
    open var RootSoundSubmix: SoundSubmixBase
    open var StaleRoots: Array<SoundSubmixBase>

    companion object {
        fun Load(ResourceName: String): SoundSubmixGraph
        fun Find(Outer: UObject, ResourceName: String): SoundSubmixGraph
        fun GetDefaultObject(): SoundSubmixGraph
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundSubmixGraph
        fun C(Other: UObject): SoundSubmixGraph
        fun C(Other: Any): SoundSubmixGraph
    }
}

external open class SoundSubmixGraphNode : EdGraphNode {
    constructor()
    constructor(Outer: UObject)
    open var SoundSubmix: SoundSubmixBase

    companion object {
        fun Load(ResourceName: String): SoundSubmixGraphNode
        fun Find(Outer: UObject, ResourceName: String): SoundSubmixGraphNode
        fun GetDefaultObject(): SoundSubmixGraphNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundSubmixGraphNode
        fun C(Other: UObject): SoundSubmixGraphNode
        fun C(Other: Any): SoundSubmixGraphNode
    }
}

external open class SoundSubmixGraphSchema : EdGraphSchema {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundSubmixGraphSchema
        fun Find(Outer: UObject, ResourceName: String): SoundSubmixGraphSchema
        fun GetDefaultObject(): SoundSubmixGraphSchema
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundSubmixGraphSchema
        fun C(Other: UObject): SoundSubmixGraphSchema
        fun C(Other: Any): SoundSubmixGraphSchema
    }
}

external interface `T$723` {
    var Times: Array<Number>
    var Values: Array<Vector>
}

external interface `T$724` {
    var MarkerNames: Array<String>
}

external interface `T$725` {
    var Times: Array<Number>
    var Values: Array<Transform>
}

external interface `T$726` {
    var ScaleData: Array<Vector>
}

external interface `T$727` {
    var RotationData: Array<Quat>
}

external interface `T$728` {
    var PositionData: Array<Vector>
}

external interface `T$729` {
    var PositionKeys: Array<Vector>
    var RotationKeys: Array<Quat>
    var ScalingKeys: Array<Vector>
}

external interface `T$730` {
    var Times: Array<Number>
    var Values: Array<Number>
}

external interface `T$731` {
    var Poses: Array<Transform>
}

external interface `T$732` {
    var Poses: Array<Transform>
}

external interface `T$733` {
    var TrackNames: Array<String>
}

external interface `T$734` {
    var Markers: Array<AnimSyncMarker>
}

external interface `T$735` {
    var Markers: Array<AnimSyncMarker>
}

external interface `T$736` {
    var TrackNames: Array<String>
}

external interface `T$737` {
    var Events: Array<AnimNotifyEvent>
}

external interface `T$738` {
    var NotifyEvents: Array<AnimNotifyEvent>
}

external interface `T$739` {
    var EventNames: Array<String>
}

external interface `T$740` {
    var CurveNames: Array<String>
}

external interface `T$741` {
    var BonePath: Array<String>
}

external open class AnimationBlueprintLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimationBlueprintLibrary
        fun Find(Outer: UObject, ResourceName: String): AnimationBlueprintLibrary
        fun GetDefaultObject(): AnimationBlueprintLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationBlueprintLibrary
        fun SetRootMotionLockType(AnimationSequence: AnimSequence, RootMotionLockType: String /* "RefPose" | "AnimFirstFrame" | "Zero" | "ERootMotionRootLock_MAX" */)
        fun SetRootMotionEnabled(AnimationSequence: AnimSequence, bEnabled: Boolean)
        fun SetRateScale(AnimationSequence: AnimSequence, RateScale: Number)
        fun SetIsRootMotionLockForced(AnimationSequence: AnimSequence, bForced: Boolean)
        fun SetCurveCompressionSettings(AnimationSequence: AnimSequence, CompressionSettings: AnimCurveCompressionSettings)
        fun SetBoneCompressionSettings(AnimationSequence: AnimSequence, CompressionSettings: AnimBoneCompressionSettings)
        fun SetAnimationInterpolationType(AnimationSequence: AnimSequence, InterpolationType: String /* "Linear" | "Step" | "EAnimInterpolationType_MAX" */)
        fun SetAdditiveBasePoseType(AnimationSequence: AnimSequence, AdditiveBasePoseType: String /* "ABPT_None" | "ABPT_RefPose" | "ABPT_AnimScaled" | "ABPT_AnimFrame" | "ABPT_MAX" */)
        fun SetAdditiveAnimationType(AnimationSequence: AnimSequence, AdditiveAnimationType: String /* "AAT_None" | "AAT_LocalSpaceBase" | "AAT_RotationOffsetMeshSpace" | "AAT_MAX" */)
        fun RemoveVirtualBones(AnimationSequence: AnimSequence, VirtualBoneNames: Array<String>)
        fun RemoveVirtualBone(AnimationSequence: AnimSequence, VirtualBoneName: String)
        fun RemoveMetaDataOfClass(AnimationSequence: AnimSequence, MetaDataClass: UnrealEngineClass)
        fun RemoveMetaData(AnimationSequence: AnimSequence, MetaDataObject: AnimMetaData)
        fun RemoveCurve(AnimationSequence: AnimSequence, CurveName: String, bRemoveNameFromSkeleton: Boolean)
        fun RemoveBoneAnimation(AnimationSequence: AnimSequence, BoneName: String, bIncludeChildren: Boolean, bFinalize: Boolean)
        fun RemoveAnimationSyncMarkersByTrack(AnimationSequence: AnimSequence, NotifyTrackName: String): Number
        fun RemoveAnimationSyncMarkersByName(AnimationSequence: AnimSequence, MarkerName: String): Number
        fun RemoveAnimationNotifyTrack(AnimationSequence: AnimSequence, NotifyTrackName: String)
        fun RemoveAnimationNotifyEventsByTrack(AnimationSequence: AnimSequence, NotifyTrackName: String): Number
        fun RemoveAnimationNotifyEventsByName(AnimationSequence: AnimSequence, NotifyName: String): Number
        fun RemoveAllVirtualBones(AnimationSequence: AnimSequence)
        fun RemoveAllMetaData(AnimationSequence: AnimSequence)
        fun RemoveAllCurveData(AnimationSequence: AnimSequence)
        fun RemoveAllBoneAnimation(AnimationSequence: AnimSequence)
        fun RemoveAllAnimationSyncMarkers(AnimationSequence: AnimSequence)
        fun RemoveAllAnimationNotifyTracks(AnimationSequence: AnimSequence)
        fun IsValidTime(AnimationSequence: AnimSequence, Time: Number, IsValid: Boolean = definedExternally): `T$123`
        fun IsValidRawAnimationTrackName(AnimationSequence: AnimSequence, TrackName: String): Boolean
        fun IsValidAnimNotifyTrackName(AnimationSequence: AnimSequence, NotifyTrackName: String): Boolean
        fun IsValidAnimationSyncMarkerName(AnimationSequence: AnimSequence, MarkerName: String): Boolean
        fun IsRootMotionLockForced(AnimationSequence: AnimSequence): Boolean
        fun IsRootMotionEnabled(AnimationSequence: AnimSequence): Boolean
        fun GetVectorKeys(AnimationSequence: AnimSequence, CurveName: String, Times: Array<Number> = definedExternally, Values: Array<Vector> = definedExternally): `T$723`
        fun GetUniqueMarkerNames(AnimationSequence: AnimSequence, MarkerNames: Array<String> = definedExternally): `T$724`
        fun GetTransformationKeys(AnimationSequence: AnimSequence, CurveName: String, Times: Array<Number> = definedExternally, Values: Array<Transform> = definedExternally): `T$725`
        fun GetTimeAtFrame(AnimationSequence: AnimSequence, Frame: Number, Time: Number = definedExternally): `T$119`
        fun GetSequenceLength(AnimationSequence: AnimSequence, Length: Number = definedExternally): `T$118`
        fun GetRootMotionLockType(AnimationSequence: AnimSequence, LockType: String /* "RefPose" | "AnimFirstFrame" | "Zero" | "ERootMotionRootLock_MAX" */ = definedExternally): `T$117`
        fun GetRawTrackScaleData(AnimationSequence: AnimSequence, TrackName: String, ScaleData: Array<Vector> = definedExternally): `T$726`
        fun GetRawTrackRotationData(AnimationSequence: AnimSequence, TrackName: String, RotationData: Array<Quat> = definedExternally): `T$727`
        fun GetRawTrackPositionData(AnimationSequence: AnimSequence, TrackName: String, PositionData: Array<Vector> = definedExternally): `T$728`
        fun GetRawTrackData(AnimationSequence: AnimSequence, TrackName: String, PositionKeys: Array<Vector> = definedExternally, RotationKeys: Array<Quat> = definedExternally, ScalingKeys: Array<Vector> = definedExternally): `T$729`
        fun GetRateScale(AnimationSequence: AnimSequence, RateScale: Number = definedExternally): `T$112`
        fun GetNumFrames(AnimationSequence: AnimSequence, NumFrames: Number = definedExternally): `T$111`
        fun GetMetaDataOfClass(AnimationSequence: AnimSequence, MetaDataClass: UnrealEngineClass, MetaDataOfClass: Array<AnimMetaData>)
        fun GetMetaData(AnimationSequence: AnimSequence, MetaData: Array<AnimMetaData>)
        fun GetFrameAtTime(AnimationSequence: AnimSequence, Time: Number, Frame: Number = definedExternally): `T$110`
        fun GetFloatKeys(AnimationSequence: AnimSequence, CurveName: String, Times: Array<Number> = definedExternally, Values: Array<Number> = definedExternally): `T$730`
        fun GetCurveCompressionSettings(AnimationSequence: AnimSequence, CompressionSettings: AnimCurveCompressionSettings = definedExternally): `T$108`
        fun GetBonePosesForTime(AnimationSequence: AnimSequence, BoneNames: Array<String>, Time: Number, bExtractRootMotion: Boolean, Poses: Array<Transform> = definedExternally, PreviewMesh: SkeletalMesh = definedExternally): `T$731`
        fun GetBonePosesForFrame(AnimationSequence: AnimSequence, BoneNames: Array<String>, Frame: Number, bExtractRootMotion: Boolean, Poses: Array<Transform> = definedExternally, PreviewMesh: SkeletalMesh = definedExternally): `T$732`
        fun GetBonePoseForTime(AnimationSequence: AnimSequence, BoneName: String, Time: Number, bExtractRootMotion: Boolean, Pose: Transform = definedExternally): `T$105`
        fun GetBonePoseForFrame(AnimationSequence: AnimSequence, BoneName: String, Frame: Number, bExtractRootMotion: Boolean, Pose: Transform = definedExternally): `T$105`
        fun GetBoneCompressionSettings(AnimationSequence: AnimSequence, CompressionSettings: AnimBoneCompressionSettings = definedExternally): `T$104`
        fun GetAnimNotifyEventTriggerTime(NotifyEvent: AnimNotifyEvent): Number
        fun GetAnimationTrackNames(AnimationSequence: AnimSequence, TrackNames: Array<String> = definedExternally): `T$733`
        fun GetAnimationSyncMarkersForTrack(AnimationSequence: AnimSequence, NotifyTrackName: String, Markers: Array<AnimSyncMarker> = definedExternally): `T$734`
        fun GetAnimationSyncMarkers(AnimationSequence: AnimSequence, Markers: Array<AnimSyncMarker> = definedExternally): `T$735`
        fun GetAnimationNotifyTrackNames(AnimationSequence: AnimSequence, TrackNames: Array<String> = definedExternally): `T$736`
        fun GetAnimationNotifyEventsForTrack(AnimationSequence: AnimSequence, NotifyTrackName: String, Events: Array<AnimNotifyEvent> = definedExternally): `T$737`
        fun GetAnimationNotifyEvents(AnimationSequence: AnimSequence, NotifyEvents: Array<AnimNotifyEvent> = definedExternally): `T$738`
        fun GetAnimationNotifyEventNames(AnimationSequence: AnimSequence, EventNames: Array<String> = definedExternally): `T$739`
        fun GetAnimationInterpolationType(AnimationSequence: AnimSequence, InterpolationType: String /* "Linear" | "Step" | "EAnimInterpolationType_MAX" */ = definedExternally): `T$96`
        fun GetAnimationCurveNames(AnimationSequence: AnimSequence, CurveType: String /* "RCT_Float" | "RCT_Vector" | "RCT_Transform" | "RCT_MAX" */, CurveNames: Array<String> = definedExternally): `T$740`
        fun GetAdditiveBasePoseType(AnimationSequence: AnimSequence, AdditiveBasePoseType: String /* "ABPT_None" | "ABPT_RefPose" | "ABPT_AnimScaled" | "ABPT_AnimFrame" | "ABPT_MAX" */ = definedExternally): `T$94`
        fun GetAdditiveAnimationType(AnimationSequence: AnimSequence, AdditiveAnimationType: String /* "AAT_None" | "AAT_LocalSpaceBase" | "AAT_RotationOffsetMeshSpace" | "AAT_MAX" */ = definedExternally): `T$93`
        fun FindBonePathToRoot(AnimationSequence: AnimSequence, BoneName: String, BonePath: Array<String> = definedExternally): `T$741`
        fun FinalizeBoneAnimation(AnimationSequence: AnimSequence)
        fun DoesCurveExist(AnimationSequence: AnimSequence, CurveName: String, CurveType: String /* "RCT_Float" | "RCT_Vector" | "RCT_Transform" | "RCT_MAX" */): Boolean
        fun DoesBoneNameExist(AnimationSequence: AnimSequence, BoneName: String, bExists: Boolean = definedExternally): `T$91`
        fun CopyAnimNotifiesFromSequence(SrcAnimSequence: AnimSequence, DestAnimSequence: AnimSequence)
        fun ContainsMetaDataOfClass(AnimationSequence: AnimSequence, MetaDataClass: UnrealEngineClass): Boolean
        fun AddVirtualBone(AnimationSequence: AnimSequence, SourceBoneName: String, TargetBoneName: String, VirtualBoneName: String = definedExternally): `T$90`
        fun AddVectorCurveKeys(AnimationSequence: AnimSequence, CurveName: String, Times: Array<Number>, Vectors: Array<Vector>)
        fun AddVectorCurveKey(AnimationSequence: AnimSequence, CurveName: String, Time: Number, Vector: Vector)
        fun AddTransformationCurveKeys(AnimationSequence: AnimSequence, CurveName: String, Times: Array<Number>, Transforms: Array<Transform>)
        fun AddTransformationCurveKey(AnimationSequence: AnimSequence, CurveName: String, Time: Number, Transform: Transform)
        fun AddMetaDataObject(AnimationSequence: AnimSequence, MetaDataObject: AnimMetaData)
        fun AddMetaData(AnimationSequence: AnimSequence, MetaDataClass: UnrealEngineClass, MetaDataInstance: AnimMetaData)
        fun AddFloatCurveKeys(AnimationSequence: AnimSequence, CurveName: String, Times: Array<Number>, Values: Array<Number>)
        fun AddFloatCurveKey(AnimationSequence: AnimSequence, CurveName: String, Time: Number, Value: Number)
        fun AddCurve(AnimationSequence: AnimSequence, CurveName: String, CurveType: String /* "RCT_Float" | "RCT_Vector" | "RCT_Transform" | "RCT_MAX" */, bMetaDataCurve: Boolean)
        fun AddAnimationSyncMarker(AnimationSequence: AnimSequence, MarkerName: String, Time: Number, NotifyTrackName: String)
        fun AddAnimationNotifyTrack(AnimationSequence: AnimSequence, NotifyTrackName: String, TrackColor: LinearColor)
        fun AddAnimationNotifyStateEventObject(AnimationSequence: AnimSequence, StartTime: Number, Duration: Number, NotifyState: AnimNotifyState, NotifyTrackName: String)
        fun AddAnimationNotifyStateEvent(AnimationSequence: AnimSequence, NotifyTrackName: String, StartTime: Number, Duration: Number, NotifyStateClass: UnrealEngineClass): AnimNotifyState
        fun AddAnimationNotifyEventObject(AnimationSequence: AnimSequence, StartTime: Number, Notify: AnimNotify, NotifyTrackName: String)
        fun AddAnimationNotifyEvent(AnimationSequence: AnimSequence, NotifyTrackName: String, StartTime: Number, NotifyClass: UnrealEngineClass): AnimNotify
        fun C(Other: UObject): AnimationBlueprintLibrary
        fun C(Other: Any): AnimationBlueprintLibrary
    }
}

external open class AnimationModifier : UObject {
    constructor()
    constructor(Outer: UObject)
    open var RevisionGuid: Guid
    open var AppliedGuid: Guid
    open var StoredNativeRevision: Number
    open var PreviouslyAppliedModifier: AnimationModifier
    open fun OnRevert(AnimationSequence: AnimSequence)
    open fun OnApply(AnimationSequence: AnimSequence)

    companion object {
        fun Load(ResourceName: String): AnimationModifier
        fun Find(Outer: UObject, ResourceName: String): AnimationModifier
        fun GetDefaultObject(): AnimationModifier
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationModifier
        fun C(Other: UObject): AnimationModifier
        fun C(Other: Any): AnimationModifier
    }
}

external open class AnimationModifiersAssetUserData : AssetUserData {
    constructor()
    constructor(Outer: UObject)
    open var AnimationModifierInstances: Array<AnimationModifier>

    companion object {
        fun Load(ResourceName: String): AnimationModifiersAssetUserData
        fun Find(Outer: UObject, ResourceName: String): AnimationModifiersAssetUserData
        fun GetDefaultObject(): AnimationModifiersAssetUserData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationModifiersAssetUserData
        fun C(Other: UObject): AnimationModifiersAssetUserData
        fun C(Other: Any): AnimationModifiersAssetUserData
    }
}

external open class GameplayDebuggerNetPack {
    open fun clone(): GameplayDebuggerNetPack

    companion object {
        fun C(Other: UObject): GameplayDebuggerNetPack
        fun C(Other: Any): GameplayDebuggerNetPack
    }
}

external open class GameplayDebuggerDebugActor {
    open var Actor: Actor
    open var ActorName: String
    open var SyncCounter: Number
    open fun clone(): GameplayDebuggerDebugActor

    companion object {
        fun C(Other: UObject): GameplayDebuggerDebugActor
        fun C(Other: Any): GameplayDebuggerDebugActor
    }
}

external open class GameplayDebuggerVisLogSync {
    open var DeviceIDs: String
    open fun clone(): GameplayDebuggerVisLogSync

    companion object {
        fun C(Other: UObject): GameplayDebuggerVisLogSync
        fun C(Other: Any): GameplayDebuggerVisLogSync
    }
}

external open class GameplayDebuggerRenderingComponent : PrimitiveComponent {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GameplayDebuggerRenderingComponent
        fun Find(Outer: UObject, ResourceName: String): GameplayDebuggerRenderingComponent
        fun GetDefaultObject(): GameplayDebuggerRenderingComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayDebuggerRenderingComponent
        fun C(Other: UObject): GameplayDebuggerRenderingComponent
        fun C(Other: Any): GameplayDebuggerRenderingComponent
    }
}

external open class GameplayDebuggerCategoryReplicator(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var OwnerPC: PlayerController
    open var bIsEnabled: Boolean
    open var ReplicatedData: GameplayDebuggerNetPack
    open var DebugActor: GameplayDebuggerDebugActor
    open var VisLogSync: GameplayDebuggerVisLogSync
    open var RenderingComp: GameplayDebuggerRenderingComponent
    open fun ServerSetEnabled(bEnable: Boolean)
    open fun ServerSetDebugActor(Actor: Actor, bSelectInEditor: Boolean)
    open fun ServerSetCategoryEnabled(CategoryId: Number, bEnable: Boolean)
    open fun ServerSendExtensionInputEvent(ExtensionId: Number, HandlerId: Number)
    open fun ServerSendCategoryInputEvent(CategoryId: Number, HandlerId: Number)

    companion object {
        fun GetDefaultObject(): GameplayDebuggerCategoryReplicator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayDebuggerCategoryReplicator
        fun C(Other: UObject): GameplayDebuggerCategoryReplicator
        fun C(Other: Any): GameplayDebuggerCategoryReplicator
    }
}

external object EGameplayDebuggerOverrideMode {
    var Enable: String /* "Enable" */
    var Disable: String /* "Disable" */
    var UseDefault: String /* "UseDefault" */
    var EGameplayDebuggerOverrideMode_MAX: String /* "EGameplayDebuggerOverrideMode_MAX" */
}

external open class GameplayDebuggerInputConfig {
    open var ConfigName: String
    open var Key: Key
    open var bModShift: Boolean
    open var bModCtrl: Boolean
    open var bModAlt: Boolean
    open var bModCmd: Boolean
    open fun clone(): GameplayDebuggerInputConfig

    companion object {
        fun C(Other: UObject): GameplayDebuggerInputConfig
        fun C(Other: Any): GameplayDebuggerInputConfig
    }
}

external open class GameplayDebuggerCategoryConfig {
    open var CategoryName: String
    open var SlotIdx: Number
    open var ActiveInGame: String /* "Enable" | "Disable" | "UseDefault" | "EGameplayDebuggerOverrideMode_MAX" */
    open var ActiveInSimulate: String /* "Enable" | "Disable" | "UseDefault" | "EGameplayDebuggerOverrideMode_MAX" */
    open var Hidden: String /* "Enable" | "Disable" | "UseDefault" | "EGameplayDebuggerOverrideMode_MAX" */
    open var bOverrideSlotIdx: Boolean
    open var InputHandlers: Array<GameplayDebuggerInputConfig>
    open fun clone(): GameplayDebuggerCategoryConfig

    companion object {
        fun C(Other: UObject): GameplayDebuggerCategoryConfig
        fun C(Other: Any): GameplayDebuggerCategoryConfig
    }
}

external open class GameplayDebuggerExtensionConfig {
    open var ExtensionName: String
    open var UseExtension: String /* "Enable" | "Disable" | "UseDefault" | "EGameplayDebuggerOverrideMode_MAX" */
    open var InputHandlers: Array<GameplayDebuggerInputConfig>
    open fun clone(): GameplayDebuggerExtensionConfig

    companion object {
        fun C(Other: UObject): GameplayDebuggerExtensionConfig
        fun C(Other: Any): GameplayDebuggerExtensionConfig
    }
}

external open class GameplayDebuggerConfig : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ActivationKey: Key
    open var CategoryRowNextKey: Key
    open var CategoryRowPrevKey: Key
    open var CategorySlot0: Key
    open var CategorySlot1: Key
    open var CategorySlot2: Key
    open var CategorySlot3: Key
    open var CategorySlot4: Key
    open var CategorySlot5: Key
    open var CategorySlot6: Key
    open var CategorySlot7: Key
    open var CategorySlot8: Key
    open var CategorySlot9: Key
    open var DebugCanvasPaddingLeft: Number
    open var DebugCanvasPaddingRight: Number
    open var DebugCanvasPaddingTop: Number
    open var DebugCanvasPaddingBottom: Number
    open var bDebugCanvasEnableTextShadow: Boolean
    open var Categories: Array<GameplayDebuggerCategoryConfig>
    open var Extensions: Array<GameplayDebuggerExtensionConfig>

    companion object {
        fun Load(ResourceName: String): GameplayDebuggerConfig
        fun Find(Outer: UObject, ResourceName: String): GameplayDebuggerConfig
        fun GetDefaultObject(): GameplayDebuggerConfig
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayDebuggerConfig
        fun C(Other: UObject): GameplayDebuggerConfig
        fun C(Other: Any): GameplayDebuggerConfig
    }
}

external open class GameplayDebuggerPlayerData {
    open var Controller: GameplayDebuggerLocalController
    open var InputComponent: InputComponent
    open var Replicator: GameplayDebuggerCategoryReplicator
    open fun clone(): GameplayDebuggerPlayerData

    companion object {
        fun C(Other: UObject): GameplayDebuggerPlayerData
        fun C(Other: Any): GameplayDebuggerPlayerData
    }
}

external open class GameplayDebuggerPlayerManager(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var PlayerData: Array<GameplayDebuggerPlayerData>
    open var PendingRegistrations: Array<GameplayDebuggerCategoryReplicator>

    companion object {
        fun GetDefaultObject(): GameplayDebuggerPlayerManager
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayDebuggerPlayerManager
        fun C(Other: UObject): GameplayDebuggerPlayerManager
        fun C(Other: Any): GameplayDebuggerPlayerManager
    }
}

external open class GameplayDebuggerLocalController : UObject {
    constructor()
    constructor(Outer: UObject)
    open var CachedReplicator: GameplayDebuggerCategoryReplicator
    open var CachedPlayerManager: GameplayDebuggerPlayerManager
    open var DebugActorCandidate: Actor

    companion object {
        fun Load(ResourceName: String): GameplayDebuggerLocalController
        fun Find(Outer: UObject, ResourceName: String): GameplayDebuggerLocalController
        fun GetDefaultObject(): GameplayDebuggerLocalController
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayDebuggerLocalController
        fun C(Other: UObject): GameplayDebuggerLocalController
        fun C(Other: Any): GameplayDebuggerLocalController
    }
}

external open class GameplayTask_ClaimResource : GameplayTask {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GameplayTask_ClaimResource
        fun Find(Outer: UObject, ResourceName: String): GameplayTask_ClaimResource
        fun GetDefaultObject(): GameplayTask_ClaimResource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayTask_ClaimResource
        fun C(Other: UObject): GameplayTask_ClaimResource
        fun C(Other: Any): GameplayTask_ClaimResource
    }
}

external interface `T$742` {
    var SpawnedActor: Actor
    var `$`: Boolean
}

external open class GameplayTask_SpawnActor : GameplayTask {
    constructor()
    constructor(Outer: UObject)
    open var Success: UnrealEngineMulticastDelegate<(SpawnedActor: Actor) -> Unit>
    open var DidNotSpawn: UnrealEngineMulticastDelegate<(SpawnedActor: Actor) -> Unit>
    open var ClassToSpawn: UnrealEngineClass
    open fun FinishSpawningActor(WorldContextObject: UObject, SpawnedActor: Actor)
    open fun BeginSpawningActor(WorldContextObject: UObject, SpawnedActor: Actor = definedExternally): `T$742`

    companion object {
        fun Load(ResourceName: String): GameplayTask_SpawnActor
        fun Find(Outer: UObject, ResourceName: String): GameplayTask_SpawnActor
        fun GetDefaultObject(): GameplayTask_SpawnActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayTask_SpawnActor
        fun C(Other: UObject): GameplayTask_SpawnActor
        fun C(Other: Any): GameplayTask_SpawnActor
    }
}

external open class GameplayTask_TimeLimitedExecution : GameplayTask {
    constructor()
    constructor(Outer: UObject)
    open var OnFinished: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnTimeExpired: UnrealEngineMulticastDelegate<() -> Unit>

    companion object {
        fun Load(ResourceName: String): GameplayTask_TimeLimitedExecution
        fun Find(Outer: UObject, ResourceName: String): GameplayTask_TimeLimitedExecution
        fun GetDefaultObject(): GameplayTask_TimeLimitedExecution
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayTask_TimeLimitedExecution
        fun C(Other: UObject): GameplayTask_TimeLimitedExecution
        fun C(Other: Any): GameplayTask_TimeLimitedExecution
    }
}

external open class GameplayTask_WaitDelay : GameplayTask {
    constructor()
    constructor(Outer: UObject)
    open var OnFinish: UnrealEngineMulticastDelegate<() -> Unit>

    companion object {
        fun Load(ResourceName: String): GameplayTask_WaitDelay
        fun Find(Outer: UObject, ResourceName: String): GameplayTask_WaitDelay
        fun GetDefaultObject(): GameplayTask_WaitDelay
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayTask_WaitDelay
        fun C(Other: UObject): GameplayTask_WaitDelay
        fun C(Other: Any): GameplayTask_WaitDelay
    }
}

external open class GameplayTaskOwnerInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GameplayTaskOwnerInterface
        fun Find(Outer: UObject, ResourceName: String): GameplayTaskOwnerInterface
        fun GetDefaultObject(): GameplayTaskOwnerInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayTaskOwnerInterface
        fun C(Other: UObject): GameplayTaskOwnerInterface
        fun C(Other: Any): GameplayTaskOwnerInterface
    }
}

external open class AIBlueprintHelperLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AIBlueprintHelperLibrary
        fun Find(Outer: UObject, ResourceName: String): AIBlueprintHelperLibrary
        fun GetDefaultObject(): AIBlueprintHelperLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AIBlueprintHelperLibrary
        fun UnlockAIResourcesWithAnimation(AnimInstance: AnimInstance, bUnlockMovement: Boolean, UnlockAILogic: Boolean)
        fun SpawnAIFromClass(WorldContextObject: UObject, PawnClass: UnrealEngineClass, BehaviorTree: BehaviorTree, Location: Vector, Rotation: Rotator, bNoCollisionFail: Boolean, Owner: Actor): Pawn
        fun SimpleMoveToLocation(Controller: Controller, Goal: Vector)
        fun SimpleMoveToActor(Controller: Controller, Goal: Actor)
        fun SendAIMessage(Target: Pawn, Message: String, MessageSource: UObject, bSuccess: Boolean)
        fun LockAIResourcesWithAnimation(AnimInstance: AnimInstance, bLockMovement: Boolean, LockAILogic: Boolean)
        fun IsValidAIRotation(Rotation: Rotator): Boolean
        fun IsValidAILocation(Location: Vector): Boolean
        fun IsValidAIDirection(DirectionVector: Vector): Boolean
        fun GetNextNavLinkIndex(Controller: Controller): Number
        fun GetCurrentPathPoints(Controller: Controller): Array<Vector>
        fun GetCurrentPathIndex(Controller: Controller): Number
        fun GetCurrentPath(Controller: Controller): NavigationPath
        fun GetBlackboard(Target: Actor): BlackboardComponent
        fun GetAIController(ControlledActor: Actor): AIController
        fun CreateMoveToProxyObject(WorldContextObject: UObject, Pawn: Pawn, Destination: Vector, TargetActor: Actor, AcceptanceRadius: Number, bStopOnOverlap: Boolean): AIAsyncTaskBlueprintProxy
        fun C(Other: UObject): AIBlueprintHelperLibrary
        fun C(Other: Any): AIBlueprintHelperLibrary
    }
}

external open class AIDataProvider_QueryParams : AIDataProvider {
    constructor()
    constructor(Outer: UObject)
    open var ParamName: String
    open var FloatValue: Number
    open var IntValue: Number
    open var BoolValue: Boolean

    companion object {
        fun Load(ResourceName: String): AIDataProvider_QueryParams
        fun Find(Outer: UObject, ResourceName: String): AIDataProvider_QueryParams
        fun GetDefaultObject(): AIDataProvider_QueryParams
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AIDataProvider_QueryParams
        fun C(Other: UObject): AIDataProvider_QueryParams
        fun C(Other: Any): AIDataProvider_QueryParams
    }
}

external open class AIDataProvider_Random : AIDataProvider_QueryParams {
    constructor()
    constructor(Outer: UObject)
    open var Min: Number
    open var Max: Number
    open var bInteger: Boolean

    companion object {
        fun Load(ResourceName: String): AIDataProvider_Random
        fun Find(Outer: UObject, ResourceName: String): AIDataProvider_Random
        fun GetDefaultObject(): AIDataProvider_Random
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AIDataProvider_Random
        fun C(Other: UObject): AIDataProvider_Random
        fun C(Other: Any): AIDataProvider_Random
    }
}

external open class AIPerceptionListenerInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AIPerceptionListenerInterface
        fun Find(Outer: UObject, ResourceName: String): AIPerceptionListenerInterface
        fun GetDefaultObject(): AIPerceptionListenerInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AIPerceptionListenerInterface
        fun C(Other: UObject): AIPerceptionListenerInterface
        fun C(Other: Any): AIPerceptionListenerInterface
    }
}

external open class AIPerceptionStimuliSourceComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var bAutoRegisterAsSource: Boolean
    open var RegisterAsSourceForSenses: Array<UnrealEngineClass>
    open fun UnregisterFromSense(SenseClass: UnrealEngineClass)
    open fun UnregisterFromPerceptionSystem()
    open fun RegisterWithPerceptionSystem()
    open fun RegisterForSense(SenseClass: UnrealEngineClass)

    companion object {
        fun Load(ResourceName: String): AIPerceptionStimuliSourceComponent
        fun Find(Outer: UObject, ResourceName: String): AIPerceptionStimuliSourceComponent
        fun GetDefaultObject(): AIPerceptionStimuliSourceComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AIPerceptionStimuliSourceComponent
        fun C(Other: UObject): AIPerceptionStimuliSourceComponent
        fun C(Other: Any): AIPerceptionStimuliSourceComponent
    }
}

external open class AIResourceInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AIResourceInterface
        fun Find(Outer: UObject, ResourceName: String): AIResourceInterface
        fun GetDefaultObject(): AIResourceInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AIResourceInterface
        fun C(Other: UObject): AIResourceInterface
        fun C(Other: Any): AIResourceInterface
    }
}

external open class AIResource_Movement : GameplayTaskResource {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AIResource_Movement
        fun Find(Outer: UObject, ResourceName: String): AIResource_Movement
        fun GetDefaultObject(): AIResource_Movement
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AIResource_Movement
        fun C(Other: UObject): AIResource_Movement
        fun C(Other: Any): AIResource_Movement
    }
}

external open class AIResource_Logic : GameplayTaskResource {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AIResource_Logic
        fun Find(Outer: UObject, ResourceName: String): AIResource_Logic
        fun GetDefaultObject(): AIResource_Logic
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AIResource_Logic
        fun C(Other: UObject): AIResource_Logic
        fun C(Other: Any): AIResource_Logic
    }
}

external interface `T$743` {
    var ListenerComponents: Array<AIPerceptionComponent>
}

external interface `T$744` {
    var ListenerActors: Array<Actor>
}

external open class AISense_Blueprint : AISense {
    constructor()
    constructor(Outer: UObject)
    open var ListenerDataType: UnrealEngineClass
    open var ListenerContainer: Array<AIPerceptionComponent>
    open var UnprocessedEvents: Array<AISenseEvent>
    open fun OnUpdate(EventsToProcess: Array<AISenseEvent>): Number
    open fun OnListenerUpdated(ActorListener: Actor, PerceptionComponent: AIPerceptionComponent)
    open fun OnListenerUnregistered(ActorListener: Actor, PerceptionComponent: AIPerceptionComponent)
    open fun OnListenerRegistered(ActorListener: Actor, PerceptionComponent: AIPerceptionComponent)
    open fun OnNewPawn(NewPawn: Pawn)
    open fun GetAllListenerComponents(ListenerComponents: Array<AIPerceptionComponent> = definedExternally): `T$743`
    open fun GetAllListenerActors(ListenerActors: Array<Actor> = definedExternally): `T$744`

    companion object {
        fun Load(ResourceName: String): AISense_Blueprint
        fun Find(Outer: UObject, ResourceName: String): AISense_Blueprint
        fun GetDefaultObject(): AISense_Blueprint
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISense_Blueprint
        fun C(Other: UObject): AISense_Blueprint
        fun C(Other: Any): AISense_Blueprint
    }
}

external open class AIDamageEvent {
    open var Amount: Number
    open var Location: Vector
    open var HitLocation: Vector
    open var DamagedActor: Actor
    open var Instigator: Actor
    open var Tag: String
    open fun clone(): AIDamageEvent

    companion object {
        fun C(Other: UObject): AIDamageEvent
        fun C(Other: Any): AIDamageEvent
    }
}

external open class AISense_Damage : AISense {
    constructor()
    constructor(Outer: UObject)
    open var RegisteredEvents: Array<AIDamageEvent>

    companion object {
        fun Load(ResourceName: String): AISense_Damage
        fun Find(Outer: UObject, ResourceName: String): AISense_Damage
        fun GetDefaultObject(): AISense_Damage
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISense_Damage
        fun ReportDamageEvent(WorldContextObject: UObject, DamagedActor: Actor, Instigator: Actor, DamageAmount: Number, EventLocation: Vector, HitLocation: Vector, Tag: String)
        fun C(Other: UObject): AISense_Damage
        fun C(Other: Any): AISense_Damage
    }
}

external open class AINoiseEvent {
    open var NoiseLocation: Vector
    open var Loudness: Number
    open var MaxRange: Number
    open var Instigator: Actor
    open var Tag: String
    open fun clone(): AINoiseEvent

    companion object {
        fun C(Other: UObject): AINoiseEvent
        fun C(Other: Any): AINoiseEvent
    }
}

external open class AISense_Hearing : AISense {
    constructor()
    constructor(Outer: UObject)
    open var NoiseEvents: Array<AINoiseEvent>
    open var SpeedOfSoundSq: Number

    companion object {
        fun Load(ResourceName: String): AISense_Hearing
        fun Find(Outer: UObject, ResourceName: String): AISense_Hearing
        fun GetDefaultObject(): AISense_Hearing
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISense_Hearing
        fun ReportNoiseEvent(WorldContextObject: UObject, NoiseLocation: Vector, Loudness: Number, Instigator: Actor, MaxRange: Number, Tag: String)
        fun C(Other: UObject): AISense_Hearing
        fun C(Other: Any): AISense_Hearing
    }
}

external open class AIPredictionEvent {
    open var Requestor: Actor
    open var PredictedActor: Actor
    open fun clone(): AIPredictionEvent

    companion object {
        fun C(Other: UObject): AIPredictionEvent
        fun C(Other: Any): AIPredictionEvent
    }
}

external open class AISense_Prediction : AISense {
    constructor()
    constructor(Outer: UObject)
    open var RegisteredEvents: Array<AIPredictionEvent>

    companion object {
        fun Load(ResourceName: String): AISense_Prediction
        fun Find(Outer: UObject, ResourceName: String): AISense_Prediction
        fun GetDefaultObject(): AISense_Prediction
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISense_Prediction
        fun RequestPawnPredictionEvent(Requestor: Pawn, PredictedActor: Actor, PredictionTime: Number)
        fun RequestControllerPredictionEvent(Requestor: AIController, PredictedActor: Actor, PredictionTime: Number)
        fun C(Other: UObject): AISense_Prediction
        fun C(Other: Any): AISense_Prediction
    }
}

external open class AISense_Sight : AISense {
    constructor()
    constructor(Outer: UObject)
    open var MaxTracesPerTick: Number
    open var MinQueriesPerTimeSliceCheck: Number
    open var MaxTimeSlicePerTick: Any
    open var HighImportanceQueryDistanceThreshold: Number
    open var MaxQueryImportance: Number
    open var SightLimitQueryImportance: Number

    companion object {
        fun Load(ResourceName: String): AISense_Sight
        fun Find(Outer: UObject, ResourceName: String): AISense_Sight
        fun GetDefaultObject(): AISense_Sight
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISense_Sight
        fun C(Other: UObject): AISense_Sight
        fun C(Other: Any): AISense_Sight
    }
}

external open class AITeamStimulusEvent {
    open var Broadcaster: Actor
    open var Enemy: Actor
    open fun clone(): AITeamStimulusEvent

    companion object {
        fun C(Other: UObject): AITeamStimulusEvent
        fun C(Other: Any): AITeamStimulusEvent
    }
}

external open class AISense_Team : AISense {
    constructor()
    constructor(Outer: UObject)
    open var RegisteredEvents: Array<AITeamStimulusEvent>

    companion object {
        fun Load(ResourceName: String): AISense_Team
        fun Find(Outer: UObject, ResourceName: String): AISense_Team
        fun GetDefaultObject(): AISense_Team
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISense_Team
        fun C(Other: UObject): AISense_Team
        fun C(Other: Any): AISense_Team
    }
}

external open class AITouchEvent {
    open var TouchReceiver: Actor
    open var OtherActor: Actor
    open fun clone(): AITouchEvent

    companion object {
        fun C(Other: UObject): AITouchEvent
        fun C(Other: Any): AITouchEvent
    }
}

external open class AISense_Touch : AISense {
    constructor()
    constructor(Outer: UObject)
    open var RegisteredEvents: Array<AITouchEvent>

    companion object {
        fun Load(ResourceName: String): AISense_Touch
        fun Find(Outer: UObject, ResourceName: String): AISense_Touch
        fun GetDefaultObject(): AISense_Touch
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISense_Touch
        fun C(Other: UObject): AISense_Touch
        fun C(Other: Any): AISense_Touch
    }
}

external open class AISenseBlueprintListener : UserDefinedStruct {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AISenseBlueprintListener
        fun Find(Outer: UObject, ResourceName: String): AISenseBlueprintListener
        fun GetDefaultObject(): AISenseBlueprintListener
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISenseBlueprintListener
        fun C(Other: UObject): AISenseBlueprintListener
        fun C(Other: Any): AISenseBlueprintListener
    }
}

external open class AISenseConfig_Blueprint : AISenseConfig {
    constructor()
    constructor(Outer: UObject)
    open var Implementation: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): AISenseConfig_Blueprint
        fun Find(Outer: UObject, ResourceName: String): AISenseConfig_Blueprint
        fun GetDefaultObject(): AISenseConfig_Blueprint
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISenseConfig_Blueprint
        fun C(Other: UObject): AISenseConfig_Blueprint
        fun C(Other: Any): AISenseConfig_Blueprint
    }
}

external open class AISenseConfig_Damage : AISenseConfig {
    constructor()
    constructor(Outer: UObject)
    open var Implementation: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): AISenseConfig_Damage
        fun Find(Outer: UObject, ResourceName: String): AISenseConfig_Damage
        fun GetDefaultObject(): AISenseConfig_Damage
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISenseConfig_Damage
        fun C(Other: UObject): AISenseConfig_Damage
        fun C(Other: Any): AISenseConfig_Damage
    }
}

external open class AISenseAffiliationFilter {
    open var bDetectEnemies: Boolean
    open var bDetectNeutrals: Boolean
    open var bDetectFriendlies: Boolean
    open fun clone(): AISenseAffiliationFilter

    companion object {
        fun C(Other: UObject): AISenseAffiliationFilter
        fun C(Other: Any): AISenseAffiliationFilter
    }
}

external open class AISenseConfig_Hearing : AISenseConfig {
    constructor()
    constructor(Outer: UObject)
    open var Implementation: UnrealEngineClass
    open var HearingRange: Number
    open var LoSHearingRange: Number
    open var bUseLoSHearing: Boolean
    open var DetectionByAffiliation: AISenseAffiliationFilter

    companion object {
        fun Load(ResourceName: String): AISenseConfig_Hearing
        fun Find(Outer: UObject, ResourceName: String): AISenseConfig_Hearing
        fun GetDefaultObject(): AISenseConfig_Hearing
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISenseConfig_Hearing
        fun C(Other: UObject): AISenseConfig_Hearing
        fun C(Other: Any): AISenseConfig_Hearing
    }
}

external open class AISenseConfig_Prediction : AISenseConfig {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AISenseConfig_Prediction
        fun Find(Outer: UObject, ResourceName: String): AISenseConfig_Prediction
        fun GetDefaultObject(): AISenseConfig_Prediction
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISenseConfig_Prediction
        fun C(Other: UObject): AISenseConfig_Prediction
        fun C(Other: Any): AISenseConfig_Prediction
    }
}

external open class AISenseConfig_Sight : AISenseConfig {
    constructor()
    constructor(Outer: UObject)
    open var Implementation: UnrealEngineClass
    open var SightRadius: Number
    open var LoseSightRadius: Number
    open var PeripheralVisionAngleDegrees: Number
    open var DetectionByAffiliation: AISenseAffiliationFilter
    open var AutoSuccessRangeFromLastSeenLocation: Number
    open var PointOfViewBackwardOffset: Number
    open var NearClippingRadius: Number

    companion object {
        fun Load(ResourceName: String): AISenseConfig_Sight
        fun Find(Outer: UObject, ResourceName: String): AISenseConfig_Sight
        fun GetDefaultObject(): AISenseConfig_Sight
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISenseConfig_Sight
        fun C(Other: UObject): AISenseConfig_Sight
        fun C(Other: Any): AISenseConfig_Sight
    }
}

external open class AISenseConfig_Team : AISenseConfig {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AISenseConfig_Team
        fun Find(Outer: UObject, ResourceName: String): AISenseConfig_Team
        fun GetDefaultObject(): AISenseConfig_Team
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISenseConfig_Team
        fun C(Other: UObject): AISenseConfig_Team
        fun C(Other: Any): AISenseConfig_Team
    }
}

external open class AISenseConfig_Touch : AISenseConfig {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AISenseConfig_Touch
        fun Find(Outer: UObject, ResourceName: String): AISenseConfig_Touch
        fun GetDefaultObject(): AISenseConfig_Touch
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISenseConfig_Touch
        fun C(Other: UObject): AISenseConfig_Touch
        fun C(Other: Any): AISenseConfig_Touch
    }
}

external open class AISenseEvent_Damage : AISenseEvent {
    constructor()
    constructor(Outer: UObject)
    open var Event: AIDamageEvent

    companion object {
        fun Load(ResourceName: String): AISenseEvent_Damage
        fun Find(Outer: UObject, ResourceName: String): AISenseEvent_Damage
        fun GetDefaultObject(): AISenseEvent_Damage
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISenseEvent_Damage
        fun C(Other: UObject): AISenseEvent_Damage
        fun C(Other: Any): AISenseEvent_Damage
    }
}

external open class AISenseEvent_Hearing : AISenseEvent {
    constructor()
    constructor(Outer: UObject)
    open var Event: AINoiseEvent

    companion object {
        fun Load(ResourceName: String): AISenseEvent_Hearing
        fun Find(Outer: UObject, ResourceName: String): AISenseEvent_Hearing
        fun GetDefaultObject(): AISenseEvent_Hearing
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISenseEvent_Hearing
        fun C(Other: UObject): AISenseEvent_Hearing
        fun C(Other: Any): AISenseEvent_Hearing
    }
}

external open class AISightTargetInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AISightTargetInterface
        fun Find(Outer: UObject, ResourceName: String): AISightTargetInterface
        fun GetDefaultObject(): AISightTargetInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISightTargetInterface
        fun C(Other: UObject): AISightTargetInterface
        fun C(Other: Any): AISightTargetInterface
    }
}

external open class AITask : GameplayTask {
    constructor()
    constructor(Outer: UObject)
    open var OwnerController: AIController

    companion object {
        fun Load(ResourceName: String): AITask
        fun Find(Outer: UObject, ResourceName: String): AITask
        fun GetDefaultObject(): AITask
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AITask
        fun C(Other: UObject): AITask
        fun C(Other: Any): AITask
    }
}

external open class AITask_LockLogic : AITask {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AITask_LockLogic
        fun Find(Outer: UObject, ResourceName: String): AITask_LockLogic
        fun GetDefaultObject(): AITask_LockLogic
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AITask_LockLogic
        fun C(Other: UObject): AITask_LockLogic
        fun C(Other: Any): AITask_LockLogic
    }
}

external open class AIMoveRequest {
    open var GoalActor: Actor
    open fun clone(): AIMoveRequest

    companion object {
        fun C(Other: UObject): AIMoveRequest
        fun C(Other: Any): AIMoveRequest
    }
}

external object EAIOptionFlag {
    var Default: String /* "Default" */
    var Enable: String /* "Enable" */
    var Disable: String /* "Disable" */
    var MAX: String /* "MAX" */
}

external open class AITask_MoveTo : AITask {
    constructor()
    constructor(Outer: UObject)
    open var OnRequestFailed: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnMoveFinished: UnrealEngineMulticastDelegate<(Result: String /* "Success" | "Blocked" | "OffPath" | "Aborted" | "Skipped_DEPRECATED" | "Invalid" | "EPathFollowingResult_MAX" */, AIController: AIController) -> Unit>
    open var MoveRequest: AIMoveRequest

    companion object {
        fun Load(ResourceName: String): AITask_MoveTo
        fun Find(Outer: UObject, ResourceName: String): AITask_MoveTo
        fun GetDefaultObject(): AITask_MoveTo
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AITask_MoveTo
        fun MoveToLocationorActor(Controller: AIController, GoalLocation: Vector, GoalActor: Actor, AcceptanceRadius: Number, StopOnOverlap: String /* "Default" | "Enable" | "Disable" | "MAX" */, AcceptPartialPath: String /* "Default" | "Enable" | "Disable" | "MAX" */, bUsePathfinding: Boolean, bLockAILogic: Boolean, bUseContinuosGoalTracking: Boolean, ProjectGoalOnNavigation: String /* "Default" | "Enable" | "Disable" | "MAX" */): AITask_MoveTo
        fun C(Other: UObject): AITask_MoveTo
        fun C(Other: Any): AITask_MoveTo
    }
}

external open class AITask_RunEQS : AITask {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AITask_RunEQS
        fun Find(Outer: UObject, ResourceName: String): AITask_RunEQS
        fun GetDefaultObject(): AITask_RunEQS
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AITask_RunEQS
        fun RunEQS(Controller: AIController, QueryTemplate: EnvQuery): AITask_RunEQS
        fun C(Other: UObject): AITask_RunEQS
        fun C(Other: Any): AITask_RunEQS
    }
}

external open class BehaviorTreeTypes : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BehaviorTreeTypes
        fun Find(Outer: UObject, ResourceName: String): BehaviorTreeTypes
        fun GetDefaultObject(): BehaviorTreeTypes
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BehaviorTreeTypes
        fun C(Other: UObject): BehaviorTreeTypes
        fun C(Other: Any): BehaviorTreeTypes
    }
}

external open class BlackboardAssetProvider : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun GetBlackboardAsset(): BlackboardData

    companion object {
        fun Load(ResourceName: String): BlackboardAssetProvider
        fun Find(Outer: UObject, ResourceName: String): BlackboardAssetProvider
        fun GetDefaultObject(): BlackboardAssetProvider
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlackboardAssetProvider
        fun C(Other: UObject): BlackboardAssetProvider
        fun C(Other: Any): BlackboardAssetProvider
    }
}

external open class BlackboardKeyType_Bool : BlackboardKeyType {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlackboardKeyType_Bool
        fun Find(Outer: UObject, ResourceName: String): BlackboardKeyType_Bool
        fun GetDefaultObject(): BlackboardKeyType_Bool
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlackboardKeyType_Bool
        fun C(Other: UObject): BlackboardKeyType_Bool
        fun C(Other: Any): BlackboardKeyType_Bool
    }
}

external open class BlackboardKeyType_Class : BlackboardKeyType {
    constructor()
    constructor(Outer: UObject)
    open var BaseClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): BlackboardKeyType_Class
        fun Find(Outer: UObject, ResourceName: String): BlackboardKeyType_Class
        fun GetDefaultObject(): BlackboardKeyType_Class
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlackboardKeyType_Class
        fun C(Other: UObject): BlackboardKeyType_Class
        fun C(Other: Any): BlackboardKeyType_Class
    }
}

external open class BlackboardKeyType_Enum : BlackboardKeyType {
    constructor()
    constructor(Outer: UObject)
    open var EnumType: Enum
    open var EnumName: String
    open var bIsEnumNameValid: Boolean

    companion object {
        fun Load(ResourceName: String): BlackboardKeyType_Enum
        fun Find(Outer: UObject, ResourceName: String): BlackboardKeyType_Enum
        fun GetDefaultObject(): BlackboardKeyType_Enum
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlackboardKeyType_Enum
        fun C(Other: UObject): BlackboardKeyType_Enum
        fun C(Other: Any): BlackboardKeyType_Enum
    }
}

external open class BlackboardKeyType_Float : BlackboardKeyType {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlackboardKeyType_Float
        fun Find(Outer: UObject, ResourceName: String): BlackboardKeyType_Float
        fun GetDefaultObject(): BlackboardKeyType_Float
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlackboardKeyType_Float
        fun C(Other: UObject): BlackboardKeyType_Float
        fun C(Other: Any): BlackboardKeyType_Float
    }
}

external open class BlackboardKeyType_Int : BlackboardKeyType {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlackboardKeyType_Int
        fun Find(Outer: UObject, ResourceName: String): BlackboardKeyType_Int
        fun GetDefaultObject(): BlackboardKeyType_Int
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlackboardKeyType_Int
        fun C(Other: UObject): BlackboardKeyType_Int
        fun C(Other: Any): BlackboardKeyType_Int
    }
}

external open class BlackboardKeyType_Name : BlackboardKeyType {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlackboardKeyType_Name
        fun Find(Outer: UObject, ResourceName: String): BlackboardKeyType_Name
        fun GetDefaultObject(): BlackboardKeyType_Name
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlackboardKeyType_Name
        fun C(Other: UObject): BlackboardKeyType_Name
        fun C(Other: Any): BlackboardKeyType_Name
    }
}

external open class BlackboardKeyType_NativeEnum : BlackboardKeyType {
    constructor()
    constructor(Outer: UObject)
    open var EnumName: String
    open var EnumType: Enum

    companion object {
        fun Load(ResourceName: String): BlackboardKeyType_NativeEnum
        fun Find(Outer: UObject, ResourceName: String): BlackboardKeyType_NativeEnum
        fun GetDefaultObject(): BlackboardKeyType_NativeEnum
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlackboardKeyType_NativeEnum
        fun C(Other: UObject): BlackboardKeyType_NativeEnum
        fun C(Other: Any): BlackboardKeyType_NativeEnum
    }
}

external open class BlackboardKeyType_Object : BlackboardKeyType {
    constructor()
    constructor(Outer: UObject)
    open var BaseClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): BlackboardKeyType_Object
        fun Find(Outer: UObject, ResourceName: String): BlackboardKeyType_Object
        fun GetDefaultObject(): BlackboardKeyType_Object
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlackboardKeyType_Object
        fun C(Other: UObject): BlackboardKeyType_Object
        fun C(Other: Any): BlackboardKeyType_Object
    }
}

external open class BlackboardKeyType_Rotator : BlackboardKeyType {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlackboardKeyType_Rotator
        fun Find(Outer: UObject, ResourceName: String): BlackboardKeyType_Rotator
        fun GetDefaultObject(): BlackboardKeyType_Rotator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlackboardKeyType_Rotator
        fun C(Other: UObject): BlackboardKeyType_Rotator
        fun C(Other: Any): BlackboardKeyType_Rotator
    }
}

external open class BlackboardKeyType_String : BlackboardKeyType {
    constructor()
    constructor(Outer: UObject)
    open var StringValue: String

    companion object {
        fun Load(ResourceName: String): BlackboardKeyType_String
        fun Find(Outer: UObject, ResourceName: String): BlackboardKeyType_String
        fun GetDefaultObject(): BlackboardKeyType_String
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlackboardKeyType_String
        fun C(Other: UObject): BlackboardKeyType_String
        fun C(Other: Any): BlackboardKeyType_String
    }
}

external open class BlackboardKeyType_Vector : BlackboardKeyType {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlackboardKeyType_Vector
        fun Find(Outer: UObject, ResourceName: String): BlackboardKeyType_Vector
        fun GetDefaultObject(): BlackboardKeyType_Vector
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlackboardKeyType_Vector
        fun C(Other: UObject): BlackboardKeyType_Vector
        fun C(Other: Any): BlackboardKeyType_Vector
    }
}

external open class BTComposite_Selector : BTCompositeNode {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BTComposite_Selector
        fun Find(Outer: UObject, ResourceName: String): BTComposite_Selector
        fun GetDefaultObject(): BTComposite_Selector
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTComposite_Selector
        fun C(Other: UObject): BTComposite_Selector
        fun C(Other: Any): BTComposite_Selector
    }
}

external open class BTComposite_Sequence : BTCompositeNode {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BTComposite_Sequence
        fun Find(Outer: UObject, ResourceName: String): BTComposite_Sequence
        fun GetDefaultObject(): BTComposite_Sequence
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTComposite_Sequence
        fun C(Other: UObject): BTComposite_Sequence
        fun C(Other: Any): BTComposite_Sequence
    }
}

external object EBTParallelMode {
    var AbortBackground: String /* "AbortBackground" */
    var WaitForBackground: String /* "WaitForBackground" */
    var EBTParallelMode_MAX: String /* "EBTParallelMode_MAX" */
}

external open class BTComposite_SimpleParallel : BTCompositeNode {
    constructor()
    constructor(Outer: UObject)
    open var FinishMode: String /* "AbortBackground" | "WaitForBackground" | "EBTParallelMode_MAX" */

    companion object {
        fun Load(ResourceName: String): BTComposite_SimpleParallel
        fun Find(Outer: UObject, ResourceName: String): BTComposite_SimpleParallel
        fun GetDefaultObject(): BTComposite_SimpleParallel
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTComposite_SimpleParallel
        fun C(Other: UObject): BTComposite_SimpleParallel
        fun C(Other: Any): BTComposite_SimpleParallel
    }
}

external open class BTDecorator_BlackboardBase : BTDecorator {
    constructor()
    constructor(Outer: UObject)
    open var BlackboardKey: BlackboardKeySelector

    companion object {
        fun Load(ResourceName: String): BTDecorator_BlackboardBase
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_BlackboardBase
        fun GetDefaultObject(): BTDecorator_BlackboardBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_BlackboardBase
        fun C(Other: UObject): BTDecorator_BlackboardBase
        fun C(Other: Any): BTDecorator_BlackboardBase
    }
}

external object EBTBlackboardRestart {
    var ValueChange: String /* "ValueChange" */
    var ResultChange: String /* "ResultChange" */
    var EBTBlackboardRestart_MAX: String /* "EBTBlackboardRestart_MAX" */
}

external object EBasicKeyOperation {
    var Set: String /* "Set" */
    var NotSet: String /* "NotSet" */
    var EBasicKeyOperation_MAX: String /* "EBasicKeyOperation_MAX" */
}

external object EArithmeticKeyOperation {
    var Equal: String /* "Equal" */
    var NotEqual: String /* "NotEqual" */
    var Less: String /* "Less" */
    var LessOrEqual: String /* "LessOrEqual" */
    var Greater: String /* "Greater" */
    var GreaterOrEqual: String /* "GreaterOrEqual" */
    var EArithmeticKeyOperation_MAX: String /* "EArithmeticKeyOperation_MAX" */
}

external object ETextKeyOperation {
    var Equal: String /* "Equal" */
    var NotEqual: String /* "NotEqual" */
    var Contain: String /* "Contain" */
    var NotContain: String /* "NotContain" */
    var ETextKeyOperation_MAX: String /* "ETextKeyOperation_MAX" */
}

external open class BTDecorator_Blackboard : BTDecorator_BlackboardBase {
    constructor()
    constructor(Outer: UObject)
    open var IntValue: Number
    open var FloatValue: Number
    open var StringValue: String
    open var CachedDescription: String
    open var OperationType: Number
    open var NotifyObserver: String /* "ValueChange" | "ResultChange" | "EBTBlackboardRestart_MAX" */
    open var BasicOperation: String /* "Set" | "NotSet" | "EBasicKeyOperation_MAX" */
    open var ArithmeticOperation: String /* "Equal" | "NotEqual" | "Less" | "LessOrEqual" | "Greater" | "GreaterOrEqual" | "EArithmeticKeyOperation_MAX" */
    open var TextOperation: String /* "Equal" | "NotEqual" | "Contain" | "NotContain" | "ETextKeyOperation_MAX" */

    companion object {
        fun Load(ResourceName: String): BTDecorator_Blackboard
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_Blackboard
        fun GetDefaultObject(): BTDecorator_Blackboard
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_Blackboard
        fun C(Other: UObject): BTDecorator_Blackboard
        fun C(Other: Any): BTDecorator_Blackboard
    }
}

external object EBTNodeResult {
    var Succeeded: String /* "Succeeded" */
    var Failed: String /* "Failed" */
    var Aborted: String /* "Aborted" */
    var InProgress: String /* "InProgress" */
    var EBTNodeResult_MAX: String /* "EBTNodeResult_MAX" */
}

external open class BTDecorator_BlueprintBase : BTDecorator {
    constructor()
    constructor(Outer: UObject)
    open var AIOwner: AIController
    open var ActorOwner: Actor
    open var ObservedKeyNames: Array<String>
    open var CustomDescription: String
    open var bShowPropertyDetails: Boolean
    open var bCheckConditionOnlyBlackBoardChanges: Boolean
    open var bIsObservingBB: Boolean
    open fun ReceiveTickAI(OwnerController: AIController, ControlledPawn: Pawn, DeltaSeconds: Number)
    open fun ReceiveTick(OwnerActor: Actor, DeltaSeconds: Number)
    open fun ReceiveObserverDeactivatedAI(OwnerController: AIController, ControlledPawn: Pawn)
    open fun ReceiveObserverDeactivated(OwnerActor: Actor)
    open fun ReceiveObserverActivatedAI(OwnerController: AIController, ControlledPawn: Pawn)
    open fun ReceiveObserverActivated(OwnerActor: Actor)
    open fun ReceiveExecutionStartAI(OwnerController: AIController, ControlledPawn: Pawn)
    open fun ReceiveExecutionStart(OwnerActor: Actor)
    open fun ReceiveExecutionFinishAI(OwnerController: AIController, ControlledPawn: Pawn, NodeResult: String /* "Succeeded" | "Failed" | "Aborted" | "InProgress" | "EBTNodeResult_MAX" */)
    open fun ReceiveExecutionFinish(OwnerActor: Actor, NodeResult: String /* "Succeeded" | "Failed" | "Aborted" | "InProgress" | "EBTNodeResult_MAX" */)
    open fun PerformConditionCheckAI(OwnerController: AIController, ControlledPawn: Pawn): Boolean
    open fun PerformConditionCheck(OwnerActor: Actor): Boolean
    open fun IsDecoratorObserverActive(): Boolean
    open fun IsDecoratorExecutionActive(): Boolean

    companion object {
        fun Load(ResourceName: String): BTDecorator_BlueprintBase
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_BlueprintBase
        fun GetDefaultObject(): BTDecorator_BlueprintBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_BlueprintBase
        fun C(Other: UObject): BTDecorator_BlueprintBase
        fun C(Other: Any): BTDecorator_BlueprintBase
    }
}

external object EGameplayContainerMatchType {
    var Any: String /* "Any" */
    var All: String /* "All" */
    var EGameplayContainerMatchType_MAX: String /* "EGameplayContainerMatchType_MAX" */
}

external open class BTDecorator_CheckGameplayTagsOnActor : BTDecorator {
    constructor()
    constructor(Outer: UObject)
    open var ActorToCheck: BlackboardKeySelector
    open var TagsToMatch: String /* "Any" | "All" | "EGameplayContainerMatchType_MAX" */
    open var GameplayTags: GameplayTagContainer
    open var CachedDescription: String

    companion object {
        fun Load(ResourceName: String): BTDecorator_CheckGameplayTagsOnActor
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_CheckGameplayTagsOnActor
        fun GetDefaultObject(): BTDecorator_CheckGameplayTagsOnActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_CheckGameplayTagsOnActor
        fun C(Other: UObject): BTDecorator_CheckGameplayTagsOnActor
        fun C(Other: Any): BTDecorator_CheckGameplayTagsOnActor
    }
}

external object EBlackBoardEntryComparison {
    var Equal: String /* "Equal" */
    var NotEqual: String /* "NotEqual" */
    var EBlackBoardEntryComparison_MAX: String /* "EBlackBoardEntryComparison_MAX" */
}

external open class BTDecorator_CompareBBEntries : BTDecorator {
    constructor()
    constructor(Outer: UObject)
    open var Operator: String /* "Equal" | "NotEqual" | "EBlackBoardEntryComparison_MAX" */
    open var BlackboardKeyA: BlackboardKeySelector
    open var BlackboardKeyB: BlackboardKeySelector

    companion object {
        fun Load(ResourceName: String): BTDecorator_CompareBBEntries
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_CompareBBEntries
        fun GetDefaultObject(): BTDecorator_CompareBBEntries
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_CompareBBEntries
        fun C(Other: UObject): BTDecorator_CompareBBEntries
        fun C(Other: Any): BTDecorator_CompareBBEntries
    }
}

external open class BTDecorator_ConditionalLoop : BTDecorator_Blackboard {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BTDecorator_ConditionalLoop
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_ConditionalLoop
        fun GetDefaultObject(): BTDecorator_ConditionalLoop
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_ConditionalLoop
        fun C(Other: UObject): BTDecorator_ConditionalLoop
        fun C(Other: Any): BTDecorator_ConditionalLoop
    }
}

external open class BTDecorator_ConeCheck : BTDecorator {
    constructor()
    constructor(Outer: UObject)
    open var ConeHalfAngle: Number
    open var ConeOrigin: BlackboardKeySelector
    open var ConeDirection: BlackboardKeySelector
    open var Observed: BlackboardKeySelector

    companion object {
        fun Load(ResourceName: String): BTDecorator_ConeCheck
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_ConeCheck
        fun GetDefaultObject(): BTDecorator_ConeCheck
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_ConeCheck
        fun C(Other: UObject): BTDecorator_ConeCheck
        fun C(Other: Any): BTDecorator_ConeCheck
    }
}

external open class BTDecorator_Cooldown : BTDecorator {
    constructor()
    constructor(Outer: UObject)
    open var CoolDownTime: Number

    companion object {
        fun Load(ResourceName: String): BTDecorator_Cooldown
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_Cooldown
        fun GetDefaultObject(): BTDecorator_Cooldown
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_Cooldown
        fun C(Other: UObject): BTDecorator_Cooldown
        fun C(Other: Any): BTDecorator_Cooldown
    }
}

external object EPathExistanceQueryType {
    var NavmeshRaycast2D: String /* "NavmeshRaycast2D" */
    var HierarchicalQuery: String /* "HierarchicalQuery" */
    var RegularPathFinding: String /* "RegularPathFinding" */
    var EPathExistanceQueryType_MAX: String /* "EPathExistanceQueryType_MAX" */
}

external open class BTDecorator_DoesPathExist : BTDecorator {
    constructor()
    constructor(Outer: UObject)
    open var BlackboardKeyA: BlackboardKeySelector
    open var BlackboardKeyB: BlackboardKeySelector
    open var bUseSelf: Boolean
    open var PathQueryType: String /* "NavmeshRaycast2D" | "HierarchicalQuery" | "RegularPathFinding" | "EPathExistanceQueryType_MAX" */
    open var FilterClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): BTDecorator_DoesPathExist
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_DoesPathExist
        fun GetDefaultObject(): BTDecorator_DoesPathExist
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_DoesPathExist
        fun C(Other: UObject): BTDecorator_DoesPathExist
        fun C(Other: Any): BTDecorator_DoesPathExist
    }
}

external open class BTDecorator_ForceSuccess : BTDecorator {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BTDecorator_ForceSuccess
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_ForceSuccess
        fun GetDefaultObject(): BTDecorator_ForceSuccess
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_ForceSuccess
        fun C(Other: UObject): BTDecorator_ForceSuccess
        fun C(Other: Any): BTDecorator_ForceSuccess
    }
}

external object FAIDistanceType {
    var Distance3D: String /* "Distance3D" */
    var Distance2D: String /* "Distance2D" */
    var DistanceZ: String /* "DistanceZ" */
    var MAX: String /* "MAX" */
}

external open class BTDecorator_IsAtLocation : BTDecorator_BlackboardBase {
    constructor()
    constructor(Outer: UObject)
    open var AcceptableRadius: Number
    open var ParametrizedAcceptableRadius: AIDataProviderFloatValue
    open var GeometricDistanceType: String /* "Distance3D" | "Distance2D" | "DistanceZ" | "MAX" */
    open var bUseParametrizedRadius: Boolean
    open var bUseNavAgentGoalLocation: Boolean
    open var bPathFindingBasedTest: Boolean

    companion object {
        fun Load(ResourceName: String): BTDecorator_IsAtLocation
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_IsAtLocation
        fun GetDefaultObject(): BTDecorator_IsAtLocation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_IsAtLocation
        fun C(Other: UObject): BTDecorator_IsAtLocation
        fun C(Other: Any): BTDecorator_IsAtLocation
    }
}

external open class BTDecorator_IsBBEntryOfClass : BTDecorator_BlackboardBase {
    constructor()
    constructor(Outer: UObject)
    open var TestClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): BTDecorator_IsBBEntryOfClass
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_IsBBEntryOfClass
        fun GetDefaultObject(): BTDecorator_IsBBEntryOfClass
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_IsBBEntryOfClass
        fun C(Other: UObject): BTDecorator_IsBBEntryOfClass
        fun C(Other: Any): BTDecorator_IsBBEntryOfClass
    }
}

external open class BTDecorator_KeepInCone : BTDecorator {
    constructor()
    constructor(Outer: UObject)
    open var ConeHalfAngle: Number
    open var ConeOrigin: BlackboardKeySelector
    open var Observed: BlackboardKeySelector
    open var bUseSelfAsOrigin: Boolean
    open var bUseSelfAsObserved: Boolean

    companion object {
        fun Load(ResourceName: String): BTDecorator_KeepInCone
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_KeepInCone
        fun GetDefaultObject(): BTDecorator_KeepInCone
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_KeepInCone
        fun C(Other: UObject): BTDecorator_KeepInCone
        fun C(Other: Any): BTDecorator_KeepInCone
    }
}

external open class BTDecorator_Loop : BTDecorator {
    constructor()
    constructor(Outer: UObject)
    open var NumLoops: Number
    open var bInfiniteLoop: Boolean
    open var InfiniteLoopTimeoutTime: Number

    companion object {
        fun Load(ResourceName: String): BTDecorator_Loop
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_Loop
        fun GetDefaultObject(): BTDecorator_Loop
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_Loop
        fun C(Other: UObject): BTDecorator_Loop
        fun C(Other: Any): BTDecorator_Loop
    }
}

external open class BTDecorator_ReachedMoveGoal : BTDecorator {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BTDecorator_ReachedMoveGoal
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_ReachedMoveGoal
        fun GetDefaultObject(): BTDecorator_ReachedMoveGoal
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_ReachedMoveGoal
        fun C(Other: UObject): BTDecorator_ReachedMoveGoal
        fun C(Other: Any): BTDecorator_ReachedMoveGoal
    }
}

external open class BTDecorator_SetTagCooldown : BTDecorator {
    constructor()
    constructor(Outer: UObject)
    open var CooldownTag: GameplayTag
    open var CooldownDuration: Number
    open var bAddToExistingDuration: Boolean

    companion object {
        fun Load(ResourceName: String): BTDecorator_SetTagCooldown
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_SetTagCooldown
        fun GetDefaultObject(): BTDecorator_SetTagCooldown
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_SetTagCooldown
        fun C(Other: UObject): BTDecorator_SetTagCooldown
        fun C(Other: Any): BTDecorator_SetTagCooldown
    }
}

external open class BTDecorator_TagCooldown : BTDecorator {
    constructor()
    constructor(Outer: UObject)
    open var CooldownTag: GameplayTag
    open var CooldownDuration: Number
    open var bAddToExistingDuration: Boolean
    open var bActivatesCooldown: Boolean

    companion object {
        fun Load(ResourceName: String): BTDecorator_TagCooldown
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_TagCooldown
        fun GetDefaultObject(): BTDecorator_TagCooldown
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_TagCooldown
        fun C(Other: UObject): BTDecorator_TagCooldown
        fun C(Other: Any): BTDecorator_TagCooldown
    }
}

external open class BTDecorator_TimeLimit : BTDecorator {
    constructor()
    constructor(Outer: UObject)
    open var TimeLimit: Number

    companion object {
        fun Load(ResourceName: String): BTDecorator_TimeLimit
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_TimeLimit
        fun GetDefaultObject(): BTDecorator_TimeLimit
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_TimeLimit
        fun C(Other: UObject): BTDecorator_TimeLimit
        fun C(Other: Any): BTDecorator_TimeLimit
    }
}

external open class BTFunctionLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BTFunctionLibrary
        fun Find(Outer: UObject, ResourceName: String): BTFunctionLibrary
        fun GetDefaultObject(): BTFunctionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTFunctionLibrary
        fun StopUsingExternalEvent(NodeOwner: BTNode)
        fun StartUsingExternalEvent(NodeOwner: BTNode, OwningActor: Actor)
        fun SetBlackboardValueAsVector(NodeOwner: BTNode, Key: BlackboardKeySelector, Value: Vector)
        fun SetBlackboardValueAsString(NodeOwner: BTNode, Key: BlackboardKeySelector, Value: String)
        fun SetBlackboardValueAsRotator(NodeOwner: BTNode, Key: BlackboardKeySelector, Value: Rotator)
        fun SetBlackboardValueAsObject(NodeOwner: BTNode, Key: BlackboardKeySelector, Value: UObject)
        fun SetBlackboardValueAsName(NodeOwner: BTNode, Key: BlackboardKeySelector, Value: String)
        fun SetBlackboardValueAsInt(NodeOwner: BTNode, Key: BlackboardKeySelector, Value: Number)
        fun SetBlackboardValueAsFloat(NodeOwner: BTNode, Key: BlackboardKeySelector, Value: Number)
        fun SetBlackboardValueAsEnum(NodeOwner: BTNode, Key: BlackboardKeySelector, Value: Number)
        fun SetBlackboardValueAsClass(NodeOwner: BTNode, Key: BlackboardKeySelector, Value: UnrealEngineClass)
        fun SetBlackboardValueAsBool(NodeOwner: BTNode, Key: BlackboardKeySelector, Value: Boolean)
        fun GetOwnersBlackboard(NodeOwner: BTNode): BlackboardComponent
        fun GetOwnerComponent(NodeOwner: BTNode): BehaviorTreeComponent
        fun GetBlackboardValueAsVector(NodeOwner: BTNode, Key: BlackboardKeySelector): Vector
        fun GetBlackboardValueAsString(NodeOwner: BTNode, Key: BlackboardKeySelector): String
        fun GetBlackboardValueAsRotator(NodeOwner: BTNode, Key: BlackboardKeySelector): Rotator
        fun GetBlackboardValueAsObject(NodeOwner: BTNode, Key: BlackboardKeySelector): UObject
        fun GetBlackboardValueAsName(NodeOwner: BTNode, Key: BlackboardKeySelector): String
        fun GetBlackboardValueAsInt(NodeOwner: BTNode, Key: BlackboardKeySelector): Number
        fun GetBlackboardValueAsFloat(NodeOwner: BTNode, Key: BlackboardKeySelector): Number
        fun GetBlackboardValueAsEnum(NodeOwner: BTNode, Key: BlackboardKeySelector): Number
        fun GetBlackboardValueAsClass(NodeOwner: BTNode, Key: BlackboardKeySelector): UnrealEngineClass
        fun GetBlackboardValueAsBool(NodeOwner: BTNode, Key: BlackboardKeySelector): Boolean
        fun GetBlackboardValueAsActor(NodeOwner: BTNode, Key: BlackboardKeySelector): Actor
        fun ClearBlackboardValueAsVector(NodeOwner: BTNode, Key: BlackboardKeySelector)
        fun ClearBlackboardValue(NodeOwner: BTNode, Key: BlackboardKeySelector)
        fun C(Other: UObject): BTFunctionLibrary
        fun C(Other: Any): BTFunctionLibrary
    }
}

external open class BTService_BlackboardBase : BTService {
    constructor()
    constructor(Outer: UObject)
    open var BlackboardKey: BlackboardKeySelector

    companion object {
        fun Load(ResourceName: String): BTService_BlackboardBase
        fun Find(Outer: UObject, ResourceName: String): BTService_BlackboardBase
        fun GetDefaultObject(): BTService_BlackboardBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTService_BlackboardBase
        fun C(Other: UObject): BTService_BlackboardBase
        fun C(Other: Any): BTService_BlackboardBase
    }
}

external open class BTService_BlueprintBase : BTService {
    constructor()
    constructor(Outer: UObject)
    open var AIOwner: AIController
    open var ActorOwner: Actor
    open var CustomDescription: String
    open var bShowPropertyDetails: Boolean
    open var bShowEventDetails: Boolean
    open fun ReceiveTickAI(OwnerController: AIController, ControlledPawn: Pawn, DeltaSeconds: Number)
    open fun ReceiveTick(OwnerActor: Actor, DeltaSeconds: Number)
    open fun ReceiveSearchStartAI(OwnerController: AIController, ControlledPawn: Pawn)
    open fun ReceiveSearchStart(OwnerActor: Actor)
    open fun ReceiveDeactivationAI(OwnerController: AIController, ControlledPawn: Pawn)
    open fun ReceiveDeactivation(OwnerActor: Actor)
    open fun ReceiveActivationAI(OwnerController: AIController, ControlledPawn: Pawn)
    open fun ReceiveActivation(OwnerActor: Actor)
    open fun IsServiceActive(): Boolean

    companion object {
        fun Load(ResourceName: String): BTService_BlueprintBase
        fun Find(Outer: UObject, ResourceName: String): BTService_BlueprintBase
        fun GetDefaultObject(): BTService_BlueprintBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTService_BlueprintBase
        fun C(Other: UObject): BTService_BlueprintBase
        fun C(Other: Any): BTService_BlueprintBase
    }
}

external open class BTService_DefaultFocus : BTService_BlackboardBase {
    constructor()
    constructor(Outer: UObject)
    open var FocusPriority: Number

    companion object {
        fun Load(ResourceName: String): BTService_DefaultFocus
        fun Find(Outer: UObject, ResourceName: String): BTService_DefaultFocus
        fun GetDefaultObject(): BTService_DefaultFocus
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTService_DefaultFocus
        fun C(Other: UObject): BTService_DefaultFocus
        fun C(Other: Any): BTService_DefaultFocus
    }
}

external object EAIParamType {
    var Float: String /* "Float" */
    var Int: String /* "Int" */
    var Bool: String /* "Bool" */
    var MAX: String /* "MAX" */
}

external open class AIDynamicParam {
    open var ParamName: String
    open var ParamType: String /* "Float" | "Int" | "Bool" | "MAX" */
    open var Value: Number
    open var BBKey: BlackboardKeySelector
    open fun clone(): AIDynamicParam

    companion object {
        fun C(Other: UObject): AIDynamicParam
        fun C(Other: Any): AIDynamicParam
    }
}

external open class EQSParametrizedQueryExecutionRequest {
    open var QueryTemplate: EnvQuery
    open var QueryConfig: Array<AIDynamicParam>
    open var EQSQueryBlackboardKey: BlackboardKeySelector
    open var RunMode: String /* "SingleResult" | "RandomBest5Pct" | "RandomBest25Pct" | "AllMatching" | "EEnvQueryRunMode_MAX" */
    open var bUseBBKeyForQueryTemplate: Boolean
    open fun clone(): EQSParametrizedQueryExecutionRequest

    companion object {
        fun C(Other: UObject): EQSParametrizedQueryExecutionRequest
        fun C(Other: Any): EQSParametrizedQueryExecutionRequest
    }
}

external open class BTService_RunEQS : BTService_BlackboardBase {
    constructor()
    constructor(Outer: UObject)
    open var EQSRequest: EQSParametrizedQueryExecutionRequest

    companion object {
        fun Load(ResourceName: String): BTService_RunEQS
        fun Find(Outer: UObject, ResourceName: String): BTService_RunEQS
        fun GetDefaultObject(): BTService_RunEQS
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTService_RunEQS
        fun C(Other: UObject): BTService_RunEQS
        fun C(Other: Any): BTService_RunEQS
    }
}

external open class BTTask_BlackboardBase : BTTaskNode {
    constructor()
    constructor(Outer: UObject)
    open var BlackboardKey: BlackboardKeySelector

    companion object {
        fun Load(ResourceName: String): BTTask_BlackboardBase
        fun Find(Outer: UObject, ResourceName: String): BTTask_BlackboardBase
        fun GetDefaultObject(): BTTask_BlackboardBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_BlackboardBase
        fun C(Other: UObject): BTTask_BlackboardBase
        fun C(Other: Any): BTTask_BlackboardBase
    }
}

external open class IntervalCountdown {
    open var Interval: Number
    open fun clone(): IntervalCountdown

    companion object {
        fun C(Other: UObject): IntervalCountdown
        fun C(Other: Any): IntervalCountdown
    }
}

external open class BTTask_BlueprintBase : BTTaskNode {
    constructor()
    constructor(Outer: UObject)
    open var AIOwner: AIController
    open var ActorOwner: Actor
    open var TickInterval: IntervalCountdown
    open var CustomDescription: String
    open var bShowPropertyDetails: Boolean
    open fun SetFinishOnMessageWithId(MessageName: String, RequestID: Number)
    open fun SetFinishOnMessage(MessageName: String)
    open fun ReceiveTickAI(OwnerController: AIController, ControlledPawn: Pawn, DeltaSeconds: Number)
    open fun ReceiveTick(OwnerActor: Actor, DeltaSeconds: Number)
    open fun ReceiveExecuteAI(OwnerController: AIController, ControlledPawn: Pawn)
    open fun ReceiveExecute(OwnerActor: Actor)
    open fun ReceiveAbortAI(OwnerController: AIController, ControlledPawn: Pawn)
    open fun ReceiveAbort(OwnerActor: Actor)
    open fun IsTaskExecuting(): Boolean
    open fun IsTaskAborting(): Boolean
    open fun FinishExecute(bSuccess: Boolean)
    open fun FinishAbort()

    companion object {
        fun Load(ResourceName: String): BTTask_BlueprintBase
        fun Find(Outer: UObject, ResourceName: String): BTTask_BlueprintBase
        fun GetDefaultObject(): BTTask_BlueprintBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_BlueprintBase
        fun C(Other: UObject): BTTask_BlueprintBase
        fun C(Other: Any): BTTask_BlueprintBase
    }
}

external open class BTTask_FinishWithResult : BTTaskNode {
    constructor()
    constructor(Outer: UObject)
    open var Result: String /* "Succeeded" | "Failed" | "Aborted" | "InProgress" | "EBTNodeResult_MAX" */

    companion object {
        fun Load(ResourceName: String): BTTask_FinishWithResult
        fun Find(Outer: UObject, ResourceName: String): BTTask_FinishWithResult
        fun GetDefaultObject(): BTTask_FinishWithResult
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_FinishWithResult
        fun C(Other: UObject): BTTask_FinishWithResult
        fun C(Other: Any): BTTask_FinishWithResult
    }
}

external open class BTTask_GameplayTaskBase : BTTaskNode {
    constructor()
    constructor(Outer: UObject)
    open var bWaitForGameplayTask: Boolean

    companion object {
        fun Load(ResourceName: String): BTTask_GameplayTaskBase
        fun Find(Outer: UObject, ResourceName: String): BTTask_GameplayTaskBase
        fun GetDefaultObject(): BTTask_GameplayTaskBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_GameplayTaskBase
        fun C(Other: UObject): BTTask_GameplayTaskBase
        fun C(Other: Any): BTTask_GameplayTaskBase
    }
}

external open class BTTask_MakeNoise : BTTaskNode {
    constructor()
    constructor(Outer: UObject)
    open var Loudnes: Number

    companion object {
        fun Load(ResourceName: String): BTTask_MakeNoise
        fun Find(Outer: UObject, ResourceName: String): BTTask_MakeNoise
        fun GetDefaultObject(): BTTask_MakeNoise
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_MakeNoise
        fun C(Other: UObject): BTTask_MakeNoise
        fun C(Other: Any): BTTask_MakeNoise
    }
}

external open class BTTask_MoveTo : BTTask_BlackboardBase {
    constructor()
    constructor(Outer: UObject)
    open var AcceptableRadius: Number
    open var FilterClass: UnrealEngineClass
    open var ObservedBlackboardValueTolerance: Number
    open var bObserveBlackboardValue: Boolean
    open var bAllowStrafe: Boolean
    open var bAllowPartialPath: Boolean
    open var bTrackMovingGoal: Boolean
    open var bProjectGoalLocation: Boolean
    open var bReachTestIncludesAgentRadius: Boolean
    open var bReachTestIncludesGoalRadius: Boolean
    open var bStopOnOverlap: Boolean
    open var bStopOnOverlapNeedsUpdate: Boolean

    companion object {
        fun Load(ResourceName: String): BTTask_MoveTo
        fun Find(Outer: UObject, ResourceName: String): BTTask_MoveTo
        fun GetDefaultObject(): BTTask_MoveTo
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_MoveTo
        fun C(Other: UObject): BTTask_MoveTo
        fun C(Other: Any): BTTask_MoveTo
    }
}

external open class BTTask_MoveDirectlyToward : BTTask_MoveTo {
    constructor()
    constructor(Outer: UObject)
    open var bDisablePathUpdateOnGoalLocationChange: Boolean
    open var bProjectVectorGoalToNavigation: Boolean
    open var bUpdatedDeprecatedProperties: Boolean

    companion object {
        fun Load(ResourceName: String): BTTask_MoveDirectlyToward
        fun Find(Outer: UObject, ResourceName: String): BTTask_MoveDirectlyToward
        fun GetDefaultObject(): BTTask_MoveDirectlyToward
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_MoveDirectlyToward
        fun C(Other: UObject): BTTask_MoveDirectlyToward
        fun C(Other: Any): BTTask_MoveDirectlyToward
    }
}

external open class BTTask_PawnActionBase : BTTaskNode {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BTTask_PawnActionBase
        fun Find(Outer: UObject, ResourceName: String): BTTask_PawnActionBase
        fun GetDefaultObject(): BTTask_PawnActionBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_PawnActionBase
        fun C(Other: UObject): BTTask_PawnActionBase
        fun C(Other: Any): BTTask_PawnActionBase
    }
}

external open class BTTask_PlayAnimation : BTTaskNode {
    constructor()
    constructor(Outer: UObject)
    open var AnimationToPlay: AnimationAsset
    open var bLooping: Boolean
    open var bNonBlocking: Boolean
    open var MyOwnerComp: BehaviorTreeComponent
    open var CachedSkelMesh: SkeletalMeshComponent

    companion object {
        fun Load(ResourceName: String): BTTask_PlayAnimation
        fun Find(Outer: UObject, ResourceName: String): BTTask_PlayAnimation
        fun GetDefaultObject(): BTTask_PlayAnimation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_PlayAnimation
        fun C(Other: UObject): BTTask_PlayAnimation
        fun C(Other: Any): BTTask_PlayAnimation
    }
}

external open class BTTask_PlaySound : BTTaskNode {
    constructor()
    constructor(Outer: UObject)
    open var SoundToPlay: SoundCue

    companion object {
        fun Load(ResourceName: String): BTTask_PlaySound
        fun Find(Outer: UObject, ResourceName: String): BTTask_PlaySound
        fun GetDefaultObject(): BTTask_PlaySound
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_PlaySound
        fun C(Other: UObject): BTTask_PlaySound
        fun C(Other: Any): BTTask_PlaySound
    }
}

external open class BTTask_PushPawnAction : BTTask_PawnActionBase {
    constructor()
    constructor(Outer: UObject)
    open var Action: PawnAction

    companion object {
        fun Load(ResourceName: String): BTTask_PushPawnAction
        fun Find(Outer: UObject, ResourceName: String): BTTask_PushPawnAction
        fun GetDefaultObject(): BTTask_PushPawnAction
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_PushPawnAction
        fun C(Other: UObject): BTTask_PushPawnAction
        fun C(Other: Any): BTTask_PushPawnAction
    }
}

external open class BTTask_RotateToFaceBBEntry : BTTask_BlackboardBase {
    constructor()
    constructor(Outer: UObject)
    open var Precision: Number

    companion object {
        fun Load(ResourceName: String): BTTask_RotateToFaceBBEntry
        fun Find(Outer: UObject, ResourceName: String): BTTask_RotateToFaceBBEntry
        fun GetDefaultObject(): BTTask_RotateToFaceBBEntry
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_RotateToFaceBBEntry
        fun C(Other: UObject): BTTask_RotateToFaceBBEntry
        fun C(Other: Any): BTTask_RotateToFaceBBEntry
    }
}

external open class BTTask_RunBehavior : BTTaskNode {
    constructor()
    constructor(Outer: UObject)
    open var BehaviorAsset: BehaviorTree

    companion object {
        fun Load(ResourceName: String): BTTask_RunBehavior
        fun Find(Outer: UObject, ResourceName: String): BTTask_RunBehavior
        fun GetDefaultObject(): BTTask_RunBehavior
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_RunBehavior
        fun C(Other: UObject): BTTask_RunBehavior
        fun C(Other: Any): BTTask_RunBehavior
    }
}

external open class BTTask_RunBehaviorDynamic : BTTaskNode {
    constructor()
    constructor(Outer: UObject)
    open var InjectionTag: GameplayTag
    open var DefaultBehaviorAsset: BehaviorTree
    open var BehaviorAsset: BehaviorTree

    companion object {
        fun Load(ResourceName: String): BTTask_RunBehaviorDynamic
        fun Find(Outer: UObject, ResourceName: String): BTTask_RunBehaviorDynamic
        fun GetDefaultObject(): BTTask_RunBehaviorDynamic
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_RunBehaviorDynamic
        fun C(Other: UObject): BTTask_RunBehaviorDynamic
        fun C(Other: Any): BTTask_RunBehaviorDynamic
    }
}

external open class EnvNamedValue {
    open var ParamName: String
    open var ParamType: String /* "Float" | "Int" | "Bool" | "MAX" */
    open var Value: Number
    open fun clone(): EnvNamedValue

    companion object {
        fun C(Other: UObject): EnvNamedValue
        fun C(Other: Any): EnvNamedValue
    }
}

external open class BTTask_RunEQSQuery : BTTask_BlackboardBase {
    constructor()
    constructor(Outer: UObject)
    open var QueryTemplate: EnvQuery
    open var QueryParams: Array<EnvNamedValue>
    open var QueryConfig: Array<AIDynamicParam>
    open var RunMode: String /* "SingleResult" | "RandomBest5Pct" | "RandomBest25Pct" | "AllMatching" | "EEnvQueryRunMode_MAX" */
    open var EQSQueryBlackboardKey: BlackboardKeySelector
    open var bUseBBKey: Boolean
    open var EQSRequest: EQSParametrizedQueryExecutionRequest

    companion object {
        fun Load(ResourceName: String): BTTask_RunEQSQuery
        fun Find(Outer: UObject, ResourceName: String): BTTask_RunEQSQuery
        fun GetDefaultObject(): BTTask_RunEQSQuery
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_RunEQSQuery
        fun C(Other: UObject): BTTask_RunEQSQuery
        fun C(Other: Any): BTTask_RunEQSQuery
    }
}

external open class BTTask_SetTagCooldown : BTTaskNode {
    constructor()
    constructor(Outer: UObject)
    open var CooldownTag: GameplayTag
    open var bAddToExistingDuration: Boolean
    open var CooldownDuration: Number

    companion object {
        fun Load(ResourceName: String): BTTask_SetTagCooldown
        fun Find(Outer: UObject, ResourceName: String): BTTask_SetTagCooldown
        fun GetDefaultObject(): BTTask_SetTagCooldown
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_SetTagCooldown
        fun C(Other: UObject): BTTask_SetTagCooldown
        fun C(Other: Any): BTTask_SetTagCooldown
    }
}

external open class BTTask_Wait : BTTaskNode {
    constructor()
    constructor(Outer: UObject)
    open var WaitTime: Number
    open var RandomDeviation: Number

    companion object {
        fun Load(ResourceName: String): BTTask_Wait
        fun Find(Outer: UObject, ResourceName: String): BTTask_Wait
        fun GetDefaultObject(): BTTask_Wait
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_Wait
        fun C(Other: UObject): BTTask_Wait
        fun C(Other: Any): BTTask_Wait
    }
}

external open class BTTask_WaitBlackboardTime : BTTask_Wait {
    constructor()
    constructor(Outer: UObject)
    open var BlackboardKey: BlackboardKeySelector

    companion object {
        fun Load(ResourceName: String): BTTask_WaitBlackboardTime
        fun Find(Outer: UObject, ResourceName: String): BTTask_WaitBlackboardTime
        fun GetDefaultObject(): BTTask_WaitBlackboardTime
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_WaitBlackboardTime
        fun C(Other: UObject): BTTask_WaitBlackboardTime
        fun C(Other: Any): BTTask_WaitBlackboardTime
    }
}

external open class CrowdAgentInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CrowdAgentInterface
        fun Find(Outer: UObject, ResourceName: String): CrowdAgentInterface
        fun GetDefaultObject(): CrowdAgentInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CrowdAgentInterface
        fun C(Other: UObject): CrowdAgentInterface
        fun C(Other: Any): CrowdAgentInterface
    }
}

external open class CrowdFollowingComponent : PathFollowingComponent {
    constructor()
    constructor(Outer: UObject)
    open var CrowdAgentMoveDirection: Vector
    open var CharacterMovement: CharacterMovementComponent
    open var AvoidanceGroup: NavAvoidanceMask
    open var GroupsToAvoid: NavAvoidanceMask
    open var GroupsToIgnore: NavAvoidanceMask
    open fun SuspendCrowdSteering(bSuspend: Boolean)

    companion object {
        fun Load(ResourceName: String): CrowdFollowingComponent
        fun Find(Outer: UObject, ResourceName: String): CrowdFollowingComponent
        fun GetDefaultObject(): CrowdFollowingComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CrowdFollowingComponent
        fun C(Other: UObject): CrowdFollowingComponent
        fun C(Other: Any): CrowdFollowingComponent
    }
}

external open class CrowdAvoidanceConfig {
    open var VelocityBias: Number
    open var DesiredVelocityWeight: Number
    open var CurrentVelocityWeight: Number
    open var SideBiasWeight: Number
    open var ImpactTimeWeight: Number
    open var ImpactTimeRange: Number
    open var CustomPatternIdx: Number
    open var AdaptiveDivisions: Number
    open var AdaptiveRings: Number
    open var AdaptiveDepth: Number
    open fun clone(): CrowdAvoidanceConfig

    companion object {
        fun C(Other: UObject): CrowdAvoidanceConfig
        fun C(Other: Any): CrowdAvoidanceConfig
    }
}

external open class CrowdAvoidanceSamplingPattern {
    open var Angles: Array<Number>
    open var Radii: Array<Number>
    open fun clone(): CrowdAvoidanceSamplingPattern

    companion object {
        fun C(Other: UObject): CrowdAvoidanceSamplingPattern
        fun C(Other: Any): CrowdAvoidanceSamplingPattern
    }
}

external open class CrowdManager : CrowdManagerBase {
    constructor()
    constructor(Outer: UObject)
    open var MyNavData: NavigationData
    open var AvoidanceConfig: Array<CrowdAvoidanceConfig>
    open var SamplingPatterns: Array<CrowdAvoidanceSamplingPattern>
    open var MaxAgents: Number
    open var MaxAgentRadius: Number
    open var MaxAvoidedAgents: Number
    open var MaxAvoidedWalls: Number
    open var NavmeshCheckInterval: Number
    open var PathOptimizationInterval: Number
    open var SeparationDirClamp: Number
    open var PathOffsetRadiusMultiplier: Number
    open var bResolveCollisions: Boolean
    open var DebugDrawingWorld: World

    companion object {
        fun Load(ResourceName: String): CrowdManager
        fun Find(Outer: UObject, ResourceName: String): CrowdManager
        fun GetDefaultObject(): CrowdManager
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CrowdManager
        fun C(Other: UObject): CrowdManager
        fun C(Other: Any): CrowdManager
    }
}

external open class DetourCrowdAIController(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : AIController {
    companion object {
        fun GetDefaultObject(): DetourCrowdAIController
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DetourCrowdAIController
        fun C(Other: UObject): DetourCrowdAIController
        fun C(Other: Any): DetourCrowdAIController
    }
}

external interface `T$745` {
    var ResultingLocation: Vector
}

external interface `T$746` {
    var ResultingActor: Actor
}

external interface `T$747` {
    var ResultingLocationSet: Array<Vector>
}

external interface `T$748` {
    var ResultingActorsSet: Array<Actor>
}

external open class EnvQueryContext_BlueprintBase : EnvQueryContext {
    constructor()
    constructor(Outer: UObject)
    open fun ProvideSingleLocation(QuerierObject: UObject, QuerierActor: Actor, ResultingLocation: Vector = definedExternally): `T$745`
    open fun ProvideSingleActor(QuerierObject: UObject, QuerierActor: Actor, ResultingActor: Actor = definedExternally): `T$746`
    open fun ProvideLocationsSet(QuerierObject: UObject, QuerierActor: Actor, ResultingLocationSet: Array<Vector> = definedExternally): `T$747`
    open fun ProvideActorsSet(QuerierObject: UObject, QuerierActor: Actor, ResultingActorsSet: Array<Actor> = definedExternally): `T$748`

    companion object {
        fun Load(ResourceName: String): EnvQueryContext_BlueprintBase
        fun Find(Outer: UObject, ResourceName: String): EnvQueryContext_BlueprintBase
        fun GetDefaultObject(): EnvQueryContext_BlueprintBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryContext_BlueprintBase
        fun C(Other: UObject): EnvQueryContext_BlueprintBase
        fun C(Other: Any): EnvQueryContext_BlueprintBase
    }
}

external open class EnvQueryContext_Item : EnvQueryContext {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EnvQueryContext_Item
        fun Find(Outer: UObject, ResourceName: String): EnvQueryContext_Item
        fun GetDefaultObject(): EnvQueryContext_Item
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryContext_Item
        fun C(Other: UObject): EnvQueryContext_Item
        fun C(Other: Any): EnvQueryContext_Item
    }
}

external open class EnvQueryContext_Querier : EnvQueryContext {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EnvQueryContext_Querier
        fun Find(Outer: UObject, ResourceName: String): EnvQueryContext_Querier
        fun GetDefaultObject(): EnvQueryContext_Querier
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryContext_Querier
        fun C(Other: UObject): EnvQueryContext_Querier
        fun C(Other: Any): EnvQueryContext_Querier
    }
}

external open class EnvQueryDebugHelpers : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EnvQueryDebugHelpers
        fun Find(Outer: UObject, ResourceName: String): EnvQueryDebugHelpers
        fun GetDefaultObject(): EnvQueryDebugHelpers
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryDebugHelpers
        fun C(Other: UObject): EnvQueryDebugHelpers
        fun C(Other: Any): EnvQueryDebugHelpers
    }
}

external open class EnvQueryGenerator_ActorsOfClass : EnvQueryGenerator {
    constructor()
    constructor(Outer: UObject)
    open var SearchedActorClass: UnrealEngineClass
    open var GenerateOnlyActorsInRadius: AIDataProviderBoolValue
    open var SearchRadius: AIDataProviderFloatValue
    open var SearchCenter: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): EnvQueryGenerator_ActorsOfClass
        fun Find(Outer: UObject, ResourceName: String): EnvQueryGenerator_ActorsOfClass
        fun GetDefaultObject(): EnvQueryGenerator_ActorsOfClass
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryGenerator_ActorsOfClass
        fun C(Other: UObject): EnvQueryGenerator_ActorsOfClass
        fun C(Other: Any): EnvQueryGenerator_ActorsOfClass
    }
}

external open class EnvQueryGenerator_BlueprintBase : EnvQueryGenerator {
    constructor()
    constructor(Outer: UObject)
    open var GeneratorsActionDescription: String
    open var Context: UnrealEngineClass
    open var GeneratedItemType: UnrealEngineClass
    open fun GetQuerier(): UObject
    open fun DoItemGeneration(ContextLocations: Array<Vector>)
    open fun AddGeneratedVector(GeneratedVector: Vector)
    open fun AddGeneratedActor(GeneratedActor: Actor)

    companion object {
        fun Load(ResourceName: String): EnvQueryGenerator_BlueprintBase
        fun Find(Outer: UObject, ResourceName: String): EnvQueryGenerator_BlueprintBase
        fun GetDefaultObject(): EnvQueryGenerator_BlueprintBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryGenerator_BlueprintBase
        fun C(Other: UObject): EnvQueryGenerator_BlueprintBase
        fun C(Other: Any): EnvQueryGenerator_BlueprintBase
    }
}

external open class EnvQueryGenerator_Composite : EnvQueryGenerator {
    constructor()
    constructor(Outer: UObject)
    open var Generators: Array<EnvQueryGenerator>
    open var bAllowDifferentItemTypes: Boolean
    open var bHasMatchingItemType: Boolean
    open var ForcedItemType: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): EnvQueryGenerator_Composite
        fun Find(Outer: UObject, ResourceName: String): EnvQueryGenerator_Composite
        fun GetDefaultObject(): EnvQueryGenerator_Composite
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryGenerator_Composite
        fun C(Other: UObject): EnvQueryGenerator_Composite
        fun C(Other: Any): EnvQueryGenerator_Composite
    }
}

external object EEnvTraceShape {
    var Line: String /* "Line" */
    var Box: String /* "Box" */
    var Sphere: String /* "Sphere" */
    var Capsule: String /* "Capsule" */
    var EEnvTraceShape_MAX: String /* "EEnvTraceShape_MAX" */
}

external object EEnvQueryTrace {
    var None: String /* "None" */
    var Navigation: String /* "Navigation" */
    var Geometry: String /* "Geometry" */
    var NavigationOverLedges: String /* "NavigationOverLedges" */
    var EEnvQueryTrace_MAX: String /* "EEnvQueryTrace_MAX" */
}

external open class EnvTraceData {
    open var VersionNum: Number
    open var NavigationFilter: UnrealEngineClass
    open var ProjectDown: Number
    open var ProjectUp: Number
    open var ExtentX: Number
    open var ExtentY: Number
    open var ExtentZ: Number
    open var PostProjectionVerticalOffset: Number
    open var TraceChannel: String /* "TraceTypeQuery1" | "TraceTypeQuery2" | "TraceTypeQuery3" | "TraceTypeQuery4" | "TraceTypeQuery5" | "TraceTypeQuery6" | "TraceTypeQuery7" | "TraceTypeQuery8" | "TraceTypeQuery9" | "TraceTypeQuery10" | "TraceTypeQuery11" | "TraceTypeQuery12" | "TraceTypeQuery13" | "TraceTypeQuery14" | "TraceTypeQuery15" | "TraceTypeQuery16" | "TraceTypeQuery17" | "TraceTypeQuery18" | "TraceTypeQuery19" | "TraceTypeQuery20" | "TraceTypeQuery21" | "TraceTypeQuery22" | "TraceTypeQuery23" | "TraceTypeQuery24" | "TraceTypeQuery25" | "TraceTypeQuery26" | "TraceTypeQuery27" | "TraceTypeQuery28" | "TraceTypeQuery29" | "TraceTypeQuery30" | "TraceTypeQuery31" | "TraceTypeQuery32" | "TraceTypeQuery_MAX" | "ETraceTypeQuery_MAX" */
    open var SerializedChannel: String /* "ECC_WorldStatic" | "ECC_WorldDynamic" | "ECC_Pawn" | "ECC_Visibility" | "ECC_Camera" | "ECC_PhysicsBody" | "ECC_Vehicle" | "ECC_Destructible" | "ECC_EngineTraceChannel1" | "ECC_EngineTraceChannel2" | "ECC_EngineTraceChannel3" | "ECC_EngineTraceChannel4" | "ECC_EngineTraceChannel5" | "ECC_EngineTraceChannel6" | "ECC_GameTraceChannel1" | "ECC_GameTraceChannel2" | "ECC_GameTraceChannel3" | "ECC_GameTraceChannel4" | "ECC_GameTraceChannel5" | "ECC_GameTraceChannel6" | "ECC_GameTraceChannel7" | "ECC_GameTraceChannel8" | "ECC_GameTraceChannel9" | "ECC_GameTraceChannel10" | "ECC_GameTraceChannel11" | "ECC_GameTraceChannel12" | "ECC_GameTraceChannel13" | "ECC_GameTraceChannel14" | "ECC_GameTraceChannel15" | "ECC_GameTraceChannel16" | "ECC_GameTraceChannel17" | "ECC_GameTraceChannel18" | "ECC_OverlapAll_Deprecated" | "ECC_MAX" */
    open var TraceShape: String /* "Line" | "Box" | "Sphere" | "Capsule" | "EEnvTraceShape_MAX" */
    open var TraceMode: String /* "None" | "Navigation" | "Geometry" | "NavigationOverLedges" | "EEnvQueryTrace_MAX" */
    open var bTraceComplex: Boolean
    open var bOnlyBlockingHits: Boolean
    open var bCanTraceOnNavMesh: Boolean
    open var bCanTraceOnGeometry: Boolean
    open var bCanDisableTrace: Boolean
    open var bCanProjectDown: Boolean
    open fun clone(): EnvTraceData

    companion object {
        fun C(Other: UObject): EnvTraceData
        fun C(Other: Any): EnvTraceData
    }
}

external open class EnvQueryGenerator_ProjectedPoints : EnvQueryGenerator {
    constructor()
    constructor(Outer: UObject)
    open var ProjectionData: EnvTraceData

    companion object {
        fun Load(ResourceName: String): EnvQueryGenerator_ProjectedPoints
        fun Find(Outer: UObject, ResourceName: String): EnvQueryGenerator_ProjectedPoints
        fun GetDefaultObject(): EnvQueryGenerator_ProjectedPoints
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryGenerator_ProjectedPoints
        fun C(Other: UObject): EnvQueryGenerator_ProjectedPoints
        fun C(Other: Any): EnvQueryGenerator_ProjectedPoints
    }
}

external open class EnvQueryGenerator_Cone : EnvQueryGenerator_ProjectedPoints {
    constructor()
    constructor(Outer: UObject)
    open var AlignedPointsDistance: AIDataProviderFloatValue
    open var ConeDegrees: AIDataProviderFloatValue
    open var AngleStep: AIDataProviderFloatValue
    open var Range: AIDataProviderFloatValue
    open var CenterActor: UnrealEngineClass
    open var bIncludeContextLocation: Boolean

    companion object {
        fun Load(ResourceName: String): EnvQueryGenerator_Cone
        fun Find(Outer: UObject, ResourceName: String): EnvQueryGenerator_Cone
        fun GetDefaultObject(): EnvQueryGenerator_Cone
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryGenerator_Cone
        fun C(Other: UObject): EnvQueryGenerator_Cone
        fun C(Other: Any): EnvQueryGenerator_Cone
    }
}

external open class EnvQueryGenerator_CurrentLocation : EnvQueryGenerator {
    constructor()
    constructor(Outer: UObject)
    open var QueryContext: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): EnvQueryGenerator_CurrentLocation
        fun Find(Outer: UObject, ResourceName: String): EnvQueryGenerator_CurrentLocation
        fun GetDefaultObject(): EnvQueryGenerator_CurrentLocation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryGenerator_CurrentLocation
        fun C(Other: UObject): EnvQueryGenerator_CurrentLocation
        fun C(Other: Any): EnvQueryGenerator_CurrentLocation
    }
}

external open class AIDataProviderIntValue : AIDataProviderTypedValue {
    open var DefaultValue: Number
    override fun clone(): AIDataProviderIntValue

    companion object {
        fun C(Other: UObject): AIDataProviderIntValue
        fun C(Other: Any): AIDataProviderIntValue
    }
}

external object EEnvDirection {
    var TwoPoints: String /* "TwoPoints" */
    var Rotation: String /* "Rotation" */
    var EEnvDirection_MAX: String /* "EEnvDirection_MAX" */
}

external open class EnvDirection {
    open var LineFrom: UnrealEngineClass
    open var LineTo: UnrealEngineClass
    open var Rotation: UnrealEngineClass
    open var DirMode: String /* "TwoPoints" | "Rotation" | "EEnvDirection_MAX" */
    open fun clone(): EnvDirection

    companion object {
        fun C(Other: UObject): EnvDirection
        fun C(Other: Any): EnvDirection
    }
}

external open class EnvQueryGenerator_Donut : EnvQueryGenerator_ProjectedPoints {
    constructor()
    constructor(Outer: UObject)
    open var InnerRadius: AIDataProviderFloatValue
    open var OuterRadius: AIDataProviderFloatValue
    open var NumberOfRings: AIDataProviderIntValue
    open var PointsPerRing: AIDataProviderIntValue
    open var ArcDirection: EnvDirection
    open var ArcAngle: AIDataProviderFloatValue
    open var bUseSpiralPattern: Boolean
    open var Center: UnrealEngineClass
    open var bDefineArc: Boolean

    companion object {
        fun Load(ResourceName: String): EnvQueryGenerator_Donut
        fun Find(Outer: UObject, ResourceName: String): EnvQueryGenerator_Donut
        fun GetDefaultObject(): EnvQueryGenerator_Donut
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryGenerator_Donut
        fun C(Other: UObject): EnvQueryGenerator_Donut
        fun C(Other: Any): EnvQueryGenerator_Donut
    }
}

external object EPointOnCircleSpacingMethod {
    var BySpaceBetween: String /* "BySpaceBetween" */
    var ByNumberOfPoints: String /* "ByNumberOfPoints" */
    var EPointOnCircleSpacingMethod_MAX: String /* "EPointOnCircleSpacingMethod_MAX" */
}

external open class EnvQueryGenerator_OnCircle : EnvQueryGenerator_ProjectedPoints {
    constructor()
    constructor(Outer: UObject)
    open var CircleRadius: AIDataProviderFloatValue
    open var SpaceBetween: AIDataProviderFloatValue
    open var NumberOfPoints: AIDataProviderIntValue
    open var PointOnCircleSpacingMethod: String /* "BySpaceBetween" | "ByNumberOfPoints" | "EPointOnCircleSpacingMethod_MAX" */
    open var ArcDirection: EnvDirection
    open var ArcAngle: AIDataProviderFloatValue
    open var AngleRadians: Number
    open var CircleCenter: UnrealEngineClass
    open var bIgnoreAnyContextActorsWhenGeneratingCircle: Boolean
    open var CircleCenterZOffset: AIDataProviderFloatValue
    open var TraceData: EnvTraceData
    open var bDefineArc: Boolean

    companion object {
        fun Load(ResourceName: String): EnvQueryGenerator_OnCircle
        fun Find(Outer: UObject, ResourceName: String): EnvQueryGenerator_OnCircle
        fun GetDefaultObject(): EnvQueryGenerator_OnCircle
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryGenerator_OnCircle
        fun C(Other: UObject): EnvQueryGenerator_OnCircle
        fun C(Other: Any): EnvQueryGenerator_OnCircle
    }
}

external open class EnvQueryGenerator_SimpleGrid : EnvQueryGenerator_ProjectedPoints {
    constructor()
    constructor(Outer: UObject)
    open var GridSize: AIDataProviderFloatValue
    open var SpaceBetween: AIDataProviderFloatValue
    open var GenerateAround: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): EnvQueryGenerator_SimpleGrid
        fun Find(Outer: UObject, ResourceName: String): EnvQueryGenerator_SimpleGrid
        fun GetDefaultObject(): EnvQueryGenerator_SimpleGrid
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryGenerator_SimpleGrid
        fun C(Other: UObject): EnvQueryGenerator_SimpleGrid
        fun C(Other: Any): EnvQueryGenerator_SimpleGrid
    }
}

external open class EnvQueryGenerator_PathingGrid : EnvQueryGenerator_SimpleGrid {
    constructor()
    constructor(Outer: UObject)
    open var PathToItem: AIDataProviderBoolValue
    open var NavigationFilter: UnrealEngineClass
    open var ScanRangeMultiplier: AIDataProviderFloatValue

    companion object {
        fun Load(ResourceName: String): EnvQueryGenerator_PathingGrid
        fun Find(Outer: UObject, ResourceName: String): EnvQueryGenerator_PathingGrid
        fun GetDefaultObject(): EnvQueryGenerator_PathingGrid
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryGenerator_PathingGrid
        fun C(Other: UObject): EnvQueryGenerator_PathingGrid
        fun C(Other: Any): EnvQueryGenerator_PathingGrid
    }
}

external open class EnvQueryItemType_VectorBase : EnvQueryItemType {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EnvQueryItemType_VectorBase
        fun Find(Outer: UObject, ResourceName: String): EnvQueryItemType_VectorBase
        fun GetDefaultObject(): EnvQueryItemType_VectorBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryItemType_VectorBase
        fun C(Other: UObject): EnvQueryItemType_VectorBase
        fun C(Other: Any): EnvQueryItemType_VectorBase
    }
}

external open class EnvQueryItemType_ActorBase : EnvQueryItemType_VectorBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EnvQueryItemType_ActorBase
        fun Find(Outer: UObject, ResourceName: String): EnvQueryItemType_ActorBase
        fun GetDefaultObject(): EnvQueryItemType_ActorBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryItemType_ActorBase
        fun C(Other: UObject): EnvQueryItemType_ActorBase
        fun C(Other: Any): EnvQueryItemType_ActorBase
    }
}

external open class EnvQueryItemType_Actor : EnvQueryItemType_ActorBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EnvQueryItemType_Actor
        fun Find(Outer: UObject, ResourceName: String): EnvQueryItemType_Actor
        fun GetDefaultObject(): EnvQueryItemType_Actor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryItemType_Actor
        fun C(Other: UObject): EnvQueryItemType_Actor
        fun C(Other: Any): EnvQueryItemType_Actor
    }
}

external open class EnvQueryItemType_Direction : EnvQueryItemType_VectorBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EnvQueryItemType_Direction
        fun Find(Outer: UObject, ResourceName: String): EnvQueryItemType_Direction
        fun GetDefaultObject(): EnvQueryItemType_Direction
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryItemType_Direction
        fun C(Other: UObject): EnvQueryItemType_Direction
        fun C(Other: Any): EnvQueryItemType_Direction
    }
}

external open class EnvQueryItemType_Point : EnvQueryItemType_VectorBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EnvQueryItemType_Point
        fun Find(Outer: UObject, ResourceName: String): EnvQueryItemType_Point
        fun GetDefaultObject(): EnvQueryItemType_Point
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryItemType_Point
        fun C(Other: UObject): EnvQueryItemType_Point
        fun C(Other: Any): EnvQueryItemType_Point
    }
}

external object EEnvTestDistance {
    var Distance3D: String /* "Distance3D" */
    var Distance2D: String /* "Distance2D" */
    var DistanceZ: String /* "DistanceZ" */
    var DistanceAbsoluteZ: String /* "DistanceAbsoluteZ" */
    var EEnvTestDistance_MAX: String /* "EEnvTestDistance_MAX" */
}

external open class EnvQueryTest_Distance : EnvQueryTest {
    constructor()
    constructor(Outer: UObject)
    open var TestMode: String /* "Distance3D" | "Distance2D" | "DistanceZ" | "DistanceAbsoluteZ" | "EEnvTestDistance_MAX" */
    open var DistanceTo: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): EnvQueryTest_Distance
        fun Find(Outer: UObject, ResourceName: String): EnvQueryTest_Distance
        fun GetDefaultObject(): EnvQueryTest_Distance
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryTest_Distance
        fun C(Other: UObject): EnvQueryTest_Distance
        fun C(Other: Any): EnvQueryTest_Distance
    }
}

external object EEnvTestDot {
    var Dot3D: String /* "Dot3D" */
    var Dot2D: String /* "Dot2D" */
    var EEnvTestDot_MAX: String /* "EEnvTestDot_MAX" */
}

external open class EnvQueryTest_Dot : EnvQueryTest {
    constructor()
    constructor(Outer: UObject)
    open var LineA: EnvDirection
    open var LineB: EnvDirection
    open var TestMode: String /* "Dot3D" | "Dot2D" | "EEnvTestDot_MAX" */
    open var bAbsoluteValue: Boolean

    companion object {
        fun Load(ResourceName: String): EnvQueryTest_Dot
        fun Find(Outer: UObject, ResourceName: String): EnvQueryTest_Dot
        fun GetDefaultObject(): EnvQueryTest_Dot
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryTest_Dot
        fun C(Other: UObject): EnvQueryTest_Dot
        fun C(Other: Any): EnvQueryTest_Dot
    }
}

external open class EnvQueryTest_GameplayTags : EnvQueryTest {
    constructor()
    constructor(Outer: UObject)
    open var TagQueryToMatch: GameplayTagQuery
    open var bUpdatedToUseQuery: Boolean
    open var TagsToMatch: String /* "Any" | "All" | "EGameplayContainerMatchType_MAX" */
    open var GameplayTags: GameplayTagContainer

    companion object {
        fun Load(ResourceName: String): EnvQueryTest_GameplayTags
        fun Find(Outer: UObject, ResourceName: String): EnvQueryTest_GameplayTags
        fun GetDefaultObject(): EnvQueryTest_GameplayTags
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryTest_GameplayTags
        fun C(Other: UObject): EnvQueryTest_GameplayTags
        fun C(Other: Any): EnvQueryTest_GameplayTags
    }
}

external object EEnvOverlapShape {
    var Box: String /* "Box" */
    var Sphere: String /* "Sphere" */
    var Capsule: String /* "Capsule" */
    var EEnvOverlapShape_MAX: String /* "EEnvOverlapShape_MAX" */
}

external open class EnvOverlapData {
    open var ExtentX: Number
    open var ExtentY: Number
    open var ExtentZ: Number
    open var ShapeOffset: Vector
    open var OverlapChannel: String /* "ECC_WorldStatic" | "ECC_WorldDynamic" | "ECC_Pawn" | "ECC_Visibility" | "ECC_Camera" | "ECC_PhysicsBody" | "ECC_Vehicle" | "ECC_Destructible" | "ECC_EngineTraceChannel1" | "ECC_EngineTraceChannel2" | "ECC_EngineTraceChannel3" | "ECC_EngineTraceChannel4" | "ECC_EngineTraceChannel5" | "ECC_EngineTraceChannel6" | "ECC_GameTraceChannel1" | "ECC_GameTraceChannel2" | "ECC_GameTraceChannel3" | "ECC_GameTraceChannel4" | "ECC_GameTraceChannel5" | "ECC_GameTraceChannel6" | "ECC_GameTraceChannel7" | "ECC_GameTraceChannel8" | "ECC_GameTraceChannel9" | "ECC_GameTraceChannel10" | "ECC_GameTraceChannel11" | "ECC_GameTraceChannel12" | "ECC_GameTraceChannel13" | "ECC_GameTraceChannel14" | "ECC_GameTraceChannel15" | "ECC_GameTraceChannel16" | "ECC_GameTraceChannel17" | "ECC_GameTraceChannel18" | "ECC_OverlapAll_Deprecated" | "ECC_MAX" */
    open var OverlapShape: String /* "Box" | "Sphere" | "Capsule" | "EEnvOverlapShape_MAX" */
    open var bOnlyBlockingHits: Boolean
    open var bOverlapComplex: Boolean
    open var bSkipOverlapQuerier: Boolean
    open fun clone(): EnvOverlapData

    companion object {
        fun C(Other: UObject): EnvOverlapData
        fun C(Other: Any): EnvOverlapData
    }
}

external open class EnvQueryTest_Overlap : EnvQueryTest {
    constructor()
    constructor(Outer: UObject)
    open var OverlapData: EnvOverlapData

    companion object {
        fun Load(ResourceName: String): EnvQueryTest_Overlap
        fun Find(Outer: UObject, ResourceName: String): EnvQueryTest_Overlap
        fun GetDefaultObject(): EnvQueryTest_Overlap
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryTest_Overlap
        fun C(Other: UObject): EnvQueryTest_Overlap
        fun C(Other: Any): EnvQueryTest_Overlap
    }
}

external object EEnvTestPathfinding {
    var PathExist: String /* "PathExist" */
    var PathCost: String /* "PathCost" */
    var PathLength: String /* "PathLength" */
    var EEnvTestPathfinding_MAX: String /* "EEnvTestPathfinding_MAX" */
}

external open class EnvQueryTest_Pathfinding : EnvQueryTest {
    constructor()
    constructor(Outer: UObject)
    open var TestMode: String /* "PathExist" | "PathCost" | "PathLength" | "EEnvTestPathfinding_MAX" */
    open var Context: UnrealEngineClass
    open var PathFromContext: AIDataProviderBoolValue
    open var SkipUnreachable: AIDataProviderBoolValue
    open var FilterClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): EnvQueryTest_Pathfinding
        fun Find(Outer: UObject, ResourceName: String): EnvQueryTest_Pathfinding
        fun GetDefaultObject(): EnvQueryTest_Pathfinding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryTest_Pathfinding
        fun C(Other: UObject): EnvQueryTest_Pathfinding
        fun C(Other: Any): EnvQueryTest_Pathfinding
    }
}

external open class EnvQueryTest_PathfindingBatch : EnvQueryTest_Pathfinding {
    constructor()
    constructor(Outer: UObject)
    open var ScanRangeMultiplier: AIDataProviderFloatValue

    companion object {
        fun Load(ResourceName: String): EnvQueryTest_PathfindingBatch
        fun Find(Outer: UObject, ResourceName: String): EnvQueryTest_PathfindingBatch
        fun GetDefaultObject(): EnvQueryTest_PathfindingBatch
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryTest_PathfindingBatch
        fun C(Other: UObject): EnvQueryTest_PathfindingBatch
        fun C(Other: Any): EnvQueryTest_PathfindingBatch
    }
}

external open class EnvQueryTest_Project : EnvQueryTest {
    constructor()
    constructor(Outer: UObject)
    open var ProjectionData: EnvTraceData

    companion object {
        fun Load(ResourceName: String): EnvQueryTest_Project
        fun Find(Outer: UObject, ResourceName: String): EnvQueryTest_Project
        fun GetDefaultObject(): EnvQueryTest_Project
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryTest_Project
        fun C(Other: UObject): EnvQueryTest_Project
        fun C(Other: Any): EnvQueryTest_Project
    }
}

external open class EnvQueryTest_Random : EnvQueryTest {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EnvQueryTest_Random
        fun Find(Outer: UObject, ResourceName: String): EnvQueryTest_Random
        fun GetDefaultObject(): EnvQueryTest_Random
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryTest_Random
        fun C(Other: UObject): EnvQueryTest_Random
        fun C(Other: Any): EnvQueryTest_Random
    }
}

external open class EnvQueryTest_Trace : EnvQueryTest {
    constructor()
    constructor(Outer: UObject)
    open var TraceData: EnvTraceData
    open var TraceFromContext: AIDataProviderBoolValue
    open var ItemHeightOffset: AIDataProviderFloatValue
    open var ContextHeightOffset: AIDataProviderFloatValue
    open var Context: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): EnvQueryTest_Trace
        fun Find(Outer: UObject, ResourceName: String): EnvQueryTest_Trace
        fun GetDefaultObject(): EnvQueryTest_Trace
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryTest_Trace
        fun C(Other: UObject): EnvQueryTest_Trace
        fun C(Other: Any): EnvQueryTest_Trace
    }
}

external open class EnvQueryTest_Volume : EnvQueryTest {
    constructor()
    constructor(Outer: UObject)
    open var VolumeContext: UnrealEngineClass
    open var VolumeClass: UnrealEngineClass
    open var bDoComplexVolumeTest: Boolean

    companion object {
        fun Load(ResourceName: String): EnvQueryTest_Volume
        fun Find(Outer: UObject, ResourceName: String): EnvQueryTest_Volume
        fun GetDefaultObject(): EnvQueryTest_Volume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryTest_Volume
        fun C(Other: UObject): EnvQueryTest_Volume
        fun C(Other: Any): EnvQueryTest_Volume
    }
}

external open class EnvQueryTypes : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EnvQueryTypes
        fun Find(Outer: UObject, ResourceName: String): EnvQueryTypes
        fun GetDefaultObject(): EnvQueryTypes
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryTypes
        fun C(Other: UObject): EnvQueryTypes
        fun C(Other: Any): EnvQueryTypes
    }
}

external open class EQSQueryResultSourceInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EQSQueryResultSourceInterface
        fun Find(Outer: UObject, ResourceName: String): EQSQueryResultSourceInterface
        fun GetDefaultObject(): EQSQueryResultSourceInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EQSQueryResultSourceInterface
        fun C(Other: UObject): EQSQueryResultSourceInterface
        fun C(Other: Any): EQSQueryResultSourceInterface
    }
}

external open class EQSRenderingComponent : PrimitiveComponent {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EQSRenderingComponent
        fun Find(Outer: UObject, ResourceName: String): EQSRenderingComponent
        fun GetDefaultObject(): EQSRenderingComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EQSRenderingComponent
        fun C(Other: UObject): EQSRenderingComponent
        fun C(Other: Any): EQSRenderingComponent
    }
}

external object EEnvQueryHightlightMode {
    var All: String /* "All" */
    var Best5Pct: String /* "Best5Pct" */
    var Best25Pct: String /* "Best25Pct" */
    var EEnvQueryHightlightMode_MAX: String /* "EEnvQueryHightlightMode_MAX" */
}

external open class EQSTestingPawn(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Character {
    open var QueryTemplate: EnvQuery
    open var QueryParams: Array<EnvNamedValue>
    open var QueryConfig: Array<AIDynamicParam>
    open var TimeLimitPerStep: Number
    open var StepToDebugDraw: Number
    open var HighlightMode: String /* "All" | "Best5Pct" | "Best25Pct" | "EEnvQueryHightlightMode_MAX" */
    open var bDrawLabels: Boolean
    open var bDrawFailedItems: Boolean
    open var bReRunQueryOnlyOnFinishedMove: Boolean
    open var bShouldBeVisibleInGame: Boolean
    open var bTickDuringGame: Boolean
    open var QueryingMode: String /* "SingleResult" | "RandomBest5Pct" | "RandomBest25Pct" | "AllMatching" | "EEnvQueryRunMode_MAX" */
    open var NavAgentProperties: NavAgentProperties
    open var EdRenderComp: EQSRenderingComponent

    companion object {
        fun GetDefaultObject(): EQSTestingPawn
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EQSTestingPawn
        fun C(Other: UObject): EQSTestingPawn
        fun C(Other: Any): EQSTestingPawn
    }
}

external open class GenericTeamAgentInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GenericTeamAgentInterface
        fun Find(Outer: UObject, ResourceName: String): GenericTeamAgentInterface
        fun GetDefaultObject(): GenericTeamAgentInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GenericTeamAgentInterface
        fun C(Other: UObject): GenericTeamAgentInterface
        fun C(Other: Any): GenericTeamAgentInterface
    }
}

external open class GridPathAIController(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : AIController {
    companion object {
        fun GetDefaultObject(): GridPathAIController
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GridPathAIController
        fun C(Other: UObject): GridPathAIController
        fun C(Other: Any): GridPathAIController
    }
}

external open class GridPathFollowingComponent : PathFollowingComponent {
    constructor()
    constructor(Outer: UObject)
    open var GridManager: NavLocalGridManager

    companion object {
        fun Load(ResourceName: String): GridPathFollowingComponent
        fun Find(Outer: UObject, ResourceName: String): GridPathFollowingComponent
        fun GetDefaultObject(): GridPathFollowingComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GridPathFollowingComponent
        fun C(Other: UObject): GridPathFollowingComponent
        fun C(Other: Any): GridPathFollowingComponent
    }
}

external open class NavFilter_AIControllerDefault : NavigationQueryFilter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NavFilter_AIControllerDefault
        fun Find(Outer: UObject, ResourceName: String): NavFilter_AIControllerDefault
        fun GetDefaultObject(): NavFilter_AIControllerDefault
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavFilter_AIControllerDefault
        fun C(Other: UObject): NavFilter_AIControllerDefault
        fun C(Other: Any): NavFilter_AIControllerDefault
    }
}

external open class NavLinkProxy(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var PointLinks: Array<NavigationLink>
    open var SegmentLinks: Array<NavigationSegmentLink>
    open var SmartLinkComp: NavLinkCustomComponent
    open var bSmartLinkIsRelevant: Boolean
    open var EdRenderComp: NavLinkRenderingComponent
    open var SpriteComponent: BillboardComponent
    open var OnSmartLinkReached: UnrealEngineMulticastDelegate<(MovingActor: Actor, DestinationPoint: Vector) -> Unit>
    open fun SetSmartLinkEnabled(bEnabled: Boolean)
    open fun ResumePathFollowing(Agent: Actor)
    open fun ReceiveSmartLinkReached(Agent: Actor, Destination: Vector)
    open fun IsSmartLinkEnabled(): Boolean
    open fun HasMovingAgents(): Boolean
    open fun CopyEndPointsFromSimpleLink()

    companion object {
        fun GetDefaultObject(): NavLinkProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavLinkProxy
        fun C(Other: UObject): NavLinkProxy
        fun C(Other: Any): NavLinkProxy
    }
}

external open class PathFollowingManager : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PathFollowingManager
        fun Find(Outer: UObject, ResourceName: String): PathFollowingManager
        fun GetDefaultObject(): PathFollowingManager
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PathFollowingManager
        fun C(Other: UObject): PathFollowingManager
        fun C(Other: Any): PathFollowingManager
    }
}

external open class PawnAction_BlueprintBase : PawnAction {
    constructor()
    constructor(Outer: UObject)
    open fun ActionTick(ControlledPawn: Pawn, DeltaSeconds: Number)
    open fun ActionStart(ControlledPawn: Pawn)
    open fun ActionResume(ControlledPawn: Pawn)
    open fun ActionPause(ControlledPawn: Pawn)
    open fun ActionFinished(ControlledPawn: Pawn, WithResult: String /* "NotStarted" | "InProgress" | "Success" | "Failed" | "Aborted" | "EPawnActionResult_MAX" */)

    companion object {
        fun Load(ResourceName: String): PawnAction_BlueprintBase
        fun Find(Outer: UObject, ResourceName: String): PawnAction_BlueprintBase
        fun GetDefaultObject(): PawnAction_BlueprintBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PawnAction_BlueprintBase
        fun C(Other: UObject): PawnAction_BlueprintBase
        fun C(Other: Any): PawnAction_BlueprintBase
    }
}

external open class PawnAction_Move : PawnAction {
    constructor()
    constructor(Outer: UObject)
    open var GoalActor: Actor
    open var GoalLocation: Vector
    open var AcceptableRadius: Number
    open var FilterClass: UnrealEngineClass
    open var bAllowStrafe: Boolean
    open var bFinishOnOverlap: Boolean
    open var bUsePathfinding: Boolean
    open var bAllowPartialPath: Boolean
    open var bProjectGoalToNavigation: Boolean
    open var bUpdatePathToGoal: Boolean
    open var bAbortChildActionOnPathChange: Boolean

    companion object {
        fun Load(ResourceName: String): PawnAction_Move
        fun Find(Outer: UObject, ResourceName: String): PawnAction_Move
        fun GetDefaultObject(): PawnAction_Move
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PawnAction_Move
        fun C(Other: UObject): PawnAction_Move
        fun C(Other: Any): PawnAction_Move
    }
}

external object EPawnActionFailHandling {
    var RequireSuccess: String /* "RequireSuccess" */
    var IgnoreFailure: String /* "IgnoreFailure" */
    var EPawnActionFailHandling_MAX: String /* "EPawnActionFailHandling_MAX" */
}

external open class PawnAction_Repeat : PawnAction {
    constructor()
    constructor(Outer: UObject)
    open var ActionToRepeat: PawnAction
    open var RecentActionCopy: PawnAction
    open var ChildFailureHandlingMode: String /* "RequireSuccess" | "IgnoreFailure" | "EPawnActionFailHandling_MAX" */

    companion object {
        fun Load(ResourceName: String): PawnAction_Repeat
        fun Find(Outer: UObject, ResourceName: String): PawnAction_Repeat
        fun GetDefaultObject(): PawnAction_Repeat
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PawnAction_Repeat
        fun C(Other: UObject): PawnAction_Repeat
        fun C(Other: Any): PawnAction_Repeat
    }
}

external open class PawnAction_Sequence : PawnAction {
    constructor()
    constructor(Outer: UObject)
    open var ActionSequence: Array<PawnAction>
    open var ChildFailureHandlingMode: String /* "RequireSuccess" | "IgnoreFailure" | "EPawnActionFailHandling_MAX" */
    open var RecentActionCopy: PawnAction

    companion object {
        fun Load(ResourceName: String): PawnAction_Sequence
        fun Find(Outer: UObject, ResourceName: String): PawnAction_Sequence
        fun GetDefaultObject(): PawnAction_Sequence
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PawnAction_Sequence
        fun C(Other: UObject): PawnAction_Sequence
        fun C(Other: Any): PawnAction_Sequence
    }
}

external open class PawnAction_Wait : PawnAction {
    constructor()
    constructor(Outer: UObject)
    open var TimeToWait: Number

    companion object {
        fun Load(ResourceName: String): PawnAction_Wait
        fun Find(Outer: UObject, ResourceName: String): PawnAction_Wait
        fun GetDefaultObject(): PawnAction_Wait
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PawnAction_Wait
        fun C(Other: UObject): PawnAction_Wait
        fun C(Other: Any): PawnAction_Wait
    }
}

external open class PawnSensingComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var HearingThreshold: Number
    open var LOSHearingThreshold: Number
    open var SightRadius: Number
    open var SensingInterval: Number
    open var HearingMaxSoundAge: Number
    open var bEnableSensingUpdates: Boolean
    open var bOnlySensePlayers: Boolean
    open var bSeePawns: Boolean
    open var bHearNoises: Boolean
    open var OnSeePawn: UnrealEngineMulticastDelegate<(Pawn: Pawn) -> Unit>
    open var OnHearNoise: UnrealEngineMulticastDelegate<(Instigator: Pawn, Location: Vector, Volume: Number) -> Unit>
    open var PeripheralVisionAngle: Number
    open var PeripheralVisionCosine: Number
    open fun SetSensingUpdatesEnabled(bEnabled: Boolean)
    open fun SetSensingInterval(NewSensingInterval: Number)
    open fun SetPeripheralVisionAngle(NewPeripheralVisionAngle: Number)
    open fun GetPeripheralVisionCosine(): Number
    open fun GetPeripheralVisionAngle(): Number

    companion object {
        fun Load(ResourceName: String): PawnSensingComponent
        fun Find(Outer: UObject, ResourceName: String): PawnSensingComponent
        fun GetDefaultObject(): PawnSensingComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PawnSensingComponent
        fun C(Other: UObject): PawnSensingComponent
        fun C(Other: Any): PawnSensingComponent
    }
}

external open class VisualLoggerExtension : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): VisualLoggerExtension
        fun Find(Outer: UObject, ResourceName: String): VisualLoggerExtension
        fun GetDefaultObject(): VisualLoggerExtension
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VisualLoggerExtension
        fun C(Other: UObject): VisualLoggerExtension
        fun C(Other: Any): VisualLoggerExtension
    }
}

external open class VariantDependency {
    open var VariantSet: VariantSet
    open var Variant: Variant
    open var bEnabled: Boolean
    open fun clone(): VariantDependency

    companion object {
        fun C(Other: UObject): VariantDependency
        fun C(Other: Any): VariantDependency
    }
}

external open class CapturedPropSegment {
    open var PropertyName: String
    open var PropertyIndex: Number
    open var ComponentName: String
    open fun clone(): CapturedPropSegment

    companion object {
        fun C(Other: UObject): CapturedPropSegment
        fun C(Other: Any): CapturedPropSegment
    }
}

external object EPropertyValueCategory {
    var Undefined: String /* "Undefined" */
    var Generic: String /* "Generic" */
    var RelativeLocation: String /* "RelativeLocation" */
    var RelativeRotation: String /* "RelativeRotation" */
    var RelativeScale3D: String /* "RelativeScale3D" */
    var Visibility: String /* "Visibility" */
    var Material: String /* "Material" */
    var Color: String /* "Color" */
    var Option: String /* "Option" */
    var EPropertyValueCategory_MAX: String /* "EPropertyValueCategory_MAX" */
}

external open class PropertyValue : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Properties: Array<Any>
    open var PropertyIndices: Array<Number>
    open var CapturedPropSegments: Array<CapturedPropSegment>
    open var FullDisplayString: String
    open var PropertySetterName: String
    open var PropertySetterParameterDefaults: Any
    open var bHasRecordedData: Boolean
    open var LeafPropertyClass: UnrealEngineClass
    open var ValueBytes: Array<Number>
    open var PropCategory: String /* "Undefined" | "Generic" | "RelativeLocation" | "RelativeRotation" | "RelativeScale3D" | "Visibility" | "Material" | "Color" | "Option" | "EPropertyValueCategory_MAX" */
    open var DisplayOrder: Any
    open fun HasRecordedData(): Boolean
    open fun GetPropertyTooltip(): String
    open fun GetFullDisplayString(): String

    companion object {
        fun Load(ResourceName: String): PropertyValue
        fun Find(Outer: UObject, ResourceName: String): PropertyValue
        fun GetDefaultObject(): PropertyValue
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PropertyValue
        fun C(Other: UObject): PropertyValue
        fun C(Other: Any): PropertyValue
    }
}

external open class FunctionCaller {
    open var FunctionName: String
    open var FunctionEntry: Any
    open var DisplayOrder: Any
    open fun clone(): FunctionCaller

    companion object {
        fun C(Other: UObject): FunctionCaller
        fun C(Other: Any): FunctionCaller
    }
}

external open class VariantObjectBinding : UObject {
    constructor()
    constructor(Outer: UObject)
    open var CachedActorLabel: String
    open var ObjectPtr: SoftObjectPath
    open var LazyObjectPtr: Any
    open var CapturedProperties: Array<PropertyValue>
    open var FunctionCallers: Array<FunctionCaller>

    companion object {
        fun Load(ResourceName: String): VariantObjectBinding
        fun Find(Outer: UObject, ResourceName: String): VariantObjectBinding
        fun GetDefaultObject(): VariantObjectBinding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VariantObjectBinding
        fun C(Other: UObject): VariantObjectBinding
        fun C(Other: Any): VariantObjectBinding
    }
}

external interface `T$749` {
    var Dependency: VariantDependency
}

external interface `T$750` {
    var Dependency: VariantDependency
    var `$`: Number
}

external open class Variant : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Dependencies: Array<VariantDependency>
    open var DisplayText: String
    open var ObjectBindings: Array<VariantObjectBinding>
    open var Thumbnail: Texture2D
    open fun SwitchOn()
    open fun SetThumbnailFromTexture(NewThumbnail: Texture2D)
    open fun SetThumbnailFromFile(FilePath: String)
    open fun SetThumbnailFromEditorViewport()
    open fun SetThumbnailFromCamera(WorldContextObject: UObject, CameraTransform: Transform, FOVDegrees: Number, MinZ: Number, Gamma: Number)
    open fun SetDisplayText(NewDisplayText: String)
    open fun SetDependency(index: Number, Dependency: VariantDependency = definedExternally): `T$749`
    open fun IsActive(): Boolean
    open fun GetThumbnail(): Texture2D
    open fun GetParent(): VariantSet
    open fun GetNumDependencies(): Number
    open fun GetNumActors(): Number
    open fun GetDisplayText(): String
    open fun GetDependents(LevelVariantSets: LevelVariantSets, bOnlyEnabledDependencies: Boolean): Array<Variant>
    open fun GetDependency(index: Number): VariantDependency
    open fun GetActor(ActorIndex: Number): Actor
    open fun DeleteDependency(index: Number)
    open fun AddDependency(Dependency: VariantDependency = definedExternally): `T$750`

    companion object {
        fun Load(ResourceName: String): Variant
        fun Find(Outer: UObject, ResourceName: String): Variant
        fun GetDefaultObject(): Variant
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Variant
        fun C(Other: UObject): Variant
        fun C(Other: Any): Variant
    }
}

external open class VariantSet : UObject {
    constructor()
    constructor(Outer: UObject)
    open var DisplayText: String
    open var bExpanded: Boolean
    open var Variants: Array<Variant>
    open var Thumbnail: Texture2D
    open fun SetThumbnailFromTexture(NewThumbnail: Texture2D)
    open fun SetThumbnailFromFile(FilePath: String)
    open fun SetThumbnailFromEditorViewport()
    open fun SetThumbnailFromCamera(WorldContextObject: UObject, CameraTransform: Transform, FOVDegrees: Number, MinZ: Number, Gamma: Number)
    open fun SetDisplayText(NewDisplayText: String)
    open fun GetVariantByName(VariantName: String): Variant
    open fun GetVariant(VariantIndex: Number): Variant
    open fun GetThumbnail(): Texture2D
    open fun GetParent(): LevelVariantSets
    open fun GetNumVariants(): Number
    open fun GetDisplayText(): String

    companion object {
        fun Load(ResourceName: String): VariantSet
        fun Find(Outer: UObject, ResourceName: String): VariantSet
        fun GetDefaultObject(): VariantSet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VariantSet
        fun C(Other: UObject): VariantSet
        fun C(Other: Any): VariantSet
    }
}

external open class LevelVariantSets : UObject {
    constructor()
    constructor(Outer: UObject)
    open var DirectorBlueprint: UObject
    open var DirectorClass: UnrealEngineClass
    open var VariantSets: Array<VariantSet>
    open fun GetVariantSetByName(VariantSetName: String): VariantSet
    open fun GetVariantSet(VariantSetIndex: Number): VariantSet
    open fun GetNumVariantSets(): Number

    companion object {
        fun Load(ResourceName: String): LevelVariantSets
        fun Find(Outer: UObject, ResourceName: String): LevelVariantSets
        fun GetDefaultObject(): LevelVariantSets
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelVariantSets
        fun C(Other: UObject): LevelVariantSets
        fun C(Other: Any): LevelVariantSets
    }
}

external open class LevelVariantSetsActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var LevelVariantSets: SoftObjectPath
    open var DirectorInstances: Any
    open fun SwitchOnVariantByName(VariantSetName: String, VariantName: String): Boolean
    open fun SwitchOnVariantByIndex(VariantSetIndex: Number, VariantIndex: Number): Boolean
    open fun SetLevelVariantSets(InVariantSets: LevelVariantSets)
    open fun GetLevelVariantSets(bLoad: Boolean): LevelVariantSets

    companion object {
        fun GetDefaultObject(): LevelVariantSetsActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelVariantSetsActor
        fun C(Other: UObject): LevelVariantSetsActor
        fun C(Other: Any): LevelVariantSetsActor
    }
}

external open class LevelVariantSetsFunctionDirector : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LevelVariantSetsFunctionDirector
        fun Find(Outer: UObject, ResourceName: String): LevelVariantSetsFunctionDirector
        fun GetDefaultObject(): LevelVariantSetsFunctionDirector
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelVariantSetsFunctionDirector
        fun C(Other: UObject): LevelVariantSetsFunctionDirector
        fun C(Other: Any): LevelVariantSetsFunctionDirector
    }
}

external open class PropertyValueTransform : PropertyValue {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PropertyValueTransform
        fun Find(Outer: UObject, ResourceName: String): PropertyValueTransform
        fun GetDefaultObject(): PropertyValueTransform
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PropertyValueTransform
        fun C(Other: UObject): PropertyValueTransform
        fun C(Other: Any): PropertyValueTransform
    }
}

external open class PropertyValueVisibility : PropertyValue {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PropertyValueVisibility
        fun Find(Outer: UObject, ResourceName: String): PropertyValueVisibility
        fun GetDefaultObject(): PropertyValueVisibility
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PropertyValueVisibility
        fun C(Other: UObject): PropertyValueVisibility
        fun C(Other: Any): PropertyValueVisibility
    }
}

external open class PropertyValueColor : PropertyValue {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PropertyValueColor
        fun Find(Outer: UObject, ResourceName: String): PropertyValueColor
        fun GetDefaultObject(): PropertyValueColor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PropertyValueColor
        fun C(Other: UObject): PropertyValueColor
        fun C(Other: Any): PropertyValueColor
    }
}

external open class PropertyValueMaterial : PropertyValue {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PropertyValueMaterial
        fun Find(Outer: UObject, ResourceName: String): PropertyValueMaterial
        fun GetDefaultObject(): PropertyValueMaterial
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PropertyValueMaterial
        fun C(Other: UObject): PropertyValueMaterial
        fun C(Other: Any): PropertyValueMaterial
    }
}

external open class PropertyValueOption : PropertyValue {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PropertyValueOption
        fun Find(Outer: UObject, ResourceName: String): PropertyValueOption
        fun GetDefaultObject(): PropertyValueOption
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PropertyValueOption
        fun C(Other: UObject): PropertyValueOption
        fun C(Other: Any): PropertyValueOption
    }
}

external open class PropertyValueSoftObject : PropertyValue {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PropertyValueSoftObject
        fun Find(Outer: UObject, ResourceName: String): PropertyValueSoftObject
        fun GetDefaultObject(): PropertyValueSoftObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PropertyValueSoftObject
        fun C(Other: UObject): PropertyValueSoftObject
        fun C(Other: Any): PropertyValueSoftObject
    }
}

external open class SwitchActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var SceneComponent: SceneComponent
    open var LastSelectedOption: Number
    open fun SelectOption(OptionIndex: Number)
    open fun GetSelectedOption(): Number
    open fun GetOptions(): Array<Actor>

    companion object {
        fun GetDefaultObject(): SwitchActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SwitchActor
        fun C(Other: UObject): SwitchActor
        fun C(Other: Any): SwitchActor
    }
}

external open class DatasmithObjectTemplate : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DatasmithObjectTemplate
        fun Find(Outer: UObject, ResourceName: String): DatasmithObjectTemplate
        fun GetDefaultObject(): DatasmithObjectTemplate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithObjectTemplate
        fun C(Other: UObject): DatasmithObjectTemplate
        fun C(Other: Any): DatasmithObjectTemplate
    }
}

external open class DatasmithActorTemplate : DatasmithObjectTemplate {
    constructor()
    constructor(Outer: UObject)
    open var Layers: Any
    open var Tags: Any

    companion object {
        fun Load(ResourceName: String): DatasmithActorTemplate
        fun Find(Outer: UObject, ResourceName: String): DatasmithActorTemplate
        fun GetDefaultObject(): DatasmithActorTemplate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithActorTemplate
        fun C(Other: UObject): DatasmithActorTemplate
        fun C(Other: Any): DatasmithActorTemplate
    }
}

external open class DatasmithAdditionalData : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DatasmithAdditionalData
        fun Find(Outer: UObject, ResourceName: String): DatasmithAdditionalData
        fun GetDefaultObject(): DatasmithAdditionalData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithAdditionalData
        fun C(Other: UObject): DatasmithAdditionalData
        fun C(Other: Any): DatasmithAdditionalData
    }
}

external object EDatasmithAreaLightActorType {
    var Point: String /* "Point" */
    var Spot: String /* "Spot" */
    var Rect: String /* "Rect" */
    var EDatasmithAreaLightActorType_MAX: String /* "EDatasmithAreaLightActorType_MAX" */
}

external object EDatasmithAreaLightActorShape {
    var Rectangle: String /* "Rectangle" */
    var Disc: String /* "Disc" */
    var Sphere: String /* "Sphere" */
    var Cylinder: String /* "Cylinder" */
    var None: String /* "None" */
    var EDatasmithAreaLightActorShape_MAX: String /* "EDatasmithAreaLightActorShape_MAX" */
}

external open class DatasmithAreaLightActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var Mobility: String /* "Static" | "Stationary" | "Movable" | "EComponentMobility_MAX" */
    open var LightType: String /* "Point" | "Spot" | "Rect" | "EDatasmithAreaLightActorType_MAX" */
    open var LightShape: String /* "Rectangle" | "Disc" | "Sphere" | "Cylinder" | "None" | "EDatasmithAreaLightActorShape_MAX" */
    open var Dimensions: Vector2D
    open var Intensity: Number
    open var IntensityUnits: String /* "Unitless" | "Candelas" | "Lumens" | "ELightUnits_MAX" */
    open var Color: LinearColor
    open var Temperature: Number
    open var IESTexture: TextureLightProfile
    open var bUseIESBrightness: Boolean
    open var IESBrightnessScale: Number
    open var Rotation: Rotator
    open var SourceRadius: Number
    open var SourceLength: Number
    open var AttenuationRadius: Number
    open var SpotlightInnerAngle: Number
    open var SpotlightOuterAngle: Number

    companion object {
        fun GetDefaultObject(): DatasmithAreaLightActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithAreaLightActor
        fun C(Other: UObject): DatasmithAreaLightActor
        fun C(Other: Any): DatasmithAreaLightActor
    }
}

external open class DatasmithAreaLightActorTemplate : DatasmithObjectTemplate {
    constructor()
    constructor(Outer: UObject)
    open var LightType: String /* "Point" | "Spot" | "Rect" | "EDatasmithAreaLightActorType_MAX" */
    open var LightShape: String /* "Rectangle" | "Disc" | "Sphere" | "Cylinder" | "None" | "EDatasmithAreaLightActorShape_MAX" */
    open var Dimensions: Vector2D
    open var Color: LinearColor
    open var Intensity: Number
    open var IntensityUnits: String /* "Unitless" | "Candelas" | "Lumens" | "ELightUnits_MAX" */
    open var Temperature: Number
    open var IESTexture: TextureLightProfile
    open var bUseIESBrightness: Boolean
    open var IESBrightnessScale: Number
    open var Rotation: Rotator
    open var SourceRadius: Number
    open var SourceLength: Number
    open var AttenuationRadius: Number

    companion object {
        fun Load(ResourceName: String): DatasmithAreaLightActorTemplate
        fun Find(Outer: UObject, ResourceName: String): DatasmithAreaLightActorTemplate
        fun GetDefaultObject(): DatasmithAreaLightActorTemplate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithAreaLightActorTemplate
        fun C(Other: UObject): DatasmithAreaLightActorTemplate
        fun C(Other: Any): DatasmithAreaLightActorTemplate
    }
}

external open class DatasmithAssetImportOptions {
    open var PackagePath: String
    open fun clone(): DatasmithAssetImportOptions

    companion object {
        fun C(Other: UObject): DatasmithAssetImportOptions
        fun C(Other: Any): DatasmithAssetImportOptions
    }
}

external open class DatasmithAssetImportData : AssetImportData {
    constructor()
    constructor(Outer: UObject)
    open var AssetImportOptions: DatasmithAssetImportOptions
    open var AdditionalData: Array<DatasmithAdditionalData>

    companion object {
        fun Load(ResourceName: String): DatasmithAssetImportData
        fun Find(Outer: UObject, ResourceName: String): DatasmithAssetImportData
        fun GetDefaultObject(): DatasmithAssetImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithAssetImportData
        fun C(Other: UObject): DatasmithAssetImportData
        fun C(Other: Any): DatasmithAssetImportData
    }
}

external object EDatasmithImportLightmapMin {
    var LIGHTMAP_16: String /* "LIGHTMAP_16" */
    var LIGHTMAP_32: String /* "LIGHTMAP_32" */
    var LIGHTMAP_64: String /* "LIGHTMAP_64" */
    var LIGHTMAP_128: String /* "LIGHTMAP_128" */
    var LIGHTMAP_256: String /* "LIGHTMAP_256" */
    var LIGHTMAP_512: String /* "LIGHTMAP_512" */
    var LIGHTMAP_MAX: String /* "LIGHTMAP_MAX" */
}

external object EDatasmithImportLightmapMax {
    var LIGHTMAP_64: String /* "LIGHTMAP_64" */
    var LIGHTMAP_128: String /* "LIGHTMAP_128" */
    var LIGHTMAP_256: String /* "LIGHTMAP_256" */
    var LIGHTMAP_512: String /* "LIGHTMAP_512" */
    var LIGHTMAP_1024: String /* "LIGHTMAP_1024" */
    var LIGHTMAP_2048: String /* "LIGHTMAP_2048" */
    var LIGHTMAP_4096: String /* "LIGHTMAP_4096" */
    var LIGHTMAP_MAX: String /* "LIGHTMAP_MAX" */
}

external open class DatasmithStaticMeshImportOptions {
    open var MinLightmapResolution: String /* "LIGHTMAP_16" | "LIGHTMAP_32" | "LIGHTMAP_64" | "LIGHTMAP_128" | "LIGHTMAP_256" | "LIGHTMAP_512" | "LIGHTMAP_MAX" */
    open var MaxLightmapResolution: String /* "LIGHTMAP_64" | "LIGHTMAP_128" | "LIGHTMAP_256" | "LIGHTMAP_512" | "LIGHTMAP_1024" | "LIGHTMAP_2048" | "LIGHTMAP_4096" | "LIGHTMAP_MAX" */
    open var bGenerateLightmapUVs: Boolean
    open var bRemoveDegenerates: Boolean
    open fun clone(): DatasmithStaticMeshImportOptions

    companion object {
        fun C(Other: UObject): DatasmithStaticMeshImportOptions
        fun C(Other: Any): DatasmithStaticMeshImportOptions
    }
}

external open class DatasmithStaticMeshImportData : DatasmithAssetImportData {
    constructor()
    constructor(Outer: UObject)
    open var ImportOptions: DatasmithStaticMeshImportOptions

    companion object {
        fun Load(ResourceName: String): DatasmithStaticMeshImportData
        fun Find(Outer: UObject, ResourceName: String): DatasmithStaticMeshImportData
        fun GetDefaultObject(): DatasmithStaticMeshImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithStaticMeshImportData
        fun C(Other: UObject): DatasmithStaticMeshImportData
        fun C(Other: Any): DatasmithStaticMeshImportData
    }
}

external object EDatasmithCADStitchingTechnique {
    var StitchingNone: String /* "StitchingNone" */
    var StitchingHeal: String /* "StitchingHeal" */
    var StitchingSew: String /* "StitchingSew" */
    var EDatasmithCADStitchingTechnique_MAX: String /* "EDatasmithCADStitchingTechnique_MAX" */
}

external open class DatasmithTessellationOptions {
    open var ChordTolerance: Number
    open var MaxEdgeLength: Number
    open var NormalTolerance: Number
    open var StitchingTechnique: String /* "StitchingNone" | "StitchingHeal" | "StitchingSew" | "EDatasmithCADStitchingTechnique_MAX" */
    open fun clone(): DatasmithTessellationOptions

    companion object {
        fun C(Other: UObject): DatasmithTessellationOptions
        fun C(Other: Any): DatasmithTessellationOptions
    }
}

external open class DatasmithStaticMeshCADImportData : DatasmithStaticMeshImportData {
    constructor()
    constructor(Outer: UObject)
    open var TessellationOptions: DatasmithTessellationOptions
    open var ModelUnit: Any
    open var ModelTolerance: Any
    open var ResourcePath: String
    open var ResourceFilename: String
    open var AuxiliaryFilenames: Array<String>

    companion object {
        fun Load(ResourceName: String): DatasmithStaticMeshCADImportData
        fun Find(Outer: UObject, ResourceName: String): DatasmithStaticMeshCADImportData
        fun GetDefaultObject(): DatasmithStaticMeshCADImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithStaticMeshCADImportData
        fun C(Other: UObject): DatasmithStaticMeshCADImportData
        fun C(Other: Any): DatasmithStaticMeshCADImportData
    }
}

external object EDatasmithImportScene {
    var NewLevel: String /* "NewLevel" */
    var CurrentLevel: String /* "CurrentLevel" */
    var AssetsOnly: String /* "AssetsOnly" */
    var EDatasmithImportScene_MAX: String /* "EDatasmithImportScene_MAX" */
}

external open class DatasmithImportBaseOptions {
    open var SceneHandling: String /* "NewLevel" | "CurrentLevel" | "AssetsOnly" | "EDatasmithImportScene_MAX" */
    open var bIncludeGeometry: Boolean
    open var bIncludeMaterial: Boolean
    open var bIncludeLight: Boolean
    open var bIncludeCamera: Boolean
    open var bIncludeAnimation: Boolean
    open var AssetOptions: DatasmithAssetImportOptions
    open var StaticMeshOptions: DatasmithStaticMeshImportOptions
    open fun clone(): DatasmithImportBaseOptions

    companion object {
        fun C(Other: UObject): DatasmithImportBaseOptions
        fun C(Other: Any): DatasmithImportBaseOptions
    }
}

external open class DatasmithSceneImportData : AssetImportData {
    constructor()
    constructor(Outer: UObject)
    open var BaseOptions: DatasmithImportBaseOptions

    companion object {
        fun Load(ResourceName: String): DatasmithSceneImportData
        fun Find(Outer: UObject, ResourceName: String): DatasmithSceneImportData
        fun GetDefaultObject(): DatasmithSceneImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithSceneImportData
        fun C(Other: UObject): DatasmithSceneImportData
        fun C(Other: Any): DatasmithSceneImportData
    }
}

external open class DatasmithOptionsBase : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DatasmithOptionsBase
        fun Find(Outer: UObject, ResourceName: String): DatasmithOptionsBase
        fun GetDefaultObject(): DatasmithOptionsBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithOptionsBase
        fun C(Other: UObject): DatasmithOptionsBase
        fun C(Other: Any): DatasmithOptionsBase
    }
}

external open class DatasmithTranslatedSceneImportData : DatasmithSceneImportData {
    constructor()
    constructor(Outer: UObject)
    open var AdditionalOptions: Array<DatasmithOptionsBase>

    companion object {
        fun Load(ResourceName: String): DatasmithTranslatedSceneImportData
        fun Find(Outer: UObject, ResourceName: String): DatasmithTranslatedSceneImportData
        fun GetDefaultObject(): DatasmithTranslatedSceneImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithTranslatedSceneImportData
        fun C(Other: UObject): DatasmithTranslatedSceneImportData
        fun C(Other: Any): DatasmithTranslatedSceneImportData
    }
}

external open class DatasmithCADImportSceneData : DatasmithSceneImportData {
    constructor()
    constructor(Outer: UObject)
    open var TessellationOptions: DatasmithTessellationOptions

    companion object {
        fun Load(ResourceName: String): DatasmithCADImportSceneData
        fun Find(Outer: UObject, ResourceName: String): DatasmithCADImportSceneData
        fun GetDefaultObject(): DatasmithCADImportSceneData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithCADImportSceneData
        fun C(Other: UObject): DatasmithCADImportSceneData
        fun C(Other: Any): DatasmithCADImportSceneData
    }
}

external open class DatasmithMDLSceneImportData : DatasmithSceneImportData {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DatasmithMDLSceneImportData
        fun Find(Outer: UObject, ResourceName: String): DatasmithMDLSceneImportData
        fun GetDefaultObject(): DatasmithMDLSceneImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithMDLSceneImportData
        fun C(Other: UObject): DatasmithMDLSceneImportData
        fun C(Other: Any): DatasmithMDLSceneImportData
    }
}

external open class DatasmithGLTFSceneImportData : DatasmithSceneImportData {
    constructor()
    constructor(Outer: UObject)
    open var Generator: String
    open var Version: Number
    open var Author: String
    open var License: String
    open var Source: String

    companion object {
        fun Load(ResourceName: String): DatasmithGLTFSceneImportData
        fun Find(Outer: UObject, ResourceName: String): DatasmithGLTFSceneImportData
        fun GetDefaultObject(): DatasmithGLTFSceneImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithGLTFSceneImportData
        fun C(Other: UObject): DatasmithGLTFSceneImportData
        fun C(Other: Any): DatasmithGLTFSceneImportData
    }
}

external open class DatasmithStaticMeshGLTFImportData : DatasmithStaticMeshImportData {
    constructor()
    constructor(Outer: UObject)
    open var SourceMeshName: String

    companion object {
        fun Load(ResourceName: String): DatasmithStaticMeshGLTFImportData
        fun Find(Outer: UObject, ResourceName: String): DatasmithStaticMeshGLTFImportData
        fun GetDefaultObject(): DatasmithStaticMeshGLTFImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithStaticMeshGLTFImportData
        fun C(Other: UObject): DatasmithStaticMeshGLTFImportData
        fun C(Other: Any): DatasmithStaticMeshGLTFImportData
    }
}

external open class DatasmithFBXSceneImportData : DatasmithSceneImportData {
    constructor()
    constructor(Outer: UObject)
    open var bGenerateLightmapUVs: Boolean
    open var TexturesDir: String
    open var IntermediateSerialization: Number
    open var bColorizeMaterials: Boolean

    companion object {
        fun Load(ResourceName: String): DatasmithFBXSceneImportData
        fun Find(Outer: UObject, ResourceName: String): DatasmithFBXSceneImportData
        fun GetDefaultObject(): DatasmithFBXSceneImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithFBXSceneImportData
        fun C(Other: UObject): DatasmithFBXSceneImportData
        fun C(Other: Any): DatasmithFBXSceneImportData
    }
}

external open class DatasmithDeltaGenAssetImportData : DatasmithAssetImportData {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DatasmithDeltaGenAssetImportData
        fun Find(Outer: UObject, ResourceName: String): DatasmithDeltaGenAssetImportData
        fun GetDefaultObject(): DatasmithDeltaGenAssetImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithDeltaGenAssetImportData
        fun C(Other: UObject): DatasmithDeltaGenAssetImportData
        fun C(Other: Any): DatasmithDeltaGenAssetImportData
    }
}

external open class DatasmithDeltaGenSceneImportData : DatasmithFBXSceneImportData {
    constructor()
    constructor(Outer: UObject)
    open var bMergeNodes: Boolean
    open var bOptimizeDuplicatedNodes: Boolean
    open var bRemoveInvisibleNodes: Boolean
    open var bSimplifyNodeHierarchy: Boolean
    open var bImportVar: Boolean
    open var VarPath: String
    open var bImportPos: Boolean
    open var PosPath: String
    open var bImportTml: Boolean
    open var TmlPath: String

    companion object {
        fun Load(ResourceName: String): DatasmithDeltaGenSceneImportData
        fun Find(Outer: UObject, ResourceName: String): DatasmithDeltaGenSceneImportData
        fun GetDefaultObject(): DatasmithDeltaGenSceneImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithDeltaGenSceneImportData
        fun C(Other: UObject): DatasmithDeltaGenSceneImportData
        fun C(Other: Any): DatasmithDeltaGenSceneImportData
    }
}

external open class DatasmithVREDAssetImportData : DatasmithAssetImportData {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DatasmithVREDAssetImportData
        fun Find(Outer: UObject, ResourceName: String): DatasmithVREDAssetImportData
        fun GetDefaultObject(): DatasmithVREDAssetImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithVREDAssetImportData
        fun C(Other: UObject): DatasmithVREDAssetImportData
        fun C(Other: Any): DatasmithVREDAssetImportData
    }
}

external open class DatasmithVREDSceneImportData : DatasmithFBXSceneImportData {
    constructor()
    constructor(Outer: UObject)
    open var bMergeNodes: Boolean
    open var bOptimizeDuplicatedNodes: Boolean
    open var bImportMats: Boolean
    open var MatsPath: String
    open var bImportVar: Boolean
    open var bCleanVar: Boolean
    open var VarPath: String
    open var bImportLightInfo: Boolean
    open var LightInfoPath: String
    open var bImportClipInfo: Boolean
    open var ClipInfoPath: String

    companion object {
        fun Load(ResourceName: String): DatasmithVREDSceneImportData
        fun Find(Outer: UObject, ResourceName: String): DatasmithVREDSceneImportData
        fun GetDefaultObject(): DatasmithVREDSceneImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithVREDSceneImportData
        fun C(Other: UObject): DatasmithVREDSceneImportData
        fun C(Other: Any): DatasmithVREDSceneImportData
    }
}

external open class DatasmithIFCSceneImportData : DatasmithSceneImportData {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DatasmithIFCSceneImportData
        fun Find(Outer: UObject, ResourceName: String): DatasmithIFCSceneImportData
        fun GetDefaultObject(): DatasmithIFCSceneImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithIFCSceneImportData
        fun C(Other: UObject): DatasmithIFCSceneImportData
        fun C(Other: Any): DatasmithIFCSceneImportData
    }
}

external open class DatasmithStaticMeshIFCImportData : DatasmithStaticMeshImportData {
    constructor()
    constructor(Outer: UObject)
    open var SourceGlobalId: String

    companion object {
        fun Load(ResourceName: String): DatasmithStaticMeshIFCImportData
        fun Find(Outer: UObject, ResourceName: String): DatasmithStaticMeshIFCImportData
        fun GetDefaultObject(): DatasmithStaticMeshIFCImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithStaticMeshIFCImportData
        fun C(Other: UObject): DatasmithStaticMeshIFCImportData
        fun C(Other: Any): DatasmithStaticMeshIFCImportData
    }
}

external open class DatasmithCameraLookatTrackingSettingsTemplate {
    open var bEnableLookAtTracking: Boolean
    open var bAllowRoll: Boolean
    open var ActorToTrack: Actor
    open fun clone(): DatasmithCameraLookatTrackingSettingsTemplate

    companion object {
        fun C(Other: UObject): DatasmithCameraLookatTrackingSettingsTemplate
        fun C(Other: Any): DatasmithCameraLookatTrackingSettingsTemplate
    }
}

external open class DatasmithCineCameraActorTemplate : DatasmithObjectTemplate {
    constructor()
    constructor(Outer: UObject)
    open var LookatTrackingSettings: DatasmithCameraLookatTrackingSettingsTemplate

    companion object {
        fun Load(ResourceName: String): DatasmithCineCameraActorTemplate
        fun Find(Outer: UObject, ResourceName: String): DatasmithCineCameraActorTemplate
        fun GetDefaultObject(): DatasmithCineCameraActorTemplate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithCineCameraActorTemplate
        fun C(Other: UObject): DatasmithCineCameraActorTemplate
        fun C(Other: Any): DatasmithCineCameraActorTemplate
    }
}

external open class DatasmithCameraFilmbackSettingsTemplate {
    open var SensorWidth: Number
    open var SensorHeight: Number
    open fun clone(): DatasmithCameraFilmbackSettingsTemplate

    companion object {
        fun C(Other: UObject): DatasmithCameraFilmbackSettingsTemplate
        fun C(Other: Any): DatasmithCameraFilmbackSettingsTemplate
    }
}

external open class DatasmithCameraLensSettingsTemplate {
    open var MaxFStop: Number
    open fun clone(): DatasmithCameraLensSettingsTemplate

    companion object {
        fun C(Other: UObject): DatasmithCameraLensSettingsTemplate
        fun C(Other: Any): DatasmithCameraLensSettingsTemplate
    }
}

external open class DatasmithCameraFocusSettingsTemplate {
    open var FocusMethod: String /* "DoNotOverride" | "Manual" | "Tracking" | "Disable" | "MAX" */
    open var ManualFocusDistance: Number
    open fun clone(): DatasmithCameraFocusSettingsTemplate

    companion object {
        fun C(Other: UObject): DatasmithCameraFocusSettingsTemplate
        fun C(Other: Any): DatasmithCameraFocusSettingsTemplate
    }
}

external open class DatasmithPostProcessSettingsTemplate {
    open var bOverride_WhiteTemp: Boolean
    open var bOverride_ColorSaturation: Boolean
    open var bOverride_VignetteIntensity: Boolean
    open var bOverride_FilmWhitePoint: Boolean
    open var bOverride_AutoExposureMethod: Boolean
    open var bOverride_CameraISO: Boolean
    open var bOverride_CameraShutterSpeed: Boolean
    open var bOverride_DepthOfFieldFstop: Boolean
    open var WhiteTemp: Number
    open var VignetteIntensity: Number
    open var FilmWhitePoint: LinearColor
    open var ColorSaturation: Vector4
    open var AutoExposureMethod: String /* "AEM_Histogram" | "AEM_Basic" | "AEM_Manual" | "AEM_MAX" */
    open var CameraISO: Number
    open var CameraShutterSpeed: Number
    open var DepthOfFieldFstop: Number
    open fun clone(): DatasmithPostProcessSettingsTemplate

    companion object {
        fun C(Other: UObject): DatasmithPostProcessSettingsTemplate
        fun C(Other: Any): DatasmithPostProcessSettingsTemplate
    }
}

external open class DatasmithCineCameraComponentTemplate : DatasmithObjectTemplate {
    constructor()
    constructor(Outer: UObject)
    open var FilmbackSettings: DatasmithCameraFilmbackSettingsTemplate
    open var LensSettings: DatasmithCameraLensSettingsTemplate
    open var FocusSettings: DatasmithCameraFocusSettingsTemplate
    open var CurrentFocalLength: Number
    open var CurrentAperture: Number
    open var PostProcessSettings: DatasmithPostProcessSettingsTemplate

    companion object {
        fun Load(ResourceName: String): DatasmithCineCameraComponentTemplate
        fun Find(Outer: UObject, ResourceName: String): DatasmithCineCameraComponentTemplate
        fun GetDefaultObject(): DatasmithCineCameraComponentTemplate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithCineCameraComponentTemplate
        fun C(Other: UObject): DatasmithCineCameraComponentTemplate
        fun C(Other: Any): DatasmithCineCameraComponentTemplate
    }
}

external interface `T$751` {
    var OutKeys: Array<String>
    var OutValues: Array<String>
}

external interface `T$752` {
    var OutObjects: Array<UObject>
    var OutValues: Array<String>
}

external interface `T$753` {
    var OutUserData: Array<DatasmithAssetUserData>
}

external open class DatasmithContentBlueprintLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DatasmithContentBlueprintLibrary
        fun Find(Outer: UObject, ResourceName: String): DatasmithContentBlueprintLibrary
        fun GetDefaultObject(): DatasmithContentBlueprintLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithContentBlueprintLibrary
        fun GetDatasmithUserDataValueForKey(UObject: UObject, Key: String): String
        fun GetDatasmithUserDataKeysAndValuesForValue(UObject: UObject, StringToMatch: String, OutKeys: Array<String> = definedExternally, OutValues: Array<String> = definedExternally): `T$751`
        fun GetDatasmithUserData(UObject: UObject): DatasmithAssetUserData
        fun GetAllObjectsAndValuesForKey(Key: String, ObjectClass: UnrealEngineClass, OutObjects: Array<UObject> = definedExternally, OutValues: Array<String> = definedExternally): `T$752`
        fun GetAllDatasmithUserData(ObjectClass: UnrealEngineClass, OutUserData: Array<DatasmithAssetUserData> = definedExternally): `T$753`
        fun C(Other: UObject): DatasmithContentBlueprintLibrary
        fun C(Other: Any): DatasmithContentBlueprintLibrary
    }
}

external open class DatasmithCustomActionBase : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DatasmithCustomActionBase
        fun Find(Outer: UObject, ResourceName: String): DatasmithCustomActionBase
        fun GetDefaultObject(): DatasmithCustomActionBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithCustomActionBase
        fun C(Other: UObject): DatasmithCustomActionBase
        fun C(Other: Any): DatasmithCustomActionBase
    }
}

external open class DatasmithDecalComponentTemplate : DatasmithObjectTemplate {
    constructor()
    constructor(Outer: UObject)
    open var SortOrder: Number
    open var DecalSize: Vector
    open var Material: MaterialInterface

    companion object {
        fun Load(ResourceName: String): DatasmithDecalComponentTemplate
        fun Find(Outer: UObject, ResourceName: String): DatasmithDecalComponentTemplate
        fun GetDefaultObject(): DatasmithDecalComponentTemplate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithDecalComponentTemplate
        fun C(Other: UObject): DatasmithDecalComponentTemplate
        fun C(Other: Any): DatasmithDecalComponentTemplate
    }
}

external open class DatasmithImportedSequencesActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var ImportedSequences: Array<LevelSequence>
    open fun PlayLevelSequence(SequenceToPlay: LevelSequence)

    companion object {
        fun GetDefaultObject(): DatasmithImportedSequencesActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithImportedSequencesActor
        fun C(Other: UObject): DatasmithImportedSequencesActor
        fun C(Other: Any): DatasmithImportedSequencesActor
    }
}

external open class DatasmithCommonTessellationOptions : DatasmithOptionsBase {
    constructor()
    constructor(Outer: UObject)
    open var Options: DatasmithTessellationOptions

    companion object {
        fun Load(ResourceName: String): DatasmithCommonTessellationOptions
        fun Find(Outer: UObject, ResourceName: String): DatasmithCommonTessellationOptions
        fun GetDefaultObject(): DatasmithCommonTessellationOptions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithCommonTessellationOptions
        fun C(Other: UObject): DatasmithCommonTessellationOptions
        fun C(Other: Any): DatasmithCommonTessellationOptions
    }
}

external object EDatasmithImportSearchPackagePolicy {
    var Current: String /* "Current" */
    var All: String /* "All" */
    var EDatasmithImportSearchPackagePolicy_MAX: String /* "EDatasmithImportSearchPackagePolicy_MAX" */
}

external object EDatasmithImportAssetConflictPolicy {
    var Replace: String /* "Replace" */
    var Update: String /* "Update" */
    var Use: String /* "Use" */
    var Ignore: String /* "Ignore" */
    var EDatasmithImportAssetConflictPolicy_MAX: String /* "EDatasmithImportAssetConflictPolicy_MAX" */
}

external object EDatasmithImportActorPolicy {
    var Update: String /* "Update" */
    var Full: String /* "Full" */
    var Ignore: String /* "Ignore" */
    var EDatasmithImportActorPolicy_MAX: String /* "EDatasmithImportActorPolicy_MAX" */
}

external object EDatasmithImportMaterialQuality {
    var UseNoFresnelCurves: String /* "UseNoFresnelCurves" */
    var UseSimplifierFresnelCurves: String /* "UseSimplifierFresnelCurves" */
    var UseRealFresnelCurves: String /* "UseRealFresnelCurves" */
    var EDatasmithImportMaterialQuality_MAX: String /* "EDatasmithImportMaterialQuality_MAX" */
}

external open class DatasmithReimportOptions {
    open var bUpdateActors: Boolean
    open var bRespawnDeletedActors: Boolean
    open fun clone(): DatasmithReimportOptions

    companion object {
        fun C(Other: UObject): DatasmithReimportOptions
        fun C(Other: Any): DatasmithReimportOptions
    }
}

external open class DatasmithImportOptions : DatasmithOptionsBase {
    constructor()
    constructor(Outer: UObject)
    open var SearchPackagePolicy: String /* "Current" | "All" | "EDatasmithImportSearchPackagePolicy_MAX" */
    open var MaterialConflictPolicy: String /* "Replace" | "Update" | "Use" | "Ignore" | "EDatasmithImportAssetConflictPolicy_MAX" */
    open var TextureConflictPolicy: String /* "Replace" | "Update" | "Use" | "Ignore" | "EDatasmithImportAssetConflictPolicy_MAX" */
    open var StaticMeshActorImportPolicy: String /* "Update" | "Full" | "Ignore" | "EDatasmithImportActorPolicy_MAX" */
    open var LightImportPolicy: String /* "Update" | "Full" | "Ignore" | "EDatasmithImportActorPolicy_MAX" */
    open var CameraImportPolicy: String /* "Update" | "Full" | "Ignore" | "EDatasmithImportActorPolicy_MAX" */
    open var OtherActorImportPolicy: String /* "Update" | "Full" | "Ignore" | "EDatasmithImportActorPolicy_MAX" */
    open var MaterialQuality: String /* "UseNoFresnelCurves" | "UseSimplifierFresnelCurves" | "UseRealFresnelCurves" | "EDatasmithImportMaterialQuality_MAX" */
    open var BaseOptions: DatasmithImportBaseOptions
    open var ReimportOptions: DatasmithReimportOptions
    open var Filename: String
    open var FilePath: String

    companion object {
        fun Load(ResourceName: String): DatasmithImportOptions
        fun Find(Outer: UObject, ResourceName: String): DatasmithImportOptions
        fun GetDefaultObject(): DatasmithImportOptions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithImportOptions
        fun C(Other: UObject): DatasmithImportOptions
        fun C(Other: Any): DatasmithImportOptions
    }
}

external open class DatasmithLandscapeTemplate : DatasmithObjectTemplate {
    constructor()
    constructor(Outer: UObject)
    open var LandscapeMaterial: MaterialInterface
    open var StaticLightingLOD: Number

    companion object {
        fun Load(ResourceName: String): DatasmithLandscapeTemplate
        fun Find(Outer: UObject, ResourceName: String): DatasmithLandscapeTemplate
        fun GetDefaultObject(): DatasmithLandscapeTemplate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithLandscapeTemplate
        fun C(Other: UObject): DatasmithLandscapeTemplate
        fun C(Other: Any): DatasmithLandscapeTemplate
    }
}

external open class DatasmithLightComponentTemplate : DatasmithObjectTemplate {
    constructor()
    constructor(Outer: UObject)
    open var bVisible: Boolean
    open var CastShadows: Boolean
    open var bUseTemperature: Boolean
    open var bUseIESBrightness: Boolean
    open var Intensity: Number
    open var Temperature: Number
    open var IESBrightnessScale: Number
    open var LightColor: LinearColor
    open var LightFunctionMaterial: MaterialInterface
    open var IESTexture: TextureLightProfile

    companion object {
        fun Load(ResourceName: String): DatasmithLightComponentTemplate
        fun Find(Outer: UObject, ResourceName: String): DatasmithLightComponentTemplate
        fun GetDefaultObject(): DatasmithLightComponentTemplate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithLightComponentTemplate
        fun C(Other: UObject): DatasmithLightComponentTemplate
        fun C(Other: Any): DatasmithLightComponentTemplate
    }
}

external open class DatasmithStaticParameterSetTemplate {
    open var StaticSwitchParameters: Any
    open fun clone(): DatasmithStaticParameterSetTemplate

    companion object {
        fun C(Other: UObject): DatasmithStaticParameterSetTemplate
        fun C(Other: Any): DatasmithStaticParameterSetTemplate
    }
}

external open class DatasmithMaterialInstanceTemplate : DatasmithObjectTemplate {
    constructor()
    constructor(Outer: UObject)
    open var ParentMaterial: MaterialInterface
    open var ScalarParameterValues: Any
    open var VectorParameterValues: Any
    open var TextureParameterValues: Any
    open var StaticParameters: DatasmithStaticParameterSetTemplate

    companion object {
        fun Load(ResourceName: String): DatasmithMaterialInstanceTemplate
        fun Find(Outer: UObject, ResourceName: String): DatasmithMaterialInstanceTemplate
        fun GetDefaultObject(): DatasmithMaterialInstanceTemplate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithMaterialInstanceTemplate
        fun C(Other: UObject): DatasmithMaterialInstanceTemplate
        fun C(Other: Any): DatasmithMaterialInstanceTemplate
    }
}

external open class DatasmithPointLightComponentTemplate : DatasmithObjectTemplate {
    constructor()
    constructor(Outer: UObject)
    open var IntensityUnits: String /* "Unitless" | "Candelas" | "Lumens" | "ELightUnits_MAX" */
    open var SourceRadius: Number
    open var SourceLength: Number
    open var AttenuationRadius: Number

    companion object {
        fun Load(ResourceName: String): DatasmithPointLightComponentTemplate
        fun Find(Outer: UObject, ResourceName: String): DatasmithPointLightComponentTemplate
        fun GetDefaultObject(): DatasmithPointLightComponentTemplate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithPointLightComponentTemplate
        fun C(Other: UObject): DatasmithPointLightComponentTemplate
        fun C(Other: Any): DatasmithPointLightComponentTemplate
    }
}

external open class DatasmithPostProcessVolumeTemplate : DatasmithObjectTemplate {
    constructor()
    constructor(Outer: UObject)
    open var Settings: DatasmithPostProcessSettingsTemplate
    open var bEnabled: Boolean
    open var bUnbound: Boolean

    companion object {
        fun Load(ResourceName: String): DatasmithPostProcessVolumeTemplate
        fun Find(Outer: UObject, ResourceName: String): DatasmithPostProcessVolumeTemplate
        fun GetDefaultObject(): DatasmithPostProcessVolumeTemplate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithPostProcessVolumeTemplate
        fun C(Other: UObject): DatasmithPostProcessVolumeTemplate
        fun C(Other: Any): DatasmithPostProcessVolumeTemplate
    }
}

external open class DatasmithScene : UObject {
    constructor()
    constructor(Outer: UObject)
    open var AssetImportData: DatasmithSceneImportData
    open var BulkDataVersion: Number
    open var StaticMeshes: Any
    open var Textures: Any
    open var MaterialFunctions: Any
    open var Materials: Any
    open var LevelSequences: Any
    open var LevelVariantSets: Any
    open var AssetUserData: Array<AssetUserData>

    companion object {
        fun Load(ResourceName: String): DatasmithScene
        fun Find(Outer: UObject, ResourceName: String): DatasmithScene
        fun GetDefaultObject(): DatasmithScene
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithScene
        fun C(Other: UObject): DatasmithScene
        fun C(Other: Any): DatasmithScene
    }
}

external open class DatasmithSceneActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var Scene: DatasmithScene
    open var RelatedActors: Any

    companion object {
        fun GetDefaultObject(): DatasmithSceneActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithSceneActor
        fun C(Other: UObject): DatasmithSceneActor
        fun C(Other: Any): DatasmithSceneActor
    }
}

external open class DatasmithSceneComponentTemplate : DatasmithObjectTemplate {
    constructor()
    constructor(Outer: UObject)
    open var RelativeTransform: Transform
    open var Mobility: String /* "Static" | "Stationary" | "Movable" | "EComponentMobility_MAX" */
    open var AttachParent: SceneComponent
    open var bVisible: Boolean
    open var Tags: Any

    companion object {
        fun Load(ResourceName: String): DatasmithSceneComponentTemplate
        fun Find(Outer: UObject, ResourceName: String): DatasmithSceneComponentTemplate
        fun GetDefaultObject(): DatasmithSceneComponentTemplate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithSceneComponentTemplate
        fun C(Other: UObject): DatasmithSceneComponentTemplate
        fun C(Other: Any): DatasmithSceneComponentTemplate
    }
}

external open class DatasmithSkyLightComponentTemplate : DatasmithObjectTemplate {
    constructor()
    constructor(Outer: UObject)
    open var SourceType: String /* "SLS_CapturedScene" | "SLS_SpecifiedCubemap" | "SLS_MAX" */
    open var CubemapResolution: Number
    open var Cubemap: TextureCube

    companion object {
        fun Load(ResourceName: String): DatasmithSkyLightComponentTemplate
        fun Find(Outer: UObject, ResourceName: String): DatasmithSkyLightComponentTemplate
        fun GetDefaultObject(): DatasmithSkyLightComponentTemplate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithSkyLightComponentTemplate
        fun C(Other: UObject): DatasmithSkyLightComponentTemplate
        fun C(Other: Any): DatasmithSkyLightComponentTemplate
    }
}

external open class DatasmithSpotLightComponentTemplate : DatasmithObjectTemplate {
    constructor()
    constructor(Outer: UObject)
    open var InnerConeAngle: Number
    open var OuterConeAngle: Number

    companion object {
        fun Load(ResourceName: String): DatasmithSpotLightComponentTemplate
        fun Find(Outer: UObject, ResourceName: String): DatasmithSpotLightComponentTemplate
        fun GetDefaultObject(): DatasmithSpotLightComponentTemplate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithSpotLightComponentTemplate
        fun C(Other: UObject): DatasmithSpotLightComponentTemplate
        fun C(Other: Any): DatasmithSpotLightComponentTemplate
    }
}

external open class DatasmithStaticMeshComponentTemplate : DatasmithObjectTemplate {
    constructor()
    constructor(Outer: UObject)
    open var StaticMesh: StaticMesh
    open var OverrideMaterials: Array<MaterialInterface>

    companion object {
        fun Load(ResourceName: String): DatasmithStaticMeshComponentTemplate
        fun Find(Outer: UObject, ResourceName: String): DatasmithStaticMeshComponentTemplate
        fun GetDefaultObject(): DatasmithStaticMeshComponentTemplate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithStaticMeshComponentTemplate
        fun C(Other: UObject): DatasmithStaticMeshComponentTemplate
        fun C(Other: Any): DatasmithStaticMeshComponentTemplate
    }
}

external open class DatasmithMeshSectionInfoMapTemplate {
    open var Map: Any
    open fun clone(): DatasmithMeshSectionInfoMapTemplate

    companion object {
        fun C(Other: UObject): DatasmithMeshSectionInfoMapTemplate
        fun C(Other: Any): DatasmithMeshSectionInfoMapTemplate
    }
}

external open class DatasmithMeshBuildSettingsTemplate {
    open var bUseMikkTSpace: Boolean
    open var bRecomputeNormals: Boolean
    open var bRecomputeTangents: Boolean
    open var bRemoveDegenerates: Boolean
    open var bBuildAdjacencyBuffer: Boolean
    open var bUseHighPrecisionTangentBasis: Boolean
    open var bUseFullPrecisionUVs: Boolean
    open var bGenerateLightmapUVs: Boolean
    open var MinLightmapResolution: Number
    open var SrcLightmapIndex: Number
    open var DstLightmapIndex: Number
    open fun clone(): DatasmithMeshBuildSettingsTemplate

    companion object {
        fun C(Other: UObject): DatasmithMeshBuildSettingsTemplate
        fun C(Other: Any): DatasmithMeshBuildSettingsTemplate
    }
}

external open class DatasmithStaticMaterialTemplate {
    open var MaterialSlotName: String
    open var MaterialInterface: MaterialInterface
    open fun clone(): DatasmithStaticMaterialTemplate

    companion object {
        fun C(Other: UObject): DatasmithStaticMaterialTemplate
        fun C(Other: Any): DatasmithStaticMaterialTemplate
    }
}

external open class DatasmithStaticMeshTemplate : DatasmithObjectTemplate {
    constructor()
    constructor(Outer: UObject)
    open var SectionInfoMap: DatasmithMeshSectionInfoMapTemplate
    open var LightMapCoordinateIndex: Number
    open var LightMapResolution: Number
    open var BuildSettings: Array<DatasmithMeshBuildSettingsTemplate>
    open var StaticMaterials: Array<DatasmithStaticMaterialTemplate>

    companion object {
        fun Load(ResourceName: String): DatasmithStaticMeshTemplate
        fun Find(Outer: UObject, ResourceName: String): DatasmithStaticMeshTemplate
        fun GetDefaultObject(): DatasmithStaticMeshTemplate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DatasmithStaticMeshTemplate
        fun C(Other: UObject): DatasmithStaticMeshTemplate
        fun C(Other: Any): DatasmithStaticMeshTemplate
    }
}

external object EClothMassMode {
    var UniformMass: String /* "UniformMass" */
    var TotalMass: String /* "TotalMass" */
    var Density: String /* "Density" */
    var MaxClothMassMode: String /* "MaxClothMassMode" */
    var EClothMassMode_MAX: String /* "EClothMassMode_MAX" */
}

external open class ChaosClothWeightedValue {
    open var Low: Number
    open var High: Number
    open fun clone(): ChaosClothWeightedValue

    companion object {
        fun C(Other: UObject): ChaosClothWeightedValue
        fun C(Other: Any): ChaosClothWeightedValue
    }
}

external object EChaosClothTetherMode {
    var FastTetherFastLength: String /* "FastTetherFastLength" */
    var AccurateTetherFastLength: String /* "AccurateTetherFastLength" */
    var AccurateTetherAccurateLength: String /* "AccurateTetherAccurateLength" */
    var MaxChaosClothTetherMode: String /* "MaxChaosClothTetherMode" */
    var EChaosClothTetherMode_MAX: String /* "EChaosClothTetherMode_MAX" */
}

external open class ChaosClothConfig : ClothConfigCommon {
    constructor()
    constructor(Outer: UObject)
    open var MassMode: String /* "UniformMass" | "TotalMass" | "Density" | "MaxClothMassMode" | "EClothMassMode_MAX" */
    open var UniformMass: Number
    open var TotalMass: Number
    open var Density: Number
    open var MinPerParticleMass: Number
    open var EdgeStiffness: Number
    open var BendingStiffness: Number
    open var bUseBendingElements: Boolean
    open var AreaStiffness: Number
    open var VolumeStiffness: Number
    open var TetherStiffness: ChaosClothWeightedValue
    open var LimitScale: Number
    open var bUseGeodesicDistance: Boolean
    open var ShapeTargetStiffness: Number
    open var CollisionThickness: Number
    open var FrictionCoefficient: Number
    open var bUseCCD: Boolean
    open var bUseSelfCollisions: Boolean
    open var SelfCollisionThickness: Number
    open var bUseLegacyBackstop: Boolean
    open var DampingCoefficient: Number
    open var bUsePointBasedWindModel: Boolean
    open var DragCoefficient: Number
    open var LiftCoefficient: Number
    open var bUseGravityOverride: Boolean
    open var GravityScale: Number
    open var Gravity: Vector
    open var AnimDriveStiffness: ChaosClothWeightedValue
    open var AnimDriveDamping: ChaosClothWeightedValue
    open var LinearVelocityScale: Vector
    open var AngularVelocityScale: Number
    open var FictitiousAngularScale: Number
    open var bUseTetrahedralConstraints: Boolean
    open var bUseThinShellVolumeConstraints: Boolean
    open var bUseContinuousCollisionDetection: Boolean
    open var TetherMode: String /* "FastTetherFastLength" | "AccurateTetherFastLength" | "AccurateTetherAccurateLength" | "MaxChaosClothTetherMode" | "EChaosClothTetherMode_MAX" */
    open var AnimDriveSpringStiffness: Number
    open var StrainLimitingStiffness: Number

    companion object {
        fun Load(ResourceName: String): ChaosClothConfig
        fun Find(Outer: UObject, ResourceName: String): ChaosClothConfig
        fun GetDefaultObject(): ChaosClothConfig
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ChaosClothConfig
        fun C(Other: UObject): ChaosClothConfig
        fun C(Other: Any): ChaosClothConfig
    }
}

external open class ChaosClothSharedSimConfig : ClothSharedConfigCommon {
    constructor()
    constructor(Outer: UObject)
    open var IterationCount: Number
    open var SubdivisionCount: Number
    open var SelfCollisionThickness: Number
    open var CollisionThickness: Number
    open var bUseDampingOverride: Boolean
    open var Damping: Number
    open var bUseGravityOverride: Boolean
    open var GravityScale: Number
    open var Gravity: Vector
    open var bUseLocalSpaceSimulation: Boolean
    open var bUseXPBDConstraints: Boolean

    companion object {
        fun Load(ResourceName: String): ChaosClothSharedSimConfig
        fun Find(Outer: UObject, ResourceName: String): ChaosClothSharedSimConfig
        fun GetDefaultObject(): ChaosClothSharedSimConfig
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ChaosClothSharedSimConfig
        fun C(Other: UObject): ChaosClothSharedSimConfig
        fun C(Other: Any): ChaosClothSharedSimConfig
    }
}

external open class ChaosClothingSimulationFactory : ClothingSimulationFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ChaosClothingSimulationFactory
        fun Find(Outer: UObject, ResourceName: String): ChaosClothingSimulationFactory
        fun GetDefaultObject(): ChaosClothingSimulationFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ChaosClothingSimulationFactory
        fun C(Other: UObject): ChaosClothingSimulationFactory
        fun C(Other: Any): ChaosClothingSimulationFactory
    }
}

external open class ChaosClothingInteractor : ClothingInteractor {
    constructor()
    constructor(Outer: UObject)
    open fun SetVelocityScale(LinearVelocityScale: Vector, AngularVelocityScale: Number, FictitiousAngularScale: Number)
    open fun SetMaterialLinear(EdgeStiffness: Number, BendingStiffness: Number, AreaStiffness: Number)
    open fun SetLongRangeAttachmentLinear(TetherStiffness: Number)
    open fun SetLongRangeAttachment(TetherStiffness: Vector2D)
    open fun SetGravity(GravityScale: Number, bIsGravityOverridden: Boolean, GravityOverride: Vector)
    open fun SetDamping(DampingCoefficient: Number)
    open fun SetCollision(CollisionThickness: Number, FrictionCoefficient: Number, bUseCCD: Boolean, SelfCollisionThickness: Number)
    open fun SetAnimDriveLinear(AnimDriveStiffness: Number)
    open fun SetAnimDrive(AnimDriveStiffness: Vector2D, AnimDriveDamping: Vector2D)
    open fun SetAerodynamics(DragCoefficient: Number, LiftCoefficient: Number, WindVelocity: Vector)
    open fun ResetAndTeleport(bReset: Boolean, bTeleport: Boolean)

    companion object {
        fun Load(ResourceName: String): ChaosClothingInteractor
        fun Find(Outer: UObject, ResourceName: String): ChaosClothingInteractor
        fun GetDefaultObject(): ChaosClothingInteractor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ChaosClothingInteractor
        fun C(Other: UObject): ChaosClothingInteractor
        fun C(Other: Any): ChaosClothingInteractor
    }
}

external open class ChaosClothingSimulationInteractor : ClothingSimulationInteractor {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ChaosClothingSimulationInteractor
        fun Find(Outer: UObject, ResourceName: String): ChaosClothingSimulationInteractor
        fun GetDefaultObject(): ChaosClothingSimulationInteractor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ChaosClothingSimulationInteractor
        fun C(Other: UObject): ChaosClothingSimulationInteractor
        fun C(Other: Any): ChaosClothingSimulationInteractor
    }
}

external object EMagicLeapPrivilege {
    var Invalid: String /* "Invalid" */
    var BatteryInfo: String /* "BatteryInfo" */
    var CameraCapture: String /* "CameraCapture" */
    var ComputerVision: String /* "ComputerVision" */
    var WorldReconstruction: String /* "WorldReconstruction" */
    var InAppPurchase: String /* "InAppPurchase" */
    var AudioCaptureMic: String /* "AudioCaptureMic" */
    var DrmCertificates: String /* "DrmCertificates" */
    var Occlusion: String /* "Occlusion" */
    var LowLatencyLightwear: String /* "LowLatencyLightwear" */
    var Internet: String /* "Internet" */
    var IdentityRead: String /* "IdentityRead" */
    var BackgroundDownload: String /* "BackgroundDownload" */
    var BackgroundUpload: String /* "BackgroundUpload" */
    var MediaDrm: String /* "MediaDrm" */
    var Media: String /* "Media" */
    var MediaMetadata: String /* "MediaMetadata" */
    var PowerInfo: String /* "PowerInfo" */
    var LocalAreaNetwork: String /* "LocalAreaNetwork" */
    var VoiceInput: String /* "VoiceInput" */
    var Documents: String /* "Documents" */
    var ConnectBackgroundMusicService: String /* "ConnectBackgroundMusicService" */
    var RegisterBackgroundMusicService: String /* "RegisterBackgroundMusicService" */
    var PcfRead: String /* "PcfRead" */
    var PwFoundObjRead: String /* "PwFoundObjRead" */
    var NormalNotificationsUsage: String /* "NormalNotificationsUsage" */
    var MusicService: String /* "MusicService" */
    var ControllerPose: String /* "ControllerPose" */
    var GesturesSubscribe: String /* "GesturesSubscribe" */
    var GesturesConfig: String /* "GesturesConfig" */
    var AddressBookRead: String /* "AddressBookRead" */
    var AddressBookWrite: String /* "AddressBookWrite" */
    var AddressBookBasicAccess: String /* "AddressBookBasicAccess" */
    var CoarseLocation: String /* "CoarseLocation" */
    var FineLocation: String /* "FineLocation" */
    var HandMesh: String /* "HandMesh" */
    var WifiStatusRead: String /* "WifiStatusRead" */
    var SocialConnectionsInvitesAccess: String /* "SocialConnectionsInvitesAccess" */
    var SecureBrowserWindow: String /* "SecureBrowserWindow" */
    var EMagicLeapPrivilege_MAX: String /* "EMagicLeapPrivilege_MAX" */
}

external open class MagicLeapPrivilegesFunctionLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MagicLeapPrivilegesFunctionLibrary
        fun Find(Outer: UObject, ResourceName: String): MagicLeapPrivilegesFunctionLibrary
        fun GetDefaultObject(): MagicLeapPrivilegesFunctionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MagicLeapPrivilegesFunctionLibrary
        fun RequestPrivilege(Privilege: String /* "Invalid" | "BatteryInfo" | "CameraCapture" | "ComputerVision" | "WorldReconstruction" | "InAppPurchase" | "AudioCaptureMic" | "DrmCertificates" | "Occlusion" | "LowLatencyLightwear" | "Internet" | "IdentityRead" | "BackgroundDownload" | "BackgroundUpload" | "MediaDrm" | "Media" | "MediaMetadata" | "PowerInfo" | "LocalAreaNetwork" | "VoiceInput" | "Documents" | "ConnectBackgroundMusicService" | "RegisterBackgroundMusicService" | "PcfRead" | "PwFoundObjRead" | "NormalNotificationsUsage" | "MusicService" | "ControllerPose" | "GesturesSubscribe" | "GesturesConfig" | "AddressBookRead" | "AddressBookWrite" | "AddressBookBasicAccess" | "CoarseLocation" | "FineLocation" | "HandMesh" | "WifiStatusRead" | "SocialConnectionsInvitesAccess" | "SecureBrowserWindow" | "EMagicLeapPrivilege_MAX" */): Boolean
        fun CheckPrivilege(Privilege: String /* "Invalid" | "BatteryInfo" | "CameraCapture" | "ComputerVision" | "WorldReconstruction" | "InAppPurchase" | "AudioCaptureMic" | "DrmCertificates" | "Occlusion" | "LowLatencyLightwear" | "Internet" | "IdentityRead" | "BackgroundDownload" | "BackgroundUpload" | "MediaDrm" | "Media" | "MediaMetadata" | "PowerInfo" | "LocalAreaNetwork" | "VoiceInput" | "Documents" | "ConnectBackgroundMusicService" | "RegisterBackgroundMusicService" | "PcfRead" | "PwFoundObjRead" | "NormalNotificationsUsage" | "MusicService" | "ControllerPose" | "GesturesSubscribe" | "GesturesConfig" | "AddressBookRead" | "AddressBookWrite" | "AddressBookBasicAccess" | "CoarseLocation" | "FineLocation" | "HandMesh" | "WifiStatusRead" | "SocialConnectionsInvitesAccess" | "SecureBrowserWindow" | "EMagicLeapPrivilege_MAX" */): Boolean
        fun C(Other: UObject): MagicLeapPrivilegesFunctionLibrary
        fun C(Other: Any): MagicLeapPrivilegesFunctionLibrary
    }
}

external object PurchaseType {
    var Consumable: String /* "Consumable" */
    var Nonconsumable: String /* "Nonconsumable" */
    var Undefined: String /* "Undefined" */
    var PurchaseType_MAX: String /* "PurchaseType_MAX" */
}

external open class PurchaseItemDetails {
    open var Price: String
    open var Name: String
    open var Type: String /* "Consumable" | "Nonconsumable" | "Undefined" | "PurchaseType_MAX" */
    open fun clone(): PurchaseItemDetails

    companion object {
        fun C(Other: UObject): PurchaseItemDetails
        fun C(Other: Any): PurchaseItemDetails
    }
}

external open class PurchaseConfirmation {
    open var PackageName: String
    open var Type: String /* "Consumable" | "Nonconsumable" | "Undefined" | "PurchaseType_MAX" */
    open fun clone(): PurchaseConfirmation

    companion object {
        fun C(Other: UObject): PurchaseConfirmation
        fun C(Other: Any): PurchaseConfirmation
    }
}

external open class InAppPurchaseComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var InAppPurchaseLogMessage: UnrealEngineMulticastDelegate<(LogMessage: String) -> Unit>
    open var GetItemsDetailsSuccess: UnrealEngineMulticastDelegate<(ItemsDetails: Array<PurchaseItemDetails>) -> Unit>
    open var GetItemsDetailsFailure: UnrealEngineMulticastDelegate<() -> Unit>
    open var PurchaseConfirmationSuccess: UnrealEngineMulticastDelegate<(PurchaseConfirmations: PurchaseConfirmation) -> Unit>
    open var PurchaseConfirmationFailure: UnrealEngineMulticastDelegate<() -> Unit>
    open var GetPurchaseHistorySuccess: UnrealEngineMulticastDelegate<(PurchaseHistory: Array<PurchaseConfirmation>) -> Unit>
    open var GetPurchaseHistoryFailure: UnrealEngineMulticastDelegate<() -> Unit>
    open fun TryPurchaseItemAsync(ItemDetails: PurchaseItemDetails): Boolean
    open fun TryGetPurchaseHistoryAsync(InNumPages: Number): Boolean
    open fun TryGetItemsDetailsAsync(ItemIDs: Array<String>): Boolean

    companion object {
        fun Load(ResourceName: String): InAppPurchaseComponent
        fun Find(Outer: UObject, ResourceName: String): InAppPurchaseComponent
        fun GetDefaultObject(): InAppPurchaseComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InAppPurchaseComponent
        fun C(Other: UObject): InAppPurchaseComponent
        fun C(Other: Any): InAppPurchaseComponent
    }
}

external object EFocusLostReason {
    var EFocusLostReason_Invalid: String /* "EFocusLostReason_Invalid" */
    var EFocusLostReason_System: String /* "EFocusLostReason_System" */
    var EFocusLostReason_MAX: String /* "EFocusLostReason_MAX" */
}

external open class LuminApplicationLifecycleComponent : ApplicationLifecycleComponent {
    constructor()
    constructor(Outer: UObject)
    open var DeviceHasReactivatedDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var DeviceWillEnterRealityModeDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var DeviceWillGoInStandbyDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var FocusLostDelegate: UnrealEngineMulticastDelegate<(reason: String /* "EFocusLostReason_Invalid" | "EFocusLostReason_System" | "EFocusLostReason_MAX" */) -> Unit>
    open var FocusGainedDelegate: UnrealEngineMulticastDelegate<() -> Unit>

    companion object {
        fun Load(ResourceName: String): LuminApplicationLifecycleComponent
        fun Find(Outer: UObject, ResourceName: String): LuminApplicationLifecycleComponent
        fun GetDefaultObject(): LuminApplicationLifecycleComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LuminApplicationLifecycleComponent
        fun C(Other: UObject): LuminApplicationLifecycleComponent
        fun C(Other: Any): LuminApplicationLifecycleComponent
    }
}

external open class MagicLeapHeadTrackingNotificationsComponent : VRNotificationsComponent {
    constructor()
    constructor(Outer: UObject)
    open var OnHeadTrackingLost: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnHeadTrackingRecovered: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnHeadTrackingRecoveryFailed: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnHeadTrackingNewSessionStarted: UnrealEngineMulticastDelegate<() -> Unit>

    companion object {
        fun Load(ResourceName: String): MagicLeapHeadTrackingNotificationsComponent
        fun Find(Outer: UObject, ResourceName: String): MagicLeapHeadTrackingNotificationsComponent
        fun GetDefaultObject(): MagicLeapHeadTrackingNotificationsComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MagicLeapHeadTrackingNotificationsComponent
        fun C(Other: UObject): MagicLeapHeadTrackingNotificationsComponent
        fun C(Other: Any): MagicLeapHeadTrackingNotificationsComponent
    }
}

external object EMagicLeapHeadTrackingMode {
    var PositionAndOrientation: String /* "PositionAndOrientation" */
    var Unavailable: String /* "Unavailable" */
    var Unknown: String /* "Unknown" */
    var EMagicLeapHeadTrackingMode_MAX: String /* "EMagicLeapHeadTrackingMode_MAX" */
}

external object EMagicLeapHeadTrackingError {
    var None: String /* "None" */
    var NotEnoughFeatures: String /* "NotEnoughFeatures" */
    var LowLight: String /* "LowLight" */
    var Unknown: String /* "Unknown" */
    var EMagicLeapHeadTrackingError_MAX: String /* "EMagicLeapHeadTrackingError_MAX" */
}

external interface `T$754` {
    var State: MagicLeapHeadTrackingState
    var `$`: Boolean
}

external open class MagicLeapHeadTrackingState {
    open var Mode: String /* "PositionAndOrientation" | "Unavailable" | "Unknown" | "EMagicLeapHeadTrackingMode_MAX" */
    open var Error: String /* "None" | "NotEnoughFeatures" | "LowLight" | "Unknown" | "EMagicLeapHeadTrackingError_MAX" */
    open var Confidence: Number
    open fun clone(): MagicLeapHeadTrackingState
    open fun GetHeadTrackingState(): `T$754`

    companion object {
        fun C(Other: UObject): MagicLeapHeadTrackingState
        fun C(Other: Any): MagicLeapHeadTrackingState
        fun GetHeadTrackingState(State: MagicLeapHeadTrackingState = definedExternally): `T$754`
    }
}

external interface `T$755` {
    var PerformanceInfo: MagicLeapGraphicsClientPerformanceInfo
    var `$`: Boolean
}

external open class MagicLeapGraphicsClientPerformanceInfo {
    open var FrameStartCPUCompAcquireCPUTimeMs: Number
    open var FrameStartCPUFrameEndGPUTimeMs: Number
    open var FrameStartCPUFrameStartCPUTimeMs: Number
    open var FrameDurationCPUTimeMs: Number
    open var FrameDurationGPUTimeMs: Number
    open var FrameInternalDurationCPUTimeMs: Number
    open var FrameInternalDurationGPUTimeMs: Number
    open fun clone(): MagicLeapGraphicsClientPerformanceInfo
    open fun GetGraphicsClientPerformanceInfo(): `T$755`

    companion object {
        fun C(Other: UObject): MagicLeapGraphicsClientPerformanceInfo
        fun C(Other: Any): MagicLeapGraphicsClientPerformanceInfo
        fun GetGraphicsClientPerformanceInfo(PerformanceInfo: MagicLeapGraphicsClientPerformanceInfo = definedExternally): `T$755`
    }
}

external interface `T$756` {
    var MapEvents: Any
    var `$`: Boolean
}

external open class MagicLeapHMDFunctionLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MagicLeapHMDFunctionLibrary
        fun Find(Outer: UObject, ResourceName: String): MagicLeapHMDFunctionLibrary
        fun GetDefaultObject(): MagicLeapHMDFunctionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MagicLeapHMDFunctionLibrary
        fun SetStabilizationDepthActor(InStabilizationDepthActor: Actor, bSetFocusActor: Boolean)
        fun SetFocusActor(InFocusActor: Actor, bSetStabilizationActor: Boolean)
        fun SetBaseRotation(InBaseRotation: Rotator)
        fun SetBasePosition(InBasePosition: Vector)
        fun SetBaseOrientation(InBaseOrientation: Quat)
        fun SetAppReady(): Boolean
        fun IsRunningOnMagicLeapHMD(): Boolean
        fun GetPlatformAPILevel(): Number
        fun GetMLSDKVersionRevision(): Number
        fun GetMLSDKVersionMinor(): Number
        fun GetMLSDKVersionMajor(): Number
        fun GetMLSDKVersion(): String
        fun GetMinimumAPILevel(): Number
        fun GetHeadTrackingState(State: MagicLeapHeadTrackingState = definedExternally): `T$754`
        fun GetHeadTrackingMapEvents(MapEvents: Any = definedExternally): `T$756`
        fun GetGraphicsClientPerformanceInfo(PerformanceInfo: MagicLeapGraphicsClientPerformanceInfo = definedExternally): `T$755`
        fun C(Other: UObject): MagicLeapHMDFunctionLibrary
        fun C(Other: Any): MagicLeapHMDFunctionLibrary
    }
}

external object EMagicLeapMeshType {
    var Triangles: String /* "Triangles" */
    var PointCloud: String /* "PointCloud" */
    var EMagicLeapMeshType_MAX: String /* "EMagicLeapMeshType_MAX" */
}

external object EMagicLeapMeshLOD {
    var Minimum: String /* "Minimum" */
    var Medium: String /* "Medium" */
    var Maximum: String /* "Maximum" */
    var EMagicLeapMeshLOD_MAX: String /* "EMagicLeapMeshLOD_MAX" */
}

external object EMagicLeapMeshVertexColorMode {
    var None: String /* "None" */
    var Confidence: String /* "Confidence" */
    var Block: String /* "Block" */
    var LOD: String /* "LOD" */
    var EMagicLeapMeshVertexColorMode_MAX: String /* "EMagicLeapMeshVertexColorMode_MAX" */
}

external object EMagicLeapMeshState {
    var New: String /* "New" */
    var Updated: String /* "Updated" */
    var Deleted: String /* "Deleted" */
    var Unchanged: String /* "Unchanged" */
    var EMagicLeapMeshState_MAX: String /* "EMagicLeapMeshState_MAX" */
}

external open class MagicLeapMeshBlockInfo {
    open var BlockID: Guid
    open var BlockPosition: Vector
    open var BlockOrientation: Rotator
    open var BlockDimensions: Vector
    open var Timestamp: Timespan
    open var BlockState: String /* "New" | "Updated" | "Deleted" | "Unchanged" | "EMagicLeapMeshState_MAX" */
    open fun clone(): MagicLeapMeshBlockInfo

    companion object {
        fun C(Other: UObject): MagicLeapMeshBlockInfo
        fun C(Other: Any): MagicLeapMeshBlockInfo
    }
}

external open class MagicLeapTrackingMeshInfo {
    open var Timestamp: Timespan
    open var BlockData: Array<MagicLeapMeshBlockInfo>
    open fun clone(): MagicLeapTrackingMeshInfo

    companion object {
        fun C(Other: UObject): MagicLeapTrackingMeshInfo
        fun C(Other: Any): MagicLeapTrackingMeshInfo
    }
}

external open class MagicLeapMeshBlockRequest {
    open var BlockID: Guid
    open var LevelOfDetail: String /* "Minimum" | "Medium" | "Maximum" | "EMagicLeapMeshLOD_MAX" */
    open fun clone(): MagicLeapMeshBlockRequest

    companion object {
        fun C(Other: UObject): MagicLeapMeshBlockRequest
        fun C(Other: Any): MagicLeapMeshBlockRequest
    }
}

external interface `T$757` {
    var RequestedMesh: Array<MagicLeapMeshBlockRequest>
}

external open class MagicLeapMeshTrackerComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var OnMeshTrackerUpdated: UnrealEngineMulticastDelegate<(ID: Guid, Vertices: Array<Vector>, Triangles: Array<Number>, Normals: Array<Vector>, Confidence: Array<Number>) -> Unit>
    open var ScanWorld: Boolean
    open var MeshType: String /* "Triangles" | "PointCloud" | "EMagicLeapMeshType_MAX" */
    open var BoundingVolume: BoxComponent
    open var LevelOfDetail: String /* "Minimum" | "Medium" | "Maximum" | "EMagicLeapMeshLOD_MAX" */
    open var PerimeterOfGapsToFill: Number
    open var Planarize: Boolean
    open var DisconnectedSectionArea: Number
    open var RequestNormals: Boolean
    open var RequestVertexConfidence: Boolean
    open var VertexColorMode: String /* "None" | "Confidence" | "Block" | "LOD" | "EMagicLeapMeshVertexColorMode_MAX" */
    open var BlockVertexColors: Array<Color>
    open var VertexColorFromConfidenceZero: LinearColor
    open var VertexColorFromConfidenceOne: LinearColor
    open var RemoveOverlappingTriangles: Boolean
    open var MRMesh: MRMeshComponent
    open var BricksPerFrame: Number
    open fun SelectMeshBlocks(NewMeshInfo: MagicLeapTrackingMeshInfo, RequestedMesh: Array<MagicLeapMeshBlockRequest> = definedExternally): `T$757`
    open fun GetNumQueuedBlockUpdates(): Number
    open fun DisconnectMRMesh(InMRMeshPtr: MRMeshComponent)
    open fun DisconnectBlockSelector()
    open fun ConnectMRMesh(InMRMeshPtr: MRMeshComponent)

    companion object {
        fun Load(ResourceName: String): MagicLeapMeshTrackerComponent
        fun Find(Outer: UObject, ResourceName: String): MagicLeapMeshTrackerComponent
        fun GetDefaultObject(): MagicLeapMeshTrackerComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MagicLeapMeshTrackerComponent
        fun C(Other: UObject): MagicLeapMeshTrackerComponent
        fun C(Other: Any): MagicLeapMeshTrackerComponent
    }
}

external open class MagicLeapSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bEnableZI: Boolean
    open var bUseVulkanForZI: Boolean
    open var bUseMLAudioForZI: Boolean

    companion object {
        fun Load(ResourceName: String): MagicLeapSettings
        fun Find(Outer: UObject, ResourceName: String): MagicLeapSettings
        fun GetDefaultObject(): MagicLeapSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MagicLeapSettings
        fun C(Other: UObject): MagicLeapSettings
        fun C(Other: Any): MagicLeapSettings
    }
}

external interface `T$758` {
    var RequestedMesh: Array<MagicLeapMeshBlockRequest>
}

external open class MagicLeapMeshBlockSelectorInterface : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun SelectMeshBlocks(NewMeshInfo: MagicLeapTrackingMeshInfo, RequestedMesh: Array<MagicLeapMeshBlockRequest> = definedExternally): `T$758`

    companion object {
        fun Load(ResourceName: String): MagicLeapMeshBlockSelectorInterface
        fun Find(Outer: UObject, ResourceName: String): MagicLeapMeshBlockSelectorInterface
        fun GetDefaultObject(): MagicLeapMeshBlockSelectorInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MagicLeapMeshBlockSelectorInterface
        fun C(Other: UObject): MagicLeapMeshBlockSelectorInterface
        fun C(Other: Any): MagicLeapMeshBlockSelectorInterface
    }
}

external open class MagicLeapRaycastComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MagicLeapRaycastComponent
        fun Find(Outer: UObject, ResourceName: String): MagicLeapRaycastComponent
        fun GetDefaultObject(): MagicLeapRaycastComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MagicLeapRaycastComponent
        fun C(Other: UObject): MagicLeapRaycastComponent
        fun C(Other: Any): MagicLeapRaycastComponent
    }
}

external open class MagicLeapRaycastFunctionLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MagicLeapRaycastFunctionLibrary
        fun Find(Outer: UObject, ResourceName: String): MagicLeapRaycastFunctionLibrary
        fun GetDefaultObject(): MagicLeapRaycastFunctionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MagicLeapRaycastFunctionLibrary
        fun MakeRaycastQueryParams(Position: Vector, Direction: Vector, UpVector: Vector, Width: Number, Height: Number, HorizontalFovDegrees: Number, CollideWithUnobserved: Boolean, UserData: Number): MagicLeapRaycastQueryParams
        fun C(Other: UObject): MagicLeapRaycastFunctionLibrary
        fun C(Other: Any): MagicLeapRaycastFunctionLibrary
    }
}

external open class WmfMediaSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var AllowNonStandardCodecs: Boolean
    open var LowLatency: Boolean
    open var NativeAudioOut: Boolean
    open var HardwareAcceleratedVideoDecoding: Boolean

    companion object {
        fun Load(ResourceName: String): WmfMediaSettings
        fun Find(Outer: UObject, ResourceName: String): WmfMediaSettings
        fun GetDefaultObject(): WmfMediaSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WmfMediaSettings
        fun C(Other: UObject): WmfMediaSettings
        fun C(Other: Any): WmfMediaSettings
    }
}

external open class NamedInterface {
    open var InterfaceName: String
    open var InterfaceObject: UObject
    open fun clone(): NamedInterface

    companion object {
        fun C(Other: UObject): NamedInterface
        fun C(Other: Any): NamedInterface
    }
}

external open class NamedInterfaceDef {
    open var InterfaceName: String
    open var InterfaceClassName: String
    open fun clone(): NamedInterfaceDef

    companion object {
        fun C(Other: UObject): NamedInterfaceDef
        fun C(Other: Any): NamedInterfaceDef
    }
}

external open class NamedInterfaces : UObject {
    constructor()
    constructor(Outer: UObject)
    open var NamedInterfaces: Array<NamedInterface>
    open var NamedInterfaceDefs: Array<NamedInterfaceDef>

    companion object {
        fun Load(ResourceName: String): NamedInterfaces
        fun Find(Outer: UObject, ResourceName: String): NamedInterfaces
        fun GetDefaultObject(): NamedInterfaces
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NamedInterfaces
        fun C(Other: UObject): NamedInterfaces
        fun C(Other: Any): NamedInterfaces
    }
}

external open class TurnBasedMatchInterface : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun OnMatchReceivedTurn(Match: String, bDidBecomeActive: Boolean)
    open fun OnMatchEnded(Match: String)

    companion object {
        fun Load(ResourceName: String): TurnBasedMatchInterface
        fun Find(Outer: UObject, ResourceName: String): TurnBasedMatchInterface
        fun GetDefaultObject(): TurnBasedMatchInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TurnBasedMatchInterface
        fun C(Other: UObject): TurnBasedMatchInterface
        fun C(Other: Any): TurnBasedMatchInterface
    }
}

external open class AchievementBlueprintLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AchievementBlueprintLibrary
        fun Find(Outer: UObject, ResourceName: String): AchievementBlueprintLibrary
        fun GetDefaultObject(): AchievementBlueprintLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AchievementBlueprintLibrary
        fun GetCachedAchievementProgress(WorldContextObject: UObject, PlayerController: PlayerController, AchievementID: String, bFoundID: Boolean = definedExternally, Progress: Number = definedExternally): `T$289`
        fun GetCachedAchievementDescription(WorldContextObject: UObject, PlayerController: PlayerController, AchievementID: String, bFoundID: Boolean = definedExternally, Title: String = definedExternally, LockedDescription: String = definedExternally, UnlockedDescription: String = definedExternally, bHidden: Boolean = definedExternally): `T$288`
        fun C(Other: UObject): AchievementBlueprintLibrary
        fun C(Other: Any): AchievementBlueprintLibrary
    }
}

external open class AchievementQueryCallbackProxy : OnlineBlueprintCallProxyBase {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnFailure: UnrealEngineMulticastDelegate<() -> Unit>

    companion object {
        fun Load(ResourceName: String): AchievementQueryCallbackProxy
        fun Find(Outer: UObject, ResourceName: String): AchievementQueryCallbackProxy
        fun GetDefaultObject(): AchievementQueryCallbackProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AchievementQueryCallbackProxy
        fun CacheAchievements(WorldContextObject: UObject, PlayerController: PlayerController): AchievementQueryCallbackProxy
        fun CacheAchievementDescriptions(WorldContextObject: UObject, PlayerController: PlayerController): AchievementQueryCallbackProxy
        fun C(Other: UObject): AchievementQueryCallbackProxy
        fun C(Other: Any): AchievementQueryCallbackProxy
    }
}

external open class AchievementWriteCallbackProxy : OnlineBlueprintCallProxyBase {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<(WrittenAchievementName: String, WrittenProgress: Number, WrittenUserTag: Number) -> Unit>
    open var OnFailure: UnrealEngineMulticastDelegate<(WrittenAchievementName: String, WrittenProgress: Number, WrittenUserTag: Number) -> Unit>

    companion object {
        fun Load(ResourceName: String): AchievementWriteCallbackProxy
        fun Find(Outer: UObject, ResourceName: String): AchievementWriteCallbackProxy
        fun GetDefaultObject(): AchievementWriteCallbackProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AchievementWriteCallbackProxy
        fun WriteAchievementProgress(WorldContextObject: UObject, PlayerController: PlayerController, AchievementName: String, Progress: Number, UserTag: Number): AchievementWriteCallbackProxy
        fun C(Other: UObject): AchievementWriteCallbackProxy
        fun C(Other: Any): AchievementWriteCallbackProxy
    }
}

external open class ConnectionCallbackProxy : OnlineBlueprintCallProxyBase {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<(ErrorCode: Number) -> Unit>
    open var OnFailure: UnrealEngineMulticastDelegate<(ErrorCode: Number) -> Unit>

    companion object {
        fun Load(ResourceName: String): ConnectionCallbackProxy
        fun Find(Outer: UObject, ResourceName: String): ConnectionCallbackProxy
        fun GetDefaultObject(): ConnectionCallbackProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ConnectionCallbackProxy
        fun ConnectToService(WorldContextObject: UObject, PlayerController: PlayerController): ConnectionCallbackProxy
        fun C(Other: UObject): ConnectionCallbackProxy
        fun C(Other: Any): ConnectionCallbackProxy
    }
}

external open class CreateSessionCallbackProxy : OnlineBlueprintCallProxyBase {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnFailure: UnrealEngineMulticastDelegate<() -> Unit>

    companion object {
        fun Load(ResourceName: String): CreateSessionCallbackProxy
        fun Find(Outer: UObject, ResourceName: String): CreateSessionCallbackProxy
        fun GetDefaultObject(): CreateSessionCallbackProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CreateSessionCallbackProxy
        fun CreateSession(WorldContextObject: UObject, PlayerController: PlayerController, PublicConnections: Number, bUseLAN: Boolean): CreateSessionCallbackProxy
        fun C(Other: UObject): CreateSessionCallbackProxy
        fun C(Other: Any): CreateSessionCallbackProxy
    }
}

external open class DestroySessionCallbackProxy : OnlineBlueprintCallProxyBase {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnFailure: UnrealEngineMulticastDelegate<() -> Unit>

    companion object {
        fun Load(ResourceName: String): DestroySessionCallbackProxy
        fun Find(Outer: UObject, ResourceName: String): DestroySessionCallbackProxy
        fun GetDefaultObject(): DestroySessionCallbackProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DestroySessionCallbackProxy
        fun DestroySession(WorldContextObject: UObject, PlayerController: PlayerController): DestroySessionCallbackProxy
        fun C(Other: UObject): DestroySessionCallbackProxy
        fun C(Other: Any): DestroySessionCallbackProxy
    }
}

external open class EndMatchCallbackProxy : OnlineBlueprintCallProxyBase {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnFailure: UnrealEngineMulticastDelegate<() -> Unit>

    companion object {
        fun Load(ResourceName: String): EndMatchCallbackProxy
        fun Find(Outer: UObject, ResourceName: String): EndMatchCallbackProxy
        fun GetDefaultObject(): EndMatchCallbackProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EndMatchCallbackProxy
        fun C(Other: UObject): EndMatchCallbackProxy
        fun C(Other: Any): EndMatchCallbackProxy
    }
}

external open class EndTurnCallbackProxy : OnlineBlueprintCallProxyBase {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnFailure: UnrealEngineMulticastDelegate<() -> Unit>

    companion object {
        fun Load(ResourceName: String): EndTurnCallbackProxy
        fun Find(Outer: UObject, ResourceName: String): EndTurnCallbackProxy
        fun GetDefaultObject(): EndTurnCallbackProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EndTurnCallbackProxy
        fun C(Other: UObject): EndTurnCallbackProxy
        fun C(Other: Any): EndTurnCallbackProxy
    }
}

external open class BlueprintSessionResult {
    open fun clone(): BlueprintSessionResult

    companion object {
        fun C(Other: UObject): BlueprintSessionResult
        fun C(Other: Any): BlueprintSessionResult
    }
}

external open class FindSessionsCallbackProxy : OnlineBlueprintCallProxyBase {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<(Results: Array<BlueprintSessionResult>) -> Unit>
    open var OnFailure: UnrealEngineMulticastDelegate<(Results: Array<BlueprintSessionResult>) -> Unit>

    companion object {
        fun Load(ResourceName: String): FindSessionsCallbackProxy
        fun Find(Outer: UObject, ResourceName: String): FindSessionsCallbackProxy
        fun GetDefaultObject(): FindSessionsCallbackProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FindSessionsCallbackProxy
        fun GetServerName(Result: BlueprintSessionResult): String
        fun GetPingInMs(Result: BlueprintSessionResult): Number
        fun GetMaxPlayers(Result: BlueprintSessionResult): Number
        fun GetCurrentPlayers(Result: BlueprintSessionResult): Number
        fun FindSessions(WorldContextObject: UObject, PlayerController: PlayerController, MaxResults: Number, bUseLAN: Boolean): FindSessionsCallbackProxy
        fun C(Other: UObject): FindSessionsCallbackProxy
        fun C(Other: Any): FindSessionsCallbackProxy
    }
}

external open class FindTurnBasedMatchCallbackProxy : OnlineBlueprintCallProxyBase {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<(MatchID: String) -> Unit>
    open var OnFailure: UnrealEngineMulticastDelegate<(MatchID: String) -> Unit>

    companion object {
        fun Load(ResourceName: String): FindTurnBasedMatchCallbackProxy
        fun Find(Outer: UObject, ResourceName: String): FindTurnBasedMatchCallbackProxy
        fun GetDefaultObject(): FindTurnBasedMatchCallbackProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FindTurnBasedMatchCallbackProxy
        fun C(Other: UObject): FindTurnBasedMatchCallbackProxy
        fun C(Other: Any): FindTurnBasedMatchCallbackProxy
    }
}

external object EInAppPurchaseState {
    var Unknown: String /* "Unknown" */
    var Success: String /* "Success" */
    var Failed: String /* "Failed" */
    var Cancelled: String /* "Cancelled" */
    var Invalid: String /* "Invalid" */
    var NotAllowed: String /* "NotAllowed" */
    var Restored: String /* "Restored" */
    var AlreadyOwned: String /* "AlreadyOwned" */
    var EInAppPurchaseState_MAX: String /* "EInAppPurchaseState_MAX" */
}

external open class InAppPurchaseProductInfo {
    open var Identifier: String
    open var TransactionIdentifier: String
    open var DisplayName: String
    open var DisplayDescription: String
    open var DisplayPrice: String
    open var RawPrice: Number
    open var CurrencyCode: String
    open var CurrencySymbol: String
    open var DecimalSeparator: String
    open var GroupingSeparator: String
    open var ReceiptData: String
    open fun clone(): InAppPurchaseProductInfo

    companion object {
        fun C(Other: UObject): InAppPurchaseProductInfo
        fun C(Other: Any): InAppPurchaseProductInfo
    }
}

external open class InAppPurchaseProductRequest {
    open var ProductIdentifier: String
    open var bIsConsumable: Boolean
    open fun clone(): InAppPurchaseProductRequest

    companion object {
        fun C(Other: UObject): InAppPurchaseProductRequest
        fun C(Other: Any): InAppPurchaseProductRequest
    }
}

external open class InAppPurchaseCallbackProxy : UObject {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<(PurchaseStatus: String /* "Unknown" | "Success" | "Failed" | "Cancelled" | "Invalid" | "NotAllowed" | "Restored" | "AlreadyOwned" | "EInAppPurchaseState_MAX" */, InAppPurchaseReceipts: InAppPurchaseProductInfo) -> Unit>
    open var OnFailure: UnrealEngineMulticastDelegate<(PurchaseStatus: String /* "Unknown" | "Success" | "Failed" | "Cancelled" | "Invalid" | "NotAllowed" | "Restored" | "AlreadyOwned" | "EInAppPurchaseState_MAX" */, InAppPurchaseReceipts: InAppPurchaseProductInfo) -> Unit>

    companion object {
        fun Load(ResourceName: String): InAppPurchaseCallbackProxy
        fun Find(Outer: UObject, ResourceName: String): InAppPurchaseCallbackProxy
        fun GetDefaultObject(): InAppPurchaseCallbackProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InAppPurchaseCallbackProxy
        fun CreateProxyObjectForInAppPurchase(PlayerController: PlayerController, ProductRequest: InAppPurchaseProductRequest): InAppPurchaseCallbackProxy
        fun C(Other: UObject): InAppPurchaseCallbackProxy
        fun C(Other: Any): InAppPurchaseCallbackProxy
    }
}

external object EInAppPurchaseStatus {
    var Invalid: String /* "Invalid" */
    var Failed: String /* "Failed" */
    var Deferred: String /* "Deferred" */
    var Canceled: String /* "Canceled" */
    var Purchased: String /* "Purchased" */
    var Restored: String /* "Restored" */
    var EInAppPurchaseStatus_MAX: String /* "EInAppPurchaseStatus_MAX" */
}

external open class InAppPurchaseReceiptInfo2 {
    open var ItemName: String
    open var ItemId: String
    open var ValidationInfo: String
    open fun clone(): InAppPurchaseReceiptInfo2

    companion object {
        fun C(Other: UObject): InAppPurchaseReceiptInfo2
        fun C(Other: Any): InAppPurchaseReceiptInfo2
    }
}

external open class InAppPurchaseProductRequest2 {
    open var ProductIdentifier: String
    open var bIsConsumable: Boolean
    open fun clone(): InAppPurchaseProductRequest2

    companion object {
        fun C(Other: UObject): InAppPurchaseProductRequest2
        fun C(Other: Any): InAppPurchaseProductRequest2
    }
}

external open class InAppPurchaseCallbackProxy2 : UObject {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<(PurchaseStatus: String /* "Invalid" | "Failed" | "Deferred" | "Canceled" | "Purchased" | "Restored" | "EInAppPurchaseStatus_MAX" */, InAppPurchaseReceipts: Array<InAppPurchaseReceiptInfo2>) -> Unit>
    open var OnFailure: UnrealEngineMulticastDelegate<(PurchaseStatus: String /* "Invalid" | "Failed" | "Deferred" | "Canceled" | "Purchased" | "Restored" | "EInAppPurchaseStatus_MAX" */, InAppPurchaseReceipts: Array<InAppPurchaseReceiptInfo2>) -> Unit>

    companion object {
        fun Load(ResourceName: String): InAppPurchaseCallbackProxy2
        fun Find(Outer: UObject, ResourceName: String): InAppPurchaseCallbackProxy2
        fun GetDefaultObject(): InAppPurchaseCallbackProxy2
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InAppPurchaseCallbackProxy2
        fun ProcessanyNewUnprocessedPurchasesv2(PlayerController: PlayerController): InAppPurchaseCallbackProxy2
        fun QueryforOwnedPurchases(PlayerController: PlayerController): InAppPurchaseCallbackProxy2
        fun CreateProxyObjectForInAppPurchase(PlayerController: PlayerController, ProductRequest: InAppPurchaseProductRequest2): InAppPurchaseCallbackProxy2
        fun C(Other: UObject): InAppPurchaseCallbackProxy2
        fun C(Other: Any): InAppPurchaseCallbackProxy2
    }
}

external open class InAppPurchaseQueryCallbackProxy : UObject {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<(InAppPurchaseInformation: Array<InAppPurchaseProductInfo>) -> Unit>
    open var OnFailure: UnrealEngineMulticastDelegate<(InAppPurchaseInformation: Array<InAppPurchaseProductInfo>) -> Unit>

    companion object {
        fun Load(ResourceName: String): InAppPurchaseQueryCallbackProxy
        fun Find(Outer: UObject, ResourceName: String): InAppPurchaseQueryCallbackProxy
        fun GetDefaultObject(): InAppPurchaseQueryCallbackProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InAppPurchaseQueryCallbackProxy
        fun ReadInAppPurchaseInformation(PlayerController: PlayerController, ProductIdentifiers: Array<String>): InAppPurchaseQueryCallbackProxy
        fun C(Other: UObject): InAppPurchaseQueryCallbackProxy
        fun C(Other: Any): InAppPurchaseQueryCallbackProxy
    }
}

external object EOnlineProxyStoreOfferDiscountType {
    var NotOnSale: String /* "NotOnSale" */
    var Percentage: String /* "Percentage" */
    var DiscountAmount: String /* "DiscountAmount" */
    var PayAmount: String /* "PayAmount" */
    var EOnlineProxyStoreOfferDiscountType_MAX: String /* "EOnlineProxyStoreOfferDiscountType_MAX" */
}

external open class OnlineProxyStoreOffer {
    open var OfferId: String
    open var Title: String
    open var Description: String
    open var LongDescription: String
    open var RegularPriceText: String
    open var RegularPrice: Number
    open var PriceText: String
    open var NumericPrice: Number
    open var CurrencyCode: String
    open var ReleaseDate: DateTime
    open var ExpirationDate: DateTime
    open var DiscountType: String /* "NotOnSale" | "Percentage" | "DiscountAmount" | "PayAmount" | "EOnlineProxyStoreOfferDiscountType_MAX" */
    open var DynamicFields: Any
    open fun clone(): OnlineProxyStoreOffer

    companion object {
        fun C(Other: UObject): OnlineProxyStoreOffer
        fun C(Other: Any): OnlineProxyStoreOffer
    }
}

external open class InAppPurchaseQueryCallbackProxy2 : UObject {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<(InAppOfferInformation: Array<OnlineProxyStoreOffer>) -> Unit>
    open var OnFailure: UnrealEngineMulticastDelegate<(InAppOfferInformation: Array<OnlineProxyStoreOffer>) -> Unit>

    companion object {
        fun Load(ResourceName: String): InAppPurchaseQueryCallbackProxy2
        fun Find(Outer: UObject, ResourceName: String): InAppPurchaseQueryCallbackProxy2
        fun GetDefaultObject(): InAppPurchaseQueryCallbackProxy2
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InAppPurchaseQueryCallbackProxy2
        fun ReadInAppPurchaseInformation2(PlayerController: PlayerController, ProductIdentifiers: Array<String>): InAppPurchaseQueryCallbackProxy2
        fun C(Other: UObject): InAppPurchaseQueryCallbackProxy2
        fun C(Other: Any): InAppPurchaseQueryCallbackProxy2
    }
}

external open class InAppPurchaseRestoreInfo {
    open var Identifier: String
    open var ReceiptData: String
    open var TransactionIdentifier: String
    open fun clone(): InAppPurchaseRestoreInfo

    companion object {
        fun C(Other: UObject): InAppPurchaseRestoreInfo
        fun C(Other: Any): InAppPurchaseRestoreInfo
    }
}

external open class InAppPurchaseRestoreCallbackProxy : UObject {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<(CompletionStatus: String /* "Unknown" | "Success" | "Failed" | "Cancelled" | "Invalid" | "NotAllowed" | "Restored" | "AlreadyOwned" | "EInAppPurchaseState_MAX" */, InAppRestorePurchaseInformation: Array<InAppPurchaseRestoreInfo>) -> Unit>
    open var OnFailure: UnrealEngineMulticastDelegate<(CompletionStatus: String /* "Unknown" | "Success" | "Failed" | "Cancelled" | "Invalid" | "NotAllowed" | "Restored" | "AlreadyOwned" | "EInAppPurchaseState_MAX" */, InAppRestorePurchaseInformation: Array<InAppPurchaseRestoreInfo>) -> Unit>

    companion object {
        fun Load(ResourceName: String): InAppPurchaseRestoreCallbackProxy
        fun Find(Outer: UObject, ResourceName: String): InAppPurchaseRestoreCallbackProxy
        fun GetDefaultObject(): InAppPurchaseRestoreCallbackProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InAppPurchaseRestoreCallbackProxy
        fun CreateProxyObjectForInAppPurchaseRestore(ConsumableProductFlags: Array<InAppPurchaseProductRequest>, PlayerController: PlayerController): InAppPurchaseRestoreCallbackProxy
        fun C(Other: UObject): InAppPurchaseRestoreCallbackProxy
        fun C(Other: Any): InAppPurchaseRestoreCallbackProxy
    }
}

external open class InAppPurchaseRestoreInfo2 {
    open var ItemName: String
    open var ItemId: String
    open var ValidationInfo: String
    open fun clone(): InAppPurchaseRestoreInfo2

    companion object {
        fun C(Other: UObject): InAppPurchaseRestoreInfo2
        fun C(Other: Any): InAppPurchaseRestoreInfo2
    }
}

external open class InAppPurchaseRestoreCallbackProxy2 : UObject {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<(PurchaseStatus: String /* "Invalid" | "Failed" | "Deferred" | "Canceled" | "Purchased" | "Restored" | "EInAppPurchaseStatus_MAX" */, InAppPurchaseRestoreInfo: Array<InAppPurchaseRestoreInfo2>) -> Unit>
    open var OnFailure: UnrealEngineMulticastDelegate<(PurchaseStatus: String /* "Invalid" | "Failed" | "Deferred" | "Canceled" | "Purchased" | "Restored" | "EInAppPurchaseStatus_MAX" */, InAppPurchaseRestoreInfo: Array<InAppPurchaseRestoreInfo2>) -> Unit>

    companion object {
        fun Load(ResourceName: String): InAppPurchaseRestoreCallbackProxy2
        fun Find(Outer: UObject, ResourceName: String): InAppPurchaseRestoreCallbackProxy2
        fun GetDefaultObject(): InAppPurchaseRestoreCallbackProxy2
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InAppPurchaseRestoreCallbackProxy2
        fun CreateProxyObjectForInAppPurchaseRestore(ConsumableProductFlags: Array<InAppPurchaseProductRequest2>, PlayerController: PlayerController): InAppPurchaseRestoreCallbackProxy2
        fun C(Other: UObject): InAppPurchaseRestoreCallbackProxy2
        fun C(Other: Any): InAppPurchaseRestoreCallbackProxy2
    }
}

external open class IpConnection : NetConnection {
    constructor()
    constructor(Outer: UObject)
    open var SocketErrorDisconnectDelay: Number

    companion object {
        fun Load(ResourceName: String): IpConnection
        fun Find(Outer: UObject, ResourceName: String): IpConnection
        fun GetDefaultObject(): IpConnection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): IpConnection
        fun C(Other: UObject): IpConnection
        fun C(Other: Any): IpConnection
    }
}

external open class IpNetDriver : NetDriver {
    constructor()
    constructor(Outer: UObject)
    open var LogPortUnreach: Boolean
    open var AllowPlayerPortUnreach: Boolean
    open var MaxPortCountToTry: Any
    open var ServerDesiredSocketReceiveBufferBytes: Any
    open var ServerDesiredSocketSendBufferBytes: Any
    open var ClientDesiredSocketReceiveBufferBytes: Any
    open var ClientDesiredSocketSendBufferBytes: Any
    open var MaxSecondsInReceive: Any
    open var NbPacketsBetweenReceiveTimeTest: Number
    open var ResolutionConnectionTimeout: Number

    companion object {
        fun Load(ResourceName: String): IpNetDriver
        fun Find(Outer: UObject, ResourceName: String): IpNetDriver
        fun GetDefaultObject(): IpNetDriver
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): IpNetDriver
        fun C(Other: UObject): IpNetDriver
        fun C(Other: Any): IpNetDriver
    }
}

external open class JoinSessionCallbackProxy : OnlineBlueprintCallProxyBase {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnFailure: UnrealEngineMulticastDelegate<() -> Unit>

    companion object {
        fun Load(ResourceName: String): JoinSessionCallbackProxy
        fun Find(Outer: UObject, ResourceName: String): JoinSessionCallbackProxy
        fun GetDefaultObject(): JoinSessionCallbackProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JoinSessionCallbackProxy
        fun JoinSession(WorldContextObject: UObject, PlayerController: PlayerController, SearchResult: BlueprintSessionResult): JoinSessionCallbackProxy
        fun C(Other: UObject): JoinSessionCallbackProxy
        fun C(Other: Any): JoinSessionCallbackProxy
    }
}

external open class LeaderboardBlueprintLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LeaderboardBlueprintLibrary
        fun Find(Outer: UObject, ResourceName: String): LeaderboardBlueprintLibrary
        fun GetDefaultObject(): LeaderboardBlueprintLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LeaderboardBlueprintLibrary
        fun WriteLeaderboardInteger(PlayerController: PlayerController, StatName: String, StatValue: Number): Boolean
        fun C(Other: UObject): LeaderboardBlueprintLibrary
        fun C(Other: Any): LeaderboardBlueprintLibrary
    }
}

external open class LeaderboardFlushCallbackProxy : UObject {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<(SessionName: String) -> Unit>
    open var OnFailure: UnrealEngineMulticastDelegate<(SessionName: String) -> Unit>

    companion object {
        fun Load(ResourceName: String): LeaderboardFlushCallbackProxy
        fun Find(Outer: UObject, ResourceName: String): LeaderboardFlushCallbackProxy
        fun GetDefaultObject(): LeaderboardFlushCallbackProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LeaderboardFlushCallbackProxy
        fun CreateProxyObjectForFlush(PlayerController: PlayerController, SessionName: String): LeaderboardFlushCallbackProxy
        fun C(Other: UObject): LeaderboardFlushCallbackProxy
        fun C(Other: Any): LeaderboardFlushCallbackProxy
    }
}

external open class LeaderboardQueryCallbackProxy : UObject {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<(LeaderboardValue: Number) -> Unit>
    open var OnFailure: UnrealEngineMulticastDelegate<(LeaderboardValue: Number) -> Unit>

    companion object {
        fun Load(ResourceName: String): LeaderboardQueryCallbackProxy
        fun Find(Outer: UObject, ResourceName: String): LeaderboardQueryCallbackProxy
        fun GetDefaultObject(): LeaderboardQueryCallbackProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LeaderboardQueryCallbackProxy
        fun ReadLeaderboardInteger(PlayerController: PlayerController, StatName: String): LeaderboardQueryCallbackProxy
        fun C(Other: UObject): LeaderboardQueryCallbackProxy
        fun C(Other: Any): LeaderboardQueryCallbackProxy
    }
}

external open class LogoutCallbackProxy : BlueprintAsyncActionBase {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<(PlayerController: PlayerController) -> Unit>
    open var OnFailure: UnrealEngineMulticastDelegate<(PlayerController: PlayerController) -> Unit>

    companion object {
        fun Load(ResourceName: String): LogoutCallbackProxy
        fun Find(Outer: UObject, ResourceName: String): LogoutCallbackProxy
        fun GetDefaultObject(): LogoutCallbackProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LogoutCallbackProxy
        fun Logout(WorldContextObject: UObject, PlayerController: PlayerController): LogoutCallbackProxy
        fun C(Other: UObject): LogoutCallbackProxy
        fun C(Other: Any): LogoutCallbackProxy
    }
}

external open class OnlineBeacon(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var BeaconConnectionInitialTimeout: Number
    open var BeaconConnectionTimeout: Number
    open var NetDriver: NetDriver

    companion object {
        fun GetDefaultObject(): OnlineBeacon
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): OnlineBeacon
        fun C(Other: UObject): OnlineBeacon
        fun C(Other: Any): OnlineBeacon
    }
}

external open class OnlineBeaconHostObject(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var BeaconTypeName: String
    open var ClientBeaconActorClass: UnrealEngineClass
    open var ClientActors: Array<OnlineBeaconClient>

    companion object {
        fun GetDefaultObject(): OnlineBeaconHostObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): OnlineBeaconHostObject
        fun C(Other: UObject): OnlineBeaconHostObject
        fun C(Other: Any): OnlineBeaconHostObject
    }
}

external object EBeaconConnectionState {
    var Invalid: String /* "Invalid" */
    var Closed: String /* "Closed" */
    var Pending: String /* "Pending" */
    var Open: String /* "Open" */
    var EBeaconConnectionState_MAX: String /* "EBeaconConnectionState_MAX" */
}

external open class OnlineBeaconClient(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : OnlineBeacon {
    open var BeaconOwner: OnlineBeaconHostObject
    open var BeaconConnection: NetConnection
    open var ConnectionState: String /* "Invalid" | "Closed" | "Pending" | "Open" | "EBeaconConnectionState_MAX" */
    open fun ClientOnConnected()

    companion object {
        fun GetDefaultObject(): OnlineBeaconClient
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): OnlineBeaconClient
        fun C(Other: UObject): OnlineBeaconClient
        fun C(Other: Any): OnlineBeaconClient
    }
}

external open class OnlineBeaconHost(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : OnlineBeacon {
    open var ListenPort: Number
    open var ClientActors: Array<OnlineBeaconClient>

    companion object {
        fun GetDefaultObject(): OnlineBeaconHost
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): OnlineBeaconHost
        fun C(Other: UObject): OnlineBeaconHost
        fun C(Other: Any): OnlineBeaconHost
    }
}

external open class OnlineEngineInterfaceImpl : OnlineEngineInterface {
    constructor()
    constructor(Outer: UObject)
    open var MappedUniqueNetIdTypes: Any
    open var CompatibleUniqueNetIdTypes: Array<String>
    open var VoiceSubsystemNameOverride: String

    companion object {
        fun Load(ResourceName: String): OnlineEngineInterfaceImpl
        fun Find(Outer: UObject, ResourceName: String): OnlineEngineInterfaceImpl
        fun GetDefaultObject(): OnlineEngineInterfaceImpl
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): OnlineEngineInterfaceImpl
        fun C(Other: UObject): OnlineEngineInterfaceImpl
        fun C(Other: Any): OnlineEngineInterfaceImpl
    }
}

external open class PIELoginSettingsInternal {
    open var ID: String
    open var Token: String
    open var Type: String
    open var TokenBytes: Array<Number>
    open fun clone(): PIELoginSettingsInternal

    companion object {
        fun C(Other: UObject): PIELoginSettingsInternal
        fun C(Other: Any): PIELoginSettingsInternal
    }
}

external open class OnlinePIESettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var bOnlinePIEEnabled: Boolean
    open var Logins: Array<PIELoginSettingsInternal>

    companion object {
        fun Load(ResourceName: String): OnlinePIESettings
        fun Find(Outer: UObject, ResourceName: String): OnlinePIESettings
        fun GetDefaultObject(): OnlinePIESettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): OnlinePIESettings
        fun C(Other: UObject): OnlinePIESettings
        fun C(Other: Any): OnlinePIESettings
    }
}

external open class OnlineSessionClient : OnlineSession {
    constructor()
    constructor(Outer: UObject)
    open var bIsFromInvite: Boolean
    open var bHandlingDisconnect: Boolean

    companion object {
        fun Load(ResourceName: String): OnlineSessionClient
        fun Find(Outer: UObject, ResourceName: String): OnlineSessionClient
        fun GetDefaultObject(): OnlineSessionClient
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): OnlineSessionClient
        fun C(Other: UObject): OnlineSessionClient
        fun C(Other: Any): OnlineSessionClient
    }
}

external open class PlayerReservation {
    open var UniqueId: UniqueNetIdRepl
    open var ValidationStr: String
    open var Platform: String
    open var bAllowCrossplay: Boolean
    open var ElapsedTime: Number
    open fun clone(): PlayerReservation

    companion object {
        fun C(Other: UObject): PlayerReservation
        fun C(Other: Any): PlayerReservation
    }
}

external open class PartyReservation {
    open var TeamNum: Number
    open var PartyLeader: UniqueNetIdRepl
    open var PartyMembers: Array<PlayerReservation>
    open var RemovedPartyMembers: Array<PlayerReservation>
    open fun clone(): PartyReservation

    companion object {
        fun C(Other: UObject): PartyReservation
        fun C(Other: Any): PartyReservation
    }
}

external object EClientRequestType {
    var NonePending: String /* "NonePending" */
    var ExistingSessionReservation: String /* "ExistingSessionReservation" */
    var ReservationUpdate: String /* "ReservationUpdate" */
    var EmptyServerReservation: String /* "EmptyServerReservation" */
    var Reconnect: String /* "Reconnect" */
    var Abandon: String /* "Abandon" */
    var ReservationRemoveMembers: String /* "ReservationRemoveMembers" */
    var AddOrUpdateReservation: String /* "AddOrUpdateReservation" */
    var EClientRequestType_MAX: String /* "EClientRequestType_MAX" */
}

external object EPartyReservationResult {
    var NoResult: String /* "NoResult" */
    var RequestPending: String /* "RequestPending" */
    var GeneralError: String /* "GeneralError" */
    var PartyLimitReached: String /* "PartyLimitReached" */
    var IncorrectPlayerCount: String /* "IncorrectPlayerCount" */
    var RequestTimedOut: String /* "RequestTimedOut" */
    var ReservationDuplicate: String /* "ReservationDuplicate" */
    var ReservationNotFound: String /* "ReservationNotFound" */
    var ReservationAccepted: String /* "ReservationAccepted" */
    var ReservationDenied: String /* "ReservationDenied" */
    var ReservationDenied_CrossPlayRestriction: String /* "ReservationDenied_CrossPlayRestriction" */
    var ReservationDenied_Banned: String /* "ReservationDenied_Banned" */
    var ReservationRequestCanceled: String /* "ReservationRequestCanceled" */
    var ReservationInvalid: String /* "ReservationInvalid" */
    var BadSessionId: String /* "BadSessionId" */
    var ReservationDenied_ContainsExistingPlayers: String /* "ReservationDenied_ContainsExistingPlayers" */
    var EPartyReservationResult_MAX: String /* "EPartyReservationResult_MAX" */
}

external open class PartyBeaconClient(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : OnlineBeaconClient {
    open var DestSessionId: String
    open var PendingReservation: PartyReservation
    open var RequestType: String /* "NonePending" | "ExistingSessionReservation" | "ReservationUpdate" | "EmptyServerReservation" | "Reconnect" | "Abandon" | "ReservationRemoveMembers" | "AddOrUpdateReservation" | "EClientRequestType_MAX" */
    open var bPendingReservationSent: Boolean
    open var bCancelReservation: Boolean
    open fun ServerUpdateReservationRequest(SessionId: String, ReservationUpdate: PartyReservation)
    open fun ServerReservationRequest(SessionId: String, Reservation: PartyReservation)
    open fun ServerRemoveMemberFromReservationRequest(SessionId: String, ReservationUpdate: PartyReservation)
    open fun ServerCancelReservationRequest(PartyLeader: UniqueNetIdRepl)
    open fun ServerAddOrUpdateReservationRequest(SessionId: String, Reservation: PartyReservation)
    open fun ClientSendReservationUpdates(NumRemainingReservations: Number)
    open fun ClientSendReservationFull()
    open fun ClientReservationResponse(ReservationResponse: String /* "NoResult" | "RequestPending" | "GeneralError" | "PartyLimitReached" | "IncorrectPlayerCount" | "RequestTimedOut" | "ReservationDuplicate" | "ReservationNotFound" | "ReservationAccepted" | "ReservationDenied" | "ReservationDenied_CrossPlayRestriction" | "ReservationDenied_Banned" | "ReservationRequestCanceled" | "ReservationInvalid" | "BadSessionId" | "ReservationDenied_ContainsExistingPlayers" | "EPartyReservationResult_MAX" */)
    open fun ClientCancelReservationResponse(ReservationResponse: String /* "NoResult" | "RequestPending" | "GeneralError" | "PartyLimitReached" | "IncorrectPlayerCount" | "RequestTimedOut" | "ReservationDuplicate" | "ReservationNotFound" | "ReservationAccepted" | "ReservationDenied" | "ReservationDenied_CrossPlayRestriction" | "ReservationDenied_Banned" | "ReservationRequestCanceled" | "ReservationInvalid" | "BadSessionId" | "ReservationDenied_ContainsExistingPlayers" | "EPartyReservationResult_MAX" */)

    companion object {
        fun GetDefaultObject(): PartyBeaconClient
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PartyBeaconClient
        fun C(Other: UObject): PartyBeaconClient
        fun C(Other: Any): PartyBeaconClient
    }
}

external open class PartyBeaconCrossplayPlatformMapping {
    open var PlatformName: String
    open var PlatformType: String
    open fun clone(): PartyBeaconCrossplayPlatformMapping

    companion object {
        fun C(Other: UObject): PartyBeaconCrossplayPlatformMapping
        fun C(Other: Any): PartyBeaconCrossplayPlatformMapping
    }
}

external open class PartyBeaconState : UObject {
    constructor()
    constructor(Outer: UObject)
    open var SessionName: String
    open var NumConsumedReservations: Number
    open var MaxReservations: Number
    open var NumTeams: Number
    open var NumPlayersPerTeam: Number
    open var TeamAssignmentMethod: String
    open var ReservedHostTeamNum: Number
    open var ForceTeamNum: Number
    open var bRestrictCrossConsole: Boolean
    open var PlatformCrossplayRestrictions: Array<String>
    open var PlatformTypeMapping: Array<PartyBeaconCrossplayPlatformMapping>
    open var bEnableRemovalRequests: Boolean
    open var Reservations: Array<PartyReservation>

    companion object {
        fun Load(ResourceName: String): PartyBeaconState
        fun Find(Outer: UObject, ResourceName: String): PartyBeaconState
        fun GetDefaultObject(): PartyBeaconState
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PartyBeaconState
        fun C(Other: UObject): PartyBeaconState
        fun C(Other: Any): PartyBeaconState
    }
}

external open class PartyBeaconHost(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : OnlineBeaconHostObject {
    open var State: PartyBeaconState
    open var bLogoutOnSessionTimeout: Boolean
    open var SessionTimeoutSecs: Number
    open var TravelSessionTimeoutSecs: Number

    companion object {
        fun GetDefaultObject(): PartyBeaconHost
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PartyBeaconHost
        fun C(Other: UObject): PartyBeaconHost
        fun C(Other: Any): PartyBeaconHost
    }
}

external object EMPMatchOutcome {
    var None: String /* "None" */
    var Quit: String /* "Quit" */
    var Won: String /* "Won" */
    var Lost: String /* "Lost" */
    var Tied: String /* "Tied" */
    var TimeExpired: String /* "TimeExpired" */
    var First: String /* "First" */
    var Second: String /* "Second" */
    var Third: String /* "Third" */
    var Fourth: String /* "Fourth" */
    var EMPMatchOutcome_MAX: String /* "EMPMatchOutcome_MAX" */
}

external open class QuitMatchCallbackProxy : OnlineBlueprintCallProxyBase {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnFailure: UnrealEngineMulticastDelegate<() -> Unit>

    companion object {
        fun Load(ResourceName: String): QuitMatchCallbackProxy
        fun Find(Outer: UObject, ResourceName: String): QuitMatchCallbackProxy
        fun GetDefaultObject(): QuitMatchCallbackProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): QuitMatchCallbackProxy
        fun QuitMatch(WorldContextObject: UObject, PlayerController: PlayerController, MatchID: String, Outcome: String /* "None" | "Quit" | "Won" | "Lost" | "Tied" | "TimeExpired" | "First" | "Second" | "Third" | "Fourth" | "EMPMatchOutcome_MAX" */, TurnTimeoutInSeconds: Number): QuitMatchCallbackProxy
        fun C(Other: UObject): QuitMatchCallbackProxy
        fun C(Other: Any): QuitMatchCallbackProxy
    }
}

external open class ShowLoginUICallbackProxy : BlueprintAsyncActionBase {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<(PlayerController: PlayerController) -> Unit>
    open var OnFailure: UnrealEngineMulticastDelegate<(PlayerController: PlayerController) -> Unit>

    companion object {
        fun Load(ResourceName: String): ShowLoginUICallbackProxy
        fun Find(Outer: UObject, ResourceName: String): ShowLoginUICallbackProxy
        fun GetDefaultObject(): ShowLoginUICallbackProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ShowLoginUICallbackProxy
        fun ShowExternalLoginUI(WorldContextObject: UObject, InPlayerController: PlayerController): ShowLoginUICallbackProxy
        fun C(Other: UObject): ShowLoginUICallbackProxy
        fun C(Other: Any): ShowLoginUICallbackProxy
    }
}

external open class SpectatorReservation {
    open var SpectatorId: UniqueNetIdRepl
    open var Spectator: PlayerReservation
    open fun clone(): SpectatorReservation

    companion object {
        fun C(Other: UObject): SpectatorReservation
        fun C(Other: Any): SpectatorReservation
    }
}

external object ESpectatorClientRequestType {
    var NonePending: String /* "NonePending" */
    var ExistingSessionReservation: String /* "ExistingSessionReservation" */
    var ReservationUpdate: String /* "ReservationUpdate" */
    var EmptyServerReservation: String /* "EmptyServerReservation" */
    var Reconnect: String /* "Reconnect" */
    var Abandon: String /* "Abandon" */
    var ESpectatorClientRequestType_MAX: String /* "ESpectatorClientRequestType_MAX" */
}

external object ESpectatorReservationResult {
    var NoResult: String /* "NoResult" */
    var RequestPending: String /* "RequestPending" */
    var GeneralError: String /* "GeneralError" */
    var SpectatorLimitReached: String /* "SpectatorLimitReached" */
    var IncorrectPlayerCount: String /* "IncorrectPlayerCount" */
    var RequestTimedOut: String /* "RequestTimedOut" */
    var ReservationDuplicate: String /* "ReservationDuplicate" */
    var ReservationNotFound: String /* "ReservationNotFound" */
    var ReservationAccepted: String /* "ReservationAccepted" */
    var ReservationDenied: String /* "ReservationDenied" */
    var ReservationDenied_CrossPlayRestriction: String /* "ReservationDenied_CrossPlayRestriction" */
    var ReservationDenied_Banned: String /* "ReservationDenied_Banned" */
    var ReservationRequestCanceled: String /* "ReservationRequestCanceled" */
    var ReservationInvalid: String /* "ReservationInvalid" */
    var BadSessionId: String /* "BadSessionId" */
    var ReservationDenied_ContainsExistingPlayers: String /* "ReservationDenied_ContainsExistingPlayers" */
    var ESpectatorReservationResult_MAX: String /* "ESpectatorReservationResult_MAX" */
}

external open class SpectatorBeaconClient(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : OnlineBeaconClient {
    open var DestSessionId: String
    open var PendingReservation: SpectatorReservation
    open var RequestType: String /* "NonePending" | "ExistingSessionReservation" | "ReservationUpdate" | "EmptyServerReservation" | "Reconnect" | "Abandon" | "ESpectatorClientRequestType_MAX" */
    open var bPendingReservationSent: Boolean
    open var bCancelReservation: Boolean
    open fun ServerReservationRequest(SessionId: String, Reservation: SpectatorReservation)
    open fun ServerCancelReservationRequest(Spectator: UniqueNetIdRepl)
    open fun ClientSendReservationUpdates(NumRemainingReservations: Number)
    open fun ClientSendReservationFull()
    open fun ClientReservationResponse(ReservationResponse: String /* "NoResult" | "RequestPending" | "GeneralError" | "SpectatorLimitReached" | "IncorrectPlayerCount" | "RequestTimedOut" | "ReservationDuplicate" | "ReservationNotFound" | "ReservationAccepted" | "ReservationDenied" | "ReservationDenied_CrossPlayRestriction" | "ReservationDenied_Banned" | "ReservationRequestCanceled" | "ReservationInvalid" | "BadSessionId" | "ReservationDenied_ContainsExistingPlayers" | "ESpectatorReservationResult_MAX" */)
    open fun ClientCancelReservationResponse(ReservationResponse: String /* "NoResult" | "RequestPending" | "GeneralError" | "SpectatorLimitReached" | "IncorrectPlayerCount" | "RequestTimedOut" | "ReservationDuplicate" | "ReservationNotFound" | "ReservationAccepted" | "ReservationDenied" | "ReservationDenied_CrossPlayRestriction" | "ReservationDenied_Banned" | "ReservationRequestCanceled" | "ReservationInvalid" | "BadSessionId" | "ReservationDenied_ContainsExistingPlayers" | "ESpectatorReservationResult_MAX" */)

    companion object {
        fun GetDefaultObject(): SpectatorBeaconClient
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SpectatorBeaconClient
        fun C(Other: UObject): SpectatorBeaconClient
        fun C(Other: Any): SpectatorBeaconClient
    }
}

external open class SpectatorBeaconState : UObject {
    constructor()
    constructor(Outer: UObject)
    open var SessionName: String
    open var NumConsumedReservations: Number
    open var MaxReservations: Number
    open var bRestrictCrossConsole: Boolean
    open var Reservations: Array<SpectatorReservation>

    companion object {
        fun Load(ResourceName: String): SpectatorBeaconState
        fun Find(Outer: UObject, ResourceName: String): SpectatorBeaconState
        fun GetDefaultObject(): SpectatorBeaconState
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SpectatorBeaconState
        fun C(Other: UObject): SpectatorBeaconState
        fun C(Other: Any): SpectatorBeaconState
    }
}

external open class SpectatorBeaconHost(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : OnlineBeaconHostObject {
    open var State: SpectatorBeaconState
    open var bLogoutOnSessionTimeout: Boolean
    open var SessionTimeoutSecs: Number
    open var TravelSessionTimeoutSecs: Number

    companion object {
        fun GetDefaultObject(): SpectatorBeaconHost
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SpectatorBeaconHost
        fun C(Other: UObject): SpectatorBeaconHost
        fun C(Other: Any): SpectatorBeaconHost
    }
}

external open class TestBeaconClient(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : OnlineBeaconClient {
    open fun ServerPong()
    open fun ClientPing()

    companion object {
        fun GetDefaultObject(): TestBeaconClient
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TestBeaconClient
        fun C(Other: UObject): TestBeaconClient
        fun C(Other: Any): TestBeaconClient
    }
}

external open class TestBeaconHost(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : OnlineBeaconHostObject {
    companion object {
        fun GetDefaultObject(): TestBeaconHost
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TestBeaconHost
        fun C(Other: UObject): TestBeaconHost
        fun C(Other: Any): TestBeaconHost
    }
}

external open class TurnBasedBlueprintLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TurnBasedBlueprintLibrary
        fun Find(Outer: UObject, ResourceName: String): TurnBasedBlueprintLibrary
        fun GetDefaultObject(): TurnBasedBlueprintLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TurnBasedBlueprintLibrary
        fun RegisterTurnBasedMatchInterfaceObject(WorldContextObject: UObject, PlayerController: PlayerController, UObject: UObject)
        fun GetPlayerDisplayName(WorldContextObject: UObject, PlayerController: PlayerController, MatchID: String, PlayerIndex: Number, PlayerDisplayName: String = definedExternally): `T$287`
        fun GetMyPlayerIndex(WorldContextObject: UObject, PlayerController: PlayerController, MatchID: String, PlayerIndex: Number = definedExternally): `T$286`
        fun GetIsMyTurn(WorldContextObject: UObject, PlayerController: PlayerController, MatchID: String, bIsMyTurn: Boolean = definedExternally): `T$285`
        fun C(Other: UObject): TurnBasedBlueprintLibrary
        fun C(Other: Any): TurnBasedBlueprintLibrary
    }
}

external open class VoipListenerSynthComponent : SynthComponent {
    constructor()
    constructor(Outer: UObject)
    open fun IsIdling(): Boolean

    companion object {
        fun Load(ResourceName: String): VoipListenerSynthComponent
        fun Find(Outer: UObject, ResourceName: String): VoipListenerSynthComponent
        fun GetDefaultObject(): VoipListenerSynthComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VoipListenerSynthComponent
        fun C(Other: UObject): VoipListenerSynthComponent
        fun C(Other: Any): VoipListenerSynthComponent
    }
}

external open class K2Node_InAppPurchase : K2Node_BaseAsyncTask {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_InAppPurchase
        fun Find(Outer: UObject, ResourceName: String): K2Node_InAppPurchase
        fun GetDefaultObject(): K2Node_InAppPurchase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_InAppPurchase
        fun C(Other: UObject): K2Node_InAppPurchase
        fun C(Other: Any): K2Node_InAppPurchase
    }
}

external open class K2Node_InAppPurchase2 : K2Node_BaseAsyncTask {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_InAppPurchase2
        fun Find(Outer: UObject, ResourceName: String): K2Node_InAppPurchase2
        fun GetDefaultObject(): K2Node_InAppPurchase2
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_InAppPurchase2
        fun C(Other: UObject): K2Node_InAppPurchase2
        fun C(Other: Any): K2Node_InAppPurchase2
    }
}

external open class K2Node_InAppPurchaseQuery : K2Node_BaseAsyncTask {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_InAppPurchaseQuery
        fun Find(Outer: UObject, ResourceName: String): K2Node_InAppPurchaseQuery
        fun GetDefaultObject(): K2Node_InAppPurchaseQuery
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_InAppPurchaseQuery
        fun C(Other: UObject): K2Node_InAppPurchaseQuery
        fun C(Other: Any): K2Node_InAppPurchaseQuery
    }
}

external open class K2Node_InAppPurchaseQuery2 : K2Node_BaseAsyncTask {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_InAppPurchaseQuery2
        fun Find(Outer: UObject, ResourceName: String): K2Node_InAppPurchaseQuery2
        fun GetDefaultObject(): K2Node_InAppPurchaseQuery2
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_InAppPurchaseQuery2
        fun C(Other: UObject): K2Node_InAppPurchaseQuery2
        fun C(Other: Any): K2Node_InAppPurchaseQuery2
    }
}

external open class K2Node_InAppPurchaseQueryOwned2 : K2Node_BaseAsyncTask {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_InAppPurchaseQueryOwned2
        fun Find(Outer: UObject, ResourceName: String): K2Node_InAppPurchaseQueryOwned2
        fun GetDefaultObject(): K2Node_InAppPurchaseQueryOwned2
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_InAppPurchaseQueryOwned2
        fun C(Other: UObject): K2Node_InAppPurchaseQueryOwned2
        fun C(Other: Any): K2Node_InAppPurchaseQueryOwned2
    }
}

external open class K2Node_InAppPurchaseRestore : K2Node_BaseAsyncTask {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_InAppPurchaseRestore
        fun Find(Outer: UObject, ResourceName: String): K2Node_InAppPurchaseRestore
        fun GetDefaultObject(): K2Node_InAppPurchaseRestore
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_InAppPurchaseRestore
        fun C(Other: UObject): K2Node_InAppPurchaseRestore
        fun C(Other: Any): K2Node_InAppPurchaseRestore
    }
}

external open class K2Node_InAppPurchaseRestore2 : K2Node_BaseAsyncTask {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_InAppPurchaseRestore2
        fun Find(Outer: UObject, ResourceName: String): K2Node_InAppPurchaseRestore2
        fun GetDefaultObject(): K2Node_InAppPurchaseRestore2
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_InAppPurchaseRestore2
        fun C(Other: UObject): K2Node_InAppPurchaseRestore2
        fun C(Other: Any): K2Node_InAppPurchaseRestore2
    }
}

external open class K2Node_InAppPurchaseUnprocessed2 : K2Node_BaseAsyncTask {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_InAppPurchaseUnprocessed2
        fun Find(Outer: UObject, ResourceName: String): K2Node_InAppPurchaseUnprocessed2
        fun GetDefaultObject(): K2Node_InAppPurchaseUnprocessed2
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_InAppPurchaseUnprocessed2
        fun C(Other: UObject): K2Node_InAppPurchaseUnprocessed2
        fun C(Other: Any): K2Node_InAppPurchaseUnprocessed2
    }
}

external open class K2Node_LeaderboardFlush : K2Node_BaseAsyncTask {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_LeaderboardFlush
        fun Find(Outer: UObject, ResourceName: String): K2Node_LeaderboardFlush
        fun GetDefaultObject(): K2Node_LeaderboardFlush
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_LeaderboardFlush
        fun C(Other: UObject): K2Node_LeaderboardFlush
        fun C(Other: Any): K2Node_LeaderboardFlush
    }
}

external open class K2Node_LeaderboardQuery : K2Node_BaseAsyncTask {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_LeaderboardQuery
        fun Find(Outer: UObject, ResourceName: String): K2Node_LeaderboardQuery
        fun GetDefaultObject(): K2Node_LeaderboardQuery
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_LeaderboardQuery
        fun C(Other: UObject): K2Node_LeaderboardQuery
        fun C(Other: Any): K2Node_LeaderboardQuery
    }
}

external open class LiveLinkBasicFrameInterpolationProcessor : LiveLinkFrameInterpolationProcessor {
    constructor()
    constructor(Outer: UObject)
    open var bInterpolatePropertyValues: Boolean

    companion object {
        fun Load(ResourceName: String): LiveLinkBasicFrameInterpolationProcessor
        fun Find(Outer: UObject, ResourceName: String): LiveLinkBasicFrameInterpolationProcessor
        fun GetDefaultObject(): LiveLinkBasicFrameInterpolationProcessor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkBasicFrameInterpolationProcessor
        fun C(Other: UObject): LiveLinkBasicFrameInterpolationProcessor
        fun C(Other: Any): LiveLinkBasicFrameInterpolationProcessor
    }
}

external open class LiveLinkAnimationFrameInterpolationProcessor : LiveLinkBasicFrameInterpolationProcessor {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LiveLinkAnimationFrameInterpolationProcessor
        fun Find(Outer: UObject, ResourceName: String): LiveLinkAnimationFrameInterpolationProcessor
        fun GetDefaultObject(): LiveLinkAnimationFrameInterpolationProcessor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkAnimationFrameInterpolationProcessor
        fun C(Other: UObject): LiveLinkAnimationFrameInterpolationProcessor
        fun C(Other: Any): LiveLinkAnimationFrameInterpolationProcessor
    }
}

external open class LiveLinkAnimationRoleToTransform : LiveLinkFrameTranslator {
    constructor()
    constructor(Outer: UObject)
    open var BoneName: String

    companion object {
        fun Load(ResourceName: String): LiveLinkAnimationRoleToTransform
        fun Find(Outer: UObject, ResourceName: String): LiveLinkAnimationRoleToTransform
        fun GetDefaultObject(): LiveLinkAnimationRoleToTransform
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkAnimationRoleToTransform
        fun C(Other: UObject): LiveLinkAnimationRoleToTransform
        fun C(Other: Any): LiveLinkAnimationRoleToTransform
    }
}

external open class LiveLinkAnimationVirtualSubject : LiveLinkVirtualSubject {
    constructor()
    constructor(Outer: UObject)
    open var bAppendSubjectNameToBones: Boolean

    companion object {
        fun Load(ResourceName: String): LiveLinkAnimationVirtualSubject
        fun Find(Outer: UObject, ResourceName: String): LiveLinkAnimationVirtualSubject
        fun GetDefaultObject(): LiveLinkAnimationVirtualSubject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkAnimationVirtualSubject
        fun C(Other: UObject): LiveLinkAnimationVirtualSubject
        fun C(Other: Any): LiveLinkAnimationVirtualSubject
    }
}

external object ELiveLinkAxis {
    var X: String /* "X" */
    var Y: String /* "Y" */
    var Z: String /* "Z" */
    var XNeg: String /* "XNeg" */
    var YNeg: String /* "YNeg" */
    var ZNeg: String /* "ZNeg" */
    var ELiveLinkAxis_MAX: String /* "ELiveLinkAxis_MAX" */
}

external open class LiveLinkTransformAxisSwitchPreProcessor : LiveLinkFramePreProcessor {
    constructor()
    constructor(Outer: UObject)
    open var OrientationAxisX: String /* "X" | "Y" | "Z" | "XNeg" | "YNeg" | "ZNeg" | "ELiveLinkAxis_MAX" */
    open var OrientationAxisY: String /* "X" | "Y" | "Z" | "XNeg" | "YNeg" | "ZNeg" | "ELiveLinkAxis_MAX" */
    open var OrientationAxisZ: String /* "X" | "Y" | "Z" | "XNeg" | "YNeg" | "ZNeg" | "ELiveLinkAxis_MAX" */
    open var TranslationAxisX: String /* "X" | "Y" | "Z" | "XNeg" | "YNeg" | "ZNeg" | "ELiveLinkAxis_MAX" */
    open var TranslationAxisY: String /* "X" | "Y" | "Z" | "XNeg" | "YNeg" | "ZNeg" | "ELiveLinkAxis_MAX" */
    open var TranslationAxisZ: String /* "X" | "Y" | "Z" | "XNeg" | "YNeg" | "ZNeg" | "ELiveLinkAxis_MAX" */
    open var FrontAxis: String /* "X" | "Y" | "Z" | "XNeg" | "YNeg" | "ZNeg" | "ELiveLinkAxis_MAX" */
    open var RightAxis: String /* "X" | "Y" | "Z" | "XNeg" | "YNeg" | "ZNeg" | "ELiveLinkAxis_MAX" */
    open var UpAxis: String /* "X" | "Y" | "Z" | "XNeg" | "YNeg" | "ZNeg" | "ELiveLinkAxis_MAX" */
    open var bUseOffsetPosition: Boolean
    open var bUseOffsetOrientation: Boolean
    open var OffsetPosition: Vector
    open var OffsetOrientation: Rotator

    companion object {
        fun Load(ResourceName: String): LiveLinkTransformAxisSwitchPreProcessor
        fun Find(Outer: UObject, ResourceName: String): LiveLinkTransformAxisSwitchPreProcessor
        fun GetDefaultObject(): LiveLinkTransformAxisSwitchPreProcessor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkTransformAxisSwitchPreProcessor
        fun C(Other: UObject): LiveLinkTransformAxisSwitchPreProcessor
        fun C(Other: Any): LiveLinkTransformAxisSwitchPreProcessor
    }
}

external open class LiveLinkAnimationAxisSwitchPreProcessor : LiveLinkTransformAxisSwitchPreProcessor {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LiveLinkAnimationAxisSwitchPreProcessor
        fun Find(Outer: UObject, ResourceName: String): LiveLinkAnimationAxisSwitchPreProcessor
        fun GetDefaultObject(): LiveLinkAnimationAxisSwitchPreProcessor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkAnimationAxisSwitchPreProcessor
        fun C(Other: UObject): LiveLinkAnimationAxisSwitchPreProcessor
        fun C(Other: Any): LiveLinkAnimationAxisSwitchPreProcessor
    }
}

external open class LiveLinkWorldTime {
    open var Time: Any
    open var Offset: Any
    open fun clone(): LiveLinkWorldTime

    companion object {
        fun C(Other: UObject): LiveLinkWorldTime
        fun C(Other: Any): LiveLinkWorldTime
    }
}

external open class LiveLinkMetaData {
    open var StringMetadata: Any
    open var SceneTime: QualifiedFrameTime
    open fun clone(): LiveLinkMetaData

    companion object {
        fun C(Other: UObject): LiveLinkMetaData
        fun C(Other: Any): LiveLinkMetaData
    }
}

external open class LiveLinkBaseFrameData {
    open var WorldTime: LiveLinkWorldTime
    open var MetaData: LiveLinkMetaData
    open var PropertyValues: Array<Number>
    open fun clone(): LiveLinkBaseFrameData

    companion object {
        fun C(Other: UObject): LiveLinkBaseFrameData
        fun C(Other: Any): LiveLinkBaseFrameData
    }
}

external open class LiveLinkAnimationFrameData : LiveLinkBaseFrameData {
    open var Transforms: Array<Transform>
    override fun clone(): LiveLinkAnimationFrameData

    companion object {
        fun C(Other: UObject): LiveLinkAnimationFrameData
        fun C(Other: Any): LiveLinkAnimationFrameData
    }
}

external open class LiveLinkBaseStaticData {
    open var PropertyNames: Array<String>
    open fun clone(): LiveLinkBaseStaticData

    companion object {
        fun C(Other: UObject): LiveLinkBaseStaticData
        fun C(Other: Any): LiveLinkBaseStaticData
    }
}

external open class LiveLinkSkeletonStaticData : LiveLinkBaseStaticData {
    open var BoneNames: Array<String>
    open var BoneParents: Array<Number>
    override fun clone(): LiveLinkSkeletonStaticData

    companion object {
        fun C(Other: UObject): LiveLinkSkeletonStaticData
        fun C(Other: Any): LiveLinkSkeletonStaticData
    }
}

external interface `T$759` {
    var BasicData: LiveLinkBasicBlueprintData
    var Value: Number
    var `$`: Boolean
}

external open class LiveLinkBasicBlueprintData : LiveLinkBaseBlueprintData {
    open var StaticData: LiveLinkBaseStaticData
    open var FrameData: LiveLinkBaseFrameData
    override fun clone(): LiveLinkBasicBlueprintData
    open fun GetPropertyValue(PropertyName: String = definedExternally, Value: Number = definedExternally): `T$759`

    companion object {
        fun C(Other: UObject): LiveLinkBasicBlueprintData
        fun C(Other: Any): LiveLinkBasicBlueprintData
        fun GetPropertyValue(BasicData: LiveLinkBasicBlueprintData = definedExternally, PropertyName: String = definedExternally, Value: Number = definedExternally): `T$759`
    }
}

external open class SubjectMetadata {
    open var StringMetadata: Any
    open var SceneTimecode: Timecode
    open var SceneFramerate: FrameRate
    open fun clone(): SubjectMetadata

    companion object {
        fun C(Other: UObject): SubjectMetadata
        fun C(Other: Any): SubjectMetadata
    }
}

external interface `T$760` {
    var LiveLinkTransform: LiveLinkTransform
    var `$`: Number
}

external interface `T$761` {
    var LiveLinkTransform: LiveLinkTransform
    var Transform: Transform
}

external interface `T$762` {
    var LiveLinkTransform: LiveLinkTransform
    var Children: Array<LiveLinkTransform>
}

external interface `T$763` {
    var LiveLinkTransform: LiveLinkTransform
    var Parent: LiveLinkTransform
}

external interface `T$764` {
    var LiveLinkTransform: LiveLinkTransform
    var `$`: Boolean
}

external interface `T$765` {
    var LiveLinkTransform: LiveLinkTransform
    var Name: String
}

external interface `T$766` {
    var LiveLinkTransform: LiveLinkTransform
    var Children: Array<LiveLinkTransform>
}

external open class LiveLinkTransform {
    open fun clone(): LiveLinkTransform
    open fun ChildCount(): `T$760`
    open fun ComponentSpaceTransform(Transform: Transform = definedExternally): `T$761`
    open fun GetChildren(Children: Array<LiveLinkTransform> = definedExternally): `T$762`
    open fun GetParent(Parent: LiveLinkTransform = definedExternally): `T$763`
    open fun HasParent(): `T$764`
    open fun ParentBoneSpaceTransform(Transform: Transform = definedExternally): `T$761`
    open fun TransformName(Name: String = definedExternally): `T$765`

    companion object {
        fun C(Other: UObject): LiveLinkTransform
        fun C(Other: Any): LiveLinkTransform
        fun ChildCount(LiveLinkTransform: LiveLinkTransform = definedExternally): `T$760`
        fun ComponentSpaceTransform(LiveLinkTransform: LiveLinkTransform = definedExternally, Transform: Transform = definedExternally): `T$761`
        fun GetChildren(LiveLinkTransform: LiveLinkTransform = definedExternally, Children: Array<LiveLinkTransform> = definedExternally): `T$766`
        fun GetParent(LiveLinkTransform: LiveLinkTransform = definedExternally, Parent: LiveLinkTransform = definedExternally): `T$763`
        fun HasParent(LiveLinkTransform: LiveLinkTransform = definedExternally): `T$764`
        fun ParentBoneSpaceTransform(LiveLinkTransform: LiveLinkTransform = definedExternally, Transform: Transform = definedExternally): `T$761`
        fun TransformName(LiveLinkTransform: LiveLinkTransform = definedExternally, Name: String = definedExternally): `T$765`
    }
}

external interface `T$767` {
    var SubjectFrameHandle: SubjectFrameHandle
    var AnimationFrameData: LiveLinkAnimationFrameData
    var `$`: Boolean
}

external interface `T$768` {
    var SubjectFrameHandle: SubjectFrameHandle
    var AnimationStaticData: LiveLinkSkeletonStaticData
    var `$`: Boolean
}

external interface `T$769` {
    var SubjectFrameHandle: SubjectFrameHandle
    var BasicBlueprintData: LiveLinkBasicBlueprintData
}

external interface `T$770` {
    var SubjectFrameHandle: SubjectFrameHandle
    var Curves: Any
}

external interface `T$771` {
    var SubjectFrameHandle: SubjectFrameHandle
    var MetaData: SubjectMetadata
}

external interface `T$772` {
    var SubjectFrameHandle: SubjectFrameHandle
    var LiveLinkTransform: LiveLinkTransform
}

external interface `T$773` {
    var SubjectFrameHandle: SubjectFrameHandle
    var `$`: Number
}

external interface `T$774` {
    var SubjectFrameHandle: SubjectFrameHandle
    var TransformNames: Array<String>
}

external interface `T$775` {
    var SubjectFrameHandle: SubjectFrameHandle
    var TransformNames: Array<String>
}

external open class SubjectFrameHandle : LiveLinkBaseBlueprintData {
    override fun clone(): SubjectFrameHandle
    open fun GetAnimationFrameData(AnimationFrameData: LiveLinkAnimationFrameData = definedExternally): `T$767`
    open fun GetAnimationStaticData(AnimationStaticData: LiveLinkSkeletonStaticData = definedExternally): `T$768`
    open fun GetBasicData(BasicBlueprintData: LiveLinkBasicBlueprintData = definedExternally): `T$769`
    open fun GetCurves(Curves: Any = definedExternally): `T$770`
    open fun GetMetadata(MetaData: SubjectMetadata = definedExternally): `T$771`
    open fun GetRootTransform(LiveLinkTransform: LiveLinkTransform = definedExternally): `T$772`
    open fun GetTransformByIndex(TransformIndex: Number = definedExternally, LiveLinkTransform: LiveLinkTransform = definedExternally): `T$772`
    open fun GetTransformByName(TransformName: String = definedExternally, LiveLinkTransform: LiveLinkTransform = definedExternally): `T$772`
    open fun NumberOfTransforms(): `T$773`
    open fun TransformNames(TransformNames: Array<String> = definedExternally): `T$774`

    companion object {
        fun C(Other: UObject): SubjectFrameHandle
        fun C(Other: Any): SubjectFrameHandle
        fun GetAnimationFrameData(SubjectFrameHandle: SubjectFrameHandle = definedExternally, AnimationFrameData: LiveLinkAnimationFrameData = definedExternally): `T$767`
        fun GetAnimationStaticData(SubjectFrameHandle: SubjectFrameHandle = definedExternally, AnimationStaticData: LiveLinkSkeletonStaticData = definedExternally): `T$768`
        fun GetBasicData(SubjectFrameHandle: SubjectFrameHandle = definedExternally, BasicBlueprintData: LiveLinkBasicBlueprintData = definedExternally): `T$769`
        fun GetCurves(SubjectFrameHandle: SubjectFrameHandle = definedExternally, Curves: Any = definedExternally): `T$770`
        fun GetMetadata(SubjectFrameHandle: SubjectFrameHandle = definedExternally, MetaData: SubjectMetadata = definedExternally): `T$771`
        fun GetRootTransform(SubjectFrameHandle: SubjectFrameHandle = definedExternally, LiveLinkTransform: LiveLinkTransform = definedExternally): `T$772`
        fun GetTransformByIndex(SubjectFrameHandle: SubjectFrameHandle = definedExternally, TransformIndex: Number = definedExternally, LiveLinkTransform: LiveLinkTransform = definedExternally): `T$772`
        fun GetTransformByName(SubjectFrameHandle: SubjectFrameHandle = definedExternally, TransformName: String = definedExternally, LiveLinkTransform: LiveLinkTransform = definedExternally): `T$772`
        fun NumberOfTransforms(SubjectFrameHandle: SubjectFrameHandle = definedExternally): `T$773`
        fun TransformNames(SubjectFrameHandle: SubjectFrameHandle = definedExternally, TransformNames: Array<String> = definedExternally): `T$775`
    }
}

external open class LiveLinkSubjectKey {
    open var Source: Guid
    open var SubjectName: LiveLinkSubjectName
    open fun clone(): LiveLinkSubjectKey
    open fun GetSpecificLiveLinkSubjectRole(): UnrealEngineClass
    open fun IsSpecificLiveLinkSubjectEnabled(bForThisFrame: Boolean): Boolean
    open fun SetLiveLinkSubjectEnabled(bEnabled: Boolean)

    companion object {
        fun C(Other: UObject): LiveLinkSubjectKey
        fun C(Other: Any): LiveLinkSubjectKey
        fun GetSpecificLiveLinkSubjectRole(SubjectKey: LiveLinkSubjectKey): UnrealEngineClass
        fun IsSpecificLiveLinkSubjectEnabled(SubjectKey: LiveLinkSubjectKey, bForThisFrame: Boolean): Boolean
        fun SetLiveLinkSubjectEnabled(SubjectKey: LiveLinkSubjectKey, bEnabled: Boolean)
    }
}

external interface `T$776` {
    var SourceHandle: LiveLinkSourceHandle
    var `$`: String
}

external open class LiveLinkSourceHandle {
    open fun clone(): LiveLinkSourceHandle
    open fun GetMagicLeapHandTrackingLiveLinkSource(): `T$427`
    open fun GetSourceMachineName(): `T$776`
    open fun GetSourceStatus(): `T$776`
    open fun GetSourceType(): `T$776`
    open fun IsSourceStillValid(): `T$427`
    open fun RemoveSource(): `T$427`

    companion object {
        fun C(Other: UObject): LiveLinkSourceHandle
        fun C(Other: Any): LiveLinkSourceHandle
        fun GetMagicLeapHandTrackingLiveLinkSource(SourceHandle: LiveLinkSourceHandle = definedExternally): `T$427`
        fun GetSourceMachineName(SourceHandle: LiveLinkSourceHandle = definedExternally): `T$776`
        fun GetSourceStatus(SourceHandle: LiveLinkSourceHandle = definedExternally): `T$776`
        fun GetSourceType(SourceHandle: LiveLinkSourceHandle = definedExternally): `T$776`
        fun IsSourceStillValid(SourceHandle: LiveLinkSourceHandle = definedExternally): `T$427`
        fun RemoveSource(SourceHandle: LiveLinkSourceHandle = definedExternally): `T$427`
    }
}

external open class LiveLinkSubjectRepresentation {
    open var Subject: LiveLinkSubjectName
    open var Role: UnrealEngineClass
    open fun clone(): LiveLinkSubjectRepresentation
    open fun EvaluateLiveLinkFrame(OutBlueprintData: LiveLinkBaseBlueprintData = definedExternally): `T$573`

    companion object {
        fun C(Other: UObject): LiveLinkSubjectRepresentation
        fun C(Other: Any): LiveLinkSubjectRepresentation
        fun EvaluateLiveLinkFrame(SubjectRepresentation: LiveLinkSubjectRepresentation, OutBlueprintData: LiveLinkBaseBlueprintData = definedExternally): `T$573`
    }
}

external interface `T$777` {
    var SubjectFrameHandle: SubjectFrameHandle
    var TransformNames: Array<String>
}

external interface `T$778` {
    var LiveLinkTransform: LiveLinkTransform
    var Children: Array<LiveLinkTransform>
}

external open class LiveLinkBlueprintLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LiveLinkBlueprintLibrary
        fun Find(Outer: UObject, ResourceName: String): LiveLinkBlueprintLibrary
        fun GetDefaultObject(): LiveLinkBlueprintLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkBlueprintLibrary
        fun TransformNames(SubjectFrameHandle: SubjectFrameHandle = definedExternally, TransformNames: Array<String> = definedExternally): `T$777`
        fun TransformName(LiveLinkTransform: LiveLinkTransform = definedExternally, Name: String = definedExternally): `T$765`
        fun SetLiveLinkSubjectEnabled(SubjectKey: LiveLinkSubjectKey, bEnabled: Boolean)
        fun RemoveSource(SourceHandle: LiveLinkSourceHandle = definedExternally): `T$427`
        fun ParentBoneSpaceTransform(LiveLinkTransform: LiveLinkTransform = definedExternally, Transform: Transform = definedExternally): `T$761`
        fun NumberOfTransforms(SubjectFrameHandle: SubjectFrameHandle = definedExternally): `T$773`
        fun IsSpecificLiveLinkSubjectEnabled(SubjectKey: LiveLinkSubjectKey, bForThisFrame: Boolean): Boolean
        fun IsSourceStillValid(SourceHandle: LiveLinkSourceHandle = definedExternally): `T$427`
        fun IsLiveLinkSubjectEnabled(SubjectName: LiveLinkSubjectName): Boolean
        fun HasParent(LiveLinkTransform: LiveLinkTransform = definedExternally): `T$764`
        fun GetTransformByName(SubjectFrameHandle: SubjectFrameHandle = definedExternally, TransformName: String = definedExternally, LiveLinkTransform: LiveLinkTransform = definedExternally): `T$772`
        fun GetTransformByIndex(SubjectFrameHandle: SubjectFrameHandle = definedExternally, TransformIndex: Number = definedExternally, LiveLinkTransform: LiveLinkTransform = definedExternally): `T$772`
        fun GetSpecificLiveLinkSubjectRole(SubjectKey: LiveLinkSubjectKey): UnrealEngineClass
        fun GetSourceType(SourceHandle: LiveLinkSourceHandle = definedExternally): `T$776`
        fun GetSourceStatus(SourceHandle: LiveLinkSourceHandle = definedExternally): `T$776`
        fun GetSourceMachineName(SourceHandle: LiveLinkSourceHandle = definedExternally): `T$776`
        fun GetRootTransform(SubjectFrameHandle: SubjectFrameHandle = definedExternally, LiveLinkTransform: LiveLinkTransform = definedExternally): `T$772`
        fun GetPropertyValue(BasicData: LiveLinkBasicBlueprintData = definedExternally, PropertyName: String = definedExternally, Value: Number = definedExternally): `T$759`
        fun GetParent(LiveLinkTransform: LiveLinkTransform = definedExternally, Parent: LiveLinkTransform = definedExternally): `T$763`
        fun GetMetadata(SubjectFrameHandle: SubjectFrameHandle = definedExternally, MetaData: SubjectMetadata = definedExternally): `T$771`
        fun GetLiveLinkSubjects(bIncludeDisabledSubject: Boolean, bIncludeVirtualSubject: Boolean): Array<LiveLinkSubjectKey>
        fun GetLiveLinkSubjectRole(SubjectName: LiveLinkSubjectName): UnrealEngineClass
        fun GetLiveLinkEnabledSubjectNames(bIncludeVirtualSubject: Boolean): Array<LiveLinkSubjectName>
        fun GetCurves(SubjectFrameHandle: SubjectFrameHandle = definedExternally, Curves: Any = definedExternally): `T$770`
        fun GetChildren(LiveLinkTransform: LiveLinkTransform = definedExternally, Children: Array<LiveLinkTransform> = definedExternally): `T$778`
        fun GetBasicData(SubjectFrameHandle: SubjectFrameHandle = definedExternally, BasicBlueprintData: LiveLinkBasicBlueprintData = definedExternally): `T$769`
        fun GetAnimationStaticData(SubjectFrameHandle: SubjectFrameHandle = definedExternally, AnimationStaticData: LiveLinkSkeletonStaticData = definedExternally): `T$768`
        fun GetAnimationFrameData(SubjectFrameHandle: SubjectFrameHandle = definedExternally, AnimationFrameData: LiveLinkAnimationFrameData = definedExternally): `T$767`
        fun EvaluateLiveLinkFrameWithSpecificRole(SubjectName: LiveLinkSubjectName, Role: UnrealEngineClass, OutBlueprintData: LiveLinkBaseBlueprintData = definedExternally): `T$573`
        fun EvaluateLiveLinkFrameAtWorldTimeOffset(SubjectName: LiveLinkSubjectName, Role: UnrealEngineClass, WorldTimeOffset: Number, OutBlueprintData: LiveLinkBaseBlueprintData = definedExternally): `T$573`
        fun EvaluateLiveLinkFrameAtSceneTime(SubjectName: LiveLinkSubjectName, Role: UnrealEngineClass, SceneTime: Timecode, OutBlueprintData: LiveLinkBaseBlueprintData = definedExternally): `T$573`
        fun EvaluateLiveLinkFrame(SubjectRepresentation: LiveLinkSubjectRepresentation, OutBlueprintData: LiveLinkBaseBlueprintData = definedExternally): `T$573`
        fun ComponentSpaceTransform(LiveLinkTransform: LiveLinkTransform = definedExternally, Transform: Transform = definedExternally): `T$761`
        fun ChildCount(LiveLinkTransform: LiveLinkTransform = definedExternally): `T$760`
        fun C(Other: UObject): LiveLinkBlueprintLibrary
        fun C(Other: Any): LiveLinkBlueprintLibrary
    }
}

external open class LiveLinkBlueprintVirtualSubject : LiveLinkVirtualSubject {
    constructor()
    constructor(Outer: UObject)
    open fun UpdateVirtualSubjectStaticData_Internal(InStruct: LiveLinkBaseStaticData): Boolean
    open fun UpdateVirtualSubjectFrameData_Internal(InStruct: LiveLinkBaseFrameData, bInShouldStampCurrentTime: Boolean): Boolean
    open fun OnUpdate()
    open fun OnInitialize()

    companion object {
        fun Load(ResourceName: String): LiveLinkBlueprintVirtualSubject
        fun Find(Outer: UObject, ResourceName: String): LiveLinkBlueprintVirtualSubject
        fun GetDefaultObject(): LiveLinkBlueprintVirtualSubject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkBlueprintVirtualSubject
        fun C(Other: UObject): LiveLinkBlueprintVirtualSubject
        fun C(Other: Any): LiveLinkBlueprintVirtualSubject
    }
}

external interface `T$779` {
    var bSuccess: Boolean
    var SubjectFrameHandle: SubjectFrameHandle
}

external interface `T$780` {
    var SubjectNames: Array<String>
}

external open class LiveLinkComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var OnLiveLinkUpdated: UnrealEngineMulticastDelegate<(DeltaTime: Number) -> Unit>
    open fun GetSubjectDataAtWorldTime(SubjectName: String, WorldTime: Number, bSuccess: Boolean = definedExternally, SubjectFrameHandle: SubjectFrameHandle = definedExternally): `T$779`
    open fun GetSubjectDataAtSceneTime(SubjectName: String, SceneTime: Timecode, bSuccess: Boolean = definedExternally, SubjectFrameHandle: SubjectFrameHandle = definedExternally): `T$779`
    open fun GetSubjectData(SubjectName: String, bSuccess: Boolean = definedExternally, SubjectFrameHandle: SubjectFrameHandle = definedExternally): `T$779`
    open fun GetAvailableSubjectNames(SubjectNames: Array<String> = definedExternally): `T$780`

    companion object {
        fun Load(ResourceName: String): LiveLinkComponent
        fun Find(Outer: UObject, ResourceName: String): LiveLinkComponent
        fun GetDefaultObject(): LiveLinkComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkComponent
        fun C(Other: UObject): LiveLinkComponent
        fun C(Other: Any): LiveLinkComponent
    }
}

external open class LiveLinkDrivenComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var SubjectName: LiveLinkSubjectName
    open var ActorTransformBone: String
    open var bModifyActorTransform: Boolean
    open var bSetRelativeLocation: Boolean

    companion object {
        fun Load(ResourceName: String): LiveLinkDrivenComponent
        fun Find(Outer: UObject, ResourceName: String): LiveLinkDrivenComponent
        fun GetDefaultObject(): LiveLinkDrivenComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkDrivenComponent
        fun C(Other: UObject): LiveLinkDrivenComponent
        fun C(Other: Any): LiveLinkDrivenComponent
    }
}

external open class LiveLinkRetargetAsset : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LiveLinkRetargetAsset
        fun Find(Outer: UObject, ResourceName: String): LiveLinkRetargetAsset
        fun GetDefaultObject(): LiveLinkRetargetAsset
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkRetargetAsset
        fun C(Other: UObject): LiveLinkRetargetAsset
        fun C(Other: Any): LiveLinkRetargetAsset
    }
}

external open class LiveLinkInstance : AnimInstance {
    constructor()
    constructor(Outer: UObject)
    open var CurrentRetargetAsset: LiveLinkRetargetAsset
    open fun SetSubject(SubjectName: LiveLinkSubjectName)
    open fun SetRetargetAsset(RetargetAsset: UnrealEngineClass)

    companion object {
        fun Load(ResourceName: String): LiveLinkInstance
        fun Find(Outer: UObject, ResourceName: String): LiveLinkInstance
        fun GetDefaultObject(): LiveLinkInstance
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkInstance
        fun C(Other: UObject): LiveLinkInstance
        fun C(Other: Any): LiveLinkInstance
    }
}

external open class ProviderPollResult {
    open var Name: String
    open var MachineName: String
    open var MachineTimeOffset: Any
    open fun clone(): ProviderPollResult

    companion object {
        fun C(Other: UObject): ProviderPollResult
        fun C(Other: Any): ProviderPollResult
    }
}

external interface `T$781` {
    var AvailableProviders: Array<ProviderPollResult>
}

external interface `T$782` {
    var Provider: ProviderPollResult
    var SourceHandle: LiveLinkSourceHandle
}

external open class LiveLinkMessageBusFinder : UObject {
    constructor()
    constructor(Outer: UObject)
    open fun GetAvailableProviders(WorldContextObject: UObject, LatentInfo: LatentActionInfo, Duration: Number, AvailableProviders: Array<ProviderPollResult> = definedExternally): `T$781`

    companion object {
        fun Load(ResourceName: String): LiveLinkMessageBusFinder
        fun Find(Outer: UObject, ResourceName: String): LiveLinkMessageBusFinder
        fun GetDefaultObject(): LiveLinkMessageBusFinder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkMessageBusFinder
        fun ConstructMessageBusFinder(): LiveLinkMessageBusFinder
        fun ConnectToProvider(Provider: ProviderPollResult = definedExternally, SourceHandle: LiveLinkSourceHandle = definedExternally): `T$782`
        fun C(Other: UObject): LiveLinkMessageBusFinder
        fun C(Other: Any): LiveLinkMessageBusFinder
    }
}

external open class LiveLinkMessageBusSourceFactory : LiveLinkSourceFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LiveLinkMessageBusSourceFactory
        fun Find(Outer: UObject, ResourceName: String): LiveLinkMessageBusSourceFactory
        fun GetDefaultObject(): LiveLinkMessageBusSourceFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkMessageBusSourceFactory
        fun C(Other: UObject): LiveLinkMessageBusSourceFactory
        fun C(Other: Any): LiveLinkMessageBusSourceFactory
    }
}

external open class LiveLinkMessageBusSourceSettings : LiveLinkSourceSettings {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LiveLinkMessageBusSourceSettings
        fun Find(Outer: UObject, ResourceName: String): LiveLinkMessageBusSourceSettings
        fun GetDefaultObject(): LiveLinkMessageBusSourceSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkMessageBusSourceSettings
        fun C(Other: UObject): LiveLinkMessageBusSourceSettings
        fun C(Other: Any): LiveLinkMessageBusSourceSettings
    }
}

external open class LiveLinkSourcePreset {
    open var Guid: Guid
    open var Settings: LiveLinkSourceSettings
    open var SourceType: String
    open fun clone(): LiveLinkSourcePreset

    companion object {
        fun C(Other: UObject): LiveLinkSourcePreset
        fun C(Other: Any): LiveLinkSourcePreset
    }
}

external open class LiveLinkSubjectPreset {
    open var Key: LiveLinkSubjectKey
    open var Role: UnrealEngineClass
    open var Settings: LiveLinkSubjectSettings
    open var VirtualSubject: LiveLinkVirtualSubject
    open var bEnabled: Boolean
    open fun clone(): LiveLinkSubjectPreset

    companion object {
        fun C(Other: UObject): LiveLinkSubjectPreset
        fun C(Other: Any): LiveLinkSubjectPreset
    }
}

external open class LiveLinkPreset : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Sources: Array<LiveLinkSourcePreset>
    open var Subjects: Array<LiveLinkSubjectPreset>
    open fun BuildFromClient()
    open fun ApplyToClient(): Boolean
    open fun AddToClient(bRecreatePresets: Boolean): Boolean

    companion object {
        fun Load(ResourceName: String): LiveLinkPreset
        fun Find(Outer: UObject, ResourceName: String): LiveLinkPreset
        fun GetDefaultObject(): LiveLinkPreset
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkPreset
        fun C(Other: UObject): LiveLinkPreset
        fun C(Other: Any): LiveLinkPreset
    }
}

external interface `T$783` {
    var CurveItems: Any
}

external open class LiveLinkRemapAsset : LiveLinkRetargetAsset {
    constructor()
    constructor(Outer: UObject)
    open fun RemapCurveElements(CurveItems: Any = definedExternally): `T$783`
    open fun GetRemappedCurveName(CurveName: String): String
    open fun GetRemappedBoneName(BoneName: String): String

    companion object {
        fun Load(ResourceName: String): LiveLinkRemapAsset
        fun Find(Outer: UObject, ResourceName: String): LiveLinkRemapAsset
        fun GetDefaultObject(): LiveLinkRemapAsset
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkRemapAsset
        fun C(Other: UObject): LiveLinkRemapAsset
        fun C(Other: Any): LiveLinkRemapAsset
    }
}

external open class LiveLinkRoleProjectSetting {
    open var Role: UnrealEngineClass
    open var SettingClass: UnrealEngineClass
    open var FrameInterpolationProcessor: UnrealEngineClass
    open var FramePreProcessors: Array<UnrealEngineClass>
    open fun clone(): LiveLinkRoleProjectSetting

    companion object {
        fun C(Other: UObject): LiveLinkRoleProjectSetting
        fun C(Other: Any): LiveLinkRoleProjectSetting
    }
}

external open class LiveLinkSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var DefaultRoleSettings: Array<LiveLinkRoleProjectSetting>
    open var FrameInterpolationProcessor: UnrealEngineClass
    open var DefaultLiveLinkPreset: LiveLinkPreset
    open var PresetSaveDir: DirectoryPath
    open var ClockOffsetCorrectionStep: Number
    open var DefaultMessageBusSourceMode: String /* "Latest" | "EngineTime" | "Timecode" | "ELiveLinkSourceMode_MAX" */
    open var MessageBusPingRequestFrequency: Any
    open var MessageBusHeartbeatFrequency: Any
    open var MessageBusHeartbeatTimeout: Any
    open var MessageBusTimeBeforeRemovingInactiveSource: Any
    open var TimeWithoutFrameToBeConsiderAsInvalid: Any
    open var ValidColor: LinearColor
    open var InvalidColor: LinearColor
    open var TextSizeSource: Number
    open var TextSizeSubject: Number

    companion object {
        fun Load(ResourceName: String): LiveLinkSettings
        fun Find(Outer: UObject, ResourceName: String): LiveLinkSettings
        fun GetDefaultObject(): LiveLinkSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkSettings
        fun C(Other: UObject): LiveLinkSettings
        fun C(Other: Any): LiveLinkSettings
    }
}

external object ELiveLinkTimecodeProviderEvaluationType {
    var Lerp: String /* "Lerp" */
    var Nearest: String /* "Nearest" */
    var Latest: String /* "Latest" */
    var ELiveLinkTimecodeProviderEvaluationType_MAX: String /* "ELiveLinkTimecodeProviderEvaluationType_MAX" */
}

external open class LiveLinkTimecodeProvider : TimecodeProvider {
    constructor()
    constructor(Outer: UObject)
    open var SubjectKey: LiveLinkSubjectKey
    open var Evaluation: String /* "Lerp" | "Nearest" | "Latest" | "ELiveLinkTimecodeProviderEvaluationType_MAX" */
    open var bOverrideFrameRate: Boolean
    open var OverrideFrameRate: FrameRate
    open var BufferSize: Number

    companion object {
        fun Load(ResourceName: String): LiveLinkTimecodeProvider
        fun Find(Outer: UObject, ResourceName: String): LiveLinkTimecodeProvider
        fun GetDefaultObject(): LiveLinkTimecodeProvider
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkTimecodeProvider
        fun C(Other: UObject): LiveLinkTimecodeProvider
        fun C(Other: Any): LiveLinkTimecodeProvider
    }
}

external open class LiveLinkTimeSynchronizationSource : TimeSynchronizationSource {
    constructor()
    constructor(Outer: UObject)
    open var SubjectName: LiveLinkSubjectName

    companion object {
        fun Load(ResourceName: String): LiveLinkTimeSynchronizationSource
        fun Find(Outer: UObject, ResourceName: String): LiveLinkTimeSynchronizationSource
        fun GetDefaultObject(): LiveLinkTimeSynchronizationSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkTimeSynchronizationSource
        fun C(Other: UObject): LiveLinkTimeSynchronizationSource
        fun C(Other: Any): LiveLinkTimeSynchronizationSource
    }
}

external open class LiveLinkVirtualSubjectSourceSettings : LiveLinkSourceSettings {
    constructor()
    constructor(Outer: UObject)
    open var SourceName: String

    companion object {
        fun Load(ResourceName: String): LiveLinkVirtualSubjectSourceSettings
        fun Find(Outer: UObject, ResourceName: String): LiveLinkVirtualSubjectSourceSettings
        fun GetDefaultObject(): LiveLinkVirtualSubjectSourceSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkVirtualSubjectSourceSettings
        fun C(Other: UObject): LiveLinkVirtualSubjectSourceSettings
        fun C(Other: Any): LiveLinkVirtualSubjectSourceSettings
    }
}

external open class LiveLinkOpenXRHandTrackingSourceFactory : LiveLinkSourceFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LiveLinkOpenXRHandTrackingSourceFactory
        fun Find(Outer: UObject, ResourceName: String): LiveLinkOpenXRHandTrackingSourceFactory
        fun GetDefaultObject(): LiveLinkOpenXRHandTrackingSourceFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkOpenXRHandTrackingSourceFactory
        fun C(Other: UObject): LiveLinkOpenXRHandTrackingSourceFactory
        fun C(Other: Any): LiveLinkOpenXRHandTrackingSourceFactory
    }
}

external object EQuatSwizzleAxisB {
    var X: String /* "X" */
    var Y: String /* "Y" */
    var Z: String /* "Z" */
    var W: String /* "W" */
    var MinusX: String /* "MinusX" */
    var MinusY: String /* "MinusY" */
    var MinusZ: String /* "MinusZ" */
    var MinusW: String /* "MinusW" */
    var EQuatSwizzleAxisB_MAX: String /* "EQuatSwizzleAxisB_MAX" */
}

external open class OpenXRHandTrackingLiveLinkRemapAsset : LiveLinkRetargetAsset {
    constructor()
    constructor(Outer: UObject)
    open var bHasMetacarpals: Boolean
    open var bRetargetRotationOnly: Boolean
    open var SwizzleX: String /* "X" | "Y" | "Z" | "W" | "MinusX" | "MinusY" | "MinusZ" | "MinusW" | "EQuatSwizzleAxisB_MAX" */
    open var SwizzleY: String /* "X" | "Y" | "Z" | "W" | "MinusX" | "MinusY" | "MinusZ" | "MinusW" | "EQuatSwizzleAxisB_MAX" */
    open var SwizzleZ: String /* "X" | "Y" | "Z" | "W" | "MinusX" | "MinusY" | "MinusZ" | "MinusW" | "EQuatSwizzleAxisB_MAX" */
    open var SwizzleW: String /* "X" | "Y" | "Z" | "W" | "MinusX" | "MinusY" | "MinusZ" | "MinusW" | "EQuatSwizzleAxisB_MAX" */
    open var HandTrackingBoneNameMap: Any

    companion object {
        fun Load(ResourceName: String): OpenXRHandTrackingLiveLinkRemapAsset
        fun Find(Outer: UObject, ResourceName: String): OpenXRHandTrackingLiveLinkRemapAsset
        fun GetDefaultObject(): OpenXRHandTrackingLiveLinkRemapAsset
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): OpenXRHandTrackingLiveLinkRemapAsset
        fun C(Other: UObject): OpenXRHandTrackingLiveLinkRemapAsset
        fun C(Other: Any): OpenXRHandTrackingLiveLinkRemapAsset
    }
}

external interface `T$784` {
    var OutGazeData: EyeTrackerStereoGazeData
    var `$`: Boolean
}

external open class EyeTrackerStereoGazeData {
    open var LeftEyeOrigin: Vector
    open var LeftEyeDirection: Vector
    open var RightEyeOrigin: Vector
    open var RightEyeDirection: Vector
    open var FixationPoint: Vector
    open var ConfidenceValue: Number
    open fun clone(): EyeTrackerStereoGazeData
    open fun GetStereoGazeData(): `T$784`

    companion object {
        fun C(Other: UObject): EyeTrackerStereoGazeData
        fun C(Other: Any): EyeTrackerStereoGazeData
        fun GetStereoGazeData(OutGazeData: EyeTrackerStereoGazeData = definedExternally): `T$784`
    }
}

external interface `T$785` {
    var OutGazeData: EyeTrackerGazeData
    var `$`: Boolean
}

external open class EyeTrackerGazeData {
    open var GazeOrigin: Vector
    open var GazeDirection: Vector
    open var FixationPoint: Vector
    open var ConfidenceValue: Number
    open fun clone(): EyeTrackerGazeData
    open fun GetGazeData(): `T$785`

    companion object {
        fun C(Other: UObject): EyeTrackerGazeData
        fun C(Other: Any): EyeTrackerGazeData
        fun GetGazeData(OutGazeData: EyeTrackerGazeData = definedExternally): `T$785`
    }
}

external open class EyeTrackerFunctionLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EyeTrackerFunctionLibrary
        fun Find(Outer: UObject, ResourceName: String): EyeTrackerFunctionLibrary
        fun GetDefaultObject(): EyeTrackerFunctionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EyeTrackerFunctionLibrary
        fun SetEyeTrackedPlayer(PlayerController: PlayerController)
        fun IsStereoGazeDataAvailable(): Boolean
        fun IsEyeTrackerConnected(): Boolean
        fun GetStereoGazeData(OutGazeData: EyeTrackerStereoGazeData = definedExternally): `T$784`
        fun GetGazeData(OutGazeData: EyeTrackerGazeData = definedExternally): `T$785`
        fun C(Other: UObject): EyeTrackerFunctionLibrary
        fun C(Other: Any): EyeTrackerFunctionLibrary
    }
}

external object EFixedFoveatedRenderingLevel {
    var FFR_Off: String /* "FFR_Off" */
    var FFR_Low: String /* "FFR_Low" */
    var FFR_Medium: String /* "FFR_Medium" */
    var FFR_High: String /* "FFR_High" */
    var FFR_HighTop: String /* "FFR_HighTop" */
    var FFR_MAX: String /* "FFR_MAX" */
}

external object EColorSpace {
    var Unknown: String /* "Unknown" */
    var Unmanaged: String /* "Unmanaged" */
    var Rec_2020: String /* "Rec_2020" */
    var Rec_709: String /* "Rec_709" */
    var Rift_CV1: String /* "Rift_CV1" */
    var Rift_S: String /* "Rift_S" */
    var Quest: String /* "Quest" */
    var P3: String /* "P3" */
    var Adobe_RGB: String /* "Adobe_RGB" */
    var EColorSpace_MAX: String /* "EColorSpace_MAX" */
}

external open class HmdUserProfileField {
    open var FieldName: String
    open var FieldValue: String
    open fun clone(): HmdUserProfileField

    companion object {
        fun C(Other: UObject): HmdUserProfileField
        fun C(Other: Any): HmdUserProfileField
    }
}

external interface `T$786` {
    var Profile: HmdUserProfile
    var `$`: Boolean
}

external open class HmdUserProfile {
    open var Name: String
    open var Gender: String
    open var PlayerHeight: Number
    open var EyeHeight: Number
    open var IPD: Number
    open var NeckToEyeDistance: Vector2D
    open var ExtraFields: Array<HmdUserProfileField>
    open fun clone(): HmdUserProfile
    open fun GetUserProfile(): `T$786`

    companion object {
        fun C(Other: UObject): HmdUserProfile
        fun C(Other: Any): HmdUserProfile
        fun GetUserProfile(Profile: HmdUserProfile = definedExternally): `T$786`
    }
}

external object EOculusDeviceType {
    var OculusMobile_Deprecated0: String /* "OculusMobile_Deprecated0" */
    var OculusQuest: String /* "OculusQuest" */
    var OculusQuest2: String /* "OculusQuest2" */
    var Rift: String /* "Rift" */
    var Rift_S: String /* "Rift_S" */
    var Quest_Link: String /* "Quest_Link" */
    var Quest2_Link: String /* "Quest2_Link" */
    var OculusUnknown: String /* "OculusUnknown" */
    var EOculusDeviceType_MAX: String /* "EOculusDeviceType_MAX" */
}

external interface `T$787` {
    var IsGPUAvailable: Boolean
    var GPUUtilization: Number
}

external open class OculusFunctionLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): OculusFunctionLibrary
        fun Find(Outer: UObject, ResourceName: String): OculusFunctionLibrary
        fun GetDefaultObject(): OculusFunctionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): OculusFunctionLibrary
        fun SetReorientHMDOnControllerRecenter(recenterMode: Boolean)
        fun SetPositionScale3D(PosScale3D: Vector)
        fun SetGuardianVisibility(GuardianVisible: Boolean)
        fun SetFixedFoveatedRenderingLevel(Level: String /* "FFR_Off" | "FFR_Low" | "FFR_Medium" | "FFR_High" | "FFR_HighTop" | "FFR_MAX" */, isDynamic: Boolean)
        fun SetDisplayFrequency(RequestedFrequency: Number)
        fun SetCPUAndGPULevels(CPULevel: Number, GPULevel: Number)
        fun SetColorScaleAndOffset(ColorScale: LinearColor, ColorOffset: LinearColor, bApplyToAllLayers: Boolean)
        fun SetClientColorDesc(ColorSpace: String /* "Unknown" | "Unmanaged" | "Rec_2020" | "Rec_709" | "Rift_CV1" | "Rift_S" | "Quest" | "P3" | "Adobe_RGB" | "EColorSpace_MAX" */)
        fun SetBaseRotationAndPositionOffset(BaseRot: Rotator, PosOffset: Vector, Options: String /* "Orientation" | "Position" | "OrientationAndPosition" | "EOrientPositionSelector_MAX" */)
        fun SetBaseRotationAndBaseOffsetInMeters(Rotation: Rotator, BaseOffsetInMeters: Vector, Options: String /* "Orientation" | "Position" | "OrientationAndPosition" | "EOrientPositionSelector_MAX" */)
        fun IsGuardianDisplayed(): Boolean
        fun IsGuardianConfigured(): Boolean
        fun IsDeviceTracked(DeviceType: String /* "None" | "HMD" | "LTouch" | "RTouch" | "Touch" | "DeviceObjectZero" | "All" | "ETrackedDeviceType_MAX" */): Boolean
        fun HasSystemOverlayPresent(): Boolean
        fun HasInputFocus(): Boolean
        fun GetUserProfile(Profile: HmdUserProfile = definedExternally): `T$786`
        fun GetSystemHmd3DofModeEnabled(): Boolean
        fun GetRawSensorData(AngularAcceleration: Vector = definedExternally, LinearAcceleration: Vector = definedExternally, AngularVelocity: Vector = definedExternally, LinearVelocity: Vector = definedExternally, TimeInSeconds: Number = definedExternally, DeviceType: String /* "None" | "HMD" | "LTouch" | "RTouch" | "Touch" | "DeviceObjectZero" | "All" | "ETrackedDeviceType_MAX" */ = definedExternally): `T$237`
        fun GetPose(DeviceRotation: Rotator = definedExternally, DevicePosition: Vector = definedExternally, NeckPosition: Vector = definedExternally, bUseOrienationForPlayerCamera: Boolean = definedExternally, bUsePositionForPlayerCamera: Boolean = definedExternally, PositionScale: Vector = definedExternally): `T$14`
        fun GetPointGuardianIntersection(Point: Vector, BoundaryType: String /* "Boundary_Outer" | "Boundary_PlayArea" | "Boundary_MAX" */): GuardianTestResult
        fun GetPlayAreaTransform(): Transform
        fun GetNodeGuardianIntersection(DeviceType: String /* "None" | "HMD" | "LTouch" | "RTouch" | "Touch" | "DeviceObjectZero" | "All" | "ETrackedDeviceType_MAX" */, BoundaryType: String /* "Boundary_Outer" | "Boundary_PlayArea" | "Boundary_MAX" */): GuardianTestResult
        fun GetHmdColorDesc(): String /* "Unknown" | "Unmanaged" | "Rec_2020" | "Rec_709" | "Rift_CV1" | "Rift_S" | "Quest" | "P3" | "Adobe_RGB" | "EColorSpace_MAX" */
        fun GetGuardianPoints(BoundaryType: String /* "Boundary_Outer" | "Boundary_PlayArea" | "Boundary_MAX" */, UsePawnSpace: Boolean): Array<Vector>
        fun GetGuardianDimensions(BoundaryType: String /* "Boundary_Outer" | "Boundary_PlayArea" | "Boundary_MAX" */): Vector
        fun GetGPUUtilization(IsGPUAvailable: Boolean = definedExternally, GPUUtilization: Number = definedExternally): `T$787`
        fun GetGPUFrameTime(): Number
        fun GetFixedFoveatedRenderingLevel(): String /* "FFR_Off" | "FFR_Low" | "FFR_Medium" | "FFR_High" | "FFR_HighTop" | "FFR_MAX" */
        fun GetDeviceType(): String /* "OculusMobile_Deprecated0" | "OculusQuest" | "OculusQuest2" | "Rift" | "Rift_S" | "Quest_Link" | "Quest2_Link" | "OculusUnknown" | "EOculusDeviceType_MAX" */
        fun GetDeviceName(): String
        fun GetCurrentDisplayFrequency(): Number
        fun GetBaseRotationAndPositionOffset(OutRot: Rotator = definedExternally, OutPosOffset: Vector = definedExternally): `T$13`
        fun GetBaseRotationAndBaseOffsetInMeters(OutRotation: Rotator = definedExternally, OutBaseOffsetInMeters: Vector = definedExternally): `T$12`
        fun GetAvailableDisplayFrequencies(): Array<Number>
        fun EnablePositionTracking(bPositionTracking: Boolean)
        fun EnableOrientationTracking(bOrientationTracking: Boolean)
        fun ClearLoadingSplashScreens()
        fun AddLoadingSplashScreen(Texture: Texture2D, TranslationInMeters: Vector, Rotation: Rotator, SizeInMeters: Vector2D, DeltaRotation: Rotator, bClearBeforeAdd: Boolean)
        fun C(Other: UObject): OculusFunctionLibrary
        fun C(Other: Any): OculusFunctionLibrary
    }
}

external open class OculusSplashDesc {
    open var TexturePath: SoftObjectPath
    open var TransformInMeters: Transform
    open var QuadSizeInMeters: Vector2D
    open var DeltaRotation: Quat
    open var TextureOffset: Vector2D
    open var TextureScale: Vector2D
    open var bNoAlphaChannel: Boolean
    open fun clone(): OculusSplashDesc

    companion object {
        fun C(Other: UObject): OculusSplashDesc
        fun C(Other: Any): OculusSplashDesc
    }
}

external object EHandTrackingSupport {
    var ControllersOnly: String /* "ControllersOnly" */
    var ControllersAndHands: String /* "ControllersAndHands" */
    var HandsOnly: String /* "HandsOnly" */
    var EHandTrackingSupport_MAX: String /* "EHandTrackingSupport_MAX" */
}

external open class OculusHMDRuntimeSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bAutoEnabled: Boolean
    open var SplashDescs: Array<OculusSplashDesc>
    open var bEnableSpecificColorGamut: Boolean
    open var ColorSpace: String /* "Unknown" | "Unmanaged" | "Rec_2020" | "Rec_709" | "Rift_CV1" | "Rift_S" | "Quest" | "P3" | "Adobe_RGB" | "EColorSpace_MAX" */
    open var bSupportsDash: Boolean
    open var bCompositesDepth: Boolean
    open var bHQDistortion: Boolean
    open var PixelDensityMin: Number
    open var PixelDensityMax: Number
    open var CPULevel: Number
    open var GPULevel: Number
    open var FFRLevel: String /* "FFR_Off" | "FFR_Low" | "FFR_Medium" | "FFR_High" | "FFR_HighTop" | "FFR_MAX" */
    open var FFRDynamic: Boolean
    open var bChromaCorrection: Boolean
    open var bRecenterHMDWithController: Boolean
    open var bFocusAware: Boolean
    open var bLateLatching: Boolean
    open var bRequiresSystemKeyboard: Boolean
    open var HandTrackingSupport: String /* "ControllersOnly" | "ControllersAndHands" | "HandsOnly" | "EHandTrackingSupport_MAX" */
    open var bPhaseSync: Boolean

    companion object {
        fun Load(ResourceName: String): OculusHMDRuntimeSettings
        fun Find(Outer: UObject, ResourceName: String): OculusHMDRuntimeSettings
        fun GetDefaultObject(): OculusHMDRuntimeSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): OculusHMDRuntimeSettings
        fun C(Other: UObject): OculusHMDRuntimeSettings
        fun C(Other: Any): OculusHMDRuntimeSettings
    }
}

external open class OculusResourceHolder : UObject {
    constructor()
    constructor(Outer: UObject)
    open var PokeAHoleMaterial: Material

    companion object {
        fun Load(ResourceName: String): OculusResourceHolder
        fun Find(Outer: UObject, ResourceName: String): OculusResourceHolder
        fun GetDefaultObject(): OculusResourceHolder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): OculusResourceHolder
        fun C(Other: UObject): OculusResourceHolder
        fun C(Other: Any): OculusResourceHolder
    }
}

external open class OculusSceneCaptureCubemap : UObject {
    constructor()
    constructor(Outer: UObject)
    open var CaptureComponents: Array<SceneCaptureComponent2D>

    companion object {
        fun Load(ResourceName: String): OculusSceneCaptureCubemap
        fun Find(Outer: UObject, ResourceName: String): OculusSceneCaptureCubemap
        fun GetDefaultObject(): OculusSceneCaptureCubemap
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): OculusSceneCaptureCubemap
        fun C(Other: UObject): OculusSceneCaptureCubemap
        fun C(Other: Any): OculusSceneCaptureCubemap
    }
}

external interface `T$788` {
    var Vertices: Array<Vector>
    var Triangles: Array<Number>
    var Normals: Array<Vector>
    var UVs: Array<Vector2D>
    var Tangents: Array<ProcMeshTangent>
}

external interface `T$789` {
    var Vertices: Array<Vector>
    var Triangles: Array<Number>
    var Normals: Array<Vector>
    var UVs: Array<Vector2D>
    var Tangents: Array<ProcMeshTangent>
}

external interface `T$790` {
    var Vertices: Array<Vector>
    var Triangles: Array<Number>
    var Normals: Array<Vector>
    var UVs: Array<Vector2D>
    var Tangents: Array<ProcMeshTangent>
}

external interface `T$791` {
    var Triangles: Array<Number>
    var Vertices: Array<Vector>
    var UVs: Array<Vector2D>
}

external interface `T$792` {
    var Triangles: Array<Number>
}

external interface `T$793` {
    var Triangles: Array<Number>
    var Vertices: Array<Vector>
    var UVs: Array<Vector2D>
    var UV1s: Array<Vector2D>
}

external interface `T$794` {
    var Triangles: Array<Number>
}

external interface `T$795` {
    var Normals: Array<Vector>
    var Tangents: Array<ProcMeshTangent>
}

external open class KismetProceduralMeshLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): KismetProceduralMeshLibrary
        fun Find(Outer: UObject, ResourceName: String): KismetProceduralMeshLibrary
        fun GetDefaultObject(): KismetProceduralMeshLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): KismetProceduralMeshLibrary
        fun SliceProceduralMesh(InProcMesh: ProceduralMeshComponent, PlanePosition: Vector, PlaneNormal: Vector, bCreateOtherHalf: Boolean, OutOtherHalfProcMesh: ProceduralMeshComponent = definedExternally, CapOption: String /* "NoCap" | "CreateNewSectionForCap" | "UseLastSectionForCap" | "EProcMeshSliceCapOption_MAX" */ = definedExternally, CapMaterial: MaterialInterface = definedExternally): `T$173`
        fun GetSectionFromStaticMesh(InMesh: StaticMesh, LODIndex: Number, SectionIndex: Number, Vertices: Array<Vector> = definedExternally, Triangles: Array<Number> = definedExternally, Normals: Array<Vector> = definedExternally, UVs: Array<Vector2D> = definedExternally, Tangents: Array<ProcMeshTangent> = definedExternally): `T$788`
        fun GetSectionFromProceduralMesh(InProcMesh: ProceduralMeshComponent, SectionIndex: Number, Vertices: Array<Vector> = definedExternally, Triangles: Array<Number> = definedExternally, Normals: Array<Vector> = definedExternally, UVs: Array<Vector2D> = definedExternally, Tangents: Array<ProcMeshTangent> = definedExternally): `T$789`
        fun GenerateBoxMesh(BoxRadius: Vector, Vertices: Array<Vector> = definedExternally, Triangles: Array<Number> = definedExternally, Normals: Array<Vector> = definedExternally, UVs: Array<Vector2D> = definedExternally, Tangents: Array<ProcMeshTangent> = definedExternally): `T$790`
        fun CreateGridMeshWelded(NumX: Number, NumY: Number, Triangles: Array<Number> = definedExternally, Vertices: Array<Vector> = definedExternally, UVs: Array<Vector2D> = definedExternally, GridSpacing: Number = definedExternally): `T$791`
        fun CreateGridMeshTriangles(NumX: Number, NumY: Number, bWinding: Boolean, Triangles: Array<Number> = definedExternally): `T$792`
        fun CreateGridMeshSplit(NumX: Number, NumY: Number, Triangles: Array<Number> = definedExternally, Vertices: Array<Vector> = definedExternally, UVs: Array<Vector2D> = definedExternally, UV1s: Array<Vector2D> = definedExternally, GridSpacing: Number = definedExternally): `T$793`
        fun CopyProceduralMeshFromStaticMeshComponent(StaticMeshComponent: StaticMeshComponent, LODIndex: Number, ProcMeshComponent: ProceduralMeshComponent, bCreateCollision: Boolean)
        fun ConvertQuadToTriangles(Triangles: Array<Number> = definedExternally, Vert0: Number = definedExternally, Vert1: Number = definedExternally, Vert2: Number = definedExternally, Vert3: Number = definedExternally): `T$794`
        fun CalculateTangentsForMesh(Vertices: Array<Vector>, Triangles: Array<Number>, UVs: Array<Vector2D>, Normals: Array<Vector> = definedExternally, Tangents: Array<ProcMeshTangent> = definedExternally): `T$795`
        fun C(Other: UObject): KismetProceduralMeshLibrary
        fun C(Other: Any): KismetProceduralMeshLibrary
    }
}

external open class SteamVRChaperoneComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var OnLeaveBounds: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnReturnToBounds: UnrealEngineMulticastDelegate<() -> Unit>
    open fun GetBounds(): Array<Vector>

    companion object {
        fun Load(ResourceName: String): SteamVRChaperoneComponent
        fun Find(Outer: UObject, ResourceName: String): SteamVRChaperoneComponent
        fun GetDefaultObject(): SteamVRChaperoneComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SteamVRChaperoneComponent
        fun C(Other: UObject): SteamVRChaperoneComponent
        fun C(Other: Any): SteamVRChaperoneComponent
    }
}

external object ESteamVRTrackedDeviceType {
    var Controller: String /* "Controller" */
    var TrackingReference: String /* "TrackingReference" */
    var Other: String /* "Other" */
    var Invalid: String /* "Invalid" */
    var ESteamVRTrackedDeviceType_MAX: String /* "ESteamVRTrackedDeviceType_MAX" */
}

external interface `T$796` {
    var OutTrackedDeviceIds: Array<Number>
}

external interface `T$797` {
    var OutPosition: Vector
    var OutOrientation: Rotator
    var `$`: Boolean
}

external open class SteamVRFunctionLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SteamVRFunctionLibrary
        fun Find(Outer: UObject, ResourceName: String): SteamVRFunctionLibrary
        fun GetDefaultObject(): SteamVRFunctionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SteamVRFunctionLibrary
        fun GetValidTrackedDeviceIds(DeviceType: String /* "Controller" | "TrackingReference" | "Other" | "Invalid" | "ESteamVRTrackedDeviceType_MAX" */, OutTrackedDeviceIds: Array<Number> = definedExternally): `T$796`
        fun GetTrackedDevicePositionAndOrientation(DeviceID: Number, OutPosition: Vector = definedExternally, OutOrientation: Rotator = definedExternally): `T$797`
        fun GetHandPositionAndOrientation(ControllerIndex: Number, hand: String /* "Left" | "Right" | "AnyHand" | "Pad" | "ExternalCamera" | "Gun" | "Special_1" | "Special_2" | "Special_3" | "Special_4" | "Special_5" | "Special_6" | "Special_7" | "Special_8" | "Special_9" | "Special_10" | "Special_11" | "ControllerHand_Count" | "EControllerHand_MAX" */, OutPosition: Vector = definedExternally, OutOrientation: Rotator = definedExternally): `T$797`
        fun C(Other: UObject): SteamVRFunctionLibrary
        fun C(Other: Any): SteamVRFunctionLibrary
    }
}

external open class SteamVRHQStereoLayerShape : StereoLayerShapeQuad {
    constructor()
    constructor(Outer: UObject)
    open var bCurved: Boolean
    open var bAntiAlias: Boolean
    open var AutoCurveMinDistance: Number
    open var AutoCurveMaxDistance: Number
    open fun SetCurved(InCurved: Boolean)
    open fun SetAutoCurveMinDistance(InDistance: Number)
    open fun SetAutoCurveMaxDistance(InDistance: Number)
    open fun SetAntiAlias(InAntiAlias: Boolean)

    companion object {
        fun Load(ResourceName: String): SteamVRHQStereoLayerShape
        fun Find(Outer: UObject, ResourceName: String): SteamVRHQStereoLayerShape
        fun GetDefaultObject(): SteamVRHQStereoLayerShape
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SteamVRHQStereoLayerShape
        fun C(Other: UObject): SteamVRHQStereoLayerShape
        fun C(Other: Any): SteamVRHQStereoLayerShape
    }
}

external open class SteamVRInputBindingInfo {
    open var DevicePathName: String
    open var InputPathName: String
    open var ModeName: String
    open var SlotName: String
    open fun clone(): SteamVRInputBindingInfo

    companion object {
        fun C(Other: UObject): SteamVRInputBindingInfo
        fun C(Other: Any): SteamVRInputBindingInfo
    }
}

external object ESteamVRInputStringBits {
    var VR_InputString_Hand: String /* "VR_InputString_Hand" */
    var VR_InputString_ControllerType: String /* "VR_InputString_ControllerType" */
    var VR_InputString_InputSource: String /* "VR_InputString_InputSource" */
    var VR_InputString_All: String /* "VR_InputString_All" */
    var VR_InputString_MAX: String /* "VR_InputString_MAX" */
}

external open class SteamVRInputOriginInfo {
    open var TrackedDeviceIndex: Number
    open var RenderModelComponentName: String
    open var TrackedDeviceModel: String
    open fun clone(): SteamVRInputOriginInfo

    companion object {
        fun C(Other: UObject): SteamVRInputOriginInfo
        fun C(Other: Any): SteamVRInputOriginInfo
    }
}

external open class SteamVRActionSet {
    open var Path: String
    open fun clone(): SteamVRActionSet

    companion object {
        fun C(Other: UObject): SteamVRActionSet
        fun C(Other: Any): SteamVRActionSet
    }
}

external interface `T$798` {
    var OriginLocalizedName: String
}

external interface `T$799` {
    var InputOriginInfo: SteamVRInputOriginInfo
    var `$`: Boolean
}

external open class SteamVRAction {
    open var Name: String
    open var Path: String
    open fun clone(): SteamVRAction
    open fun GetSteamVR_InputBindingInfo(): Array<SteamVRInputBindingInfo>
    open fun GetSteamVR_OriginLocalizedName(LocalizedParts: Array<String /* "VR_InputString_Hand" | "VR_InputString_ControllerType" | "VR_InputString_InputSource" | "VR_InputString_All" | "VR_InputString_MAX" */>, OriginLocalizedName: String = definedExternally): `T$798`
    open fun GetSteamVR_OriginTrackedDeviceInfo(InputOriginInfo: SteamVRInputOriginInfo = definedExternally): `T$799`
    open fun ShowSteamVR_ActionOrigin(SteamVRActionSet: SteamVRActionSet)

    companion object {
        fun C(Other: UObject): SteamVRAction
        fun C(Other: Any): SteamVRAction
        fun GetSteamVR_InputBindingInfo(SteamVRActionHandle: SteamVRAction): Array<SteamVRInputBindingInfo>
        fun GetSteamVR_OriginLocalizedName(SteamVRAction: SteamVRAction, LocalizedParts: Array<String /* "VR_InputString_Hand" | "VR_InputString_ControllerType" | "VR_InputString_InputSource" | "VR_InputString_All" | "VR_InputString_MAX" */>, OriginLocalizedName: String = definedExternally): `T$798`
        fun GetSteamVR_OriginTrackedDeviceInfo(SteamVRAction: SteamVRAction, InputOriginInfo: SteamVRInputOriginInfo = definedExternally): `T$799`
        fun ShowSteamVR_ActionOrigin(SteamVRAction: SteamVRAction, SteamVRActionSet: SteamVRActionSet)
    }
}

external interface `T$800` {
    var LeftHand: SteamVRSkeletonTransform
    var RightHand: SteamVRSkeletonTransform
}

external open class SteamVRSkeletonTransform {
    open var Root: Transform
    open var wrist: Transform
    open var Thumb_0: Transform
    open var Thumb_1: Transform
    open var Thumb_2: Transform
    open var Thumb_3: Transform
    open var index_0: Transform
    open var index_1: Transform
    open var index_2: Transform
    open var index_3: Transform
    open var index_4: Transform
    open var Middle_0: Transform
    open var Middle_1: Transform
    open var Middle_2: Transform
    open var Middle_3: Transform
    open var Middle_4: Transform
    open var Ring_0: Transform
    open var Ring_1: Transform
    open var Ring_2: Transform
    open var Ring_3: Transform
    open var Ring_4: Transform
    open var Pinky_0: Transform
    open var Pinky_1: Transform
    open var Pinky_2: Transform
    open var Pinky_3: Transform
    open var Pinky_4: Transform
    open var Aux_Thumb: Transform
    open var Aux_Index: Transform
    open var Aux_Middle: Transform
    open var Aux_Ring: Transform
    open var Aux_Pinky: Transform
    open fun clone(): SteamVRSkeletonTransform
    open fun GetSkeletalTransform(RightHand: SteamVRSkeletonTransform = definedExternally, bWithController: Boolean = definedExternally): `T$800`

    companion object {
        fun C(Other: UObject): SteamVRSkeletonTransform
        fun C(Other: Any): SteamVRSkeletonTransform
        fun GetSkeletalTransform(LeftHand: SteamVRSkeletonTransform = definedExternally, RightHand: SteamVRSkeletonTransform = definedExternally, bWithController: Boolean = definedExternally): `T$800`
    }
}

external object EHand {
    var VR_LeftHand: String /* "VR_LeftHand" */
    var VR_RightHand: String /* "VR_RightHand" */
    var VR_MAX: String /* "VR_MAX" */
}

external open class SteamVRFingerCurls {
    open var Thumb: Number
    open var index: Number
    open var Middle: Number
    open var Ring: Number
    open var Pinky: Number
    open fun clone(): SteamVRFingerCurls

    companion object {
        fun C(Other: UObject): SteamVRFingerCurls
        fun C(Other: Any): SteamVRFingerCurls
    }
}

external open class SteamVRFingerSplays {
    open var Thumb_Index: Number
    open var Index_Middle: Number
    open var Middle_Ring: Number
    open var Ring_Pinky: Number
    open fun clone(): SteamVRFingerSplays

    companion object {
        fun C(Other: UObject): SteamVRFingerSplays
        fun C(Other: Any): SteamVRFingerSplays
    }
}

external object ESkeletalSummaryDataType {
    var VR_SummaryType_FromAnimation: String /* "VR_SummaryType_FromAnimation" */
    var VR_SummaryType_FromDevice: String /* "VR_SummaryType_FromDevice" */
    var VR_SummaryType_MAX: String /* "VR_SummaryType_MAX" */
}

external object EControllerFidelity {
    var VR_ControllerFidelity_Estimated: String /* "VR_ControllerFidelity_Estimated" */
    var VR_ControllerFidelity_Full: String /* "VR_ControllerFidelity_Full" */
    var VR_ControllerFidelity_Partial: String /* "VR_ControllerFidelity_Partial" */
    var VR_ControllerFidelity_MAX: String /* "VR_ControllerFidelity_MAX" */
}

external interface `T$801` {
    var SteamVRActionSets: Array<SteamVRActionSet>
}

external interface `T$802` {
    var SteamVRActions: Array<SteamVRAction>
}

external interface `T$803` {
    var LeftHandState: Boolean
    var RightHandState: Boolean
}

external interface `T$804` {
    var bUsingSkeletonPose: Boolean
}

external interface `T$805` {
    var FingerCurls: SteamVRFingerCurls
    var FingerSplays: SteamVRFingerSplays
}

external interface `T$806` {
    var LeftControllerFidelity: String /* "VR_ControllerFidelity_Estimated" | "VR_ControllerFidelity_Full" | "VR_ControllerFidelity_Partial" | "VR_ControllerFidelity_MAX" */
    var RightControllerFidelity: String /* "VR_ControllerFidelity_Estimated" | "VR_ControllerFidelity_Full" | "VR_ControllerFidelity_Partial" | "VR_ControllerFidelity_MAX" */
}

external interface `T$807` {
    var bResult: Boolean
    var InputOriginInfo: SteamVRInputOriginInfo
}

external interface `T$808` {
    var bResult: Boolean
    var FoundAction: SteamVRAction
    var FoundActionSet: SteamVRActionSet
}

external open class SteamVRInputDeviceFunctionLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SteamVRInputDeviceFunctionLibrary
        fun Find(Outer: UObject, ResourceName: String): SteamVRInputDeviceFunctionLibrary
        fun GetDefaultObject(): SteamVRInputDeviceFunctionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SteamVRInputDeviceFunctionLibrary
        fun ShowSteamVR_ActionOrigin(SteamVRAction: SteamVRAction, SteamVRActionSet: SteamVRActionSet)
        fun ShowAllSteamVR_ActionOrigins()
        fun SetSteamVR_GlobalPredictedSecondsFromNow(NewValue: Number): Number
        fun SetPoseSource(bUseSkeletonPose: Boolean)
        fun SetCurlsAndSplaysState(NewLeftHandState: Boolean, NewRightHandState: Boolean)
        fun ResetSeatedPosition(): Boolean
        fun PlaySteamVR_HapticFeedback(hand: String /* "VR_Left" | "VR_Right" | "VR_MAX" */, StartSecondsFromNow: Number, DurationSeconds: Number, Frequency: Number, Amplitude: Number)
        fun GetUserIPD(): Number
        fun GetSteamVR_OriginTrackedDeviceInfo(SteamVRAction: SteamVRAction, InputOriginInfo: SteamVRInputOriginInfo = definedExternally): `T$799`
        fun GetSteamVR_OriginLocalizedName(SteamVRAction: SteamVRAction, LocalizedParts: Array<String /* "VR_InputString_Hand" | "VR_InputString_ControllerType" | "VR_InputString_InputSource" | "VR_InputString_All" | "VR_InputString_MAX" */>, OriginLocalizedName: String = definedExternally): `T$798`
        fun GetSteamVR_InputBindingInfo(SteamVRActionHandle: SteamVRAction): Array<SteamVRInputBindingInfo>
        fun GetSteamVR_HandPoseRelativeToNow(Position: Vector = definedExternally, Orientation: Rotator = definedExternally, hand: String /* "VR_Left" | "VR_Right" | "VR_MAX" */ = definedExternally, PredictedSecondsFromNow: Number = definedExternally): `T$235`
        fun GetSteamVR_GlobalPredictedSecondsFromNow(): Number
        fun GetSteamVR_ActionSetArray(SteamVRActionSets: Array<SteamVRActionSet> = definedExternally): `T$801`
        fun GetSteamVR_ActionArray(SteamVRActions: Array<SteamVRAction> = definedExternally): `T$802`
        fun GetSkeletalTransform(LeftHand: SteamVRSkeletonTransform = definedExternally, RightHand: SteamVRSkeletonTransform = definedExternally, bWithController: Boolean = definedExternally): `T$800`
        fun GetSkeletalState(LeftHandState: Boolean = definedExternally, RightHandState: Boolean = definedExternally): `T$803`
        fun GetRightHandPoseData(Position: Vector = definedExternally, Orientation: Rotator = definedExternally, AngularVelocity: Vector = definedExternally, Velocity: Vector = definedExternally): `T$234`
        fun GetPoseSource(bUsingSkeletonPose: Boolean = definedExternally): `T$804`
        fun GetLeftHandPoseData(Position: Vector = definedExternally, Orientation: Rotator = definedExternally, AngularVelocity: Vector = definedExternally, Velocity: Vector = definedExternally): `T$234`
        fun GetFingerCurlsAndSplays(hand: String /* "VR_LeftHand" | "VR_RightHand" | "VR_MAX" */, FingerCurls: SteamVRFingerCurls = definedExternally, FingerSplays: SteamVRFingerSplays = definedExternally, SummaryDataType: String /* "VR_SummaryType_FromAnimation" | "VR_SummaryType_FromDevice" | "VR_SummaryType_MAX" */ = definedExternally): `T$805`
        fun GetCurlsAndSplaysState(LeftHandState: Boolean = definedExternally, RightHandState: Boolean = definedExternally): `T$803`
        fun GetControllerFidelity(LeftControllerFidelity: String /* "VR_ControllerFidelity_Estimated" | "VR_ControllerFidelity_Full" | "VR_ControllerFidelity_Partial" | "VR_ControllerFidelity_MAX" */ = definedExternally, RightControllerFidelity: String /* "VR_ControllerFidelity_Estimated" | "VR_ControllerFidelity_Full" | "VR_ControllerFidelity_Partial" | "VR_ControllerFidelity_MAX" */ = definedExternally): `T$806`
        fun FindSteamVR_OriginTrackedDeviceInfo(ActionName: String, bResult: Boolean = definedExternally, InputOriginInfo: SteamVRInputOriginInfo = definedExternally, ActionSet: String = definedExternally): `T$807`
        fun FindSteamVR_InputBindingInfo(ActionName: String, ActionSet: String): Array<SteamVRInputBindingInfo>
        fun FindSteamVR_ActionOrigin(ActionName: String, ActionSet: String): Boolean
        fun FindSteamVR_Action(ActionName: String, bResult: Boolean = definedExternally, FoundAction: SteamVRAction = definedExternally, FoundActionSet: SteamVRActionSet = definedExternally, ActionSet: String = definedExternally): `T$808`
        fun C(Other: UObject): SteamVRInputDeviceFunctionLibrary
        fun C(Other: Any): SteamVRInputDeviceFunctionLibrary
    }
}

external open class SteamVRTrackingReferences : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var OnTrackedDeviceActivated: UnrealEngineMulticastDelegate<(DeviceID: Number, DeviceClass: String, DeviceModel: String) -> Unit>
    open var OnTrackedDeviceDeactivated: UnrealEngineMulticastDelegate<(DeviceID: Number, DeviceClass: String, DeviceModel: String) -> Unit>
    open var ActiveDevicePollFrequency: Number
    open var TrackingReferenceScale: Vector
    open var TrackingReferences: Array<StaticMeshComponent>
    open fun ShowTrackingReferences(TrackingReferenceMesh: StaticMesh): Boolean
    open fun HideTrackingReferences()

    companion object {
        fun Load(ResourceName: String): SteamVRTrackingReferences
        fun Find(Outer: UObject, ResourceName: String): SteamVRTrackingReferences
        fun GetDefaultObject(): SteamVRTrackingReferences
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SteamVRTrackingReferences
        fun C(Other: UObject): SteamVRTrackingReferences
        fun C(Other: Any): SteamVRTrackingReferences
    }
}

external object ECompilerVersion {
    var Default: String /* "Default" */
    var VisualStudio2015: String /* "VisualStudio2015" */
    var VisualStudio2017: String /* "VisualStudio2017" */
    var VisualStudio2019: String /* "VisualStudio2019" */
    var VisualStudio2022: String /* "VisualStudio2022" */
    var ECompilerVersion_MAX: String /* "ECompilerVersion_MAX" */
}

external object EDefaultGraphicsRHI {
    var DefaultGraphicsRHI_Default: String /* "DefaultGraphicsRHI_Default" */
    var DefaultGraphicsRHI_DX11: String /* "DefaultGraphicsRHI_DX11" */
    var DefaultGraphicsRHI_DX12: String /* "DefaultGraphicsRHI_DX12" */
    var DefaultGraphicsRHI_Vulkan: String /* "DefaultGraphicsRHI_Vulkan" */
    var DefaultGraphicsRHI_MAX: String /* "DefaultGraphicsRHI_MAX" */
}

external object EMinimumSupportedOS {
    var MSOS_Vista: String /* "MSOS_Vista" */
    var MSOS_MAX: String /* "MSOS_MAX" */
}

external open class PlatformRuntimeAudioCompressionOverrides {
    open var bOverrideCompressionTimes: Boolean
    open var DurationThreshold: Number
    open var MaxNumRandomBranches: Number
    open var SoundCueQualityIndex: Number
    open fun clone(): PlatformRuntimeAudioCompressionOverrides

    companion object {
        fun C(Other: UObject): PlatformRuntimeAudioCompressionOverrides
        fun C(Other: Any): PlatformRuntimeAudioCompressionOverrides
    }
}

external open class WindowsTargetSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Compiler: String /* "Default" | "VisualStudio2015" | "VisualStudio2017" | "VisualStudio2019" | "VisualStudio2022" | "ECompilerVersion_MAX" */
    open var TargetedRHIs: Array<String>
    open var DefaultGraphicsRHI: String /* "DefaultGraphicsRHI_Default" | "DefaultGraphicsRHI_DX11" | "DefaultGraphicsRHI_DX12" | "DefaultGraphicsRHI_Vulkan" | "DefaultGraphicsRHI_MAX" */
    open var MinimumOSVersion: String /* "MSOS_Vista" | "MSOS_MAX" */
    open var AudioSampleRate: Number
    open var AudioCallbackBufferFrameSize: Number
    open var AudioNumBuffersToEnqueue: Number
    open var AudioMaxChannels: Number
    open var AudioNumSourceWorkers: Number
    open var SpatializationPlugin: String
    open var ReverbPlugin: String
    open var OcclusionPlugin: String
    open var CompressionOverrides: PlatformRuntimeAudioCompressionOverrides
    open var bUseAudioStreamCaching: Boolean
    open var CacheSizeKB: Number
    open var MaxChunkSizeOverrideKB: Number
    open var bResampleForDevice: Boolean
    open var MaxSampleRate: Number
    open var HighSampleRate: Number
    open var MedSampleRate: Number
    open var LowSampleRate: Number
    open var MinSampleRate: Number
    open var CompressionQualityModifier: Number
    open var AutoStreamingThreshold: Number
    open var SoundCueCookQualityIndex: Number

    companion object {
        fun Load(ResourceName: String): WindowsTargetSettings
        fun Find(Outer: UObject, ResourceName: String): WindowsTargetSettings
        fun GetDefaultObject(): WindowsTargetSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WindowsTargetSettings
        fun C(Other: UObject): WindowsTargetSettings
        fun C(Other: Any): WindowsTargetSettings
    }
}

external open class SourceCodeAccessSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var PreferredAccessor: String

    companion object {
        fun Load(ResourceName: String): SourceCodeAccessSettings
        fun Find(Outer: UObject, ResourceName: String): SourceCodeAccessSettings
        fun GetDefaultObject(): SourceCodeAccessSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SourceCodeAccessSettings
        fun C(Other: UObject): SourceCodeAccessSettings
        fun C(Other: Any): SourceCodeAccessSettings
    }
}

external open class LandscapeBlueprintBrush(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : LandscapeBlueprintBrushBase {
    companion object {
        fun GetDefaultObject(): LandscapeBlueprintBrush
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeBlueprintBrush
        fun C(Other: UObject): LandscapeBlueprintBrush
        fun C(Other: Any): LandscapeBlueprintBrush
    }
}

external object ETimezoneSetting {
    var InternationalDateLineWest: String /* "InternationalDateLineWest" */
    var CoordinatedUniversalTimeNeg11: String /* "CoordinatedUniversalTimeNeg11" */
    var Samoa: String /* "Samoa" */
    var Hawaii: String /* "Hawaii" */
    var Alaska: String /* "Alaska" */
    var PacificTime_USCAN: String /* "PacificTime_USCAN" */
    var BajaCalifornia: String /* "BajaCalifornia" */
    var MountainTime_USCAN: String /* "MountainTime_USCAN" */
    var Chihuahua_LaPaz_Mazatlan: String /* "Chihuahua_LaPaz_Mazatlan" */
    var Arizona: String /* "Arizona" */
    var Saskatchewan: String /* "Saskatchewan" */
    var CentralAmerica: String /* "CentralAmerica" */
    var CentralTime_USCAN: String /* "CentralTime_USCAN" */
    var Guadalajara_MexicoCity_Monterrey: String /* "Guadalajara_MexicoCity_Monterrey" */
    var EasternTime_USCAN: String /* "EasternTime_USCAN" */
    var Bogota_Lima_Quito: String /* "Bogota_Lima_Quito" */
    var Indiana_US: String /* "Indiana_US" */
    var Caracas: String /* "Caracas" */
    var AtlanticTime_Canada: String /* "AtlanticTime_Canada" */
    var Cuiaba: String /* "Cuiaba" */
    var Santiago: String /* "Santiago" */
    var Georgetown_LaPaz_Manaus_SanJuan: String /* "Georgetown_LaPaz_Manaus_SanJuan" */
    var Asuncion: String /* "Asuncion" */
    var Newfoundland: String /* "Newfoundland" */
    var Brasilia: String /* "Brasilia" */
    var Greenland: String /* "Greenland" */
    var Montevideo: String /* "Montevideo" */
    var Cayenne_Fortaleza: String /* "Cayenne_Fortaleza" */
    var BuenosAires: String /* "BuenosAires" */
    var MidAtlantic: String /* "MidAtlantic" */
    var CoordinatedUniversalTimeNeg02: String /* "CoordinatedUniversalTimeNeg02" */
    var Azores: String /* "Azores" */
    var CaboVerdeIs: String /* "CaboVerdeIs" */
    var Dublin_Edinburgh_Lisbon_London: String /* "Dublin_Edinburgh_Lisbon_London" */
    var Monrovia_Reykjavik: String /* "Monrovia_Reykjavik" */
    var Casablanca: String /* "Casablanca" */
    var UTC: String /* "UTC" */
    var Belgrade_Bratislava_Budapest_Ljubljana_Prague: String /* "Belgrade_Bratislava_Budapest_Ljubljana_Prague" */
    var Sarajevo_Skopje_Warsaw_Zagreb: String /* "Sarajevo_Skopje_Warsaw_Zagreb" */
    var Brussels_Copenhagen_Madrid_Paris: String /* "Brussels_Copenhagen_Madrid_Paris" */
    var WestCentralAfrica: String /* "WestCentralAfrica" */
    var Amsterdam_Berlin_Bern_Rome_Stockholm_Vienna: String /* "Amsterdam_Berlin_Bern_Rome_Stockholm_Vienna" */
    var Windhoek: String /* "Windhoek" */
    var Minsk: String /* "Minsk" */
    var Cairo: String /* "Cairo" */
    var Helsinki_Kyiv_Riga_Sofia_Tallinn_Vilnius: String /* "Helsinki_Kyiv_Riga_Sofia_Tallinn_Vilnius" */
    var Athens_Bucharest: String /* "Athens_Bucharest" */
    var Jerusalem: String /* "Jerusalem" */
    var Amman: String /* "Amman" */
    var Beirut: String /* "Beirut" */
    var Harare_Pretoria: String /* "Harare_Pretoria" */
    var Damascus: String /* "Damascus" */
    var Istanbul: String /* "Istanbul" */
    var Kuwait_Riyadh: String /* "Kuwait_Riyadh" */
    var Baghdad: String /* "Baghdad" */
    var Nairobi: String /* "Nairobi" */
    var Kaliningrad: String /* "Kaliningrad" */
    var Tehran: String /* "Tehran" */
    var Moscow_StPetersburg_Volgograd: String /* "Moscow_StPetersburg_Volgograd" */
    var AbuDhabi_Muscat: String /* "AbuDhabi_Muscat" */
    var Baku: String /* "Baku" */
    var Yerevan: String /* "Yerevan" */
    var Tbilisi: String /* "Tbilisi" */
    var PortLouis: String /* "PortLouis" */
    var Kabul: String /* "Kabul" */
    var Tashkent: String /* "Tashkent" */
    var Islamabad_Karachi: String /* "Islamabad_Karachi" */
    var Chennai_Kolkata_Mumbai_NewDelhi: String /* "Chennai_Kolkata_Mumbai_NewDelhi" */
    var SriJayawardenepura: String /* "SriJayawardenepura" */
    var Kathmandu: String /* "Kathmandu" */
    var Ekaterinburg: String /* "Ekaterinburg" */
    var Astana: String /* "Astana" */
    var Dhaka: String /* "Dhaka" */
    var Yangon_Rangoon: String /* "Yangon_Rangoon" */
    var Novosibirsk: String /* "Novosibirsk" */
    var Bangkok_Hanoi_Jakarta: String /* "Bangkok_Hanoi_Jakarta" */
    var Krasnoyarsk: String /* "Krasnoyarsk" */
    var Beijing_Chongqing_HongKong_Urumqi: String /* "Beijing_Chongqing_HongKong_Urumqi" */
    var KualaLumpur_Singapore: String /* "KualaLumpur_Singapore" */
    var Taipei: String /* "Taipei" */
    var Perth: String /* "Perth" */
    var Ulaanbaatar: String /* "Ulaanbaatar" */
    var Irkutsk: String /* "Irkutsk" */
    var Seoul: String /* "Seoul" */
    var Osaka_Sapporo_Tokyo: String /* "Osaka_Sapporo_Tokyo" */
    var Darwin: String /* "Darwin" */
    var Adelaide: String /* "Adelaide" */
    var Yakutsk: String /* "Yakutsk" */
    var Canberra_Melbourne_Sydney: String /* "Canberra_Melbourne_Sydney" */
    var Brisbane: String /* "Brisbane" */
    var Hobart: String /* "Hobart" */
    var Guam_PortMoresby: String /* "Guam_PortMoresby" */
    var Vladivostok: String /* "Vladivostok" */
    var SolomonIs_NewCaledonia: String /* "SolomonIs_NewCaledonia" */
    var Magadan: String /* "Magadan" */
    var Fiji: String /* "Fiji" */
    var Auckland_Wellington: String /* "Auckland_Wellington" */
    var CoordinatedUniversalTime12: String /* "CoordinatedUniversalTime12" */
    var Nukualofa: String /* "Nukualofa" */
    var LocalTime: String /* "LocalTime" */
    var ETimezoneSetting_MAX: String /* "ETimezoneSetting_MAX" */
}

external open class InternationalizationSettingsModel : UObject {
    constructor()
    constructor(Outer: UObject)
    open var DisplayTimezone: String /* "InternationalDateLineWest" | "CoordinatedUniversalTimeNeg11" | "Samoa" | "Hawaii" | "Alaska" | "PacificTime_USCAN" | "BajaCalifornia" | "MountainTime_USCAN" | "Chihuahua_LaPaz_Mazatlan" | "Arizona" | "Saskatchewan" | "CentralAmerica" | "CentralTime_USCAN" | "Guadalajara_MexicoCity_Monterrey" | "EasternTime_USCAN" | "Bogota_Lima_Quito" | "Indiana_US" | "Caracas" | "AtlanticTime_Canada" | "Cuiaba" | "Santiago" | "Georgetown_LaPaz_Manaus_SanJuan" | "Asuncion" | "Newfoundland" | "Brasilia" | "Greenland" | "Montevideo" | "Cayenne_Fortaleza" | "BuenosAires" | "MidAtlantic" | "CoordinatedUniversalTimeNeg02" | "Azores" | "CaboVerdeIs" | "Dublin_Edinburgh_Lisbon_London" | "Monrovia_Reykjavik" | "Casablanca" | "UTC" | "Belgrade_Bratislava_Budapest_Ljubljana_Prague" | "Sarajevo_Skopje_Warsaw_Zagreb" | "Brussels_Copenhagen_Madrid_Paris" | "WestCentralAfrica" | "Amsterdam_Berlin_Bern_Rome_Stockholm_Vienna" | "Windhoek" | "Minsk" | "Cairo" | "Helsinki_Kyiv_Riga_Sofia_Tallinn_Vilnius" | "Athens_Bucharest" | "Jerusalem" | "Amman" | "Beirut" | "Harare_Pretoria" | "Damascus" | "Istanbul" | "Kuwait_Riyadh" | "Baghdad" | "Nairobi" | "Kaliningrad" | "Tehran" | "Moscow_StPetersburg_Volgograd" | "AbuDhabi_Muscat" | "Baku" | "Yerevan" | "Tbilisi" | "PortLouis" | "Kabul" | "Tashkent" | "Islamabad_Karachi" | "Chennai_Kolkata_Mumbai_NewDelhi" | "SriJayawardenepura" | "Kathmandu" | "Ekaterinburg" | "Astana" | "Dhaka" | "Yangon_Rangoon" | "Novosibirsk" | "Bangkok_Hanoi_Jakarta" | "Krasnoyarsk" | "Beijing_Chongqing_HongKong_Urumqi" | "KualaLumpur_Singapore" | "Taipei" | "Perth" | "Ulaanbaatar" | "Irkutsk" | "Seoul" | "Osaka_Sapporo_Tokyo" | "Darwin" | "Adelaide" | "Yakutsk" | "Canberra_Melbourne_Sydney" | "Brisbane" | "Hobart" | "Guam_PortMoresby" | "Vladivostok" | "SolomonIs_NewCaledonia" | "Magadan" | "Fiji" | "Auckland_Wellington" | "CoordinatedUniversalTime12" | "Nukualofa" | "LocalTime" | "ETimezoneSetting_MAX" */

    companion object {
        fun Load(ResourceName: String): InternationalizationSettingsModel
        fun Find(Outer: UObject, ResourceName: String): InternationalizationSettingsModel
        fun GetDefaultObject(): InternationalizationSettingsModel
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InternationalizationSettingsModel
        fun C(Other: UObject): InternationalizationSettingsModel
        fun C(Other: Any): InternationalizationSettingsModel
    }
}

external open class PropertyConfigFileDisplayRow : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ConfigFileName: String
    open var ExternalProperty: Any
    open var bIsFileWritable: Boolean

    companion object {
        fun Load(ResourceName: String): PropertyConfigFileDisplayRow
        fun Find(Outer: UObject, ResourceName: String): PropertyConfigFileDisplayRow
        fun GetDefaultObject(): PropertyConfigFileDisplayRow
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PropertyConfigFileDisplayRow
        fun C(Other: UObject): PropertyConfigFileDisplayRow
        fun C(Other: Any): PropertyConfigFileDisplayRow
    }
}

external open class ConfigHierarchyPropertyView : UObject {
    constructor()
    constructor(Outer: UObject)
    open var EditProperty: Any
    open var ConfigFilePropertyObjects: Array<PropertyConfigFileDisplayRow>

    companion object {
        fun Load(ResourceName: String): ConfigHierarchyPropertyView
        fun Find(Outer: UObject, ResourceName: String): ConfigHierarchyPropertyView
        fun GetDefaultObject(): ConfigHierarchyPropertyView
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ConfigHierarchyPropertyView
        fun C(Other: UObject): ConfigHierarchyPropertyView
        fun C(Other: Any): ConfigHierarchyPropertyView
    }
}

external open class Manipulator(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var AssociatedComponent: SceneComponent
    open var StaticMeshComponent: StaticMeshComponent

    companion object {
        fun GetDefaultObject(): Manipulator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Manipulator
        fun C(Other: UObject): Manipulator
        fun C(Other: Any): Manipulator
    }
}

external open class PropertyNameAndIndex {
    open var Name: String
    open var index: Number
    open fun clone(): PropertyNameAndIndex

    companion object {
        fun C(Other: UObject): PropertyNameAndIndex
        fun C(Other: Any): PropertyNameAndIndex
    }
}

external open class ComponentPropertyPath {
    open var ParentOwningActor: Any
    open var LastResortComponentPtr: Any
    open var PropertyChain: Array<PropertyNameAndIndex>
    open fun clone(): ComponentPropertyPath

    companion object {
        fun C(Other: UObject): ComponentPropertyPath
        fun C(Other: Any): ComponentPropertyPath
    }
}

external object ESelectedTangentHandle {
    var None: String /* "None" */
    var Leave: String /* "Leave" */
    var Arrive: String /* "Arrive" */
    var ESelectedTangentHandle_MAX: String /* "ESelectedTangentHandle_MAX" */
}

external open class SplineComponentVisualizerSelectionState : UObject {
    constructor()
    constructor(Outer: UObject)
    open var SplinePropertyPath: ComponentPropertyPath
    open var SelectedKeys: Any
    open var LastKeyIndexSelected: Number
    open var SelectedSegmentIndex: Number
    open var SelectedTangentHandle: Number
    open var SelectedTangentHandleType: String /* "None" | "Leave" | "Arrive" | "ESelectedTangentHandle_MAX" */
    open var SelectedSplinePosition: Vector
    open var CachedRotation: Quat

    companion object {
        fun Load(ResourceName: String): SplineComponentVisualizerSelectionState
        fun Find(Outer: UObject, ResourceName: String): SplineComponentVisualizerSelectionState
        fun GetDefaultObject(): SplineComponentVisualizerSelectionState
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SplineComponentVisualizerSelectionState
        fun C(Other: UObject): SplineComponentVisualizerSelectionState
        fun C(Other: Any): SplineComponentVisualizerSelectionState
    }
}

external object EShapeAddMode {
    var AppendAfter: String /* "AppendAfter" */
    var AppendBefore: String /* "AppendBefore" */
    var InsertAfter: String /* "InsertAfter" */
    var InsertBefore: String /* "InsertBefore" */
    var EShapeAddMode_MAX: String /* "EShapeAddMode_MAX" */
}

external open class SplineGeneratorBase : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ShapeAddMode: String /* "AppendAfter" | "AppendBefore" | "InsertAfter" | "InsertBefore" | "EShapeAddMode_MAX" */

    companion object {
        fun Load(ResourceName: String): SplineGeneratorBase
        fun Find(Outer: UObject, ResourceName: String): SplineGeneratorBase
        fun GetDefaultObject(): SplineGeneratorBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SplineGeneratorBase
        fun C(Other: UObject): SplineGeneratorBase
        fun C(Other: Any): SplineGeneratorBase
    }
}

external open class CircleSplineGenerator : SplineGeneratorBase {
    constructor()
    constructor(Outer: UObject)
    open var NumberOfPoints: Number
    open var Radius: Number
    open var bReverseDir: Boolean
    open var bKeepFirstKeyTangent: Boolean
    open var bBranchRight: Boolean

    companion object {
        fun Load(ResourceName: String): CircleSplineGenerator
        fun Find(Outer: UObject, ResourceName: String): CircleSplineGenerator
        fun GetDefaultObject(): CircleSplineGenerator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CircleSplineGenerator
        fun C(Other: UObject): CircleSplineGenerator
        fun C(Other: Any): CircleSplineGenerator
    }
}

external open class ArcSplineGenerator : SplineGeneratorBase {
    constructor()
    constructor(Outer: UObject)
    open var NumberOfPoints: Number
    open var Radius: Number
    open var Degrees: Number
    open var bReverseDir: Boolean
    open var bKeepFirstKeyTangent: Boolean
    open var bBranchRight: Boolean

    companion object {
        fun Load(ResourceName: String): ArcSplineGenerator
        fun Find(Outer: UObject, ResourceName: String): ArcSplineGenerator
        fun GetDefaultObject(): ArcSplineGenerator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ArcSplineGenerator
        fun C(Other: UObject): ArcSplineGenerator
        fun C(Other: Any): ArcSplineGenerator
    }
}

external open class SquareSplineGenerator : SplineGeneratorBase {
    constructor()
    constructor(Outer: UObject)
    open var Length: Number
    open var bBranchRight: Boolean

    companion object {
        fun Load(ResourceName: String): SquareSplineGenerator
        fun Find(Outer: UObject, ResourceName: String): SquareSplineGenerator
        fun GetDefaultObject(): SquareSplineGenerator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SquareSplineGenerator
        fun C(Other: UObject): SquareSplineGenerator
        fun C(Other: Any): SquareSplineGenerator
    }
}

external open class EllipseSplineGenerator : SplineGeneratorBase {
    constructor()
    constructor(Outer: UObject)
    open var NumberOfPoints: Number
    open var Length: Number
    open var Width: Number
    open var bReverseDir: Boolean
    open var bKeepFirstKeyTangent: Boolean
    open var bBranchRight: Boolean

    companion object {
        fun Load(ResourceName: String): EllipseSplineGenerator
        fun Find(Outer: UObject, ResourceName: String): EllipseSplineGenerator
        fun GetDefaultObject(): EllipseSplineGenerator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EllipseSplineGenerator
        fun C(Other: UObject): EllipseSplineGenerator
        fun C(Other: Any): EllipseSplineGenerator
    }
}

external open class RectangleSplineGenerator : SplineGeneratorBase {
    constructor()
    constructor(Outer: UObject)
    open var Length: Number
    open var Width: Number
    open var bBranchRight: Boolean

    companion object {
        fun Load(ResourceName: String): RectangleSplineGenerator
        fun Find(Outer: UObject, ResourceName: String): RectangleSplineGenerator
        fun GetDefaultObject(): RectangleSplineGenerator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RectangleSplineGenerator
        fun C(Other: UObject): RectangleSplineGenerator
        fun C(Other: Any): RectangleSplineGenerator
    }
}

external open class LineSplineGenerator : SplineGeneratorBase {
    constructor()
    constructor(Outer: UObject)
    open var NumberOfPoints: Number
    open var Length: Number
    open var bEnableUpToNextPoint: Boolean
    open var bUpToNextPoint: Boolean

    companion object {
        fun Load(ResourceName: String): LineSplineGenerator
        fun Find(Outer: UObject, ResourceName: String): LineSplineGenerator
        fun GetDefaultObject(): LineSplineGenerator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LineSplineGenerator
        fun C(Other: UObject): LineSplineGenerator
        fun C(Other: Any): LineSplineGenerator
    }
}

external open class SplineMetadataDetailsFactoryBase : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SplineMetadataDetailsFactoryBase
        fun Find(Outer: UObject, ResourceName: String): SplineMetadataDetailsFactoryBase
        fun GetDefaultObject(): SplineMetadataDetailsFactoryBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SplineMetadataDetailsFactoryBase
        fun C(Other: UObject): SplineMetadataDetailsFactoryBase
        fun C(Other: Any): SplineMetadataDetailsFactoryBase
    }
}

external open class PropertyViewBase : Widget {
    constructor()
    constructor(Outer: UObject)
    open var LazyObject: Any
    open var SoftObjectPath: SoftObjectPath
    open var bAutoLoadAsset: Boolean
    open var OnPropertyChanged: UnrealEngineMulticastDelegate<(PropertyName: String) -> Unit>
    open fun SetObject(NewObject: UObject)
    open fun GetObject(): UObject

    companion object {
        fun Load(ResourceName: String): PropertyViewBase
        fun Find(Outer: UObject, ResourceName: String): PropertyViewBase
        fun GetDefaultObject(): PropertyViewBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PropertyViewBase
        fun C(Other: UObject): PropertyViewBase
        fun C(Other: Any): PropertyViewBase
    }
}

external open class DetailsView : PropertyViewBase {
    constructor()
    constructor(Outer: UObject)
    open var bAllowFiltering: Boolean
    open var bAllowFavoriteSystem: Boolean
    open var bShowModifiedPropertiesOption: Boolean
    open var bShowKeyablePropertiesOption: Boolean
    open var bShowAnimatedPropertiesOption: Boolean
    open var ColumnWidth: Number
    open var bShowScrollBar: Boolean
    open var bForceHiddenPropertyVisibility: Boolean
    open var ViewIdentifier: String
    open var CategoriesToShow: Array<String>
    open var PropertiesToShow: Array<String>
    open var bShowOnlyWhitelisted: Boolean

    companion object {
        fun Load(ResourceName: String): DetailsView
        fun Find(Outer: UObject, ResourceName: String): DetailsView
        fun GetDefaultObject(): DetailsView
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DetailsView
        fun C(Other: UObject): DetailsView
        fun C(Other: Any): DetailsView
    }
}

external open class K2Node_CreateDragDropOperation : K2Node_ConstructObjectFromClass {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_CreateDragDropOperation
        fun Find(Outer: UObject, ResourceName: String): K2Node_CreateDragDropOperation
        fun GetDefaultObject(): K2Node_CreateDragDropOperation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_CreateDragDropOperation
        fun C(Other: UObject): K2Node_CreateDragDropOperation
        fun C(Other: Any): K2Node_CreateDragDropOperation
    }
}

external open class K2Node_CreateWidget : K2Node_ConstructObjectFromClass {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_CreateWidget
        fun Find(Outer: UObject, ResourceName: String): K2Node_CreateWidget
        fun GetDefaultObject(): K2Node_CreateWidget
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_CreateWidget
        fun C(Other: UObject): K2Node_CreateWidget
        fun C(Other: Any): K2Node_CreateWidget
    }
}

external open class K2Node_PlayAnimation : K2Node_BaseAsyncTask {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_PlayAnimation
        fun Find(Outer: UObject, ResourceName: String): K2Node_PlayAnimation
        fun GetDefaultObject(): K2Node_PlayAnimation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_PlayAnimation
        fun C(Other: UObject): K2Node_PlayAnimation
        fun C(Other: Any): K2Node_PlayAnimation
    }
}

external open class K2Node_PlayAnimationTimeRange : K2Node_BaseAsyncTask {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_PlayAnimationTimeRange
        fun Find(Outer: UObject, ResourceName: String): K2Node_PlayAnimationTimeRange
        fun GetDefaultObject(): K2Node_PlayAnimationTimeRange
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_PlayAnimationTimeRange
        fun C(Other: UObject): K2Node_PlayAnimationTimeRange
        fun C(Other: Any): K2Node_PlayAnimationTimeRange
    }
}

external open class EditorPropertyPathSegment {
    open var struct: Struct
    open var MemberName: String
    open var MemberGuid: Guid
    open var IsProperty: Boolean
    open fun clone(): EditorPropertyPathSegment

    companion object {
        fun C(Other: UObject): EditorPropertyPathSegment
        fun C(Other: Any): EditorPropertyPathSegment
    }
}

external open class EditorPropertyPath {
    open var Segments: Array<EditorPropertyPathSegment>
    open fun clone(): EditorPropertyPath

    companion object {
        fun C(Other: UObject): EditorPropertyPath
        fun C(Other: Any): EditorPropertyPath
    }
}

external open class DelegateEditorBinding {
    open var ObjectName: String
    open var PropertyName: String
    open var FunctionName: String
    open var SourceProperty: String
    open var SourcePath: EditorPropertyPath
    open var MemberGuid: Guid
    open var Kind: String /* "Function" | "Property" | "EBindingKind_MAX" */
    open fun clone(): DelegateEditorBinding

    companion object {
        fun C(Other: UObject): DelegateEditorBinding
        fun C(Other: Any): DelegateEditorBinding
    }
}

external open class WidgetAnimation_DEPRECATED {
    open var MovieScene: MovieScene
    open var AnimationBindings: Array<WidgetAnimationBinding>
    open fun clone(): WidgetAnimation_DEPRECATED

    companion object {
        fun C(Other: UObject): WidgetAnimation_DEPRECATED
        fun C(Other: Any): WidgetAnimation_DEPRECATED
    }
}

external object EWidgetCompileTimeTickPrediction {
    var WontTick: String /* "WontTick" */
    var OnDemand: String /* "OnDemand" */
    var WillTick: String /* "WillTick" */
    var EWidgetCompileTimeTickPrediction_MAX: String /* "EWidgetCompileTimeTickPrediction_MAX" */
}

external open class WidgetBlueprint : BaseWidgetBlueprint {
    constructor()
    constructor(Outer: UObject)
    open var Bindings: Array<DelegateEditorBinding>
    open var AnimationData: Array<WidgetAnimation_DEPRECATED>
    open var Animations: Array<WidgetAnimation>
    open var PaletteCategory: String
    open var TickFrequency: String /* "Never" | "Auto" | "EWidgetTickFrequency_MAX" */
    open var TickPrediction: String /* "WontTick" | "OnDemand" | "WillTick" | "EWidgetCompileTimeTickPrediction_MAX" */
    open var TickPredictionReason: String
    open var PropertyBindings: Number

    companion object {
        fun Load(ResourceName: String): WidgetBlueprint
        fun Find(Outer: UObject, ResourceName: String): WidgetBlueprint
        fun GetDefaultObject(): WidgetBlueprint
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WidgetBlueprint
        fun C(Other: UObject): WidgetBlueprint
        fun C(Other: Any): WidgetBlueprint
    }
}

external open class K2Node_WidgetAnimationEvent : K2Node_Event {
    constructor()
    constructor(Outer: UObject)
    open var Action: String /* "Started" | "Finished" | "EWidgetAnimationEvent_MAX" */
    open var AnimationPropertyName: String
    open var UserTag: String
    open var SourceWidgetBlueprint: WidgetBlueprint

    companion object {
        fun Load(ResourceName: String): K2Node_WidgetAnimationEvent
        fun Find(Outer: UObject, ResourceName: String): K2Node_WidgetAnimationEvent
        fun GetDefaultObject(): K2Node_WidgetAnimationEvent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_WidgetAnimationEvent
        fun C(Other: UObject): K2Node_WidgetAnimationEvent
        fun C(Other: Any): K2Node_WidgetAnimationEvent
    }
}

external open class SinglePropertyView : PropertyViewBase {
    constructor()
    constructor(Outer: UObject)
    open var PropertyName: String
    open var NameOverride: String
    open fun SetPropertyName(NewPropertyName: String)
    open fun GetPropertyName(): String

    companion object {
        fun Load(ResourceName: String): SinglePropertyView
        fun Find(Outer: UObject, ResourceName: String): SinglePropertyView
        fun GetDefaultObject(): SinglePropertyView
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SinglePropertyView
        fun C(Other: UObject): SinglePropertyView
        fun C(Other: Any): SinglePropertyView
    }
}

external open class SlateVectorArtDataFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SlateVectorArtDataFactory
        fun Find(Outer: UObject, ResourceName: String): SlateVectorArtDataFactory
        fun GetDefaultObject(): SlateVectorArtDataFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SlateVectorArtDataFactory
        fun C(Other: UObject): SlateVectorArtDataFactory
        fun C(Other: Any): SlateVectorArtDataFactory
    }
}

external object EPropertyBindingPermissionLevel {
    var Allow: String /* "Allow" */
    var Prevent: String /* "Prevent" */
    var PreventAndWarn: String /* "PreventAndWarn" */
    var PreventAndError: String /* "PreventAndError" */
    var EPropertyBindingPermissionLevel_MAX: String /* "EPropertyBindingPermissionLevel_MAX" */
}

external open class WidgetCompilerOptions {
    open var bAllowBlueprintTick: Boolean
    open var bAllowBlueprintPaint: Boolean
    open var PropertyBindingRule: String /* "Allow" | "Prevent" | "PreventAndWarn" | "PreventAndError" | "EPropertyBindingPermissionLevel_MAX" */
    open var Rules: Array<Class>
    open fun clone(): WidgetCompilerOptions

    companion object {
        fun C(Other: UObject): WidgetCompilerOptions
        fun C(Other: Any): WidgetCompilerOptions
    }
}

external open class DirectoryWidgetCompilerOptions {
    open var Directory: DirectoryPath
    open var IgnoredWidgets: Array<WidgetBlueprint>
    open var Options: WidgetCompilerOptions
    open fun clone(): DirectoryWidgetCompilerOptions

    companion object {
        fun C(Other: UObject): DirectoryWidgetCompilerOptions
        fun C(Other: Any): DirectoryWidgetCompilerOptions
    }
}

external open class DebugResolution {
    open var Width: Number
    open var Height: Number
    open var Description: String
    open var Color: LinearColor
    open fun clone(): DebugResolution

    companion object {
        fun C(Other: UObject): DebugResolution
        fun C(Other: Any): DebugResolution
    }
}

external open class UMGEditorProjectSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var DefaultCompilerOptions: WidgetCompilerOptions
    open var DirectoryCompilerOptions: Array<DirectoryWidgetCompilerOptions>
    open var bShowWidgetsFromEngineContent: Boolean
    open var bShowWidgetsFromDeveloperContent: Boolean
    open var CategoriesToHide: Array<String>
    open var WidgetClassesToHide: Array<SoftClassPath>
    open var bUseWidgetTemplateSelector: Boolean
    open var DefaultRootWidget: UnrealEngineClass
    open var DefaultWidgetParentClass: Class
    open var DebugResolutions: Array<DebugResolution>
    open var Version: Number

    companion object {
        fun Load(ResourceName: String): UMGEditorProjectSettings
        fun Find(Outer: UObject, ResourceName: String): UMGEditorProjectSettings
        fun GetDefaultObject(): UMGEditorProjectSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UMGEditorProjectSettings
        fun C(Other: UObject): UMGEditorProjectSettings
        fun C(Other: Any): UMGEditorProjectSettings
    }
}

external open class WidgetBlueprintFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var BlueprintType: String /* "BPTYPE_Normal" | "BPTYPE_Const" | "BPTYPE_MacroLibrary" | "BPTYPE_Interface" | "BPTYPE_LevelScript" | "BPTYPE_FunctionLibrary" | "BPTYPE_MAX" */
    open var ParentClass: UnrealEngineClass
    open var RootWidgetClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): WidgetBlueprintFactory
        fun Find(Outer: UObject, ResourceName: String): WidgetBlueprintFactory
        fun GetDefaultObject(): WidgetBlueprintFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WidgetBlueprintFactory
        fun C(Other: UObject): WidgetBlueprintFactory
        fun C(Other: Any): WidgetBlueprintFactory
    }
}

external open class WidgetCompilerRule : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): WidgetCompilerRule
        fun Find(Outer: UObject, ResourceName: String): WidgetCompilerRule
        fun GetDefaultObject(): WidgetCompilerRule
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WidgetCompilerRule
        fun C(Other: UObject): WidgetCompilerRule
        fun C(Other: Any): WidgetCompilerRule
    }
}

external open class WidgetPaletteFavorites : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Favorites: Array<String>

    companion object {
        fun Load(ResourceName: String): WidgetPaletteFavorites
        fun Find(Outer: UObject, ResourceName: String): WidgetPaletteFavorites
        fun GetDefaultObject(): WidgetPaletteFavorites
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WidgetPaletteFavorites
        fun C(Other: UObject): WidgetPaletteFavorites
        fun C(Other: Any): WidgetPaletteFavorites
    }
}

external open class WidgetDesignerSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var GridSnapEnabled: Boolean
    open var GridSnapSize: Number
    open var bLockToPanelOnDragByDefault: Boolean
    open var bShowOutlines: Boolean
    open var bExecutePreConstructEvent: Boolean
    open var bRespectLocks: Boolean
    open var Favorites: WidgetPaletteFavorites

    companion object {
        fun Load(ResourceName: String): WidgetDesignerSettings
        fun Find(Outer: UObject, ResourceName: String): WidgetDesignerSettings
        fun GetDefaultObject(): WidgetDesignerSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WidgetDesignerSettings
        fun C(Other: UObject): WidgetDesignerSettings
        fun C(Other: Any): WidgetDesignerSettings
    }
}

external open class WidgetGraphSchema : EdGraphSchema_K2 {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): WidgetGraphSchema
        fun Find(Outer: UObject, ResourceName: String): WidgetGraphSchema
        fun GetDefaultObject(): WidgetGraphSchema
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WidgetGraphSchema
        fun C(Other: UObject): WidgetGraphSchema
        fun C(Other: Any): WidgetGraphSchema
    }
}

external open class WidgetSlotPair : UObject {
    constructor()
    constructor(Outer: UObject)
    open var WidgetName: String
    open var SlotPropertyNames: Array<String>
    open var SlotPropertyValues: Array<String>

    companion object {
        fun Load(ResourceName: String): WidgetSlotPair
        fun Find(Outer: UObject, ResourceName: String): WidgetSlotPair
        fun GetDefaultObject(): WidgetSlotPair
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WidgetSlotPair
        fun C(Other: UObject): WidgetSlotPair
        fun C(Other: Any): WidgetSlotPair
    }
}

external open class AutomatedTestFilter {
    open var Contains: String
    open var MatchFromStart: Boolean
    open fun clone(): AutomatedTestFilter

    companion object {
        fun C(Other: UObject): AutomatedTestFilter
        fun C(Other: Any): AutomatedTestFilter
    }
}

external open class AutomatedTestGroup {
    open var Name: String
    open var Filters: Array<AutomatedTestFilter>
    open fun clone(): AutomatedTestGroup

    companion object {
        fun C(Other: UObject): AutomatedTestGroup
        fun C(Other: Any): AutomatedTestGroup
    }
}

external open class AutomationControllerSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Groups: Array<AutomatedTestGroup>
    open var bSuppressLogErrors: Boolean
    open var bSuppressLogWarnings: Boolean
    open var bTreatLogWarningsAsTestErrors: Boolean
    open var CheckTestIntervalSeconds: Number
    open var GameInstanceLostTimerSeconds: Number

    companion object {
        fun Load(ResourceName: String): AutomationControllerSettings
        fun Find(Outer: UObject, ResourceName: String): AutomationControllerSettings
        fun GetDefaultObject(): AutomationControllerSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AutomationControllerSettings
        fun C(Other: UObject): AutomationControllerSettings
        fun C(Other: Any): AutomationControllerSettings
    }
}

external open class AutomationEditorTask : UObject {
    constructor()
    constructor(Outer: UObject)
    open fun IsValidTask(): Boolean
    open fun IsTaskDone(): Boolean

    companion object {
        fun Load(ResourceName: String): AutomationEditorTask
        fun Find(Outer: UObject, ResourceName: String): AutomationEditorTask
        fun GetDefaultObject(): AutomationEditorTask
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AutomationEditorTask
        fun C(Other: UObject): AutomationEditorTask
        fun C(Other: Any): AutomationEditorTask
    }
}

external open class AutomationBlueprintFunctionLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AutomationBlueprintFunctionLibrary
        fun Find(Outer: UObject, ResourceName: String): AutomationBlueprintFunctionLibrary
        fun GetDefaultObject(): AutomationBlueprintFunctionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AutomationBlueprintFunctionLibrary
        fun TakeHighResScreenshot(ResX: Number, ResY: Number, Filename: String, Camera: CameraActor, bMaskEnabled: Boolean, bCaptureHDR: Boolean, ComparisonTolerance: String /* "Zero" | "Low" | "Medium" | "High" | "Custom" | "EComparisonTolerance_MAX" */, ComparisonNotes: String, Delay: Number): AutomationEditorTask
        fun TakeAutomationScreenshotOfUI(WorldContextObject: UObject, LatentInfo: LatentActionInfo, Name: String, Options: AutomationScreenshotOptions)
        fun TakeAutomationScreenshotAtCamera(WorldContextObject: UObject, LatentInfo: LatentActionInfo, Camera: CameraActor, NameOverride: String, Notes: String, Options: AutomationScreenshotOptions)
        fun TakeAutomationScreenshot(WorldContextObject: UObject, LatentInfo: LatentActionInfo, Name: String, Notes: String, Options: AutomationScreenshotOptions)
        fun SetScalabilityQualityToLow(WorldContextObject: UObject)
        fun SetScalabilityQualityToEpic(WorldContextObject: UObject)
        fun SetScalabilityQualityLevelRelativeToMax(WorldContextObject: UObject, Value: Number)
        fun GetStatIncMax(StatName: String): Number
        fun GetStatIncAverage(StatName: String): Number
        fun GetStatExcMax(StatName: String): Number
        fun GetStatExcAverage(StatName: String): Number
        fun GetStatCallCount(StatName: String): Number
        fun GetDefaultScreenshotOptionsForRendering(Tolerance: String /* "Zero" | "Low" | "Medium" | "High" | "Custom" | "EComparisonTolerance_MAX" */, Delay: Number): AutomationScreenshotOptions
        fun GetDefaultScreenshotOptionsForGameplay(Tolerance: String /* "Zero" | "Low" | "Medium" | "High" | "Custom" | "EComparisonTolerance_MAX" */, Delay: Number): AutomationScreenshotOptions
        fun EnableStatGroup(WorldContextObject: UObject, GroupName: String)
        fun DisableStatGroup(WorldContextObject: UObject, GroupName: String)
        fun AutomationWaitForLoading(WorldContextObject: UObject, LatentInfo: LatentActionInfo, Options: AutomationWaitForLoadingOptions)
        fun AreAutomatedTestsRunning(): Boolean
        fun AddExpectedLogError(ExpectedPatternString: String, Occurrences: Number, ExactMatch: Boolean)
        fun C(Other: UObject): AutomationBlueprintFunctionLibrary
        fun C(Other: Any): AutomationBlueprintFunctionLibrary
    }
}

external open class FuncTestRenderingComponent : PrimitiveComponent {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): FuncTestRenderingComponent
        fun Find(Outer: UObject, ResourceName: String): FuncTestRenderingComponent
        fun GetDefaultObject(): FuncTestRenderingComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FuncTestRenderingComponent
        fun C(Other: UObject): FuncTestRenderingComponent
        fun C(Other: Any): FuncTestRenderingComponent
    }
}

external object EFunctionalTestLogHandling {
    var ProjectDefault: String /* "ProjectDefault" */
    var OutputIsError: String /* "OutputIsError" */
    var OutputIgnored: String /* "OutputIgnored" */
    var EFunctionalTestLogHandling_MAX: String /* "EFunctionalTestLogHandling_MAX" */
}

external object EFunctionalTestResult {
    var Default: String /* "Default" */
    var Invalid: String /* "Invalid" */
    var Error: String /* "Error" */
    var Running: String /* "Running" */
    var Failed: String /* "Failed" */
    var Succeeded: String /* "Succeeded" */
    var EFunctionalTestResult_MAX: String /* "EFunctionalTestResult_MAX" */
}

external object EComparisonMethod {
    var Equal_To: String /* "Equal_To" */
    var Not_Equal_To: String /* "Not_Equal_To" */
    var Greater_Than_Or_Equal_To: String /* "Greater_Than_Or_Equal_To" */
    var Less_Than_Or_Equal_To: String /* "Less_Than_Or_Equal_To" */
    var Greater_Than: String /* "Greater_Than" */
    var Less_Than: String /* "Less_Than" */
    var EComparisonMethod_MAX: String /* "EComparisonMethod_MAX" */
}

external open class FunctionalTest(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var SpriteComponent: BillboardComponent
    open var bIsEnabled: Boolean
    open var LogErrorHandling: String /* "ProjectDefault" | "OutputIsError" | "OutputIgnored" | "EFunctionalTestLogHandling_MAX" */
    open var LogWarningHandling: String /* "ProjectDefault" | "OutputIsError" | "OutputIgnored" | "EFunctionalTestLogHandling_MAX" */
    open var Author: String
    open var Description: String
    open var ObservationPoint: Actor
    open var RandomNumbersStream: RandomStream
    open var Result: String /* "Default" | "Invalid" | "Error" | "Running" | "Failed" | "Succeeded" | "EFunctionalTestResult_MAX" */
    open var PreparationTimeLimit: Number
    open var TimeLimit: Number
    open var TimesUpMessage: String
    open var TimesUpResult: String /* "Default" | "Invalid" | "Error" | "Running" | "Failed" | "Succeeded" | "EFunctionalTestResult_MAX" */
    open var OnTestPrepare: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnTestStart: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnTestFinished: UnrealEngineMulticastDelegate<() -> Unit>
    open var AutoDestroyActors: Array<Actor>
    open var RenderComp: FuncTestRenderingComponent
    open var TestName: TextRenderComponent
    open var bIsRunning: Boolean
    open var TotalTime: Number
    open fun SetTimeLimit(NewTimeLimit: Number, ResultWhenTimeRunsOut: String /* "Default" | "Invalid" | "Error" | "Running" | "Failed" | "Succeeded" | "EFunctionalTestResult_MAX" */)
    open fun RegisterAutoDestroyActor(ActorToAutoDestroy: Actor)
    open fun StartTest()
    open fun PrepareTest()
    open fun OnWantsReRunCheck(): Boolean
    open fun OnAdditionalTestFinishedMessageRequest(TestResult: String /* "Default" | "Invalid" | "Error" | "Running" | "Failed" | "Succeeded" | "EFunctionalTestResult_MAX" */): String
    open fun LogMessage(Message: String)
    open fun IsRunning(): Boolean
    open fun IsReady(): Boolean
    open fun IsEnabled(): Boolean
    open fun GetCurrentRerunReason(): String
    open fun FinishTest(TestResult: String /* "Default" | "Invalid" | "Error" | "Running" | "Failed" | "Succeeded" | "EFunctionalTestResult_MAX" */, Message: String)
    open fun DebugGatherRelevantActors(): Array<Actor>
    open fun AssertValue(Actual: Number, ShouldBe: String /* "Equal_To" | "Not_Equal_To" | "Greater_Than_Or_Equal_To" | "Less_Than_Or_Equal_To" | "Greater_Than" | "Less_Than" | "EComparisonMethod_MAX" */, Expected: Number, What: String, ContextObject: UObject): Boolean
    open fun AssertValue(Actual: DateTime, ShouldBe: String /* "Equal_To" | "Not_Equal_To" | "Greater_Than_Or_Equal_To" | "Less_Than_Or_Equal_To" | "Greater_Than" | "Less_Than" | "EComparisonMethod_MAX" */, Expected: DateTime, What: String, ContextObject: UObject): Boolean
    open fun AssertTrue(Condition: Boolean, Message: String, ContextObject: UObject): Boolean
    open fun AssertNotEqual(Actual: Vector, NotExpected: Vector, What: String, ContextObject: UObject): Boolean
    open fun AssertNotEqual(Actual: Transform, NotExpected: Transform, What: String, ContextObject: UObject): Boolean
    open fun AssertNotEqual(Actual: String, NotExpected: String, What: String, ContextObject: UObject): Boolean
    open fun AssertNotEqual(Actual: Rotator, NotExpected: Rotator, What: String, ContextObject: UObject): Boolean
    open fun AssertIsValid(UObject: UObject, Message: String, ContextObject: UObject): Boolean
    open fun AssertFalse(Condition: Boolean, Message: String, ContextObject: UObject): Boolean
    open fun AssertEqual(Actual: Vector, Expected: Vector, What: String, Tolerance: Number, ContextObject: UObject): Boolean
    open fun AssertEqual(Actual: Transform, Expected: Transform, What: String, Tolerance: Number, ContextObject: UObject): Boolean
    open fun AssertEqual(Actual: TraceQueryTestResults, Expected: TraceQueryTestResults, What: String, ContextObject: UObject): Boolean
    open fun AssertEqual(Actual: String, Expected: String, What: String, ContextObject: UObject): Boolean
    open fun AssertEqual(Actual: Rotator, Expected: Rotator, What: String, Tolerance: Number, ContextObject: UObject): Boolean
    open fun AssertEqual(Actual: UObject, Expected: UObject, What: String, ContextObject: UObject): Boolean
    open fun AssertEqual(Actual: Number, Expected: Number, What: String, ContextObject: UObject): Boolean
    open fun AssertEqual(Actual: Number, Expected: Number, What: String, Tolerance: Number, ContextObject: UObject): Boolean
    open fun AssertEqual(Actual: Boolean, Expected: Boolean, What: String, ContextObject: UObject): Boolean
    open fun AddWarning(Message: String)
    open fun AddRerun(reason: String)
    open fun AddError(Message: String)

    companion object {
        fun GetDefaultObject(): FunctionalTest
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FunctionalTest
        fun C(Other: UObject): FunctionalTest
        fun C(Other: Any): FunctionalTest
    }
}

external open class PendingDelayedSpawn {
    open fun clone(): PendingDelayedSpawn

    companion object {
        fun C(Other: UObject): PendingDelayedSpawn
        fun C(Other: Any): PendingDelayedSpawn
    }
}

external open class FunctionalAITestBase(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : FunctionalTest {
    open var SpawnLocationRandomizationRange: Number
    open var SpawnedPawns: Array<Pawn>
    open var PendingDelayedSpawns: Array<PendingDelayedSpawn>
    open var CurrentSpawnSetIndex: Number
    open var CurrentSpawnSetName: String
    open var OnAISpawned: UnrealEngineMulticastDelegate<(Controller: AIController, Pawn: Pawn) -> Unit>
    open var OnAllAISPawned: UnrealEngineMulticastDelegate<() -> Unit>
    open var NavMeshDebugOrigin: Vector
    open var NavMeshDebugExtent: Vector
    open var bWaitForNavMesh: Boolean
    open var bDebugNavMeshOnTimeout: Boolean
    open fun IsOneOfSpawnedPawns(Actor: Actor): Boolean

    companion object {
        fun GetDefaultObject(): FunctionalAITestBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FunctionalAITestBase
        fun C(Other: UObject): FunctionalAITestBase
        fun C(Other: Any): FunctionalAITestBase
    }
}

external open class AITestSpawnSetBase {
    open var Name: String
    open var bEnabled: Boolean
    open var FallbackSpawnLocation: Actor
    open fun clone(): AITestSpawnSetBase

    companion object {
        fun C(Other: UObject): AITestSpawnSetBase
        fun C(Other: Any): AITestSpawnSetBase
    }
}

external open class AITestSpawnInfoBase {
    open var SpawnLocation: Actor
    open var NumberToSpawn: Number
    open var SpawnDelay: Number
    open var PreSpawnDelay: Number
    open fun clone(): AITestSpawnInfoBase

    companion object {
        fun C(Other: UObject): AITestSpawnInfoBase
        fun C(Other: Any): AITestSpawnInfoBase
    }
}

external open class GenericTeamId {
    open var TeamID: Number
    open fun clone(): GenericTeamId

    companion object {
        fun C(Other: UObject): GenericTeamId
        fun C(Other: Any): GenericTeamId
    }
}

external open class AITestSpawnInfo : AITestSpawnInfoBase {
    open var PawnClass: UnrealEngineClass
    open var ControllerClass: UnrealEngineClass
    open var TeamID: GenericTeamId
    open var BehaviorTree: BehaviorTree
    override fun clone(): AITestSpawnInfo

    companion object {
        fun C(Other: UObject): AITestSpawnInfo
        fun C(Other: Any): AITestSpawnInfo
    }
}

external open class AITestSpawnSet : AITestSpawnSetBase {
    open var SpawnInfoContainer: Array<AITestSpawnInfo>
    override fun clone(): AITestSpawnSet

    companion object {
        fun C(Other: UObject): AITestSpawnSet
        fun C(Other: Any): AITestSpawnSet
    }
}

external open class FunctionalAITest(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : FunctionalAITestBase {
    open var SpawnSets: Array<AITestSpawnSet>

    companion object {
        fun GetDefaultObject(): FunctionalAITest
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FunctionalAITest
        fun C(Other: UObject): FunctionalAITest
        fun C(Other: Any): FunctionalAITest
    }
}

external open class AutomationPerformaceHelper : UObject {
    constructor()
    constructor(Outer: UObject)
    open fun WriteLogFile(CaptureDir: String, CaptureExtension: String)
    open fun TriggerGPUTraceIfRecordFallsBelowBudget()
    open fun Tick(DeltaSeconds: Number)
    open fun StopCPUProfiling()
    open fun StartCPUProfiling()
    open fun Sample(DeltaSeconds: Number)
    open fun OnBeginTests()
    open fun OnAllTestsComplete()
    open fun IsRecording(): Boolean
    open fun IsCurrentRecordWithinRenderThreadBudget(): Boolean
    open fun IsCurrentRecordWithinGPUBudget(): Boolean
    open fun IsCurrentRecordWithinGameThreadBudget(): Boolean
    open fun EndStatsFile()
    open fun EndRecordingBaseline()
    open fun EndRecording()
    open fun BeginStatsFile(RecordName: String)
    open fun BeginRecordingBaseline(RecordName: String)
    open fun BeginRecording(RecordName: String, InGPUBudget: Number, InRenderThreadBudget: Number, InGameThreadBudget: Number)

    companion object {
        fun Load(ResourceName: String): AutomationPerformaceHelper
        fun Find(Outer: UObject, ResourceName: String): AutomationPerformaceHelper
        fun GetDefaultObject(): AutomationPerformaceHelper
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AutomationPerformaceHelper
        fun C(Other: UObject): AutomationPerformaceHelper
        fun C(Other: Any): AutomationPerformaceHelper
    }
}

external open class FunctionalTestGameMode(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : GameModeBase {
    companion object {
        fun GetDefaultObject(): FunctionalTestGameMode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FunctionalTestGameMode
        fun C(Other: UObject): FunctionalTestGameMode
        fun C(Other: Any): FunctionalTestGameMode
    }
}

external open class FunctionalTestingManager : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)
    open var TestsLeft: Array<FunctionalTest>
    open var AllTests: Array<FunctionalTest>
    open var OnSetupTests: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnTestsComplete: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnTestsBegin: UnrealEngineMulticastDelegate<() -> Unit>

    companion object {
        fun Load(ResourceName: String): FunctionalTestingManager
        fun Find(Outer: UObject, ResourceName: String): FunctionalTestingManager
        fun GetDefaultObject(): FunctionalTestingManager
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FunctionalTestingManager
        fun RunAllFunctionalTests(WorldContextObject: UObject, bNewLog: Boolean, bRunLooped: Boolean, FailedTestsReproString: String): Boolean
        fun C(Other: UObject): FunctionalTestingManager
        fun C(Other: Any): FunctionalTestingManager
    }
}

external open class PhasedAutomationActorBase(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open fun OnFunctionalTestingComplete()
    open fun OnFunctionalTestingBegin()

    companion object {
        fun GetDefaultObject(): PhasedAutomationActorBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PhasedAutomationActorBase
        fun C(Other: UObject): PhasedAutomationActorBase
        fun C(Other: Any): PhasedAutomationActorBase
    }
}

external open class FunctionalTestLevelScript(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : LevelScriptActor {
    companion object {
        fun GetDefaultObject(): FunctionalTestLevelScript
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FunctionalTestLevelScript
        fun C(Other: UObject): FunctionalTestLevelScript
        fun C(Other: Any): FunctionalTestLevelScript
    }
}

external open class FunctionalTestUtilityLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): FunctionalTestUtilityLibrary
        fun Find(Outer: UObject, ResourceName: String): FunctionalTestUtilityLibrary
        fun GetDefaultObject(): FunctionalTestUtilityLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FunctionalTestUtilityLibrary
        fun TraceChannelTestUtil(WorldContextObject: UObject, BatchOptions: TraceChannelTestBatchOptions, Start: Vector, End: Vector, SphereCapsuleRadius: Number, CapsuleHalfHeight: Number, BoxHalfSize: Vector, Orientation: Rotator, TraceChannel: String /* "TraceTypeQuery1" | "TraceTypeQuery2" | "TraceTypeQuery3" | "TraceTypeQuery4" | "TraceTypeQuery5" | "TraceTypeQuery6" | "TraceTypeQuery7" | "TraceTypeQuery8" | "TraceTypeQuery9" | "TraceTypeQuery10" | "TraceTypeQuery11" | "TraceTypeQuery12" | "TraceTypeQuery13" | "TraceTypeQuery14" | "TraceTypeQuery15" | "TraceTypeQuery16" | "TraceTypeQuery17" | "TraceTypeQuery18" | "TraceTypeQuery19" | "TraceTypeQuery20" | "TraceTypeQuery21" | "TraceTypeQuery22" | "TraceTypeQuery23" | "TraceTypeQuery24" | "TraceTypeQuery25" | "TraceTypeQuery26" | "TraceTypeQuery27" | "TraceTypeQuery28" | "TraceTypeQuery29" | "TraceTypeQuery30" | "TraceTypeQuery31" | "TraceTypeQuery32" | "TraceTypeQuery_MAX" | "ETraceTypeQuery_MAX" */, ObjectTypes: Array<String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */>, ProfileName: String, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, bIgnoreSelf: Boolean, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, TraceColor: LinearColor, TraceHitColor: LinearColor, DrawTime: Number): TraceQueryTestResults
        fun C(Other: UObject): FunctionalTestUtilityLibrary
        fun C(Other: Any): FunctionalTestUtilityLibrary
    }
}

external open class ScreenshotFunctionalTestBase(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : FunctionalTest {
    open var Notes: String
    open var ScreenshotCamera: CameraComponent
    open var ScreenshotOptions: AutomationScreenshotOptions

    companion object {
        fun GetDefaultObject(): ScreenshotFunctionalTestBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ScreenshotFunctionalTestBase
        fun C(Other: UObject): ScreenshotFunctionalTestBase
        fun C(Other: Any): ScreenshotFunctionalTestBase
    }
}
