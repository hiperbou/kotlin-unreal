@file:Suppress("INTERFACE_WITH_SUPERCLASS", "OVERRIDING_FINAL_MEMBER", "RETURN_TYPE_MISMATCH_ON_OVERRIDE", "CONFLICTING_OVERLOADS")
package ue


import kotlin.js.*
import org.khronos.webgl.*
import org.w3c.dom.*
import org.w3c.dom.events.*
import org.w3c.dom.parsing.*
import org.w3c.dom.svg.*
import org.w3c.dom.url.*
import org.w3c.fetch.*
import org.w3c.files.*
import org.w3c.notifications.*
import org.w3c.performance.*
import org.w3c.workers.*
import org.w3c.xhr.*


external open class AnimSubsystem_PropertyAccess : AnimSubsystem {
    open var Library: PropertyAccessLibrary
    override fun clone(): AnimSubsystem_PropertyAccess

    companion object {
        fun C(Other: UObject): AnimSubsystem_PropertyAccess
        fun C(Other: Any): AnimSubsystem_PropertyAccess
    }
}

external open class AnimBlueprintExtension_PropertyAccess : AnimBlueprintExtension {
    constructor()
    constructor(Outer: UObject)
    open var Subsystem: AnimSubsystem_PropertyAccess

    companion object {
        fun Load(ResourceName: String): AnimBlueprintExtension_PropertyAccess
        fun Find(Outer: UObject, ResourceName: String): AnimBlueprintExtension_PropertyAccess
        fun GetDefaultObject(): AnimBlueprintExtension_PropertyAccess
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimBlueprintExtension_PropertyAccess
        fun C(Other: UObject): AnimBlueprintExtension_PropertyAccess
        fun C(Other: Any): AnimBlueprintExtension_PropertyAccess
    }
}

external open class AnimBlueprintExtension_StateMachine : AnimBlueprintExtension {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimBlueprintExtension_StateMachine
        fun Find(Outer: UObject, ResourceName: String): AnimBlueprintExtension_StateMachine
        fun GetDefaultObject(): AnimBlueprintExtension_StateMachine
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimBlueprintExtension_StateMachine
        fun C(Other: UObject): AnimBlueprintExtension_StateMachine
        fun C(Other: Any): AnimBlueprintExtension_StateMachine
    }
}

external open class AnimSubsystem_Tag : AnimSubsystem {
    open var NodeIndices: Any
    override fun clone(): AnimSubsystem_Tag

    companion object {
        fun C(Other: UObject): AnimSubsystem_Tag
        fun C(Other: Any): AnimSubsystem_Tag
    }
}

external open class AnimBlueprintExtension_Tag : AnimBlueprintExtension {
    constructor()
    constructor(Outer: UObject)
    open var Subsystem: AnimSubsystem_Tag

    companion object {
        fun Load(ResourceName: String): AnimBlueprintExtension_Tag
        fun Find(Outer: UObject, ResourceName: String): AnimBlueprintExtension_Tag
        fun GetDefaultObject(): AnimBlueprintExtension_Tag
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimBlueprintExtension_Tag
        fun C(Other: UObject): AnimBlueprintExtension_Tag
        fun C(Other: Any): AnimBlueprintExtension_Tag
    }
}

external open class AnimBlueprintPostCompileValidation : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimBlueprintPostCompileValidation
        fun Find(Outer: UObject, ResourceName: String): AnimBlueprintPostCompileValidation
        fun GetDefaultObject(): AnimBlueprintPostCompileValidation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimBlueprintPostCompileValidation
        fun C(Other: UObject): AnimBlueprintPostCompileValidation
        fun C(Other: Any): AnimBlueprintPostCompileValidation
    }
}

external object EAnimGraphAttributesDisplayMode {
    var HideOnPins: String /* "HideOnPins" */
    var ShowOnPins: String /* "ShowOnPins" */
    var Automatic: String /* "Automatic" */
    var EAnimGraphAttributesDisplayMode_MAX: String /* "EAnimGraphAttributesDisplayMode_MAX" */
}

external object EAnimGraphAttributeBlend {
    var Blendable: String /* "Blendable" */
    var NonBlendable: String /* "NonBlendable" */
    var EAnimGraphAttributeBlend_MAX: String /* "EAnimGraphAttributeBlend_MAX" */
}

external open class AnimGraphAttributeDesc {
    open var Name: String
    open var Icon: SlateBrush
    open var DisplayName: String
    open var ToolTipText: String
    open var Color: SlateColor
    open var DisplayMode: String /* "HideOnPins" | "ShowOnPins" | "Automatic" | "EAnimGraphAttributesDisplayMode_MAX" */
    open var Blend: String /* "Blendable" | "NonBlendable" | "EAnimGraphAttributeBlend_MAX" */
    open var SortOrder: Number
    open fun clone(): AnimGraphAttributeDesc

    companion object {
        fun C(Other: UObject): AnimGraphAttributeDesc
        fun C(Other: Any): AnimGraphAttributeDesc
    }
}

external open class AnimGraphAttributes : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Attributes: Array<AnimGraphAttributeDesc>

    companion object {
        fun Load(ResourceName: String): AnimGraphAttributes
        fun Find(Outer: UObject, ResourceName: String): AnimGraphAttributes
        fun GetDefaultObject(): AnimGraphAttributes
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphAttributes
        fun C(Other: UObject): AnimGraphAttributes
        fun C(Other: Any): AnimGraphAttributes
    }
}

external open class AnimGraphNodeCustomizationInterface : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun GetTitleColor(): LinearColor

    companion object {
        fun Load(ResourceName: String): AnimGraphNodeCustomizationInterface
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNodeCustomizationInterface
        fun GetDefaultObject(): AnimGraphNodeCustomizationInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNodeCustomizationInterface
        fun C(Other: UObject): AnimGraphNodeCustomizationInterface
        fun C(Other: Any): AnimGraphNodeCustomizationInterface
    }
}

external object EAnimSyncMethod {
    var DoNotSync: String /* "DoNotSync" */
    var SyncGroup: String /* "SyncGroup" */
    var Graph: String /* "Graph" */
    var EAnimSyncMethod_MAX: String /* "EAnimSyncMethod_MAX" */
}

external object EAnimGroupRole {
    var CanBeLeader: String /* "CanBeLeader" */
    var AlwaysFollower: String /* "AlwaysFollower" */
    var AlwaysLeader: String /* "AlwaysLeader" */
    var TransitionLeader: String /* "TransitionLeader" */
    var TransitionFollower: String /* "TransitionFollower" */
    var EAnimGroupRole_MAX: String /* "EAnimGroupRole_MAX" */
}

external open class AnimationGroupReference {
    open var Method: String /* "DoNotSync" | "SyncGroup" | "Graph" | "EAnimSyncMethod_MAX" */
    open var GroupName: String
    open var GroupRole: String /* "CanBeLeader" | "AlwaysFollower" | "AlwaysLeader" | "TransitionLeader" | "TransitionFollower" | "EAnimGroupRole_MAX" */
    open fun clone(): AnimationGroupReference

    companion object {
        fun C(Other: UObject): AnimationGroupReference
        fun C(Other: Any): AnimationGroupReference
    }
}

external open class AnimGraphNode_AssetPlayerBase : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var SyncGroup: AnimationGroupReference

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_AssetPlayerBase
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_AssetPlayerBase
        fun GetDefaultObject(): AnimGraphNode_AssetPlayerBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_AssetPlayerBase
        fun C(Other: UObject): AnimGraphNode_AssetPlayerBase
        fun C(Other: Any): AnimGraphNode_AssetPlayerBase
    }
}

external open class AnimGraphNode_BlendSpaceBase : AnimGraphNode_AssetPlayerBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_BlendSpaceBase
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_BlendSpaceBase
        fun GetDefaultObject(): AnimGraphNode_BlendSpaceBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_BlendSpaceBase
        fun C(Other: UObject): AnimGraphNode_BlendSpaceBase
        fun C(Other: Any): AnimGraphNode_BlendSpaceBase
    }
}

external object EAnimSyncGroupScope {
    var Local: String /* "Local" */
    var Component: String /* "Component" */
    var EAnimSyncGroupScope_MAX: String /* "EAnimSyncGroupScope_MAX" */
}

external open class AnimNode_AssetPlayerBase : AnimNode_Base {
    open var GroupIndex: Number
    open var GroupScope: String /* "Local" | "Component" | "EAnimSyncGroupScope_MAX" */
    open var BlendWeight: Number
    open var InternalTimeAccumulator: Number
    override fun clone(): AnimNode_AssetPlayerBase

    companion object {
        fun C(Other: UObject): AnimNode_AssetPlayerBase
        fun C(Other: Any): AnimNode_AssetPlayerBase
    }
}

external open class AnimNode_BlendSpacePlayer : AnimNode_AssetPlayerBase {
    open var GroupName: String
    open var GroupRole: String /* "CanBeLeader" | "AlwaysFollower" | "AlwaysLeader" | "TransitionLeader" | "TransitionFollower" | "EAnimGroupRole_MAX" */
    open var Method: String /* "DoNotSync" | "SyncGroup" | "Graph" | "EAnimSyncMethod_MAX" */
    open var bIgnoreForRelevancyTest: Boolean
    open var X: Number
    open var Y: Number
    open var PlayRate: Number
    open var bLoop: Boolean
    open var bResetPlayTimeWhenBlendSpaceChanges: Boolean
    open var StartPosition: Number
    open var BlendSpace: BlendSpace
    open var PreviousBlendSpace: BlendSpace
    override fun clone(): AnimNode_BlendSpacePlayer

    companion object {
        fun C(Other: UObject): AnimNode_BlendSpacePlayer
        fun C(Other: Any): AnimNode_BlendSpacePlayer
    }
}

external open class AnimNode_AimOffsetLookAt : AnimNode_BlendSpacePlayer {
    open var BasePose: PoseLink
    open var LODThreshold: Number
    open var SourceSocketName: String
    open var PivotSocketName: String
    open var LookAtLocation: Vector
    open var SocketAxis: Vector
    open var Alpha: Number
    override fun clone(): AnimNode_AimOffsetLookAt

    companion object {
        fun C(Other: UObject): AnimNode_AimOffsetLookAt
        fun C(Other: Any): AnimNode_AimOffsetLookAt
    }
}

external open class AnimGraphNode_AimOffsetLookAt : AnimGraphNode_BlendSpaceBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_AimOffsetLookAt

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_AimOffsetLookAt
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_AimOffsetLookAt
        fun GetDefaultObject(): AnimGraphNode_AimOffsetLookAt
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_AimOffsetLookAt
        fun C(Other: UObject): AnimGraphNode_AimOffsetLookAt
        fun C(Other: Any): AnimGraphNode_AimOffsetLookAt
    }
}

external open class AnimGraphNode_SkeletalControlBase : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_SkeletalControlBase
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_SkeletalControlBase
        fun GetDefaultObject(): AnimGraphNode_SkeletalControlBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_SkeletalControlBase
        fun C(Other: UObject): AnimGraphNode_SkeletalControlBase
        fun C(Other: Any): AnimGraphNode_SkeletalControlBase
    }
}

external open class ComponentSpacePoseLink : PoseLinkBase {
    override fun clone(): ComponentSpacePoseLink

    companion object {
        fun C(Other: UObject): ComponentSpacePoseLink
        fun C(Other: Any): ComponentSpacePoseLink
    }
}

external object EAnimAlphaInputType {
    var Float: String /* "Float" */
    var Bool: String /* "Bool" */
    var Curve: String /* "Curve" */
    var EAnimAlphaInputType_MAX: String /* "EAnimAlphaInputType_MAX" */
}

external open class InputScaleBias {
    open var Scale: Number
    open var Bias: Number
    open fun clone(): InputScaleBias

    companion object {
        fun C(Other: UObject): InputScaleBias
        fun C(Other: Any): InputScaleBias
    }
}

external open class InputAlphaBoolBlend {
    open var BlendInTime: Number
    open var BlendOutTime: Number
    open var BlendOption: String /* "Linear" | "Cubic" | "HermiteCubic" | "Sinusoidal" | "QuadraticInOut" | "CubicInOut" | "QuarticInOut" | "QuinticInOut" | "CircularIn" | "CircularOut" | "CircularInOut" | "ExpIn" | "ExpOut" | "ExpInOut" | "Custom" | "EAlphaBlendOption_MAX" */
    open var bInitialized: Boolean
    open var CustomCurve: CurveFloat
    open var AlphaBlend: AlphaBlend
    open fun clone(): InputAlphaBoolBlend

    companion object {
        fun C(Other: UObject): InputAlphaBoolBlend
        fun C(Other: Any): InputAlphaBoolBlend
    }
}

external open class InputRange {
    open var Min: Number
    open var Max: Number
    open fun clone(): InputRange

    companion object {
        fun C(Other: UObject): InputRange
        fun C(Other: Any): InputRange
    }
}

external open class InputScaleBiasClamp {
    open var bMapRange: Boolean
    open var bClampResult: Boolean
    open var bInterpResult: Boolean
    open var InRange: InputRange
    open var OutRange: InputRange
    open var Scale: Number
    open var Bias: Number
    open var ClampMin: Number
    open var ClampMax: Number
    open var InterpSpeedIncreasing: Number
    open var InterpSpeedDecreasing: Number
    open fun clone(): InputScaleBiasClamp

    companion object {
        fun C(Other: UObject): InputScaleBiasClamp
        fun C(Other: Any): InputScaleBiasClamp
    }
}

external open class AnimNode_SkeletalControlBase : AnimNode_Base {
    open var ComponentPose: ComponentSpacePoseLink
    open var LODThreshold: Number
    open var ActualAlpha: Number
    open var AlphaInputType: String /* "Float" | "Bool" | "Curve" | "EAnimAlphaInputType_MAX" */
    open var bAlphaBoolEnabled: Boolean
    open var Alpha: Number
    open var AlphaScaleBias: InputScaleBias
    open var AlphaBoolBlend: InputAlphaBoolBlend
    open var AlphaCurveName: String
    open var AlphaScaleBiasClamp: InputScaleBiasClamp
    override fun clone(): AnimNode_SkeletalControlBase

    companion object {
        fun C(Other: UObject): AnimNode_SkeletalControlBase
        fun C(Other: Any): AnimNode_SkeletalControlBase
    }
}

external object AnimPhysLinearConstraintType {
    var Free: String /* "Free" */
    var Limited: String /* "Limited" */
    var AnimPhysLinearConstraintType_MAX: String /* "AnimPhysLinearConstraintType_MAX" */
}

external object AnimPhysAngularConstraintType {
    var Angular: String /* "Angular" */
    var Cone: String /* "Cone" */
    var AnimPhysAngularConstraintType_MAX: String /* "AnimPhysAngularConstraintType_MAX" */
}

external object AnimPhysTwistAxis {
    var AxisX: String /* "AxisX" */
    var AxisY: String /* "AxisY" */
    var AxisZ: String /* "AxisZ" */
    var AnimPhysTwistAxis_MAX: String /* "AnimPhysTwistAxis_MAX" */
}

external open class AnimPhysConstraintSetup {
    open var LinearXLimitType: String /* "Free" | "Limited" | "AnimPhysLinearConstraintType_MAX" */
    open var LinearYLimitType: String /* "Free" | "Limited" | "AnimPhysLinearConstraintType_MAX" */
    open var LinearZLimitType: String /* "Free" | "Limited" | "AnimPhysLinearConstraintType_MAX" */
    open var LinearAxesMin: Vector
    open var LinearAxesMax: Vector
    open var AngularConstraintType: String /* "Angular" | "Cone" | "AnimPhysAngularConstraintType_MAX" */
    open var TwistAxis: String /* "AxisX" | "AxisY" | "AxisZ" | "AnimPhysTwistAxis_MAX" */
    open var AngularTargetAxis: String /* "AxisX" | "AxisY" | "AxisZ" | "AnimPhysTwistAxis_MAX" */
    open var ConeAngle: Number
    open var AngularXAngle: Number
    open var AngularYAngle: Number
    open var AngularZAngle: Number
    open var AngularLimitsMin: Vector
    open var AngularLimitsMax: Vector
    open var AngularTarget: Vector
    open fun clone(): AnimPhysConstraintSetup

    companion object {
        fun C(Other: UObject): AnimPhysConstraintSetup
        fun C(Other: Any): AnimPhysConstraintSetup
    }
}

external object ESphericalLimitType {
    var Inner: String /* "Inner" */
    var Outer: String /* "Outer" */
    var ESphericalLimitType_MAX: String /* "ESphericalLimitType_MAX" */
}

external open class AnimPhysSphericalLimit {
    open var DrivingBone: BoneReference
    open var SphereLocalOffset: Vector
    open var LimitRadius: Number
    open var LimitType: String /* "Inner" | "Outer" | "ESphericalLimitType_MAX" */
    open fun clone(): AnimPhysSphericalLimit

    companion object {
        fun C(Other: UObject): AnimPhysSphericalLimit
        fun C(Other: Any): AnimPhysSphericalLimit
    }
}

external open class AnimPhysPlanarLimit {
    open var DrivingBone: BoneReference
    open var PlaneTransform: Transform
    open fun clone(): AnimPhysPlanarLimit

    companion object {
        fun C(Other: UObject): AnimPhysPlanarLimit
        fun C(Other: Any): AnimPhysPlanarLimit
    }
}

external object AnimPhysCollisionType {
    var CoM: String /* "CoM" */
    var CustomSphere: String /* "CustomSphere" */
    var InnerSphere: String /* "InnerSphere" */
    var OuterSphere: String /* "OuterSphere" */
    var AnimPhysCollisionType_MAX: String /* "AnimPhysCollisionType_MAX" */
}

external object AnimPhysSimSpaceType {
    var Component: String /* "Component" */
    var Actor: String /* "Actor" */
    var World: String /* "World" */
    var RootRelative: String /* "RootRelative" */
    var BoneRelative: String /* "BoneRelative" */
    var AnimPhysSimSpaceType_MAX: String /* "AnimPhysSimSpaceType_MAX" */
}

external object ERotationComponent {
    var EulerX: String /* "EulerX" */
    var EulerY: String /* "EulerY" */
    var EulerZ: String /* "EulerZ" */
    var QuaternionAngle: String /* "QuaternionAngle" */
    var SwingAngle: String /* "SwingAngle" */
    var TwistAngle: String /* "TwistAngle" */
    var ERotationComponent_MAX: String /* "ERotationComponent_MAX" */
}

external object EEasingFuncType {
    var Linear: String /* "Linear" */
    var Sinusoidal: String /* "Sinusoidal" */
    var Cubic: String /* "Cubic" */
    var QuadraticInOut: String /* "QuadraticInOut" */
    var CubicInOut: String /* "CubicInOut" */
    var HermiteCubic: String /* "HermiteCubic" */
    var QuarticInOut: String /* "QuarticInOut" */
    var QuinticInOut: String /* "QuinticInOut" */
    var CircularIn: String /* "CircularIn" */
    var CircularOut: String /* "CircularOut" */
    var CircularInOut: String /* "CircularInOut" */
    var ExpIn: String /* "ExpIn" */
    var ExpOut: String /* "ExpOut" */
    var ExpInOut: String /* "ExpInOut" */
    var CustomCurve: String /* "CustomCurve" */
    var EEasingFuncType_MAX: String /* "EEasingFuncType_MAX" */
}

external open class RotationRetargetingInfo {
    open var bEnabled: Boolean
    open var Source: Transform
    open var Target: Transform
    open var RotationComponent: String /* "EulerX" | "EulerY" | "EulerZ" | "QuaternionAngle" | "SwingAngle" | "TwistAngle" | "ERotationComponent_MAX" */
    open var TwistAxis: Vector
    open var bUseAbsoluteAngle: Boolean
    open var SourceMinimum: Number
    open var SourceMaximum: Number
    open var TargetMinimum: Number
    open var TargetMaximum: Number
    open var EasingType: String /* "Linear" | "Sinusoidal" | "Cubic" | "QuadraticInOut" | "CubicInOut" | "HermiteCubic" | "QuarticInOut" | "QuinticInOut" | "CircularIn" | "CircularOut" | "CircularInOut" | "ExpIn" | "ExpOut" | "ExpInOut" | "CustomCurve" | "EEasingFuncType_MAX" */
    open var CustomCurve: RuntimeFloatCurve
    open var bFlipEasing: Boolean
    open var EasingWeight: Number
    open var bClamp: Boolean
    open fun clone(): RotationRetargetingInfo

    companion object {
        fun C(Other: UObject): RotationRetargetingInfo
        fun C(Other: Any): RotationRetargetingInfo
    }
}

external open class AnimNode_AnimDynamics : AnimNode_SkeletalControlBase {
    open var LinearDampingOverride: Number
    open var AngularDampingOverride: Number
    open var RelativeSpaceBone: BoneReference
    open var BoundBone: BoneReference
    open var ChainEnd: BoneReference
    open var BoxExtents: Vector
    open var LocalJointOffset: Vector
    open var GravityScale: Number
    open var GravityOverride: Vector
    open var LinearSpringConstant: Number
    open var AngularSpringConstant: Number
    open var WindScale: Number
    open var ComponentLinearAccScale: Vector
    open var ComponentLinearVelScale: Vector
    open var ComponentAppliedLinearAccClamp: Vector
    open var AngularBiasOverride: Number
    open var NumSolverIterationsPreUpdate: Number
    open var NumSolverIterationsPostUpdate: Number
    open var ConstraintSetup: AnimPhysConstraintSetup
    open var SphericalLimits: Array<AnimPhysSphericalLimit>
    open var SphereCollisionRadius: Number
    open var ExternalForce: Vector
    open var PlanarLimits: Array<AnimPhysPlanarLimit>
    open var CollisionType: String /* "CoM" | "CustomSphere" | "InnerSphere" | "OuterSphere" | "AnimPhysCollisionType_MAX" */
    open var SimulationSpace: String /* "Component" | "Actor" | "World" | "RootRelative" | "BoneRelative" | "AnimPhysSimSpaceType_MAX" */
    open var bUseSphericalLimits: Boolean
    open var bUsePlanarLimit: Boolean
    open var bDoUpdate: Boolean
    open var bDoEval: Boolean
    open var bOverrideLinearDamping: Boolean
    open var bOverrideAngularBias: Boolean
    open var bOverrideAngularDamping: Boolean
    open var bEnableWind: Boolean
    open var bUseGravityOverride: Boolean
    open var bGravityOverrideInSimSpace: Boolean
    open var bLinearSpring: Boolean
    open var bAngularSpring: Boolean
    open var bChain: Boolean
    open var RetargetingSettings: RotationRetargetingInfo
    override fun clone(): AnimNode_AnimDynamics

    companion object {
        fun C(Other: UObject): AnimNode_AnimDynamics
        fun C(Other: Any): AnimNode_AnimDynamics
    }
}

external open class AnimGraphNode_AnimDynamics : AnimGraphNode_SkeletalControlBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_AnimDynamics
    open var bPreviewLive: Boolean
    open var bShowLinearLimits: Boolean
    open var bShowAngularLimits: Boolean
    open var bShowPlanarLimit: Boolean
    open var bShowSphericalLimit: Boolean
    open var bShowCollisionSpheres: Boolean
    open var LastPreviewComponent: SkeletalMeshComponent

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_AnimDynamics
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_AnimDynamics
        fun GetDefaultObject(): AnimGraphNode_AnimDynamics
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_AnimDynamics
        fun C(Other: UObject): AnimGraphNode_AnimDynamics
        fun C(Other: Any): AnimGraphNode_AnimDynamics
    }
}

external open class AnimNode_ApplyAdditive : AnimNode_Base {
    open var Base: PoseLink
    open var Additive: PoseLink
    open var Alpha: Number
    open var AlphaScaleBias: InputScaleBias
    open var LODThreshold: Number
    open var AlphaBoolBlend: InputAlphaBoolBlend
    open var AlphaCurveName: String
    open var AlphaScaleBiasClamp: InputScaleBiasClamp
    open var AlphaInputType: String /* "Float" | "Bool" | "Curve" | "EAnimAlphaInputType_MAX" */
    open var bAlphaBoolEnabled: Boolean
    override fun clone(): AnimNode_ApplyAdditive

    companion object {
        fun C(Other: UObject): AnimNode_ApplyAdditive
        fun C(Other: Any): AnimNode_ApplyAdditive
    }
}

external open class AnimGraphNode_ApplyAdditive : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_ApplyAdditive

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_ApplyAdditive
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_ApplyAdditive
        fun GetDefaultObject(): AnimGraphNode_ApplyAdditive
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_ApplyAdditive
        fun C(Other: UObject): AnimGraphNode_ApplyAdditive
        fun C(Other: Any): AnimGraphNode_ApplyAdditive
    }
}

external open class AngularRangeLimit {
    open var LimitMin: Vector
    open var LimitMax: Vector
    open var bone: BoneReference
    open fun clone(): AngularRangeLimit

    companion object {
        fun C(Other: UObject): AngularRangeLimit
        fun C(Other: Any): AngularRangeLimit
    }
}

external open class AnimNode_ApplyLimits : AnimNode_SkeletalControlBase {
    open var AngularRangeLimits: Array<AngularRangeLimit>
    open var AngularOffsets: Array<Vector>
    override fun clone(): AnimNode_ApplyLimits

    companion object {
        fun C(Other: UObject): AnimNode_ApplyLimits
        fun C(Other: Any): AnimNode_ApplyLimits
    }
}

external open class AnimGraphNode_ApplyLimits : AnimGraphNode_SkeletalControlBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_ApplyLimits

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_ApplyLimits
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_ApplyLimits
        fun GetDefaultObject(): AnimGraphNode_ApplyLimits
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_ApplyLimits
        fun C(Other: UObject): AnimGraphNode_ApplyLimits
        fun C(Other: Any): AnimGraphNode_ApplyLimits
    }
}

external open class AnimNode_ApplyMeshSpaceAdditive : AnimNode_Base {
    open var Base: PoseLink
    open var Additive: PoseLink
    open var AlphaInputType: String /* "Float" | "Bool" | "Curve" | "EAnimAlphaInputType_MAX" */
    open var Alpha: Number
    open var bAlphaBoolEnabled: Boolean
    open var AlphaBoolBlend: InputAlphaBoolBlend
    open var AlphaCurveName: String
    open var AlphaScaleBias: InputScaleBias
    open var AlphaScaleBiasClamp: InputScaleBiasClamp
    open var LODThreshold: Number
    override fun clone(): AnimNode_ApplyMeshSpaceAdditive

    companion object {
        fun C(Other: UObject): AnimNode_ApplyMeshSpaceAdditive
        fun C(Other: Any): AnimNode_ApplyMeshSpaceAdditive
    }
}

external open class AnimGraphNode_ApplyMeshSpaceAdditive : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_ApplyMeshSpaceAdditive

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_ApplyMeshSpaceAdditive
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_ApplyMeshSpaceAdditive
        fun GetDefaultObject(): AnimGraphNode_ApplyMeshSpaceAdditive
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_ApplyMeshSpaceAdditive
        fun C(Other: UObject): AnimGraphNode_ApplyMeshSpaceAdditive
        fun C(Other: Any): AnimGraphNode_ApplyMeshSpaceAdditive
    }
}

external open class BlendBoneByChannelEntry {
    open var SourceBone: BoneReference
    open var TargetBone: BoneReference
    open var bBlendTranslation: Boolean
    open var bBlendRotation: Boolean
    open var bBlendScale: Boolean
    open fun clone(): BlendBoneByChannelEntry

    companion object {
        fun C(Other: UObject): BlendBoneByChannelEntry
        fun C(Other: Any): BlendBoneByChannelEntry
    }
}

external object EBoneControlSpace {
    var BCS_WorldSpace: String /* "BCS_WorldSpace" */
    var BCS_ComponentSpace: String /* "BCS_ComponentSpace" */
    var BCS_ParentBoneSpace: String /* "BCS_ParentBoneSpace" */
    var BCS_BoneSpace: String /* "BCS_BoneSpace" */
    var BCS_MAX: String /* "BCS_MAX" */
}

external open class AnimNode_BlendBoneByChannel : AnimNode_Base {
    open var A: PoseLink
    open var B: PoseLink
    open var BoneDefinitions: Array<BlendBoneByChannelEntry>
    open var Alpha: Number
    open var AlphaScaleBias: InputScaleBias
    open var TransformsSpace: String /* "BCS_WorldSpace" | "BCS_ComponentSpace" | "BCS_ParentBoneSpace" | "BCS_BoneSpace" | "BCS_MAX" */
    override fun clone(): AnimNode_BlendBoneByChannel

    companion object {
        fun C(Other: UObject): AnimNode_BlendBoneByChannel
        fun C(Other: Any): AnimNode_BlendBoneByChannel
    }
}

external open class AnimGraphNode_BlendBoneByChannel : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var BlendNode: AnimNode_BlendBoneByChannel

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_BlendBoneByChannel
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_BlendBoneByChannel
        fun GetDefaultObject(): AnimGraphNode_BlendBoneByChannel
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_BlendBoneByChannel
        fun C(Other: UObject): AnimGraphNode_BlendBoneByChannel
        fun C(Other: Any): AnimGraphNode_BlendBoneByChannel
    }
}

external open class AnimGraphNode_BlendListBase : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_BlendListBase
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_BlendListBase
        fun GetDefaultObject(): AnimGraphNode_BlendListBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_BlendListBase
        fun C(Other: UObject): AnimGraphNode_BlendListBase
        fun C(Other: Any): AnimGraphNode_BlendListBase
    }
}

external object EBlendListTransitionType {
    var StandardBlend: String /* "StandardBlend" */
    var Inertialization: String /* "Inertialization" */
    var EBlendListTransitionType_MAX: String /* "EBlendListTransitionType_MAX" */
}

external open class AnimNode_BlendListBase : AnimNode_Base {
    open var BlendPose: Array<PoseLink>
    open var BlendTime: Array<Number>
    open var TransitionType: String /* "StandardBlend" | "Inertialization" | "EBlendListTransitionType_MAX" */
    open var BlendType: String /* "Linear" | "Cubic" | "HermiteCubic" | "Sinusoidal" | "QuadraticInOut" | "CubicInOut" | "QuarticInOut" | "QuinticInOut" | "CircularIn" | "CircularOut" | "CircularInOut" | "ExpIn" | "ExpOut" | "ExpInOut" | "Custom" | "EAlphaBlendOption_MAX" */
    open var bResetChildOnActivation: Boolean
    open var CustomBlendCurve: CurveFloat
    open var BlendProfile: BlendProfile
    override fun clone(): AnimNode_BlendListBase

    companion object {
        fun C(Other: UObject): AnimNode_BlendListBase
        fun C(Other: Any): AnimNode_BlendListBase
    }
}

external open class AnimNode_BlendListByBool : AnimNode_BlendListBase {
    open var bActiveValue: Boolean
    override fun clone(): AnimNode_BlendListByBool

    companion object {
        fun C(Other: UObject): AnimNode_BlendListByBool
        fun C(Other: Any): AnimNode_BlendListByBool
    }
}

external open class AnimGraphNode_BlendListByBool : AnimGraphNode_BlendListBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_BlendListByBool

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_BlendListByBool
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_BlendListByBool
        fun GetDefaultObject(): AnimGraphNode_BlendListByBool
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_BlendListByBool
        fun C(Other: UObject): AnimGraphNode_BlendListByBool
        fun C(Other: Any): AnimGraphNode_BlendListByBool
    }
}

external open class AnimNode_BlendListByEnum : AnimNode_BlendListBase {
    open var EnumToPoseIndex: Array<Number>
    open var ActiveEnumValue: Number
    override fun clone(): AnimNode_BlendListByEnum

    companion object {
        fun C(Other: UObject): AnimNode_BlendListByEnum
        fun C(Other: Any): AnimNode_BlendListByEnum
    }
}

external open class AnimGraphNode_BlendListByEnum : AnimGraphNode_BlendListBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_BlendListByEnum
    open var BoundEnum: Enum
    open var VisibleEnumEntries: Array<String>

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_BlendListByEnum
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_BlendListByEnum
        fun GetDefaultObject(): AnimGraphNode_BlendListByEnum
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_BlendListByEnum
        fun C(Other: UObject): AnimGraphNode_BlendListByEnum
        fun C(Other: Any): AnimGraphNode_BlendListByEnum
    }
}

external open class AnimNode_BlendListByInt : AnimNode_BlendListBase {
    open var ActiveChildIndex: Number
    override fun clone(): AnimNode_BlendListByInt

    companion object {
        fun C(Other: UObject): AnimNode_BlendListByInt
        fun C(Other: Any): AnimNode_BlendListByInt
    }
}

external open class AnimGraphNode_BlendListByInt : AnimGraphNode_BlendListBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_BlendListByInt

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_BlendListByInt
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_BlendListByInt
        fun GetDefaultObject(): AnimGraphNode_BlendListByInt
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_BlendListByInt
        fun C(Other: UObject): AnimGraphNode_BlendListByInt
        fun C(Other: Any): AnimGraphNode_BlendListByInt
    }
}

external open class AnimNode_BlendSpaceEvaluator : AnimNode_BlendSpacePlayer {
    open var NormalizedTime: Number
    open var bTeleportToNormalizedTime: Boolean
    override fun clone(): AnimNode_BlendSpaceEvaluator

    companion object {
        fun C(Other: UObject): AnimNode_BlendSpaceEvaluator
        fun C(Other: Any): AnimNode_BlendSpaceEvaluator
    }
}

external open class AnimGraphNode_BlendSpaceEvaluator : AnimGraphNode_BlendSpaceBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_BlendSpaceEvaluator

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_BlendSpaceEvaluator
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_BlendSpaceEvaluator
        fun GetDefaultObject(): AnimGraphNode_BlendSpaceEvaluator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_BlendSpaceEvaluator
        fun C(Other: UObject): AnimGraphNode_BlendSpaceEvaluator
        fun C(Other: Any): AnimGraphNode_BlendSpaceEvaluator
    }
}

external open class BlendSpaceGraph : EdGraph {
    constructor()
    constructor(Outer: UObject)
    open var BlendSpace: BlendSpace

    companion object {
        fun Load(ResourceName: String): BlendSpaceGraph
        fun Find(Outer: UObject, ResourceName: String): BlendSpaceGraph
        fun GetDefaultObject(): BlendSpaceGraph
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlendSpaceGraph
        fun C(Other: UObject): BlendSpaceGraph
        fun C(Other: Any): BlendSpaceGraph
    }
}

external open class AnimGraphNode_BlendSpaceGraphBase : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var BlendSpace: BlendSpace
    open var BlendSpaceClass: UnrealEngineClass
    open var BlendSpaceGraph: BlendSpaceGraph
    open var Graphs: Array<EdGraph>

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_BlendSpaceGraphBase
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_BlendSpaceGraphBase
        fun GetDefaultObject(): AnimGraphNode_BlendSpaceGraphBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_BlendSpaceGraphBase
        fun C(Other: UObject): AnimGraphNode_BlendSpaceGraphBase
        fun C(Other: Any): AnimGraphNode_BlendSpaceGraphBase
    }
}

external open class AnimNode_BlendSpaceGraphBase : AnimNode_Base {
    open var X: Number
    open var Y: Number
    open var GroupName: String
    open var GroupRole: String /* "CanBeLeader" | "AlwaysFollower" | "AlwaysLeader" | "TransitionLeader" | "TransitionFollower" | "EAnimGroupRole_MAX" */
    open var BlendSpace: BlendSpace
    open var SamplePoseLinks: Array<PoseLink>
    override fun clone(): AnimNode_BlendSpaceGraphBase

    companion object {
        fun C(Other: UObject): AnimNode_BlendSpaceGraphBase
        fun C(Other: Any): AnimNode_BlendSpaceGraphBase
    }
}

external open class AnimNode_BlendSpaceGraph : AnimNode_BlendSpaceGraphBase {
    override fun clone(): AnimNode_BlendSpaceGraph

    companion object {
        fun C(Other: UObject): AnimNode_BlendSpaceGraph
        fun C(Other: Any): AnimNode_BlendSpaceGraph
    }
}

external open class AnimGraphNode_BlendSpaceGraph : AnimGraphNode_BlendSpaceGraphBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_BlendSpaceGraph

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_BlendSpaceGraph
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_BlendSpaceGraph
        fun GetDefaultObject(): AnimGraphNode_BlendSpaceGraph
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_BlendSpaceGraph
        fun C(Other: UObject): AnimGraphNode_BlendSpaceGraph
        fun C(Other: Any): AnimGraphNode_BlendSpaceGraph
    }
}

external open class AnimGraphNode_BlendSpacePlayer : AnimGraphNode_BlendSpaceBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_BlendSpacePlayer

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_BlendSpacePlayer
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_BlendSpacePlayer
        fun GetDefaultObject(): AnimGraphNode_BlendSpacePlayer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_BlendSpacePlayer
        fun C(Other: UObject): AnimGraphNode_BlendSpacePlayer
        fun C(Other: Any): AnimGraphNode_BlendSpacePlayer
    }
}

external object EComponentType {
    var None: String /* "None" */
    var TranslationX: String /* "TranslationX" */
    var TranslationY: String /* "TranslationY" */
    var TranslationZ: String /* "TranslationZ" */
    var RotationX: String /* "RotationX" */
    var RotationY: String /* "RotationY" */
    var RotationZ: String /* "RotationZ" */
    var Scale: String /* "Scale" */
    var ScaleX: String /* "ScaleX" */
    var ScaleY: String /* "ScaleY" */
    var ScaleZ: String /* "ScaleZ" */
    var EComponentType_MAX: String /* "EComponentType_MAX" */
}

external object EDrivenDestinationMode {
    var Bone: String /* "Bone" */
    var MorphTarget: String /* "MorphTarget" */
    var MaterialParameter: String /* "MaterialParameter" */
    var EDrivenDestinationMode_MAX: String /* "EDrivenDestinationMode_MAX" */
}

external object EDrivenBoneModificationMode {
    var AddToInput: String /* "AddToInput" */
    var ReplaceComponent: String /* "ReplaceComponent" */
    var AddToRefPose: String /* "AddToRefPose" */
    var EDrivenBoneModificationMode_MAX: String /* "EDrivenBoneModificationMode_MAX" */
}

external open class AnimNode_BoneDrivenController : AnimNode_SkeletalControlBase {
    open var SourceBone: BoneReference
    open var DrivingCurve: CurveFloat
    open var Multiplier: Number
    open var RangeMin: Number
    open var RangeMax: Number
    open var RemappedMin: Number
    open var RemappedMax: Number
    open var ParameterName: String
    open var TargetBone: BoneReference
    open var TargetComponent: String /* "None" | "TranslationX" | "TranslationY" | "TranslationZ" | "RotationX" | "RotationY" | "RotationZ" | "Scale" | "ScaleX" | "ScaleY" | "ScaleZ" | "EComponentType_MAX" */
    open var DestinationMode: String /* "Bone" | "MorphTarget" | "MaterialParameter" | "EDrivenDestinationMode_MAX" */
    open var ModificationMode: String /* "AddToInput" | "ReplaceComponent" | "AddToRefPose" | "EDrivenBoneModificationMode_MAX" */
    open var SourceComponent: String /* "None" | "TranslationX" | "TranslationY" | "TranslationZ" | "RotationX" | "RotationY" | "RotationZ" | "Scale" | "ScaleX" | "ScaleY" | "ScaleZ" | "EComponentType_MAX" */
    open var bUseRange: Boolean
    open var bAffectTargetTranslationX: Boolean
    open var bAffectTargetTranslationY: Boolean
    open var bAffectTargetTranslationZ: Boolean
    open var bAffectTargetRotationX: Boolean
    open var bAffectTargetRotationY: Boolean
    open var bAffectTargetRotationZ: Boolean
    open var bAffectTargetScaleX: Boolean
    open var bAffectTargetScaleY: Boolean
    open var bAffectTargetScaleZ: Boolean
    override fun clone(): AnimNode_BoneDrivenController

    companion object {
        fun C(Other: UObject): AnimNode_BoneDrivenController
        fun C(Other: Any): AnimNode_BoneDrivenController
    }
}

external open class AnimGraphNode_BoneDrivenController : AnimGraphNode_SkeletalControlBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_BoneDrivenController

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_BoneDrivenController
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_BoneDrivenController
        fun GetDefaultObject(): AnimGraphNode_BoneDrivenController
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_BoneDrivenController
        fun C(Other: UObject): AnimGraphNode_BoneDrivenController
        fun C(Other: Any): AnimGraphNode_BoneDrivenController
    }
}

external object EAnimFunctionCallSite {
    var OnInitialize: String /* "OnInitialize" */
    var OnUpdate: String /* "OnUpdate" */
    var OnBecomeRelevant: String /* "OnBecomeRelevant" */
    var OnEvaluate: String /* "OnEvaluate" */
    var OnInitializePostRecursion: String /* "OnInitializePostRecursion" */
    var OnUpdatePostRecursion: String /* "OnUpdatePostRecursion" */
    var OnBecomeRelevantPostRecursion: String /* "OnBecomeRelevantPostRecursion" */
    var OnEvaluatePostRecursion: String /* "OnEvaluatePostRecursion" */
    var OnStartedBlendingOut: String /* "OnStartedBlendingOut" */
    var OnStartedBlendingIn: String /* "OnStartedBlendingIn" */
    var OnFinishedBlendingOut: String /* "OnFinishedBlendingOut" */
    var OnFinishedBlendingIn: String /* "OnFinishedBlendingIn" */
    var EAnimFunctionCallSite_MAX: String /* "EAnimFunctionCallSite_MAX" */
}

external open class AnimNode_CallFunction : AnimNode_Base {
    open var Source: PoseLink
    open var UFunction: AnimNodeFunctionRef
    open var CallSite: String /* "OnInitialize" | "OnUpdate" | "OnBecomeRelevant" | "OnEvaluate" | "OnInitializePostRecursion" | "OnUpdatePostRecursion" | "OnBecomeRelevantPostRecursion" | "OnEvaluatePostRecursion" | "OnStartedBlendingOut" | "OnStartedBlendingIn" | "OnFinishedBlendingOut" | "OnFinishedBlendingIn" | "EAnimFunctionCallSite_MAX" */
    override fun clone(): AnimNode_CallFunction

    companion object {
        fun C(Other: UObject): AnimNode_CallFunction
        fun C(Other: Any): AnimNode_CallFunction
    }
}

external open class AnimGraphNode_CallFunction : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var InnerGraph: EdGraph
    open var CallFunctionPrototype: K2Node_CallFunction
    open var UNode: AnimNode_CallFunction

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_CallFunction
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_CallFunction
        fun GetDefaultObject(): AnimGraphNode_CallFunction
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_CallFunction
        fun C(Other: UObject): AnimGraphNode_CallFunction
        fun C(Other: Any): AnimGraphNode_CallFunction
    }
}

external open class SocketReference {
    open var SocketName: String
    open fun clone(): SocketReference

    companion object {
        fun C(Other: UObject): SocketReference
        fun C(Other: Any): SocketReference
    }
}

external open class BoneSocketTarget {
    open var bUseSocket: Boolean
    open var BoneReference: BoneReference
    open var SocketReference: SocketReference
    open fun clone(): BoneSocketTarget

    companion object {
        fun C(Other: UObject): BoneSocketTarget
        fun C(Other: Any): BoneSocketTarget
    }
}

external open class AnimNode_CCDIK : AnimNode_SkeletalControlBase {
    open var EffectorLocation: Vector
    open var EffectorLocationSpace: String /* "BCS_WorldSpace" | "BCS_ComponentSpace" | "BCS_ParentBoneSpace" | "BCS_BoneSpace" | "BCS_MAX" */
    open var EffectorTarget: BoneSocketTarget
    open var TipBone: BoneReference
    open var RootBone: BoneReference
    open var Precision: Number
    open var MaxIterations: Number
    open var bStartFromTail: Boolean
    open var bEnableRotationLimit: Boolean
    open var RotationLimitPerJoints: Array<Number>
    override fun clone(): AnimNode_CCDIK

    companion object {
        fun C(Other: UObject): AnimNode_CCDIK
        fun C(Other: Any): AnimNode_CCDIK
    }
}

external open class AnimGraphNode_CCDIK : AnimGraphNode_SkeletalControlBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_CCDIK

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_CCDIK
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_CCDIK
        fun GetDefaultObject(): AnimGraphNode_CCDIK
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_CCDIK
        fun C(Other: UObject): AnimGraphNode_CCDIK
        fun C(Other: Any): AnimGraphNode_CCDIK
    }
}

external open class AnimNode_ConvertComponentToLocalSpace : AnimNode_Base {
    open var ComponentPose: ComponentSpacePoseLink
    override fun clone(): AnimNode_ConvertComponentToLocalSpace

    companion object {
        fun C(Other: UObject): AnimNode_ConvertComponentToLocalSpace
        fun C(Other: Any): AnimNode_ConvertComponentToLocalSpace
    }
}

external open class AnimGraphNode_ComponentToLocalSpace : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_ConvertComponentToLocalSpace

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_ComponentToLocalSpace
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_ComponentToLocalSpace
        fun GetDefaultObject(): AnimGraphNode_ComponentToLocalSpace
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_ComponentToLocalSpace
        fun C(Other: UObject): AnimGraphNode_ComponentToLocalSpace
        fun C(Other: Any): AnimGraphNode_ComponentToLocalSpace
    }
}

external object EConstraintOffsetOption {
    var None: String /* "None" */
    var Offset_RefPose: String /* "Offset_RefPose" */
    var EConstraintOffsetOption_MAX: String /* "EConstraintOffsetOption_MAX" */
}

external object ETransformConstraintType {
    var Translation: String /* "Translation" */
    var Rotation: String /* "Rotation" */
    var Scale: String /* "Scale" */
    var Parent: String /* "Parent" */
    var ETransformConstraintType_MAX: String /* "ETransformConstraintType_MAX" */
}

external open class FilterOptionPerAxis {
    open var bX: Boolean
    open var bY: Boolean
    open var bZ: Boolean
    open fun clone(): FilterOptionPerAxis

    companion object {
        fun C(Other: UObject): FilterOptionPerAxis
        fun C(Other: Any): FilterOptionPerAxis
    }
}

external open class Constraint {
    open var TargetBone: BoneReference
    open var OffsetOption: String /* "None" | "Offset_RefPose" | "EConstraintOffsetOption_MAX" */
    open var TransformType: String /* "Translation" | "Rotation" | "Scale" | "Parent" | "ETransformConstraintType_MAX" */
    open var PerAxis: FilterOptionPerAxis
    open fun clone(): Constraint

    companion object {
        fun C(Other: UObject): Constraint
        fun C(Other: Any): Constraint
    }
}

external open class AnimNode_Constraint : AnimNode_SkeletalControlBase {
    open var BoneToModify: BoneReference
    open var ConstraintSetup: Array<Constraint>
    open var ConstraintWeights: Array<Number>
    override fun clone(): AnimNode_Constraint

    companion object {
        fun C(Other: UObject): AnimNode_Constraint
        fun C(Other: Any): AnimNode_Constraint
    }
}

external open class AnimGraphNode_Constraint : AnimGraphNode_SkeletalControlBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_Constraint

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_Constraint
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_Constraint
        fun GetDefaultObject(): AnimGraphNode_Constraint
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_Constraint
        fun C(Other: UObject): AnimGraphNode_Constraint
        fun C(Other: Any): AnimGraphNode_Constraint
    }
}

external open class AnimNode_CopyBone : AnimNode_SkeletalControlBase {
    open var SourceBone: BoneReference
    open var TargetBone: BoneReference
    open var bCopyTranslation: Boolean
    open var bCopyRotation: Boolean
    open var bCopyScale: Boolean
    open var ControlSpace: String /* "BCS_WorldSpace" | "BCS_ComponentSpace" | "BCS_ParentBoneSpace" | "BCS_BoneSpace" | "BCS_MAX" */
    override fun clone(): AnimNode_CopyBone

    companion object {
        fun C(Other: UObject): AnimNode_CopyBone
        fun C(Other: Any): AnimNode_CopyBone
    }
}

external open class AnimGraphNode_CopyBone : AnimGraphNode_SkeletalControlBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_CopyBone

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_CopyBone
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_CopyBone
        fun GetDefaultObject(): AnimGraphNode_CopyBone
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_CopyBone
        fun C(Other: UObject): AnimGraphNode_CopyBone
        fun C(Other: Any): AnimGraphNode_CopyBone
    }
}

external object CopyBoneDeltaMode {
    var Accumulate: String /* "Accumulate" */
    var Copy: String /* "Copy" */
    var CopyBoneDeltaMode_MAX: String /* "CopyBoneDeltaMode_MAX" */
}

external open class AnimNode_CopyBoneDelta : AnimNode_SkeletalControlBase {
    open var SourceBone: BoneReference
    open var TargetBone: BoneReference
    open var bCopyTranslation: Boolean
    open var bCopyRotation: Boolean
    open var bCopyScale: Boolean
    open var CopyMode: String /* "Accumulate" | "Copy" | "CopyBoneDeltaMode_MAX" */
    open var TranslationMultiplier: Number
    open var RotationMultiplier: Number
    open var ScaleMultiplier: Number
    override fun clone(): AnimNode_CopyBoneDelta

    companion object {
        fun C(Other: UObject): AnimNode_CopyBoneDelta
        fun C(Other: Any): AnimNode_CopyBoneDelta
    }
}

external open class AnimGraphNode_CopyBoneDelta : AnimGraphNode_SkeletalControlBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_CopyBoneDelta

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_CopyBoneDelta
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_CopyBoneDelta
        fun GetDefaultObject(): AnimGraphNode_CopyBoneDelta
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_CopyBoneDelta
        fun C(Other: UObject): AnimGraphNode_CopyBoneDelta
        fun C(Other: Any): AnimGraphNode_CopyBoneDelta
    }
}

external open class AnimNode_CopyPoseFromMesh : AnimNode_Base {
    open var SourceMeshComponent: Any
    open var bUseAttachedParent: Boolean
    open var bCopyCurves: Boolean
    open var bCopyCustomAttributes: Boolean
    open var bUseMeshPose: Boolean
    open var RootBoneToCopy: String
    override fun clone(): AnimNode_CopyPoseFromMesh

    companion object {
        fun C(Other: UObject): AnimNode_CopyPoseFromMesh
        fun C(Other: Any): AnimNode_CopyPoseFromMesh
    }
}

external open class AnimGraphNode_CopyPoseFromMesh : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_CopyPoseFromMesh

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_CopyPoseFromMesh
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_CopyPoseFromMesh
        fun GetDefaultObject(): AnimGraphNode_CopyPoseFromMesh
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_CopyPoseFromMesh
        fun C(Other: UObject): AnimGraphNode_CopyPoseFromMesh
        fun C(Other: Any): AnimGraphNode_CopyPoseFromMesh
    }
}

external open class AnimNode_CurveSource : AnimNode_Base {
    open var SourcePose: PoseLink
    open var SourceBinding: String
    open var Alpha: Number
    open var CurveSource: Any
    override fun clone(): AnimNode_CurveSource

    companion object {
        fun C(Other: UObject): AnimNode_CurveSource
        fun C(Other: Any): AnimNode_CurveSource
    }
}

external open class AnimGraphNode_CurveSource : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_CurveSource

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_CurveSource
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_CurveSource
        fun GetDefaultObject(): AnimGraphNode_CurveSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_CurveSource
        fun C(Other: UObject): AnimGraphNode_CurveSource
        fun C(Other: Any): AnimGraphNode_CurveSource
    }
}

external open class AnimGraphNode_CustomProperty : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var KnownExposableProperties: Array<String>
    open var ExposedPropertyNames: Array<String>
    open var CustomPinProperties: Array<OptionalPinFromProperty>

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_CustomProperty
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_CustomProperty
        fun GetDefaultObject(): AnimGraphNode_CustomProperty
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_CustomProperty
        fun C(Other: UObject): AnimGraphNode_CustomProperty
        fun C(Other: Any): AnimGraphNode_CustomProperty
    }
}

external object EBoneRotationSource {
    var BRS_KeepComponentSpaceRotation: String /* "BRS_KeepComponentSpaceRotation" */
    var BRS_KeepLocalSpaceRotation: String /* "BRS_KeepLocalSpaceRotation" */
    var BRS_CopyFromTarget: String /* "BRS_CopyFromTarget" */
    var BRS_MAX: String /* "BRS_MAX" */
}

external open class AnimNode_Fabrik : AnimNode_SkeletalControlBase {
    open var EffectorTransform: Transform
    open var EffectorTarget: BoneSocketTarget
    open var TipBone: BoneReference
    open var RootBone: BoneReference
    open var Precision: Number
    open var MaxIterations: Number
    open var EffectorTransformSpace: String /* "BCS_WorldSpace" | "BCS_ComponentSpace" | "BCS_ParentBoneSpace" | "BCS_BoneSpace" | "BCS_MAX" */
    open var EffectorRotationSource: String /* "BRS_KeepComponentSpaceRotation" | "BRS_KeepLocalSpaceRotation" | "BRS_CopyFromTarget" | "BRS_MAX" */
    open var bEnableDebugDraw: Boolean
    open var EffectorTransformBone: BoneReference
    override fun clone(): AnimNode_Fabrik

    companion object {
        fun C(Other: UObject): AnimNode_Fabrik
        fun C(Other: Any): AnimNode_Fabrik
    }
}

external open class AnimGraphNode_Fabrik : AnimGraphNode_SkeletalControlBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_Fabrik

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_Fabrik
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_Fabrik
        fun GetDefaultObject(): AnimGraphNode_Fabrik
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_Fabrik
        fun C(Other: UObject): AnimGraphNode_Fabrik
        fun C(Other: Any): AnimGraphNode_Fabrik
    }
}

external open class AnimNode_HandIKRetargeting : AnimNode_SkeletalControlBase {
    open var RightHandFK: BoneReference
    open var LeftHandFK: BoneReference
    open var RightHandIK: BoneReference
    open var LeftHandIK: BoneReference
    open var IKBonesToMove: Array<BoneReference>
    open var HandFKWeight: Number
    override fun clone(): AnimNode_HandIKRetargeting

    companion object {
        fun C(Other: UObject): AnimNode_HandIKRetargeting
        fun C(Other: Any): AnimNode_HandIKRetargeting
    }
}

external open class AnimGraphNode_HandIKRetargeting : AnimGraphNode_SkeletalControlBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_HandIKRetargeting

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_HandIKRetargeting
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_HandIKRetargeting
        fun GetDefaultObject(): AnimGraphNode_HandIKRetargeting
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_HandIKRetargeting
        fun C(Other: UObject): AnimGraphNode_HandIKRetargeting
        fun C(Other: Any): AnimGraphNode_HandIKRetargeting
    }
}

external object ERefPoseType {
    var EIT_LocalSpace: String /* "EIT_LocalSpace" */
    var EIT_Additive: String /* "EIT_Additive" */
    var EIT_MAX: String /* "EIT_MAX" */
}

external open class AnimNode_RefPose : AnimNode_Base {
    open var RefPoseType: String /* "EIT_LocalSpace" | "EIT_Additive" | "EIT_MAX" */
    override fun clone(): AnimNode_RefPose

    companion object {
        fun C(Other: UObject): AnimNode_RefPose
        fun C(Other: Any): AnimNode_RefPose
    }
}

external open class AnimGraphNode_RefPoseBase : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_RefPose

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_RefPoseBase
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_RefPoseBase
        fun GetDefaultObject(): AnimGraphNode_RefPoseBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_RefPoseBase
        fun C(Other: UObject): AnimGraphNode_RefPoseBase
        fun C(Other: Any): AnimGraphNode_RefPoseBase
    }
}

external open class AnimGraphNode_IdentityPose : AnimGraphNode_RefPoseBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_IdentityPose
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_IdentityPose
        fun GetDefaultObject(): AnimGraphNode_IdentityPose
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_IdentityPose
        fun C(Other: UObject): AnimGraphNode_IdentityPose
        fun C(Other: Any): AnimGraphNode_IdentityPose
    }
}

external open class AnimNode_Inertialization : AnimNode_Base {
    open var Source: PoseLink
    open var FilteredCurves: Array<String>
    override fun clone(): AnimNode_Inertialization

    companion object {
        fun C(Other: UObject): AnimNode_Inertialization
        fun C(Other: Any): AnimNode_Inertialization
    }
}

external open class AnimGraphNode_Inertialization : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_Inertialization

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_Inertialization
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_Inertialization
        fun GetDefaultObject(): AnimGraphNode_Inertialization
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_Inertialization
        fun C(Other: UObject): AnimGraphNode_Inertialization
        fun C(Other: Any): AnimGraphNode_Inertialization
    }
}

external object ELayeredBoneBlendMode {
    var BranchFilter: String /* "BranchFilter" */
    var BlendMask: String /* "BlendMask" */
    var ELayeredBoneBlendMode_MAX: String /* "ELayeredBoneBlendMode_MAX" */
}

external open class BranchFilter {
    open var BoneName: String
    open var BlendDepth: Number
    open fun clone(): BranchFilter

    companion object {
        fun C(Other: UObject): BranchFilter
        fun C(Other: Any): BranchFilter
    }
}

external open class InputBlendPose {
    open var BranchFilters: Array<BranchFilter>
    open fun clone(): InputBlendPose

    companion object {
        fun C(Other: UObject): InputBlendPose
        fun C(Other: Any): InputBlendPose
    }
}

external object ECurveBlendOption {
    var Override: String /* "Override" */
    var DoNotOverride: String /* "DoNotOverride" */
    var NormalizeByWeight: String /* "NormalizeByWeight" */
    var BlendByWeight: String /* "BlendByWeight" */
    var UseBasePose: String /* "UseBasePose" */
    var UseMaxValue: String /* "UseMaxValue" */
    var UseMinValue: String /* "UseMinValue" */
    var ECurveBlendOption_MAX: String /* "ECurveBlendOption_MAX" */
}

external open class PerBoneBlendWeight {
    open var SourceIndex: Number
    open var BlendWeight: Number
    open fun clone(): PerBoneBlendWeight

    companion object {
        fun C(Other: UObject): PerBoneBlendWeight
        fun C(Other: Any): PerBoneBlendWeight
    }
}

external open class AnimNode_LayeredBoneBlend : AnimNode_Base {
    open var BasePose: PoseLink
    open var BlendPoses: Array<PoseLink>
    open var BlendMode: String /* "BranchFilter" | "BlendMask" | "ELayeredBoneBlendMode_MAX" */
    open var BlendMasks: Array<BlendProfile>
    open var LayerSetup: Array<InputBlendPose>
    open var BlendWeights: Array<Number>
    open var bMeshSpaceRotationBlend: Boolean
    open var bMeshSpaceScaleBlend: Boolean
    open var CurveBlendOption: String /* "Override" | "DoNotOverride" | "NormalizeByWeight" | "BlendByWeight" | "UseBasePose" | "UseMaxValue" | "UseMinValue" | "ECurveBlendOption_MAX" */
    open var bBlendRootMotionBasedOnRootBone: Boolean
    open var LODThreshold: Number
    open var PerBoneBlendWeights: Array<PerBoneBlendWeight>
    open var SkeletonGuid: Guid
    open var VirtualBoneGuid: Guid
    override fun clone(): AnimNode_LayeredBoneBlend

    companion object {
        fun C(Other: UObject): AnimNode_LayeredBoneBlend
        fun C(Other: Any): AnimNode_LayeredBoneBlend
    }
}

external open class AnimGraphNode_LayeredBoneBlend : AnimGraphNode_BlendListBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_LayeredBoneBlend

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_LayeredBoneBlend
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_LayeredBoneBlend
        fun GetDefaultObject(): AnimGraphNode_LayeredBoneBlend
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_LayeredBoneBlend
        fun C(Other: UObject): AnimGraphNode_LayeredBoneBlend
        fun C(Other: Any): AnimGraphNode_LayeredBoneBlend
    }
}

external open class AnimLegIKDefinition {
    open var IKFootBone: BoneReference
    open var FKFootBone: BoneReference
    open var NumBonesInLimb: Number
    open var MinRotationAngle: Number
    open var FootBoneForwardAxis: String /* "None" | "X" | "Y" | "Z" | "EAxis_MAX" */
    open var HingeRotationAxis: String /* "None" | "X" | "Y" | "Z" | "EAxis_MAX" */
    open var bEnableRotationLimit: Boolean
    open var bEnableKneeTwistCorrection: Boolean
    open fun clone(): AnimLegIKDefinition

    companion object {
        fun C(Other: UObject): AnimLegIKDefinition
        fun C(Other: Any): AnimLegIKDefinition
    }
}

external open class AnimNode_LegIK : AnimNode_SkeletalControlBase {
    open var ReachPrecision: Number
    open var MaxIterations: Number
    open var LegsDefinition: Array<AnimLegIKDefinition>
    override fun clone(): AnimNode_LegIK

    companion object {
        fun C(Other: UObject): AnimNode_LegIK
        fun C(Other: Any): AnimNode_LegIK
    }
}

external open class AnimGraphNode_LegIK : AnimGraphNode_SkeletalControlBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_LegIK

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_LegIK
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_LegIK
        fun GetDefaultObject(): AnimGraphNode_LegIK
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_LegIK
        fun C(Other: UObject): AnimGraphNode_LegIK
        fun C(Other: Any): AnimGraphNode_LegIK
    }
}

external open class AnimGraphNode_LinkedAnimGraphBase : AnimGraphNode_CustomProperty {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_LinkedAnimGraphBase
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_LinkedAnimGraphBase
        fun GetDefaultObject(): AnimGraphNode_LinkedAnimGraphBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_LinkedAnimGraphBase
        fun C(Other: UObject): AnimGraphNode_LinkedAnimGraphBase
        fun C(Other: Any): AnimGraphNode_LinkedAnimGraphBase
    }
}

external open class AnimNode_CustomProperty : AnimNode_Base {
    open var SourcePropertyNames: Array<String>
    open var DestPropertyNames: Array<String>
    open var TargetInstance: UObject
    override fun clone(): AnimNode_CustomProperty

    companion object {
        fun C(Other: UObject): AnimNode_CustomProperty
        fun C(Other: Any): AnimNode_CustomProperty
    }
}

external open class AnimNode_LinkedAnimGraph : AnimNode_CustomProperty {
    open var InputPoses: Array<PoseLink>
    open var InputPoseNames: Array<String>
    open var InstanceClass: UnrealEngineClass
    open var Tag: String
    open var bReceiveNotifiesFromLinkedInstances: Boolean
    open var bPropagateNotifiesToLinkedInstances: Boolean
    override fun clone(): AnimNode_LinkedAnimGraph

    companion object {
        fun C(Other: UObject): AnimNode_LinkedAnimGraph
        fun C(Other: Any): AnimNode_LinkedAnimGraph
    }
}

external open class AnimGraphNode_LinkedAnimGraph : AnimGraphNode_LinkedAnimGraphBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_LinkedAnimGraph

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_LinkedAnimGraph
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_LinkedAnimGraph
        fun GetDefaultObject(): AnimGraphNode_LinkedAnimGraph
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_LinkedAnimGraph
        fun C(Other: UObject): AnimGraphNode_LinkedAnimGraph
        fun C(Other: Any): AnimGraphNode_LinkedAnimGraph
    }
}

external open class AnimLayerInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimLayerInterface
        fun Find(Outer: UObject, ResourceName: String): AnimLayerInterface
        fun GetDefaultObject(): AnimLayerInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimLayerInterface
        fun C(Other: UObject): AnimLayerInterface
        fun C(Other: Any): AnimLayerInterface
    }
}

external open class AnimNode_LinkedAnimLayer : AnimNode_LinkedAnimGraph {
    open var Interface: UnrealEngineClass
    open var Layer: String
    override fun clone(): AnimNode_LinkedAnimLayer

    companion object {
        fun C(Other: UObject): AnimNode_LinkedAnimLayer
        fun C(Other: Any): AnimNode_LinkedAnimLayer
    }
}

external open class AnimGraphNode_LinkedAnimLayer : AnimGraphNode_LinkedAnimGraphBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_LinkedAnimLayer
    open var InterfaceGuid: Guid

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_LinkedAnimLayer
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_LinkedAnimLayer
        fun GetDefaultObject(): AnimGraphNode_LinkedAnimLayer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_LinkedAnimLayer
        fun C(Other: UObject): AnimGraphNode_LinkedAnimLayer
        fun C(Other: Any): AnimGraphNode_LinkedAnimLayer
    }
}

external open class AnimNode_LinkedInputPose : AnimNode_Base {
    open var Name: String
    open var Graph: String
    open var InputPose: PoseLink
    override fun clone(): AnimNode_LinkedInputPose

    companion object {
        fun C(Other: UObject): AnimNode_LinkedInputPose
        fun C(Other: Any): AnimNode_LinkedInputPose
    }
}

external open class AnimBlueprintFunctionPinInfo {
    open var Name: String
    open var Type: EdGraphPinType
    open fun clone(): AnimBlueprintFunctionPinInfo

    companion object {
        fun C(Other: UObject): AnimBlueprintFunctionPinInfo
        fun C(Other: Any): AnimBlueprintFunctionPinInfo
    }
}

external open class AnimGraphNode_LinkedInputPose : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_LinkedInputPose
    open var Inputs: Array<AnimBlueprintFunctionPinInfo>
    open var FunctionReference: MemberReference
    open var InputPoseIndex: Number

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_LinkedInputPose
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_LinkedInputPose
        fun GetDefaultObject(): AnimGraphNode_LinkedInputPose
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_LinkedInputPose
        fun C(Other: UObject): AnimGraphNode_LinkedInputPose
        fun C(Other: Any): AnimGraphNode_LinkedInputPose
    }
}

external open class AnimGraphNode_LocalRefPose : AnimGraphNode_RefPoseBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_LocalRefPose
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_LocalRefPose
        fun GetDefaultObject(): AnimGraphNode_LocalRefPose
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_LocalRefPose
        fun C(Other: UObject): AnimGraphNode_LocalRefPose
        fun C(Other: Any): AnimGraphNode_LocalRefPose
    }
}

external open class AnimNode_ConvertLocalToComponentSpace : AnimNode_Base {
    open var LocalPose: PoseLink
    override fun clone(): AnimNode_ConvertLocalToComponentSpace

    companion object {
        fun C(Other: UObject): AnimNode_ConvertLocalToComponentSpace
        fun C(Other: Any): AnimNode_ConvertLocalToComponentSpace
    }
}

external open class AnimGraphNode_LocalToComponentSpace : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_ConvertLocalToComponentSpace

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_LocalToComponentSpace
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_LocalToComponentSpace
        fun GetDefaultObject(): AnimGraphNode_LocalToComponentSpace
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_LocalToComponentSpace
        fun C(Other: UObject): AnimGraphNode_LocalToComponentSpace
        fun C(Other: Any): AnimGraphNode_LocalToComponentSpace
    }
}

external open class Axis {
    open var Axis: Vector
    open var bInLocalSpace: Boolean
    open fun clone(): Axis

    companion object {
        fun C(Other: UObject): Axis
        fun C(Other: Any): Axis
    }
}

external object EInterpolationBlend {
    var Linear: String /* "Linear" */
    var Cubic: String /* "Cubic" */
    var Sinusoidal: String /* "Sinusoidal" */
    var EaseInOutExponent2: String /* "EaseInOutExponent2" */
    var EaseInOutExponent3: String /* "EaseInOutExponent3" */
    var EaseInOutExponent4: String /* "EaseInOutExponent4" */
    var EaseInOutExponent5: String /* "EaseInOutExponent5" */
    var MAX: String /* "MAX" */
}

external object EAxisOption {
    var X: String /* "X" */
    var Y: String /* "Y" */
    var Z: String /* "Z" */
    var X_Neg: String /* "X_Neg" */
    var Y_Neg: String /* "Y_Neg" */
    var Z_Neg: String /* "Z_Neg" */
    var Custom: String /* "Custom" */
    var EAxisOption_MAX: String /* "EAxisOption_MAX" */
}

external open class AnimNode_LookAt : AnimNode_SkeletalControlBase {
    open var BoneToModify: BoneReference
    open var LookAtTarget: BoneSocketTarget
    open var LookAtLocation: Vector
    open var LookAt_Axis: Axis
    open var bUseLookUpAxis: Boolean
    open var InterpolationType: String /* "Linear" | "Cubic" | "Sinusoidal" | "EaseInOutExponent2" | "EaseInOutExponent3" | "EaseInOutExponent4" | "EaseInOutExponent5" | "MAX" */
    open var LookUp_Axis: Axis
    open var LookAtClamp: Number
    open var InterpolationTime: Number
    open var InterpolationTriggerThreashold: Number
    open var LookAtBone: BoneReference
    open var LookAtSocket: String
    open var LookAtAxis: String /* "X" | "Y" | "Z" | "X_Neg" | "Y_Neg" | "Z_Neg" | "Custom" | "EAxisOption_MAX" */
    open var CustomLookAtAxis: Vector
    open var LookUpAxis: String /* "X" | "Y" | "Z" | "X_Neg" | "Y_Neg" | "Z_Neg" | "Custom" | "EAxisOption_MAX" */
    open var CustomLookUpAxis: Vector
    override fun clone(): AnimNode_LookAt

    companion object {
        fun C(Other: UObject): AnimNode_LookAt
        fun C(Other: Any): AnimNode_LookAt
    }
}

external open class AnimGraphNode_LookAt : AnimGraphNode_SkeletalControlBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_LookAt

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_LookAt
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_LookAt
        fun GetDefaultObject(): AnimGraphNode_LookAt
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_LookAt
        fun C(Other: UObject): AnimGraphNode_LookAt
        fun C(Other: Any): AnimGraphNode_LookAt
    }
}

external open class AnimNode_MakeDynamicAdditive : AnimNode_Base {
    open var Base: PoseLink
    open var Additive: PoseLink
    open var bMeshSpaceAdditive: Boolean
    override fun clone(): AnimNode_MakeDynamicAdditive

    companion object {
        fun C(Other: UObject): AnimNode_MakeDynamicAdditive
        fun C(Other: Any): AnimNode_MakeDynamicAdditive
    }
}

external open class AnimGraphNode_MakeDynamicAdditive : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_MakeDynamicAdditive

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_MakeDynamicAdditive
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_MakeDynamicAdditive
        fun GetDefaultObject(): AnimGraphNode_MakeDynamicAdditive
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_MakeDynamicAdditive
        fun C(Other: UObject): AnimGraphNode_MakeDynamicAdditive
        fun C(Other: Any): AnimGraphNode_MakeDynamicAdditive
    }
}

external open class AnimNode_MeshSpaceRefPose : AnimNode_Base {
    override fun clone(): AnimNode_MeshSpaceRefPose

    companion object {
        fun C(Other: UObject): AnimNode_MeshSpaceRefPose
        fun C(Other: Any): AnimNode_MeshSpaceRefPose
    }
}

external open class AnimGraphNode_MeshRefPose : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_MeshSpaceRefPose

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_MeshRefPose
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_MeshRefPose
        fun GetDefaultObject(): AnimGraphNode_MeshRefPose
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_MeshRefPose
        fun C(Other: UObject): AnimGraphNode_MeshRefPose
        fun C(Other: Any): AnimGraphNode_MeshRefPose
    }
}

external open class AnimNode_MirrorBase : AnimNode_Base {
    open var Source: PoseLink
    override fun clone(): AnimNode_MirrorBase

    companion object {
        fun C(Other: UObject): AnimNode_MirrorBase
        fun C(Other: Any): AnimNode_MirrorBase
    }
}

external open class AnimNode_Mirror : AnimNode_MirrorBase {
    open var bMirror: Boolean
    open var MirrorDataTable: MirrorDataTable
    open var BlendTime: Number
    open var bResetChild: Boolean
    open var bBoneMirroring: Boolean
    open var bCurveMirroring: Boolean
    open var bAttributeMirroring: Boolean
    override fun clone(): AnimNode_Mirror

    companion object {
        fun C(Other: UObject): AnimNode_Mirror
        fun C(Other: Any): AnimNode_Mirror
    }
}

external open class AnimGraphNode_Mirror : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_Mirror

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_Mirror
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_Mirror
        fun GetDefaultObject(): AnimGraphNode_Mirror
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_Mirror
        fun C(Other: UObject): AnimGraphNode_Mirror
        fun C(Other: Any): AnimGraphNode_Mirror
    }
}

external object EBoneModificationMode {
    var BMM_Ignore: String /* "BMM_Ignore" */
    var BMM_Replace: String /* "BMM_Replace" */
    var BMM_Additive: String /* "BMM_Additive" */
    var BMM_MAX: String /* "BMM_MAX" */
}

external open class AnimNode_ModifyBone : AnimNode_SkeletalControlBase {
    open var BoneToModify: BoneReference
    open var Translation: Vector
    open var Rotation: Rotator
    open var Scale: Vector
    open var TranslationMode: String /* "BMM_Ignore" | "BMM_Replace" | "BMM_Additive" | "BMM_MAX" */
    open var RotationMode: String /* "BMM_Ignore" | "BMM_Replace" | "BMM_Additive" | "BMM_MAX" */
    open var ScaleMode: String /* "BMM_Ignore" | "BMM_Replace" | "BMM_Additive" | "BMM_MAX" */
    open var TranslationSpace: String /* "BCS_WorldSpace" | "BCS_ComponentSpace" | "BCS_ParentBoneSpace" | "BCS_BoneSpace" | "BCS_MAX" */
    open var RotationSpace: String /* "BCS_WorldSpace" | "BCS_ComponentSpace" | "BCS_ParentBoneSpace" | "BCS_BoneSpace" | "BCS_MAX" */
    open var ScaleSpace: String /* "BCS_WorldSpace" | "BCS_ComponentSpace" | "BCS_ParentBoneSpace" | "BCS_BoneSpace" | "BCS_MAX" */
    override fun clone(): AnimNode_ModifyBone

    companion object {
        fun C(Other: UObject): AnimNode_ModifyBone
        fun C(Other: Any): AnimNode_ModifyBone
    }
}

external open class AnimGraphNode_ModifyBone : AnimGraphNode_SkeletalControlBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_ModifyBone

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_ModifyBone
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_ModifyBone
        fun GetDefaultObject(): AnimGraphNode_ModifyBone
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_ModifyBone
        fun C(Other: UObject): AnimGraphNode_ModifyBone
        fun C(Other: Any): AnimGraphNode_ModifyBone
    }
}

external object EModifyCurveApplyMode {
    var Add: String /* "Add" */
    var Scale: String /* "Scale" */
    var Blend: String /* "Blend" */
    var WeightedMovingAverage: String /* "WeightedMovingAverage" */
    var RemapCurve: String /* "RemapCurve" */
    var EModifyCurveApplyMode_MAX: String /* "EModifyCurveApplyMode_MAX" */
}

external open class AnimNode_ModifyCurve : AnimNode_Base {
    open var SourcePose: PoseLink
    open var CurveMap: Any
    open var CurveValues: Array<Number>
    open var CurveNames: Array<String>
    open var Alpha: Number
    open var ApplyMode: String /* "Add" | "Scale" | "Blend" | "WeightedMovingAverage" | "RemapCurve" | "EModifyCurveApplyMode_MAX" */
    override fun clone(): AnimNode_ModifyCurve

    companion object {
        fun C(Other: UObject): AnimNode_ModifyCurve
        fun C(Other: Any): AnimNode_ModifyCurve
    }
}

external open class AnimGraphNode_ModifyCurve : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_ModifyCurve

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_ModifyCurve
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_ModifyCurve
        fun GetDefaultObject(): AnimGraphNode_ModifyCurve
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_ModifyCurve
        fun C(Other: UObject): AnimGraphNode_ModifyCurve
        fun C(Other: Any): AnimGraphNode_ModifyCurve
    }
}

external open class AnimNode_MultiWayBlend : AnimNode_Base {
    open var Poses: Array<PoseLink>
    open var DesiredAlphas: Array<Number>
    open var AlphaScaleBias: InputScaleBias
    open var bAdditiveNode: Boolean
    open var bNormalizeAlpha: Boolean
    override fun clone(): AnimNode_MultiWayBlend

    companion object {
        fun C(Other: UObject): AnimNode_MultiWayBlend
        fun C(Other: Any): AnimNode_MultiWayBlend
    }
}

external open class AnimGraphNode_MultiWayBlend : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_MultiWayBlend

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_MultiWayBlend
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_MultiWayBlend
        fun GetDefaultObject(): AnimGraphNode_MultiWayBlend
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_MultiWayBlend
        fun C(Other: UObject): AnimGraphNode_MultiWayBlend
        fun C(Other: Any): AnimGraphNode_MultiWayBlend
    }
}

external open class AnimNode_ObserveBone : AnimNode_SkeletalControlBase {
    open var BoneToObserve: BoneReference
    open var DisplaySpace: String /* "BCS_WorldSpace" | "BCS_ComponentSpace" | "BCS_ParentBoneSpace" | "BCS_BoneSpace" | "BCS_MAX" */
    open var bRelativeToRefPose: Boolean
    open var Translation: Vector
    open var Rotation: Rotator
    open var Scale: Vector
    override fun clone(): AnimNode_ObserveBone

    companion object {
        fun C(Other: UObject): AnimNode_ObserveBone
        fun C(Other: Any): AnimNode_ObserveBone
    }
}

external open class AnimGraphNode_ObserveBone : AnimGraphNode_SkeletalControlBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_ObserveBone

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_ObserveBone
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_ObserveBone
        fun GetDefaultObject(): AnimGraphNode_ObserveBone
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_ObserveBone
        fun C(Other: UObject): AnimGraphNode_ObserveBone
        fun C(Other: Any): AnimGraphNode_ObserveBone
    }
}

external open class AnimGraphNode_PoseHandler : AnimGraphNode_AssetPlayerBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_PoseHandler
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_PoseHandler
        fun GetDefaultObject(): AnimGraphNode_PoseHandler
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_PoseHandler
        fun C(Other: UObject): AnimGraphNode_PoseHandler
        fun C(Other: Any): AnimGraphNode_PoseHandler
    }
}

external open class AnimNode_PoseHandler : AnimNode_AssetPlayerBase {
    open var PoseAsset: PoseAsset
    override fun clone(): AnimNode_PoseHandler

    companion object {
        fun C(Other: UObject): AnimNode_PoseHandler
        fun C(Other: Any): AnimNode_PoseHandler
    }
}

external open class AnimNode_PoseBlendNode : AnimNode_PoseHandler {
    open var SourcePose: PoseLink
    open var BlendOption: String /* "Linear" | "Cubic" | "HermiteCubic" | "Sinusoidal" | "QuadraticInOut" | "CubicInOut" | "QuarticInOut" | "QuinticInOut" | "CircularIn" | "CircularOut" | "CircularInOut" | "ExpIn" | "ExpOut" | "ExpInOut" | "Custom" | "EAlphaBlendOption_MAX" */
    open var CustomCurve: CurveFloat
    override fun clone(): AnimNode_PoseBlendNode

    companion object {
        fun C(Other: UObject): AnimNode_PoseBlendNode
        fun C(Other: Any): AnimNode_PoseBlendNode
    }
}

external open class AnimGraphNode_PoseBlendNode : AnimGraphNode_PoseHandler {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_PoseBlendNode

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_PoseBlendNode
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_PoseBlendNode
        fun GetDefaultObject(): AnimGraphNode_PoseBlendNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_PoseBlendNode
        fun C(Other: UObject): AnimGraphNode_PoseBlendNode
        fun C(Other: Any): AnimGraphNode_PoseBlendNode
    }
}

external open class AnimNode_PoseByName : AnimNode_PoseHandler {
    open var PoseName: String
    open var PoseWeight: Number
    override fun clone(): AnimNode_PoseByName

    companion object {
        fun C(Other: UObject): AnimNode_PoseByName
        fun C(Other: Any): AnimNode_PoseByName
    }
}

external open class AnimGraphNode_PoseByName : AnimGraphNode_AssetPlayerBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_PoseByName

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_PoseByName
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_PoseByName
        fun GetDefaultObject(): AnimGraphNode_PoseByName
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_PoseByName
        fun C(Other: UObject): AnimGraphNode_PoseByName
        fun C(Other: Any): AnimGraphNode_PoseByName
    }
}

external open class PoseDriverTransform {
    open var TargetTranslation: Vector
    open var TargetRotation: Rotator
    open fun clone(): PoseDriverTransform

    companion object {
        fun C(Other: UObject): PoseDriverTransform
        fun C(Other: Any): PoseDriverTransform
    }
}

external object ERBFDistanceMethod {
    var Euclidean: String /* "Euclidean" */
    var Quaternion: String /* "Quaternion" */
    var SwingAngle: String /* "SwingAngle" */
    var TwistAngle: String /* "TwistAngle" */
    var DefaultMethod: String /* "DefaultMethod" */
    var ERBFDistanceMethod_MAX: String /* "ERBFDistanceMethod_MAX" */
}

external object ERBFFunctionType {
    var Gaussian: String /* "Gaussian" */
    var Exponential: String /* "Exponential" */
    var Linear: String /* "Linear" */
    var Cubic: String /* "Cubic" */
    var Quintic: String /* "Quintic" */
    var DefaultFunction: String /* "DefaultFunction" */
    var ERBFFunctionType_MAX: String /* "ERBFFunctionType_MAX" */
}

external open class PoseDriverTarget {
    open var BoneTransforms: Array<PoseDriverTransform>
    open var TargetRotation: Rotator
    open var TargetScale: Number
    open var DistanceMethod: String /* "Euclidean" | "Quaternion" | "SwingAngle" | "TwistAngle" | "DefaultMethod" | "ERBFDistanceMethod_MAX" */
    open var FunctionType: String /* "Gaussian" | "Exponential" | "Linear" | "Cubic" | "Quintic" | "DefaultFunction" | "ERBFFunctionType_MAX" */
    open var bApplyCustomCurve: Boolean
    open var CustomCurve: RichCurve
    open var DrivenName: String
    open var bIsHidden: Boolean
    open fun clone(): PoseDriverTarget

    companion object {
        fun C(Other: UObject): PoseDriverTarget
        fun C(Other: Any): PoseDriverTarget
    }
}

external object ERBFSolverType {
    var Additive: String /* "Additive" */
    var Interpolative: String /* "Interpolative" */
    var ERBFSolverType_MAX: String /* "ERBFSolverType_MAX" */
}

external object EBoneAxis {
    var BA_X: String /* "BA_X" */
    var BA_Y: String /* "BA_Y" */
    var BA_Z: String /* "BA_Z" */
    var BA_MAX: String /* "BA_MAX" */
}

external object ERBFNormalizeMethod {
    var OnlyNormalizeAboveOne: String /* "OnlyNormalizeAboveOne" */
    var AlwaysNormalize: String /* "AlwaysNormalize" */
    var NormalizeWithinMedian: String /* "NormalizeWithinMedian" */
    var NoNormalization: String /* "NoNormalization" */
    var ERBFNormalizeMethod_MAX: String /* "ERBFNormalizeMethod_MAX" */
}

external open class RBFParams {
    open var TargetDimensions: Number
    open var SolverType: String /* "Additive" | "Interpolative" | "ERBFSolverType_MAX" */
    open var Radius: Number
    open var bAutomaticRadius: Boolean
    open var UFunction: String /* "Gaussian" | "Exponential" | "Linear" | "Cubic" | "Quintic" | "DefaultFunction" | "ERBFFunctionType_MAX" */
    open var DistanceMethod: String /* "Euclidean" | "Quaternion" | "SwingAngle" | "TwistAngle" | "DefaultMethod" | "ERBFDistanceMethod_MAX" */
    open var TwistAxis: String /* "BA_X" | "BA_Y" | "BA_Z" | "BA_MAX" */
    open var WeightThreshold: Number
    open var NormalizeMethod: String /* "OnlyNormalizeAboveOne" | "AlwaysNormalize" | "NormalizeWithinMedian" | "NoNormalization" | "ERBFNormalizeMethod_MAX" */
    open var MedianReference: Vector
    open var MedianMin: Number
    open var MedianMax: Number
    open fun clone(): RBFParams

    companion object {
        fun C(Other: UObject): RBFParams
        fun C(Other: Any): RBFParams
    }
}

external object EPoseDriverType {
    var SwingAndTwist: String /* "SwingAndTwist" */
    var SwingOnly: String /* "SwingOnly" */
    var Translation: String /* "Translation" */
    var EPoseDriverType_MAX: String /* "EPoseDriverType_MAX" */
}

external object EPoseDriverSource {
    var Rotation: String /* "Rotation" */
    var Translation: String /* "Translation" */
    var EPoseDriverSource_MAX: String /* "EPoseDriverSource_MAX" */
}

external object EPoseDriverOutput {
    var DrivePoses: String /* "DrivePoses" */
    var DriveCurves: String /* "DriveCurves" */
    var EPoseDriverOutput_MAX: String /* "EPoseDriverOutput_MAX" */
}

external open class AnimNode_PoseDriver : AnimNode_PoseHandler {
    open var SourcePose: PoseLink
    open var SourceBones: Array<BoneReference>
    open var OnlyDriveBones: Array<BoneReference>
    open var PoseTargets: Array<PoseDriverTarget>
    open var EvalSpaceBone: BoneReference
    open var bEvalFromRefPose: Boolean
    open var RBFParams: RBFParams
    open var SourceBone: BoneReference
    open var TwistAxis: String /* "BA_X" | "BA_Y" | "BA_Z" | "BA_MAX" */
    open var Type: String /* "SwingAndTwist" | "SwingOnly" | "Translation" | "EPoseDriverType_MAX" */
    open var RadialScaling: Number
    open var DriveSource: String /* "Rotation" | "Translation" | "EPoseDriverSource_MAX" */
    open var DriveOutput: String /* "DrivePoses" | "DriveCurves" | "EPoseDriverOutput_MAX" */
    open var bOnlyDriveSelectedBones: Boolean
    open var bSoloDrivenOnly: Boolean
    open var LODThreshold: Number
    override fun clone(): AnimNode_PoseDriver

    companion object {
        fun C(Other: UObject): AnimNode_PoseDriver
        fun C(Other: Any): AnimNode_PoseDriver
    }
}

external interface `T$610` {
    var BoneNames: Array<String>
}

external interface `T$611` {
    var BoneNames: Array<String>
}

external open class AnimGraphNode_PoseDriver : AnimGraphNode_PoseHandler {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_PoseDriver
    open var AxisLength: Number
    open var ConeSubdivision: Number
    open var bDrawDebugCones: Boolean
    open var LastPreviewComponent: SkeletalMeshComponent
    open fun SetSourceBones(BoneNames: Array<String>)
    open fun SetRBFParameters(Parameters: RBFParams)
    open fun SetPoseDriverSource(DriverSource: String /* "Rotation" | "Translation" | "EPoseDriverSource_MAX" */)
    open fun SetPoseDriverOutput(DriverOutput: String /* "DrivePoses" | "DriveCurves" | "EPoseDriverOutput_MAX" */)
    open fun SetOnlyDriveSelectedBones(bOnlyDriveSelectedBones: Boolean)
    open fun SetDrivingBones(BoneNames: Array<String>)
    open fun GetSourceBoneNames(BoneNames: Array<String> = definedExternally): `T$610`
    open fun GetRBFParameters(): RBFParams
    open fun GetPoseDriverSource(): String /* "Rotation" | "Translation" | "EPoseDriverSource_MAX" */
    open fun GetPoseDriverOutput(): String /* "DrivePoses" | "DriveCurves" | "EPoseDriverOutput_MAX" */
    open fun GetOnlyDriveSelectedBones(): Boolean
    open fun GetDrivingBoneNames(BoneNames: Array<String> = definedExternally): `T$611`
    open fun CopyTargetsFromPoseAsset()

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_PoseDriver
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_PoseDriver
        fun GetDefaultObject(): AnimGraphNode_PoseDriver
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_PoseDriver
        fun C(Other: UObject): AnimGraphNode_PoseDriver
        fun C(Other: Any): AnimGraphNode_PoseDriver
    }
}

external object ESnapshotSourceMode {
    var NamedSnapshot: String /* "NamedSnapshot" */
    var SnapshotPin: String /* "SnapshotPin" */
    var ESnapshotSourceMode_MAX: String /* "ESnapshotSourceMode_MAX" */
}

external open class AnimNode_PoseSnapshot : AnimNode_Base {
    open var SnapshotName: String
    open var Snapshot: PoseSnapshot
    open var Mode: String /* "NamedSnapshot" | "SnapshotPin" | "ESnapshotSourceMode_MAX" */
    override fun clone(): AnimNode_PoseSnapshot

    companion object {
        fun C(Other: UObject): AnimNode_PoseSnapshot
        fun C(Other: Any): AnimNode_PoseSnapshot
    }
}

external open class AnimGraphNode_PoseSnapshot : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_PoseSnapshot

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_PoseSnapshot
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_PoseSnapshot
        fun GetDefaultObject(): AnimGraphNode_PoseSnapshot
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_PoseSnapshot
        fun C(Other: UObject): AnimGraphNode_PoseSnapshot
        fun C(Other: Any): AnimGraphNode_PoseSnapshot
    }
}

external open class RandomPlayerSequenceEntry {
    open var Sequence: AnimSequence
    open var ChanceToPlay: Number
    open var MinLoopCount: Number
    open var MaxLoopCount: Number
    open var MinPlayRate: Number
    open var MaxPlayRate: Number
    open var BlendIn: AlphaBlend
    open fun clone(): RandomPlayerSequenceEntry

    companion object {
        fun C(Other: UObject): RandomPlayerSequenceEntry
        fun C(Other: Any): RandomPlayerSequenceEntry
    }
}

external open class AnimNode_RandomPlayer : AnimNode_Base {
    open var Entries: Array<RandomPlayerSequenceEntry>
    open var bShuffleMode: Boolean
    override fun clone(): AnimNode_RandomPlayer

    companion object {
        fun C(Other: UObject): AnimNode_RandomPlayer
        fun C(Other: Any): AnimNode_RandomPlayer
    }
}

external open class AnimGraphNode_RandomPlayer : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_RandomPlayer

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_RandomPlayer
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_RandomPlayer
        fun GetDefaultObject(): AnimGraphNode_RandomPlayer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_RandomPlayer
        fun C(Other: UObject): AnimGraphNode_RandomPlayer
        fun C(Other: Any): AnimGraphNode_RandomPlayer
    }
}

external open class AnimNode_ResetRoot : AnimNode_SkeletalControlBase {
    override fun clone(): AnimNode_ResetRoot

    companion object {
        fun C(Other: UObject): AnimNode_ResetRoot
        fun C(Other: Any): AnimNode_ResetRoot
    }
}

external open class AnimGraphNode_ResetRoot : AnimGraphNode_SkeletalControlBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_ResetRoot

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_ResetRoot
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_ResetRoot
        fun GetDefaultObject(): AnimGraphNode_ResetRoot
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_ResetRoot
        fun C(Other: UObject): AnimGraphNode_ResetRoot
        fun C(Other: Any): AnimGraphNode_ResetRoot
    }
}

external open class SimSpaceSettings {
    open var MasterAlpha: Number
    open var VelocityScaleZ: Number
    open var MaxLinearVelocity: Number
    open var MaxAngularVelocity: Number
    open var MaxLinearAcceleration: Number
    open var MaxAngularAcceleration: Number
    open var ExternalLinearDrag: Number
    open var ExternalLinearDragV: Vector
    open var ExternalLinearVelocity: Vector
    open var ExternalAngularVelocity: Vector
    open fun clone(): SimSpaceSettings

    companion object {
        fun C(Other: UObject): SimSpaceSettings
        fun C(Other: Any): SimSpaceSettings
    }
}

external object ESimulationSpace {
    var ComponentSpace: String /* "ComponentSpace" */
    var WorldSpace: String /* "WorldSpace" */
    var BaseBoneSpace: String /* "BaseBoneSpace" */
    var ESimulationSpace_MAX: String /* "ESimulationSpace_MAX" */
}

external open class AnimNode_RigidBody : AnimNode_SkeletalControlBase {
    open var OverridePhysicsAsset: PhysicsAsset
    open var OverrideWorldGravity: Vector
    open var ExternalForce: Vector
    open var ComponentLinearAccScale: Vector
    open var ComponentLinearVelScale: Vector
    open var ComponentAppliedLinearAccClamp: Vector
    open var SimSpaceSettings: SimSpaceSettings
    open var CachedBoundsScale: Number
    open var BaseBoneRef: BoneReference
    open var OverlapChannel: String /* "ECC_WorldStatic" | "ECC_WorldDynamic" | "ECC_Pawn" | "ECC_Visibility" | "ECC_Camera" | "ECC_PhysicsBody" | "ECC_Vehicle" | "ECC_Destructible" | "ECC_EngineTraceChannel1" | "ECC_EngineTraceChannel2" | "ECC_EngineTraceChannel3" | "ECC_EngineTraceChannel4" | "ECC_EngineTraceChannel5" | "ECC_EngineTraceChannel6" | "ECC_GameTraceChannel1" | "ECC_GameTraceChannel2" | "ECC_GameTraceChannel3" | "ECC_GameTraceChannel4" | "ECC_GameTraceChannel5" | "ECC_GameTraceChannel6" | "ECC_GameTraceChannel7" | "ECC_GameTraceChannel8" | "ECC_GameTraceChannel9" | "ECC_GameTraceChannel10" | "ECC_GameTraceChannel11" | "ECC_GameTraceChannel12" | "ECC_GameTraceChannel13" | "ECC_GameTraceChannel14" | "ECC_GameTraceChannel15" | "ECC_GameTraceChannel16" | "ECC_GameTraceChannel17" | "ECC_GameTraceChannel18" | "ECC_OverlapAll_Deprecated" | "ECC_MAX" */
    open var SimulationSpace: String /* "ComponentSpace" | "WorldSpace" | "BaseBoneSpace" | "ESimulationSpace_MAX" */
    open var bForceDisableCollisionBetweenConstraintBodies: Boolean
    open var bEnableWorldGeometry: Boolean
    open var bOverrideWorldGravity: Boolean
    open var bTransferBoneVelocities: Boolean
    open var bFreezeIncomingPoseOnStart: Boolean
    open var bClampLinearTranslationLimitToRefPose: Boolean
    open var WorldSpaceMinimumScale: Number
    open var EvaluationResetTime: Number
    open var bComponentSpaceSimulation: Boolean
    override fun clone(): AnimNode_RigidBody

    companion object {
        fun C(Other: UObject): AnimNode_RigidBody
        fun C(Other: Any): AnimNode_RigidBody
    }
}

external open class AnimGraphNode_RigidBody : AnimGraphNode_SkeletalControlBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_RigidBody

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_RigidBody
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_RigidBody
        fun GetDefaultObject(): AnimGraphNode_RigidBody
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_RigidBody
        fun C(Other: UObject): AnimGraphNode_RigidBody
        fun C(Other: Any): AnimGraphNode_RigidBody
    }
}

external open class AnimGraphNode_Root : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_Root

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_Root
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_Root
        fun GetDefaultObject(): AnimGraphNode_Root
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_Root
        fun C(Other: UObject): AnimGraphNode_Root
        fun C(Other: Any): AnimGraphNode_Root
    }
}

external open class AnimNode_RotateRootBone : AnimNode_Base {
    open var BasePose: PoseLink
    open var Pitch: Number
    open var Yaw: Number
    open var PitchScaleBiasClamp: InputScaleBiasClamp
    open var YawScaleBiasClamp: InputScaleBiasClamp
    open var MeshToComponent: Rotator
    override fun clone(): AnimNode_RotateRootBone

    companion object {
        fun C(Other: UObject): AnimNode_RotateRootBone
        fun C(Other: Any): AnimNode_RotateRootBone
    }
}

external open class AnimGraphNode_RotateRootBone : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_RotateRootBone

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_RotateRootBone
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_RotateRootBone
        fun GetDefaultObject(): AnimGraphNode_RotateRootBone
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_RotateRootBone
        fun C(Other: UObject): AnimGraphNode_RotateRootBone
        fun C(Other: Any): AnimGraphNode_RotateRootBone
    }
}

external open class AnimNode_RotationMultiplier : AnimNode_SkeletalControlBase {
    open var TargetBone: BoneReference
    open var SourceBone: BoneReference
    open var Multiplier: Number
    open var RotationAxisToRefer: String /* "BA_X" | "BA_Y" | "BA_Z" | "BA_MAX" */
    open var bIsAdditive: Boolean
    override fun clone(): AnimNode_RotationMultiplier

    companion object {
        fun C(Other: UObject): AnimNode_RotationMultiplier
        fun C(Other: Any): AnimNode_RotationMultiplier
    }
}

external open class AnimGraphNode_RotationMultiplier : AnimGraphNode_SkeletalControlBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_RotationMultiplier

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_RotationMultiplier
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_RotationMultiplier
        fun GetDefaultObject(): AnimGraphNode_RotationMultiplier
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_RotationMultiplier
        fun C(Other: UObject): AnimGraphNode_RotationMultiplier
        fun C(Other: Any): AnimGraphNode_RotationMultiplier
    }
}

external open class AnimNode_RotationOffsetBlendSpace : AnimNode_BlendSpacePlayer {
    open var BasePose: PoseLink
    open var LODThreshold: Number
    open var Alpha: Number
    open var AlphaScaleBias: InputScaleBias
    open var AlphaBoolBlend: InputAlphaBoolBlend
    open var AlphaCurveName: String
    open var AlphaScaleBiasClamp: InputScaleBiasClamp
    open var AlphaInputType: String /* "Float" | "Bool" | "Curve" | "EAnimAlphaInputType_MAX" */
    open var bAlphaBoolEnabled: Boolean
    override fun clone(): AnimNode_RotationOffsetBlendSpace

    companion object {
        fun C(Other: UObject): AnimNode_RotationOffsetBlendSpace
        fun C(Other: Any): AnimNode_RotationOffsetBlendSpace
    }
}

external open class AnimGraphNode_RotationOffsetBlendSpace : AnimGraphNode_BlendSpaceBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_RotationOffsetBlendSpace

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_RotationOffsetBlendSpace
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_RotationOffsetBlendSpace
        fun GetDefaultObject(): AnimGraphNode_RotationOffsetBlendSpace
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_RotationOffsetBlendSpace
        fun C(Other: UObject): AnimGraphNode_RotationOffsetBlendSpace
        fun C(Other: Any): AnimGraphNode_RotationOffsetBlendSpace
    }
}

external open class AnimNode_RotationOffsetBlendSpaceGraph : AnimNode_BlendSpaceGraphBase {
    open var BasePose: PoseLink
    open var LODThreshold: Number
    open var Alpha: Number
    open var AlphaScaleBias: InputScaleBias
    open var AlphaBoolBlend: InputAlphaBoolBlend
    open var AlphaCurveName: String
    open var AlphaScaleBiasClamp: InputScaleBiasClamp
    open var AlphaInputType: String /* "Float" | "Bool" | "Curve" | "EAnimAlphaInputType_MAX" */
    open var bAlphaBoolEnabled: Boolean
    override fun clone(): AnimNode_RotationOffsetBlendSpaceGraph

    companion object {
        fun C(Other: UObject): AnimNode_RotationOffsetBlendSpaceGraph
        fun C(Other: Any): AnimNode_RotationOffsetBlendSpaceGraph
    }
}

external open class AnimGraphNode_RotationOffsetBlendSpaceGraph : AnimGraphNode_BlendSpaceGraphBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_RotationOffsetBlendSpaceGraph

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_RotationOffsetBlendSpaceGraph
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_RotationOffsetBlendSpaceGraph
        fun GetDefaultObject(): AnimGraphNode_RotationOffsetBlendSpaceGraph
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_RotationOffsetBlendSpaceGraph
        fun C(Other: UObject): AnimGraphNode_RotationOffsetBlendSpaceGraph
        fun C(Other: Any): AnimGraphNode_RotationOffsetBlendSpaceGraph
    }
}

external open class AnimNode_SaveCachedPose : AnimNode_Base {
    open var Pose: PoseLink
    open var CachePoseName: String
    override fun clone(): AnimNode_SaveCachedPose

    companion object {
        fun C(Other: UObject): AnimNode_SaveCachedPose
        fun C(Other: Any): AnimNode_SaveCachedPose
    }
}

external open class AnimGraphNode_SaveCachedPose : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_SaveCachedPose
    open var CacheName: String

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_SaveCachedPose
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_SaveCachedPose
        fun GetDefaultObject(): AnimGraphNode_SaveCachedPose
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_SaveCachedPose
        fun C(Other: UObject): AnimGraphNode_SaveCachedPose
        fun C(Other: Any): AnimGraphNode_SaveCachedPose
    }
}

external object EScaleChainInitialLength {
    var FixedDefaultLengthValue: String /* "FixedDefaultLengthValue" */
    var Distance: String /* "Distance" */
    var ChainLength: String /* "ChainLength" */
    var EScaleChainInitialLength_MAX: String /* "EScaleChainInitialLength_MAX" */
}

external open class AnimNode_ScaleChainLength : AnimNode_Base {
    open var InputPose: PoseLink
    open var DefaultChainLength: Number
    open var ChainStartBone: BoneReference
    open var ChainEndBone: BoneReference
    open var TargetLocation: Vector
    open var Alpha: Number
    open var AlphaScaleBias: InputScaleBias
    open var ChainInitialLength: String /* "FixedDefaultLengthValue" | "Distance" | "ChainLength" | "EScaleChainInitialLength_MAX" */
    override fun clone(): AnimNode_ScaleChainLength

    companion object {
        fun C(Other: UObject): AnimNode_ScaleChainLength
        fun C(Other: Any): AnimNode_ScaleChainLength
    }
}

external open class AnimGraphNode_ScaleChainLength : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_ScaleChainLength

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_ScaleChainLength
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_ScaleChainLength
        fun GetDefaultObject(): AnimGraphNode_ScaleChainLength
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_ScaleChainLength
        fun C(Other: UObject): AnimGraphNode_ScaleChainLength
        fun C(Other: Any): AnimGraphNode_ScaleChainLength
    }
}

external open class AnimNode_SequenceEvaluatorBase : AnimNode_AssetPlayerBase {
    override fun clone(): AnimNode_SequenceEvaluatorBase

    companion object {
        fun C(Other: UObject): AnimNode_SequenceEvaluatorBase
        fun C(Other: Any): AnimNode_SequenceEvaluatorBase
    }
}

external object ESequenceEvalReinit {
    var NoReset: String /* "NoReset" */
    var StartPosition: String /* "StartPosition" */
    var ExplicitTime: String /* "ExplicitTime" */
    var ESequenceEvalReinit_MAX: String /* "ESequenceEvalReinit_MAX" */
}

external open class AnimNode_SequenceEvaluator : AnimNode_SequenceEvaluatorBase {
    open var GroupName: String
    open var GroupRole: String /* "CanBeLeader" | "AlwaysFollower" | "AlwaysLeader" | "TransitionLeader" | "TransitionFollower" | "EAnimGroupRole_MAX" */
    open var Method: String /* "DoNotSync" | "SyncGroup" | "Graph" | "EAnimSyncMethod_MAX" */
    open var bIgnoreForRelevancyTest: Boolean
    open var Sequence: AnimSequenceBase
    open var ExplicitTime: Number
    open var bShouldLoop: Boolean
    open var bTeleportToExplicitTime: Boolean
    open var ReinitializationBehavior: String /* "NoReset" | "StartPosition" | "ExplicitTime" | "ESequenceEvalReinit_MAX" */
    open var StartPosition: Number
    override fun clone(): AnimNode_SequenceEvaluator

    companion object {
        fun C(Other: UObject): AnimNode_SequenceEvaluator
        fun C(Other: Any): AnimNode_SequenceEvaluator
    }
}

external open class AnimGraphNode_SequenceEvaluator : AnimGraphNode_AssetPlayerBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_SequenceEvaluator

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_SequenceEvaluator
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_SequenceEvaluator
        fun GetDefaultObject(): AnimGraphNode_SequenceEvaluator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_SequenceEvaluator
        fun C(Other: UObject): AnimGraphNode_SequenceEvaluator
        fun C(Other: Any): AnimGraphNode_SequenceEvaluator
    }
}

external open class InputScaleBiasClampState {
    open fun clone(): InputScaleBiasClampState

    companion object {
        fun C(Other: UObject): InputScaleBiasClampState
        fun C(Other: Any): InputScaleBiasClampState
    }
}

external open class AnimNode_SequencePlayerBase : AnimNode_AssetPlayerBase {
    open var PlayRateScaleBiasClampState: InputScaleBiasClampState
    override fun clone(): AnimNode_SequencePlayerBase

    companion object {
        fun C(Other: UObject): AnimNode_SequencePlayerBase
        fun C(Other: Any): AnimNode_SequencePlayerBase
    }
}

external open class InputScaleBiasClampConstants {
    open var bMapRange: Boolean
    open var bClampResult: Boolean
    open var bInterpResult: Boolean
    open var InRange: InputRange
    open var OutRange: InputRange
    open var Scale: Number
    open var Bias: Number
    open var ClampMin: Number
    open var ClampMax: Number
    open var InterpSpeedIncreasing: Number
    open var InterpSpeedDecreasing: Number
    open fun clone(): InputScaleBiasClampConstants

    companion object {
        fun C(Other: UObject): InputScaleBiasClampConstants
        fun C(Other: Any): InputScaleBiasClampConstants
    }
}

external open class AnimNode_SequencePlayer : AnimNode_SequencePlayerBase {
    open var GroupName: String
    open var GroupRole: String /* "CanBeLeader" | "AlwaysFollower" | "AlwaysLeader" | "TransitionLeader" | "TransitionFollower" | "EAnimGroupRole_MAX" */
    open var Method: String /* "DoNotSync" | "SyncGroup" | "Graph" | "EAnimSyncMethod_MAX" */
    open var bIgnoreForRelevancyTest: Boolean
    open var Sequence: AnimSequenceBase
    open var PlayRateBasis: Number
    open var PlayRate: Number
    open var PlayRateScaleBiasClampConstants: InputScaleBiasClampConstants
    open var PlayRateScaleBiasClamp: InputScaleBiasClamp
    open var StartPosition: Number
    open var bLoopAnimation: Boolean
    open var bStartFromMatchingPose: Boolean
    override fun clone(): AnimNode_SequencePlayer

    companion object {
        fun C(Other: UObject): AnimNode_SequencePlayer
        fun C(Other: Any): AnimNode_SequencePlayer
    }
}

external open class AnimGraphNode_SequencePlayer : AnimGraphNode_AssetPlayerBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_SequencePlayer

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_SequencePlayer
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_SequencePlayer
        fun GetDefaultObject(): AnimGraphNode_SequencePlayer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_SequencePlayer
        fun C(Other: UObject): AnimGraphNode_SequencePlayer
        fun C(Other: Any): AnimGraphNode_SequencePlayer
    }
}

external open class AnimNode_Slot : AnimNode_Base {
    open var Source: PoseLink
    open var SlotName: String
    open var bAlwaysUpdateSourcePose: Boolean
    override fun clone(): AnimNode_Slot

    companion object {
        fun C(Other: UObject): AnimNode_Slot
        fun C(Other: Any): AnimNode_Slot
    }
}

external open class AnimGraphNode_Slot : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_Slot

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_Slot
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_Slot
        fun GetDefaultObject(): AnimGraphNode_Slot
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_Slot
        fun C(Other: UObject): AnimGraphNode_Slot
        fun C(Other: Any): AnimGraphNode_Slot
    }
}

external object ESplineBoneAxis {
    var None: String /* "None" */
    var X: String /* "X" */
    var Y: String /* "Y" */
    var Z: String /* "Z" */
    var ESplineBoneAxis_MAX: String /* "ESplineBoneAxis_MAX" */
}

external open class AnimNode_SplineIK : AnimNode_SkeletalControlBase {
    open var StartBone: BoneReference
    open var EndBone: BoneReference
    open var BoneAxis: String /* "None" | "X" | "Y" | "Z" | "ESplineBoneAxis_MAX" */
    open var bAutoCalculateSpline: Boolean
    open var PointCount: Number
    open var ControlPoints: Array<Transform>
    open var Roll: Number
    open var TwistStart: Number
    open var TwistEnd: Number
    open var TwistBlend: AlphaBlend
    open var Stretch: Number
    open var Offset: Number
    override fun clone(): AnimNode_SplineIK

    companion object {
        fun C(Other: UObject): AnimNode_SplineIK
        fun C(Other: Any): AnimNode_SplineIK
    }
}

external open class AnimGraphNode_SplineIK : AnimGraphNode_SkeletalControlBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_SplineIK

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_SplineIK
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_SplineIK
        fun GetDefaultObject(): AnimGraphNode_SplineIK
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_SplineIK
        fun C(Other: UObject): AnimGraphNode_SplineIK
        fun C(Other: Any): AnimGraphNode_SplineIK
    }
}

external open class AnimNode_SpringBone : AnimNode_SkeletalControlBase {
    open var SpringBone: BoneReference
    open var MaxDisplacement: Number
    open var SpringStiffness: Number
    open var SpringDamping: Number
    open var ErrorResetThresh: Number
    open var bNoZSpring: Boolean
    open var bLimitDisplacement: Boolean
    open var bTranslateX: Boolean
    open var bTranslateY: Boolean
    open var bTranslateZ: Boolean
    open var bRotateX: Boolean
    open var bRotateY: Boolean
    open var bRotateZ: Boolean
    override fun clone(): AnimNode_SpringBone

    companion object {
        fun C(Other: UObject): AnimNode_SpringBone
        fun C(Other: Any): AnimNode_SpringBone
    }
}

external open class AnimGraphNode_SpringBone : AnimGraphNode_SkeletalControlBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_SpringBone

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_SpringBone
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_SpringBone
        fun GetDefaultObject(): AnimGraphNode_SpringBone
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_SpringBone
        fun C(Other: UObject): AnimGraphNode_SpringBone
        fun C(Other: Any): AnimGraphNode_SpringBone
    }
}

external open class AnimNode_StateMachine : AnimNode_Base {
    open var StateMachineIndexInClass: Number
    open var MaxTransitionsPerFrame: Number
    open var bSkipFirstUpdateTransition: Boolean
    open var bReinitializeOnBecomingRelevant: Boolean
    open var bCreateNotifyMetaData: Boolean
    open var bAllowConduitEntryStates: Boolean
    override fun clone(): AnimNode_StateMachine

    companion object {
        fun C(Other: UObject): AnimNode_StateMachine
        fun C(Other: Any): AnimNode_StateMachine
    }
}

external open class AnimGraphNode_StateMachine : AnimGraphNode_StateMachineBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_StateMachine

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_StateMachine
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_StateMachine
        fun GetDefaultObject(): AnimGraphNode_StateMachine
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_StateMachine
        fun C(Other: UObject): AnimGraphNode_StateMachine
        fun C(Other: Any): AnimGraphNode_StateMachine
    }
}

external open class AnimNode_Sync : AnimNode_Base {
    open var Source: PoseLink
    open var GroupName: String
    open var GroupRole: String /* "CanBeLeader" | "AlwaysFollower" | "AlwaysLeader" | "TransitionLeader" | "TransitionFollower" | "EAnimGroupRole_MAX" */
    override fun clone(): AnimNode_Sync

    companion object {
        fun C(Other: UObject): AnimNode_Sync
        fun C(Other: Any): AnimNode_Sync
    }
}

external open class AnimGraphNode_Sync : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_Sync

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_Sync
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_Sync
        fun GetDefaultObject(): AnimGraphNode_Sync
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_Sync
        fun C(Other: UObject): AnimGraphNode_Sync
        fun C(Other: Any): AnimGraphNode_Sync
    }
}

external open class RotationLimit {
    open var LimitMin: Vector
    open var LimitMax: Vector
    open fun clone(): RotationLimit

    companion object {
        fun C(Other: UObject): RotationLimit
        fun C(Other: Any): RotationLimit
    }
}

external open class AnimNode_Trail : AnimNode_SkeletalControlBase {
    open var TrailBone: BoneReference
    open var ChainLength: Number
    open var ChainBoneAxis: String /* "None" | "X" | "Y" | "Z" | "EAxis_MAX" */
    open var bInvertChainBoneAxis: Boolean
    open var bLimitStretch: Boolean
    open var bLimitRotation: Boolean
    open var bUsePlanarLimit: Boolean
    open var bActorSpaceFakeVel: Boolean
    open var bReorientParentToChild: Boolean
    open var bEnableDebug: Boolean
    open var bShowBaseMotion: Boolean
    open var bShowTrailLocation: Boolean
    open var bShowLimit: Boolean
    open var DebugLifeTime: Number
    open var TrailRelaxation: Number
    open var MaxDeltaTime: Number
    open var RelaxationSpeedScale: Number
    open var TrailRelaxationSpeed: RuntimeFloatCurve
    open var RelaxationSpeedScaleInputProcessor: InputScaleBiasClamp
    open var RotationLimits: Array<RotationLimit>
    open var RotationOffsets: Array<Vector>
    open var PlanarLimits: Array<AnimPhysPlanarLimit>
    open var StretchLimit: Number
    open var FakeVelocity: Vector
    open var BaseJoint: BoneReference
    open var TrailBoneRotationBlendAlpha: Number
    open var LastBoneRotationAnimAlphaBlend: Number
    override fun clone(): AnimNode_Trail

    companion object {
        fun C(Other: UObject): AnimNode_Trail
        fun C(Other: Any): AnimNode_Trail
    }
}

external open class AnimGraphNode_Trail : AnimGraphNode_SkeletalControlBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_Trail

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_Trail
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_Trail
        fun GetDefaultObject(): AnimGraphNode_Trail
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_Trail
        fun C(Other: UObject): AnimGraphNode_Trail
        fun C(Other: Any): AnimGraphNode_Trail
    }
}

external object EEvaluatorDataSource {
    var EDS_SourcePose: String /* "EDS_SourcePose" */
    var EDS_DestinationPose: String /* "EDS_DestinationPose" */
    var EDS_MAX: String /* "EDS_MAX" */
}

external object EEvaluatorMode {
    var EM_Standard: String /* "EM_Standard" */
    var EM_Freeze: String /* "EM_Freeze" */
    var EM_DelayedFreeze: String /* "EM_DelayedFreeze" */
    var EM_MAX: String /* "EM_MAX" */
}

external open class AnimNode_TransitionPoseEvaluator : AnimNode_Base {
    open var FramesToCachePose: Number
    open var DataSource: String /* "EDS_SourcePose" | "EDS_DestinationPose" | "EDS_MAX" */
    open var EvaluatorMode: String /* "EM_Standard" | "EM_Freeze" | "EM_DelayedFreeze" | "EM_MAX" */
    override fun clone(): AnimNode_TransitionPoseEvaluator

    companion object {
        fun C(Other: UObject): AnimNode_TransitionPoseEvaluator
        fun C(Other: Any): AnimNode_TransitionPoseEvaluator
    }
}

external open class AnimGraphNode_TransitionPoseEvaluator : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_TransitionPoseEvaluator

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_TransitionPoseEvaluator
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_TransitionPoseEvaluator
        fun GetDefaultObject(): AnimGraphNode_TransitionPoseEvaluator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_TransitionPoseEvaluator
        fun C(Other: UObject): AnimGraphNode_TransitionPoseEvaluator
        fun C(Other: Any): AnimGraphNode_TransitionPoseEvaluator
    }
}

external open class ReferenceBoneFrame {
    open var bone: BoneReference
    open var Axis: Axis
    open fun clone(): ReferenceBoneFrame

    companion object {
        fun C(Other: UObject): ReferenceBoneFrame
        fun C(Other: Any): ReferenceBoneFrame
    }
}

external open class AnimCurveParam {
    open var Name: String
    open fun clone(): AnimCurveParam

    companion object {
        fun C(Other: UObject): AnimCurveParam
        fun C(Other: Any): AnimCurveParam
    }
}

external open class AnimNode_TwistCorrectiveNode : AnimNode_SkeletalControlBase {
    open var BaseFrame: ReferenceBoneFrame
    open var TwistFrame: ReferenceBoneFrame
    open var TwistPlaneNormalAxis: Axis
    open var RangeMax: Number
    open var RemappedMin: Number
    open var RemappedMax: Number
    open var Curve: AnimCurveParam
    override fun clone(): AnimNode_TwistCorrectiveNode

    companion object {
        fun C(Other: UObject): AnimNode_TwistCorrectiveNode
        fun C(Other: Any): AnimNode_TwistCorrectiveNode
    }
}

external open class AnimGraphNode_TwistCorrectiveNode : AnimGraphNode_SkeletalControlBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_TwistCorrectiveNode

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_TwistCorrectiveNode
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_TwistCorrectiveNode
        fun GetDefaultObject(): AnimGraphNode_TwistCorrectiveNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_TwistCorrectiveNode
        fun C(Other: UObject): AnimGraphNode_TwistCorrectiveNode
        fun C(Other: Any): AnimGraphNode_TwistCorrectiveNode
    }
}

external open class AnimNode_TwoBoneIK : AnimNode_SkeletalControlBase {
    open var IKBone: BoneReference
    open var StartStretchRatio: Number
    open var MaxStretchScale: Number
    open var StretchLimits: Vector2D
    open var bNoTwist: Boolean
    open var JointTargetSpaceBoneName: String
    open var EffectorSpaceBoneName: String
    open var EffectorLocation: Vector
    open var EffectorTarget: BoneSocketTarget
    open var JointTargetLocation: Vector
    open var JointTarget: BoneSocketTarget
    open var TwistAxis: Axis
    open var EffectorLocationSpace: String /* "BCS_WorldSpace" | "BCS_ComponentSpace" | "BCS_ParentBoneSpace" | "BCS_BoneSpace" | "BCS_MAX" */
    open var JointTargetLocationSpace: String /* "BCS_WorldSpace" | "BCS_ComponentSpace" | "BCS_ParentBoneSpace" | "BCS_BoneSpace" | "BCS_MAX" */
    open var bAllowStretching: Boolean
    open var bTakeRotationFromEffectorSpace: Boolean
    open var bMaintainEffectorRelRot: Boolean
    open var bAllowTwist: Boolean
    override fun clone(): AnimNode_TwoBoneIK

    companion object {
        fun C(Other: UObject): AnimNode_TwoBoneIK
        fun C(Other: Any): AnimNode_TwoBoneIK
    }
}

external open class AnimGraphNode_TwoBoneIK : AnimGraphNode_SkeletalControlBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_TwoBoneIK
    open var bEnableDebugDraw: Boolean

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_TwoBoneIK
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_TwoBoneIK
        fun GetDefaultObject(): AnimGraphNode_TwoBoneIK
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_TwoBoneIK
        fun C(Other: UObject): AnimGraphNode_TwoBoneIK
        fun C(Other: Any): AnimGraphNode_TwoBoneIK
    }
}

external open class AnimNode_TwoWayBlend : AnimNode_Base {
    open var A: PoseLink
    open var B: PoseLink
    open var AlphaInputType: String /* "Float" | "Bool" | "Curve" | "EAnimAlphaInputType_MAX" */
    open var bAlphaBoolEnabled: Boolean
    open var bResetChildOnActivation: Boolean
    open var Alpha: Number
    open var AlphaScaleBias: InputScaleBias
    open var AlphaBoolBlend: InputAlphaBoolBlend
    open var AlphaCurveName: String
    open var AlphaScaleBiasClamp: InputScaleBiasClamp
    override fun clone(): AnimNode_TwoWayBlend

    companion object {
        fun C(Other: UObject): AnimNode_TwoWayBlend
        fun C(Other: Any): AnimNode_TwoWayBlend
    }
}

external open class AnimGraphNode_TwoWayBlend : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var BlendNode: AnimNode_TwoWayBlend

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_TwoWayBlend
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_TwoWayBlend
        fun GetDefaultObject(): AnimGraphNode_TwoWayBlend
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_TwoWayBlend
        fun C(Other: UObject): AnimGraphNode_TwoWayBlend
        fun C(Other: Any): AnimGraphNode_TwoWayBlend
    }
}

external open class AnimNode_UseCachedPose : AnimNode_Base {
    open var LinkToCachingNode: PoseLink
    open var CachePoseName: String
    override fun clone(): AnimNode_UseCachedPose

    companion object {
        fun C(Other: UObject): AnimNode_UseCachedPose
        fun C(Other: Any): AnimNode_UseCachedPose
    }
}

external open class AnimGraphNode_UseCachedPose : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_UseCachedPose
    open var SaveCachedPoseNode: Any
    open var NameOfCache: String

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_UseCachedPose
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_UseCachedPose
        fun GetDefaultObject(): AnimGraphNode_UseCachedPose
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_UseCachedPose
        fun C(Other: UObject): AnimGraphNode_UseCachedPose
        fun C(Other: Any): AnimGraphNode_UseCachedPose
    }
}

external open class AnimPreviewAttacheInstance : AnimInstance {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimPreviewAttacheInstance
        fun Find(Outer: UObject, ResourceName: String): AnimPreviewAttacheInstance
        fun GetDefaultObject(): AnimPreviewAttacheInstance
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimPreviewAttacheInstance
        fun C(Other: UObject): AnimPreviewAttacheInstance
        fun C(Other: Any): AnimPreviewAttacheInstance
    }
}

external open class AnimSingleNodeInstance : AnimInstance {
    constructor()
    constructor(Outer: UObject)
    open var CurrentAsset: AnimationAsset
    open var PostEvaluateAnimEvent: UnrealEngineDelegate<() -> Unit>
    open fun StopAnim()
    open fun SetReverse(bInReverse: Boolean)
    open fun SetPreviewCurveOverride(PoseName: String, Value: Number, bRemoveIfZero: Boolean)
    open fun SetPositionWithPreviousTime(InPosition: Number, InPreviousTime: Number, bFireNotifies: Boolean)
    open fun SetPosition(InPosition: Number, bFireNotifies: Boolean)
    open fun SetPlayRate(InPlayRate: Number)
    open fun SetPlaying(bIsPlaying: Boolean)
    open fun SetMirrorDataTable(MirrorDataTable: MirrorDataTable)
    open fun SetLooping(bIsLooping: Boolean)
    open fun SetBlendSpacePosition(InPosition: Vector)
    open fun SetAnimationAsset(NewAsset: AnimationAsset, bIsLooping: Boolean, InPlayRate: Number)
    open fun PlayAnim(bIsLooping: Boolean, InPlayRate: Number, InStartPosition: Number)
    open fun GetMirrorDataTable(): MirrorDataTable
    open fun GetLength(): Number
    open fun GetAnimationAsset(): AnimationAsset

    companion object {
        fun Load(ResourceName: String): AnimSingleNodeInstance
        fun Find(Outer: UObject, ResourceName: String): AnimSingleNodeInstance
        fun GetDefaultObject(): AnimSingleNodeInstance
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimSingleNodeInstance
        fun C(Other: UObject): AnimSingleNodeInstance
        fun C(Other: Any): AnimSingleNodeInstance
    }
}

external object EMontagePreviewType {
    var EMPT_Normal: String /* "EMPT_Normal" */
    var EMPT_AllSections: String /* "EMPT_AllSections" */
    var EMPT_MAX: String /* "EMPT_MAX" */
}

external open class AnimPreviewInstance : AnimSingleNodeInstance {
    constructor()
    constructor(Outer: UObject)
    open var MontagePreviewType: String /* "EMPT_Normal" | "EMPT_AllSections" | "EMPT_MAX" */
    open var MontagePreviewStartSectionIdx: Number

    companion object {
        fun Load(ResourceName: String): AnimPreviewInstance
        fun Find(Outer: UObject, ResourceName: String): AnimPreviewInstance
        fun GetDefaultObject(): AnimPreviewInstance
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimPreviewInstance
        fun C(Other: UObject): AnimPreviewInstance
        fun C(Other: Any): AnimPreviewInstance
    }
}

external open class AnimStateNodeBase : EdGraphNode {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimStateNodeBase
        fun Find(Outer: UObject, ResourceName: String): AnimStateNodeBase
        fun GetDefaultObject(): AnimStateNodeBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimStateNodeBase
        fun C(Other: UObject): AnimStateNodeBase
        fun C(Other: Any): AnimStateNodeBase
    }
}

external open class AnimStateAliasNode : AnimStateNodeBase {
    constructor()
    constructor(Outer: UObject)
    open var bGlobalAlias: Boolean
    open var StateAliasName: String
    open var AliasedStateNodes: Any

    companion object {
        fun Load(ResourceName: String): AnimStateAliasNode
        fun Find(Outer: UObject, ResourceName: String): AnimStateAliasNode
        fun GetDefaultObject(): AnimStateAliasNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimStateAliasNode
        fun C(Other: UObject): AnimStateAliasNode
        fun C(Other: Any): AnimStateAliasNode
    }
}

external open class AnimStateConduitNode : AnimStateNodeBase {
    constructor()
    constructor(Outer: UObject)
    open var BoundGraph: EdGraph

    companion object {
        fun Load(ResourceName: String): AnimStateConduitNode
        fun Find(Outer: UObject, ResourceName: String): AnimStateConduitNode
        fun GetDefaultObject(): AnimStateConduitNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimStateConduitNode
        fun C(Other: UObject): AnimStateConduitNode
        fun C(Other: Any): AnimStateConduitNode
    }
}

external object EAnimStateType {
    var AST_SingleAnimation: String /* "AST_SingleAnimation" */
    var AST_BlendGraph: String /* "AST_BlendGraph" */
    var AST_MAX: String /* "AST_MAX" */
}

external open class AnimStateNode : AnimStateNodeBase {
    constructor()
    constructor(Outer: UObject)
    open var BoundGraph: EdGraph
    open var StateType: String /* "AST_SingleAnimation" | "AST_BlendGraph" | "AST_MAX" */
    open var StateEntered: AnimNotifyEvent
    open var StateLeft: AnimNotifyEvent
    open var StateFullyBlended: AnimNotifyEvent
    open var bAlwaysResetOnEntry: Boolean

    companion object {
        fun Load(ResourceName: String): AnimStateNode
        fun Find(Outer: UObject, ResourceName: String): AnimStateNode
        fun GetDefaultObject(): AnimStateNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimStateNode
        fun C(Other: UObject): AnimStateNode
        fun C(Other: Any): AnimStateNode
    }
}

external object ETransitionBlendMode {
    var TBM_Linear: String /* "TBM_Linear" */
    var TBM_Cubic: String /* "TBM_Cubic" */
    var TBM_MAX: String /* "TBM_MAX" */
}

external object ETransitionLogicType {
    var TLT_StandardBlend: String /* "TLT_StandardBlend" */
    var TLT_Inertialization: String /* "TLT_Inertialization" */
    var TLT_Custom: String /* "TLT_Custom" */
    var TLT_MAX: String /* "TLT_MAX" */
}

external open class AnimStateTransitionNode : AnimStateNodeBase {
    constructor()
    constructor(Outer: UObject)
    open var BoundGraph: EdGraph
    open var CustomTransitionGraph: EdGraph
    open var PriorityOrder: Number
    open var CrossfadeDuration: Number
    open var CrossfadeMode: String /* "TBM_Linear" | "TBM_Cubic" | "TBM_MAX" */
    open var BlendMode: String /* "Linear" | "Cubic" | "HermiteCubic" | "Sinusoidal" | "QuadraticInOut" | "CubicInOut" | "QuarticInOut" | "QuinticInOut" | "CircularIn" | "CircularOut" | "CircularInOut" | "ExpIn" | "ExpOut" | "ExpInOut" | "Custom" | "EAlphaBlendOption_MAX" */
    open var CustomBlendCurve: CurveFloat
    open var BlendProfile: BlendProfile
    open var bAutomaticRuleBasedOnSequencePlayerInState: Boolean
    open var SyncGroupNameToRequireValidMarkersRule: String
    open var LogicType: String /* "TLT_StandardBlend" | "TLT_Inertialization" | "TLT_Custom" | "TLT_MAX" */
    open var TransitionStart: AnimNotifyEvent
    open var TransitionEnd: AnimNotifyEvent
    open var TransitionInterrupt: AnimNotifyEvent
    open var Bidirectional: Boolean
    open var bSharedRules: Boolean
    open var bSharedCrossfade: Boolean
    open var SharedRulesName: String
    open var SharedRulesGuid: Guid
    open var SharedColor: LinearColor
    open var SharedCrossfadeName: String
    open var SharedCrossfadeGuid: Guid
    open var SharedCrossfadeIdx: Number

    companion object {
        fun Load(ResourceName: String): AnimStateTransitionNode
        fun Find(Outer: UObject, ResourceName: String): AnimStateTransitionNode
        fun GetDefaultObject(): AnimStateTransitionNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimStateTransitionNode
        fun C(Other: UObject): AnimStateTransitionNode
        fun C(Other: Any): AnimStateTransitionNode
    }
}

external open class ClassVariableCreator : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ClassVariableCreator
        fun Find(Outer: UObject, ResourceName: String): ClassVariableCreator
        fun GetDefaultObject(): ClassVariableCreator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClassVariableCreator
        fun C(Other: UObject): ClassVariableCreator
        fun C(Other: Any): ClassVariableCreator
    }
}

external open class K2Node_AnimGetter : K2Node_CallFunction {
    constructor()
    constructor(Outer: UObject)
    open var SourceNode: AnimGraphNode_Base
    open var SourceStateNode: AnimStateNodeBase
    open var GetterClass: UnrealEngineClass
    open var SourceAnimBlueprint: AnimBlueprint
    open var CachedTitle: String
    open var Contexts: Array<String>

    companion object {
        fun Load(ResourceName: String): K2Node_AnimGetter
        fun Find(Outer: UObject, ResourceName: String): K2Node_AnimGetter
        fun GetDefaultObject(): K2Node_AnimGetter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_AnimGetter
        fun C(Other: UObject): K2Node_AnimGetter
        fun C(Other: Any): K2Node_AnimGetter
    }
}

external open class K2Node_AnimNodeReference : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var Tag: String

    companion object {
        fun Load(ResourceName: String): K2Node_AnimNodeReference
        fun Find(Outer: UObject, ResourceName: String): K2Node_AnimNodeReference
        fun GetDefaultObject(): K2Node_AnimNodeReference
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_AnimNodeReference
        fun C(Other: UObject): K2Node_AnimNodeReference
        fun C(Other: Any): K2Node_AnimNodeReference
    }
}

external open class K2Node_PlayMontage : K2Node_BaseAsyncTask {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_PlayMontage
        fun Find(Outer: UObject, ResourceName: String): K2Node_PlayMontage
        fun GetDefaultObject(): K2Node_PlayMontage
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_PlayMontage
        fun C(Other: UObject): K2Node_PlayMontage
        fun C(Other: Any): K2Node_PlayMontage
    }
}

external object ETransitionGetter {
    var AnimationAsset_GetCurrentTime: String /* "AnimationAsset_GetCurrentTime" */
    var AnimationAsset_GetLength: String /* "AnimationAsset_GetLength" */
    var AnimationAsset_GetCurrentTimeFraction: String /* "AnimationAsset_GetCurrentTimeFraction" */
    var AnimationAsset_GetTimeFromEnd: String /* "AnimationAsset_GetTimeFromEnd" */
    var AnimationAsset_GetTimeFromEndFraction: String /* "AnimationAsset_GetTimeFromEndFraction" */
    var CurrentState_ElapsedTime: String /* "CurrentState_ElapsedTime" */
    var CurrentState_GetBlendWeight: String /* "CurrentState_GetBlendWeight" */
    var CurrentTransitionDuration: String /* "CurrentTransitionDuration" */
    var ArbitraryState_GetBlendWeight: String /* "ArbitraryState_GetBlendWeight" */
    var ETransitionGetter_MAX: String /* "ETransitionGetter_MAX" */
}

external open class K2Node_TransitionRuleGetter : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var GetterType: String /* "AnimationAsset_GetCurrentTime" | "AnimationAsset_GetLength" | "AnimationAsset_GetCurrentTimeFraction" | "AnimationAsset_GetTimeFromEnd" | "AnimationAsset_GetTimeFromEndFraction" | "CurrentState_ElapsedTime" | "CurrentState_GetBlendWeight" | "CurrentTransitionDuration" | "ArbitraryState_GetBlendWeight" | "ETransitionGetter_MAX" */
    open var AssociatedAnimAssetPlayerNode: AnimGraphNode_Base
    open var AssociatedStateNode: AnimStateNode

    companion object {
        fun Load(ResourceName: String): K2Node_TransitionRuleGetter
        fun Find(Outer: UObject, ResourceName: String): K2Node_TransitionRuleGetter
        fun GetDefaultObject(): K2Node_TransitionRuleGetter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_TransitionRuleGetter
        fun C(Other: UObject): K2Node_TransitionRuleGetter
        fun C(Other: Any): K2Node_TransitionRuleGetter
    }
}

external interface `T$612` {
    var Times: Array<Number>
    var Values: Array<Vector>
}

external interface `T$613` {
    var MarkerNames: Array<String>
}

external interface `T$614` {
    var Times: Array<Number>
    var Values: Array<Transform>
}

external interface `T$615` {
    var ScaleData: Array<Vector>
}

external interface `T$616` {
    var RotationData: Array<Quat>
}

external interface `T$617` {
    var PositionData: Array<Vector>
}

external interface `T$618` {
    var PositionKeys: Array<Vector>
    var RotationKeys: Array<Quat>
    var ScalingKeys: Array<Vector>
}

external interface `T$619` {
    var GraphNodes: Array<AnimGraphNode_Base>
}

external interface `T$620` {
    var MetaDataOfClass: Array<AnimMetaData>
}

external interface `T$621` {
    var MetaData: Array<AnimMetaData>
}

external interface `T$622` {
    var Times: Array<Number>
    var Values: Array<Number>
}

external interface `T$623` {
    var Poses: Array<Transform>
}

external interface `T$624` {
    var Poses: Array<Transform>
}

external interface `T$625` {
    var TrackNames: Array<String>
}

external interface `T$626` {
    var Markers: Array<AnimSyncMarker>
}

external interface `T$627` {
    var Markers: Array<AnimSyncMarker>
}

external interface `T$628` {
    var TrackNames: Array<String>
}

external interface `T$629` {
    var Events: Array<AnimNotifyEvent>
}

external interface `T$630` {
    var NotifyEvents: Array<AnimNotifyEvent>
}

external interface `T$631` {
    var EventNames: Array<String>
}

external interface `T$632` {
    var AnimationGraphs: Array<AnimationGraph>
}

external interface `T$633` {
    var CurveNames: Array<String>
}

external interface `T$634` {
    var BonePath: Array<String>
}

external open class AnimationBlueprintLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimationBlueprintLibrary
        fun Find(Outer: UObject, ResourceName: String): AnimationBlueprintLibrary
        fun GetDefaultObject(): AnimationBlueprintLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationBlueprintLibrary
        fun SetRootMotionLockType(AnimationSequence: AnimSequence, RootMotionLockType: String /* "RefPose" | "AnimFirstFrame" | "Zero" | "ERootMotionRootLock_MAX" */)
        fun SetRootMotionEnabled(AnimationSequence: AnimSequence, bEnabled: Boolean)
        fun SetRateScale(AnimationSequenceBase: AnimSequenceBase, RateScale: Number)
        fun SetIsRootMotionLockForced(AnimationSequence: AnimSequence, bForced: Boolean)
        fun SetCurveCompressionSettings(AnimationSequence: AnimSequence, CompressionSettings: AnimCurveCompressionSettings)
        fun SetBoneCompressionSettings(AnimationSequence: AnimSequence, CompressionSettings: AnimBoneCompressionSettings)
        fun SetAnimationInterpolationType(AnimationSequence: AnimSequence, InterpolationType: String /* "Linear" | "Step" | "EAnimInterpolationType_MAX" */)
        fun SetAdditiveBasePoseType(AnimationSequence: AnimSequence, AdditiveBasePoseType: String /* "ABPT_None" | "ABPT_RefPose" | "ABPT_AnimScaled" | "ABPT_AnimFrame" | "ABPT_LocalAnimFrame" | "ABPT_MAX" */)
        fun SetAdditiveAnimationType(AnimationSequence: AnimSequence, AdditiveAnimationType: String /* "AAT_None" | "AAT_LocalSpaceBase" | "AAT_RotationOffsetMeshSpace" | "AAT_MAX" */)
        fun RemoveVirtualBones(AnimationSequence: AnimSequence, VirtualBoneNames: Array<String>)
        fun RemoveVirtualBone(AnimationSequence: AnimSequence, VirtualBoneName: String)
        fun RemoveMetaDataOfClass(AnimationAsset: AnimationAsset, MetaDataClass: UnrealEngineClass)
        fun RemoveMetaData(AnimationAsset: AnimationAsset, MetaDataObject: AnimMetaData)
        fun RemoveCurve(AnimationSequence: AnimSequence, CurveName: String, bRemoveNameFromSkeleton: Boolean)
        fun RemoveBoneAnimation(AnimationSequence: AnimSequence, BoneName: String, bIncludeChildren: Boolean, bFinalize: Boolean)
        fun RemoveAnimationSyncMarkersByTrack(AnimationSequence: AnimSequence, NotifyTrackName: String): Number
        fun RemoveAnimationSyncMarkersByName(AnimationSequence: AnimSequence, MarkerName: String): Number
        fun RemoveAnimationNotifyTrack(AnimationSequenceBase: AnimSequenceBase, NotifyTrackName: String)
        fun RemoveAnimationNotifyEventsByTrack(AnimationSequenceBase: AnimSequenceBase, NotifyTrackName: String): Number
        fun RemoveAnimationNotifyEventsByName(AnimationSequenceBase: AnimSequenceBase, NotifyName: String): Number
        fun RemoveAllVirtualBones(AnimationSequence: AnimSequence)
        fun RemoveAllMetaData(AnimationAsset: AnimationAsset)
        fun RemoveAllCurveData(AnimationSequence: AnimSequence)
        fun RemoveAllBoneAnimation(AnimationSequence: AnimSequence)
        fun RemoveAllAnimationSyncMarkers(AnimationSequence: AnimSequence)
        fun RemoveAllAnimationNotifyTracks(AnimationSequenceBase: AnimSequenceBase)
        fun IsValidTime(AnimationSequenceBase: AnimSequenceBase, Time: Number, IsValid: Boolean = definedExternally): `T$104`
        fun IsValidRawAnimationTrackName(AnimationSequenceBase: AnimSequenceBase, TrackName: String): Boolean
        fun IsValidAnimNotifyTrackName(AnimationSequenceBase: AnimSequenceBase, NotifyTrackName: String): Boolean
        fun IsValidAnimationSyncMarkerName(AnimationSequence: AnimSequence, MarkerName: String): Boolean
        fun IsRootMotionLockForced(AnimationSequence: AnimSequence): Boolean
        fun IsRootMotionEnabled(AnimationSequence: AnimSequence): Boolean
        fun GetVectorKeys(AnimationSequence: AnimSequence, CurveName: String, Times: Array<Number> = definedExternally, Values: Array<Vector> = definedExternally): `T$612`
        fun GetUniqueMarkerNames(AnimationSequence: AnimSequence, MarkerNames: Array<String> = definedExternally): `T$613`
        fun GetTransformationKeys(AnimationSequence: AnimSequence, CurveName: String, Times: Array<Number> = definedExternally, Values: Array<Transform> = definedExternally): `T$614`
        fun GetTimeAtFrame(AnimationSequenceBase: AnimSequenceBase, Frame: Number, Time: Number = definedExternally): `T$103`
        fun GetSequenceLength(AnimationSequenceBase: AnimSequenceBase, Length: Number = definedExternally): `T$102`
        fun GetRootMotionLockType(AnimationSequence: AnimSequence, LockType: String /* "RefPose" | "AnimFirstFrame" | "Zero" | "ERootMotionRootLock_MAX" */ = definedExternally): `T$128`
        fun GetRawTrackScaleData(AnimationSequenceBase: AnimSequenceBase, TrackName: String, ScaleData: Array<Vector> = definedExternally): `T$615`
        fun GetRawTrackRotationData(AnimationSequenceBase: AnimSequenceBase, TrackName: String, RotationData: Array<Quat> = definedExternally): `T$616`
        fun GetRawTrackPositionData(AnimationSequenceBase: AnimSequenceBase, TrackName: String, PositionData: Array<Vector> = definedExternally): `T$617`
        fun GetRawTrackData(AnimationSequenceBase: AnimSequenceBase, TrackName: String, PositionKeys: Array<Vector> = definedExternally, RotationKeys: Array<Quat> = definedExternally, ScalingKeys: Array<Vector> = definedExternally): `T$618`
        fun GetRateScale(AnimationSequenceBase: AnimSequenceBase, RateScale: Number = definedExternally): `T$97`
        fun GetNumKeys(AnimationSequenceBase: AnimSequenceBase, NumKeys: Number = definedExternally): `T$96`
        fun GetNumFrames(AnimationSequenceBase: AnimSequenceBase, NumFrames: Number = definedExternally): `T$95`
        fun GetNodesOfClass(AnimationBlueprint: AnimBlueprint, NodeClass: UnrealEngineClass, GraphNodes: Array<AnimGraphNode_Base> = definedExternally, bIncludeChildClasses: Boolean = definedExternally): `T$619`
        fun GetMetaDataOfClass(AnimationAsset: AnimationAsset, MetaDataClass: UnrealEngineClass, MetaDataOfClass: Array<AnimMetaData> = definedExternally): `T$620`
        fun GetMetaData(AnimationAsset: AnimationAsset, MetaData: Array<AnimMetaData> = definedExternally): `T$621`
        fun GetFrameAtTime(AnimationSequenceBase: AnimSequenceBase, Time: Number, Frame: Number = definedExternally): `T$94`
        fun GetFloatKeys(AnimationSequence: AnimSequence, CurveName: String, Times: Array<Number> = definedExternally, Values: Array<Number> = definedExternally): `T$622`
        fun GetCurveCompressionSettings(AnimationSequence: AnimSequence, CompressionSettings: AnimCurveCompressionSettings = definedExternally): `T$126`
        fun GetBonePosesForTime(AnimationSequenceBase: AnimSequenceBase, BoneNames: Array<String>, Time: Number, bExtractRootMotion: Boolean, Poses: Array<Transform> = definedExternally, PreviewMesh: SkeletalMesh = definedExternally): `T$623`
        fun GetBonePosesForFrame(AnimationSequenceBase: AnimSequenceBase, BoneNames: Array<String>, Frame: Number, bExtractRootMotion: Boolean, Poses: Array<Transform> = definedExternally, PreviewMesh: SkeletalMesh = definedExternally): `T$624`
        fun GetBonePoseForTime(AnimationSequenceBase: AnimSequenceBase, BoneName: String, Time: Number, bExtractRootMotion: Boolean, Pose: Transform = definedExternally): `T$91`
        fun GetBonePoseForFrame(AnimationSequenceBase: AnimSequenceBase, BoneName: String, Frame: Number, bExtractRootMotion: Boolean, Pose: Transform = definedExternally): `T$91`
        fun GetBoneCompressionSettings(AnimationSequence: AnimSequence, CompressionSettings: AnimBoneCompressionSettings = definedExternally): `T$125`
        fun GetAnimNotifyEventTriggerTime(NotifyEvent: AnimNotifyEvent): Number
        fun GetAnimNotifyEventDuration(NotifyEvent: AnimNotifyEvent): Number
        fun GetAnimationTrackNames(AnimationSequenceBase: AnimSequenceBase, TrackNames: Array<String> = definedExternally): `T$625`
        fun GetAnimationSyncMarkersForTrack(AnimationSequence: AnimSequence, NotifyTrackName: String, Markers: Array<AnimSyncMarker> = definedExternally): `T$626`
        fun GetAnimationSyncMarkers(AnimationSequence: AnimSequence, Markers: Array<AnimSyncMarker> = definedExternally): `T$627`
        fun GetAnimationNotifyTrackNames(AnimationSequenceBase: AnimSequenceBase, TrackNames: Array<String> = definedExternally): `T$628`
        fun GetAnimationNotifyEventsForTrack(AnimationSequenceBase: AnimSequenceBase, NotifyTrackName: String, Events: Array<AnimNotifyEvent> = definedExternally): `T$629`
        fun GetAnimationNotifyEvents(AnimationSequenceBase: AnimSequenceBase, NotifyEvents: Array<AnimNotifyEvent> = definedExternally): `T$630`
        fun GetAnimationNotifyEventNames(AnimationSequenceBase: AnimSequenceBase, EventNames: Array<String> = definedExternally): `T$631`
        fun GetAnimationInterpolationType(AnimationSequence: AnimSequence, InterpolationType: String /* "Linear" | "Step" | "EAnimInterpolationType_MAX" */ = definedExternally): `T$122`
        fun GetAnimationGraphs(AnimationBlueprint: AnimBlueprint, AnimationGraphs: Array<AnimationGraph> = definedExternally): `T$632`
        fun GetAnimationCurveNames(AnimationSequence: AnimSequence, CurveType: String /* "RCT_Float" | "RCT_Vector" | "RCT_Transform" | "RCT_MAX" */, CurveNames: Array<String> = definedExternally): `T$633`
        fun GetAdditiveBasePoseType(AnimationSequence: AnimSequence, AdditiveBasePoseType: String /* "ABPT_None" | "ABPT_RefPose" | "ABPT_AnimScaled" | "ABPT_AnimFrame" | "ABPT_LocalAnimFrame" | "ABPT_MAX" */ = definedExternally): `T$120`
        fun GetAdditiveAnimationType(AnimationSequence: AnimSequence, AdditiveAnimationType: String /* "AAT_None" | "AAT_LocalSpaceBase" | "AAT_RotationOffsetMeshSpace" | "AAT_MAX" */ = definedExternally): `T$119`
        fun FindBonePathToRoot(AnimationSequenceBase: AnimSequenceBase, BoneName: String, BonePath: Array<String> = definedExternally): `T$634`
        fun FinalizeBoneAnimation(AnimationSequence: AnimSequence)
        fun EvaluateRootBoneTimecodeAttributesAtTime(AnimationSequenceBase: AnimSequenceBase, EvalTime: Number, OutQualifiedFrameTime: QualifiedFrameTime = definedExternally): `T$84`
        fun DoesCurveExist(AnimationSequence: AnimSequence, CurveName: String, CurveType: String /* "RCT_Float" | "RCT_Vector" | "RCT_Transform" | "RCT_MAX" */): Boolean
        fun DoesBoneNameExist(AnimationSequence: AnimSequence, BoneName: String, bExists: Boolean = definedExternally): `T$118`
        fun CopyAnimNotifiesFromSequence(SourceAnimationSequenceBase: AnimSequenceBase, DestinationAnimationSequenceBase: AnimSequenceBase, bDeleteExistingNotifies: Boolean)
        fun CopyAnimationCurveNamesToSkeleton(OldSkeleton: Skeleton, NewSkeleton: Skeleton, SequenceBase: AnimSequenceBase, CurveType: String /* "RCT_Float" | "RCT_Vector" | "RCT_Transform" | "RCT_MAX" */)
        fun ContainsMetaDataOfClass(AnimationAsset: AnimationAsset, MetaDataClass: UnrealEngineClass): Boolean
        fun AddVirtualBone(AnimationSequence: AnimSequence, SourceBoneName: String, TargetBoneName: String, VirtualBoneName: String = definedExternally): `T$117`
        fun AddVectorCurveKeys(AnimationSequence: AnimSequence, CurveName: String, Times: Array<Number>, Vectors: Array<Vector>)
        fun AddVectorCurveKey(AnimationSequence: AnimSequence, CurveName: String, Time: Number, Vector: Vector)
        fun AddTransformationCurveKeys(AnimationSequence: AnimSequence, CurveName: String, Times: Array<Number>, Transforms: Array<Transform>)
        fun AddTransformationCurveKey(AnimationSequence: AnimSequence, CurveName: String, Time: Number, Transform: Transform)
        fun AddMetaDataObject(AnimationAsset: AnimationAsset, MetaDataObject: AnimMetaData)
        fun AddMetaData(AnimationAsset: AnimationAsset, MetaDataClass: UnrealEngineClass, MetaDataInstance: AnimMetaData = definedExternally): `T$140`
        fun AddFloatCurveKeys(AnimationSequence: AnimSequence, CurveName: String, Times: Array<Number>, Values: Array<Number>)
        fun AddFloatCurveKey(AnimationSequence: AnimSequence, CurveName: String, Time: Number, Value: Number)
        fun AddCurve(AnimationSequence: AnimSequence, CurveName: String, CurveType: String /* "RCT_Float" | "RCT_Vector" | "RCT_Transform" | "RCT_MAX" */, bMetaDataCurve: Boolean)
        fun AddAnimationSyncMarker(AnimationSequence: AnimSequence, MarkerName: String, Time: Number, NotifyTrackName: String)
        fun AddAnimationNotifyTrack(AnimationSequenceBase: AnimSequenceBase, NotifyTrackName: String, TrackColor: LinearColor)
        fun AddAnimationNotifyStateEventObject(AnimationSequenceBase: AnimSequenceBase, StartTime: Number, Duration: Number, NotifyState: AnimNotifyState, NotifyTrackName: String)
        fun AddAnimationNotifyStateEvent(AnimationSequenceBase: AnimSequenceBase, NotifyTrackName: String, StartTime: Number, Duration: Number, NotifyStateClass: UnrealEngineClass): AnimNotifyState
        fun AddAnimationNotifyEventObject(AnimationSequenceBase: AnimSequenceBase, StartTime: Number, Notify: AnimNotify, NotifyTrackName: String)
        fun AddAnimationNotifyEvent(AnimationSequenceBase: AnimSequenceBase, NotifyTrackName: String, StartTime: Number, NotifyClass: UnrealEngineClass): AnimNotify
        fun C(Other: UObject): AnimationBlueprintLibrary
        fun C(Other: Any): AnimationBlueprintLibrary
    }
}

external interface `T$635` {
    var Bones: Array<String>
}

external open class AnimPoseExtensions : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimPoseExtensions
        fun Find(Outer: UObject, ResourceName: String): AnimPoseExtensions
        fun GetDefaultObject(): AnimPoseExtensions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimPoseExtensions
        fun SetBonePose(Pose: AnimPose = definedExternally, Transform: Transform = definedExternally, BoneName: String = definedExternally, Space: String /* "Local" | "World" | "EAnimPoseSpaces_MAX" */ = definedExternally): `T$83`
        fun IsValid(Pose: AnimPose): Boolean
        fun GetRelativeTransform(Pose: AnimPose, FromBoneName: String, ToBoneName: String, Space: String /* "Local" | "World" | "EAnimPoseSpaces_MAX" */): Transform
        fun GetRelativeToRefPoseTransform(Pose: AnimPose, BoneName: String, Space: String /* "Local" | "World" | "EAnimPoseSpaces_MAX" */): Transform
        fun GetRefPoseRelativeTransform(Pose: AnimPose, FromBoneName: String, ToBoneName: String, Space: String /* "Local" | "World" | "EAnimPoseSpaces_MAX" */): Transform
        fun GetReferencePose(Skeleton: Skeleton, OutPose: AnimPose = definedExternally): `T$150`
        fun GetRefBonePose(Pose: AnimPose, BoneName: String, Space: String /* "Local" | "World" | "EAnimPoseSpaces_MAX" */): Transform
        fun GetBonePose(Pose: AnimPose, BoneName: String, Space: String /* "Local" | "World" | "EAnimPoseSpaces_MAX" */): Transform
        fun GetBoneNames(Pose: AnimPose, Bones: Array<String> = definedExternally): `T$635`
        fun GetAnimPoseAtTime(AnimationSequenceBase: AnimSequenceBase, Time: Number, EvaluationOptions: AnimPoseEvaluationOptions, Pose: AnimPose = definedExternally): `T$83`
        fun GetAnimPoseAtFrame(AnimationSequenceBase: AnimSequenceBase, FrameIndex: Number, EvaluationOptions: AnimPoseEvaluationOptions, Pose: AnimPose = definedExternally): `T$83`
        fun EvaluateAnimationBlueprintWithInputPose(InputPose: AnimPose, TargetSkeletalMesh: SkeletalMesh, AnimationBlueprint: AnimBlueprint, OutPose: AnimPose = definedExternally): `T$150`
        fun C(Other: UObject): AnimPoseExtensions
        fun C(Other: Any): AnimPoseExtensions
    }
}

external object EAnimExecutionContextConversionResult {
    var Succeeded: String /* "Succeeded" */
    var Failed: String /* "Failed" */
    var EAnimExecutionContextConversionResult_MAX: String /* "EAnimExecutionContextConversionResult_MAX" */
}

external open class AnimComponentSpacePoseContext : AnimExecutionContext {
    override fun clone(): AnimComponentSpacePoseContext

    companion object {
        fun C(Other: UObject): AnimComponentSpacePoseContext
        fun C(Other: Any): AnimComponentSpacePoseContext
    }
}

external open class AnimInitializationContext : AnimExecutionContext {
    override fun clone(): AnimInitializationContext

    companion object {
        fun C(Other: UObject): AnimInitializationContext
        fun C(Other: Any): AnimInitializationContext
    }
}

external open class AnimPoseContext : AnimExecutionContext {
    override fun clone(): AnimPoseContext

    companion object {
        fun C(Other: UObject): AnimPoseContext
        fun C(Other: Any): AnimPoseContext
    }
}

external interface `T$636` {
    var Result: String /* "Succeeded" | "Failed" | "EAnimExecutionContextConversionResult_MAX" */
    var `$`: AnimComponentSpacePoseContext
}

external interface `T$637` {
    var Result: String /* "Succeeded" | "Failed" | "EAnimExecutionContextConversionResult_MAX" */
    var `$`: AnimInitializationContext
}

external interface `T$638` {
    var Result: String /* "Succeeded" | "Failed" | "EAnimExecutionContextConversionResult_MAX" */
    var `$`: AnimPoseContext
}

external interface `T$639` {
    var Result: String /* "Succeeded" | "Failed" | "EAnimExecutionContextConversionResult_MAX" */
    var `$`: AnimUpdateContext
}

external open class AnimExecutionContext {
    open fun clone(): AnimExecutionContext
    open fun ConvertToComponentSpacePoseContext(Result: String /* "Succeeded" | "Failed" | "EAnimExecutionContextConversionResult_MAX" */ = definedExternally): `T$636`
    open fun ConvertToInitializationContext(Result: String /* "Succeeded" | "Failed" | "EAnimExecutionContextConversionResult_MAX" */ = definedExternally): `T$637`
    open fun ConvertToPoseContext(Result: String /* "Succeeded" | "Failed" | "EAnimExecutionContextConversionResult_MAX" */ = definedExternally): `T$638`
    open fun ConvertToUpdateContext(Result: String /* "Succeeded" | "Failed" | "EAnimExecutionContextConversionResult_MAX" */ = definedExternally): `T$639`
    open fun GetAnimInstance(): AnimInstance

    companion object {
        fun C(Other: UObject): AnimExecutionContext
        fun C(Other: Any): AnimExecutionContext
        fun ConvertToComponentSpacePoseContext(Context: AnimExecutionContext, Result: String /* "Succeeded" | "Failed" | "EAnimExecutionContextConversionResult_MAX" */ = definedExternally): `T$636`
        fun ConvertToInitializationContext(Context: AnimExecutionContext, Result: String /* "Succeeded" | "Failed" | "EAnimExecutionContextConversionResult_MAX" */ = definedExternally): `T$637`
        fun ConvertToPoseContext(Context: AnimExecutionContext, Result: String /* "Succeeded" | "Failed" | "EAnimExecutionContextConversionResult_MAX" */ = definedExternally): `T$638`
        fun ConvertToUpdateContext(Context: AnimExecutionContext, Result: String /* "Succeeded" | "Failed" | "EAnimExecutionContextConversionResult_MAX" */ = definedExternally): `T$639`
        fun GetAnimInstance(Context: AnimExecutionContext): AnimInstance
    }
}

external open class AnimUpdateContext : AnimExecutionContext {
    override fun clone(): AnimUpdateContext
    open fun SetSequenceWithInertialBlending(SequencePlayer: SequencePlayerReference, Sequence: AnimSequenceBase, BlendTime: Number): SequencePlayerReference
    open fun AdvanceTime(SequenceEvaluator: SequenceEvaluatorReference, PlayRate: Number): SequenceEvaluatorReference
    open fun SetSequenceWithInertialBlending(SequenceEvaluator: SequenceEvaluatorReference, Sequence: AnimSequenceBase, BlendTime: Number): SequenceEvaluatorReference
    open fun GetCurrentWeight(): Number
    open fun GetDeltaTime(): Number
    open fun IsStateBlendingIn(UNode: AnimationStateResultReference): Boolean
    open fun IsStateBlendingOut(UNode: AnimationStateResultReference): Boolean

    companion object {
        fun C(Other: UObject): AnimUpdateContext
        fun C(Other: Any): AnimUpdateContext
        fun SetSequenceWithInertialBlending(UpdateContext: AnimUpdateContext, SequencePlayer: SequencePlayerReference, Sequence: AnimSequenceBase, BlendTime: Number): SequencePlayerReference
        fun AdvanceTime(UpdateContext: AnimUpdateContext, SequenceEvaluator: SequenceEvaluatorReference, PlayRate: Number): SequenceEvaluatorReference
        fun SetSequenceWithInertialBlending(UpdateContext: AnimUpdateContext, SequenceEvaluator: SequenceEvaluatorReference, Sequence: AnimSequenceBase, BlendTime: Number): SequenceEvaluatorReference
        fun GetCurrentWeight(Context: AnimUpdateContext): Number
        fun GetDeltaTime(Context: AnimUpdateContext): Number
        fun IsStateBlendingIn(UpdateContext: AnimUpdateContext, UNode: AnimationStateResultReference): Boolean
        fun IsStateBlendingOut(UpdateContext: AnimUpdateContext, UNode: AnimationStateResultReference): Boolean
    }
}

external open class AnimationStateMachineLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimationStateMachineLibrary
        fun Find(Outer: UObject, ResourceName: String): AnimationStateMachineLibrary
        fun GetDefaultObject(): AnimationStateMachineLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationStateMachineLibrary
        fun IsStateBlendingOut(UpdateContext: AnimUpdateContext, UNode: AnimationStateResultReference): Boolean
        fun IsStateBlendingIn(UpdateContext: AnimUpdateContext, UNode: AnimationStateResultReference): Boolean
        fun ConvertToAnimationStateResultPure(UNode: AnimNodeReference, AnimationState: AnimationStateResultReference = definedExternally, Result: Boolean = definedExternally): `T$71`
        fun ConvertToAnimationStateResult(UNode: AnimNodeReference, AnimationState: AnimationStateResultReference = definedExternally, Result: String /* "Succeeded" | "Failed" | "EAnimNodeReferenceConversionResult_MAX" */ = definedExternally): `T$70`
        fun C(Other: UObject): AnimationStateMachineLibrary
        fun C(Other: Any): AnimationStateMachineLibrary
    }
}

external open class AnimExecutionContextLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)
    open fun Prototype_ThreadSafeAnimUpdateCall(Context: AnimUpdateContext, UNode: AnimNodeReference)
    open fun Prototype_ThreadSafeAnimNodeCall(Context: AnimExecutionContext, UNode: AnimNodeReference)

    companion object {
        fun Load(ResourceName: String): AnimExecutionContextLibrary
        fun Find(Outer: UObject, ResourceName: String): AnimExecutionContextLibrary
        fun GetDefaultObject(): AnimExecutionContextLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimExecutionContextLibrary
        fun GetDeltaTime(Context: AnimUpdateContext): Number
        fun GetCurrentWeight(Context: AnimUpdateContext): Number
        fun GetAnimNodeReference(Instance: AnimInstance, index: Number): AnimNodeReference
        fun GetAnimInstance(Context: AnimExecutionContext): AnimInstance
        fun ConvertToUpdateContext(Context: AnimExecutionContext, Result: String /* "Succeeded" | "Failed" | "EAnimExecutionContextConversionResult_MAX" */ = definedExternally): `T$639`
        fun ConvertToPoseContext(Context: AnimExecutionContext, Result: String /* "Succeeded" | "Failed" | "EAnimExecutionContextConversionResult_MAX" */ = definedExternally): `T$638`
        fun ConvertToInitializationContext(Context: AnimExecutionContext, Result: String /* "Succeeded" | "Failed" | "EAnimExecutionContextConversionResult_MAX" */ = definedExternally): `T$637`
        fun ConvertToComponentSpacePoseContext(Context: AnimExecutionContext, Result: String /* "Succeeded" | "Failed" | "EAnimExecutionContextConversionResult_MAX" */ = definedExternally): `T$636`
        fun C(Other: UObject): AnimExecutionContextLibrary
        fun C(Other: Any): AnimExecutionContextLibrary
    }
}

external open class AnimNotify_PlayMontageNotify : AnimNotify {
    constructor()
    constructor(Outer: UObject)
    open var NotifyName: String

    companion object {
        fun Load(ResourceName: String): AnimNotify_PlayMontageNotify
        fun Find(Outer: UObject, ResourceName: String): AnimNotify_PlayMontageNotify
        fun GetDefaultObject(): AnimNotify_PlayMontageNotify
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimNotify_PlayMontageNotify
        fun C(Other: UObject): AnimNotify_PlayMontageNotify
        fun C(Other: Any): AnimNotify_PlayMontageNotify
    }
}

external open class AnimNotify_PlayMontageNotifyWindow : AnimNotifyState {
    constructor()
    constructor(Outer: UObject)
    open var NotifyName: String

    companion object {
        fun Load(ResourceName: String): AnimNotify_PlayMontageNotifyWindow
        fun Find(Outer: UObject, ResourceName: String): AnimNotify_PlayMontageNotifyWindow
        fun GetDefaultObject(): AnimNotify_PlayMontageNotifyWindow
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimNotify_PlayMontageNotifyWindow
        fun C(Other: UObject): AnimNotify_PlayMontageNotifyWindow
        fun C(Other: Any): AnimNotify_PlayMontageNotifyWindow
    }
}

external open class AnimSequencerInstance : AnimInstance {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimSequencerInstance
        fun Find(Outer: UObject, ResourceName: String): AnimSequencerInstance
        fun GetDefaultObject(): AnimSequencerInstance
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimSequencerInstance
        fun C(Other: UObject): AnimSequencerInstance
        fun C(Other: Any): AnimSequencerInstance
    }
}

external open class PositionHistory {
    open var Positions: Array<Vector>
    open var Range: Number
    open fun clone(): PositionHistory

    companion object {
        fun C(Other: UObject): PositionHistory
        fun C(Other: Any): PositionHistory
    }
}

external interface `T$640` {
    var History: PositionHistory
    var `$`: Number
}

external open class KismetAnimationLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): KismetAnimationLibrary
        fun Find(Outer: UObject, ResourceName: String): KismetAnimationLibrary
        fun GetDefaultObject(): KismetAnimationLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): KismetAnimationLibrary
        fun K2_TwoBoneIK(RootPos: Vector, JointPos: Vector, EndPos: Vector, JointTarget: Vector, Effector: Vector, OutJointPos: Vector = definedExternally, OutEndPos: Vector = definedExternally, bAllowStretching: Boolean = definedExternally, StartStretchRatio: Number = definedExternally, MaxStretchScale: Number = definedExternally): `T$503`
        fun StartProfilingTimer()
        fun K2_MakePerlinNoiseVectorAndRemap(X: Number, Y: Number, Z: Number, RangeOutMinX: Number, RangeOutMaxX: Number, RangeOutMinY: Number, RangeOutMaxY: Number, RangeOutMinZ: Number, RangeOutMaxZ: Number): Vector
        fun MakePerlinNoiseandRemap(Value: Number, RangeOutMin: Number, RangeOutMax: Number): Number
        fun K2_LookAt(CurrentTransform: Transform, TargetPosition: Vector, LookAtVector: Vector, bUseUpVector: Boolean, UpVector: Vector, ClampConeInDegree: Number): Transform
        fun EndProfilingTimer(bLog: Boolean, LogPrefix: String): Number
        fun K2_DistanceBetweenTwoSocketsAndMapRange(Component: SkeletalMeshComponent, SocketOrBoneNameA: String, SocketSpaceA: String /* "RTS_World" | "RTS_Actor" | "RTS_Component" | "RTS_ParentBoneSpace" | "RTS_MAX" */, SocketOrBoneNameB: String, SocketSpaceB: String /* "RTS_World" | "RTS_Actor" | "RTS_Component" | "RTS_ParentBoneSpace" | "RTS_MAX" */, bRemapRange: Boolean, InRangeMin: Number, InRangeMax: Number, OutRangeMin: Number, OutRangeMax: Number): Number
        fun K2_DirectionBetweenSockets(Component: SkeletalMeshComponent, SocketOrBoneNameFrom: String, SocketOrBoneNameTo: String): Vector
        fun CalculateVelocityFromSockets(DeltaSeconds: Number, Component: SkeletalMeshComponent, SocketOrBoneName: String, ReferenceSocketOrBone: String, SocketSpace: String /* "RTS_World" | "RTS_Actor" | "RTS_Component" | "RTS_ParentBoneSpace" | "RTS_MAX" */, OffsetInBoneSpace: Vector, History: PositionHistory = definedExternally, NumberOfSamples: Number = definedExternally, VelocityMin: Number = definedExternally, VelocityMax: Number = definedExternally, EasingType: String /* "Linear" | "Sinusoidal" | "Cubic" | "QuadraticInOut" | "CubicInOut" | "HermiteCubic" | "QuarticInOut" | "QuinticInOut" | "CircularIn" | "CircularOut" | "CircularInOut" | "ExpIn" | "ExpOut" | "ExpInOut" | "CustomCurve" | "EEasingFuncType_MAX" */ = definedExternally, CustomCurve: RuntimeFloatCurve = definedExternally): `T$640`
        fun CalculateVelocityFromPositionHistory(DeltaSeconds: Number, position: Vector, History: PositionHistory = definedExternally, NumberOfSamples: Number = definedExternally, VelocityMin: Number = definedExternally, VelocityMax: Number = definedExternally): `T$640`
        fun CalculateDirection(Velocity: Vector, BaseRotation: Rotator): Number
        fun C(Other: UObject): KismetAnimationLibrary
        fun C(Other: Any): KismetAnimationLibrary
    }
}

external open class LinkedAnimGraphLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LinkedAnimGraphLibrary
        fun Find(Outer: UObject, ResourceName: String): LinkedAnimGraphLibrary
        fun GetDefaultObject(): LinkedAnimGraphLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LinkedAnimGraphLibrary
        fun HasLinkedAnimInstance(UNode: LinkedAnimGraphReference): Boolean
        fun GetLinkedAnimInstance(UNode: LinkedAnimGraphReference): AnimInstance
        fun ConvertToLinkedAnimGraphPure(UNode: AnimNodeReference, LinkedAnimGraph: LinkedAnimGraphReference = definedExternally, Result: Boolean = definedExternally): `T$69`
        fun ConvertToLinkedAnimGraph(UNode: AnimNodeReference, Result: String /* "Succeeded" | "Failed" | "EAnimNodeReferenceConversionResult_MAX" */ = definedExternally): `T$68`
        fun C(Other: UObject): LinkedAnimGraphLibrary
        fun C(Other: Any): LinkedAnimGraphLibrary
    }
}

external open class BranchingPointNotifyPayload {
    open fun clone(): BranchingPointNotifyPayload

    companion object {
        fun C(Other: UObject): BranchingPointNotifyPayload
        fun C(Other: Any): BranchingPointNotifyPayload
    }
}

external open class PlayMontageCallbackProxy : UObject {
    constructor()
    constructor(Outer: UObject)
    open var OnCompleted: UnrealEngineMulticastDelegate<(NotifyName: String) -> Unit>
    open var OnBlendOut: UnrealEngineMulticastDelegate<(NotifyName: String) -> Unit>
    open var OnInterrupted: UnrealEngineMulticastDelegate<(NotifyName: String) -> Unit>
    open var OnNotifyBegin: UnrealEngineMulticastDelegate<(NotifyName: String) -> Unit>
    open var OnNotifyEnd: UnrealEngineMulticastDelegate<(NotifyName: String) -> Unit>
    open fun OnNotifyEndReceived(NotifyName: String, BranchingPointNotifyPayload: BranchingPointNotifyPayload)
    open fun OnNotifyBeginReceived(NotifyName: String, BranchingPointNotifyPayload: BranchingPointNotifyPayload)
    open fun OnMontageEnded(Montage: AnimMontage, bInterrupted: Boolean)
    open fun OnMontageBlendingOut(Montage: AnimMontage, bInterrupted: Boolean)

    companion object {
        fun Load(ResourceName: String): PlayMontageCallbackProxy
        fun Find(Outer: UObject, ResourceName: String): PlayMontageCallbackProxy
        fun GetDefaultObject(): PlayMontageCallbackProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PlayMontageCallbackProxy
        fun CreateProxyObjectForPlayMontage(InSkeletalMeshComponent: SkeletalMeshComponent, MontageToPlay: AnimMontage, PlayRate: Number, StartingPosition: Number, StartingSection: String): PlayMontageCallbackProxy
        fun C(Other: UObject): PlayMontageCallbackProxy
        fun C(Other: Any): PlayMontageCallbackProxy
    }
}

external open class SequenceEvaluatorLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SequenceEvaluatorLibrary
        fun Find(Outer: UObject, ResourceName: String): SequenceEvaluatorLibrary
        fun GetDefaultObject(): SequenceEvaluatorLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SequenceEvaluatorLibrary
        fun SetSequenceWithInertialBlending(UpdateContext: AnimUpdateContext, SequenceEvaluator: SequenceEvaluatorReference, Sequence: AnimSequenceBase, BlendTime: Number): SequenceEvaluatorReference
        fun SetSequence(SequenceEvaluator: SequenceEvaluatorReference, Sequence: AnimSequenceBase): SequenceEvaluatorReference
        fun SetExplicitTime(SequenceEvaluator: SequenceEvaluatorReference, Time: Number): SequenceEvaluatorReference
        fun GetSequence(SequenceEvaluator: SequenceEvaluatorReference): AnimSequenceBase
        fun GetAccumulatedTime(SequenceEvaluator: SequenceEvaluatorReference): Number
        fun ConvertToSequenceEvaluatorPure(UNode: AnimNodeReference, SequenceEvaluator: SequenceEvaluatorReference = definedExternally, Result: Boolean = definedExternally): `T$67`
        fun ConvertToSequenceEvaluator(UNode: AnimNodeReference, Result: String /* "Succeeded" | "Failed" | "EAnimNodeReferenceConversionResult_MAX" */ = definedExternally): `T$66`
        fun AdvanceTime(UpdateContext: AnimUpdateContext, SequenceEvaluator: SequenceEvaluatorReference, PlayRate: Number): SequenceEvaluatorReference
        fun C(Other: UObject): SequenceEvaluatorLibrary
        fun C(Other: Any): SequenceEvaluatorLibrary
    }
}

external open class SequencePlayerLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SequencePlayerLibrary
        fun Find(Outer: UObject, ResourceName: String): SequencePlayerLibrary
        fun GetDefaultObject(): SequencePlayerLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SequencePlayerLibrary
        fun SetStartPosition(SequencePlayer: SequencePlayerReference, StartPosition: Number): SequencePlayerReference
        fun SetSequenceWithInertialBlending(UpdateContext: AnimUpdateContext, SequencePlayer: SequencePlayerReference, Sequence: AnimSequenceBase, BlendTime: Number): SequencePlayerReference
        fun SetSequence(SequencePlayer: SequencePlayerReference, Sequence: AnimSequenceBase): SequencePlayerReference
        fun SetPlayRate(SequencePlayer: SequencePlayerReference, PlayRate: Number): SequencePlayerReference
        fun SetAccumulatedTime(SequencePlayer: SequencePlayerReference, Time: Number): SequencePlayerReference
        fun GetStartPosition(SequencePlayer: SequencePlayerReference): Number
        fun GetSequencePure(SequencePlayer: SequencePlayerReference): AnimSequenceBase
        fun GetSequence(SequencePlayer: SequencePlayerReference, SequenceBase: AnimSequenceBase = definedExternally): `T$61`
        fun GetPlayRate(SequencePlayer: SequencePlayerReference): Number
        fun GetLoopAnimation(SequencePlayer: SequencePlayerReference): Boolean
        fun GetAccumulatedTime(SequencePlayer: SequencePlayerReference): Number
        fun ConvertToSequencePlayerPure(UNode: AnimNodeReference, SequencePlayer: SequencePlayerReference = definedExternally, Result: Boolean = definedExternally): `T$65`
        fun ConvertToSequencePlayer(UNode: AnimNodeReference, Result: String /* "Succeeded" | "Failed" | "EAnimNodeReferenceConversionResult_MAX" */ = definedExternally): `T$64`
        fun C(Other: UObject): SequencePlayerLibrary
        fun C(Other: Any): SequencePlayerLibrary
    }
}

external open class SequencerAnimationSupport : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SequencerAnimationSupport
        fun Find(Outer: UObject, ResourceName: String): SequencerAnimationSupport
        fun GetDefaultObject(): SequencerAnimationSupport
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SequencerAnimationSupport
        fun C(Other: UObject): SequencerAnimationSupport
        fun C(Other: Any): SequencerAnimationSupport
    }
}

external open class SkeletalControlLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SkeletalControlLibrary
        fun Find(Outer: UObject, ResourceName: String): SkeletalControlLibrary
        fun GetDefaultObject(): SkeletalControlLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SkeletalControlLibrary
        fun SetAlpha(SkeletalControl: SkeletalControlReference, Alpha: Number): SkeletalControlReference
        fun GetAlpha(SkeletalControl: SkeletalControlReference): Number
        fun ConvertToSkeletalControlPure(UNode: AnimNodeReference, SkeletalControl: SkeletalControlReference = definedExternally, Result: Boolean = definedExternally): `T$63`
        fun ConvertToSkeletalControl(UNode: AnimNodeReference, Result: String /* "Succeeded" | "Failed" | "EAnimNodeReferenceConversionResult_MAX" */ = definedExternally): `T$62`
        fun C(Other: UObject): SkeletalControlLibrary
        fun C(Other: Any): SkeletalControlLibrary
    }
}

external open class ByteChannelEvaluatorSystem : MovieSceneEntitySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ByteChannelEvaluatorSystem
        fun Find(Outer: UObject, ResourceName: String): ByteChannelEvaluatorSystem
        fun GetDefaultObject(): ByteChannelEvaluatorSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ByteChannelEvaluatorSystem
        fun C(Other: UObject): ByteChannelEvaluatorSystem
        fun C(Other: Any): ByteChannelEvaluatorSystem
    }
}

external open class DoubleChannelEvaluatorSystem : MovieSceneEntitySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DoubleChannelEvaluatorSystem
        fun Find(Outer: UObject, ResourceName: String): DoubleChannelEvaluatorSystem
        fun GetDefaultObject(): DoubleChannelEvaluatorSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DoubleChannelEvaluatorSystem
        fun C(Other: UObject): DoubleChannelEvaluatorSystem
        fun C(Other: Any): DoubleChannelEvaluatorSystem
    }
}

external open class FloatChannelEvaluatorSystem : MovieSceneEntitySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): FloatChannelEvaluatorSystem
        fun Find(Outer: UObject, ResourceName: String): FloatChannelEvaluatorSystem
        fun GetDefaultObject(): FloatChannelEvaluatorSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FloatChannelEvaluatorSystem
        fun C(Other: UObject): FloatChannelEvaluatorSystem
        fun C(Other: Any): FloatChannelEvaluatorSystem
    }
}

external open class MovieSceneTransformOrigin : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun GetTransformOrigin(): Transform

    companion object {
        fun Load(ResourceName: String): MovieSceneTransformOrigin
        fun Find(Outer: UObject, ResourceName: String): MovieSceneTransformOrigin
        fun GetDefaultObject(): MovieSceneTransformOrigin
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneTransformOrigin
        fun C(Other: UObject): MovieSceneTransformOrigin
        fun C(Other: Any): MovieSceneTransformOrigin
    }
}

external open class IntegerChannelEvaluatorSystem : MovieSceneEntitySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): IntegerChannelEvaluatorSystem
        fun Find(Outer: UObject, ResourceName: String): IntegerChannelEvaluatorSystem
        fun GetDefaultObject(): IntegerChannelEvaluatorSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): IntegerChannelEvaluatorSystem
        fun C(Other: UObject): IntegerChannelEvaluatorSystem
        fun C(Other: Any): IntegerChannelEvaluatorSystem
    }
}

external open class MovieScene3DConstraintSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var ConstraintId: Guid
    open var ConstraintBindingID: MovieSceneObjectBindingID
    open fun SetConstraintBindingID(InConstraintBindingID: MovieSceneObjectBindingID)
    open fun GetConstraintBindingID(): MovieSceneObjectBindingID

    companion object {
        fun Load(ResourceName: String): MovieScene3DConstraintSection
        fun Find(Outer: UObject, ResourceName: String): MovieScene3DConstraintSection
        fun GetDefaultObject(): MovieScene3DConstraintSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScene3DConstraintSection
        fun C(Other: UObject): MovieScene3DConstraintSection
        fun C(Other: Any): MovieScene3DConstraintSection
    }
}

external open class MovieScene3DAttachSection : MovieScene3DConstraintSection {
    constructor()
    constructor(Outer: UObject)
    open var AttachSocketName: String
    open var AttachComponentName: String
    open var bFullRevertOnDetach: Boolean
    open var ReAttachOnDetach: SceneComponent
    open var AttachmentLocationRule: String /* "KeepRelative" | "KeepWorld" | "SnapToTarget" | "EAttachmentRule_MAX" */
    open var AttachmentRotationRule: String /* "KeepRelative" | "KeepWorld" | "SnapToTarget" | "EAttachmentRule_MAX" */
    open var AttachmentScaleRule: String /* "KeepRelative" | "KeepWorld" | "SnapToTarget" | "EAttachmentRule_MAX" */
    open var DetachmentLocationRule: String /* "KeepRelative" | "KeepWorld" | "EDetachmentRule_MAX" */
    open var DetachmentRotationRule: String /* "KeepRelative" | "KeepWorld" | "EDetachmentRule_MAX" */
    open var DetachmentScaleRule: String /* "KeepRelative" | "KeepWorld" | "EDetachmentRule_MAX" */

    companion object {
        fun Load(ResourceName: String): MovieScene3DAttachSection
        fun Find(Outer: UObject, ResourceName: String): MovieScene3DAttachSection
        fun GetDefaultObject(): MovieScene3DAttachSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScene3DAttachSection
        fun C(Other: UObject): MovieScene3DAttachSection
        fun C(Other: Any): MovieScene3DAttachSection
    }
}

external open class MovieScene3DConstraintTrack : MovieSceneTrack {
    constructor()
    constructor(Outer: UObject)
    open var ConstraintSections: Array<MovieSceneSection>

    companion object {
        fun Load(ResourceName: String): MovieScene3DConstraintTrack
        fun Find(Outer: UObject, ResourceName: String): MovieScene3DConstraintTrack
        fun GetDefaultObject(): MovieScene3DConstraintTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScene3DConstraintTrack
        fun C(Other: UObject): MovieScene3DConstraintTrack
        fun C(Other: Any): MovieScene3DConstraintTrack
    }
}

external open class MovieScene3DAttachTrack : MovieScene3DConstraintTrack {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieScene3DAttachTrack
        fun Find(Outer: UObject, ResourceName: String): MovieScene3DAttachTrack
        fun GetDefaultObject(): MovieScene3DAttachTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScene3DAttachTrack
        fun C(Other: UObject): MovieScene3DAttachTrack
        fun C(Other: Any): MovieScene3DAttachTrack
    }
}

external object MovieScene3DPathSection_Axis {
    var X: String /* "X" */
    var Y: String /* "Y" */
    var Z: String /* "Z" */
    var NEG_X: String /* "NEG_X" */
    var NEG_Y: String /* "NEG_Y" */
    var NEG_Z: String /* "NEG_Z" */
    var MovieScene3DPathSection_MAX: String /* "MovieScene3DPathSection_MAX" */
}

external open class MovieScene3DPathSection : MovieScene3DConstraintSection {
    constructor()
    constructor(Outer: UObject)
    open var TimingCurve: MovieSceneFloatChannel
    open var FrontAxisEnum: String /* "X" | "Y" | "Z" | "NEG_X" | "NEG_Y" | "NEG_Z" | "MovieScene3DPathSection_MAX" */
    open var UpAxisEnum: String /* "X" | "Y" | "Z" | "NEG_X" | "NEG_Y" | "NEG_Z" | "MovieScene3DPathSection_MAX" */
    open var bFollow: Boolean
    open var bReverse: Boolean
    open var bForceUpright: Boolean

    companion object {
        fun Load(ResourceName: String): MovieScene3DPathSection
        fun Find(Outer: UObject, ResourceName: String): MovieScene3DPathSection
        fun GetDefaultObject(): MovieScene3DPathSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScene3DPathSection
        fun C(Other: UObject): MovieScene3DPathSection
        fun C(Other: Any): MovieScene3DPathSection
    }
}

external open class MovieScene3DPathTrack : MovieScene3DConstraintTrack {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieScene3DPathTrack
        fun Find(Outer: UObject, ResourceName: String): MovieScene3DPathTrack
        fun GetDefaultObject(): MovieScene3DPathTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScene3DPathTrack
        fun C(Other: UObject): MovieScene3DPathTrack
        fun C(Other: Any): MovieScene3DPathTrack
    }
}

external open class MovieScene3DTransformPropertySystem : MovieScenePropertySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieScene3DTransformPropertySystem
        fun Find(Outer: UObject, ResourceName: String): MovieScene3DTransformPropertySystem
        fun GetDefaultObject(): MovieScene3DTransformPropertySystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScene3DTransformPropertySystem
        fun C(Other: UObject): MovieScene3DTransformPropertySystem
        fun C(Other: Any): MovieScene3DTransformPropertySystem
    }
}

external open class MovieScene3DTransformTrack : MovieScenePropertyTrack {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieScene3DTransformTrack
        fun Find(Outer: UObject, ResourceName: String): MovieScene3DTransformTrack
        fun GetDefaultObject(): MovieScene3DTransformTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScene3DTransformTrack
        fun C(Other: UObject): MovieScene3DTransformTrack
        fun C(Other: Any): MovieScene3DTransformTrack
    }
}

external open class MovieSceneActorReferenceKey {
    open var UObject: MovieSceneObjectBindingID
    open var ComponentName: String
    open var SocketName: String
    open fun clone(): MovieSceneActorReferenceKey

    companion object {
        fun C(Other: UObject): MovieSceneActorReferenceKey
        fun C(Other: Any): MovieSceneActorReferenceKey
    }
}

external open class MovieSceneActorReferenceData : MovieSceneChannel {
    open var KeyTimes: Array<FrameNumber>
    open var DefaultValue: MovieSceneActorReferenceKey
    open var KeyValues: Array<MovieSceneActorReferenceKey>
    override fun clone(): MovieSceneActorReferenceData

    companion object {
        fun C(Other: UObject): MovieSceneActorReferenceData
        fun C(Other: Any): MovieSceneActorReferenceData
    }
}

external open class IntegralKey {
    open var Time: Number
    open var Value: Number
    open fun clone(): IntegralKey

    companion object {
        fun C(Other: UObject): IntegralKey
        fun C(Other: Any): IntegralKey
    }
}

external open class IntegralCurve : IndexedCurve {
    open var Keys: Array<IntegralKey>
    open var DefaultValue: Number
    open var bUseDefaultValueBeforeFirstKey: Boolean
    override fun clone(): IntegralCurve

    companion object {
        fun C(Other: UObject): IntegralCurve
        fun C(Other: Any): IntegralCurve
    }
}

external open class MovieSceneActorReferenceSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var ActorReferenceData: MovieSceneActorReferenceData
    open var ActorGuidIndexCurve: IntegralCurve
    open var ActorGuidStrings: Array<String>

    companion object {
        fun Load(ResourceName: String): MovieSceneActorReferenceSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneActorReferenceSection
        fun GetDefaultObject(): MovieSceneActorReferenceSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneActorReferenceSection
        fun C(Other: UObject): MovieSceneActorReferenceSection
        fun C(Other: Any): MovieSceneActorReferenceSection
    }
}

external open class MovieSceneActorReferenceTrack : MovieScenePropertyTrack {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneActorReferenceTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneActorReferenceTrack
        fun GetDefaultObject(): MovieSceneActorReferenceTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneActorReferenceTrack
        fun C(Other: UObject): MovieSceneActorReferenceTrack
        fun C(Other: Any): MovieSceneActorReferenceTrack
    }
}

external open class MovieSceneAudioSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var Sound: SoundBase
    open var StartFrameOffset: FrameNumber
    open var StartOffset: Number
    open var AudioStartTime: Number
    open var AudioDilationFactor: Number
    open var AudioVolume: Number
    open var SoundVolume: MovieSceneFloatChannel
    open var PitchMultiplier: MovieSceneFloatChannel
    open var Inputs_Float: Any
    open var Inputs_String: Any
    open var Inputs_Bool: Any
    open var Inputs_Int: Any
    open var Inputs_Trigger: Any
    open var AttachActorData: MovieSceneActorReferenceData
    open var bLooping: Boolean
    open var bSuppressSubtitles: Boolean
    open var bOverrideAttenuation: Boolean
    open var AttenuationSettings: SoundAttenuation
    open var OnQueueSubtitles: UnrealEngineDelegate<(Subtitles: Array<SubtitleCue>, CueDuration: Number) -> Unit>
    open var OnAudioFinished: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnAudioPlaybackPercent: UnrealEngineMulticastDelegate<(PlayingSoundWave: SoundWave, PlaybackPercent: Number) -> Unit>
    open fun SetStartOffset(InStartOffset: FrameNumber)
    open fun SetSound(InSound: SoundBase)
    open fun GetStartOffset(): FrameNumber
    open fun GetSound(): SoundBase

    companion object {
        fun Load(ResourceName: String): MovieSceneAudioSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneAudioSection
        fun GetDefaultObject(): MovieSceneAudioSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneAudioSection
        fun C(Other: UObject): MovieSceneAudioSection
        fun C(Other: Any): MovieSceneAudioSection
    }
}

external open class MovieSceneAudioTrack : MovieSceneNameableTrack {
    constructor()
    constructor(Outer: UObject)
    open var AudioSections: Array<MovieSceneSection>
    open var RowHeight: Number

    companion object {
        fun Load(ResourceName: String): MovieSceneAudioTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneAudioTrack
        fun GetDefaultObject(): MovieSceneAudioTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneAudioTrack
        fun C(Other: UObject): MovieSceneAudioTrack
        fun C(Other: Any): MovieSceneAudioTrack
    }
}

external open class MovieSceneBaseValueEvaluatorSystem : MovieSceneEntitySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneBaseValueEvaluatorSystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneBaseValueEvaluatorSystem
        fun GetDefaultObject(): MovieSceneBaseValueEvaluatorSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneBaseValueEvaluatorSystem
        fun C(Other: UObject): MovieSceneBaseValueEvaluatorSystem
        fun C(Other: Any): MovieSceneBaseValueEvaluatorSystem
    }
}

external open class MovieSceneBoolPropertySystem : MovieScenePropertySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneBoolPropertySystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneBoolPropertySystem
        fun GetDefaultObject(): MovieSceneBoolPropertySystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneBoolPropertySystem
        fun C(Other: UObject): MovieSceneBoolPropertySystem
        fun C(Other: Any): MovieSceneBoolPropertySystem
    }
}

external open class MovieSceneBoolTrack : MovieScenePropertyTrack {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneBoolTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneBoolTrack
        fun GetDefaultObject(): MovieSceneBoolTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneBoolTrack
        fun C(Other: UObject): MovieSceneBoolTrack
        fun C(Other: Any): MovieSceneBoolTrack
    }
}

external open class MovieSceneBytePropertySystem : MovieScenePropertySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneBytePropertySystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneBytePropertySystem
        fun GetDefaultObject(): MovieSceneBytePropertySystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneBytePropertySystem
        fun C(Other: UObject): MovieSceneBytePropertySystem
        fun C(Other: Any): MovieSceneBytePropertySystem
    }
}

external open class MovieSceneByteSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var ByteCurve: MovieSceneByteChannel

    companion object {
        fun Load(ResourceName: String): MovieSceneByteSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneByteSection
        fun GetDefaultObject(): MovieSceneByteSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneByteSection
        fun C(Other: UObject): MovieSceneByteSection
        fun C(Other: Any): MovieSceneByteSection
    }
}

external open class MovieSceneByteTrack : MovieScenePropertyTrack {
    constructor()
    constructor(Outer: UObject)
    open var Enum: Enum

    companion object {
        fun Load(ResourceName: String): MovieSceneByteTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneByteTrack
        fun GetDefaultObject(): MovieSceneByteTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneByteTrack
        fun C(Other: UObject): MovieSceneByteTrack
        fun C(Other: Any): MovieSceneByteTrack
    }
}

external open class MovieSceneCameraAnimSectionData {
    open var CameraAnim: CameraAnim
    open var PlayRate: Number
    open var PlayScale: Number
    open var BlendInTime: Number
    open var BlendOutTime: Number
    open var bLooping: Boolean
    open fun clone(): MovieSceneCameraAnimSectionData

    companion object {
        fun C(Other: UObject): MovieSceneCameraAnimSectionData
        fun C(Other: Any): MovieSceneCameraAnimSectionData
    }
}

external open class MovieSceneCameraAnimSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var AnimData: MovieSceneCameraAnimSectionData
    open var CameraAnim: CameraAnim
    open var PlayRate: Number
    open var PlayScale: Number
    open var BlendInTime: Number
    open var BlendOutTime: Number
    open var bLooping: Boolean

    companion object {
        fun Load(ResourceName: String): MovieSceneCameraAnimSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCameraAnimSection
        fun GetDefaultObject(): MovieSceneCameraAnimSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCameraAnimSection
        fun C(Other: UObject): MovieSceneCameraAnimSection
        fun C(Other: Any): MovieSceneCameraAnimSection
    }
}

external open class MovieSceneCameraAnimTrack : MovieSceneNameableTrack {
    constructor()
    constructor(Outer: UObject)
    open var CameraAnimSections: Array<MovieSceneSection>

    companion object {
        fun Load(ResourceName: String): MovieSceneCameraAnimTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCameraAnimTrack
        fun GetDefaultObject(): MovieSceneCameraAnimTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCameraAnimTrack
        fun C(Other: UObject): MovieSceneCameraAnimTrack
        fun C(Other: Any): MovieSceneCameraAnimTrack
    }
}

external open class MovieSceneCameraCutSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var bLockPreviousCamera: Boolean
    open var CameraGuid: Guid
    open var CameraBindingID: MovieSceneObjectBindingID
    open var InitialCameraCutTransform: Transform
    open var bHasInitialCameraCutTransform: Boolean
    open var ThumbnailReferenceOffset: Number
    open fun SetCameraBindingID(InCameraBindingID: MovieSceneObjectBindingID)
    open fun GetCameraBindingID(): MovieSceneObjectBindingID

    companion object {
        fun Load(ResourceName: String): MovieSceneCameraCutSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCameraCutSection
        fun GetDefaultObject(): MovieSceneCameraCutSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCameraCutSection
        fun C(Other: UObject): MovieSceneCameraCutSection
        fun C(Other: Any): MovieSceneCameraCutSection
    }
}

external open class MovieSceneCameraCutTrack : MovieSceneNameableTrack {
    constructor()
    constructor(Outer: UObject)
    open var bCanBlend: Boolean
    open var Sections: Array<MovieSceneSection>

    companion object {
        fun Load(ResourceName: String): MovieSceneCameraCutTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCameraCutTrack
        fun GetDefaultObject(): MovieSceneCameraCutTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCameraCutTrack
        fun C(Other: UObject): MovieSceneCameraCutTrack
        fun C(Other: Any): MovieSceneCameraCutTrack
    }
}

external open class MovieSceneTrackInstanceInput {
    open var Section: MovieSceneSection
    open fun clone(): MovieSceneTrackInstanceInput

    companion object {
        fun C(Other: UObject): MovieSceneTrackInstanceInput
        fun C(Other: Any): MovieSceneTrackInstanceInput
    }
}

external open class MovieSceneTrackInstance : UObject {
    constructor()
    constructor(Outer: UObject)
    open var AnimatedObject: UObject
    open var bIsMasterTrackInstance: Boolean
    open var PrivateLinker: MovieSceneEntitySystemLinker
    open var Inputs: Array<MovieSceneTrackInstanceInput>

    companion object {
        fun Load(ResourceName: String): MovieSceneTrackInstance
        fun Find(Outer: UObject, ResourceName: String): MovieSceneTrackInstance
        fun GetDefaultObject(): MovieSceneTrackInstance
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneTrackInstance
        fun C(Other: UObject): MovieSceneTrackInstance
        fun C(Other: Any): MovieSceneTrackInstance
    }
}

external open class MovieSceneCameraCutTrackInstance : MovieSceneTrackInstance {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneCameraCutTrackInstance
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCameraCutTrackInstance
        fun GetDefaultObject(): MovieSceneCameraCutTrackInstance
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCameraCutTrackInstance
        fun C(Other: UObject): MovieSceneCameraCutTrackInstance
        fun C(Other: Any): MovieSceneCameraCutTrackInstance
    }
}

external open class MovieSceneCameraShakeSectionData {
    open var ShakeClass: UnrealEngineClass
    open var PlayScale: Number
    open var PlaySpace: String /* "CameraLocal" | "World" | "UserDefined" | "ECameraShakePlaySpace_MAX" */
    open var UserDefinedPlaySpace: Rotator
    open fun clone(): MovieSceneCameraShakeSectionData

    companion object {
        fun C(Other: UObject): MovieSceneCameraShakeSectionData
        fun C(Other: Any): MovieSceneCameraShakeSectionData
    }
}

external open class MovieSceneCameraShakeSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var ShakeData: MovieSceneCameraShakeSectionData
    open var ShakeClass: UnrealEngineClass
    open var PlayScale: Number
    open var PlaySpace: String /* "CameraLocal" | "World" | "UserDefined" | "ECameraShakePlaySpace_MAX" */
    open var UserDefinedPlaySpace: Rotator

    companion object {
        fun Load(ResourceName: String): MovieSceneCameraShakeSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCameraShakeSection
        fun GetDefaultObject(): MovieSceneCameraShakeSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCameraShakeSection
        fun C(Other: UObject): MovieSceneCameraShakeSection
        fun C(Other: Any): MovieSceneCameraShakeSection
    }
}

external open class MovieSceneCameraShakeSourceShakeSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var ShakeData: MovieSceneCameraShakeSectionData

    companion object {
        fun Load(ResourceName: String): MovieSceneCameraShakeSourceShakeSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCameraShakeSourceShakeSection
        fun GetDefaultObject(): MovieSceneCameraShakeSourceShakeSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCameraShakeSourceShakeSection
        fun C(Other: UObject): MovieSceneCameraShakeSourceShakeSection
        fun C(Other: Any): MovieSceneCameraShakeSourceShakeSection
    }
}

external open class MovieSceneCameraShakeSourceShakeTrack : MovieSceneNameableTrack {
    constructor()
    constructor(Outer: UObject)
    open var CameraShakeSections: Array<MovieSceneSection>

    companion object {
        fun Load(ResourceName: String): MovieSceneCameraShakeSourceShakeTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCameraShakeSourceShakeTrack
        fun GetDefaultObject(): MovieSceneCameraShakeSourceShakeTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCameraShakeSourceShakeTrack
        fun C(Other: UObject): MovieSceneCameraShakeSourceShakeTrack
        fun C(Other: Any): MovieSceneCameraShakeSourceShakeTrack
    }
}

external open class MovieSceneCameraShakeSourceTrigger {
    open var ShakeClass: UnrealEngineClass
    open var PlayScale: Number
    open var PlaySpace: String /* "CameraLocal" | "World" | "UserDefined" | "ECameraShakePlaySpace_MAX" */
    open var UserDefinedPlaySpace: Rotator
    open fun clone(): MovieSceneCameraShakeSourceTrigger

    companion object {
        fun C(Other: UObject): MovieSceneCameraShakeSourceTrigger
        fun C(Other: Any): MovieSceneCameraShakeSourceTrigger
    }
}

external open class MovieSceneCameraShakeSourceTriggerChannel : MovieSceneChannel {
    open var KeyTimes: Array<FrameNumber>
    open var KeyValues: Array<MovieSceneCameraShakeSourceTrigger>
    override fun clone(): MovieSceneCameraShakeSourceTriggerChannel

    companion object {
        fun C(Other: UObject): MovieSceneCameraShakeSourceTriggerChannel
        fun C(Other: Any): MovieSceneCameraShakeSourceTriggerChannel
    }
}

external open class MovieSceneCameraShakeSourceTriggerSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var Channel: MovieSceneCameraShakeSourceTriggerChannel

    companion object {
        fun Load(ResourceName: String): MovieSceneCameraShakeSourceTriggerSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCameraShakeSourceTriggerSection
        fun GetDefaultObject(): MovieSceneCameraShakeSourceTriggerSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCameraShakeSourceTriggerSection
        fun C(Other: UObject): MovieSceneCameraShakeSourceTriggerSection
        fun C(Other: Any): MovieSceneCameraShakeSourceTriggerSection
    }
}

external open class MovieSceneCameraShakeSourceTriggerTrack : MovieSceneTrack {
    constructor()
    constructor(Outer: UObject)
    open var Sections: Array<MovieSceneSection>

    companion object {
        fun Load(ResourceName: String): MovieSceneCameraShakeSourceTriggerTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCameraShakeSourceTriggerTrack
        fun GetDefaultObject(): MovieSceneCameraShakeSourceTriggerTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCameraShakeSourceTriggerTrack
        fun C(Other: UObject): MovieSceneCameraShakeSourceTriggerTrack
        fun C(Other: Any): MovieSceneCameraShakeSourceTriggerTrack
    }
}

external open class MovieSceneCameraShakeEvaluator : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneCameraShakeEvaluator
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCameraShakeEvaluator
        fun GetDefaultObject(): MovieSceneCameraShakeEvaluator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCameraShakeEvaluator
        fun C(Other: UObject): MovieSceneCameraShakeEvaluator
        fun C(Other: Any): MovieSceneCameraShakeEvaluator
    }
}

external open class MovieSceneCameraShakeTrack : MovieSceneNameableTrack {
    constructor()
    constructor(Outer: UObject)
    open var CameraShakeSections: Array<MovieSceneSection>

    companion object {
        fun Load(ResourceName: String): MovieSceneCameraShakeTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCameraShakeTrack
        fun GetDefaultObject(): MovieSceneCameraShakeTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCameraShakeTrack
        fun C(Other: UObject): MovieSceneCameraShakeTrack
        fun C(Other: Any): MovieSceneCameraShakeTrack
    }
}

external open class MovieSceneSectionParameters {
    open var StartFrameOffset: FrameNumber
    open var bCanLoop: Boolean
    open var EndFrameOffset: FrameNumber
    open var FirstLoopStartFrameOffset: FrameNumber
    open var TimeScale: Number
    open var HierarchicalBias: Number
    open var StartOffset: Number
    open var PrerollTime: Number
    open var PostrollTime: Number
    open fun clone(): MovieSceneSectionParameters

    companion object {
        fun C(Other: UObject): MovieSceneSectionParameters
        fun C(Other: Any): MovieSceneSectionParameters
    }
}

external open class MovieSceneSubSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var Parameters: MovieSceneSectionParameters
    open var StartOffset: Number
    open var TimeScale: Number
    override var PrerollTime: Number
    open var NetworkMask: Number
    open var SubSequence: MovieSceneSequence
    open fun SetSequence(Sequence: MovieSceneSequence)
    open fun GetSequence(): MovieSceneSequence
    open fun GetParentSequenceFrame(InFrame: Number, ParentSequence: MovieSceneSequence): Number

    companion object {
        fun Load(ResourceName: String): MovieSceneSubSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneSubSection
        fun GetDefaultObject(): MovieSceneSubSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneSubSection
        fun C(Other: UObject): MovieSceneSubSection
        fun C(Other: Any): MovieSceneSubSection
        fun GetParentSequenceFrame(Section: MovieSceneSubSection, InFrame: Number, ParentSequence: MovieSceneSequence): Number
    }
}

external open class MovieSceneCinematicShotSection : MovieSceneSubSection {
    constructor()
    constructor(Outer: UObject)
    open var ShotDisplayName: String
    open var DisplayName: String
    open var ThumbnailReferenceOffset: Number
    open fun SetShotDisplayName(InShotDisplayName: String)
    open fun GetShotDisplayName(): String

    companion object {
        fun Load(ResourceName: String): MovieSceneCinematicShotSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCinematicShotSection
        fun GetDefaultObject(): MovieSceneCinematicShotSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCinematicShotSection
        fun C(Other: UObject): MovieSceneCinematicShotSection
        fun C(Other: Any): MovieSceneCinematicShotSection
    }
}

external open class MovieSceneSubTrack : MovieSceneNameableTrack {
    constructor()
    constructor(Outer: UObject)
    open var Sections: Array<MovieSceneSection>

    companion object {
        fun Load(ResourceName: String): MovieSceneSubTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneSubTrack
        fun GetDefaultObject(): MovieSceneSubTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneSubTrack
        fun C(Other: UObject): MovieSceneSubTrack
        fun C(Other: Any): MovieSceneSubTrack
    }
}

external open class MovieSceneCinematicShotTrack : MovieSceneSubTrack {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneCinematicShotTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCinematicShotTrack
        fun GetDefaultObject(): MovieSceneCinematicShotTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCinematicShotTrack
        fun C(Other: UObject): MovieSceneCinematicShotTrack
        fun C(Other: Any): MovieSceneCinematicShotTrack
    }
}

external open class MovieSceneColorPropertySystem : MovieScenePropertySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneColorPropertySystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneColorPropertySystem
        fun GetDefaultObject(): MovieSceneColorPropertySystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneColorPropertySystem
        fun C(Other: UObject): MovieSceneColorPropertySystem
        fun C(Other: Any): MovieSceneColorPropertySystem
    }
}

external open class MovieSceneColorSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var RedCurve: MovieSceneFloatChannel
    open var GreenCurve: MovieSceneFloatChannel
    open var BlueCurve: MovieSceneFloatChannel
    open var AlphaCurve: MovieSceneFloatChannel

    companion object {
        fun Load(ResourceName: String): MovieSceneColorSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneColorSection
        fun GetDefaultObject(): MovieSceneColorSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneColorSection
        fun C(Other: UObject): MovieSceneColorSection
        fun C(Other: Any): MovieSceneColorSection
    }
}

external open class MovieSceneColorTrack : MovieScenePropertyTrack {
    constructor()
    constructor(Outer: UObject)
    open var bIsSlateColor: Boolean

    companion object {
        fun Load(ResourceName: String): MovieSceneColorTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneColorTrack
        fun GetDefaultObject(): MovieSceneColorTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneColorTrack
        fun C(Other: UObject): MovieSceneColorTrack
        fun C(Other: Any): MovieSceneColorTrack
    }
}

external open class MovieSceneComponentAttachmentInvalidatorSystem : MovieSceneEntityInstantiatorSystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneComponentAttachmentInvalidatorSystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneComponentAttachmentInvalidatorSystem
        fun GetDefaultObject(): MovieSceneComponentAttachmentInvalidatorSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneComponentAttachmentInvalidatorSystem
        fun C(Other: UObject): MovieSceneComponentAttachmentInvalidatorSystem
        fun C(Other: Any): MovieSceneComponentAttachmentInvalidatorSystem
    }
}

external open class MovieSceneComponentAttachmentSystem : MovieSceneEntityInstantiatorSystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneComponentAttachmentSystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneComponentAttachmentSystem
        fun GetDefaultObject(): MovieSceneComponentAttachmentSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneComponentAttachmentSystem
        fun C(Other: UObject): MovieSceneComponentAttachmentSystem
        fun C(Other: Any): MovieSceneComponentAttachmentSystem
    }
}

external open class MovieSceneComponentMobilitySystem : MovieSceneEntityInstantiatorSystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneComponentMobilitySystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneComponentMobilitySystem
        fun GetDefaultObject(): MovieSceneComponentMobilitySystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneComponentMobilitySystem
        fun C(Other: UObject): MovieSceneComponentMobilitySystem
        fun C(Other: Any): MovieSceneComponentMobilitySystem
    }
}

external open class MovieSceneComponentTransformSystem : MovieScenePropertySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneComponentTransformSystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneComponentTransformSystem
        fun GetDefaultObject(): MovieSceneComponentTransformSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneComponentTransformSystem
        fun C(Other: UObject): MovieSceneComponentTransformSystem
        fun C(Other: Any): MovieSceneComponentTransformSystem
    }
}

external open class MovieSceneCVarOverrides {
    open var ValuesByCVar: Any
    open fun clone(): MovieSceneCVarOverrides

    companion object {
        fun C(Other: UObject): MovieSceneCVarOverrides
        fun C(Other: Any): MovieSceneCVarOverrides
    }
}

external open class MovieSceneCVarSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var ConsoleVariables: MovieSceneCVarOverrides
    open fun SetFromString(InString: String)
    open fun GetString(): String

    companion object {
        fun Load(ResourceName: String): MovieSceneCVarSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCVarSection
        fun GetDefaultObject(): MovieSceneCVarSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCVarSection
        fun C(Other: UObject): MovieSceneCVarSection
        fun C(Other: Any): MovieSceneCVarSection
    }
}

external open class MovieSceneCVarTrack : MovieSceneNameableTrack {
    constructor()
    constructor(Outer: UObject)
    open var Sections: Array<MovieSceneSection>

    companion object {
        fun Load(ResourceName: String): MovieSceneCVarTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCVarTrack
        fun GetDefaultObject(): MovieSceneCVarTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCVarTrack
        fun C(Other: UObject): MovieSceneCVarTrack
        fun C(Other: Any): MovieSceneCVarTrack
    }
}

external open class MovieSceneCVarTrackInstance : MovieSceneTrackInstance {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneCVarTrackInstance
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCVarTrackInstance
        fun GetDefaultObject(): MovieSceneCVarTrackInstance
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCVarTrackInstance
        fun C(Other: UObject): MovieSceneCVarTrackInstance
        fun C(Other: Any): MovieSceneCVarTrackInstance
    }
}

external open class MovieSceneDataLayerSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var DataLayers: Array<ActorDataLayer>
    open var DesiredState: String /* "Unloaded" | "Loaded" | "Activated" | "EDataLayerRuntimeState_MAX" */
    open var PrerollState: String /* "Unloaded" | "Loaded" | "Activated" | "EDataLayerRuntimeState_MAX" */
    open var bFlushOnUnload: Boolean
    open fun SetPrerollState(InPrerollState: String /* "Unloaded" | "Loaded" | "Activated" | "EDataLayerRuntimeState_MAX" */)
    open fun SetFlushOnUnload(bFlushOnUnload: Boolean)
    open fun SetDesiredState(InDesiredState: String /* "Unloaded" | "Loaded" | "Activated" | "EDataLayerRuntimeState_MAX" */)
    open fun SetDataLayers(InDataLayers: Array<ActorDataLayer>)
    open fun GetPrerollState(): String /* "Unloaded" | "Loaded" | "Activated" | "EDataLayerRuntimeState_MAX" */
    open fun GetFlushOnUnload(): Boolean
    open fun GetDesiredState(): String /* "Unloaded" | "Loaded" | "Activated" | "EDataLayerRuntimeState_MAX" */
    open fun GetDataLayers(): Array<ActorDataLayer>

    companion object {
        fun Load(ResourceName: String): MovieSceneDataLayerSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneDataLayerSection
        fun GetDefaultObject(): MovieSceneDataLayerSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneDataLayerSection
        fun C(Other: UObject): MovieSceneDataLayerSection
        fun C(Other: Any): MovieSceneDataLayerSection
    }
}

external open class MovieSceneDataLayerSystem : MovieSceneEntitySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneDataLayerSystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneDataLayerSystem
        fun GetDefaultObject(): MovieSceneDataLayerSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneDataLayerSystem
        fun C(Other: UObject): MovieSceneDataLayerSystem
        fun C(Other: Any): MovieSceneDataLayerSystem
    }
}

external open class MovieSceneDataLayerTrack : MovieSceneNameableTrack {
    constructor()
    constructor(Outer: UObject)
    open var Sections: Array<MovieSceneSection>

    companion object {
        fun Load(ResourceName: String): MovieSceneDataLayerTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneDataLayerTrack
        fun GetDefaultObject(): MovieSceneDataLayerTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneDataLayerTrack
        fun C(Other: UObject): MovieSceneDataLayerTrack
        fun C(Other: Any): MovieSceneDataLayerTrack
    }
}

external open class MovieSceneDeferredComponentMovementSystem : MovieSceneEntitySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneDeferredComponentMovementSystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneDeferredComponentMovementSystem
        fun GetDefaultObject(): MovieSceneDeferredComponentMovementSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneDeferredComponentMovementSystem
        fun C(Other: UObject): MovieSceneDeferredComponentMovementSystem
        fun C(Other: Any): MovieSceneDeferredComponentMovementSystem
    }
}

external open class MovieSceneDoublePropertySystem : MovieScenePropertySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneDoublePropertySystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneDoublePropertySystem
        fun GetDefaultObject(): MovieSceneDoublePropertySystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneDoublePropertySystem
        fun C(Other: UObject): MovieSceneDoublePropertySystem
        fun C(Other: Any): MovieSceneDoublePropertySystem
    }
}

external open class MovieSceneDoubleSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var DoubleCurve: MovieSceneDoubleChannel

    companion object {
        fun Load(ResourceName: String): MovieSceneDoubleSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneDoubleSection
        fun GetDefaultObject(): MovieSceneDoubleSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneDoubleSection
        fun C(Other: UObject): MovieSceneDoubleSection
        fun C(Other: Any): MovieSceneDoubleSection
    }
}

external open class MovieSceneDoubleTrack : MovieScenePropertyTrack {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneDoubleTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneDoubleTrack
        fun GetDefaultObject(): MovieSceneDoubleTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneDoubleTrack
        fun C(Other: UObject): MovieSceneDoubleTrack
        fun C(Other: Any): MovieSceneDoubleTrack
    }
}

external open class MovieSceneEnumPropertySystem : MovieScenePropertySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneEnumPropertySystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneEnumPropertySystem
        fun GetDefaultObject(): MovieSceneEnumPropertySystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneEnumPropertySystem
        fun C(Other: UObject): MovieSceneEnumPropertySystem
        fun C(Other: Any): MovieSceneEnumPropertySystem
    }
}

external open class MovieSceneEnumSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var EnumCurve: MovieSceneByteChannel

    companion object {
        fun Load(ResourceName: String): MovieSceneEnumSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneEnumSection
        fun GetDefaultObject(): MovieSceneEnumSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneEnumSection
        fun C(Other: UObject): MovieSceneEnumSection
        fun C(Other: Any): MovieSceneEnumSection
    }
}

external open class MovieSceneEnumTrack : MovieScenePropertyTrack {
    constructor()
    constructor(Outer: UObject)
    open var Enum: Enum

    companion object {
        fun Load(ResourceName: String): MovieSceneEnumTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneEnumTrack
        fun GetDefaultObject(): MovieSceneEnumTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneEnumTrack
        fun C(Other: UObject): MovieSceneEnumTrack
        fun C(Other: Any): MovieSceneEnumTrack
    }
}

external open class MovieSceneEulerTransformPropertySystem : MovieScenePropertySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneEulerTransformPropertySystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneEulerTransformPropertySystem
        fun GetDefaultObject(): MovieSceneEulerTransformPropertySystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneEulerTransformPropertySystem
        fun C(Other: UObject): MovieSceneEulerTransformPropertySystem
        fun C(Other: Any): MovieSceneEulerTransformPropertySystem
    }
}

external open class MovieSceneEulerTransformTrack : MovieScenePropertyTrack {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneEulerTransformTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneEulerTransformTrack
        fun GetDefaultObject(): MovieSceneEulerTransformTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneEulerTransformTrack
        fun C(Other: UObject): MovieSceneEulerTransformTrack
        fun C(Other: Any): MovieSceneEulerTransformTrack
    }
}

external open class MovieSceneEventRepeaterSection : MovieSceneEventSectionBase {
    constructor()
    constructor(Outer: UObject)
    open var Event: MovieSceneEvent

    companion object {
        fun Load(ResourceName: String): MovieSceneEventRepeaterSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneEventRepeaterSection
        fun GetDefaultObject(): MovieSceneEventRepeaterSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneEventRepeaterSection
        fun C(Other: UObject): MovieSceneEventRepeaterSection
        fun C(Other: Any): MovieSceneEventRepeaterSection
    }
}

external open class NameCurveKey {
    open var Time: Number
    open var Value: String
    open fun clone(): NameCurveKey

    companion object {
        fun C(Other: UObject): NameCurveKey
        fun C(Other: Any): NameCurveKey
    }
}

external open class NameCurve : IndexedCurve {
    open var Keys: Array<NameCurveKey>
    override fun clone(): NameCurve

    companion object {
        fun C(Other: UObject): NameCurve
        fun C(Other: Any): NameCurve
    }
}

external open class MovieSceneEventParameters {
    open fun clone(): MovieSceneEventParameters

    companion object {
        fun C(Other: UObject): MovieSceneEventParameters
        fun C(Other: Any): MovieSceneEventParameters
    }
}

external open class EventPayload {
    open var EventName: String
    open var Parameters: MovieSceneEventParameters
    open fun clone(): EventPayload

    companion object {
        fun C(Other: UObject): EventPayload
        fun C(Other: Any): EventPayload
    }
}

external open class MovieSceneEventSectionData : MovieSceneChannel {
    open var Times: Array<FrameNumber>
    open var KeyValues: Array<EventPayload>
    open var KeyTimes: Array<Number>
    override fun clone(): MovieSceneEventSectionData

    companion object {
        fun C(Other: UObject): MovieSceneEventSectionData
        fun C(Other: Any): MovieSceneEventSectionData
    }
}

external open class MovieSceneEventSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var Events: NameCurve
    open var EventData: MovieSceneEventSectionData

    companion object {
        fun Load(ResourceName: String): MovieSceneEventSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneEventSection
        fun GetDefaultObject(): MovieSceneEventSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneEventSection
        fun C(Other: UObject): MovieSceneEventSection
        fun C(Other: Any): MovieSceneEventSection
    }
}

external open class MovieSceneEventSystem : MovieSceneEntitySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneEventSystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneEventSystem
        fun GetDefaultObject(): MovieSceneEventSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneEventSystem
        fun C(Other: UObject): MovieSceneEventSystem
        fun C(Other: Any): MovieSceneEventSystem
    }
}

external open class MovieScenePreSpawnEventSystem : MovieSceneEventSystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieScenePreSpawnEventSystem
        fun Find(Outer: UObject, ResourceName: String): MovieScenePreSpawnEventSystem
        fun GetDefaultObject(): MovieScenePreSpawnEventSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScenePreSpawnEventSystem
        fun C(Other: UObject): MovieScenePreSpawnEventSystem
        fun C(Other: Any): MovieScenePreSpawnEventSystem
    }
}

external open class MovieScenePostSpawnEventSystem : MovieSceneEventSystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieScenePostSpawnEventSystem
        fun Find(Outer: UObject, ResourceName: String): MovieScenePostSpawnEventSystem
        fun GetDefaultObject(): MovieScenePostSpawnEventSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScenePostSpawnEventSystem
        fun C(Other: UObject): MovieScenePostSpawnEventSystem
        fun C(Other: Any): MovieScenePostSpawnEventSystem
    }
}

external open class MovieScenePostEvalEventSystem : MovieSceneEventSystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieScenePostEvalEventSystem
        fun Find(Outer: UObject, ResourceName: String): MovieScenePostEvalEventSystem
        fun GetDefaultObject(): MovieScenePostEvalEventSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScenePostEvalEventSystem
        fun C(Other: UObject): MovieScenePostEvalEventSystem
        fun C(Other: Any): MovieScenePostEvalEventSystem
    }
}

external object EFireEventsAtPosition {
    var AtStartOfEvaluation: String /* "AtStartOfEvaluation" */
    var AtEndOfEvaluation: String /* "AtEndOfEvaluation" */
    var AfterSpawn: String /* "AfterSpawn" */
    var EFireEventsAtPosition_MAX: String /* "EFireEventsAtPosition_MAX" */
}

external open class MovieSceneEventChannel : MovieSceneChannel {
    open var KeyTimes: Array<FrameNumber>
    open var KeyValues: Array<MovieSceneEvent>
    override fun clone(): MovieSceneEventChannel

    companion object {
        fun C(Other: UObject): MovieSceneEventChannel
        fun C(Other: Any): MovieSceneEventChannel
    }
}

external open class MovieSceneEventTriggerSection : MovieSceneEventSectionBase {
    constructor()
    constructor(Outer: UObject)
    open var EventChannel: MovieSceneEventChannel

    companion object {
        fun Load(ResourceName: String): MovieSceneEventTriggerSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneEventTriggerSection
        fun GetDefaultObject(): MovieSceneEventTriggerSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneEventTriggerSection
        fun C(Other: UObject): MovieSceneEventTriggerSection
        fun C(Other: Any): MovieSceneEventTriggerSection
    }
}

external open class MovieSceneEventTrack : MovieSceneNameableTrack {
    constructor()
    constructor(Outer: UObject)
    open var bFireEventsWhenForwards: Boolean
    open var bFireEventsWhenBackwards: Boolean
    open var EventPosition: String /* "AtStartOfEvaluation" | "AtEndOfEvaluation" | "AfterSpawn" | "EFireEventsAtPosition_MAX" */
    open var Sections: Array<MovieSceneSection>
    open fun AddEventRepeaterSection(): MovieSceneEventRepeaterSection
    open fun AddEventTriggerSection(): MovieSceneEventTriggerSection

    companion object {
        fun Load(ResourceName: String): MovieSceneEventTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneEventTrack
        fun GetDefaultObject(): MovieSceneEventTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneEventTrack
        fun C(Other: UObject): MovieSceneEventTrack
        fun C(Other: Any): MovieSceneEventTrack
        fun AddEventRepeaterSection(InTrack: MovieSceneEventTrack): MovieSceneEventRepeaterSection
        fun AddEventTriggerSection(InTrack: MovieSceneEventTrack): MovieSceneEventTriggerSection
    }
}

external open class MovieSceneFadeSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var FloatCurve: MovieSceneFloatChannel
    open var FadeColor: LinearColor
    open var bFadeAudio: Boolean

    companion object {
        fun Load(ResourceName: String): MovieSceneFadeSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneFadeSection
        fun GetDefaultObject(): MovieSceneFadeSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneFadeSection
        fun C(Other: UObject): MovieSceneFadeSection
        fun C(Other: Any): MovieSceneFadeSection
    }
}

external open class MovieSceneFloatTrack : MovieScenePropertyTrack {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneFloatTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneFloatTrack
        fun GetDefaultObject(): MovieSceneFloatTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneFloatTrack
        fun C(Other: UObject): MovieSceneFloatTrack
        fun C(Other: Any): MovieSceneFloatTrack
    }
}

external open class MovieSceneFadeTrack : MovieSceneFloatTrack {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneFadeTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneFadeTrack
        fun GetDefaultObject(): MovieSceneFadeTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneFadeTrack
        fun C(Other: UObject): MovieSceneFadeTrack
        fun C(Other: Any): MovieSceneFadeTrack
    }
}

external open class MovieSceneFloatPropertySystem : MovieScenePropertySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneFloatPropertySystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneFloatPropertySystem
        fun GetDefaultObject(): MovieSceneFloatPropertySystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneFloatPropertySystem
        fun C(Other: UObject): MovieSceneFloatPropertySystem
        fun C(Other: Any): MovieSceneFloatPropertySystem
    }
}

external open class MovieSceneFloatSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var FloatCurve: MovieSceneFloatChannel

    companion object {
        fun Load(ResourceName: String): MovieSceneFloatSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneFloatSection
        fun GetDefaultObject(): MovieSceneFloatSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneFloatSection
        fun C(Other: UObject): MovieSceneFloatSection
        fun C(Other: Any): MovieSceneFloatSection
    }
}

external open class MovieSceneHierarchicalBiasSystem : MovieSceneEntityInstantiatorSystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneHierarchicalBiasSystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneHierarchicalBiasSystem
        fun GetDefaultObject(): MovieSceneHierarchicalBiasSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneHierarchicalBiasSystem
        fun C(Other: UObject): MovieSceneHierarchicalBiasSystem
        fun C(Other: Any): MovieSceneHierarchicalBiasSystem
    }
}

external open class MovieSceneInitialValueSystem : MovieSceneEntityInstantiatorSystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneInitialValueSystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneInitialValueSystem
        fun GetDefaultObject(): MovieSceneInitialValueSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneInitialValueSystem
        fun C(Other: UObject): MovieSceneInitialValueSystem
        fun C(Other: Any): MovieSceneInitialValueSystem
    }
}

external open class MovieSceneIntegerPropertySystem : MovieScenePropertySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneIntegerPropertySystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneIntegerPropertySystem
        fun GetDefaultObject(): MovieSceneIntegerPropertySystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneIntegerPropertySystem
        fun C(Other: UObject): MovieSceneIntegerPropertySystem
        fun C(Other: Any): MovieSceneIntegerPropertySystem
    }
}

external open class MovieSceneIntegerSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var IntegerCurve: MovieSceneIntegerChannel

    companion object {
        fun Load(ResourceName: String): MovieSceneIntegerSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneIntegerSection
        fun GetDefaultObject(): MovieSceneIntegerSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneIntegerSection
        fun C(Other: UObject): MovieSceneIntegerSection
        fun C(Other: Any): MovieSceneIntegerSection
    }
}

external open class MovieSceneIntegerTrack : MovieScenePropertyTrack {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneIntegerTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneIntegerTrack
        fun GetDefaultObject(): MovieSceneIntegerTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneIntegerTrack
        fun C(Other: UObject): MovieSceneIntegerTrack
        fun C(Other: Any): MovieSceneIntegerTrack
    }
}

external open class MovieSceneInterrogatedPropertyInstantiatorSystem : MovieSceneEntityInstantiatorSystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneInterrogatedPropertyInstantiatorSystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneInterrogatedPropertyInstantiatorSystem
        fun GetDefaultObject(): MovieSceneInterrogatedPropertyInstantiatorSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneInterrogatedPropertyInstantiatorSystem
        fun C(Other: UObject): MovieSceneInterrogatedPropertyInstantiatorSystem
        fun C(Other: Any): MovieSceneInterrogatedPropertyInstantiatorSystem
    }
}

external object ELevelVisibility {
    var Visible: String /* "Visible" */
    var Hidden: String /* "Hidden" */
    var ELevelVisibility_MAX: String /* "ELevelVisibility_MAX" */
}

external open class MovieSceneLevelVisibilitySection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var Visibility: String /* "Visible" | "Hidden" | "ELevelVisibility_MAX" */
    open var LevelNames: Array<String>
    open fun SetVisibility(InVisibility: String /* "Visible" | "Hidden" | "ELevelVisibility_MAX" */)
    open fun SetLevelNames(InLevelNames: Array<String>)
    open fun GetVisibility(): String /* "Visible" | "Hidden" | "ELevelVisibility_MAX" */
    open fun GetLevelNames(): Array<String>

    companion object {
        fun Load(ResourceName: String): MovieSceneLevelVisibilitySection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneLevelVisibilitySection
        fun GetDefaultObject(): MovieSceneLevelVisibilitySection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneLevelVisibilitySection
        fun C(Other: UObject): MovieSceneLevelVisibilitySection
        fun C(Other: Any): MovieSceneLevelVisibilitySection
    }
}

external open class MovieSceneLevelVisibilitySystem : MovieSceneEntitySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneLevelVisibilitySystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneLevelVisibilitySystem
        fun GetDefaultObject(): MovieSceneLevelVisibilitySystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneLevelVisibilitySystem
        fun C(Other: UObject): MovieSceneLevelVisibilitySystem
        fun C(Other: Any): MovieSceneLevelVisibilitySystem
    }
}

external open class MovieSceneLevelVisibilityTrack : MovieSceneNameableTrack {
    constructor()
    constructor(Outer: UObject)
    open var Sections: Array<MovieSceneSection>

    companion object {
        fun Load(ResourceName: String): MovieSceneLevelVisibilityTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneLevelVisibilityTrack
        fun GetDefaultObject(): MovieSceneLevelVisibilityTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneLevelVisibilityTrack
        fun C(Other: UObject): MovieSceneLevelVisibilityTrack
        fun C(Other: Any): MovieSceneLevelVisibilityTrack
    }
}

external open class MovieSceneMaterialParameterCollectionTrack : MovieSceneMaterialTrack {
    constructor()
    constructor(Outer: UObject)
    open var MPC: MaterialParameterCollection

    companion object {
        fun Load(ResourceName: String): MovieSceneMaterialParameterCollectionTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneMaterialParameterCollectionTrack
        fun GetDefaultObject(): MovieSceneMaterialParameterCollectionTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneMaterialParameterCollectionTrack
        fun C(Other: UObject): MovieSceneMaterialParameterCollectionTrack
        fun C(Other: Any): MovieSceneMaterialParameterCollectionTrack
    }
}

external open class MovieSceneComponentMaterialTrack : MovieSceneMaterialTrack {
    constructor()
    constructor(Outer: UObject)
    open var MaterialIndex: Number

    companion object {
        fun Load(ResourceName: String): MovieSceneComponentMaterialTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneComponentMaterialTrack
        fun GetDefaultObject(): MovieSceneComponentMaterialTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneComponentMaterialTrack
        fun C(Other: UObject): MovieSceneComponentMaterialTrack
        fun C(Other: Any): MovieSceneComponentMaterialTrack
    }
}

external open class MovieSceneMotionVectorSimulationSystem : MovieSceneEntitySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneMotionVectorSimulationSystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneMotionVectorSimulationSystem
        fun GetDefaultObject(): MovieSceneMotionVectorSimulationSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneMotionVectorSimulationSystem
        fun C(Other: UObject): MovieSceneMotionVectorSimulationSystem
        fun C(Other: Any): MovieSceneMotionVectorSimulationSystem
    }
}

external open class MovieSceneObjectPathChannelKeyValue {
    open var SoftPtr: UObject
    open var HardPtr: UObject
    open fun clone(): MovieSceneObjectPathChannelKeyValue

    companion object {
        fun C(Other: UObject): MovieSceneObjectPathChannelKeyValue
        fun C(Other: Any): MovieSceneObjectPathChannelKeyValue
    }
}

external open class MovieSceneObjectPathChannel : MovieSceneChannel {
    open var PropertyClass: UnrealEngineClass
    open var Times: Array<FrameNumber>
    open var Values: Array<MovieSceneObjectPathChannelKeyValue>
    open var DefaultValue: MovieSceneObjectPathChannelKeyValue
    override fun clone(): MovieSceneObjectPathChannel

    companion object {
        fun C(Other: UObject): MovieSceneObjectPathChannel
        fun C(Other: Any): MovieSceneObjectPathChannel
    }
}

external open class MovieSceneObjectPropertySection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var ObjectChannel: MovieSceneObjectPathChannel

    companion object {
        fun Load(ResourceName: String): MovieSceneObjectPropertySection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneObjectPropertySection
        fun GetDefaultObject(): MovieSceneObjectPropertySection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneObjectPropertySection
        fun C(Other: UObject): MovieSceneObjectPropertySection
        fun C(Other: Any): MovieSceneObjectPropertySection
    }
}

external open class MovieSceneObjectPropertyTrack : MovieScenePropertyTrack {
    constructor()
    constructor(Outer: UObject)
    open var PropertyClass: UnrealEngineClass
    open fun GetObjectPropertyClass(): UnrealEngineClass
    open fun SetObjectPropertyClass(PropertyClass: UnrealEngineClass)

    companion object {
        fun Load(ResourceName: String): MovieSceneObjectPropertyTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneObjectPropertyTrack
        fun GetDefaultObject(): MovieSceneObjectPropertyTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneObjectPropertyTrack
        fun C(Other: UObject): MovieSceneObjectPropertyTrack
        fun C(Other: Any): MovieSceneObjectPropertyTrack
        fun GetObjectPropertyClass(Track: MovieSceneObjectPropertyTrack): UnrealEngineClass
        fun SetObjectPropertyClass(Track: MovieSceneObjectPropertyTrack, PropertyClass: UnrealEngineClass)
    }
}

external open class MovieSceneParticleParameterTrack : MovieSceneNameableTrack {
    constructor()
    constructor(Outer: UObject)
    open var Sections: Array<MovieSceneSection>

    companion object {
        fun Load(ResourceName: String): MovieSceneParticleParameterTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneParticleParameterTrack
        fun GetDefaultObject(): MovieSceneParticleParameterTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneParticleParameterTrack
        fun C(Other: UObject): MovieSceneParticleParameterTrack
        fun C(Other: Any): MovieSceneParticleParameterTrack
    }
}

external open class MovieSceneParticleChannel : MovieSceneByteChannel {
    override fun clone(): MovieSceneParticleChannel

    companion object {
        fun C(Other: UObject): MovieSceneParticleChannel
        fun C(Other: Any): MovieSceneParticleChannel
    }
}

external open class MovieSceneParticleSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var ParticleKeys: MovieSceneParticleChannel

    companion object {
        fun Load(ResourceName: String): MovieSceneParticleSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneParticleSection
        fun GetDefaultObject(): MovieSceneParticleSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneParticleSection
        fun C(Other: UObject): MovieSceneParticleSection
        fun C(Other: Any): MovieSceneParticleSection
    }
}

external open class MovieSceneParticleTrack : MovieSceneNameableTrack {
    constructor()
    constructor(Outer: UObject)
    open var ParticleSections: Array<MovieSceneSection>

    companion object {
        fun Load(ResourceName: String): MovieSceneParticleTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneParticleTrack
        fun GetDefaultObject(): MovieSceneParticleTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneParticleTrack
        fun C(Other: UObject): MovieSceneParticleTrack
        fun C(Other: Any): MovieSceneParticleTrack
    }
}

external open class MovieSceneBlenderSystem : MovieSceneEntitySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneBlenderSystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneBlenderSystem
        fun GetDefaultObject(): MovieSceneBlenderSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneBlenderSystem
        fun C(Other: UObject): MovieSceneBlenderSystem
        fun C(Other: Any): MovieSceneBlenderSystem
    }
}

external open class MovieScenePiecewiseBoolBlenderSystem : MovieSceneBlenderSystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieScenePiecewiseBoolBlenderSystem
        fun Find(Outer: UObject, ResourceName: String): MovieScenePiecewiseBoolBlenderSystem
        fun GetDefaultObject(): MovieScenePiecewiseBoolBlenderSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScenePiecewiseBoolBlenderSystem
        fun C(Other: UObject): MovieScenePiecewiseBoolBlenderSystem
        fun C(Other: Any): MovieScenePiecewiseBoolBlenderSystem
    }
}

external open class MovieScenePiecewiseByteBlenderSystem : MovieSceneBlenderSystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieScenePiecewiseByteBlenderSystem
        fun Find(Outer: UObject, ResourceName: String): MovieScenePiecewiseByteBlenderSystem
        fun GetDefaultObject(): MovieScenePiecewiseByteBlenderSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScenePiecewiseByteBlenderSystem
        fun C(Other: UObject): MovieScenePiecewiseByteBlenderSystem
        fun C(Other: Any): MovieScenePiecewiseByteBlenderSystem
    }
}

external open class MovieScenePiecewiseDoubleBlenderSystem : MovieSceneBlenderSystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieScenePiecewiseDoubleBlenderSystem
        fun Find(Outer: UObject, ResourceName: String): MovieScenePiecewiseDoubleBlenderSystem
        fun GetDefaultObject(): MovieScenePiecewiseDoubleBlenderSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScenePiecewiseDoubleBlenderSystem
        fun C(Other: UObject): MovieScenePiecewiseDoubleBlenderSystem
        fun C(Other: Any): MovieScenePiecewiseDoubleBlenderSystem
    }
}

external open class MovieScenePiecewiseEnumBlenderSystem : MovieSceneBlenderSystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieScenePiecewiseEnumBlenderSystem
        fun Find(Outer: UObject, ResourceName: String): MovieScenePiecewiseEnumBlenderSystem
        fun GetDefaultObject(): MovieScenePiecewiseEnumBlenderSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScenePiecewiseEnumBlenderSystem
        fun C(Other: UObject): MovieScenePiecewiseEnumBlenderSystem
        fun C(Other: Any): MovieScenePiecewiseEnumBlenderSystem
    }
}

external open class MovieScenePiecewiseFloatBlenderSystem : MovieSceneBlenderSystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieScenePiecewiseFloatBlenderSystem
        fun Find(Outer: UObject, ResourceName: String): MovieScenePiecewiseFloatBlenderSystem
        fun GetDefaultObject(): MovieScenePiecewiseFloatBlenderSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScenePiecewiseFloatBlenderSystem
        fun C(Other: UObject): MovieScenePiecewiseFloatBlenderSystem
        fun C(Other: Any): MovieScenePiecewiseFloatBlenderSystem
    }
}

external open class MovieScenePiecewiseIntegerBlenderSystem : MovieSceneBlenderSystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieScenePiecewiseIntegerBlenderSystem
        fun Find(Outer: UObject, ResourceName: String): MovieScenePiecewiseIntegerBlenderSystem
        fun GetDefaultObject(): MovieScenePiecewiseIntegerBlenderSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScenePiecewiseIntegerBlenderSystem
        fun C(Other: UObject): MovieScenePiecewiseIntegerBlenderSystem
        fun C(Other: Any): MovieScenePiecewiseIntegerBlenderSystem
    }
}

external object EMovieScenePlayerStatus {
    var Stopped: String /* "Stopped" */
    var Playing: String /* "Playing" */
    var Scrubbing: String /* "Scrubbing" */
    var Jumping: String /* "Jumping" */
    var Stepping: String /* "Stepping" */
    var Paused: String /* "Paused" */
    var MAX: String /* "MAX" */
}

external open class MovieSceneSequenceLoopCount {
    open var Value: Number
    open fun clone(): MovieSceneSequenceLoopCount

    companion object {
        fun C(Other: UObject): MovieSceneSequenceLoopCount
        fun C(Other: Any): MovieSceneSequenceLoopCount
    }
}

external open class MovieSceneSequencePlaybackSettings {
    open var bAutoPlay: Boolean
    open var LoopCount: MovieSceneSequenceLoopCount
    open var PlayRate: Number
    open var StartTime: Number
    open var bRandomStartTime: Boolean
    open var bRestoreState: Boolean
    open var bDisableMovementInput: Boolean
    open var bDisableLookAtInput: Boolean
    open var bHidePlayer: Boolean
    open var bHideHud: Boolean
    open var bDisableCameraCuts: Boolean
    open var bPauseAtEnd: Boolean
    open fun clone(): MovieSceneSequencePlaybackSettings

    companion object {
        fun C(Other: UObject): MovieSceneSequencePlaybackSettings
        fun C(Other: Any): MovieSceneSequencePlaybackSettings
    }
}

external open class MovieSceneSequenceReplProperties {
    open var LastKnownPosition: FrameTime
    open var LastKnownStatus: String /* "Stopped" | "Playing" | "Scrubbing" | "Jumping" | "Stepping" | "Paused" | "MAX" */
    open var LastKnownNumLoops: Number
    open fun clone(): MovieSceneSequenceReplProperties

    companion object {
        fun C(Other: UObject): MovieSceneSequenceReplProperties
        fun C(Other: Any): MovieSceneSequenceReplProperties
    }
}

external open class MovieSceneSequenceActorPointers {
    open var SequenceActor: Actor
    open var SequenceActorInterface: Any
    open fun clone(): MovieSceneSequenceActorPointers

    companion object {
        fun C(Other: UObject): MovieSceneSequenceActorPointers
        fun C(Other: Any): MovieSceneSequenceActorPointers
    }
}

external open class MovieSceneSequenceTickManager : UObject {
    constructor()
    constructor(Outer: UObject)
    open var SequenceActors: Array<MovieSceneSequenceActorPointers>
    open var Linker: MovieSceneEntitySystemLinker

    companion object {
        fun Load(ResourceName: String): MovieSceneSequenceTickManager
        fun Find(Outer: UObject, ResourceName: String): MovieSceneSequenceTickManager
        fun GetDefaultObject(): MovieSceneSequenceTickManager
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneSequenceTickManager
        fun C(Other: UObject): MovieSceneSequenceTickManager
        fun C(Other: Any): MovieSceneSequenceTickManager
    }
}

external object EMovieScenePositionType {
    var Frame: String /* "Frame" */
    var Time: String /* "Time" */
    var MarkedFrame: String /* "MarkedFrame" */
    var EMovieScenePositionType_MAX: String /* "EMovieScenePositionType_MAX" */
}

external object EUpdatePositionMethod {
    var Play: String /* "Play" */
    var Jump: String /* "Jump" */
    var Scrub: String /* "Scrub" */
    var EUpdatePositionMethod_MAX: String /* "EUpdatePositionMethod_MAX" */
}

external open class MovieSceneSequencePlaybackParams {
    open var Frame: FrameTime
    open var Time: Number
    open var MarkedFrame: String
    open var PositionType: String /* "Frame" | "Time" | "MarkedFrame" | "EMovieScenePositionType_MAX" */
    open var UpdateMethod: String /* "Play" | "Jump" | "Scrub" | "EUpdatePositionMethod_MAX" */
    open var bHasJumped: Boolean
    open fun clone(): MovieSceneSequencePlaybackParams
    open fun PlayTo()

    companion object {
        fun C(Other: UObject): MovieSceneSequencePlaybackParams
        fun C(Other: Any): MovieSceneSequencePlaybackParams
        fun PlayTo(PlaybackParams: MovieSceneSequencePlaybackParams)
    }
}

external open class MovieSceneSequencePlayToParams {
    open var bExclusive: Boolean
    open fun clone(): MovieSceneSequencePlayToParams

    companion object {
        fun C(Other: UObject): MovieSceneSequencePlayToParams
        fun C(Other: Any): MovieSceneSequencePlayToParams
    }
}

external open class MovieSceneSequencePlayer : UObject {
    constructor()
    constructor(Outer: UObject)
    open var OnPlay: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnPlayReverse: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnStop: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnPause: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnFinished: UnrealEngineMulticastDelegate<() -> Unit>
    open var Status: String /* "Stopped" | "Playing" | "Scrubbing" | "Jumping" | "Stepping" | "Paused" | "MAX" */
    open var bReversePlayback: Boolean
    open var Sequence: MovieSceneSequence
    open var StartTime: FrameNumber
    open var DurationFrames: Number
    open var DurationSubFrames: Number
    open var CurrentNumLoops: Number
    open var PlaybackSettings: MovieSceneSequencePlaybackSettings
    open var RootTemplateInstance: MovieSceneRootEvaluationTemplateInstance
    open var NetSyncProps: MovieSceneSequenceReplProperties
    open var PlaybackClient: Any
    open var TickManager: MovieSceneSequenceTickManager
    open fun StopAtCurrentTime()
    open fun Stop()
    open fun SetPlayRange(StartTime: Number, Duration: Number)
    open fun SetPlayRate(PlayRate: Number)
    open fun SetPlaybackPosition(PlaybackParams: MovieSceneSequencePlaybackParams)
    open fun SetFrameRate(FrameRate: FrameRate)
    open fun SetPlayRange(StartFrame: Number, Duration: Number, SubFrames: Number)
    open fun SetDisableCameraCuts(bInDisableCameraCuts: Boolean)
    open fun ScrubTo(TimeInSeconds: Number)
    open fun ScrubToMarkedFrame(InLabel: String): Boolean
    open fun ScrubTo(NewPosition: FrameTime)
    open fun Scrub()
    open fun RPC_OnStopEvent(StoppedTime: FrameTime)
    open fun RPC_OnFinishPlaybackEvent(StoppedTime: FrameTime)
    open fun RPC_ExplicitServerUpdateEvent(Method: String /* "Play" | "Jump" | "Scrub" | "EUpdatePositionMethod_MAX" */, RelevantTime: FrameTime)
    open fun RestoreState()
    open fun PlayTo(TimeInSeconds: Number)
    open fun PlayToMarkedFrame(InLabel: String): Boolean
    open fun PlayTo(NewPosition: FrameTime)
    open fun PlayTo(PlaybackParams: MovieSceneSequencePlaybackParams, PlayToParams: MovieSceneSequencePlayToParams)
    open fun PlayReverse()
    open fun PlayLooping(NumLoops: Number)
    open fun Play()
    open fun Pause()
    open fun JumpTo(TimeInSeconds: Number)
    open fun JumpToMarkedFrame(InLabel: String): Boolean
    open fun JumpTo(NewPosition: FrameTime)
    open fun IsReversed(): Boolean
    open fun IsPlaying(): Boolean
    open fun IsPaused(): Boolean
    open fun GoToEndAndStop()
    open fun GetStartTime(): QualifiedFrameTime
    open fun GetSequenceName(bAddClientInfo: Boolean): String
    open fun GetSequence(): MovieSceneSequence
    open fun GetPlayRate(): Number
    open fun GetObjectBindings(InObject: UObject): Array<MovieSceneObjectBindingID>
    open fun GetFrameRate(): FrameRate
    open fun GetFrameDuration(): Number
    open fun GetEndTime(): QualifiedFrameTime
    open fun GetDuration(): QualifiedFrameTime
    open fun GetDisableCameraCuts(): Boolean
    open fun GetCurrentTime(): QualifiedFrameTime
    open fun GetBoundObjects(ObjectBinding: MovieSceneObjectBindingID): Array<UObject>
    open fun ChangePlaybackDirection()

    companion object {
        fun Load(ResourceName: String): MovieSceneSequencePlayer
        fun Find(Outer: UObject, ResourceName: String): MovieSceneSequencePlayer
        fun GetDefaultObject(): MovieSceneSequencePlayer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneSequencePlayer
        fun C(Other: UObject): MovieSceneSequencePlayer
        fun C(Other: Any): MovieSceneSequencePlayer
    }
}

external open class MovieSceneAsyncAction_SequencePrediction : BlueprintAsyncActionBase {
    constructor()
    constructor(Outer: UObject)
    open var Result: UnrealEngineMulticastDelegate<(PredictedTransform: Transform) -> Unit>
    open var Failure: UnrealEngineMulticastDelegate<() -> Unit>
    open var SequencePlayer: MovieSceneSequencePlayer
    open var SceneComponent: SceneComponent

    companion object {
        fun Load(ResourceName: String): MovieSceneAsyncAction_SequencePrediction
        fun Find(Outer: UObject, ResourceName: String): MovieSceneAsyncAction_SequencePrediction
        fun GetDefaultObject(): MovieSceneAsyncAction_SequencePrediction
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneAsyncAction_SequencePrediction
        fun PredictWorldTransformAtTime(Player: MovieSceneSequencePlayer, TargetComponent: SceneComponent, TimeInSeconds: Number): MovieSceneAsyncAction_SequencePrediction
        fun PredictWorldTransformAtFrame(Player: MovieSceneSequencePlayer, TargetComponent: SceneComponent, FrameTime: FrameTime): MovieSceneAsyncAction_SequencePrediction
        fun PredictLocalTransformAtTime(Player: MovieSceneSequencePlayer, TargetComponent: SceneComponent, TimeInSeconds: Number): MovieSceneAsyncAction_SequencePrediction
        fun PredictLocalTransformAtFrame(Player: MovieSceneSequencePlayer, TargetComponent: SceneComponent, FrameTime: FrameTime): MovieSceneAsyncAction_SequencePrediction
        fun C(Other: UObject): MovieSceneAsyncAction_SequencePrediction
        fun C(Other: Any): MovieSceneAsyncAction_SequencePrediction
    }
}

external open class MovieScenePredictionSystem : MovieSceneEntitySystem {
    constructor()
    constructor(Outer: UObject)
    open var PendingPredictions: Array<MovieSceneAsyncAction_SequencePrediction>
    open var ProcessingPredictions: Array<MovieSceneAsyncAction_SequencePrediction>

    companion object {
        fun Load(ResourceName: String): MovieScenePredictionSystem
        fun Find(Outer: UObject, ResourceName: String): MovieScenePredictionSystem
        fun GetDefaultObject(): MovieScenePredictionSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScenePredictionSystem
        fun C(Other: UObject): MovieScenePredictionSystem
        fun C(Other: Any): MovieScenePredictionSystem
    }
}

external open class MovieScenePrimitiveMaterialSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var MaterialChannel: MovieSceneObjectPathChannel

    companion object {
        fun Load(ResourceName: String): MovieScenePrimitiveMaterialSection
        fun Find(Outer: UObject, ResourceName: String): MovieScenePrimitiveMaterialSection
        fun GetDefaultObject(): MovieScenePrimitiveMaterialSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScenePrimitiveMaterialSection
        fun C(Other: UObject): MovieScenePrimitiveMaterialSection
        fun C(Other: Any): MovieScenePrimitiveMaterialSection
    }
}

external open class MovieScenePrimitiveMaterialTrack : MovieScenePropertyTrack {
    constructor()
    constructor(Outer: UObject)
    open var MaterialIndex: Number

    companion object {
        fun Load(ResourceName: String): MovieScenePrimitiveMaterialTrack
        fun Find(Outer: UObject, ResourceName: String): MovieScenePrimitiveMaterialTrack
        fun GetDefaultObject(): MovieScenePrimitiveMaterialTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScenePrimitiveMaterialTrack
        fun C(Other: UObject): MovieScenePrimitiveMaterialTrack
        fun C(Other: Any): MovieScenePrimitiveMaterialTrack
    }
}

external open class MovieSceneQuaternionInterpolationRotationSystem : MovieSceneEntitySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneQuaternionInterpolationRotationSystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneQuaternionInterpolationRotationSystem
        fun GetDefaultObject(): MovieSceneQuaternionInterpolationRotationSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneQuaternionInterpolationRotationSystem
        fun C(Other: UObject): MovieSceneQuaternionInterpolationRotationSystem
        fun C(Other: Any): MovieSceneQuaternionInterpolationRotationSystem
    }
}

external open class MovieSceneSkeletalAnimationParams {
    open var Animation: AnimSequenceBase
    open var FirstLoopStartFrameOffset: FrameNumber
    open var StartFrameOffset: FrameNumber
    open var EndFrameOffset: FrameNumber
    open var PlayRate: Number
    open var bReverse: Boolean
    open var SlotName: String
    open var MirrorDataTable: MirrorDataTable
    open var Weight: MovieSceneFloatChannel
    open var bSkipAnimNotifiers: Boolean
    open var bForceCustomMode: Boolean
    open var StartOffset: Number
    open var EndOffset: Number
    open fun clone(): MovieSceneSkeletalAnimationParams

    companion object {
        fun C(Other: UObject): MovieSceneSkeletalAnimationParams
        fun C(Other: Any): MovieSceneSkeletalAnimationParams
    }
}

external open class MovieSceneSkeletalAnimationSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var Params: MovieSceneSkeletalAnimationParams
    open var AnimSequence: AnimSequence
    open var Animation: AnimSequenceBase
    open var StartOffset: Number
    open var EndOffset: Number
    open var PlayRate: Number
    open var bReverse: Boolean
    open var SlotName: String
    open var StartLocationOffset: Vector
    open var StartRotationOffset: Rotator
    open var bMatchWithPrevious: Boolean
    open var MatchedBoneName: String
    open var MatchedLocationOffset: Vector
    open var MatchedRotationOffset: Rotator
    open var bMatchTranslation: Boolean
    open var bMatchIncludeZHeight: Boolean
    open var bMatchRotationYaw: Boolean
    open var bMatchRotationPitch: Boolean
    open var bMatchRotationRoll: Boolean
    open var bShowSkeleton: Boolean

    companion object {
        fun Load(ResourceName: String): MovieSceneSkeletalAnimationSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneSkeletalAnimationSection
        fun GetDefaultObject(): MovieSceneSkeletalAnimationSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneSkeletalAnimationSection
        fun C(Other: UObject): MovieSceneSkeletalAnimationSection
        fun C(Other: Any): MovieSceneSkeletalAnimationSection
    }
}

external open class MovieSceneSkeletalAnimRootMotionTrackParams {
    open fun clone(): MovieSceneSkeletalAnimRootMotionTrackParams

    companion object {
        fun C(Other: UObject): MovieSceneSkeletalAnimRootMotionTrackParams
        fun C(Other: Any): MovieSceneSkeletalAnimRootMotionTrackParams
    }
}

external open class MovieSceneSkeletalAnimationTrack : MovieSceneNameableTrack {
    constructor()
    constructor(Outer: UObject)
    open var AnimationSections: Array<MovieSceneSection>
    open var bUseLegacySectionIndexBlend: Boolean
    open var RootMotionParams: MovieSceneSkeletalAnimRootMotionTrackParams
    open var bBlendFirstChildOfRoot: Boolean
    open var bShowRootMotionTrail: Boolean

    companion object {
        fun Load(ResourceName: String): MovieSceneSkeletalAnimationTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneSkeletalAnimationTrack
        fun GetDefaultObject(): MovieSceneSkeletalAnimationTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneSkeletalAnimationTrack
        fun C(Other: UObject): MovieSceneSkeletalAnimationTrack
        fun C(Other: Any): MovieSceneSkeletalAnimationTrack
    }
}

external open class MovieSceneSlomoSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var FloatCurve: MovieSceneFloatChannel

    companion object {
        fun Load(ResourceName: String): MovieSceneSlomoSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneSlomoSection
        fun GetDefaultObject(): MovieSceneSlomoSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneSlomoSection
        fun C(Other: UObject): MovieSceneSlomoSection
        fun C(Other: Any): MovieSceneSlomoSection
    }
}

external open class MovieSceneSlomoTrack : MovieSceneFloatTrack {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneSlomoTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneSlomoTrack
        fun GetDefaultObject(): MovieSceneSlomoTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneSlomoTrack
        fun C(Other: UObject): MovieSceneSlomoTrack
        fun C(Other: Any): MovieSceneSlomoTrack
    }
}

external open class MovieSceneStringChannel : MovieSceneChannel {
    open var Times: Array<FrameNumber>
    open var Values: Array<String>
    open var DefaultValue: String
    open var bHasDefaultValue: Boolean
    override fun clone(): MovieSceneStringChannel

    companion object {
        fun C(Other: UObject): MovieSceneStringChannel
        fun C(Other: Any): MovieSceneStringChannel
    }
}

external open class MovieSceneStringSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var StringCurve: MovieSceneStringChannel

    companion object {
        fun Load(ResourceName: String): MovieSceneStringSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneStringSection
        fun GetDefaultObject(): MovieSceneStringSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneStringSection
        fun C(Other: UObject): MovieSceneStringSection
        fun C(Other: Any): MovieSceneStringSection
    }
}

external open class MovieSceneStringTrack : MovieScenePropertyTrack {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneStringTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneStringTrack
        fun GetDefaultObject(): MovieSceneStringTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneStringTrack
        fun C(Other: UObject): MovieSceneStringTrack
        fun C(Other: Any): MovieSceneStringTrack
    }
}

external open class MovieSceneTransformOriginSystem : MovieSceneEntitySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneTransformOriginSystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneTransformOriginSystem
        fun GetDefaultObject(): MovieSceneTransformOriginSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneTransformOriginSystem
        fun C(Other: UObject): MovieSceneTransformOriginSystem
        fun C(Other: Any): MovieSceneTransformOriginSystem
    }
}

external open class MovieSceneTransformTrack : MovieScenePropertyTrack {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneTransformTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneTransformTrack
        fun GetDefaultObject(): MovieSceneTransformTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneTransformTrack
        fun C(Other: UObject): MovieSceneTransformTrack
        fun C(Other: Any): MovieSceneTransformTrack
    }
}

external open class MovieSceneFloatVectorPropertySystem : MovieScenePropertySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneFloatVectorPropertySystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneFloatVectorPropertySystem
        fun GetDefaultObject(): MovieSceneFloatVectorPropertySystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneFloatVectorPropertySystem
        fun C(Other: UObject): MovieSceneFloatVectorPropertySystem
        fun C(Other: Any): MovieSceneFloatVectorPropertySystem
    }
}

external open class MovieSceneDoubleVectorPropertySystem : MovieScenePropertySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneDoubleVectorPropertySystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneDoubleVectorPropertySystem
        fun GetDefaultObject(): MovieSceneDoubleVectorPropertySystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneDoubleVectorPropertySystem
        fun C(Other: UObject): MovieSceneDoubleVectorPropertySystem
        fun C(Other: Any): MovieSceneDoubleVectorPropertySystem
    }
}

external open class MovieSceneFloatVectorSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var Curves: MovieSceneFloatChannel
    open var ChannelsUsed: Number

    companion object {
        fun Load(ResourceName: String): MovieSceneFloatVectorSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneFloatVectorSection
        fun GetDefaultObject(): MovieSceneFloatVectorSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneFloatVectorSection
        fun C(Other: UObject): MovieSceneFloatVectorSection
        fun C(Other: Any): MovieSceneFloatVectorSection
    }
}

external open class MovieSceneDoubleVectorSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var Curves: MovieSceneDoubleChannel
    open var ChannelsUsed: Number

    companion object {
        fun Load(ResourceName: String): MovieSceneDoubleVectorSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneDoubleVectorSection
        fun GetDefaultObject(): MovieSceneDoubleVectorSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneDoubleVectorSection
        fun C(Other: UObject): MovieSceneDoubleVectorSection
        fun C(Other: Any): MovieSceneDoubleVectorSection
    }
}

external open class MovieSceneFloatVectorTrack : MovieScenePropertyTrack {
    constructor()
    constructor(Outer: UObject)
    open var NumChannelsUsed: Number
    open fun GetNumChannelsUsed(): Number
    open fun SetNumChannelsUsed(InNumChannelsUsed: Number)

    companion object {
        fun Load(ResourceName: String): MovieSceneFloatVectorTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneFloatVectorTrack
        fun GetDefaultObject(): MovieSceneFloatVectorTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneFloatVectorTrack
        fun C(Other: UObject): MovieSceneFloatVectorTrack
        fun C(Other: Any): MovieSceneFloatVectorTrack
        fun GetNumChannelsUsed(Track: MovieSceneFloatVectorTrack): Number
        fun SetNumChannelsUsed(Track: MovieSceneFloatVectorTrack, InNumChannelsUsed: Number)
    }
}

external open class MovieSceneDoubleVectorTrack : MovieScenePropertyTrack {
    constructor()
    constructor(Outer: UObject)
    open var NumChannelsUsed: Number
    open fun GetNumChannelsUsed(): Number
    open fun SetNumChannelsUsed(InNumChannelsUsed: Number)

    companion object {
        fun Load(ResourceName: String): MovieSceneDoubleVectorTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneDoubleVectorTrack
        fun GetDefaultObject(): MovieSceneDoubleVectorTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneDoubleVectorTrack
        fun C(Other: UObject): MovieSceneDoubleVectorTrack
        fun C(Other: Any): MovieSceneDoubleVectorTrack
        fun GetNumChannelsUsed(Track: MovieSceneDoubleVectorTrack): Number
        fun SetNumChannelsUsed(Track: MovieSceneDoubleVectorTrack, InNumChannelsUsed: Number)
    }
}

external open class MovieSceneVisibilityTrack : MovieSceneBoolTrack {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneVisibilityTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneVisibilityTrack
        fun GetDefaultObject(): MovieSceneVisibilityTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneVisibilityTrack
        fun C(Other: UObject): MovieSceneVisibilityTrack
        fun C(Other: Any): MovieSceneVisibilityTrack
    }
}

external open class MovieSceneHierarchicalEasingInstantiatorSystem : MovieSceneEntityInstantiatorSystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneHierarchicalEasingInstantiatorSystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneHierarchicalEasingInstantiatorSystem
        fun GetDefaultObject(): MovieSceneHierarchicalEasingInstantiatorSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneHierarchicalEasingInstantiatorSystem
        fun C(Other: UObject): MovieSceneHierarchicalEasingInstantiatorSystem
        fun C(Other: Any): MovieSceneHierarchicalEasingInstantiatorSystem
    }
}

external open class WeightAndEasingEvaluatorSystem : MovieSceneEntitySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): WeightAndEasingEvaluatorSystem
        fun Find(Outer: UObject, ResourceName: String): WeightAndEasingEvaluatorSystem
        fun GetDefaultObject(): WeightAndEasingEvaluatorSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WeightAndEasingEvaluatorSystem
        fun C(Other: UObject): WeightAndEasingEvaluatorSystem
        fun C(Other: Any): WeightAndEasingEvaluatorSystem
    }
}

external open class EngineCustomTimeStep : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EngineCustomTimeStep
        fun Find(Outer: UObject, ResourceName: String): EngineCustomTimeStep
        fun GetDefaultObject(): EngineCustomTimeStep
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EngineCustomTimeStep
        fun C(Other: UObject): EngineCustomTimeStep
        fun C(Other: Any): EngineCustomTimeStep
    }
}

external open class FixedFrameRateCustomTimeStep : EngineCustomTimeStep {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): FixedFrameRateCustomTimeStep
        fun Find(Outer: UObject, ResourceName: String): FixedFrameRateCustomTimeStep
        fun GetDefaultObject(): FixedFrameRateCustomTimeStep
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FixedFrameRateCustomTimeStep
        fun C(Other: UObject): FixedFrameRateCustomTimeStep
        fun C(Other: Any): FixedFrameRateCustomTimeStep
    }
}

external open class GenlockedCustomTimeStep : FixedFrameRateCustomTimeStep {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GenlockedCustomTimeStep
        fun Find(Outer: UObject, ResourceName: String): GenlockedCustomTimeStep
        fun GetDefaultObject(): GenlockedCustomTimeStep
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GenlockedCustomTimeStep
        fun C(Other: UObject): GenlockedCustomTimeStep
        fun C(Other: Any): GenlockedCustomTimeStep
    }
}

external open class GenlockedFixedRateCustomTimeStep : GenlockedCustomTimeStep {
    constructor()
    constructor(Outer: UObject)
    open var FrameRate: FrameRate

    companion object {
        fun Load(ResourceName: String): GenlockedFixedRateCustomTimeStep
        fun Find(Outer: UObject, ResourceName: String): GenlockedFixedRateCustomTimeStep
        fun GetDefaultObject(): GenlockedFixedRateCustomTimeStep
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GenlockedFixedRateCustomTimeStep
        fun C(Other: UObject): GenlockedFixedRateCustomTimeStep
        fun C(Other: Any): GenlockedFixedRateCustomTimeStep
    }
}

external object ETimecodeProviderSynchronizationState {
    var Closed: String /* "Closed" */
    var Error: String /* "Error" */
    var Synchronized: String /* "Synchronized" */
    var Synchronizing: String /* "Synchronizing" */
    var ETimecodeProviderSynchronizationState_MAX: String /* "ETimecodeProviderSynchronizationState_MAX" */
}

external interface `T$641` {
    var OutFrameTime: QualifiedFrameTime
    var `$`: Boolean
}

external open class TimecodeProvider : UObject {
    constructor()
    constructor(Outer: UObject)
    open var FrameDelay: Number
    open fun GetTimecode(): Timecode
    open fun GetSynchronizationState(): String /* "Closed" | "Error" | "Synchronized" | "Synchronizing" | "ETimecodeProviderSynchronizationState_MAX" */
    open fun GetQualifiedFrameTime(): QualifiedFrameTime
    open fun GetFrameRate(): FrameRate
    open fun GetDelayedTimecode(): Timecode
    open fun GetDelayedQualifiedFrameTime(): QualifiedFrameTime
    open fun FetchTimecode(OutFrameTime: QualifiedFrameTime = definedExternally): `T$641`
    open fun FetchAndUpdate()

    companion object {
        fun Load(ResourceName: String): TimecodeProvider
        fun Find(Outer: UObject, ResourceName: String): TimecodeProvider
        fun GetDefaultObject(): TimecodeProvider
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TimecodeProvider
        fun C(Other: UObject): TimecodeProvider
        fun C(Other: Any): TimecodeProvider
    }
}

external open class GenlockedTimecodeProvider : TimecodeProvider {
    constructor()
    constructor(Outer: UObject)
    open var bUseGenlockToCount: Boolean

    companion object {
        fun Load(ResourceName: String): GenlockedTimecodeProvider
        fun Find(Outer: UObject, ResourceName: String): GenlockedTimecodeProvider
        fun GetDefaultObject(): GenlockedTimecodeProvider
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GenlockedTimecodeProvider
        fun C(Other: UObject): GenlockedTimecodeProvider
        fun C(Other: Any): GenlockedTimecodeProvider
    }
}

external open class TimeManagementBlueprintLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TimeManagementBlueprintLibrary
        fun Find(Outer: UObject, ResourceName: String): TimeManagementBlueprintLibrary
        fun GetDefaultObject(): TimeManagementBlueprintLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TimeManagementBlueprintLibrary
        fun TransformTime(SourceTime: FrameTime, SourceRate: FrameRate, DestinationRate: FrameRate): FrameTime
        fun Subtract_FrameNumberInteger(A: FrameNumber, B: Number): FrameNumber
        fun Subtract_FrameNumberFrameNumber(A: FrameNumber, B: FrameNumber): FrameNumber
        fun SnapFrameTimeToRate(SourceTime: FrameTime, SourceRate: FrameRate, SnapToRate: FrameRate): FrameTime
        fun Multiply_SecondsFrameRate(TimeInSeconds: Number, FrameRate: FrameRate): FrameTime
        fun Multiply_FrameNumberInteger(A: FrameNumber, B: Number): FrameNumber
        fun IsValid_MultipleOf(InFrameRate: FrameRate, OtherFramerate: FrameRate): Boolean
        fun IsValid_Framerate(InFrameRate: FrameRate): Boolean
        fun GetTimecodeFrameRate(): FrameRate
        fun GetTimecode(): Timecode
        fun Divide_FrameNumberInteger(A: FrameNumber, B: Number): FrameNumber
        fun Conv_TimecodeToString(InTimecode: Timecode, bForceSignDisplay: Boolean): String
        fun Conv_QualifiedFrameTimeToSeconds(InFrameTime: QualifiedFrameTime): Number
        fun Conv_FrameRateToSeconds(InFrameRate: FrameRate): Number
        fun Conv_FrameNumberToInteger(InFrameNumber: FrameNumber): Number
        fun Add_FrameNumberInteger(A: FrameNumber, B: Number): FrameNumber
        fun Add_FrameNumberFrameNumber(A: FrameNumber, B: FrameNumber): FrameNumber
        fun C(Other: UObject): TimeManagementBlueprintLibrary
        fun C(Other: Any): TimeManagementBlueprintLibrary
    }
}

external open class TimeSynchronizationSource : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bUseForSynchronization: Boolean
    open var FrameOffset: Number

    companion object {
        fun Load(ResourceName: String): TimeSynchronizationSource
        fun Find(Outer: UObject, ResourceName: String): TimeSynchronizationSource
        fun GetDefaultObject(): TimeSynchronizationSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TimeSynchronizationSource
        fun C(Other: UObject): TimeSynchronizationSource
        fun C(Other: Any): TimeSynchronizationSource
    }
}

external open class MovieSceneCustomClockSource : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun OnTick(DeltaSeconds: Number, InPlayRate: Number)
    open fun OnStopPlaying(InStopTime: QualifiedFrameTime)
    open fun OnStartPlaying(InStartTime: QualifiedFrameTime)
    open fun OnRequestCurrentTime(InCurrentTime: QualifiedFrameTime, InPlayRate: Number): FrameTime

    companion object {
        fun Load(ResourceName: String): MovieSceneCustomClockSource
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCustomClockSource
        fun GetDefaultObject(): MovieSceneCustomClockSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCustomClockSource
        fun C(Other: UObject): MovieSceneCustomClockSource
        fun C(Other: Any): MovieSceneCustomClockSource
    }
}

external open class MovieSceneDeterminismSource : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneDeterminismSource
        fun Find(Outer: UObject, ResourceName: String): MovieSceneDeterminismSource
        fun GetDefaultObject(): MovieSceneDeterminismSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneDeterminismSource
        fun C(Other: UObject): MovieSceneDeterminismSource
        fun C(Other: Any): MovieSceneDeterminismSource
    }
}

external open class MovieSceneEntityProvider : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneEntityProvider
        fun Find(Outer: UObject, ResourceName: String): MovieSceneEntityProvider
        fun GetDefaultObject(): MovieSceneEntityProvider
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneEntityProvider
        fun C(Other: UObject): MovieSceneEntityProvider
        fun C(Other: Any): MovieSceneEntityProvider
    }
}

external open class MovieSceneEvaluationHook : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneEvaluationHook
        fun Find(Outer: UObject, ResourceName: String): MovieSceneEvaluationHook
        fun GetDefaultObject(): MovieSceneEvaluationHook
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneEvaluationHook
        fun C(Other: UObject): MovieSceneEvaluationHook
        fun C(Other: Any): MovieSceneEvaluationHook
    }
}

external open class MovieScenePlaybackClient : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieScenePlaybackClient
        fun Find(Outer: UObject, ResourceName: String): MovieScenePlaybackClient
        fun GetDefaultObject(): MovieScenePlaybackClient
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScenePlaybackClient
        fun C(Other: UObject): MovieScenePlaybackClient
        fun C(Other: Any): MovieScenePlaybackClient
    }
}

external open class MovieSceneTrackTemplateProducer : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneTrackTemplateProducer
        fun Find(Outer: UObject, ResourceName: String): MovieSceneTrackTemplateProducer
        fun GetDefaultObject(): MovieSceneTrackTemplateProducer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneTrackTemplateProducer
        fun C(Other: UObject): MovieSceneTrackTemplateProducer
        fun C(Other: Any): MovieSceneTrackTemplateProducer
    }
}

external open class NodeAndChannelMappings : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NodeAndChannelMappings
        fun Find(Outer: UObject, ResourceName: String): NodeAndChannelMappings
        fun GetDefaultObject(): NodeAndChannelMappings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NodeAndChannelMappings
        fun C(Other: UObject): NodeAndChannelMappings
        fun C(Other: Any): NodeAndChannelMappings
    }
}

external open class MovieSceneBindingOverrideData {
    open var ObjectBindingID: MovieSceneObjectBindingID
    open var UObject: UObject
    open var bOverridesDefault: Boolean
    open fun clone(): MovieSceneBindingOverrideData

    companion object {
        fun C(Other: UObject): MovieSceneBindingOverrideData
        fun C(Other: Any): MovieSceneBindingOverrideData
    }
}

external open class MovieSceneBindingOverrides : UObject {
    constructor()
    constructor(Outer: UObject)
    open var BindingData: Array<MovieSceneBindingOverrideData>

    companion object {
        fun Load(ResourceName: String): MovieSceneBindingOverrides
        fun Find(Outer: UObject, ResourceName: String): MovieSceneBindingOverrides
        fun GetDefaultObject(): MovieSceneBindingOverrides
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneBindingOverrides
        fun C(Other: UObject): MovieSceneBindingOverrides
        fun C(Other: Any): MovieSceneBindingOverrides
    }
}

external open class MovieSceneBindingOwnerInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneBindingOwnerInterface
        fun Find(Outer: UObject, ResourceName: String): MovieSceneBindingOwnerInterface
        fun GetDefaultObject(): MovieSceneBindingOwnerInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneBindingOwnerInterface
        fun C(Other: UObject): MovieSceneBindingOwnerInterface
        fun C(Other: Any): MovieSceneBindingOwnerInterface
    }
}

external open class MovieSceneBoolSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var DefaultValue: Boolean
    open var BoolCurve: MovieSceneBoolChannel
    open var bIsExternallyInverted: Boolean

    companion object {
        fun Load(ResourceName: String): MovieSceneBoolSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneBoolSection
        fun GetDefaultObject(): MovieSceneBoolSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneBoolSection
        fun C(Other: UObject): MovieSceneBoolSection
        fun C(Other: Any): MovieSceneBoolSection
    }
}

external open class MovieSceneGenericBoundObjectInstantiator : MovieSceneEntityInstantiatorSystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneGenericBoundObjectInstantiator
        fun Find(Outer: UObject, ResourceName: String): MovieSceneGenericBoundObjectInstantiator
        fun GetDefaultObject(): MovieSceneGenericBoundObjectInstantiator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneGenericBoundObjectInstantiator
        fun C(Other: UObject): MovieSceneGenericBoundObjectInstantiator
        fun C(Other: Any): MovieSceneGenericBoundObjectInstantiator
    }
}

external open class MovieSceneBoundSceneComponentInstantiator : MovieSceneEntityInstantiatorSystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneBoundSceneComponentInstantiator
        fun Find(Outer: UObject, ResourceName: String): MovieSceneBoundSceneComponentInstantiator
        fun GetDefaultObject(): MovieSceneBoundSceneComponentInstantiator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneBoundSceneComponentInstantiator
        fun C(Other: UObject): MovieSceneBoundSceneComponentInstantiator
        fun C(Other: Any): MovieSceneBoundSceneComponentInstantiator
    }
}

external open class MovieSceneSceneComponentImpersonator : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneSceneComponentImpersonator
        fun Find(Outer: UObject, ResourceName: String): MovieSceneSceneComponentImpersonator
        fun GetDefaultObject(): MovieSceneSceneComponentImpersonator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneSceneComponentImpersonator
        fun C(Other: UObject): MovieSceneSceneComponentImpersonator
        fun C(Other: Any): MovieSceneSceneComponentImpersonator
    }
}

external open class MovieSceneValueDecomposer : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneValueDecomposer
        fun Find(Outer: UObject, ResourceName: String): MovieSceneValueDecomposer
        fun GetDefaultObject(): MovieSceneValueDecomposer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneValueDecomposer
        fun C(Other: UObject): MovieSceneValueDecomposer
        fun C(Other: Any): MovieSceneValueDecomposer
    }
}

external object EMovieSceneBuiltInEasing {
    var Linear: String /* "Linear" */
    var SinIn: String /* "SinIn" */
    var SinOut: String /* "SinOut" */
    var SinInOut: String /* "SinInOut" */
    var QuadIn: String /* "QuadIn" */
    var QuadOut: String /* "QuadOut" */
    var QuadInOut: String /* "QuadInOut" */
    var CubicIn: String /* "CubicIn" */
    var CubicOut: String /* "CubicOut" */
    var CubicInOut: String /* "CubicInOut" */
    var QuartIn: String /* "QuartIn" */
    var QuartOut: String /* "QuartOut" */
    var QuartInOut: String /* "QuartInOut" */
    var QuintIn: String /* "QuintIn" */
    var QuintOut: String /* "QuintOut" */
    var QuintInOut: String /* "QuintInOut" */
    var ExpoIn: String /* "ExpoIn" */
    var ExpoOut: String /* "ExpoOut" */
    var ExpoInOut: String /* "ExpoInOut" */
    var CircIn: String /* "CircIn" */
    var CircOut: String /* "CircOut" */
    var CircInOut: String /* "CircInOut" */
    var EMovieSceneBuiltInEasing_MAX: String /* "EMovieSceneBuiltInEasing_MAX" */
}

external open class MovieSceneBuiltInEasingFunction : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Type: String /* "Linear" | "SinIn" | "SinOut" | "SinInOut" | "QuadIn" | "QuadOut" | "QuadInOut" | "CubicIn" | "CubicOut" | "CubicInOut" | "QuartIn" | "QuartOut" | "QuartInOut" | "QuintIn" | "QuintOut" | "QuintInOut" | "ExpoIn" | "ExpoOut" | "ExpoInOut" | "CircIn" | "CircOut" | "CircInOut" | "EMovieSceneBuiltInEasing_MAX" */

    companion object {
        fun Load(ResourceName: String): MovieSceneBuiltInEasingFunction
        fun Find(Outer: UObject, ResourceName: String): MovieSceneBuiltInEasingFunction
        fun GetDefaultObject(): MovieSceneBuiltInEasingFunction
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneBuiltInEasingFunction
        fun C(Other: UObject): MovieSceneBuiltInEasingFunction
        fun C(Other: Any): MovieSceneBuiltInEasingFunction
    }
}

external open class MovieSceneEasingExternalCurve : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Curve: CurveFloat

    companion object {
        fun Load(ResourceName: String): MovieSceneEasingExternalCurve
        fun Find(Outer: UObject, ResourceName: String): MovieSceneEasingExternalCurve
        fun GetDefaultObject(): MovieSceneEasingExternalCurve
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneEasingExternalCurve
        fun C(Other: UObject): MovieSceneEasingExternalCurve
        fun C(Other: Any): MovieSceneEasingExternalCurve
    }
}

external open class MovieSceneEasingFunction : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun OnEvaluate(Interp: Number): Number

    companion object {
        fun Load(ResourceName: String): MovieSceneEasingFunction
        fun Find(Outer: UObject, ResourceName: String): MovieSceneEasingFunction
        fun GetDefaultObject(): MovieSceneEasingFunction
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneEasingFunction
        fun C(Other: UObject): MovieSceneEasingFunction
        fun C(Other: Any): MovieSceneEasingFunction
    }
}

external open class MovieSceneEvalTimeSystem : MovieSceneEntitySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneEvalTimeSystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneEvalTimeSystem
        fun GetDefaultObject(): MovieSceneEvalTimeSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneEvalTimeSystem
        fun C(Other: UObject): MovieSceneEvalTimeSystem
        fun C(Other: Any): MovieSceneEvalTimeSystem
    }
}

external open class MovieSceneEvaluationHookSystem : MovieSceneEntitySystem {
    constructor()
    constructor(Outer: UObject)
    open var PendingEventsByRootInstance: Any

    companion object {
        fun Load(ResourceName: String): MovieSceneEvaluationHookSystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneEvaluationHookSystem
        fun GetDefaultObject(): MovieSceneEvaluationHookSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneEvaluationHookSystem
        fun C(Other: UObject): MovieSceneEvaluationHookSystem
        fun C(Other: Any): MovieSceneEvaluationHookSystem
    }
}

external open class MovieSceneHookSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var bRequiresRangedHook: Boolean
    open var bRequiresTriggerHooks: Boolean

    companion object {
        fun Load(ResourceName: String): MovieSceneHookSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneHookSection
        fun GetDefaultObject(): MovieSceneHookSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneHookSection
        fun C(Other: UObject): MovieSceneHookSection
        fun C(Other: Any): MovieSceneHookSection
    }
}

external open class MovieSceneKeyProxy : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneKeyProxy
        fun Find(Outer: UObject, ResourceName: String): MovieSceneKeyProxy
        fun GetDefaultObject(): MovieSceneKeyProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneKeyProxy
        fun C(Other: UObject): MovieSceneKeyProxy
        fun C(Other: Any): MovieSceneKeyProxy
    }
}

external open class MovieSceneMasterInstantiatorSystem : MovieSceneEntityInstantiatorSystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneMasterInstantiatorSystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneMasterInstantiatorSystem
        fun GetDefaultObject(): MovieSceneMasterInstantiatorSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneMasterInstantiatorSystem
        fun C(Other: UObject): MovieSceneMasterInstantiatorSystem
        fun C(Other: Any): MovieSceneMasterInstantiatorSystem
    }
}

external open class MovieScenePreAnimatedStateSystemInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieScenePreAnimatedStateSystemInterface
        fun Find(Outer: UObject, ResourceName: String): MovieScenePreAnimatedStateSystemInterface
        fun GetDefaultObject(): MovieScenePreAnimatedStateSystemInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScenePreAnimatedStateSystemInterface
        fun C(Other: UObject): MovieScenePreAnimatedStateSystemInterface
        fun C(Other: Any): MovieScenePreAnimatedStateSystemInterface
    }
}

external open class MovieSceneCachePreAnimatedStateSystem : MovieSceneEntityInstantiatorSystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneCachePreAnimatedStateSystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCachePreAnimatedStateSystem
        fun GetDefaultObject(): MovieSceneCachePreAnimatedStateSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCachePreAnimatedStateSystem
        fun C(Other: UObject): MovieSceneCachePreAnimatedStateSystem
        fun C(Other: Any): MovieSceneCachePreAnimatedStateSystem
    }
}

external open class MovieSceneRestorePreAnimatedStateSystem : MovieSceneEntityInstantiatorSystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneRestorePreAnimatedStateSystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneRestorePreAnimatedStateSystem
        fun GetDefaultObject(): MovieSceneRestorePreAnimatedStateSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneRestorePreAnimatedStateSystem
        fun C(Other: UObject): MovieSceneRestorePreAnimatedStateSystem
        fun C(Other: Any): MovieSceneRestorePreAnimatedStateSystem
    }
}

external open class MovieSceneSequenceActor : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneSequenceActor
        fun Find(Outer: UObject, ResourceName: String): MovieSceneSequenceActor
        fun GetDefaultObject(): MovieSceneSequenceActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneSequenceActor
        fun C(Other: UObject): MovieSceneSequenceActor
        fun C(Other: Any): MovieSceneSequenceActor
    }
}

external open class MovieSceneSpawnablesSystem : MovieSceneEntitySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneSpawnablesSystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneSpawnablesSystem
        fun GetDefaultObject(): MovieSceneSpawnablesSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneSpawnablesSystem
        fun C(Other: UObject): MovieSceneSpawnablesSystem
        fun C(Other: Any): MovieSceneSpawnablesSystem
    }
}

external open class MovieSceneSpawnSection : MovieSceneBoolSection {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneSpawnSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneSpawnSection
        fun GetDefaultObject(): MovieSceneSpawnSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneSpawnSection
        fun C(Other: UObject): MovieSceneSpawnSection
        fun C(Other: Any): MovieSceneSpawnSection
    }
}

external open class MovieSceneSpawnTrack : MovieSceneTrack {
    constructor()
    constructor(Outer: UObject)
    open var Sections: Array<MovieSceneSection>
    open var ObjectGuid: Guid

    companion object {
        fun Load(ResourceName: String): MovieSceneSpawnTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneSpawnTrack
        fun GetDefaultObject(): MovieSceneSpawnTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneSpawnTrack
        fun C(Other: UObject): MovieSceneSpawnTrack
        fun C(Other: Any): MovieSceneSpawnTrack
    }
}

external open class TestMovieSceneTrack : MovieSceneTrack {
    constructor()
    constructor(Outer: UObject)
    open var bHighPassFilter: Boolean
    open var SectionArray: Array<MovieSceneSection>

    companion object {
        fun Load(ResourceName: String): TestMovieSceneTrack
        fun Find(Outer: UObject, ResourceName: String): TestMovieSceneTrack
        fun GetDefaultObject(): TestMovieSceneTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TestMovieSceneTrack
        fun C(Other: UObject): TestMovieSceneTrack
        fun C(Other: Any): TestMovieSceneTrack
    }
}

external open class TestMovieSceneSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TestMovieSceneSection
        fun Find(Outer: UObject, ResourceName: String): TestMovieSceneSection
        fun GetDefaultObject(): TestMovieSceneSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TestMovieSceneSection
        fun C(Other: UObject): TestMovieSceneSection
        fun C(Other: Any): TestMovieSceneSection
    }
}

external open class TestMovieSceneSequence : MovieSceneSequence {
    constructor()
    constructor(Outer: UObject)
    open var MovieScene: MovieScene

    companion object {
        fun Load(ResourceName: String): TestMovieSceneSequence
        fun Find(Outer: UObject, ResourceName: String): TestMovieSceneSequence
        fun GetDefaultObject(): TestMovieSceneSequence
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TestMovieSceneSequence
        fun C(Other: UObject): TestMovieSceneSequence
        fun C(Other: Any): TestMovieSceneSequence
    }
}

external open class TestMovieSceneSubTrack : MovieSceneSubTrack {
    constructor()
    constructor(Outer: UObject)
    open var SectionArray: Array<MovieSceneSection>

    companion object {
        fun Load(ResourceName: String): TestMovieSceneSubTrack
        fun Find(Outer: UObject, ResourceName: String): TestMovieSceneSubTrack
        fun GetDefaultObject(): TestMovieSceneSubTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TestMovieSceneSubTrack
        fun C(Other: UObject): TestMovieSceneSubTrack
        fun C(Other: Any): TestMovieSceneSubTrack
    }
}

external open class TestMovieSceneSubSection : MovieSceneSubSection {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TestMovieSceneSubSection
        fun Find(Outer: UObject, ResourceName: String): TestMovieSceneSubSection
        fun GetDefaultObject(): TestMovieSceneSubSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TestMovieSceneSubSection
        fun C(Other: UObject): TestMovieSceneSubSection
        fun C(Other: Any): TestMovieSceneSubSection
    }
}

external open class TestMovieSceneEvalHookTrack : MovieSceneTrack {
    constructor()
    constructor(Outer: UObject)
    open var SectionArray: Array<MovieSceneSection>

    companion object {
        fun Load(ResourceName: String): TestMovieSceneEvalHookTrack
        fun Find(Outer: UObject, ResourceName: String): TestMovieSceneEvalHookTrack
        fun GetDefaultObject(): TestMovieSceneEvalHookTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TestMovieSceneEvalHookTrack
        fun C(Other: UObject): TestMovieSceneEvalHookTrack
        fun C(Other: Any): TestMovieSceneEvalHookTrack
    }
}

external open class TestMovieSceneEvalHookSection : MovieSceneHookSection {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TestMovieSceneEvalHookSection
        fun Find(Outer: UObject, ResourceName: String): TestMovieSceneEvalHookSection
        fun GetDefaultObject(): TestMovieSceneEvalHookSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TestMovieSceneEvalHookSection
        fun C(Other: UObject): TestMovieSceneEvalHookSection
        fun C(Other: Any): TestMovieSceneEvalHookSection
    }
}

external open class MovieSceneTrackInstanceInstantiator : MovieSceneEntityInstantiatorSystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneTrackInstanceInstantiator
        fun Find(Outer: UObject, ResourceName: String): MovieSceneTrackInstanceInstantiator
        fun GetDefaultObject(): MovieSceneTrackInstanceInstantiator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneTrackInstanceInstantiator
        fun C(Other: UObject): MovieSceneTrackInstanceInstantiator
        fun C(Other: Any): MovieSceneTrackInstanceInstantiator
    }
}

external open class MovieSceneTrackInstanceSystem : MovieSceneEntitySystem {
    constructor()
    constructor(Outer: UObject)
    open var Instantiator: MovieSceneTrackInstanceInstantiator

    companion object {
        fun Load(ResourceName: String): MovieSceneTrackInstanceSystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneTrackInstanceSystem
        fun GetDefaultObject(): MovieSceneTrackInstanceSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneTrackInstanceSystem
        fun C(Other: UObject): MovieSceneTrackInstanceSystem
        fun C(Other: Any): MovieSceneTrackInstanceSystem
    }
}

external open class AudioLinkBlueprintInterface : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun StopLink()
    open fun SetLinkSound(NewSound: SoundBase)
    open fun PlayLink(StartTime: Number)
    open fun IsLinkPlaying(): Boolean

    companion object {
        fun Load(ResourceName: String): AudioLinkBlueprintInterface
        fun Find(Outer: UObject, ResourceName: String): AudioLinkBlueprintInterface
        fun GetDefaultObject(): AudioLinkBlueprintInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AudioLinkBlueprintInterface
        fun C(Other: UObject): AudioLinkBlueprintInterface
        fun C(Other: Any): AudioLinkBlueprintInterface
    }
}

external object EAudioDeviceChangedRole {
    var Invalid: String /* "Invalid" */
    var Console: String /* "Console" */
    var Multimedia: String /* "Multimedia" */
    var Communications: String /* "Communications" */
    var Count: String /* "Count" */
    var EAudioDeviceChangedRole_MAX: String /* "EAudioDeviceChangedRole_MAX" */
}

external object EAudioDeviceChangedState {
    var Invalid: String /* "Invalid" */
    var Active: String /* "Active" */
    var Disabled: String /* "Disabled" */
    var NotPresent: String /* "NotPresent" */
    var Unplugged: String /* "Unplugged" */
    var Count: String /* "Count" */
    var EAudioDeviceChangedState_MAX: String /* "EAudioDeviceChangedState_MAX" */
}

external open class AudioDeviceNotificationSubsystem : EngineSubsystem {
    constructor()
    constructor(Outer: UObject)
    open var DefaultCaptureDeviceChanged: UnrealEngineMulticastDelegate<(AudioDeviceRole: String /* "Invalid" | "Console" | "Multimedia" | "Communications" | "Count" | "EAudioDeviceChangedRole_MAX" */, DeviceID: String) -> Unit>
    open var DefaultRenderDeviceChanged: UnrealEngineMulticastDelegate<(AudioDeviceRole: String /* "Invalid" | "Console" | "Multimedia" | "Communications" | "Count" | "EAudioDeviceChangedRole_MAX" */, DeviceID: String) -> Unit>
    open var DeviceAdded: UnrealEngineMulticastDelegate<(DeviceID: String) -> Unit>
    open var DeviceRemoved: UnrealEngineMulticastDelegate<(DeviceID: String) -> Unit>
    open var DeviceStateChanged: UnrealEngineMulticastDelegate<(DeviceID: String, NewState: String /* "Invalid" | "Active" | "Disabled" | "NotPresent" | "Unplugged" | "Count" | "EAudioDeviceChangedState_MAX" */) -> Unit>
    open var DeviceSwitched: UnrealEngineMulticastDelegate<(DeviceID: String) -> Unit>

    companion object {
        fun Load(ResourceName: String): AudioDeviceNotificationSubsystem
        fun Find(Outer: UObject, ResourceName: String): AudioDeviceNotificationSubsystem
        fun GetDefaultObject(): AudioDeviceNotificationSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AudioDeviceNotificationSubsystem
        fun C(Other: UObject): AudioDeviceNotificationSubsystem
        fun C(Other: Any): AudioDeviceNotificationSubsystem
    }
}

external open class AudioGenerator : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AudioGenerator
        fun Find(Outer: UObject, ResourceName: String): AudioGenerator
        fun GetDefaultObject(): AudioGenerator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AudioGenerator
        fun C(Other: UObject): AudioGenerator
        fun C(Other: Any): AudioGenerator
    }
}

external object EAudioSpectrumBandPresetType {
    var KickDrum: String /* "KickDrum" */
    var SnareDrum: String /* "SnareDrum" */
    var Voice: String /* "Voice" */
    var Cymbals: String /* "Cymbals" */
    var EAudioSpectrumBandPresetType_MAX: String /* "EAudioSpectrumBandPresetType_MAX" */
}

external open class SoundSubmixSpectralAnalysisBandSettings {
    open var BandFrequency: Number
    open var AttackTimeMsec: Number
    open var ReleaseTimeMsec: Number
    open var QFactor: Number
    open fun clone(): SoundSubmixSpectralAnalysisBandSettings

    companion object {
        fun C(Other: UObject): SoundSubmixSpectralAnalysisBandSettings
        fun C(Other: Any): SoundSubmixSpectralAnalysisBandSettings
    }
}

external object EMusicalNoteName {
    var C: String /* "C" */
    var Db: String /* "Db" */
    var D: String /* "D" */
    var Eb: String /* "Eb" */
    var E: String /* "E" */
    var F: String /* "F" */
    var Gb: String /* "Gb" */
    var G: String /* "G" */
    var Ab: String /* "Ab" */
    var A: String /* "A" */
    var Bb: String /* "Bb" */
    var B: String /* "B" */
    var EMusicalNoteName_MAX: String /* "EMusicalNoteName_MAX" */
}

external interface `T$642` {
    var Phases: Array<Number>
}

external interface `T$643` {
    var Magnitudes: Array<Number>
}

external open class AudioMixerBlueprintLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AudioMixerBlueprintLibrary
        fun Find(Outer: UObject, ResourceName: String): AudioMixerBlueprintLibrary
        fun GetDefaultObject(): AudioMixerBlueprintLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AudioMixerBlueprintLibrary
        fun TrimAudioCache(InMegabytesToFree: Number): Number
        fun StopRecordingOutput(WorldContextObject: UObject, ExportType: String /* "SoundWave" | "WavFile" | "EAudioRecordingExportType_MAX" */, Name: String, Path: String, SubmixToRecord: SoundSubmix, ExistingSoundWaveToOverwrite: SoundWave): SoundWave
        fun StopAudioBus(WorldContextObject: UObject, AudioBus: AudioBus)
        fun StopAnalyzingOutput(WorldContextObject: UObject, SubmixToStopAnalyzing: SoundSubmix)
        fun StartRecordingOutput(WorldContextObject: UObject, ExpectedDuration: Number, SubmixToRecord: SoundSubmix)
        fun StartAudioBus(WorldContextObject: UObject, AudioBus: AudioBus)
        fun StartAnalyzingOutput(WorldContextObject: UObject, SubmixToAnalyze: SoundSubmix, FFTSize: String /* "DefaultSize" | "Min" | "Small" | "Medium" | "Large" | "VeryLarge" | "Max" | "EFFTSize_MAX" */, InterpolationMethod: String /* "NearestNeighbor" | "Linear" | "Quadratic" | "ConstantQ" | "EFFTPeakInterpolationMethod_MAX" */, WindowType: String /* "None" | "Hamming" | "Hann" | "Blackman" | "EFFTWindowType_MAX" */, HopSize: Number, SpectrumType: String /* "MagnitudeSpectrum" | "PowerSpectrum" | "Decibel" | "EAudioSpectrumType_MAX" */)
        fun SetSubmixEffectChainOverride(WorldContextObject: UObject, SoundSubmix: SoundSubmix, SubmixEffectPresetChain: Array<SoundEffectSubmixPreset>, FadeTimeSec: Number)
        fun SetBypassSourceEffectChainEntry(WorldContextObject: UObject, PresetChain: SoundEffectSourcePresetChain, EntryIndex: Number, bBypassed: Boolean)
        fun ResumeRecordingOutput(WorldContextObject: UObject, SubmixToPause: SoundSubmix)
        fun ReplaceSubmixEffect(WorldContextObject: UObject, InSoundSubmix: SoundSubmix, SubmixChainIndex: Number, SubmixEffectPreset: SoundEffectSubmixPreset)
        fun ReplaceSoundEffectSubmix(WorldContextObject: UObject, InSoundSubmix: SoundSubmix, SubmixChainIndex: Number, SubmixEffectPreset: SoundEffectSubmixPreset)
        fun RemoveSubmixEffectPresetAtIndex(WorldContextObject: UObject, SoundSubmix: SoundSubmix, SubmixChainIndex: Number)
        fun RemoveSubmixEffectPreset(WorldContextObject: UObject, SoundSubmix: SoundSubmix, SubmixEffectPreset: SoundEffectSubmixPreset)
        fun RemoveSubmixEffectAtIndex(WorldContextObject: UObject, SoundSubmix: SoundSubmix, SubmixChainIndex: Number)
        fun RemoveSubmixEffect(WorldContextObject: UObject, SoundSubmix: SoundSubmix, SubmixEffectPreset: SoundEffectSubmixPreset)
        fun RemoveSourceEffectFromPresetChain(WorldContextObject: UObject, PresetChain: SoundEffectSourcePresetChain, EntryIndex: Number)
        fun RemoveMasterSubmixEffect(WorldContextObject: UObject, SubmixEffectPreset: SoundEffectSubmixPreset)
        fun PrimeSoundCueForPlayback(SoundCue: SoundCue)
        fun PauseRecordingOutput(WorldContextObject: UObject, SubmixToPause: SoundSubmix)
        fun MakePresetSpectralAnalysisBandSettings(InBandPresetType: String /* "KickDrum" | "SnareDrum" | "Voice" | "Cymbals" | "EAudioSpectrumBandPresetType_MAX" */, InNumBands: Number, InAttackTimeMsec: Number, InReleaseTimeMsec: Number): Array<SoundSubmixSpectralAnalysisBandSettings>
        fun MakeMusicalSpectralAnalysisBandSettings(InNumSemitones: Number, InStartingMusicalNote: String /* "C" | "Db" | "D" | "Eb" | "E" | "F" | "Gb" | "G" | "Ab" | "A" | "Bb" | "B" | "EMusicalNoteName_MAX" */, InStartingOctave: Number, InAttackTimeMsec: Number, InReleaseTimeMsec: Number): Array<SoundSubmixSpectralAnalysisBandSettings>
        fun MakeFullSpectrumSpectralAnalysisBandSettings(InNumBands: Number, InMinimumFrequency: Number, InMaximumFrequency: Number, InAttackTimeMsec: Number, InReleaseTimeMsec: Number): Array<SoundSubmixSpectralAnalysisBandSettings>
        fun IsAudioBusActive(WorldContextObject: UObject, AudioBus: AudioBus): Boolean
        fun GetPhaseForFrequencies(WorldContextObject: UObject, Frequencies: Array<Number>, Phases: Array<Number> = definedExternally, SubmixToAnalyze: SoundSubmix = definedExternally): `T$642`
        fun GetNumberOfEntriesInSourceEffectChain(WorldContextObject: UObject, PresetChain: SoundEffectSourcePresetChain): Number
        fun GetMagnitudeForFrequencies(WorldContextObject: UObject, Frequencies: Array<Number>, Magnitudes: Array<Number> = definedExternally, SubmixToAnalyze: SoundSubmix = definedExternally): `T$643`
        fun Conv_AudioOutputDeviceInfoToString(Info: AudioOutputDeviceInfo): String
        fun ClearSubmixEffects(WorldContextObject: UObject, SoundSubmix: SoundSubmix)
        fun ClearSubmixEffectChainOverride(WorldContextObject: UObject, SoundSubmix: SoundSubmix, FadeTimeSec: Number)
        fun ClearMasterSubmixEffects(WorldContextObject: UObject)
        fun AddSubmixEffect(WorldContextObject: UObject, SoundSubmix: SoundSubmix, SubmixEffectPreset: SoundEffectSubmixPreset): Number
        fun AddSourceEffectToPresetChain(WorldContextObject: UObject, PresetChain: SoundEffectSourcePresetChain, Entry: SourceEffectChainEntry)
        fun AddMasterSubmixEffect(WorldContextObject: UObject, SubmixEffectPreset: SoundEffectSubmixPreset)
        fun C(Other: UObject): AudioMixerBlueprintLibrary
        fun C(Other: Any): AudioMixerBlueprintLibrary
    }
}

external object EQuartzCommandQuantization {
    var Bar: String /* "Bar" */
    var Beat: String /* "Beat" */
    var ThirtySecondNote: String /* "ThirtySecondNote" */
    var SixteenthNote: String /* "SixteenthNote" */
    var EighthNote: String /* "EighthNote" */
    var QuarterNote: String /* "QuarterNote" */
    var HalfNote: String /* "HalfNote" */
    var WholeNote: String /* "WholeNote" */
    var DottedSixteenthNote: String /* "DottedSixteenthNote" */
    var DottedEighthNote: String /* "DottedEighthNote" */
    var DottedQuarterNote: String /* "DottedQuarterNote" */
    var DottedHalfNote: String /* "DottedHalfNote" */
    var DottedWholeNote: String /* "DottedWholeNote" */
    var SixteenthNoteTriplet: String /* "SixteenthNoteTriplet" */
    var EighthNoteTriplet: String /* "EighthNoteTriplet" */
    var QuarterNoteTriplet: String /* "QuarterNoteTriplet" */
    var HalfNoteTriplet: String /* "HalfNoteTriplet" */
    var Tick: String /* "Tick" */
    var Count: String /* "Count" */
    var None: String /* "None" */
    var EQuartzCommandQuantization_MAX: String /* "EQuartzCommandQuantization_MAX" */
}

external open class QuartzTransportTimeStamp {
    open var Bars: Number
    open var Beat: Number
    open var BeatFraction: Number
    open var Seconds: Number
    open fun clone(): QuartzTransportTimeStamp

    companion object {
        fun C(Other: UObject): QuartzTransportTimeStamp
        fun C(Other: Any): QuartzTransportTimeStamp
    }
}

external interface `T$644` {
    var ClockHandle: QuartzClockHandle
}

external open class QuartzClockHandle : UObject {
    constructor()
    constructor(Outer: UObject)
    open fun UnsubscribeFromTimeDivision(WorldContextObject: UObject, InQuantizationBoundary: String /* "Bar" | "Beat" | "ThirtySecondNote" | "SixteenthNote" | "EighthNote" | "QuarterNote" | "HalfNote" | "WholeNote" | "DottedSixteenthNote" | "DottedEighthNote" | "DottedQuarterNote" | "DottedHalfNote" | "DottedWholeNote" | "SixteenthNoteTriplet" | "EighthNoteTriplet" | "QuarterNoteTriplet" | "HalfNoteTriplet" | "Tick" | "Count" | "None" | "EQuartzCommandQuantization_MAX" */, ClockHandle: QuartzClockHandle = definedExternally): `T$644`
    open fun UnsubscribeFromAllTimeDivisions(WorldContextObject: UObject, ClockHandle: QuartzClockHandle = definedExternally): `T$644`
    open fun StopClock(WorldContextObject: UObject, CancelPendingEvents: Boolean, ClockHandle: QuartzClockHandle = definedExternally): `T$644`
    open fun StartClock(WorldContextObject: UObject, ClockHandle: QuartzClockHandle = definedExternally): `T$644`
    open fun ResumeClock(WorldContextObject: UObject, ClockHandle: QuartzClockHandle = definedExternally): `T$644`
    open fun PauseClock(WorldContextObject: UObject, ClockHandle: QuartzClockHandle = definedExternally): `T$644`
    open fun IsClockRunning(WorldContextObject: UObject): Boolean
    open fun GetTicksPerSecond(WorldContextObject: UObject): Number
    open fun GetThirtySecondNotesPerMinute(WorldContextObject: UObject): Number
    open fun GetSecondsPerTick(WorldContextObject: UObject): Number
    open fun GetMillisecondsPerTick(WorldContextObject: UObject): Number
    open fun GetEstimatedRunTime(WorldContextObject: UObject): Number
    open fun GetDurationOfQuantizationTypeInSeconds(WorldContextObject: UObject, QuantizationType: String /* "Bar" | "Beat" | "ThirtySecondNote" | "SixteenthNote" | "EighthNote" | "QuarterNote" | "HalfNote" | "WholeNote" | "DottedSixteenthNote" | "DottedEighthNote" | "DottedQuarterNote" | "DottedHalfNote" | "DottedWholeNote" | "SixteenthNoteTriplet" | "EighthNoteTriplet" | "QuarterNoteTriplet" | "HalfNoteTriplet" | "Tick" | "Count" | "None" | "EQuartzCommandQuantization_MAX" */, Multiplier: Number): Number
    open fun GetCurrentTimestamp(WorldContextObject: UObject): QuartzTransportTimeStamp
    open fun GetBeatsPerMinute(WorldContextObject: UObject): Number

    companion object {
        fun Load(ResourceName: String): QuartzClockHandle
        fun Find(Outer: UObject, ResourceName: String): QuartzClockHandle
        fun GetDefaultObject(): QuartzClockHandle
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): QuartzClockHandle
        fun C(Other: UObject): QuartzClockHandle
        fun C(Other: Any): QuartzClockHandle
    }
}

external object ESubmixEffectDynamicsProcessorType {
    var Compressor: String /* "Compressor" */
    var Limiter: String /* "Limiter" */
    var Expander: String /* "Expander" */
    var Gate: String /* "Gate" */
    var UpwardsCompressor: String /* "UpwardsCompressor" */
    var Count: String /* "Count" */
    var ESubmixEffectDynamicsProcessorType_MAX: String /* "ESubmixEffectDynamicsProcessorType_MAX" */
}

external object ESubmixEffectDynamicsPeakMode {
    var MeanSquared: String /* "MeanSquared" */
    var RootMeanSquared: String /* "RootMeanSquared" */
    var Peak: String /* "Peak" */
    var Count: String /* "Count" */
    var ESubmixEffectDynamicsPeakMode_MAX: String /* "ESubmixEffectDynamicsPeakMode_MAX" */
}

external object ESubmixEffectDynamicsChannelLinkMode {
    var Disabled: String /* "Disabled" */
    var Average: String /* "Average" */
    var Peak: String /* "Peak" */
    var Count: String /* "Count" */
    var ESubmixEffectDynamicsChannelLinkMode_MAX: String /* "ESubmixEffectDynamicsChannelLinkMode_MAX" */
}

external object ESubmixEffectDynamicsKeySource {
    var Default: String /* "Default" */
    var AudioBus: String /* "AudioBus" */
    var Submix: String /* "Submix" */
    var Count: String /* "Count" */
    var ESubmixEffectDynamicsKeySource_MAX: String /* "ESubmixEffectDynamicsKeySource_MAX" */
}

external open class SubmixEffectDynamicProcessorFilterSettings {
    open var bEnabled: Boolean
    open var Cutoff: Number
    open var GainDb: Number
    open fun clone(): SubmixEffectDynamicProcessorFilterSettings

    companion object {
        fun C(Other: UObject): SubmixEffectDynamicProcessorFilterSettings
        fun C(Other: Any): SubmixEffectDynamicProcessorFilterSettings
    }
}

external open class SubmixEffectDynamicsProcessorSettings {
    open var DynamicsProcessorType: String /* "Compressor" | "Limiter" | "Expander" | "Gate" | "UpwardsCompressor" | "Count" | "ESubmixEffectDynamicsProcessorType_MAX" */
    open var PeakMode: String /* "MeanSquared" | "RootMeanSquared" | "Peak" | "Count" | "ESubmixEffectDynamicsPeakMode_MAX" */
    open var LinkMode: String /* "Disabled" | "Average" | "Peak" | "Count" | "ESubmixEffectDynamicsChannelLinkMode_MAX" */
    open var InputGainDb: Number
    open var ThresholdDb: Number
    open var Ratio: Number
    open var KneeBandwidthDb: Number
    open var LookAheadMsec: Number
    open var AttackTimeMsec: Number
    open var ReleaseTimeMsec: Number
    open var KeySource: String /* "Default" | "AudioBus" | "Submix" | "Count" | "ESubmixEffectDynamicsKeySource_MAX" */
    open var ExternalAudioBus: AudioBus
    open var ExternalSubmix: SoundSubmix
    open var bChannelLinked: Boolean
    open var bAnalogMode: Boolean
    open var bBypass: Boolean
    open var bKeyAudition: Boolean
    open var KeyGainDb: Number
    open var OutputGainDb: Number
    open var KeyHighshelf: SubmixEffectDynamicProcessorFilterSettings
    open var KeyLowshelf: SubmixEffectDynamicProcessorFilterSettings
    open fun clone(): SubmixEffectDynamicsProcessorSettings

    companion object {
        fun C(Other: UObject): SubmixEffectDynamicsProcessorSettings
        fun C(Other: Any): SubmixEffectDynamicsProcessorSettings
    }
}

external open class SubmixEffectDynamicsProcessorPreset : SoundEffectSubmixPreset {
    constructor()
    constructor(Outer: UObject)
    open var Settings: SubmixEffectDynamicsProcessorSettings
    open fun SetDynamicSettings(Settings: SubmixEffectDynamicsProcessorSettings)
    open fun SetExternalSubmix(Submix: SoundSubmix)
    open fun SetAudioBus(AudioBus: AudioBus)
    open fun ResetKey()

    companion object {
        fun Load(ResourceName: String): SubmixEffectDynamicsProcessorPreset
        fun Find(Outer: UObject, ResourceName: String): SubmixEffectDynamicsProcessorPreset
        fun GetDefaultObject(): SubmixEffectDynamicsProcessorPreset
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SubmixEffectDynamicsProcessorPreset
        fun C(Other: UObject): SubmixEffectDynamicsProcessorPreset
        fun C(Other: Any): SubmixEffectDynamicsProcessorPreset
    }
}

external open class SubmixEffectEQBand {
    open var Frequency: Number
    open var Bandwidth: Number
    open var GainDb: Number
    open var bEnabled: Boolean
    open fun clone(): SubmixEffectEQBand

    companion object {
        fun C(Other: UObject): SubmixEffectEQBand
        fun C(Other: Any): SubmixEffectEQBand
    }
}

external open class SubmixEffectSubmixEQSettings {
    open var EQBands: Array<SubmixEffectEQBand>
    open fun clone(): SubmixEffectSubmixEQSettings

    companion object {
        fun C(Other: UObject): SubmixEffectSubmixEQSettings
        fun C(Other: Any): SubmixEffectSubmixEQSettings
    }
}

external open class SubmixEffectSubmixEQPreset : SoundEffectSubmixPreset {
    constructor()
    constructor(Outer: UObject)
    open var Settings: SubmixEffectSubmixEQSettings
    open fun SetSettings(InSettings: SubmixEffectSubmixEQSettings)

    companion object {
        fun Load(ResourceName: String): SubmixEffectSubmixEQPreset
        fun Find(Outer: UObject, ResourceName: String): SubmixEffectSubmixEQPreset
        fun GetDefaultObject(): SubmixEffectSubmixEQPreset
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SubmixEffectSubmixEQPreset
        fun C(Other: UObject): SubmixEffectSubmixEQPreset
        fun C(Other: Any): SubmixEffectSubmixEQPreset
    }
}

external open class SubmixEffectReverbSettings {
    open var bBypassEarlyReflections: Boolean
    open var ReflectionsDelay: Number
    open var GainHF: Number
    open var ReflectionsGain: Number
    open var bBypassLateReflections: Boolean
    open var LateDelay: Number
    open var DecayTime: Number
    open var Density: Number
    open var Diffusion: Number
    open var AirAbsorptionGainHF: Number
    open var DecayHFRatio: Number
    open var LateGain: Number
    open var Gain: Number
    open var WetLevel: Number
    open var DryLevel: Number
    open var bBypass: Boolean
    open fun clone(): SubmixEffectReverbSettings

    companion object {
        fun C(Other: UObject): SubmixEffectReverbSettings
        fun C(Other: Any): SubmixEffectReverbSettings
    }
}

external open class SubmixEffectReverbPreset : SoundEffectSubmixPreset {
    constructor()
    constructor(Outer: UObject)
    open var Settings: SubmixEffectReverbSettings
    open fun SetSettingsWithReverbEffect(InReverbEffect: ReverbEffect, WetLevel: Number, DryLevel: Number)
    open fun SetSettings(InSettings: SubmixEffectReverbSettings)

    companion object {
        fun Load(ResourceName: String): SubmixEffectReverbPreset
        fun Find(Outer: UObject, ResourceName: String): SubmixEffectReverbPreset
        fun GetDefaultObject(): SubmixEffectReverbPreset
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SubmixEffectReverbPreset
        fun C(Other: UObject): SubmixEffectReverbPreset
        fun C(Other: Any): SubmixEffectReverbPreset
    }
}

external open class TickableWorldSubsystem : WorldSubsystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TickableWorldSubsystem
        fun Find(Outer: UObject, ResourceName: String): TickableWorldSubsystem
        fun GetDefaultObject(): TickableWorldSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TickableWorldSubsystem
        fun C(Other: UObject): TickableWorldSubsystem
        fun C(Other: Any): TickableWorldSubsystem
    }
}

external object EQuartzTimeSignatureQuantization {
    var HalfNote: String /* "HalfNote" */
    var QuarterNote: String /* "QuarterNote" */
    var EighthNote: String /* "EighthNote" */
    var SixteenthNote: String /* "SixteenthNote" */
    var ThirtySecondNote: String /* "ThirtySecondNote" */
    var Count: String /* "Count" */
    var EQuartzTimeSignatureQuantization_MAX: String /* "EQuartzTimeSignatureQuantization_MAX" */
}

external open class QuartzPulseOverrideStep {
    open var NumberOfPulses: Number
    open var PulseDuration: String /* "Bar" | "Beat" | "ThirtySecondNote" | "SixteenthNote" | "EighthNote" | "QuarterNote" | "HalfNote" | "WholeNote" | "DottedSixteenthNote" | "DottedEighthNote" | "DottedQuarterNote" | "DottedHalfNote" | "DottedWholeNote" | "SixteenthNoteTriplet" | "EighthNoteTriplet" | "QuarterNoteTriplet" | "HalfNoteTriplet" | "Tick" | "Count" | "None" | "EQuartzCommandQuantization_MAX" */
    open fun clone(): QuartzPulseOverrideStep

    companion object {
        fun C(Other: UObject): QuartzPulseOverrideStep
        fun C(Other: Any): QuartzPulseOverrideStep
    }
}

external open class QuartzTimeSignature {
    open var NumBeats: Number
    open var BeatType: String /* "HalfNote" | "QuarterNote" | "EighthNote" | "SixteenthNote" | "ThirtySecondNote" | "Count" | "EQuartzTimeSignatureQuantization_MAX" */
    open var OptionalPulseOverride: Array<QuartzPulseOverrideStep>
    open fun clone(): QuartzTimeSignature

    companion object {
        fun C(Other: UObject): QuartzTimeSignature
        fun C(Other: Any): QuartzTimeSignature
    }
}

external open class QuartzClockSettings {
    open var TimeSignature: QuartzTimeSignature
    open var bIgnoreLevelChange: Boolean
    open fun clone(): QuartzClockSettings

    companion object {
        fun C(Other: UObject): QuartzClockSettings
        fun C(Other: Any): QuartzClockSettings
    }
}

external interface `T$645` {
    var InClockHandle: QuartzClockHandle
}

external open class QuartzSubsystem : TickableWorldSubsystem {
    constructor()
    constructor(Outer: UObject)
    open fun IsQuartzEnabled(): Boolean
    open fun IsClockRunning(WorldContextObject: UObject, ClockName: String): Boolean
    open fun GetRoundTripMinLatency(WorldContextObject: UObject): Number
    open fun GetRoundTripMaxLatency(WorldContextObject: UObject): Number
    open fun GetRoundTripAverageLatency(WorldContextObject: UObject): Number
    open fun GetHandleForClock(WorldContextObject: UObject, ClockName: String): QuartzClockHandle
    open fun GetGameThreadToAudioRenderThreadMinLatency(WorldContextObject: UObject): Number
    open fun GetGameThreadToAudioRenderThreadMaxLatency(WorldContextObject: UObject): Number
    open fun GetGameThreadToAudioRenderThreadAverageLatency(WorldContextObject: UObject): Number
    open fun GetEstimatedClockRunTime(WorldContextObject: UObject, InClockName: String): Number
    open fun GetDurationOfQuantizationTypeInSeconds(WorldContextObject: UObject, ClockName: String, QuantizationType: String /* "Bar" | "Beat" | "ThirtySecondNote" | "SixteenthNote" | "EighthNote" | "QuarterNote" | "HalfNote" | "WholeNote" | "DottedSixteenthNote" | "DottedEighthNote" | "DottedQuarterNote" | "DottedHalfNote" | "DottedWholeNote" | "SixteenthNoteTriplet" | "EighthNoteTriplet" | "QuarterNoteTriplet" | "HalfNoteTriplet" | "Tick" | "Count" | "None" | "EQuartzCommandQuantization_MAX" */, Multiplier: Number): Number
    open fun GetCurrentClockTimestamp(WorldContextObject: UObject, InClockName: String): QuartzTransportTimeStamp
    open fun GetAudioRenderThreadToGameThreadMinLatency(): Number
    open fun GetAudioRenderThreadToGameThreadMaxLatency(): Number
    open fun GetAudioRenderThreadToGameThreadAverageLatency(): Number
    open fun DoesClockExist(WorldContextObject: UObject, ClockName: String): Boolean
    open fun DeleteClockByName(WorldContextObject: UObject, ClockName: String)
    open fun DeleteClockByHandle(WorldContextObject: UObject, InClockHandle: QuartzClockHandle = definedExternally): `T$645`
    open fun CreateNewClock(WorldContextObject: UObject, ClockName: String, InSettings: QuartzClockSettings, bOverrideSettingsIfClockExists: Boolean, bUseAudioEngineClockManager: Boolean): QuartzClockHandle

    companion object {
        fun Load(ResourceName: String): QuartzSubsystem
        fun Find(Outer: UObject, ResourceName: String): QuartzSubsystem
        fun GetDefaultObject(): QuartzSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): QuartzSubsystem
        fun C(Other: UObject): QuartzSubsystem
        fun C(Other: Any): QuartzSubsystem
    }
}

external open class SoundWaveProcedural : SoundWave {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundWaveProcedural
        fun Find(Outer: UObject, ResourceName: String): SoundWaveProcedural
        fun GetDefaultObject(): SoundWaveProcedural
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundWaveProcedural
        fun C(Other: UObject): SoundWaveProcedural
        fun C(Other: Any): SoundWaveProcedural
    }
}

external open class SynthComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var bAutoDestroy: Boolean
    open var bStopWhenOwnerDestroyed: Boolean
    open var bAllowSpatialization: Boolean
    open var bOverrideAttenuation: Boolean
    open var bOutputToBusOnly: Boolean
    open var bEnableBusSends: Boolean
    open var bEnableBaseSubmix: Boolean
    open var bEnableSubmixSends: Boolean
    open var AttenuationSettings: SoundAttenuation
    open var AttenuationOverrides: SoundAttenuationSettings
    open var ConcurrencySettings: SoundConcurrency
    open var ConcurrencySet: Any
    open var SoundClass: SoundClass
    open var SourceEffectChain: SoundEffectSourcePresetChain
    open var SoundSubmix: SoundSubmixBase
    open var SoundSubmixSends: Array<SoundSubmixSendInfo>
    open var BusSends: Array<SoundSourceBusSendInfo>
    open var PreEffectBusSends: Array<SoundSourceBusSendInfo>
    open var bIsUISound: Boolean
    open var bIsPreviewSound: Boolean
    open var EnvelopeFollowerAttackTime: Number
    open var EnvelopeFollowerReleaseTime: Number
    open var OnAudioEnvelopeValue: UnrealEngineMulticastDelegate<(EnvelopeValue: Number) -> Unit>
    open var Synth: SynthSound
    open var AudioComponent: AudioComponent
    open fun Stop()
    open fun Start()
    open fun SetVolumeMultiplier(VolumeMultiplier: Number)
    open fun SetSubmixSend(Submix: SoundSubmixBase, SendLevel: Number)
    open fun SetOutputToBusOnly(bInOutputToBusOnly: Boolean)
    open fun SetLowPassFilterFrequency(InLowPassFilterFrequency: Number)
    open fun SetLowPassFilterEnabled(InLowPassFilterEnabled: Boolean)
    open fun IsPlaying(): Boolean

    companion object {
        fun Load(ResourceName: String): SynthComponent
        fun Find(Outer: UObject, ResourceName: String): SynthComponent
        fun GetDefaultObject(): SynthComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SynthComponent
        fun C(Other: UObject): SynthComponent
        fun C(Other: Any): SynthComponent
    }
}

external open class SynthSound : SoundWaveProcedural {
    constructor()
    constructor(Outer: UObject)
    open var OwningSynthComponent: SynthComponent

    companion object {
        fun Load(ResourceName: String): SynthSound
        fun Find(Outer: UObject, ResourceName: String): SynthSound
        fun GetDefaultObject(): SynthSound
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SynthSound
        fun C(Other: UObject): SynthSound
        fun C(Other: Any): SynthSound
    }
}

external open class MediaSource : UObject {
    constructor()
    constructor(Outer: UObject)
    open fun Validate(): Boolean
    open fun SetMediaOption(Key: String, Value: String)
    open fun SetMediaOption(Key: String, Value: Any)
    open fun SetMediaOption(Key: String, Value: Number)
    open fun SetMediaOption(Key: String, Value: Boolean)
    open fun GetUrl(): String

    companion object {
        fun Load(ResourceName: String): MediaSource
        fun Find(Outer: UObject, ResourceName: String): MediaSource
        fun GetDefaultObject(): MediaSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MediaSource
        fun C(Other: UObject): MediaSource
        fun C(Other: Any): MediaSource
    }
}

external open class BaseMediaSource : MediaSource {
    open var PlatformPlayerNames: Any
    open var PlayerName: String
    fun <K : String> addEventListener(type: K, listener: (self: MediaSource, ev: Any) -> Any, options: Boolean)
    fun <K : String> addEventListener(type: K, listener: (self: MediaSource, ev: Any) -> Any)
    fun <K : String> addEventListener(type: K, listener: (self: MediaSource, ev: Any) -> Any, options: AddEventListenerOptions)
    fun addEventListener(type: String, listener: EventListener, options: Boolean)
    fun addEventListener(type: String, listener: EventListener)
    fun addEventListener(type: String, listener: EventListener, options: AddEventListenerOptions)
    fun addEventListener(type: String, listener: EventListenerObject, options: Boolean)
    fun addEventListener(type: String, listener: EventListenerObject)
    fun addEventListener(type: String, listener: EventListenerObject, options: AddEventListenerOptions)
    fun <K : String> removeEventListener(type: K, listener: (self: MediaSource, ev: Any) -> Any, options: Boolean)
    fun <K : String> removeEventListener(type: K, listener: (self: MediaSource, ev: Any) -> Any)
    fun <K : String> removeEventListener(type: K, listener: (self: MediaSource, ev: Any) -> Any, options: EventListenerOptions)
    fun removeEventListener(type: String, listener: EventListener, options: Boolean)
    fun removeEventListener(type: String, listener: EventListener)
    fun removeEventListener(type: String, listener: EventListener, options: EventListenerOptions)
    fun removeEventListener(type: String, listener: EventListenerObject, options: Boolean)
    fun removeEventListener(type: String, listener: EventListenerObject)
    fun removeEventListener(type: String, listener: EventListenerObject, options: EventListenerOptions)

    companion object {
        fun Load(ResourceName: String): BaseMediaSource
        fun Find(Outer: UObject, ResourceName: String): BaseMediaSource
        fun GetDefaultObject(): BaseMediaSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BaseMediaSource
        fun C(Other: UObject): BaseMediaSource
        fun C(Other: Any): BaseMediaSource
    }
}

external open class FileMediaSource : BaseMediaSource {
    open var FilePath: String
    open var PrecacheFile: Boolean
    open fun SetFilePath(Path: String)

    companion object {
        fun Load(ResourceName: String): FileMediaSource
        fun Find(Outer: UObject, ResourceName: String): FileMediaSource
        fun GetDefaultObject(): FileMediaSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FileMediaSource
        fun C(Other: UObject): FileMediaSource
        fun C(Other: Any): FileMediaSource
    }
}

external open class MediaCaptureDevice {
    open var DisplayName: String
    open var URL: String
    open fun clone(): MediaCaptureDevice

    companion object {
        fun C(Other: UObject): MediaCaptureDevice
        fun C(Other: Any): MediaCaptureDevice
    }
}

external interface `T$646` {
    var OutDevices: Array<MediaCaptureDevice>
}

external interface `T$647` {
    var OutDevices: Array<MediaCaptureDevice>
}

external interface `T$648` {
    var OutDevices: Array<MediaCaptureDevice>
}

external open class MediaBlueprintFunctionLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MediaBlueprintFunctionLibrary
        fun Find(Outer: UObject, ResourceName: String): MediaBlueprintFunctionLibrary
        fun GetDefaultObject(): MediaBlueprintFunctionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MediaBlueprintFunctionLibrary
        fun EnumerateWebcamCaptureDevices(OutDevices: Array<MediaCaptureDevice> = definedExternally, Filter: Number = definedExternally): `T$646`
        fun EnumerateVideoCaptureDevices(OutDevices: Array<MediaCaptureDevice> = definedExternally, Filter: Number = definedExternally): `T$647`
        fun EnumerateAudioCaptureDevices(OutDevices: Array<MediaCaptureDevice> = definedExternally, Filter: Number = definedExternally): `T$648`
        fun C(Other: UObject): MediaBlueprintFunctionLibrary
        fun C(Other: Any): MediaBlueprintFunctionLibrary
    }
}

external object MediaTextureOutputFormat {
    var MTOF_Default: String /* "MTOF_Default" */
    var MTOF_SRGB_LINOUT: String /* "MTOF_SRGB_LINOUT" */
    var MTOF_MAX: String /* "MTOF_MAX" */
}

external object MediaTextureOrientation {
    var MTORI_Original: String /* "MTORI_Original" */
    var MTORI_CW90: String /* "MTORI_CW90" */
    var MTORI_CW180: String /* "MTORI_CW180" */
    var MTORI_CW270: String /* "MTORI_CW270" */
    var MTORI_MAX: String /* "MTORI_MAX" */
}

external interface `T$649` {
    var OutIndex: Number
    var `$`: MediaSource
}

external interface `T$650` {
    var InOutIndex: Number
    var `$`: MediaSource
}

external open class MediaPlaylist : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Items: Array<MediaSource>
    open fun Replace(index: Number, Replacement: MediaSource): Boolean
    open fun RemoveAt(index: Number): Boolean
    open fun Remove(MediaSource: MediaSource): Boolean
    open fun Num(): Number
    open fun Insert(MediaSource: MediaSource, index: Number)
    open fun GetRandom(OutIndex: Number = definedExternally): `T$649`
    open fun GetPrevious(InOutIndex: Number = definedExternally): `T$650`
    open fun GetNext(InOutIndex: Number = definedExternally): `T$650`
    open fun Get(index: Number): MediaSource
    open fun AddUrl(URL: String): Boolean
    open fun AddFile(FilePath: String): Boolean
    open fun Add(MediaSource: MediaSource): Boolean

    companion object {
        fun Load(ResourceName: String): MediaPlaylist
        fun Find(Outer: UObject, ResourceName: String): MediaPlaylist
        fun GetDefaultObject(): MediaPlaylist
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MediaPlaylist
        fun C(Other: UObject): MediaPlaylist
        fun C(Other: Any): MediaPlaylist
    }
}

external object EMediaPlayerTrack {
    var Audio: String /* "Audio" */
    var Caption: String /* "Caption" */
    var Metadata: String /* "Metadata" */
    var Script: String /* "Script" */
    var Subtitle: String /* "Subtitle" */
    var Text: String /* "Text" */
    var Video: String /* "Video" */
    var EMediaPlayerTrack_MAX: String /* "EMediaPlayerTrack_MAX" */
}

external open class MediaPlayerTrackOptions {
    open var Audio: Number
    open var Caption: Number
    open var MetaData: Number
    open var Script: Number
    open var Subtitle: Number
    open var text: Number
    open var Video: Number
    open fun clone(): MediaPlayerTrackOptions

    companion object {
        fun C(Other: UObject): MediaPlayerTrackOptions
        fun C(Other: Any): MediaPlayerTrackOptions
    }
}

external object EMediaPlayerOptionBooleanOverride {
    var UseMediaPlayerSetting: String /* "UseMediaPlayerSetting" */
    var Enabled: String /* "Enabled" */
    var Disabled: String /* "Disabled" */
    var EMediaPlayerOptionBooleanOverride_MAX: String /* "EMediaPlayerOptionBooleanOverride_MAX" */
}

external open class MediaPlayerOptions {
    open var Tracks: MediaPlayerTrackOptions
    open var SeekTime: Timespan
    open var PlayOnOpen: String /* "UseMediaPlayerSetting" | "Enabled" | "Disabled" | "EMediaPlayerOptionBooleanOverride_MAX" */
    open var loop: String /* "UseMediaPlayerSetting" | "Enabled" | "Disabled" | "EMediaPlayerOptionBooleanOverride_MAX" */
    open fun clone(): MediaPlayerOptions

    companion object {
        fun C(Other: UObject): MediaPlayerOptions
        fun C(Other: Any): MediaPlayerOptions
    }
}

external open class MediaTimeStampInfo : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Time: Timespan
    open var SequenceIndex: Any

    companion object {
        fun Load(ResourceName: String): MediaTimeStampInfo
        fun Find(Outer: UObject, ResourceName: String): MediaTimeStampInfo
        fun GetDefaultObject(): MediaTimeStampInfo
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MediaTimeStampInfo
        fun C(Other: UObject): MediaTimeStampInfo
        fun C(Other: Any): MediaTimeStampInfo
    }
}

external interface `T$651` {
    var bSuccess: Boolean
}

external interface `T$652` {
    var OutRates: Array<FloatRange>
}

external open class MediaPlayer : UObject {
    constructor()
    constructor(Outer: UObject)
    open var OnEndReached: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnMediaClosed: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnMediaOpened: UnrealEngineMulticastDelegate<(OpenedUrl: String) -> Unit>
    open var OnMediaOpenFailed: UnrealEngineMulticastDelegate<(FailedUrl: String) -> Unit>
    open var OnPlaybackResumed: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnPlaybackSuspended: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnSeekCompleted: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnTracksChanged: UnrealEngineMulticastDelegate<() -> Unit>
    open var CacheAhead: Timespan
    open var CacheBehind: Timespan
    open var CacheBehindGame: Timespan
    open var NativeAudioOut: Boolean
    open var PlayOnOpen: Boolean
    open var Shuffle: Boolean
    open var loop: Boolean
    open var Playlist: MediaPlaylist
    open var PlaylistIndex: Number
    open var TimeDelay: Timespan
    open var HorizontalFieldOfView: Number
    open var VerticalFieldOfView: Number
    open var ViewRotation: Rotator
    open var PlayerGuid: Guid
    open var AffectedByPIEHandling: Boolean
    open fun SupportsSeeking(): Boolean
    open fun SupportsScrubbing(): Boolean
    open fun SupportsRate(Rate: Number, Unthinned: Boolean): Boolean
    open fun SetViewRotation(Rotation: Rotator, Absolute: Boolean): Boolean
    open fun SetViewField(Horizontal: Number, Vertical: Number, Absolute: Boolean): Boolean
    open fun SetVideoTrackFrameRate(TrackIndex: Number, FormatIndex: Number, FrameRate: Number): Boolean
    open fun SetTrackFormat(TrackType: String /* "Audio" | "Caption" | "Metadata" | "Script" | "Subtitle" | "Text" | "Video" | "EMediaPlayerTrack_MAX" */, TrackIndex: Number, FormatIndex: Number): Boolean
    open fun SetTimeDelay(TimeDelay: Timespan)
    open fun SetRate(Rate: Number): Boolean
    open fun SetNativeVolume(Volume: Number): Boolean
    open fun SetMediaOptions(Options: MediaSource)
    open fun SetLooping(Looping: Boolean): Boolean
    open fun SetDesiredPlayerName(PlayerName: String)
    open fun SetBlockOnTime(Time: Timespan)
    open fun SelectTrack(TrackType: String /* "Audio" | "Caption" | "Metadata" | "Script" | "Subtitle" | "Text" | "Video" | "EMediaPlayerTrack_MAX" */, TrackIndex: Number): Boolean
    open fun Seek(Time: Timespan): Boolean
    open fun Rewind(): Boolean
    open fun Reopen(): Boolean
    open fun Previous(): Boolean
    open fun PlayAndSeek()
    open fun Play(): Boolean
    open fun Pause(): Boolean
    open fun OpenUrl(URL: String): Boolean
    open fun OpenSourceWithOptions(MediaSource: MediaSource, Options: MediaPlayerOptions): Boolean
    open fun OpenSourceLatent(WorldContextObject: UObject, LatentInfo: LatentActionInfo, MediaSource: MediaSource, Options: MediaPlayerOptions, bSuccess: Boolean = definedExternally): `T$651`
    open fun OpenSource(MediaSource: MediaSource): Boolean
    open fun OpenPlaylistIndex(InPlaylist: MediaPlaylist, index: Number): Boolean
    open fun OpenPlaylist(InPlaylist: MediaPlaylist): Boolean
    open fun OpenFile(FilePath: String): Boolean
    open fun Next(): Boolean
    open fun IsReady(): Boolean
    open fun IsPreparing(): Boolean
    open fun IsPlaying(): Boolean
    open fun IsPaused(): Boolean
    open fun IsLooping(): Boolean
    open fun IsConnecting(): Boolean
    open fun IsClosed(): Boolean
    open fun IsBuffering(): Boolean
    open fun HasError(): Boolean
    open fun GetViewRotation(): Rotator
    open fun GetVideoTrackType(TrackIndex: Number, FormatIndex: Number): String
    open fun GetVideoTrackFrameRates(TrackIndex: Number, FormatIndex: Number): FloatRange
    open fun GetVideoTrackFrameRate(TrackIndex: Number, FormatIndex: Number): Number
    open fun GetVideoTrackDimensions(TrackIndex: Number, FormatIndex: Number): IntPoint
    open fun GetVideoTrackAspectRatio(TrackIndex: Number, FormatIndex: Number): Number
    open fun GetVerticalFieldOfView(): Number
    open fun GetUrl(): String
    open fun GetTrackLanguage(TrackType: String /* "Audio" | "Caption" | "Metadata" | "Script" | "Subtitle" | "Text" | "Video" | "EMediaPlayerTrack_MAX" */, TrackIndex: Number): String
    open fun GetTrackFormat(TrackType: String /* "Audio" | "Caption" | "Metadata" | "Script" | "Subtitle" | "Text" | "Video" | "EMediaPlayerTrack_MAX" */, TrackIndex: Number): Number
    open fun GetTrackDisplayName(TrackType: String /* "Audio" | "Caption" | "Metadata" | "Script" | "Subtitle" | "Text" | "Video" | "EMediaPlayerTrack_MAX" */, TrackIndex: Number): String
    open fun GetTimeStamp(): MediaTimeStampInfo
    open fun GetTimeDelay(): Timespan
    open fun GetTime(): Timespan
    open fun GetSupportedRates(OutRates: Array<FloatRange> = definedExternally, Unthinned: Boolean = definedExternally): `T$652`
    open fun GetSelectedTrack(TrackType: String /* "Audio" | "Caption" | "Metadata" | "Script" | "Subtitle" | "Text" | "Video" | "EMediaPlayerTrack_MAX" */): Number
    open fun GetRate(): Number
    open fun GetPlaylistIndex(): Number
    open fun GetPlaylist(): MediaPlaylist
    open fun GetPlayerName(): String
    open fun GetNumTracks(TrackType: String /* "Audio" | "Caption" | "Metadata" | "Script" | "Subtitle" | "Text" | "Video" | "EMediaPlayerTrack_MAX" */): Number
    open fun GetNumTrackFormats(TrackType: String /* "Audio" | "Caption" | "Metadata" | "Script" | "Subtitle" | "Text" | "Video" | "EMediaPlayerTrack_MAX" */, TrackIndex: Number): Number
    open fun GetMediaName(): String
    open fun GetHorizontalFieldOfView(): Number
    open fun GetDuration(): Timespan
    open fun GetDesiredPlayerName(): String
    open fun GetAudioTrackType(TrackIndex: Number, FormatIndex: Number): String
    open fun GetAudioTrackSampleRate(TrackIndex: Number, FormatIndex: Number): Number
    open fun GetAudioTrackChannels(TrackIndex: Number, FormatIndex: Number): Number
    open fun Close()
    open fun CanPlayUrl(URL: String): Boolean
    open fun CanPlaySource(MediaSource: MediaSource): Boolean
    open fun CanPause(): Boolean

    companion object {
        fun Load(ResourceName: String): MediaPlayer
        fun Find(Outer: UObject, ResourceName: String): MediaPlayer
        fun GetDefaultObject(): MediaPlayer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MediaPlayer
        fun C(Other: UObject): MediaPlayer
        fun C(Other: Any): MediaPlayer
    }
}

external open class MediaTexture : Texture {
    constructor()
    constructor(Outer: UObject)
    open var AddressX: String /* "TA_Wrap" | "TA_Clamp" | "TA_Mirror" | "TA_MAX" */
    open var AddressY: String /* "TA_Wrap" | "TA_Clamp" | "TA_Mirror" | "TA_MAX" */
    open var AutoClear: Boolean
    open var ClearColor: LinearColor
    open var EnableGenMips: Boolean
    open var NumMips: Number
    open var NewStyleOutput: Boolean
    open var OutputFormat: String /* "MTOF_Default" | "MTOF_SRGB_LINOUT" | "MTOF_MAX" */
    open var CurrentAspectRatio: Number
    open var CurrentOrientation: String /* "MTORI_Original" | "MTORI_CW90" | "MTORI_CW180" | "MTORI_CW270" | "MTORI_MAX" */
    open var MediaPlayer: MediaPlayer
    open fun UpdateResource()
    open fun SetMediaPlayer(NewMediaPlayer: MediaPlayer)
    open fun GetWidth(): Number
    open fun GetTextureNumMips(): Number
    open fun GetMediaPlayer(): MediaPlayer
    open fun GetHeight(): Number
    open fun GetAspectRatio(): Number

    companion object {
        fun Load(ResourceName: String): MediaTexture
        fun Find(Outer: UObject, ResourceName: String): MediaTexture
        fun GetDefaultObject(): MediaTexture
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MediaTexture
        fun C(Other: UObject): MediaTexture
        fun C(Other: Any): MediaTexture
    }
}

external open class MediaComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var MediaTexture: MediaTexture
    open var MediaPlayer: MediaPlayer
    open fun GetMediaTexture(): MediaTexture
    open fun GetMediaPlayer(): MediaPlayer

    companion object {
        fun Load(ResourceName: String): MediaComponent
        fun Find(Outer: UObject, ResourceName: String): MediaComponent
        fun GetDefaultObject(): MediaComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MediaComponent
        fun C(Other: UObject): MediaComponent
        fun C(Other: Any): MediaComponent
    }
}

external object EMediaSoundChannels {
    var Mono: String /* "Mono" */
    var Stereo: String /* "Stereo" */
    var Surround: String /* "Surround" */
    var EMediaSoundChannels_MAX: String /* "EMediaSoundChannels_MAX" */
}

external object EMediaSoundComponentFFTSize {
    var Min_64: String /* "Min_64" */
    var Small_256: String /* "Small_256" */
    var Medium_512: String /* "Medium_512" */
    var Large_1024: String /* "Large_1024" */
    var EMediaSoundComponentFFTSize_MAX: String /* "EMediaSoundComponentFFTSize_MAX" */
}

external open class MediaSoundComponentSpectralData {
    open var FrequencyHz: Number
    open var Magnitude: Number
    open fun clone(): MediaSoundComponentSpectralData

    companion object {
        fun C(Other: UObject): MediaSoundComponentSpectralData
        fun C(Other: Any): MediaSoundComponentSpectralData
    }
}

external open class MediaSoundComponent : SynthComponent {
    constructor()
    constructor(Outer: UObject)
    open var Channels: String /* "Mono" | "Stereo" | "Surround" | "EMediaSoundChannels_MAX" */
    open var DynamicRateAdjustment: Boolean
    open var RateAdjustmentFactor: Number
    open var RateAdjustmentRange: FloatRange
    open var MediaPlayer: MediaPlayer
    open fun SetSpectralAnalysisSettings(InFrequenciesToAnalyze: Array<Number>, InFFTSize: String /* "Min_64" | "Small_256" | "Medium_512" | "Large_1024" | "EMediaSoundComponentFFTSize_MAX" */)
    open fun SetMediaPlayer(NewMediaPlayer: MediaPlayer)
    open fun SetEnvelopeFollowingsettings(AttackTimeMsec: Number, ReleaseTimeMsec: Number)
    open fun SetEnableSpectralAnalysis(bInSpectralAnalysisEnabled: Boolean)
    open fun SetEnableEnvelopeFollowing(bInEnvelopeFollowing: Boolean)
    open fun GetSpectralData(): Array<MediaSoundComponentSpectralData>
    open fun GetNormalizedSpectralData(): Array<MediaSoundComponentSpectralData>
    open fun GetMediaPlayer(): MediaPlayer
    open fun GetEnvelopeValue(): Number
    open fun GetAttenuationSettingsToApply(OutAttenuationSettings: SoundAttenuationSettings = definedExternally): `T$267`

    companion object {
        fun Load(ResourceName: String): MediaSoundComponent
        fun Find(Outer: UObject, ResourceName: String): MediaSoundComponent
        fun GetDefaultObject(): MediaSoundComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MediaSoundComponent
        fun C(Other: UObject): MediaSoundComponent
        fun C(Other: Any): MediaSoundComponent
    }
}

external open class PlatformMediaSource : MediaSource {
    open var PlatformMediaSources: Any
    open var MediaSource: MediaSource
    fun <K : String> addEventListener(type: K, listener: (self: MediaSource, ev: Any) -> Any, options: Boolean)
    fun <K : String> addEventListener(type: K, listener: (self: MediaSource, ev: Any) -> Any)
    fun <K : String> addEventListener(type: K, listener: (self: MediaSource, ev: Any) -> Any, options: AddEventListenerOptions)
    fun addEventListener(type: String, listener: EventListener, options: Boolean)
    fun addEventListener(type: String, listener: EventListener)
    fun addEventListener(type: String, listener: EventListener, options: AddEventListenerOptions)
    fun addEventListener(type: String, listener: EventListenerObject, options: Boolean)
    fun addEventListener(type: String, listener: EventListenerObject)
    fun addEventListener(type: String, listener: EventListenerObject, options: AddEventListenerOptions)
    fun <K : String> removeEventListener(type: K, listener: (self: MediaSource, ev: Any) -> Any, options: Boolean)
    fun <K : String> removeEventListener(type: K, listener: (self: MediaSource, ev: Any) -> Any)
    fun <K : String> removeEventListener(type: K, listener: (self: MediaSource, ev: Any) -> Any, options: EventListenerOptions)
    fun removeEventListener(type: String, listener: EventListener, options: Boolean)
    fun removeEventListener(type: String, listener: EventListener)
    fun removeEventListener(type: String, listener: EventListener, options: EventListenerOptions)
    fun removeEventListener(type: String, listener: EventListenerObject, options: Boolean)
    fun removeEventListener(type: String, listener: EventListenerObject)
    fun removeEventListener(type: String, listener: EventListenerObject, options: EventListenerOptions)

    companion object {
        fun Load(ResourceName: String): PlatformMediaSource
        fun Find(Outer: UObject, ResourceName: String): PlatformMediaSource
        fun GetDefaultObject(): PlatformMediaSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PlatformMediaSource
        fun C(Other: UObject): PlatformMediaSource
        fun C(Other: Any): PlatformMediaSource
    }
}

external open class StreamMediaSource : BaseMediaSource {
    open var StreamUrl: String

    companion object {
        fun Load(ResourceName: String): StreamMediaSource
        fun Find(Outer: UObject, ResourceName: String): StreamMediaSource
        fun GetDefaultObject(): StreamMediaSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): StreamMediaSource
        fun C(Other: UObject): StreamMediaSource
        fun C(Other: Any): StreamMediaSource
    }
}

external open class TimeSynchronizableMediaSource : BaseMediaSource {
    open var bUseTimeSynchronization: Boolean
    open var FrameDelay: Number
    open var TimeDelay: Any

    companion object {
        fun Load(ResourceName: String): TimeSynchronizableMediaSource
        fun Find(Outer: UObject, ResourceName: String): TimeSynchronizableMediaSource
        fun GetDefaultObject(): TimeSynchronizableMediaSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TimeSynchronizableMediaSource
        fun C(Other: UObject): TimeSynchronizableMediaSource
        fun C(Other: Any): TimeSynchronizableMediaSource
    }
}

external open class AnimSequenceLevelSequenceLink : AssetUserData {
    constructor()
    constructor(Outer: UObject)
    open var SkelTrackGuid: Guid
    open var PathToLevelSequence: SoftObjectPath

    companion object {
        fun Load(ResourceName: String): AnimSequenceLevelSequenceLink
        fun Find(Outer: UObject, ResourceName: String): AnimSequenceLevelSequenceLink
        fun GetDefaultObject(): AnimSequenceLevelSequenceLink
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimSequenceLevelSequenceLink
        fun C(Other: UObject): AnimSequenceLevelSequenceLink
        fun C(Other: Any): AnimSequenceLevelSequenceLink
    }
}

external open class DefaultLevelSequenceInstanceData : UObject {
    constructor()
    constructor(Outer: UObject)
    open var TransformOriginActor: Actor
    open var TransformOrigin: Transform

    companion object {
        fun Load(ResourceName: String): DefaultLevelSequenceInstanceData
        fun Find(Outer: UObject, ResourceName: String): DefaultLevelSequenceInstanceData
        fun GetDefaultObject(): DefaultLevelSequenceInstanceData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DefaultLevelSequenceInstanceData
        fun C(Other: UObject): DefaultLevelSequenceInstanceData
        fun C(Other: Any): DefaultLevelSequenceInstanceData
    }
}

external open class LevelSequenceMetaData : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LevelSequenceMetaData
        fun Find(Outer: UObject, ResourceName: String): LevelSequenceMetaData
        fun GetDefaultObject(): LevelSequenceMetaData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelSequenceMetaData
        fun C(Other: UObject): LevelSequenceMetaData
        fun C(Other: Any): LevelSequenceMetaData
    }
}

external interface `T$653` {
    var OutActor: LevelSequenceActor
    var `$`: LevelSequencePlayer
}

external open class LevelSequencePlayer : MovieSceneSequencePlayer {
    constructor()
    constructor(Outer: UObject)
    open var OnCameraCut: UnrealEngineMulticastDelegate<(CameraComponent: CameraComponent) -> Unit>
    open fun GetActiveCameraComponent(): CameraComponent

    companion object {
        fun Load(ResourceName: String): LevelSequencePlayer
        fun Find(Outer: UObject, ResourceName: String): LevelSequencePlayer
        fun GetDefaultObject(): LevelSequencePlayer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelSequencePlayer
        fun CreateLevelSequencePlayer(WorldContextObject: UObject, LevelSequence: LevelSequence, Settings: MovieSceneSequencePlaybackSettings, OutActor: LevelSequenceActor = definedExternally): `T$653`
        fun C(Other: UObject): LevelSequencePlayer
        fun C(Other: Any): LevelSequencePlayer
    }
}

external open class LevelSequenceCameraSettings {
    open var bOverrideAspectRatioAxisConstraint: Boolean
    open var AspectRatioAxisConstraint: String /* "AspectRatio_MaintainYFOV" | "AspectRatio_MaintainXFOV" | "AspectRatio_MajorAxisFOV" | "AspectRatio_MAX" */
    open fun clone(): LevelSequenceCameraSettings

    companion object {
        fun C(Other: UObject): LevelSequenceCameraSettings
        fun C(Other: Any): LevelSequenceCameraSettings
    }
}

external open class LevelSequencePlayerSnapshot {
    open var MasterName: String
    open var MasterTime: QualifiedFrameTime
    open var SourceTime: QualifiedFrameTime
    open var CurrentShotName: String
    open var CurrentShotLocalTime: QualifiedFrameTime
    open var CurrentShotSourceTime: QualifiedFrameTime
    open var SourceTimecode: String
    open var CameraComponent: CameraComponent
    open var ActiveShot: LevelSequence
    open var ShotID: MovieSceneSequenceID
    open fun clone(): LevelSequencePlayerSnapshot

    companion object {
        fun C(Other: UObject): LevelSequencePlayerSnapshot
        fun C(Other: Any): LevelSequencePlayerSnapshot
    }
}

external open class LevelSequenceBurnIn : UserWidget {
    constructor()
    constructor(Outer: UObject)
    open var FrameInformation: LevelSequencePlayerSnapshot
    open var LevelSequenceActor: LevelSequenceActor
    open fun SetSettings(InSettings: UObject)
    open fun GetSettingsClass(): UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): LevelSequenceBurnIn
        fun Find(Outer: UObject, ResourceName: String): LevelSequenceBurnIn
        fun GetDefaultObject(): LevelSequenceBurnIn
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelSequenceBurnIn
        fun C(Other: UObject): LevelSequenceBurnIn
        fun C(Other: Any): LevelSequenceBurnIn
    }
}

external open class LevelSequenceActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var PlaybackSettings: MovieSceneSequencePlaybackSettings
    open var SequencePlayer: LevelSequencePlayer
    open var LevelSequenceAsset: LevelSequence
    open var LevelSequence: SoftObjectPath
    open var CameraSettings: LevelSequenceCameraSettings
    open var BurnInOptions: LevelSequenceBurnInOptions
    open var BindingOverrides: MovieSceneBindingOverrides
    open var bAutoPlay: Boolean
    open var bOverrideInstanceData: Boolean
    open var bReplicatePlayback: Boolean
    open var DefaultInstanceData: UObject
    open var BurnInInstance: LevelSequenceBurnIn
    open var bShowBurnin: Boolean
    open fun ShowBurnin()
    open fun SetSequence(InSequence: LevelSequence)
    open fun SetReplicatePlayback(ReplicatePlayback: Boolean)
    open fun SetBindingByTag(BindingTag: String, Actors: Array<Actor>, bAllowBindingsFromAsset: Boolean)
    open fun SetBinding(Binding: MovieSceneObjectBindingID, Actors: Array<Actor>, bAllowBindingsFromAsset: Boolean)
    open fun ResetBindings()
    open fun ResetBinding(Binding: MovieSceneObjectBindingID)
    open fun RemoveBindingByTag(Tag: String, Actor: Actor)
    open fun RemoveBinding(Binding: MovieSceneObjectBindingID, Actor: Actor)
    open fun LoadSequence(): LevelSequence
    open fun HideBurnin()
    open fun GetSequencePlayer(): LevelSequencePlayer
    open fun GetSequence(): LevelSequence
    open fun FindBindingsbyTag(Tag: String): Array<MovieSceneObjectBindingID>
    open fun FindBindingbyTag(Tag: String): MovieSceneObjectBindingID
    open fun AddBindingByTag(BindingTag: String, Actor: Actor, bAllowBindingsFromAsset: Boolean)
    open fun AddBinding(Binding: MovieSceneObjectBindingID, Actor: Actor, bAllowBindingsFromAsset: Boolean)

    companion object {
        fun GetDefaultObject(): LevelSequenceActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelSequenceActor
        fun C(Other: UObject): LevelSequenceActor
        fun C(Other: Any): LevelSequenceActor
    }
}

external open class LevelSequenceAnimSequenceLinkItem {
    open var SkelTrackGuid: Guid
    open var PathToAnimSequence: SoftObjectPath
    open var bExportTransforms: Boolean
    open var bExportMorphTargets: Boolean
    open var bExportAttributeCurves: Boolean
    open var bExportMaterialCurves: Boolean
    open var bRecordInWorldSpace: Boolean
    open fun clone(): LevelSequenceAnimSequenceLinkItem

    companion object {
        fun C(Other: UObject): LevelSequenceAnimSequenceLinkItem
        fun C(Other: Any): LevelSequenceAnimSequenceLinkItem
    }
}

external open class LevelSequenceAnimSequenceLink : AssetUserData {
    constructor()
    constructor(Outer: UObject)
    open var AnimSequenceLinks: Array<LevelSequenceAnimSequenceLinkItem>

    companion object {
        fun Load(ResourceName: String): LevelSequenceAnimSequenceLink
        fun Find(Outer: UObject, ResourceName: String): LevelSequenceAnimSequenceLink
        fun GetDefaultObject(): LevelSequenceAnimSequenceLink
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelSequenceAnimSequenceLink
        fun C(Other: UObject): LevelSequenceAnimSequenceLink
        fun C(Other: Any): LevelSequenceAnimSequenceLink
    }
}

external open class LevelSequenceDirector : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Player: LevelSequencePlayer
    open var SubSequenceID: Number
    open var MovieScenePlayerIndex: Number
    open fun OnCreated()
    open fun GetSequence(): MovieSceneSequence
    open fun GetBoundObjects(ObjectBinding: MovieSceneObjectBindingID): Array<UObject>
    open fun GetBoundObject(ObjectBinding: MovieSceneObjectBindingID): UObject
    open fun GetBoundActors(ObjectBinding: MovieSceneObjectBindingID): Array<Actor>
    open fun GetBoundActor(ObjectBinding: MovieSceneObjectBindingID): Actor

    companion object {
        fun Load(ResourceName: String): LevelSequenceDirector
        fun Find(Outer: UObject, ResourceName: String): LevelSequenceDirector
        fun GetDefaultObject(): LevelSequenceDirector
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelSequenceDirector
        fun C(Other: UObject): LevelSequenceDirector
        fun C(Other: Any): LevelSequenceDirector
    }
}

external open class LegacyLevelSequenceDirectorBlueprint : Blueprint {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LegacyLevelSequenceDirectorBlueprint
        fun Find(Outer: UObject, ResourceName: String): LegacyLevelSequenceDirectorBlueprint
        fun GetDefaultObject(): LegacyLevelSequenceDirectorBlueprint
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LegacyLevelSequenceDirectorBlueprint
        fun C(Other: UObject): LegacyLevelSequenceDirectorBlueprint
        fun C(Other: Any): LegacyLevelSequenceDirectorBlueprint
    }
}

external open class LevelSequenceProjectSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var bDefaultLockEngineToDisplayRate: Boolean
    open var DefaultDisplayRate: String
    open var DefaultTickResolution: String
    open var DefaultClockSource: String /* "Tick" | "Platform" | "Audio" | "RelativeTimecode" | "Timecode" | "PlayEveryFrame" | "Custom" | "EUpdateClockSource_MAX" */

    companion object {
        fun Load(ResourceName: String): LevelSequenceProjectSettings
        fun Find(Outer: UObject, ResourceName: String): LevelSequenceProjectSettings
        fun GetDefaultObject(): LevelSequenceProjectSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelSequenceProjectSettings
        fun C(Other: UObject): LevelSequenceProjectSettings
        fun C(Other: Any): LevelSequenceProjectSettings
    }
}

external open class LevelSequenceMediaController(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var Sequence: LevelSequenceActor
    open var MediaComponent: MediaComponent
    open var ServerStartTimeSeconds: Number
    open fun SynchronizeToServer(DesyncThresholdSeconds: Number)
    open fun Play()
    open fun OnRep_ServerStartTimeSeconds()
    open fun GetSequence(): LevelSequenceActor
    open fun GetMediaComponent(): MediaComponent

    companion object {
        fun GetDefaultObject(): LevelSequenceMediaController
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelSequenceMediaController
        fun C(Other: UObject): LevelSequenceMediaController
        fun C(Other: Any): LevelSequenceMediaController
    }
}

external open class ActorElementDetailsInterface : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorElementDetailsInterface
        fun Find(Outer: UObject, ResourceName: String): ActorElementDetailsInterface
        fun GetDefaultObject(): ActorElementDetailsInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorElementDetailsInterface
        fun C(Other: UObject): ActorElementDetailsInterface
        fun C(Other: Any): ActorElementDetailsInterface
    }
}

external open class ActorElementAssetDataInterface : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorElementAssetDataInterface
        fun Find(Outer: UObject, ResourceName: String): ActorElementAssetDataInterface
        fun GetDefaultObject(): ActorElementAssetDataInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorElementAssetDataInterface
        fun C(Other: UObject): ActorElementAssetDataInterface
        fun C(Other: Any): ActorElementAssetDataInterface
    }
}

external open class ActorElementEditorAssetDataInterface : ActorElementAssetDataInterface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorElementEditorAssetDataInterface
        fun Find(Outer: UObject, ResourceName: String): ActorElementEditorAssetDataInterface
        fun GetDefaultObject(): ActorElementEditorAssetDataInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorElementEditorAssetDataInterface
        fun C(Other: UObject): ActorElementEditorAssetDataInterface
        fun C(Other: Any): ActorElementEditorAssetDataInterface
    }
}

external open class ActorElementSelectionInterface : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorElementSelectionInterface
        fun Find(Outer: UObject, ResourceName: String): ActorElementSelectionInterface
        fun GetDefaultObject(): ActorElementSelectionInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorElementSelectionInterface
        fun C(Other: UObject): ActorElementSelectionInterface
        fun C(Other: Any): ActorElementSelectionInterface
    }
}

external open class ActorElementEditorSelectionInterface : ActorElementSelectionInterface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorElementEditorSelectionInterface
        fun Find(Outer: UObject, ResourceName: String): ActorElementEditorSelectionInterface
        fun GetDefaultObject(): ActorElementEditorSelectionInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorElementEditorSelectionInterface
        fun C(Other: UObject): ActorElementEditorSelectionInterface
        fun C(Other: Any): ActorElementEditorSelectionInterface
    }
}

external open class ActorElementWorldInterface : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorElementWorldInterface
        fun Find(Outer: UObject, ResourceName: String): ActorElementWorldInterface
        fun GetDefaultObject(): ActorElementWorldInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorElementWorldInterface
        fun C(Other: UObject): ActorElementWorldInterface
        fun C(Other: Any): ActorElementWorldInterface
    }
}

external open class ActorElementEditorWorldInterface : ActorElementWorldInterface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorElementEditorWorldInterface
        fun Find(Outer: UObject, ResourceName: String): ActorElementEditorWorldInterface
        fun GetDefaultObject(): ActorElementEditorWorldInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorElementEditorWorldInterface
        fun C(Other: UObject): ActorElementEditorWorldInterface
        fun C(Other: Any): ActorElementEditorWorldInterface
    }
}

external open class ActorFactoryAmbientSound : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryAmbientSound
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryAmbientSound
        fun GetDefaultObject(): ActorFactoryAmbientSound
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryAmbientSound
        fun C(Other: UObject): ActorFactoryAmbientSound
        fun C(Other: Any): ActorFactoryAmbientSound
    }
}

external open class ActorFactorySkeletalMesh : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactorySkeletalMesh
        fun Find(Outer: UObject, ResourceName: String): ActorFactorySkeletalMesh
        fun GetDefaultObject(): ActorFactorySkeletalMesh
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactorySkeletalMesh
        fun C(Other: UObject): ActorFactorySkeletalMesh
        fun C(Other: Any): ActorFactorySkeletalMesh
    }
}

external open class ActorFactoryAnimationAsset : ActorFactorySkeletalMesh {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryAnimationAsset
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryAnimationAsset
        fun GetDefaultObject(): ActorFactoryAnimationAsset
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryAnimationAsset
        fun C(Other: UObject): ActorFactoryAnimationAsset
        fun C(Other: Any): ActorFactoryAnimationAsset
    }
}

external open class ActorFactoryStaticMesh : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryStaticMesh
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryStaticMesh
        fun GetDefaultObject(): ActorFactoryStaticMesh
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryStaticMesh
        fun C(Other: UObject): ActorFactoryStaticMesh
        fun C(Other: Any): ActorFactoryStaticMesh
    }
}

external open class ActorFactoryBasicShape : ActorFactoryStaticMesh {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryBasicShape
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryBasicShape
        fun GetDefaultObject(): ActorFactoryBasicShape
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryBasicShape
        fun C(Other: UObject): ActorFactoryBasicShape
        fun C(Other: Any): ActorFactoryBasicShape
    }
}

external open class ActorFactoryBlueprint : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryBlueprint
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryBlueprint
        fun GetDefaultObject(): ActorFactoryBlueprint
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryBlueprint
        fun C(Other: UObject): ActorFactoryBlueprint
        fun C(Other: Any): ActorFactoryBlueprint
    }
}

external open class ActorFactoryBoxReflectionCapture : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryBoxReflectionCapture
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryBoxReflectionCapture
        fun GetDefaultObject(): ActorFactoryBoxReflectionCapture
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryBoxReflectionCapture
        fun C(Other: UObject): ActorFactoryBoxReflectionCapture
        fun C(Other: Any): ActorFactoryBoxReflectionCapture
    }
}

external open class ActorFactoryCameraActor : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryCameraActor
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryCameraActor
        fun GetDefaultObject(): ActorFactoryCameraActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryCameraActor
        fun C(Other: UObject): ActorFactoryCameraActor
        fun C(Other: Any): ActorFactoryCameraActor
    }
}

external open class ActorFactoryCharacter : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryCharacter
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryCharacter
        fun GetDefaultObject(): ActorFactoryCharacter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryCharacter
        fun C(Other: UObject): ActorFactoryCharacter
        fun C(Other: Any): ActorFactoryCharacter
    }
}

external open class ActorFactoryClass : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryClass
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryClass
        fun GetDefaultObject(): ActorFactoryClass
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryClass
        fun C(Other: UObject): ActorFactoryClass
        fun C(Other: Any): ActorFactoryClass
    }
}

external open class ActorFactoryCylinderVolume : ActorFactoryVolume {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryCylinderVolume
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryCylinderVolume
        fun GetDefaultObject(): ActorFactoryCylinderVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryCylinderVolume
        fun C(Other: UObject): ActorFactoryCylinderVolume
        fun C(Other: Any): ActorFactoryCylinderVolume
    }
}

external open class ActorFactoryDeferredDecal : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryDeferredDecal
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryDeferredDecal
        fun GetDefaultObject(): ActorFactoryDeferredDecal
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryDeferredDecal
        fun C(Other: UObject): ActorFactoryDeferredDecal
        fun C(Other: Any): ActorFactoryDeferredDecal
    }
}

external open class ActorFactoryDirectionalLight : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryDirectionalLight
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryDirectionalLight
        fun GetDefaultObject(): ActorFactoryDirectionalLight
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryDirectionalLight
        fun C(Other: UObject): ActorFactoryDirectionalLight
        fun C(Other: Any): ActorFactoryDirectionalLight
    }
}

external open class ActorFactoryEmitter : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryEmitter
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryEmitter
        fun GetDefaultObject(): ActorFactoryEmitter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryEmitter
        fun C(Other: UObject): ActorFactoryEmitter
        fun C(Other: Any): ActorFactoryEmitter
    }
}

external open class ActorFactoryEmptyActor : ActorFactory {
    constructor()
    constructor(Outer: UObject)
    open var bVisualizeActor: Boolean

    companion object {
        fun Load(ResourceName: String): ActorFactoryEmptyActor
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryEmptyActor
        fun GetDefaultObject(): ActorFactoryEmptyActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryEmptyActor
        fun C(Other: UObject): ActorFactoryEmptyActor
        fun C(Other: Any): ActorFactoryEmptyActor
    }
}

external open class ActorFactoryExponentialHeightFog : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryExponentialHeightFog
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryExponentialHeightFog
        fun GetDefaultObject(): ActorFactoryExponentialHeightFog
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryExponentialHeightFog
        fun C(Other: UObject): ActorFactoryExponentialHeightFog
        fun C(Other: Any): ActorFactoryExponentialHeightFog
    }
}

external open class ActorFactoryInteractiveFoliage : ActorFactoryStaticMesh {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryInteractiveFoliage
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryInteractiveFoliage
        fun GetDefaultObject(): ActorFactoryInteractiveFoliage
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryInteractiveFoliage
        fun C(Other: UObject): ActorFactoryInteractiveFoliage
        fun C(Other: Any): ActorFactoryInteractiveFoliage
    }
}

external open class ActorFactoryLevelSequence : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryLevelSequence
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryLevelSequence
        fun GetDefaultObject(): ActorFactoryLevelSequence
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryLevelSequence
        fun C(Other: UObject): ActorFactoryLevelSequence
        fun C(Other: Any): ActorFactoryLevelSequence
    }
}

external open class ActorFactoryNote : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryNote
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryNote
        fun GetDefaultObject(): ActorFactoryNote
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryNote
        fun C(Other: UObject): ActorFactoryNote
        fun C(Other: Any): ActorFactoryNote
    }
}

external open class ActorFactoryPawn : ActorFactoryEmptyActor {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryPawn
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryPawn
        fun GetDefaultObject(): ActorFactoryPawn
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryPawn
        fun C(Other: UObject): ActorFactoryPawn
        fun C(Other: Any): ActorFactoryPawn
    }
}

external open class ActorFactoryPhysicsAsset : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryPhysicsAsset
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryPhysicsAsset
        fun GetDefaultObject(): ActorFactoryPhysicsAsset
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryPhysicsAsset
        fun C(Other: UObject): ActorFactoryPhysicsAsset
        fun C(Other: Any): ActorFactoryPhysicsAsset
    }
}

external open class ActorFactoryPlanarReflection : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryPlanarReflection
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryPlanarReflection
        fun GetDefaultObject(): ActorFactoryPlanarReflection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryPlanarReflection
        fun C(Other: UObject): ActorFactoryPlanarReflection
        fun C(Other: Any): ActorFactoryPlanarReflection
    }
}

external open class ActorFactoryPlaneReflectionCapture : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryPlaneReflectionCapture
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryPlaneReflectionCapture
        fun GetDefaultObject(): ActorFactoryPlaneReflectionCapture
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryPlaneReflectionCapture
        fun C(Other: UObject): ActorFactoryPlaneReflectionCapture
        fun C(Other: Any): ActorFactoryPlaneReflectionCapture
    }
}

external open class ActorFactoryPlayerStart : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryPlayerStart
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryPlayerStart
        fun GetDefaultObject(): ActorFactoryPlayerStart
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryPlayerStart
        fun C(Other: UObject): ActorFactoryPlayerStart
        fun C(Other: Any): ActorFactoryPlayerStart
    }
}

external open class ActorFactoryPointLight : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryPointLight
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryPointLight
        fun GetDefaultObject(): ActorFactoryPointLight
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryPointLight
        fun C(Other: UObject): ActorFactoryPointLight
        fun C(Other: Any): ActorFactoryPointLight
    }
}

external open class ActorFactoryRectLight : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryRectLight
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryRectLight
        fun GetDefaultObject(): ActorFactoryRectLight
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryRectLight
        fun C(Other: UObject): ActorFactoryRectLight
        fun C(Other: Any): ActorFactoryRectLight
    }
}

external open class ActorFactoryRuntimeVirtualTextureVolume : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryRuntimeVirtualTextureVolume
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryRuntimeVirtualTextureVolume
        fun GetDefaultObject(): ActorFactoryRuntimeVirtualTextureVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryRuntimeVirtualTextureVolume
        fun C(Other: UObject): ActorFactoryRuntimeVirtualTextureVolume
        fun C(Other: Any): ActorFactoryRuntimeVirtualTextureVolume
    }
}

external open class ActorFactorySkyAtmosphere : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactorySkyAtmosphere
        fun Find(Outer: UObject, ResourceName: String): ActorFactorySkyAtmosphere
        fun GetDefaultObject(): ActorFactorySkyAtmosphere
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactorySkyAtmosphere
        fun C(Other: UObject): ActorFactorySkyAtmosphere
        fun C(Other: Any): ActorFactorySkyAtmosphere
    }
}

external open class ActorFactorySkyLight : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactorySkyLight
        fun Find(Outer: UObject, ResourceName: String): ActorFactorySkyLight
        fun GetDefaultObject(): ActorFactorySkyLight
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactorySkyLight
        fun C(Other: UObject): ActorFactorySkyLight
        fun C(Other: Any): ActorFactorySkyLight
    }
}

external open class ActorFactorySphereReflectionCapture : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactorySphereReflectionCapture
        fun Find(Outer: UObject, ResourceName: String): ActorFactorySphereReflectionCapture
        fun GetDefaultObject(): ActorFactorySphereReflectionCapture
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactorySphereReflectionCapture
        fun C(Other: UObject): ActorFactorySphereReflectionCapture
        fun C(Other: Any): ActorFactorySphereReflectionCapture
    }
}

external open class ActorFactorySphereVolume : ActorFactoryVolume {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactorySphereVolume
        fun Find(Outer: UObject, ResourceName: String): ActorFactorySphereVolume
        fun GetDefaultObject(): ActorFactorySphereVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactorySphereVolume
        fun C(Other: UObject): ActorFactorySphereVolume
        fun C(Other: Any): ActorFactorySphereVolume
    }
}

external open class ActorFactorySpotLight : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactorySpotLight
        fun Find(Outer: UObject, ResourceName: String): ActorFactorySpotLight
        fun GetDefaultObject(): ActorFactorySpotLight
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactorySpotLight
        fun C(Other: UObject): ActorFactorySpotLight
        fun C(Other: Any): ActorFactorySpotLight
    }
}

external open class ActorFactoryTargetPoint : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryTargetPoint
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryTargetPoint
        fun GetDefaultObject(): ActorFactoryTargetPoint
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryTargetPoint
        fun C(Other: UObject): ActorFactoryTargetPoint
        fun C(Other: Any): ActorFactoryTargetPoint
    }
}

external open class ActorFactoryTextRender : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryTextRender
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryTextRender
        fun GetDefaultObject(): ActorFactoryTextRender
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryTextRender
        fun C(Other: UObject): ActorFactoryTextRender
        fun C(Other: Any): ActorFactoryTextRender
    }
}

external open class ActorFactoryTriggerBox : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryTriggerBox
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryTriggerBox
        fun GetDefaultObject(): ActorFactoryTriggerBox
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryTriggerBox
        fun C(Other: UObject): ActorFactoryTriggerBox
        fun C(Other: Any): ActorFactoryTriggerBox
    }
}

external open class ActorFactoryTriggerCapsule : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryTriggerCapsule
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryTriggerCapsule
        fun GetDefaultObject(): ActorFactoryTriggerCapsule
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryTriggerCapsule
        fun C(Other: UObject): ActorFactoryTriggerCapsule
        fun C(Other: Any): ActorFactoryTriggerCapsule
    }
}

external open class ActorFactoryTriggerSphere : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryTriggerSphere
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryTriggerSphere
        fun GetDefaultObject(): ActorFactoryTriggerSphere
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryTriggerSphere
        fun C(Other: UObject): ActorFactoryTriggerSphere
        fun C(Other: Any): ActorFactoryTriggerSphere
    }
}

external open class ActorFactoryVectorFieldVolume : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryVectorFieldVolume
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryVectorFieldVolume
        fun GetDefaultObject(): ActorFactoryVectorFieldVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryVectorFieldVolume
        fun C(Other: UObject): ActorFactoryVectorFieldVolume
        fun C(Other: Any): ActorFactoryVectorFieldVolume
    }
}

external open class ActorFactoryVolumetricCloud : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryVolumetricCloud
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryVolumetricCloud
        fun GetDefaultObject(): ActorFactoryVolumetricCloud
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryVolumetricCloud
        fun C(Other: UObject): ActorFactoryVolumetricCloud
        fun C(Other: Any): ActorFactoryVolumetricCloud
    }
}

external open class GroupActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var bLocked: Boolean
    open var GroupActors: Array<Actor>
    open var SubGroups: Array<GroupActor>

    companion object {
        fun GetDefaultObject(): GroupActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GroupActor
        fun C(Other: UObject): GroupActor
        fun C(Other: Any): GroupActor
    }
}

external open class ActorGroupingUtils : UObject {
    constructor()
    constructor(Outer: UObject)
    open fun UnlockSelectedGroups()
    open fun UngroupSelected()
    open fun UngroupActors(ActorsToUngroup: Array<Actor>)
    open fun RemoveSelectedFromGroup()
    open fun LockSelectedGroups()
    open fun GroupSelected(): GroupActor
    open fun GroupActors(ActorsToGroup: Array<Actor>): GroupActor
    open fun AddSelectedToGroup()

    companion object {
        fun Load(ResourceName: String): ActorGroupingUtils
        fun Find(Outer: UObject, ResourceName: String): ActorGroupingUtils
        fun GetDefaultObject(): ActorGroupingUtils
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorGroupingUtils
        fun SetGroupingActive(bInGroupingActive: Boolean)
        fun IsGroupingActive(): Boolean
        fun Get(): ActorGroupingUtils
        fun C(Other: UObject): ActorGroupingUtils
        fun C(Other: Any): ActorGroupingUtils
    }
}

external open class BlendSpaceFactory1D : Factory {
    constructor()
    constructor(Outer: UObject)
    open var TargetSkeleton: Skeleton
    open var PreviewSkeletalMesh: SkeletalMesh

    companion object {
        fun Load(ResourceName: String): BlendSpaceFactory1D
        fun Find(Outer: UObject, ResourceName: String): BlendSpaceFactory1D
        fun GetDefaultObject(): BlendSpaceFactory1D
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlendSpaceFactory1D
        fun C(Other: UObject): BlendSpaceFactory1D
        fun C(Other: Any): BlendSpaceFactory1D
    }
}

external open class AimOffsetBlendSpaceFactory1D : BlendSpaceFactory1D {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AimOffsetBlendSpaceFactory1D
        fun Find(Outer: UObject, ResourceName: String): AimOffsetBlendSpaceFactory1D
        fun GetDefaultObject(): AimOffsetBlendSpaceFactory1D
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AimOffsetBlendSpaceFactory1D
        fun C(Other: UObject): AimOffsetBlendSpaceFactory1D
        fun C(Other: Any): AimOffsetBlendSpaceFactory1D
    }
}

external open class BlendSpaceFactoryNew : Factory {
    constructor()
    constructor(Outer: UObject)
    open var TargetSkeleton: Skeleton
    open var PreviewSkeletalMesh: SkeletalMesh

    companion object {
        fun Load(ResourceName: String): BlendSpaceFactoryNew
        fun Find(Outer: UObject, ResourceName: String): BlendSpaceFactoryNew
        fun GetDefaultObject(): BlendSpaceFactoryNew
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlendSpaceFactoryNew
        fun C(Other: UObject): BlendSpaceFactoryNew
        fun C(Other: Any): BlendSpaceFactoryNew
    }
}

external open class AimOffsetBlendSpaceFactoryNew : BlendSpaceFactoryNew {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AimOffsetBlendSpaceFactoryNew
        fun Find(Outer: UObject, ResourceName: String): AimOffsetBlendSpaceFactoryNew
        fun GetDefaultObject(): AimOffsetBlendSpaceFactoryNew
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AimOffsetBlendSpaceFactoryNew
        fun C(Other: UObject): AimOffsetBlendSpaceFactoryNew
        fun C(Other: Any): AimOffsetBlendSpaceFactoryNew
    }
}

external open class AnalyticsPrivacySettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bSendUsageData: Boolean

    companion object {
        fun Load(ResourceName: String): AnalyticsPrivacySettings
        fun Find(Outer: UObject, ResourceName: String): AnalyticsPrivacySettings
        fun GetDefaultObject(): AnalyticsPrivacySettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnalyticsPrivacySettings
        fun C(Other: UObject): AnalyticsPrivacySettings
        fun C(Other: Any): AnalyticsPrivacySettings
    }
}

external open class AnimationBlueprintEditorOptions : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bHideUnrelatedNodes: Boolean

    companion object {
        fun Load(ResourceName: String): AnimationBlueprintEditorOptions
        fun Find(Outer: UObject, ResourceName: String): AnimationBlueprintEditorOptions
        fun GetDefaultObject(): AnimationBlueprintEditorOptions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationBlueprintEditorOptions
        fun C(Other: UObject): AnimationBlueprintEditorOptions
        fun C(Other: Any): AnimationBlueprintEditorOptions
    }
}

external open class AnimBlueprintFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var BlueprintType: String /* "BPTYPE_Normal" | "BPTYPE_Const" | "BPTYPE_MacroLibrary" | "BPTYPE_Interface" | "BPTYPE_LevelScript" | "BPTYPE_FunctionLibrary" | "BPTYPE_MAX" */
    open var ParentClass: UnrealEngineClass
    open var TargetSkeleton: Skeleton
    open var PreviewSkeletalMesh: SkeletalMesh
    open var bTemplate: Boolean

    companion object {
        fun Load(ResourceName: String): AnimBlueprintFactory
        fun Find(Outer: UObject, ResourceName: String): AnimBlueprintFactory
        fun GetDefaultObject(): AnimBlueprintFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimBlueprintFactory
        fun C(Other: UObject): AnimBlueprintFactory
        fun C(Other: Any): AnimBlueprintFactory
    }
}

external open class AnimLayerInterfaceFactory : AnimBlueprintFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimLayerInterfaceFactory
        fun Find(Outer: UObject, ResourceName: String): AnimLayerInterfaceFactory
        fun GetDefaultObject(): AnimLayerInterfaceFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimLayerInterfaceFactory
        fun C(Other: UObject): AnimLayerInterfaceFactory
        fun C(Other: Any): AnimLayerInterfaceFactory
    }
}

external open class AnimBlueprintThumbnailRenderer : DefaultSizedThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimBlueprintThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): AnimBlueprintThumbnailRenderer
        fun GetDefaultObject(): AnimBlueprintThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimBlueprintThumbnailRenderer
        fun C(Other: UObject): AnimBlueprintThumbnailRenderer
        fun C(Other: Any): AnimBlueprintThumbnailRenderer
    }
}

external open class AnimBoneCompressionSettingsFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimBoneCompressionSettingsFactory
        fun Find(Outer: UObject, ResourceName: String): AnimBoneCompressionSettingsFactory
        fun GetDefaultObject(): AnimBoneCompressionSettingsFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimBoneCompressionSettingsFactory
        fun C(Other: UObject): AnimBoneCompressionSettingsFactory
        fun C(Other: Any): AnimBoneCompressionSettingsFactory
    }
}

external open class AnimCompositeFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var TargetSkeleton: Skeleton
    open var SourceAnimation: AnimSequence
    open var PreviewSkeletalMesh: SkeletalMesh

    companion object {
        fun Load(ResourceName: String): AnimCompositeFactory
        fun Find(Outer: UObject, ResourceName: String): AnimCompositeFactory
        fun GetDefaultObject(): AnimCompositeFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimCompositeFactory
        fun C(Other: UObject): AnimCompositeFactory
        fun C(Other: Any): AnimCompositeFactory
    }
}

external open class AnimCurveCompressionSettingsFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimCurveCompressionSettingsFactory
        fun Find(Outer: UObject, ResourceName: String): AnimCurveCompressionSettingsFactory
        fun GetDefaultObject(): AnimCurveCompressionSettingsFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimCurveCompressionSettingsFactory
        fun C(Other: UObject): AnimCurveCompressionSettingsFactory
        fun C(Other: Any): AnimCurveCompressionSettingsFactory
    }
}

external open class AnimMontageFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var TargetSkeleton: Skeleton
    open var SourceAnimation: AnimSequence
    open var PreviewSkeletalMesh: SkeletalMesh

    companion object {
        fun Load(ResourceName: String): AnimMontageFactory
        fun Find(Outer: UObject, ResourceName: String): AnimMontageFactory
        fun GetDefaultObject(): AnimMontageFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimMontageFactory
        fun C(Other: UObject): AnimMontageFactory
        fun C(Other: Any): AnimMontageFactory
    }
}

external open class ExporterFBX : Exporter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ExporterFBX
        fun Find(Outer: UObject, ResourceName: String): ExporterFBX
        fun GetDefaultObject(): ExporterFBX
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ExporterFBX
        fun C(Other: UObject): ExporterFBX
        fun C(Other: Any): ExporterFBX
    }
}

external open class AnimSequenceExporterFBX : ExporterFBX {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimSequenceExporterFBX
        fun Find(Outer: UObject, ResourceName: String): AnimSequenceExporterFBX
        fun GetDefaultObject(): AnimSequenceExporterFBX
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimSequenceExporterFBX
        fun C(Other: UObject): AnimSequenceExporterFBX
        fun C(Other: Any): AnimSequenceExporterFBX
    }
}

external open class AnimSequenceFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var TargetSkeleton: Skeleton
    open var PreviewSkeletalMesh: SkeletalMesh

    companion object {
        fun Load(ResourceName: String): AnimSequenceFactory
        fun Find(Outer: UObject, ResourceName: String): AnimSequenceFactory
        fun GetDefaultObject(): AnimSequenceFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimSequenceFactory
        fun C(Other: UObject): AnimSequenceFactory
        fun C(Other: Any): AnimSequenceFactory
    }
}

external open class AnimSequenceThumbnailRenderer : DefaultSizedThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimSequenceThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): AnimSequenceThumbnailRenderer
        fun GetDefaultObject(): AnimSequenceThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimSequenceThumbnailRenderer
        fun C(Other: UObject): AnimSequenceThumbnailRenderer
        fun C(Other: Any): AnimSequenceThumbnailRenderer
    }
}

external open class AnimStreamableFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var TargetSkeleton: Skeleton
    open var SourceAnimation: AnimSequence

    companion object {
        fun Load(ResourceName: String): AnimStreamableFactory
        fun Find(Outer: UObject, ResourceName: String): AnimStreamableFactory
        fun GetDefaultObject(): AnimStreamableFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimStreamableFactory
        fun C(Other: UObject): AnimStreamableFactory
        fun C(Other: Any): AnimStreamableFactory
    }
}

external open class AssetEditorContextObject : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AssetEditorContextObject
        fun Find(Outer: UObject, ResourceName: String): AssetEditorContextObject
        fun GetDefaultObject(): AssetEditorContextObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AssetEditorContextObject
        fun C(Other: UObject): AssetEditorContextObject
        fun C(Other: Any): AssetEditorContextObject
    }
}

external open class AssetEditor : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AssetEditor
        fun Find(Outer: UObject, ResourceName: String): AssetEditor
        fun GetDefaultObject(): AssetEditor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AssetEditor
        fun C(Other: UObject): AssetEditor
        fun C(Other: Any): AssetEditor
    }
}

external open class AssetEditorSubsystem : EditorSubsystem {
    constructor()
    constructor(Outer: UObject)
    open var OwnedAssetEditors: Array<AssetEditor>
    open fun OpenEditorForAssets(Assets: Array<UObject>): Boolean
    open fun CloseAllEditorsForAsset(Asset: UObject): Number

    companion object {
        fun Load(ResourceName: String): AssetEditorSubsystem
        fun Find(Outer: UObject, ResourceName: String): AssetEditorSubsystem
        fun GetDefaultObject(): AssetEditorSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AssetEditorSubsystem
        fun C(Other: UObject): AssetEditorSubsystem
        fun C(Other: Any): AssetEditorSubsystem
    }
}

external open class AssetEditorToolkitMenuContext : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AssetEditorToolkitMenuContext
        fun Find(Outer: UObject, ResourceName: String): AssetEditorToolkitMenuContext
        fun GetDefaultObject(): AssetEditorToolkitMenuContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AssetEditorToolkitMenuContext
        fun C(Other: UObject): AssetEditorToolkitMenuContext
        fun C(Other: Any): AssetEditorToolkitMenuContext
    }
}

external open class IniStringValue {
    open var Section: String
    open var Key: String
    open var Value: String
    open var Filename: String
    open fun clone(): IniStringValue

    companion object {
        fun C(Other: UObject): IniStringValue
        fun C(Other: Any): IniStringValue
    }
}

external open class AssetGuideline : AssetUserData {
    constructor()
    constructor(Outer: UObject)
    open var Plugins: Array<String>
    open var ProjectSettings: Array<IniStringValue>
    open var GuidelineName: String

    companion object {
        fun Load(ResourceName: String): AssetGuideline
        fun Find(Outer: UObject, ResourceName: String): AssetGuideline
        fun GetDefaultObject(): AssetGuideline
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AssetGuideline
        fun C(Other: UObject): AssetGuideline
        fun C(Other: Any): AssetGuideline
    }
}

external open class Commandlet : UObject {
    constructor()
    constructor(Outer: UObject)
    open var HelpDescription: String
    open var HelpUsage: String
    open var HelpWebLink: String
    open var HelpParamNames: Array<String>
    open var HelpParamDescriptions: Array<String>
    open var IsServer: Boolean
    open var IsClient: Boolean
    open var IsEditor: Boolean
    open var LogToConsole: Boolean
    open var ShowErrorCount: Boolean
    open var ShowProgress: Boolean

    companion object {
        fun Load(ResourceName: String): Commandlet
        fun Find(Outer: UObject, ResourceName: String): Commandlet
        fun GetDefaultObject(): Commandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Commandlet
        fun C(Other: UObject): Commandlet
        fun C(Other: Any): Commandlet
    }
}

external open class AssetRegUtilCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AssetRegUtilCommandlet
        fun Find(Outer: UObject, ResourceName: String): AssetRegUtilCommandlet
        fun GetDefaultObject(): AssetRegUtilCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AssetRegUtilCommandlet
        fun C(Other: UObject): AssetRegUtilCommandlet
        fun C(Other: Any): AssetRegUtilCommandlet
    }
}

external open class AssetRegistryDumpCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AssetRegistryDumpCommandlet
        fun Find(Outer: UObject, ResourceName: String): AssetRegistryDumpCommandlet
        fun GetDefaultObject(): AssetRegistryDumpCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AssetRegistryDumpCommandlet
        fun C(Other: UObject): AssetRegistryDumpCommandlet
        fun C(Other: Any): AssetRegistryDumpCommandlet
    }
}

external open class AudioMixerCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AudioMixerCommandlet
        fun Find(Outer: UObject, ResourceName: String): AudioMixerCommandlet
        fun GetDefaultObject(): AudioMixerCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AudioMixerCommandlet
        fun C(Other: UObject): AudioMixerCommandlet
        fun C(Other: Any): AudioMixerCommandlet
    }
}

external open class AutoReimportManager : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AutoReimportManager
        fun Find(Outer: UObject, ResourceName: String): AutoReimportManager
        fun GetDefaultObject(): AutoReimportManager
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AutoReimportManager
        fun C(Other: UObject): AutoReimportManager
        fun C(Other: Any): AutoReimportManager
    }
}

external open class BaseWidgetBlueprint : UserWidgetBlueprint {
    constructor()
    constructor(Outer: UObject)
    open var WidgetTree: WidgetTree

    companion object {
        fun Load(ResourceName: String): BaseWidgetBlueprint
        fun Find(Outer: UObject, ResourceName: String): BaseWidgetBlueprint
        fun GetDefaultObject(): BaseWidgetBlueprint
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BaseWidgetBlueprint
        fun C(Other: UObject): BaseWidgetBlueprint
        fun C(Other: Any): BaseWidgetBlueprint
    }
}

external open class BlendSpaceThumbnailRenderer : DefaultSizedThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlendSpaceThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): BlendSpaceThumbnailRenderer
        fun GetDefaultObject(): BlendSpaceThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlendSpaceThumbnailRenderer
        fun C(Other: UObject): BlendSpaceThumbnailRenderer
        fun C(Other: Any): BlendSpaceThumbnailRenderer
    }
}

external open class BlueprintEditorProjectSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var bForceAllDependenciesToRecompile: Boolean
    open var bValidateUnloadedSoftActorReferences: Boolean
    open var bEnableChildActorExpansionInTreeView: Boolean
    open var DefaultChildActorTreeViewMode: String /* "UseDefault" | "ComponentOnly" | "ComponentWithChildActor" | "ChildActorOnly" | "EChildActorComponentTreeViewVisualizationMode_MAX" */
    open var NamespacesToAlwaysInclude: Array<String>
    open var DisabledCompilerMessagesExceptEditor: Array<String>
    open var DisabledCompilerMessages: Array<String>
    open var BaseClassesToAllowRecompilingDuringPlayInEditor: Array<Class>

    companion object {
        fun Load(ResourceName: String): BlueprintEditorProjectSettings
        fun Find(Outer: UObject, ResourceName: String): BlueprintEditorProjectSettings
        fun GetDefaultObject(): BlueprintEditorProjectSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintEditorProjectSettings
        fun C(Other: UObject): BlueprintEditorProjectSettings
        fun C(Other: Any): BlueprintEditorProjectSettings
    }
}

external open class BlueprintFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var ParentClass: UnrealEngineClass
    open var bSkipClassPicker: Boolean

    companion object {
        fun Load(ResourceName: String): BlueprintFactory
        fun Find(Outer: UObject, ResourceName: String): BlueprintFactory
        fun GetDefaultObject(): BlueprintFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintFactory
        fun C(Other: UObject): BlueprintFactory
        fun C(Other: Any): BlueprintFactory
    }
}

external open class BlueprintFunctionLibraryFactory : BlueprintFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlueprintFunctionLibraryFactory
        fun Find(Outer: UObject, ResourceName: String): BlueprintFunctionLibraryFactory
        fun GetDefaultObject(): BlueprintFunctionLibraryFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintFunctionLibraryFactory
        fun C(Other: UObject): BlueprintFunctionLibraryFactory
        fun C(Other: Any): BlueprintFunctionLibraryFactory
    }
}

external open class BlueprintInterfaceFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlueprintInterfaceFactory
        fun Find(Outer: UObject, ResourceName: String): BlueprintInterfaceFactory
        fun GetDefaultObject(): BlueprintInterfaceFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintInterfaceFactory
        fun C(Other: UObject): BlueprintInterfaceFactory
        fun C(Other: Any): BlueprintInterfaceFactory
    }
}

external open class BlueprintMacroFactory : BlueprintFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlueprintMacroFactory
        fun Find(Outer: UObject, ResourceName: String): BlueprintMacroFactory
        fun GetDefaultObject(): BlueprintMacroFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintMacroFactory
        fun C(Other: UObject): BlueprintMacroFactory
        fun C(Other: Any): BlueprintMacroFactory
    }
}

external open class BrushEditingSubsystem : EditorSubsystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BrushEditingSubsystem
        fun Find(Outer: UObject, ResourceName: String): BrushEditingSubsystem
        fun GetDefaultObject(): BrushEditingSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BrushEditingSubsystem
        fun C(Other: UObject): BrushEditingSubsystem
        fun C(Other: Any): BrushEditingSubsystem
    }
}

external open class CanvasRenderTarget2DFactoryNew : Factory {
    constructor()
    constructor(Outer: UObject)
    open var Width: Number
    open var Height: Number
    open var Format: Number

    companion object {
        fun Load(ResourceName: String): CanvasRenderTarget2DFactoryNew
        fun Find(Outer: UObject, ResourceName: String): CanvasRenderTarget2DFactoryNew
        fun GetDefaultObject(): CanvasRenderTarget2DFactoryNew
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CanvasRenderTarget2DFactoryNew
        fun C(Other: UObject): CanvasRenderTarget2DFactoryNew
        fun C(Other: Any): CanvasRenderTarget2DFactoryNew
    }
}

external open class CascadeOptions : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bShowModuleDump: Boolean
    open var BackgroundColor: Color
    open var bUseSubMenus: Boolean
    open var bUseSpaceBarReset: Boolean
    open var bUseSpaceBarResetInLevel: Boolean
    open var Empty_Background: Color
    open var Emitter_Background: Color
    open var Emitter_Unselected: Color
    open var Emitter_Selected: Color
    open var ModuleColor_General_Unselected: Color
    open var ModuleColor_General_Selected: Color
    open var ModuleColor_TypeData_Unselected: Color
    open var ModuleColor_TypeData_Selected: Color
    open var ModuleColor_Beam_Unselected: Color
    open var ModuleColor_Beam_Selected: Color
    open var ModuleColor_Trail_Unselected: Color
    open var ModuleColor_Trail_Selected: Color
    open var ModuleColor_Spawn_Unselected: Color
    open var ModuleColor_Spawn_Selected: Color
    open var ModuleColor_Light_Unselected: Color
    open var ModuleColor_Light_Selected: Color
    open var ModuleColor_SubUV_Unselected: Color
    open var ModuleColor_SubUV_Selected: Color
    open var ModuleColor_Required_Unselected: Color
    open var ModuleColor_Required_Selected: Color
    open var ModuleColor_Event_Unselected: Color
    open var ModuleColor_Event_Selected: Color
    open var bShowGrid: Boolean
    open var GridColor_Hi: Color
    open var GridColor_Low: Color
    open var GridPerspectiveSize: Number
    open var bShowParticleCounts: Boolean
    open var bShowParticleEvents: Boolean
    open var bShowParticleTimes: Boolean
    open var bShowParticleDistance: Boolean
    open var bShowParticleMemory: Boolean
    open var ParticleMemoryUpdateTime: Number
    open var bShowFloor: Boolean
    open var FloorMesh: String
    open var FloorPosition: Vector
    open var FloorRotation: Rotator
    open var FloorScale: Number
    open var FloorScale3D: Vector
    open var ShowPPFlags: Number
    open var bUseSlimCascadeDraw: Boolean
    open var SlimCascadeDrawHeight: Number
    open var bCenterCascadeModuleText: Boolean
    open var Cascade_MouseMoveThreshold: Number
    open var MotionModeRadius: Number

    companion object {
        fun Load(ResourceName: String): CascadeOptions
        fun Find(Outer: UObject, ResourceName: String): CascadeOptions
        fun GetDefaultObject(): CascadeOptions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CascadeOptions
        fun C(Other: UObject): CascadeOptions
        fun C(Other: Any): CascadeOptions
    }
}

external open class ChunkDependency {
    open var ChunkID: Number
    open var ParentChunkID: Number
    open fun clone(): ChunkDependency

    companion object {
        fun C(Other: UObject): ChunkDependency
        fun C(Other: Any): ChunkDependency
    }
}

external open class ChunkDependencyInfo : UObject {
    constructor()
    constructor(Outer: UObject)
    open var DependencyArray: Array<ChunkDependency>

    companion object {
        fun Load(ResourceName: String): ChunkDependencyInfo
        fun Find(Outer: UObject, ResourceName: String): ChunkDependencyInfo
        fun GetDefaultObject(): ChunkDependencyInfo
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ChunkDependencyInfo
        fun C(Other: UObject): ChunkDependencyInfo
        fun C(Other: Any): ChunkDependencyInfo
    }
}

external open class ClassThumbnailRenderer : DefaultSizedThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ClassThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): ClassThumbnailRenderer
        fun GetDefaultObject(): ClassThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClassThumbnailRenderer
        fun C(Other: UObject): ClassThumbnailRenderer
        fun C(Other: Any): ClassThumbnailRenderer
    }
}

external object EClassViewerDeveloperType {
    var CVDT_None: String /* "CVDT_None" */
    var CVDT_CurrentUser: String /* "CVDT_CurrentUser" */
    var CVDT_All: String /* "CVDT_All" */
    var CVDT_Max: String /* "CVDT_Max" */
}

external open class ClassViewerSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var AllowedClasses: Array<String>
    open var DisplayInternalClasses: Boolean
    open var DeveloperFolderType: String /* "CVDT_None" | "CVDT_CurrentUser" | "CVDT_All" | "CVDT_Max" */

    companion object {
        fun Load(ResourceName: String): ClassViewerSettings
        fun Find(Outer: UObject, ResourceName: String): ClassViewerSettings
        fun GetDefaultObject(): ClassViewerSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClassViewerSettings
        fun C(Other: UObject): ClassViewerSettings
        fun C(Other: Any): ClassViewerSettings
    }
}

external open class CompileAllBlueprintsCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CompileAllBlueprintsCommandlet
        fun Find(Outer: UObject, ResourceName: String): CompileAllBlueprintsCommandlet
        fun GetDefaultObject(): CompileAllBlueprintsCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CompileAllBlueprintsCommandlet
        fun C(Other: UObject): CompileAllBlueprintsCommandlet
        fun C(Other: Any): CompileAllBlueprintsCommandlet
    }
}

external open class ComponentElementDetailsInterface : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ComponentElementDetailsInterface
        fun Find(Outer: UObject, ResourceName: String): ComponentElementDetailsInterface
        fun GetDefaultObject(): ComponentElementDetailsInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ComponentElementDetailsInterface
        fun C(Other: UObject): ComponentElementDetailsInterface
        fun C(Other: Any): ComponentElementDetailsInterface
    }
}

external open class ComponentElementSelectionInterface : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ComponentElementSelectionInterface
        fun Find(Outer: UObject, ResourceName: String): ComponentElementSelectionInterface
        fun GetDefaultObject(): ComponentElementSelectionInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ComponentElementSelectionInterface
        fun C(Other: UObject): ComponentElementSelectionInterface
        fun C(Other: Any): ComponentElementSelectionInterface
    }
}

external open class ComponentElementEditorSelectionInterface : ComponentElementSelectionInterface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ComponentElementEditorSelectionInterface
        fun Find(Outer: UObject, ResourceName: String): ComponentElementEditorSelectionInterface
        fun GetDefaultObject(): ComponentElementEditorSelectionInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ComponentElementEditorSelectionInterface
        fun C(Other: UObject): ComponentElementEditorSelectionInterface
        fun C(Other: Any): ComponentElementEditorSelectionInterface
    }
}

external open class ComponentElementWorldInterface : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ComponentElementWorldInterface
        fun Find(Outer: UObject, ResourceName: String): ComponentElementWorldInterface
        fun GetDefaultObject(): ComponentElementWorldInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ComponentElementWorldInterface
        fun C(Other: UObject): ComponentElementWorldInterface
        fun C(Other: Any): ComponentElementWorldInterface
    }
}

external open class ComponentElementEditorWorldInterface : ComponentElementWorldInterface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ComponentElementEditorWorldInterface
        fun Find(Outer: UObject, ResourceName: String): ComponentElementEditorWorldInterface
        fun GetDefaultObject(): ComponentElementEditorWorldInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ComponentElementEditorWorldInterface
        fun C(Other: UObject): ComponentElementEditorWorldInterface
        fun C(Other: Any): ComponentElementEditorWorldInterface
    }
}

external open class CompositeCurveTableFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CompositeCurveTableFactory
        fun Find(Outer: UObject, ResourceName: String): CompositeCurveTableFactory
        fun GetDefaultObject(): CompositeCurveTableFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CompositeCurveTableFactory
        fun C(Other: UObject): CompositeCurveTableFactory
        fun C(Other: Any): CompositeCurveTableFactory
    }
}

external open class DataTableFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var struct: ScriptStruct

    companion object {
        fun Load(ResourceName: String): DataTableFactory
        fun Find(Outer: UObject, ResourceName: String): DataTableFactory
        fun GetDefaultObject(): DataTableFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DataTableFactory
        fun C(Other: UObject): DataTableFactory
        fun C(Other: Any): DataTableFactory
    }
}

external open class CompositeDataTableFactory : DataTableFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CompositeDataTableFactory
        fun Find(Outer: UObject, ResourceName: String): CompositeDataTableFactory
        fun GetDefaultObject(): CompositeDataTableFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CompositeDataTableFactory
        fun C(Other: UObject): CompositeDataTableFactory
        fun C(Other: Any): CompositeDataTableFactory
    }
}

external open class CompressAnimationsCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CompressAnimationsCommandlet
        fun Find(Outer: UObject, ResourceName: String): CompressAnimationsCommandlet
        fun GetDefaultObject(): CompressAnimationsCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CompressAnimationsCommandlet
        fun C(Other: UObject): CompressAnimationsCommandlet
        fun C(Other: Any): CompressAnimationsCommandlet
    }
}

external open class EditorBrushBuilder : BrushBuilder {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EditorBrushBuilder
        fun Find(Outer: UObject, ResourceName: String): EditorBrushBuilder
        fun GetDefaultObject(): EditorBrushBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorBrushBuilder
        fun C(Other: UObject): EditorBrushBuilder
        fun C(Other: Any): EditorBrushBuilder
    }
}

external open class ConeBuilder : EditorBrushBuilder {
    constructor()
    constructor(Outer: UObject)
    open var Z: Number
    open var CapZ: Number
    open var OuterRadius: Number
    open var InnerRadius: Number
    open var Sides: Number
    open var GroupName: String
    open var AlignToSide: Boolean
    open var Hollow: Boolean

    companion object {
        fun Load(ResourceName: String): ConeBuilder
        fun Find(Outer: UObject, ResourceName: String): ConeBuilder
        fun GetDefaultObject(): ConeBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ConeBuilder
        fun C(Other: UObject): ConeBuilder
        fun C(Other: Any): ConeBuilder
    }
}

external open class ContentBrowserSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var NumObjectsToLoadBeforeWarning: Number
    open var bOpenSourcesPanelByDefault: Boolean
    open var RealTimeThumbnails: Boolean
    open var DisplayFolders: Boolean
    open var DisplayEmptyFolders: Boolean
    open var FilterRecursively: Boolean
    open var bShowAllFolder: Boolean
    open var bOrganizeFolders: Boolean
    open var bDisplayContentFolderSuffix: Boolean
    open var bDisplayFriendlyNameForPluginFolders: Boolean
    open var NumObjectsInRecentList: Number
    open var bEnableRealtimeMaterialInstanceThumbnails: Boolean
    open var DisplayEngineFolder: Boolean
    open var DisplayDevelopersFolder: Boolean
    open var DisplayL10NFolder: Boolean
    open var DisplayPluginFolders: Boolean
    open var DisplayFavorites: Boolean
    open var DockCollections: Boolean
    open var DisplayCppFolders: Boolean
    open var IncludeClassNames: Boolean
    open var IncludeAssetPaths: Boolean
    open var IncludeCollectionNames: Boolean

    companion object {
        fun Load(ResourceName: String): ContentBrowserSettings
        fun Find(Outer: UObject, ResourceName: String): ContentBrowserSettings
        fun GetDefaultObject(): ContentBrowserSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ContentBrowserSettings
        fun C(Other: UObject): ContentBrowserSettings
        fun C(Other: Any): ContentBrowserSettings
    }
}

external open class ConvertLevelsToExternalActorsCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ConvertLevelsToExternalActorsCommandlet
        fun Find(Outer: UObject, ResourceName: String): ConvertLevelsToExternalActorsCommandlet
        fun GetDefaultObject(): ConvertLevelsToExternalActorsCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ConvertLevelsToExternalActorsCommandlet
        fun C(Other: UObject): ConvertLevelsToExternalActorsCommandlet
        fun C(Other: Any): ConvertLevelsToExternalActorsCommandlet
    }
}

external open class CookCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)
    open var FullGCAssetClassNames: Array<String>

    companion object {
        fun Load(ResourceName: String): CookCommandlet
        fun Find(Outer: UObject, ResourceName: String): CookCommandlet
        fun GetDefaultObject(): CookCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CookCommandlet
        fun C(Other: UObject): CookCommandlet
        fun C(Other: Any): CookCommandlet
    }
}

external open class CookGlobalShadersCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CookGlobalShadersCommandlet
        fun Find(Outer: UObject, ResourceName: String): CookGlobalShadersCommandlet
        fun GetDefaultObject(): CookGlobalShadersCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CookGlobalShadersCommandlet
        fun C(Other: UObject): CookGlobalShadersCommandlet
        fun C(Other: Any): CookGlobalShadersCommandlet
    }
}

external open class CookGlobalShadersDeviceHelperBase : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CookGlobalShadersDeviceHelperBase
        fun Find(Outer: UObject, ResourceName: String): CookGlobalShadersDeviceHelperBase
        fun GetDefaultObject(): CookGlobalShadersDeviceHelperBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CookGlobalShadersDeviceHelperBase
        fun C(Other: UObject): CookGlobalShadersDeviceHelperBase
        fun C(Other: Any): CookGlobalShadersDeviceHelperBase
    }
}

external open class CookGlobalShadersDeviceHelperStaged : CookGlobalShadersDeviceHelperBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CookGlobalShadersDeviceHelperStaged
        fun Find(Outer: UObject, ResourceName: String): CookGlobalShadersDeviceHelperStaged
        fun GetDefaultObject(): CookGlobalShadersDeviceHelperStaged
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CookGlobalShadersDeviceHelperStaged
        fun C(Other: UObject): CookGlobalShadersDeviceHelperStaged
        fun C(Other: Any): CookGlobalShadersDeviceHelperStaged
    }
}

external open class CookOnTheFlyServer : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CookOnTheFlyServer
        fun Find(Outer: UObject, ResourceName: String): CookOnTheFlyServer
        fun GetDefaultObject(): CookOnTheFlyServer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CookOnTheFlyServer
        fun C(Other: UObject): CookOnTheFlyServer
        fun C(Other: Any): CookOnTheFlyServer
    }
}

external open class CrashReporterSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var UploadSymbolsPath: String
    open var DownstreamStorage: String
    open var RemoteStorage: Array<String>

    companion object {
        fun Load(ResourceName: String): CrashReporterSettings
        fun Find(Outer: UObject, ResourceName: String): CrashReporterSettings
        fun GetDefaultObject(): CrashReporterSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CrashReporterSettings
        fun C(Other: UObject): CrashReporterSettings
        fun C(Other: Any): CrashReporterSettings
    }
}

external open class CrashReportsPrivacySettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bSendUnattendedBugReports: Boolean

    companion object {
        fun Load(ResourceName: String): CrashReportsPrivacySettings
        fun Find(Outer: UObject, ResourceName: String): CrashReportsPrivacySettings
        fun GetDefaultObject(): CrashReportsPrivacySettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CrashReportsPrivacySettings
        fun C(Other: UObject): CrashReportsPrivacySettings
        fun C(Other: Any): CrashReportsPrivacySettings
    }
}

external object ECSVImportType {
    var ECSV_DataTable: String /* "ECSV_DataTable" */
    var ECSV_CurveTable: String /* "ECSV_CurveTable" */
    var ECSV_CurveFloat: String /* "ECSV_CurveFloat" */
    var ECSV_CurveVector: String /* "ECSV_CurveVector" */
    var ECSV_CurveLinearColor: String /* "ECSV_CurveLinearColor" */
    var ECSV_MAX: String /* "ECSV_MAX" */
}

external open class CSVImportSettings {
    open var ImportRowStruct: ScriptStruct
    open var ImportType: String /* "ECSV_DataTable" | "ECSV_CurveTable" | "ECSV_CurveFloat" | "ECSV_CurveVector" | "ECSV_CurveLinearColor" | "ECSV_MAX" */
    open var ImportCurveInterpMode: String /* "RCIM_Linear" | "RCIM_Constant" | "RCIM_Cubic" | "RCIM_None" | "RCIM_MAX" */
    open fun clone(): CSVImportSettings

    companion object {
        fun C(Other: UObject): CSVImportSettings
        fun C(Other: Any): CSVImportSettings
    }
}

external open class CSVImportFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var AutomatedImportSettings: CSVImportSettings
    open var DataTableImportOptions: DataTable

    companion object {
        fun Load(ResourceName: String): CSVImportFactory
        fun Find(Outer: UObject, ResourceName: String): CSVImportFactory
        fun GetDefaultObject(): CSVImportFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CSVImportFactory
        fun C(Other: UObject): CSVImportFactory
        fun C(Other: Any): CSVImportFactory
    }
}

external open class CubeBuilder : EditorBrushBuilder {
    constructor()
    constructor(Outer: UObject)
    open var X: Number
    open var Y: Number
    open var Z: Number
    open var WallThickness: Number
    open var GroupName: String
    open var Hollow: Boolean
    open var Tessellated: Boolean

    companion object {
        fun Load(ResourceName: String): CubeBuilder
        fun Find(Outer: UObject, ResourceName: String): CubeBuilder
        fun GetDefaultObject(): CubeBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CubeBuilder
        fun C(Other: UObject): CubeBuilder
        fun C(Other: Any): CubeBuilder
    }
}

external open class CurvedStairBuilder : EditorBrushBuilder {
    constructor()
    constructor(Outer: UObject)
    open var InnerRadius: Number
    open var StepHeight: Number
    open var StepWidth: Number
    open var AngleOfCurve: Number
    open var NumSteps: Number
    open var AddToFirstStep: Number
    open var GroupName: String
    open var CounterClockwise: Boolean

    companion object {
        fun Load(ResourceName: String): CurvedStairBuilder
        fun Find(Outer: UObject, ResourceName: String): CurvedStairBuilder
        fun GetDefaultObject(): CurvedStairBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CurvedStairBuilder
        fun C(Other: UObject): CurvedStairBuilder
        fun C(Other: Any): CurvedStairBuilder
    }
}

external open class CurveEdOptions : UObject {
    constructor()
    constructor(Outer: UObject)
    open var MinViewRange: Number
    open var MaxViewRange: Number
    open var BackgroundColor: LinearColor
    open var LabelColor: LinearColor
    open var SelectedLabelColor: LinearColor
    open var GridColor: LinearColor
    open var GridTextColor: LinearColor
    open var LabelBlockBkgColor: LinearColor
    open var SelectedKeyColor: LinearColor

    companion object {
        fun Load(ResourceName: String): CurveEdOptions
        fun Find(Outer: UObject, ResourceName: String): CurveEdOptions
        fun GetDefaultObject(): CurveEdOptions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CurveEdOptions
        fun C(Other: UObject): CurveEdOptions
        fun C(Other: Any): CurveEdOptions
    }
}

external open class CurveFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var CurveClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): CurveFactory
        fun Find(Outer: UObject, ResourceName: String): CurveFactory
        fun GetDefaultObject(): CurveFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CurveFactory
        fun C(Other: UObject): CurveFactory
        fun C(Other: Any): CurveFactory
    }
}

external open class CurveFloatFactory : CurveFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CurveFloatFactory
        fun Find(Outer: UObject, ResourceName: String): CurveFloatFactory
        fun GetDefaultObject(): CurveFloatFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CurveFloatFactory
        fun C(Other: UObject): CurveFloatFactory
        fun C(Other: Any): CurveFloatFactory
    }
}

external open class CurveLinearColorFactory : CurveFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CurveLinearColorFactory
        fun Find(Outer: UObject, ResourceName: String): CurveLinearColorFactory
        fun GetDefaultObject(): CurveLinearColorFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CurveLinearColorFactory
        fun C(Other: UObject): CurveLinearColorFactory
        fun C(Other: Any): CurveLinearColorFactory
    }
}

external open class CurveVectorFactory : CurveFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CurveVectorFactory
        fun Find(Outer: UObject, ResourceName: String): CurveVectorFactory
        fun GetDefaultObject(): CurveVectorFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CurveVectorFactory
        fun C(Other: UObject): CurveVectorFactory
        fun C(Other: Any): CurveVectorFactory
    }
}

external open class CurveImportFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CurveImportFactory
        fun Find(Outer: UObject, ResourceName: String): CurveImportFactory
        fun GetDefaultObject(): CurveImportFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CurveImportFactory
        fun C(Other: UObject): CurveImportFactory
        fun C(Other: Any): CurveImportFactory
    }
}

external open class CurveLinearColorAtlasFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var Width: Number
    open var Height: Number
    open var Format: Number

    companion object {
        fun Load(ResourceName: String): CurveLinearColorAtlasFactory
        fun Find(Outer: UObject, ResourceName: String): CurveLinearColorAtlasFactory
        fun GetDefaultObject(): CurveLinearColorAtlasFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CurveLinearColorAtlasFactory
        fun C(Other: UObject): CurveLinearColorAtlasFactory
        fun C(Other: Any): CurveLinearColorAtlasFactory
    }
}

external open class CurveLinearColorThumbnailRenderer : ThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CurveLinearColorThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): CurveLinearColorThumbnailRenderer
        fun GetDefaultObject(): CurveLinearColorThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CurveLinearColorThumbnailRenderer
        fun C(Other: UObject): CurveLinearColorThumbnailRenderer
        fun C(Other: Any): CurveLinearColorThumbnailRenderer
    }
}

external open class CurveTableFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CurveTableFactory
        fun Find(Outer: UObject, ResourceName: String): CurveTableFactory
        fun GetDefaultObject(): CurveTableFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CurveTableFactory
        fun C(Other: UObject): CurveTableFactory
        fun C(Other: Any): CurveTableFactory
    }
}

external open class CylinderBuilder : EditorBrushBuilder {
    constructor()
    constructor(Outer: UObject)
    open var Z: Number
    open var OuterRadius: Number
    open var InnerRadius: Number
    open var Sides: Number
    open var GroupName: String
    open var AlignToSide: Boolean
    open var Hollow: Boolean

    companion object {
        fun Load(ResourceName: String): CylinderBuilder
        fun Find(Outer: UObject, ResourceName: String): CylinderBuilder
        fun GetDefaultObject(): CylinderBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CylinderBuilder
        fun C(Other: UObject): CylinderBuilder
        fun C(Other: Any): CylinderBuilder
    }
}

external open class DataAssetFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var DataAssetClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): DataAssetFactory
        fun Find(Outer: UObject, ResourceName: String): DataAssetFactory
        fun GetDefaultObject(): DataAssetFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DataAssetFactory
        fun C(Other: UObject): DataAssetFactory
        fun C(Other: Any): DataAssetFactory
    }
}

external open class DDCCleanupCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DDCCleanupCommandlet
        fun Find(Outer: UObject, ResourceName: String): DDCCleanupCommandlet
        fun GetDefaultObject(): DDCCleanupCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DDCCleanupCommandlet
        fun C(Other: UObject): DDCCleanupCommandlet
        fun C(Other: Any): DDCCleanupCommandlet
    }
}

external object EProcessRootMotionMode {
    var Ignore: String /* "Ignore" */
    var Loop: String /* "Loop" */
    var LoopAndReset: String /* "LoopAndReset" */
    var EProcessRootMotionMode_MAX: String /* "EProcessRootMotionMode_MAX" */
}

external open class DebugSkelMeshComponent : SkeletalMeshComponent {
    constructor()
    constructor(Outer: UObject)
    open var bRenderRawSkeleton: Boolean
    open var bDrawMesh: Boolean
    open var bShowBoneNames: Boolean
    open var bDrawBoneInfluences: Boolean
    open var bDrawMorphTargetVerts: Boolean
    open var bDrawNormals: Boolean
    open var bDrawTangents: Boolean
    open var bDrawBinormals: Boolean
    open var bDrawSockets: Boolean
    open var bDrawAttributes: Boolean
    open var bSkeletonSocketsVisible: Boolean
    open var bMeshSocketsVisible: Boolean
    open var bDisplayRawAnimation: Boolean
    open var bDisplayNonRetargetedPose: Boolean
    open var bDisplayAdditiveBasePose: Boolean
    open var bDisplayBakedAnimation: Boolean
    open var bDisplaySourceAnimation: Boolean
    open var bDisplayBound: Boolean
    open var bDisplayVertexColors: Boolean
    open var WireframeMeshOverlayColor: LinearColor
    open var bPreviewRootMotion: Boolean
    open var ProcessRootMotionMode: String /* "Ignore" | "Loop" | "LoopAndReset" | "EProcessRootMotionMode_MAX" */
    open var ConsumeRootMotionPreviousPlaybackTime: Number
    open var bShowClothData: Boolean
    open var MinClothPropertyView: Number
    open var MaxClothPropertyView: Number
    open var ClothMeshOpacity: Number
    open var bClothFlipNormal: Boolean
    open var bClothCullBackface: Boolean
    open var bRequiredBonesUpToDateDuringTick: Boolean
    open var BoneRadiusMultiplier: Number
    open var BonesOfInterest: Array<Number>
    open var MorphTargetOfInterests: Array<MorphTarget>
    open var SkelMaterials: Array<MaterialInterface>
    open var PreviewInstance: AnimPreviewInstance
    open var SavedAnimScriptInstance: AnimInstance
    open var bIsUsingInGameBounds: Boolean
    open var bIsUsingPreSkinnedBounds: Boolean
    open var bPerformSingleClothingTick: Boolean
    open var bPauseClothingSimulationWithAnim: Boolean
    open var bTrackAttachedInstanceLOD: Boolean

    companion object {
        fun Load(ResourceName: String): DebugSkelMeshComponent
        fun Find(Outer: UObject, ResourceName: String): DebugSkelMeshComponent
        fun GetDefaultObject(): DebugSkelMeshComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DebugSkelMeshComponent
        fun C(Other: UObject): DebugSkelMeshComponent
        fun C(Other: Any): DebugSkelMeshComponent
    }
}

external open class DEditorParameterValue : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bOverride: Boolean
    open var ParameterInfo: MaterialParameterInfo
    open var ExpressionId: Guid
    open var SortPriority: Number

    companion object {
        fun Load(ResourceName: String): DEditorParameterValue
        fun Find(Outer: UObject, ResourceName: String): DEditorParameterValue
        fun GetDefaultObject(): DEditorParameterValue
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DEditorParameterValue
        fun C(Other: UObject): DEditorParameterValue
        fun C(Other: Any): DEditorParameterValue
    }
}

external open class DEditorDoubleVectorParameterValue : DEditorParameterValue {
    constructor()
    constructor(Outer: UObject)
    open var ParameterValue: Vector4d

    companion object {
        fun Load(ResourceName: String): DEditorDoubleVectorParameterValue
        fun Find(Outer: UObject, ResourceName: String): DEditorDoubleVectorParameterValue
        fun GetDefaultObject(): DEditorDoubleVectorParameterValue
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DEditorDoubleVectorParameterValue
        fun C(Other: UObject): DEditorDoubleVectorParameterValue
        fun C(Other: Any): DEditorDoubleVectorParameterValue
    }
}

external open class DFontParameters {
    open var FontValue: Font
    open var FontPage: Number
    open fun clone(): DFontParameters

    companion object {
        fun C(Other: UObject): DFontParameters
        fun C(Other: Any): DFontParameters
    }
}

external open class DEditorFontParameterValue : DEditorParameterValue {
    constructor()
    constructor(Outer: UObject)
    open var ParameterValue: DFontParameters

    companion object {
        fun Load(ResourceName: String): DEditorFontParameterValue
        fun Find(Outer: UObject, ResourceName: String): DEditorFontParameterValue
        fun GetDefaultObject(): DEditorFontParameterValue
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DEditorFontParameterValue
        fun C(Other: UObject): DEditorFontParameterValue
        fun C(Other: Any): DEditorFontParameterValue
    }
}

external open class DEditorMaterialLayersParameterValue : DEditorParameterValue {
    constructor()
    constructor(Outer: UObject)
    open var ParameterValue: MaterialLayersFunctions

    companion object {
        fun Load(ResourceName: String): DEditorMaterialLayersParameterValue
        fun Find(Outer: UObject, ResourceName: String): DEditorMaterialLayersParameterValue
        fun GetDefaultObject(): DEditorMaterialLayersParameterValue
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DEditorMaterialLayersParameterValue
        fun C(Other: UObject): DEditorMaterialLayersParameterValue
        fun C(Other: Any): DEditorMaterialLayersParameterValue
    }
}

external open class DEditorRuntimeVirtualTextureParameterValue : DEditorParameterValue {
    constructor()
    constructor(Outer: UObject)
    open var ParameterValue: RuntimeVirtualTexture

    companion object {
        fun Load(ResourceName: String): DEditorRuntimeVirtualTextureParameterValue
        fun Find(Outer: UObject, ResourceName: String): DEditorRuntimeVirtualTextureParameterValue
        fun GetDefaultObject(): DEditorRuntimeVirtualTextureParameterValue
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DEditorRuntimeVirtualTextureParameterValue
        fun C(Other: UObject): DEditorRuntimeVirtualTextureParameterValue
        fun C(Other: Any): DEditorRuntimeVirtualTextureParameterValue
    }
}

external open class ScalarParameterAtlasData {
    open var bIsUsedAsAtlasPosition: Boolean
    open var Curve: CurveLinearColor
    open var Atlas: CurveLinearColorAtlas
    open fun clone(): ScalarParameterAtlasData

    companion object {
        fun C(Other: UObject): ScalarParameterAtlasData
        fun C(Other: Any): ScalarParameterAtlasData
    }
}

external open class DEditorScalarParameterValue : DEditorParameterValue {
    constructor()
    constructor(Outer: UObject)
    open var ParameterValue: Number
    open var AtlasData: ScalarParameterAtlasData

    companion object {
        fun Load(ResourceName: String): DEditorScalarParameterValue
        fun Find(Outer: UObject, ResourceName: String): DEditorScalarParameterValue
        fun GetDefaultObject(): DEditorScalarParameterValue
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DEditorScalarParameterValue
        fun C(Other: UObject): DEditorScalarParameterValue
        fun C(Other: Any): DEditorScalarParameterValue
    }
}

external open class DComponentMaskParameter {
    open var R: Boolean
    open var G: Boolean
    open var B: Boolean
    open var A: Boolean
    open fun clone(): DComponentMaskParameter

    companion object {
        fun C(Other: UObject): DComponentMaskParameter
        fun C(Other: Any): DComponentMaskParameter
    }
}

external open class DEditorStaticComponentMaskParameterValue : DEditorParameterValue {
    constructor()
    constructor(Outer: UObject)
    open var ParameterValue: DComponentMaskParameter

    companion object {
        fun Load(ResourceName: String): DEditorStaticComponentMaskParameterValue
        fun Find(Outer: UObject, ResourceName: String): DEditorStaticComponentMaskParameterValue
        fun GetDefaultObject(): DEditorStaticComponentMaskParameterValue
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DEditorStaticComponentMaskParameterValue
        fun C(Other: UObject): DEditorStaticComponentMaskParameterValue
        fun C(Other: Any): DEditorStaticComponentMaskParameterValue
    }
}

external open class DEditorStaticSwitchParameterValue : DEditorParameterValue {
    constructor()
    constructor(Outer: UObject)
    open var ParameterValue: Boolean

    companion object {
        fun Load(ResourceName: String): DEditorStaticSwitchParameterValue
        fun Find(Outer: UObject, ResourceName: String): DEditorStaticSwitchParameterValue
        fun GetDefaultObject(): DEditorStaticSwitchParameterValue
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DEditorStaticSwitchParameterValue
        fun C(Other: UObject): DEditorStaticSwitchParameterValue
        fun C(Other: Any): DEditorStaticSwitchParameterValue
    }
}

external open class ParameterChannelNames {
    open var R: String
    open var G: String
    open var B: String
    open var A: String
    open fun clone(): ParameterChannelNames

    companion object {
        fun C(Other: UObject): ParameterChannelNames
        fun C(Other: Any): ParameterChannelNames
    }
}

external open class DEditorTextureParameterValue : DEditorParameterValue {
    constructor()
    constructor(Outer: UObject)
    open var ParameterValue: Texture
    open var ChannelNames: ParameterChannelNames

    companion object {
        fun Load(ResourceName: String): DEditorTextureParameterValue
        fun Find(Outer: UObject, ResourceName: String): DEditorTextureParameterValue
        fun GetDefaultObject(): DEditorTextureParameterValue
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DEditorTextureParameterValue
        fun C(Other: UObject): DEditorTextureParameterValue
        fun C(Other: Any): DEditorTextureParameterValue
    }
}

external open class DEditorVectorParameterValue : DEditorParameterValue {
    constructor()
    constructor(Outer: UObject)
    open var ParameterValue: LinearColor
    open var bIsUsedAsChannelMask: Boolean
    open var ChannelNames: ParameterChannelNames

    companion object {
        fun Load(ResourceName: String): DEditorVectorParameterValue
        fun Find(Outer: UObject, ResourceName: String): DEditorVectorParameterValue
        fun GetDefaultObject(): DEditorVectorParameterValue
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DEditorVectorParameterValue
        fun C(Other: UObject): DEditorVectorParameterValue
        fun C(Other: Any): DEditorVectorParameterValue
    }
}

external open class EdMode : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ModeToolsContext: EdModeInteractiveToolsContext
    open var SettingsClass: Class
    open var SettingsObject: UObject

    companion object {
        fun Load(ResourceName: String): EdMode
        fun Find(Outer: UObject, ResourceName: String): EdMode
        fun GetDefaultObject(): EdMode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EdMode
        fun C(Other: UObject): EdMode
        fun C(Other: Any): EdMode
    }
}

external open class BaseLegacyWidgetEdMode : EdMode {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BaseLegacyWidgetEdMode
        fun Find(Outer: UObject, ResourceName: String): BaseLegacyWidgetEdMode
        fun GetDefaultObject(): BaseLegacyWidgetEdMode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BaseLegacyWidgetEdMode
        fun C(Other: UObject): BaseLegacyWidgetEdMode
        fun C(Other: Any): BaseLegacyWidgetEdMode
    }
}

external open class EdModeDefault : BaseLegacyWidgetEdMode {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EdModeDefault
        fun Find(Outer: UObject, ResourceName: String): EdModeDefault
        fun GetDefaultObject(): EdModeDefault
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EdModeDefault
        fun C(Other: UObject): EdModeDefault
        fun C(Other: Any): EdModeDefault
    }
}

external open class DerivedDataCacheCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DerivedDataCacheCommandlet
        fun Find(Outer: UObject, ResourceName: String): DerivedDataCacheCommandlet
        fun GetDefaultObject(): DerivedDataCacheCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DerivedDataCacheCommandlet
        fun C(Other: UObject): DerivedDataCacheCommandlet
        fun C(Other: Any): DerivedDataCacheCommandlet
    }
}

external open class DiffAssetRegistriesCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)
    open var AssetRegistrySearchPath: Array<String>
    open var P4Repository: String
    open var P4EngineBasePath: String
    open var P4EngineAssetPath: String
    open var P4GameBasePath: String
    open var P4GameAssetPath: String
    open var RegexBranchCL: String

    companion object {
        fun Load(ResourceName: String): DiffAssetRegistriesCommandlet
        fun Find(Outer: UObject, ResourceName: String): DiffAssetRegistriesCommandlet
        fun GetDefaultObject(): DiffAssetRegistriesCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DiffAssetRegistriesCommandlet
        fun C(Other: UObject): DiffAssetRegistriesCommandlet
        fun C(Other: Any): DiffAssetRegistriesCommandlet
    }
}

external open class DiffAssetsCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DiffAssetsCommandlet
        fun Find(Outer: UObject, ResourceName: String): DiffAssetsCommandlet
        fun GetDefaultObject(): DiffAssetsCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DiffAssetsCommandlet
        fun C(Other: UObject): DiffAssetsCommandlet
        fun C(Other: Any): DiffAssetsCommandlet
    }
}

external open class DiffFilesCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DiffFilesCommandlet
        fun Find(Outer: UObject, ResourceName: String): DiffFilesCommandlet
        fun GetDefaultObject(): DiffFilesCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DiffFilesCommandlet
        fun C(Other: UObject): DiffFilesCommandlet
        fun C(Other: Any): DiffFilesCommandlet
    }
}

external open class DiffPackagesCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)
    open var Packages: Package

    companion object {
        fun Load(ResourceName: String): DiffPackagesCommandlet
        fun Find(Outer: UObject, ResourceName: String): DiffPackagesCommandlet
        fun GetDefaultObject(): DiffPackagesCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DiffPackagesCommandlet
        fun C(Other: UObject): DiffPackagesCommandlet
        fun C(Other: Any): DiffPackagesCommandlet
    }
}

external open class DumpBlueprintsInfoCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DumpBlueprintsInfoCommandlet
        fun Find(Outer: UObject, ResourceName: String): DumpBlueprintsInfoCommandlet
        fun GetDefaultObject(): DumpBlueprintsInfoCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DumpBlueprintsInfoCommandlet
        fun C(Other: UObject): DumpBlueprintsInfoCommandlet
        fun C(Other: Any): DumpBlueprintsInfoCommandlet
    }
}

external open class DumpHiddenCategoriesCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DumpHiddenCategoriesCommandlet
        fun Find(Outer: UObject, ResourceName: String): DumpHiddenCategoriesCommandlet
        fun GetDefaultObject(): DumpHiddenCategoriesCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DumpHiddenCategoriesCommandlet
        fun C(Other: UObject): DumpHiddenCategoriesCommandlet
        fun C(Other: Any): DumpHiddenCategoriesCommandlet
    }
}

external open class DumpMaterialShaderTypesCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DumpMaterialShaderTypesCommandlet
        fun Find(Outer: UObject, ResourceName: String): DumpMaterialShaderTypesCommandlet
        fun GetDefaultObject(): DumpMaterialShaderTypesCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DumpMaterialShaderTypesCommandlet
        fun C(Other: UObject): DumpMaterialShaderTypesCommandlet
        fun C(Other: Any): DumpMaterialShaderTypesCommandlet
    }
}

external open class EdGraphNode_Comment : EdGraphNode {
    constructor()
    constructor(Outer: UObject)
    open var CommentColor: LinearColor
    open var FontSize: Number
    open var bCommentBubbleVisible_InDetailsPanel: Boolean
    open var bColorCommentBubble: Boolean
    open var MoveMode: String /* "GroupMovement" | "NoGroupMovement" | "ECommentBoxMode_MAX" */
    open var CommentDepth: Number

    companion object {
        fun Load(ResourceName: String): EdGraphNode_Comment
        fun Find(Outer: UObject, ResourceName: String): EdGraphNode_Comment
        fun GetDefaultObject(): EdGraphNode_Comment
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EdGraphNode_Comment
        fun C(Other: UObject): EdGraphNode_Comment
        fun C(Other: Any): EdGraphNode_Comment
    }
}

external open class EditorActorSubsystem : EditorSubsystem {
    constructor()
    constructor(Outer: UObject)
    open var OnEditCutActorsBegin: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnEditCutActorsEnd: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnEditCopyActorsBegin: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnEditCopyActorsEnd: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnEditPasteActorsBegin: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnEditPasteActorsEnd: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnDuplicateActorsBegin: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnDuplicateActorsEnd: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnDeleteActorsBegin: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnDeleteActorsEnd: UnrealEngineMulticastDelegate<() -> Unit>
    open fun SpawnActorFromObject(ObjectToUse: UObject, Location: Vector, Rotation: Rotator, bTransient: Boolean): Actor
    open fun SpawnActorFromClass(ActorClass: UnrealEngineClass, Location: Vector, Rotation: Rotator, bTransient: Boolean): Actor
    open fun SetSelectedLevelActors(ActorsToSelect: Array<Actor>)
    open fun SetComponentTransform(InSceneComponent: SceneComponent, InWorldTransform: Transform): Boolean
    open fun SetActorTransform(InActor: Actor, InWorldTransform: Transform): Boolean
    open fun SetActorSelectionState(Actor: Actor, bShouldBeSelected: Boolean)
    open fun SelectNothing()
    open fun SelectAllChildren(bRecurseChildren: Boolean)
    open fun SelectAll(InWorld: World)
    open fun InvertSelection(InWorld: World)
    open fun GetSelectedLevelActors(): Array<Actor>
    open fun GetAllLevelActorsComponents(): Array<ActorComponent>
    open fun GetAllLevelActors(): Array<Actor>
    open fun GetActorReference(PathToActor: String): Actor
    open fun DuplicateSelectedActors(InWorld: World)
    open fun DuplicateActors(ActorsToDuplicate: Array<Actor>, ToWorld: World, Offset: Vector): Array<Actor>
    open fun DuplicateActor(ActorToDuplicate: Actor, ToWorld: World, Offset: Vector): Actor
    open fun DestroyActors(ActorsToDestroy: Array<Actor>): Boolean
    open fun DestroyActor(ActorToDestroy: Actor): Boolean
    open fun DeleteSelectedActors(InWorld: World)
    open fun ConvertActors(Actors: Array<Actor>, ActorClass: UnrealEngineClass, StaticMeshPackagePath: String): Array<Actor>
    open fun ClearActorSelectionSet()

    companion object {
        fun Load(ResourceName: String): EditorActorSubsystem
        fun Find(Outer: UObject, ResourceName: String): EditorActorSubsystem
        fun GetDefaultObject(): EditorActorSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorActorSubsystem
        fun C(Other: UObject): EditorActorSubsystem
        fun C(Other: Any): EditorActorSubsystem
    }
}

external open class EditorAnimBaseObj : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EditorAnimBaseObj
        fun Find(Outer: UObject, ResourceName: String): EditorAnimBaseObj
        fun GetDefaultObject(): EditorAnimBaseObj
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorAnimBaseObj
        fun C(Other: UObject): EditorAnimBaseObj
        fun C(Other: Any): EditorAnimBaseObj
    }
}

external open class EditorAnimCompositeSegment : EditorAnimBaseObj {
    constructor()
    constructor(Outer: UObject)
    open var AnimSegment: AnimSegment

    companion object {
        fun Load(ResourceName: String): EditorAnimCompositeSegment
        fun Find(Outer: UObject, ResourceName: String): EditorAnimCompositeSegment
        fun GetDefaultObject(): EditorAnimCompositeSegment
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorAnimCompositeSegment
        fun C(Other: UObject): EditorAnimCompositeSegment
        fun C(Other: Any): EditorAnimCompositeSegment
    }
}

external open class EditorAnimCurveBoneLinks : UObject {
    constructor()
    constructor(Outer: UObject)
    open var CurveName: SmartName
    open var ConnectedBones: Array<BoneReference>
    open var MaxLOD: Number

    companion object {
        fun Load(ResourceName: String): EditorAnimCurveBoneLinks
        fun Find(Outer: UObject, ResourceName: String): EditorAnimCurveBoneLinks
        fun GetDefaultObject(): EditorAnimCurveBoneLinks
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorAnimCurveBoneLinks
        fun C(Other: UObject): EditorAnimCurveBoneLinks
        fun C(Other: Any): EditorAnimCurveBoneLinks
    }
}

external open class EditorAnimSegment : EditorAnimBaseObj {
    constructor()
    constructor(Outer: UObject)
    open var AnimSegment: AnimSegment

    companion object {
        fun Load(ResourceName: String): EditorAnimSegment
        fun Find(Outer: UObject, ResourceName: String): EditorAnimSegment
        fun GetDefaultObject(): EditorAnimSegment
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorAnimSegment
        fun C(Other: UObject): EditorAnimSegment
        fun C(Other: Any): EditorAnimSegment
    }
}

external open class EditorCompositeSection : EditorAnimBaseObj {
    constructor()
    constructor(Outer: UObject)
    open var CompositeSection: CompositeSection

    companion object {
        fun Load(ResourceName: String): EditorCompositeSection
        fun Find(Outer: UObject, ResourceName: String): EditorCompositeSection
        fun GetDefaultObject(): EditorCompositeSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorCompositeSection
        fun C(Other: UObject): EditorCompositeSection
        fun C(Other: Any): EditorCompositeSection
    }
}

external open class EditorDomainSaveCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EditorDomainSaveCommandlet
        fun Find(Outer: UObject, ResourceName: String): EditorDomainSaveCommandlet
        fun GetDefaultObject(): EditorDomainSaveCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorDomainSaveCommandlet
        fun C(Other: UObject): EditorDomainSaveCommandlet
        fun C(Other: Any): EditorDomainSaveCommandlet
    }
}

external object EWindowMode {
    var Fullscreen: String /* "Fullscreen" */
    var WindowedFullscreen: String /* "WindowedFullscreen" */
    var Windowed: String /* "Windowed" */
    var EWindowMode_MAX: String /* "EWindowMode_MAX" */
}

external interface `T$654` {
    var CurrentScaleNormalized: Number
    var CurrentScaleValue: Number
    var MinScaleValue: Number
    var MaxScaleValue: Number
}

external open class GameUserSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bUseVSync: Boolean
    open var bUseDynamicResolution: Boolean
    open var ResolutionSizeX: Any
    open var ResolutionSizeY: Any
    open var LastUserConfirmedResolutionSizeX: Any
    open var LastUserConfirmedResolutionSizeY: Any
    open var WindowPosX: Number
    open var WindowPosY: Number
    open var FullscreenMode: Number
    open var LastConfirmedFullscreenMode: Number
    open var PreferredFullscreenMode: Number
    open var Version: Any
    open var AudioQualityLevel: Number
    open var LastConfirmedAudioQualityLevel: Number
    open var FrameRateLimit: Number
    open var DesiredScreenWidth: Number
    open var bUseDesiredScreenHeight: Boolean
    open var DesiredScreenHeight: Number
    open var LastUserConfirmedDesiredScreenWidth: Number
    open var LastUserConfirmedDesiredScreenHeight: Number
    open var LastRecommendedScreenWidth: Number
    open var LastRecommendedScreenHeight: Number
    open var LastCPUBenchmarkResult: Number
    open var LastGPUBenchmarkResult: Number
    open var LastCPUBenchmarkSteps: Array<Number>
    open var LastGPUBenchmarkSteps: Array<Number>
    open var LastGPUBenchmarkMultiplier: Number
    open var bUseHDRDisplayOutput: Boolean
    open var HDRDisplayOutputNits: Number
    open var OnGameUserSettingsUINeedsUpdate: UnrealEngineMulticastDelegate<() -> Unit>
    open fun ValidateSettings()
    open fun SupportsHDRDisplayOutput(): Boolean
    open fun SetVSyncEnabled(bEnable: Boolean)
    open fun SetVisualEffectQuality(Value: Number)
    open fun SetViewDistanceQuality(Value: Number)
    open fun SetToDefaults()
    open fun SetTextureQuality(Value: Number)
    open fun SetShadowQuality(Value: Number)
    open fun SetShadingQuality(Value: Number)
    open fun SetScreenResolution(Resolution: IntPoint)
    open fun SetResolutionScaleValue(NewScaleValue: Number)
    open fun SetResolutionScaleValue_Deprecated(NewScaleValue: Number)
    open fun SetResolutionScaleNormalized(NewScaleNormalized: Number)
    open fun SetReflectionQuality(Value: Number)
    open fun SetPostProcessingQuality(Value: Number)
    open fun SetOverallScalabilityLevel(Value: Number)
    open fun SetGlobalIlluminationQuality(Value: Number)
    open fun SetFullscreenMode(InFullscreenMode: String /* "Fullscreen" | "WindowedFullscreen" | "Windowed" | "EWindowMode_MAX" */)
    open fun SetFrameRateLimit(NewLimit: Number)
    open fun SetFoliageQuality(Value: Number)
    open fun SetDynamicResolutionEnabled(bEnable: Boolean)
    open fun SetBenchmarkFallbackValues()
    open fun SetAudioQualityLevel(QualityLevel: Number)
    open fun SetAntiAliasingQuality(Value: Number)
    open fun SaveSettings()
    open fun RunHardwareBenchmark(WorkScale: Number, CPUMultiplier: Number, GPUMultiplier: Number)
    open fun RevertVideoMode()
    open fun ResetToCurrentSettings()
    open fun LoadSettings(bForceReload: Boolean)
    open fun IsVSyncEnabled(): Boolean
    open fun IsVSyncDirty(): Boolean
    open fun IsScreenResolutionDirty(): Boolean
    open fun IsHDREnabled(): Boolean
    open fun IsFullscreenModeDirty(): Boolean
    open fun IsDynamicResolutionEnabled(): Boolean
    open fun IsDynamicResolutionDirty(): Boolean
    open fun IsDirty(): Boolean
    open fun GetVisualEffectQuality(): Number
    open fun GetViewDistanceQuality(): Number
    open fun GetTextureQuality(): Number
    open fun GetShadowQuality(): Number
    open fun GetShadingQuality(): Number
    open fun GetScreenResolution(): IntPoint
    open fun GetResolutionScaleNormalized(): Number
    open fun GetResolutionScaleInformation(CurrentScaleNormalized: Number = definedExternally, CurrentScaleValue: Number = definedExternally, MinScaleValue: Number = definedExternally, MaxScaleValue: Number = definedExternally): `T$654`
    open fun GetResolutionScaleInformation_Deprecated(CurrentScaleNormalized: Number = definedExternally, CurrentScaleValue: Number = definedExternally, MinScaleValue: Number = definedExternally, MaxScaleValue: Number = definedExternally): `T$654`
    open fun GetReflectionQuality(): Number
    open fun GetRecommendedResolutionScale(): Number
    open fun GetPreferredFullscreenMode(): String /* "Fullscreen" | "WindowedFullscreen" | "Windowed" | "EWindowMode_MAX" */
    open fun GetPostProcessingQuality(): Number
    open fun GetOverallScalabilityLevel(): Number
    open fun GetLastConfirmedScreenResolution(): IntPoint
    open fun GetLastConfirmedFullscreenMode(): String /* "Fullscreen" | "WindowedFullscreen" | "Windowed" | "EWindowMode_MAX" */
    open fun GetGlobalIlluminationQuality(): Number
    open fun GetFullscreenMode(): String /* "Fullscreen" | "WindowedFullscreen" | "Windowed" | "EWindowMode_MAX" */
    open fun GetFrameRateLimit(): Number
    open fun GetFoliageQuality(): Number
    open fun GetDesktopResolution(): IntPoint
    open fun GetDefaultResolutionScale(): Number
    open fun GetCurrentHDRDisplayNits(): Number
    open fun GetAudioQualityLevel(): Number
    open fun GetAntiAliasingQuality(): Number
    open fun EnableHDRDisplayOutput(bEnable: Boolean, DisplayNits: Number)
    open fun ConfirmVideoMode()
    open fun ApplySettings(bCheckForCommandLineOverrides: Boolean)
    open fun ApplyResolutionSettings(bCheckForCommandLineOverrides: Boolean)
    open fun ApplyNonResolutionSettings()
    open fun ApplyHardwareBenchmarkResults()

    companion object {
        fun Load(ResourceName: String): GameUserSettings
        fun Find(Outer: UObject, ResourceName: String): GameUserSettings
        fun GetDefaultObject(): GameUserSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameUserSettings
        fun GetSyncInterval(): Number
        fun GetGameUserSettings(): GameUserSettings
        fun GetFramePace(): Number
        fun GetDefaultWindowPosition(): IntPoint
        fun GetDefaultWindowMode(): String /* "Fullscreen" | "WindowedFullscreen" | "Windowed" | "EWindowMode_MAX" */
        fun GetDefaultResolution(): IntPoint
        fun C(Other: UObject): GameUserSettings
        fun C(Other: Any): GameUserSettings
    }
}

external open class AssetManager : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ObjectReferenceList: Array<UObject>
    open var bIsGlobalAsyncScanEnvironment: Boolean
    open var bShouldGuessTypeAndName: Boolean
    open var bShouldUseSynchronousLoad: Boolean
    open var bIsLoadingFromPakFiles: Boolean
    open var bShouldAcquireMissingChunksOnLoad: Boolean
    open var bOnlyCookProductionAssets: Boolean
    open var NumBulkScanRequests: Number
    open var bIsPrimaryAssetDirectoryCurrent: Boolean
    open var bIsManagementDatabaseCurrent: Boolean
    open var bUpdateManagementDatabaseAfterScan: Boolean
    open var bIncludeOnlyOnDiskAssets: Boolean
    open var bHasCompletedInitialScan: Boolean
    open var NumberOfSpawnedNotifications: Number

    companion object {
        fun Load(ResourceName: String): AssetManager
        fun Find(Outer: UObject, ResourceName: String): AssetManager
        fun GetDefaultObject(): AssetManager
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AssetManager
        fun C(Other: UObject): AssetManager
        fun C(Other: Any): AssetManager
    }
}

external open class StatColorMapEntry {
    open var In: Number
    open var Out: Color
    open fun clone(): StatColorMapEntry

    companion object {
        fun C(Other: UObject): StatColorMapEntry
        fun C(Other: Any): StatColorMapEntry
    }
}

external open class StatColorMapping {
    open var StatName: String
    open var ColorMap: Array<StatColorMapEntry>
    open var DisableBlend: Boolean
    open fun clone(): StatColorMapping

    companion object {
        fun C(Other: UObject): StatColorMapping
        fun C(Other: Any): StatColorMapping
    }
}

external open class GameNameRedirect {
    open var OldGameName: String
    open var NewGameName: String
    open fun clone(): GameNameRedirect

    companion object {
        fun C(Other: UObject): GameNameRedirect
        fun C(Other: Any): GameNameRedirect
    }
}

external open class ClassRedirect {
    open var ObjectName: String
    open var OldClassName: String
    open var NewClassName: String
    open var OldSubobjName: String
    open var NewSubobjName: String
    open var NewClassClass: String
    open var NewClassPackage: String
    open var InstanceOnly: Boolean
    open fun clone(): ClassRedirect

    companion object {
        fun C(Other: UObject): ClassRedirect
        fun C(Other: Any): ClassRedirect
    }
}

external open class PluginRedirect {
    open var OldPluginName: String
    open var NewPluginName: String
    open fun clone(): PluginRedirect

    companion object {
        fun C(Other: UObject): PluginRedirect
        fun C(Other: Any): PluginRedirect
    }
}

external open class StructRedirect {
    open var OldStructName: String
    open var NewStructName: String
    open fun clone(): StructRedirect

    companion object {
        fun C(Other: UObject): StructRedirect
        fun C(Other: Any): StructRedirect
    }
}

external object ETransitionType {
    var None: String /* "None" */
    var Paused: String /* "Paused" */
    var Loading: String /* "Loading" */
    var Saving: String /* "Saving" */
    var Connecting: String /* "Connecting" */
    var Precaching: String /* "Precaching" */
    var WaitingToConnect: String /* "WaitingToConnect" */
    var MAX: String /* "MAX" */
}

external open class DropNoteInfo {
    open var Location: Vector
    open var Rotation: Rotator
    open var Comment: String
    open fun clone(): DropNoteInfo

    companion object {
        fun C(Other: UObject): DropNoteInfo
        fun C(Other: Any): DropNoteInfo
    }
}

external open class NetDriverDefinition {
    open var DefName: String
    open var DriverClassName: String
    open var DriverClassNameFallback: String
    open fun clone(): NetDriverDefinition

    companion object {
        fun C(Other: UObject): NetDriverDefinition
        fun C(Other: Any): NetDriverDefinition
    }
}

external open class Engine : UObject {
    constructor()
    constructor(Outer: UObject)
    open var TinyFont: Font
    open var TinyFontName: SoftObjectPath
    open var SmallFont: Font
    open var SmallFontName: SoftObjectPath
    open var MediumFont: Font
    open var MediumFontName: SoftObjectPath
    open var LargeFont: Font
    open var LargeFontName: SoftObjectPath
    open var SubtitleFont: Font
    open var SubtitleFontName: SoftObjectPath
    open var AdditionalFonts: Array<Font>
    open var AdditionalFontNames: Array<String>
    open var ConsoleClass: UnrealEngineClass
    open var ConsoleClassName: SoftClassPath
    open var GameViewportClientClass: UnrealEngineClass
    open var GameViewportClientClassName: SoftClassPath
    open var LocalPlayerClass: UnrealEngineClass
    open var LocalPlayerClassName: SoftClassPath
    open var WorldSettingsClass: UnrealEngineClass
    open var WorldSettingsClassName: SoftClassPath
    open var NavigationSystemClassName: SoftClassPath
    open var NavigationSystemClass: UnrealEngineClass
    open var NavigationSystemConfigClassName: SoftClassPath
    open var NavigationSystemConfigClass: UnrealEngineClass
    open var AvoidanceManagerClassName: SoftClassPath
    open var AvoidanceManagerClass: UnrealEngineClass
    open var AIControllerClassName: SoftClassPath
    open var PhysicsCollisionHandlerClass: UnrealEngineClass
    open var PhysicsCollisionHandlerClassName: SoftClassPath
    open var GameUserSettingsClassName: SoftClassPath
    open var GameUserSettingsClass: UnrealEngineClass
    open var GameUserSettings: GameUserSettings
    open var LevelScriptActorClass: UnrealEngineClass
    open var LevelScriptActorClassName: SoftClassPath
    open var DefaultBlueprintBaseClassName: SoftClassPath
    open var GameSingletonClassName: SoftClassPath
    open var GameSingleton: UObject
    open var AssetManagerClassName: SoftClassPath
    open var AssetManager: AssetManager
    open var DefaultTexture: Texture2D
    open var DefaultTextureName: SoftObjectPath
    open var DefaultDiffuseTexture: Texture
    open var DefaultDiffuseTextureName: SoftObjectPath
    open var DefaultBSPVertexTexture: Texture2D
    open var DefaultBSPVertexTextureName: SoftObjectPath
    open var HighFrequencyNoiseTexture: Texture2D
    open var HighFrequencyNoiseTextureName: SoftObjectPath
    open var DefaultBokehTexture: Texture2D
    open var DefaultBokehTextureName: SoftObjectPath
    open var DefaultBloomKernelTexture: Texture2D
    open var DefaultBloomKernelTextureName: SoftObjectPath
    open var DefaultFilmGrainTexture: Texture2D
    open var DefaultFilmGrainTextureName: SoftObjectPath
    open var WireframeMaterial: Material
    open var WireframeMaterialName: String
    open var GeomMaterial: Material
    open var GeomMaterialName: SoftObjectPath
    open var DebugMeshMaterial: Material
    open var DebugMeshMaterialName: SoftObjectPath
    open var EmissiveMeshMaterial: Material
    open var EmissiveMeshMaterialName: SoftObjectPath
    open var LevelColorationLitMaterial: Material
    open var LevelColorationLitMaterialName: String
    open var LevelColorationUnlitMaterial: Material
    open var LevelColorationUnlitMaterialName: String
    open var LightingTexelDensityMaterial: Material
    open var LightingTexelDensityName: String
    open var ShadedLevelColorationLitMaterial: Material
    open var ShadedLevelColorationLitMaterialName: String
    open var ShadedLevelColorationUnlitMaterial: Material
    open var ShadedLevelColorationUnlitMaterialName: String
    open var RemoveSurfaceMaterial: Material
    open var RemoveSurfaceMaterialName: SoftObjectPath
    open var VertexColorMaterial: Material
    open var VertexColorMaterialName: String
    open var VertexColorViewModeMaterial_ColorOnly: Material
    open var VertexColorViewModeMaterialName_ColorOnly: String
    open var VertexColorViewModeMaterial_AlphaAsColor: Material
    open var VertexColorViewModeMaterialName_AlphaAsColor: String
    open var VertexColorViewModeMaterial_RedOnly: Material
    open var VertexColorViewModeMaterialName_RedOnly: String
    open var VertexColorViewModeMaterial_GreenOnly: Material
    open var VertexColorViewModeMaterialName_GreenOnly: String
    open var VertexColorViewModeMaterial_BlueOnly: Material
    open var VertexColorViewModeMaterialName_BlueOnly: String
    open var BoneWeightMaterial: Material
    open var BoneWeightMaterialName: SoftObjectPath
    open var ClothPaintMaterial: Material
    open var ClothPaintMaterialWireframe: Material
    open var ClothPaintMaterialInstance: MaterialInstanceDynamic
    open var ClothPaintMaterialWireframeInstance: MaterialInstanceDynamic
    open var ClothPaintMaterialName: SoftObjectPath
    open var ClothPaintMaterialWireframeName: SoftObjectPath
    open var PhysicalMaterialMaskMaterial: Material
    open var PhysicalMaterialMaskMaterialName: SoftObjectPath
    open var DebugEditorMaterial: Material
    open var DefaultFlattenMaterialName: SoftObjectPath
    open var DefaultHLODFlattenMaterialName: SoftObjectPath
    open var DefaultLandscapeFlattenMaterialName: SoftObjectPath
    open var DefaultFlattenMaterial: Material
    open var DefaultHLODFlattenMaterial: Material
    open var DefaultLandscapeFlattenMaterial: Material
    open var DebugEditorMaterialName: SoftObjectPath
    open var ConstraintLimitMaterial: Material
    open var ConstraintLimitMaterialX: MaterialInstanceDynamic
    open var ConstraintLimitMaterialXAxis: MaterialInstanceDynamic
    open var ConstraintLimitMaterialY: MaterialInstanceDynamic
    open var ConstraintLimitMaterialYAxis: MaterialInstanceDynamic
    open var ConstraintLimitMaterialZ: MaterialInstanceDynamic
    open var ConstraintLimitMaterialZAxis: MaterialInstanceDynamic
    open var ConstraintLimitMaterialPrismatic: MaterialInstanceDynamic
    open var InvalidLightmapSettingsMaterial: Material
    open var InvalidLightmapSettingsMaterialName: SoftObjectPath
    open var PreviewShadowsIndicatorMaterial: Material
    open var PreviewShadowsIndicatorMaterialName: SoftObjectPath
    open var ArrowMaterial: Material
    open var ArrowMaterialYellow: MaterialInstanceDynamic
    open var ArrowMaterialName: SoftObjectPath
    open var LightingOnlyBrightness: LinearColor
    open var ShaderComplexityColors: Array<LinearColor>
    open var QuadComplexityColors: Array<LinearColor>
    open var LightComplexityColors: Array<LinearColor>
    open var StationaryLightOverlapColors: Array<LinearColor>
    open var LODColorationColors: Array<LinearColor>
    open var HLODColorationColors: Array<LinearColor>
    open var StreamingAccuracyColors: Array<LinearColor>
    open var MaxPixelShaderAdditiveComplexityCount: Number
    open var MaxES3PixelShaderAdditiveComplexityCount: Number
    open var MinLightMapDensity: Number
    open var IdealLightMapDensity: Number
    open var MaxLightMapDensity: Number
    open var bRenderLightMapDensityGrayscale: Boolean
    open var RenderLightMapDensityGrayscaleScale: Number
    open var RenderLightMapDensityColorScale: Number
    open var LightMapDensityVertexMappedColor: LinearColor
    open var LightMapDensitySelectedColor: LinearColor
    open var StatColorMappings: Array<StatColorMapping>
    open var EditorBrushMaterial: Material
    open var EditorBrushMaterialName: SoftObjectPath
    open var DefaultPhysMaterial: PhysicalMaterial
    open var DefaultPhysMaterialName: SoftObjectPath
    open var DefaultDestructiblePhysMaterial: PhysicalMaterial
    open var DefaultDestructiblePhysMaterialName: SoftObjectPath
    open var ActiveGameNameRedirects: Array<GameNameRedirect>
    open var ActiveClassRedirects: Array<ClassRedirect>
    open var ActivePluginRedirects: Array<PluginRedirect>
    open var ActiveStructRedirects: Array<StructRedirect>
    open var PreIntegratedSkinBRDFTexture: Texture2D
    open var PreIntegratedSkinBRDFTextureName: SoftObjectPath
    open var BlueNoiseTexture: Texture2D
    open var BlueNoiseTextureName: SoftObjectPath
    open var MiniFontTexture: Texture2D
    open var MiniFontTextureName: SoftObjectPath
    open var WeightMapPlaceholderTexture: Texture
    open var WeightMapPlaceholderTextureName: SoftObjectPath
    open var LightMapDensityTexture: Texture2D
    open var LightMapDensityTextureName: SoftObjectPath
    open var GameViewport: GameViewportClient
    open var DeferredCommands: Array<String>
    open var NearClipPlane: Number
    open var bSubtitlesEnabled: Boolean
    open var bSubtitlesForcedOff: Boolean
    open var MaximumLoopIterationCount: Number
    open var bCanBlueprintsTickByDefault: Boolean
    open var bOptimizeAnimBlueprintMemberVariableAccess: Boolean
    open var bAllowMultiThreadedAnimationUpdate: Boolean
    open var bEnableEditorPSysRealtimeLOD: Boolean
    open var bSmoothFrameRate: Boolean
    open var bUseFixedFrameRate: Boolean
    open var FixedFrameRate: Number
    open var SmoothedFrameRateRange: FloatRange
    open var CustomTimeStep: EngineCustomTimeStep
    open var CustomTimeStepClassName: SoftClassPath
    open var TimecodeProvider: TimecodeProvider
    open var TimecodeProviderClassName: SoftClassPath
    open var bGenerateDefaultTimecode: Boolean
    open var GenerateDefaultTimecodeFrameRate: FrameRate
    open var GenerateDefaultTimecodeFrameDelay: Number
    open var bCheckForMultiplePawnsSpawnedInAFrame: Boolean
    open var NumPawnsAllowedToBeSpawnedInAFrame: Number
    open var bShouldGenerateLowQualityLightmaps: Boolean
    open var C_WorldBox: Color
    open var C_BrushWire: Color
    open var C_AddWire: Color
    open var C_SubtractWire: Color
    open var C_SemiSolidWire: Color
    open var C_NonSolidWire: Color
    open var C_WireBackground: Color
    open var C_ScaleBoxHi: Color
    open var C_VolumeCollision: Color
    open var C_BSPCollision: Color
    open var C_OrthoBackground: Color
    open var C_Volume: Color
    open var C_BrushShape: Color
    open var StreamingDistanceFactor: Number
    open var GameScreenshotSaveDirectory: DirectoryPath
    open var UseStaticMeshMinLODPerQualityLevels: Boolean
    open var TransitionType: String /* "None" | "Paused" | "Loading" | "Saving" | "Connecting" | "Precaching" | "WaitingToConnect" | "MAX" */
    open var TransitionDescription: String
    open var TransitionGameMode: String
    open var bAllowMatureLanguage: Boolean
    open var CameraRotationThreshold: Number
    open var CameraTranslationThreshold: Number
    open var PrimitiveProbablyVisibleTime: Number
    open var MaxOcclusionPixelsFraction: Number
    open var bPauseOnLossOfFocus: Boolean
    open var MaxParticleResize: Number
    open var MaxParticleResizeWarn: Number
    open var PendingDroppedNotes: Array<DropNoteInfo>
    open var NetClientTicksPerSecond: Number
    open var DisplayGamma: Number
    open var MinDesiredFrameRate: Number
    open var DefaultSelectedMaterialColor: LinearColor
    open var SelectedMaterialColor: LinearColor
    open var SelectionOutlineColor: LinearColor
    open var SubduedSelectionOutlineColor: LinearColor
    open var SelectedMaterialColorOverride: LinearColor
    open var bIsOverridingSelectedColor: Boolean
    open var bEnableOnScreenDebugMessages: Boolean
    open var bEnableOnScreenDebugMessagesDisplay: Boolean
    open var bSuppressMapWarnings: Boolean
    open var bDisableAILogging: Boolean
    open var bEnableVisualLogRecordingOnStart: Any
    open var ScreenSaverInhibitorSemaphore: Number
    open var bLockReadOnlyLevels: Boolean
    open var ParticleEventManagerClassPath: String
    open var SelectionHighlightIntensity: Number
    open var BSPSelectionHighlightIntensity: Number
    open var SelectionHighlightIntensityBillboards: Number
    open var NetDriverDefinitions: Array<NetDriverDefinition>
    open var ServerActors: Array<String>
    open var RuntimeServerActors: Array<String>
    open var NetErrorLogInterval: Number
    open var bStartedLoadMapMovie: Boolean
    open var NextWorldContextHandle: Number
    open fun GetEditorWorld(): World
    open fun GetPIEWorld(): World
    open fun HasUndo(): Boolean
    open fun SetClientTravel(InWorld: World, NextURL: String, InTravelType: String /* "TRAVEL_Absolute" | "TRAVEL_Partial" | "TRAVEL_Relative" | "TRAVEL_MAX" */)

    companion object {
        fun Load(ResourceName: String): Engine
        fun Find(Outer: UObject, ResourceName: String): Engine
        fun GetDefaultObject(): Engine
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Engine
        fun C(Other: UObject): Engine
        fun C(Other: Any): Engine
        fun GetEditorWorld(Engine: Engine): World
        fun GetPIEWorld(Engine: Engine): World
        fun HasUndo(Engine: Engine): Boolean
        fun SetClientTravel(Engine: Engine, InWorld: World, NextURL: String, InTravelType: String /* "TRAVEL_Absolute" | "TRAVEL_Partial" | "TRAVEL_Relative" | "TRAVEL_MAX" */)
    }
}

external open class JavascriptTransaction {
    open fun clone(): JavascriptTransaction
    open fun GetContext(): String
    open fun GetPrimaryObject(): UObject
    open fun GetTitle(): String

    companion object {
        fun C(Other: UObject): JavascriptTransaction
        fun C(Other: Any): JavascriptTransaction
        fun GetContext(Transaction: JavascriptTransaction): String
        fun GetPrimaryObject(Transaction: JavascriptTransaction): UObject
        fun GetTitle(Transaction: JavascriptTransaction): String
    }
}

external open class Transactor : UObject {
    constructor()
    constructor(Outer: UObject)
    open fun GetQueueLength(): Number
    open fun GetTransaction(QueueIndex: Number): JavascriptTransaction
    open fun IsActive(): Boolean

    companion object {
        fun Load(ResourceName: String): Transactor
        fun Find(Outer: UObject, ResourceName: String): Transactor
        fun GetDefaultObject(): Transactor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Transactor
        fun C(Other: UObject): Transactor
        fun C(Other: Any): Transactor
        fun GetQueueLength(Transactor: Transactor): Number
        fun GetTransaction(Transactor: Transactor, QueueIndex: Number): JavascriptTransaction
        fun IsActive(Transactor: Transactor): Boolean
    }
}

external open class EditorWorldExtensionCollection : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EditorWorldExtensionCollection
        fun Find(Outer: UObject, ResourceName: String): EditorWorldExtensionCollection
        fun GetDefaultObject(): EditorWorldExtensionCollection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorWorldExtensionCollection
        fun C(Other: UObject): EditorWorldExtensionCollection
        fun C(Other: Any): EditorWorldExtensionCollection
    }
}

external open class EditorWorldExtensionManager : UObject {
    constructor()
    constructor(Outer: UObject)
    open var EditorWorldExtensionCollection: Array<EditorWorldExtensionCollection>

    companion object {
        fun Load(ResourceName: String): EditorWorldExtensionManager
        fun Find(Outer: UObject, ResourceName: String): EditorWorldExtensionManager
        fun GetDefaultObject(): EditorWorldExtensionManager
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorWorldExtensionManager
        fun C(Other: UObject): EditorWorldExtensionManager
        fun C(Other: Any): EditorWorldExtensionManager
    }
}

external open class LevelEditorDragDropHandler : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LevelEditorDragDropHandler
        fun Find(Outer: UObject, ResourceName: String): LevelEditorDragDropHandler
        fun GetDefaultObject(): LevelEditorDragDropHandler
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelEditorDragDropHandler
        fun C(Other: UObject): LevelEditorDragDropHandler
        fun C(Other: Any): LevelEditorDragDropHandler
    }
}

external object ECsgOper {
    var CSG_Active: String /* "CSG_Active" */
    var CSG_Add: String /* "CSG_Add" */
    var CSG_Subtract: String /* "CSG_Subtract" */
    var CSG_Intersect: String /* "CSG_Intersect" */
    var CSG_Deintersect: String /* "CSG_Deintersect" */
    var CSG_None: String /* "CSG_None" */
    var CSG_MAX: String /* "CSG_MAX" */
}

external interface `T$655` {
    var Out: Array<UObject>
    var `$`: Number
}

external interface `T$656` {
    var Out: Array<UObject>
    var `$`: Number
}

external open class USelection : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ElementSelectionSet: TypedElementSelectionSet
    open fun Deselect(InObject: UObject)
    open fun DeselectAll(InClass: UnrealEngineClass)
    open fun GetSelectedObjects(Out: Array<UObject> = definedExternally): `T$655`
    open fun Select(InObject: UObject)
    open fun ToggleSelect(InObject: UObject)

    companion object {
        fun Load(ResourceName: String): USelection
        fun Find(Outer: UObject, ResourceName: String): USelection
        fun GetDefaultObject(): USelection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): USelection
        fun C(Other: UObject): USelection
        fun C(Other: Any): USelection
        fun Deselect(USelection: USelection, InObject: UObject)
        fun DeselectAll(USelection: USelection, InClass: UnrealEngineClass)
        fun GetSelectedObjects(USelection: USelection, Out: Array<UObject> = definedExternally): `T$656`
        fun Select(USelection: USelection, InObject: UObject)
        fun ToggleSelect(USelection: USelection, InObject: UObject)
    }
}

external interface `T$657` {
    var Out: String
    var `$`: Boolean
}

external open class EditorEngine : Engine {
    constructor()
    constructor(Outer: UObject)
    open var TempModel: Model
    open var ConversionTempModel: Model
    open var Trans: Transactor
    open var Bad: Texture2D
    open var EditorFont: Font
    open var PreviewSoundCue: SoundCue
    open var PreviewAudioComponent: AudioComponent
    open var EditorCube: StaticMesh
    open var EditorSphere: StaticMesh
    open var EditorPlane: StaticMesh
    open var EditorCylinder: StaticMesh
    open var bFastRebuild: Boolean
    open var IsImportingT3D: Boolean
    open var ClickFlags: Any
    open var ParentContext: Package
    open var UnsnappedClickLocation: Vector
    open var ClickLocation: Vector
    open var ClickPlane: Plane
    open var MouseMovement: Vector
    open var DetailMode: String /* "DM_Low" | "DM_Medium" | "DM_High" | "DM_MAX" */
    open var UseSizingBox: Boolean
    open var UseAxisIndicator: Boolean
    open var GodMode: Boolean
    open var GameCommandLine: String
    open var bShowBrushMarkerPolys: Boolean
    open var bEnableSocketSnapping: Boolean
    open var bEnableLODLocking: Boolean
    open var HeightMapExportClassName: String
    open var ActorFactories: Array<ActorFactory>
    open var UserOpenedFile: String
    open var InEditorGameURLOptions: String
    open var PlayWorld: World
    open var bIsToggleBetweenPIEandSIEQueued: Boolean
    open var bAllowMultiplePIEWorlds: Boolean
    open var bRequestEndPlayMapQueued: Boolean
    open var bSquelchTransactionNotification: Boolean
    open var bNotifyUndoRedoSelectionChange: Boolean
    open var PlayFromHerePlayerStartClass: UnrealEngineClass
    open var EditorWorld: World
    open var ActorsThatWereSelected: Array<Any>
    open var PlayWorldDestination: Number
    open var CurrentPlayWorldDestination: Number
    open var bMobilePreviewPortrait: Boolean
    open var BuildPlayDevice: Number
    open var UserEditedPlayWorldURL: String
    open var ScratchRenderTarget2048: TextureRenderTarget2D
    open var ScratchRenderTarget1024: TextureRenderTarget2D
    open var ScratchRenderTarget512: TextureRenderTarget2D
    open var ScratchRenderTarget256: TextureRenderTarget2D
    open var PreviewMeshComp: StaticMeshComponent
    open var PreviewMeshIndex: Number
    open var bShowPreviewMesh: Boolean
    open var bCustomCameraAlignEmitter: Boolean
    open var CustomCameraAlignEmitterDistance: Number
    open var bDrawSocketsInGMode: Boolean
    open var bDrawParticleHelpers: Boolean
    open var BrushBuilders: Array<BrushBuilder>
    open var EditorWorldExtensionsManager: EditorWorldExtensionManager
    open var DragDropHandler: LevelEditorDragDropHandler
    open var ActorGroupingUtilsClassName: SoftClassPath
    open var ActorGroupingUtils: ActorGroupingUtils
    open var PlayWorldLocation: Vector
    open var PlayWorldRotation: Rotator
    open var bIsPlayWorldQueued: Boolean
    open var bIsSimulateInEditorQueued: Boolean
    open var bHasPlayWorldPlacement: Boolean
    open var bUseMobilePreviewForPlayWorld: Boolean
    open var bUseVRPreviewForPlayWorld: Boolean
    open var bIsSimulatingInEditor: Boolean
    open var PlayInEditorViewportIndex: Number
    open fun bspBrushCSG(Actor: Brush, Model: Model, PolyFlags: Number, BrushType: String /* "Brush_Default" | "Brush_Add" | "Brush_Subtract" | "Brush_MAX" */, CSGOper: String /* "CSG_Active" | "CSG_Add" | "CSG_Subtract" | "CSG_Intersect" | "CSG_Deintersect" | "CSG_None" | "CSG_MAX" */, bBuildBounds: Boolean, bMergePolys: Boolean, bReplaceNULLMaterialRefs: Boolean, bShowProgressBar: Boolean): Number
    open fun CanSelectActor(Actor: Actor, bInSelected: Boolean, bSelectEvenIfHidden: Boolean, bWarnIfLevelLocked: Boolean): Boolean
    open fun Exec(InWorld: World, Command: String, Out: String = definedExternally): `T$657`
    open fun FindBrushBuilder(BrushBuilderClass: UnrealEngineClass): BrushBuilder
    open fun GetSelectedActors(): USelection
    open fun GetSelectedComponents(): USelection
    open fun GetSelectedObjects(): USelection
    open fun GetSelectedSet(Class: UnrealEngineClass): USelection
    open fun RebuildLevel(Level: Level)
    open fun RebuildStaticNavigableGeometry(Level: Level)
    open fun RedrawAllViewports(bInvalidateHitProxies: Boolean)
    open fun SelectActor(Actor: Actor, bInSelected: Boolean, bNotify: Boolean, bSelectEvenIfHidden: Boolean, bForceRefresh: Boolean)
    open fun SelectComponent(Component: ActorComponent, bInSelected: Boolean, bNotify: Boolean, bSelectEvenIfHidden: Boolean)
    open fun SelectGroup(InGroupActor: GroupActor, bForceSelection: Boolean, bInSelected: Boolean, bNotify: Boolean)
    open fun SelectNone(bNoteSelectionChange: Boolean, bDeselectBSPSurfs: Boolean, WarnAboutManyActors: Boolean)
    open fun SetMaterial(InModel: Model, Material: MaterialInterface, Surfaces: Array<Number>)

    companion object {
        fun Load(ResourceName: String): EditorEngine
        fun Find(Outer: UObject, ResourceName: String): EditorEngine
        fun GetDefaultObject(): EditorEngine
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorEngine
        fun C(Other: UObject): EditorEngine
        fun C(Other: Any): EditorEngine
        fun bspBrushCSG(Engine: EditorEngine, Actor: Brush, Model: Model, PolyFlags: Number, BrushType: String /* "Brush_Default" | "Brush_Add" | "Brush_Subtract" | "Brush_MAX" */, CSGOper: String /* "CSG_Active" | "CSG_Add" | "CSG_Subtract" | "CSG_Intersect" | "CSG_Deintersect" | "CSG_None" | "CSG_MAX" */, bBuildBounds: Boolean, bMergePolys: Boolean, bReplaceNULLMaterialRefs: Boolean, bShowProgressBar: Boolean): Number
        fun CanSelectActor(Engine: EditorEngine, Actor: Actor, bInSelected: Boolean, bSelectEvenIfHidden: Boolean, bWarnIfLevelLocked: Boolean): Boolean
        fun Exec(Engine: EditorEngine, InWorld: World, Command: String, Out: String = definedExternally): `T$657`
        fun FindBrushBuilder(Engine: EditorEngine, BrushBuilderClass: UnrealEngineClass): BrushBuilder
        fun GetSelectedActors(Engine: EditorEngine): USelection
        fun GetSelectedComponents(Engine: EditorEngine): USelection
        fun GetSelectedObjects(Engine: EditorEngine): USelection
        fun GetSelectedSet(Engine: EditorEngine, Class: UnrealEngineClass): USelection
        fun RebuildLevel(Engine: EditorEngine, Level: Level)
        fun RebuildStaticNavigableGeometry(Engine: EditorEngine, Level: Level)
        fun RedrawAllViewports(Engine: EditorEngine, bInvalidateHitProxies: Boolean)
        fun SelectActor(Engine: EditorEngine, Actor: Actor, bInSelected: Boolean, bNotify: Boolean, bSelectEvenIfHidden: Boolean, bForceRefresh: Boolean)
        fun SelectComponent(Engine: EditorEngine, Component: ActorComponent, bInSelected: Boolean, bNotify: Boolean, bSelectEvenIfHidden: Boolean)
        fun SelectGroup(Engine: EditorEngine, InGroupActor: GroupActor, bForceSelection: Boolean, bInSelected: Boolean, bNotify: Boolean)
        fun SelectNone(Engine: EditorEngine, bNoteSelectionChange: Boolean, bDeselectBSPSurfs: Boolean, WarnAboutManyActors: Boolean)
        fun SetMaterial(Engine: EditorEngine, InModel: Model, Material: MaterialInterface, Surfaces: Array<Number>)
    }
}

external object EConsoleForGamepadLabels {
    var None: String /* "None" */
    var XBoxOne: String /* "XBoxOne" */
    var PS4: String /* "PS4" */
    var EConsoleForGamepadLabels_MAX: String /* "EConsoleForGamepadLabels_MAX" */
}

external open class EditorExperimentalSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bEnableAsyncTextureCompilation: Boolean
    open var bEnableAsyncStaticMeshCompilation: Boolean
    open var bEnableAsyncSkeletalMeshCompilation: Boolean
    open var bEnableInterchangeFramework: Boolean
    open var bEnableInterchangeFrameworkForTextureOnly: Boolean
    open var bHDREditor: Boolean
    open var HDREditorNITLevel: Number
    open var bProceduralFoliage: Boolean
    open var bEnableTranslationPicker: Boolean
    open var ConsoleForGamepadLabels: String /* "None" | "XBoxOne" | "PS4" | "EConsoleForGamepadLabels_MAX" */
    open var bToolbarCustomization: Boolean
    open var bBreakOnExceptions: Boolean
    open var bDrawMidpointArrowsInBlueprints: Boolean
    open var bContextMenuChunkAssignments: Boolean
    open var bDisableCookInEditor: Boolean
    open var bSharedCookedBuilds: Boolean
    open var MultiProcessCooking: Number
    open var bAllowLateJoinInPIE: Boolean
    open var bAllowVulkanPreview: Boolean
    open var bEnableMultithreadedLightmapEncoding: Boolean
    open var bEnableMultithreadedShadowmapEncoding: Boolean
    open var bUseOpenCLForConvexHullDecomp: Boolean
    open var bAllowPotentiallyUnsafePropertyEditing: Boolean
    open var bFacialAnimationImporter: Boolean
    open var bEnableOneFilePerActorSupport: Boolean
    open var bEnableActorFolderObjectSupport: Boolean
    open var bMobilePIEPreviewDeviceLaunch: Boolean
    open var bTextAssetFormatSupport: Boolean
    open var bExampleLayersAndBlends: Boolean
    open var bEnableLongPathsSupport: Boolean
    open var bPackedLevelActor: Boolean
    open var bLevelInstance: Boolean

    companion object {
        fun Load(ResourceName: String): EditorExperimentalSettings
        fun Find(Outer: UObject, ResourceName: String): EditorExperimentalSettings
        fun GetDefaultObject(): EditorExperimentalSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorExperimentalSettings
        fun C(Other: UObject): EditorExperimentalSettings
        fun C(Other: Any): EditorExperimentalSettings
    }
}

external object ELevelVisibilityDirtyMode {
    var ModifyOnChange: String /* "ModifyOnChange" */
    var DontModify: String /* "DontModify" */
    var ELevelVisibilityDirtyMode_MAX: String /* "ELevelVisibilityDirtyMode_MAX" */
}

external open class EditorLevelUtils : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EditorLevelUtils
        fun Find(Outer: UObject, ResourceName: String): EditorLevelUtils
        fun GetDefaultObject(): EditorLevelUtils
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorLevelUtils
        fun SetLevelVisibility(Level: Level, bShouldBeVisible: Boolean, bForceLayersVisible: Boolean, ModifyMode: String /* "ModifyOnChange" | "DontModify" | "ELevelVisibilityDirtyMode_MAX" */)
        fun SetLevelsVisibility(Levels: Array<Level>, bShouldBeVisible: Array<Boolean>, bForceLayersVisible: Boolean, ModifyMode: String /* "ModifyOnChange" | "DontModify" | "ELevelVisibilityDirtyMode_MAX" */)
        fun MoveSelectedActorsToLevel(DestLevel: LevelStreaming, bWarnAboutReferences: Boolean): Number
        fun MoveActorsToLevel(ActorsToMove: Array<Actor>, DestStreamingLevel: LevelStreaming, bWarnAboutReferences: Boolean, bWarnAboutRenaming: Boolean): Number
        fun MakeLevelCurrent(InStreamingLevel: LevelStreaming)
        fun AddLeveltoWorldwithTransform(World: World, LevelPackageName: String, LevelStreamingClass: UnrealEngineClass, LevelTransform: Transform): LevelStreaming
        fun AddLeveltoWorld(World: World, LevelPackageName: String, LevelStreamingClass: UnrealEngineClass): LevelStreaming
        fun GetLevels(World: World): Array<Level>
        fun CreateNewStreamingLevel(LevelStreamingClass: UnrealEngineClass, NewLevelPath: String, bMoveSelectedActorsIntoNewLevel: Boolean): LevelStreaming
        fun C(Other: UObject): EditorLevelUtils
        fun C(Other: Any): EditorLevelUtils
    }
}

external object ELoadLevelAtStartup {
    var None: String /* "None" */
    var ProjectDefault: String /* "ProjectDefault" */
    var LastOpened: String /* "LastOpened" */
    var ELoadLevelAtStartup_MAX: String /* "ELoadLevelAtStartup_MAX" */
}

external open class AutoReimportWildcard {
    open var wildcard: String
    open var bInclude: Boolean
    open fun clone(): AutoReimportWildcard

    companion object {
        fun C(Other: UObject): AutoReimportWildcard
        fun C(Other: Any): AutoReimportWildcard
    }
}

external open class AutoReimportDirectoryConfig {
    open var SourceDirectory: String
    open var MountPoint: String
    open var Wildcards: Array<AutoReimportWildcard>
    open fun clone(): AutoReimportDirectoryConfig

    companion object {
        fun C(Other: UObject): AutoReimportDirectoryConfig
        fun C(Other: Any): AutoReimportDirectoryConfig
    }
}

external open class EditorLoadingSavingSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var LoadLevelAtStartup: String /* "None" | "ProjectDefault" | "LastOpened" | "ELoadLevelAtStartup_MAX" */
    open var bForceCompilationAtStartup: Boolean
    open var bRestoreOpenAssetTabsOnRestart: Boolean
    open var bEnableSourceControlCompatabilityCheck: Boolean
    open var bMonitorContentDirectories: Boolean
    open var AutoReimportDirectories: Array<String>
    open var AutoReimportDirectorySettings: Array<AutoReimportDirectoryConfig>
    open var AutoReimportThreshold: Number
    open var bAutoCreateAssets: Boolean
    open var bAutoDeleteAssets: Boolean
    open var bDetectChangesOnStartup: Boolean
    open var bPromptBeforeAutoImporting: Boolean
    open var bDeleteSourceFilesWithAssets: Boolean
    open var bAutoReimportTextures: Boolean
    open var bAutoReimportCSV: Boolean
    open var bDirtyMigratedBlueprints: Boolean
    open var bAutoSaveEnable: Boolean
    open var bAutoSaveMaps: Boolean
    open var bAutoSaveContent: Boolean
    open var AutoSaveTimeMinutes: Number
    open var AutoSaveInteractionDelayInSeconds: Number
    open var AutoSaveWarningInSeconds: Number
    open var bAutomaticallyCheckoutOnAssetModification: Boolean
    open var bPromptForCheckoutOnAssetModification: Boolean
    open var bSCCAutoAddNewFiles: Boolean
    open var bSCCUseGlobalSettings: Boolean
    open var TextDiffToolPath: FilePath

    companion object {
        fun Load(ResourceName: String): EditorLoadingSavingSettings
        fun Find(Outer: UObject, ResourceName: String): EditorLoadingSavingSettings
        fun GetDefaultObject(): EditorLoadingSavingSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorLoadingSavingSettings
        fun C(Other: UObject): EditorLoadingSavingSettings
        fun C(Other: Any): EditorLoadingSavingSettings
    }
}

external open class EditorMiscSettings : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EditorMiscSettings
        fun Find(Outer: UObject, ResourceName: String): EditorMiscSettings
        fun GetDefaultObject(): EditorMiscSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorMiscSettings
        fun C(Other: UObject): EditorMiscSettings
        fun C(Other: Any): EditorMiscSettings
    }
}

external open class EditorNotifyObject : EditorAnimBaseObj {
    constructor()
    constructor(Outer: UObject)
    open var Event: AnimNotifyEvent

    companion object {
        fun Load(ResourceName: String): EditorNotifyObject
        fun Find(Outer: UObject, ResourceName: String): EditorNotifyObject
        fun GetDefaultObject(): EditorNotifyObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorNotifyObject
        fun C(Other: UObject): EditorNotifyObject
        fun C(Other: Any): EditorNotifyObject
    }
}

external open class EditorParentPlayerListObj : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Overrides: Array<AnimParentNodeAssetOverride>

    companion object {
        fun Load(ResourceName: String): EditorParentPlayerListObj
        fun Find(Outer: UObject, ResourceName: String): EditorParentPlayerListObj
        fun GetDefaultObject(): EditorParentPlayerListObj
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorParentPlayerListObj
        fun C(Other: UObject): EditorParentPlayerListObj
        fun C(Other: Any): EditorParentPlayerListObj
    }
}

external object EEditorUserScreenPercentageModeOverride {
    var ProjectDefault: String /* "ProjectDefault" */
    var Manual: String /* "Manual" */
    var BasedOnDisplayResolution: String /* "BasedOnDisplayResolution" */
    var BasedOnDPIScale: String /* "BasedOnDPIScale" */
    var EEditorUserScreenPercentageModeOverride_MAX: String /* "EEditorUserScreenPercentageModeOverride_MAX" */
}

external open class EditorPerformanceSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var bShowFrameRateAndMemory: Boolean
    open var bThrottleCPUWhenNotForeground: Boolean
    open var bDisableRealtimeViewportsInRemoteSessions: Boolean
    open var bMonitorEditorPerformance: Boolean
    open var bEnableSharedDDCPerformanceNotifications: Boolean
    open var bEnableScalabilityWarningIndicator: Boolean
    open var bDisplayHighDPIViewports: Boolean
    open var bOverridePIEScreenPercentage: Boolean
    open var RealtimeScreenPercentageMode: String /* "ProjectDefault" | "Manual" | "BasedOnDisplayResolution" | "BasedOnDPIScale" | "EEditorUserScreenPercentageModeOverride_MAX" */
    open var NonRealtimeScreenPercentageMode: String /* "ProjectDefault" | "Manual" | "BasedOnDisplayResolution" | "BasedOnDPIScale" | "EEditorUserScreenPercentageModeOverride_MAX" */
    open var bOverrideManualScreenPercentage: Boolean
    open var ManualScreenPercentage: Number
    open var bOverrideMinViewportRenderingResolution: Boolean
    open var MinViewportRenderingResolution: Number
    open var bOverrideMaxViewportRenderingResolution: Boolean
    open var MaxViewportRenderingResolution: Number

    companion object {
        fun Load(ResourceName: String): EditorPerformanceSettings
        fun Find(Outer: UObject, ResourceName: String): EditorPerformanceSettings
        fun GetDefaultObject(): EditorPerformanceSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorPerformanceSettings
        fun C(Other: UObject): EditorPerformanceSettings
        fun C(Other: Any): EditorPerformanceSettings
    }
}

external open class EditorPerProjectUserSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bDisplayUIExtensionPoints: Boolean
    open var bDisplayDocumentationLink: Boolean
    open var bDisplayActionListItemRefIds: Boolean
    open var bAlwaysGatherBehaviorTreeDebuggerData: Boolean
    open var bDisplayBlackboardKeysInAlphabeticalOrder: Boolean
    open var bDisplayEngineVersionInBadge: Boolean
    open var bUseSimplygonSwarm: Boolean
    open var SimplygonServerIP: String
    open var bEnableSwarmDebugging: Boolean
    open var SimplygonSwarmDelay: Any
    open var SwarmNumOfConcurrentJobs: Any
    open var SwarmMaxUploadChunkSizeInMB: Any
    open var SwarmIntermediateFolder: String
    open var bAutomaticallyHotReloadNewClasses: Boolean
    open var bShowCompilerLogOnCompileError: Boolean
    open var bKeepFbxNamespace: Boolean
    open var bShowImportDialogAtReimport: Boolean
    open var DataSourceFolder: DirectoryPath
    open var bKeepAttachHierarchy: Boolean
    open var bAnimationReimportWarnings: Boolean
    open var bUseCurvesForDistributions: Boolean
    open var PropertyMatrix_NumberOfPasteOperationsBeforeWarning: Number
    open var bSCSEditorShowGrid: Boolean
    open var bSCSEditorShowFloor: Boolean
    open var bGetAttentionOnUATCompletion: Boolean
    open var bAlwaysBuildUAT: Boolean
    open var SCSViewportCameraSpeed: Number
    open var bAutoloadCheckedOutPackages: Boolean
    open var bSuppressFullyLoadPrompt: Boolean
    open var bAllowSelectTranslucent: Boolean
    open var BlueprintFavorites: BlueprintPaletteFavorites
    open var AssetViewerProfileIndex: Number
    open var AssetViewerProfileName: String
    open var PreviewFeatureLevel: Number
    open var PreviewPlatformName: String
    open var PreviewShaderFormatName: String
    open var bPreviewFeatureLevelActive: Boolean
    open var bPreviewFeatureLevelWasDefault: Boolean
    open var PreviewDeviceProfileName: String

    companion object {
        fun Load(ResourceName: String): EditorPerProjectUserSettings
        fun Find(Outer: UObject, ResourceName: String): EditorPerProjectUserSettings
        fun GetDefaultObject(): EditorPerProjectUserSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorPerProjectUserSettings
        fun C(Other: UObject): EditorPerProjectUserSettings
        fun C(Other: Any): EditorPerProjectUserSettings
    }
}

external open class ISMComponentDescriptor {
    open var Hash: Any
    open var ComponentClass: UnrealEngineClass
    open var StaticMesh: StaticMesh
    open var OverrideMaterials: Array<MaterialInterface>
    open var RuntimeVirtualTextures: Array<RuntimeVirtualTexture>
    open var Mobility: String /* "Static" | "Stationary" | "Movable" | "EComponentMobility_MAX" */
    open var VirtualTextureRenderPassType: String /* "Never" | "Exclusive" | "Always" | "ERuntimeVirtualTextureMainPassType_MAX" */
    open var LightmapType: String /* "Default" | "ForceSurface" | "ForceVolumetric" | "ELightmapType_MAX" */
    open var LightingChannels: LightingChannels
    open var RayTracingGroupId: Number
    open var RayTracingGroupCullingPriority: String /* "CP_0_NEVER_CULL" | "CP_1" | "CP_2" | "CP_3" | "CP_4_DEFAULT" | "CP_5" | "CP_6" | "CP_7" | "CP_8_QUICKLY_CULL" | "CP_MAX" */
    open var bHasCustomNavigableGeometry: String /* "No" | "Yes" | "EvenIfNotCollidable" | "DontExport" | "EHasCustomNavigableGeometry_MAX" */
    open var CustomDepthStencilWriteMask: String /* "ERSM_Default" | "ERSM_255" | "ERSM_1" | "ERSM_2" | "ERSM_4" | "ERSM_8" | "ERSM_16" | "ERSM_32" | "ERSM_64" | "ERSM_128" | "ERSM_MAX" */
    open var BodyInstance: BodyInstance
    open var InstanceStartCullDistance: Number
    open var InstanceEndCullDistance: Number
    open var VirtualTextureCullMips: Number
    open var TranslucencySortPriority: Number
    open var OverriddenLightMapRes: Number
    open var CustomDepthStencilValue: Number
    open var HLODBatchingPolicy: String /* "None" | "MeshSection" | "Instancing" | "EHLODBatchingPolicy_MAX" */
    open var bCastShadow: Boolean
    open var bCastDynamicShadow: Boolean
    open var bCastStaticShadow: Boolean
    open var bCastContactShadow: Boolean
    open var bCastShadowAsTwoSided: Boolean
    open var bAffectDynamicIndirectLighting: Boolean
    open var bAffectDistanceFieldLighting: Boolean
    open var bReceivesDecals: Boolean
    open var bOverrideLightMapRes: Boolean
    open var bUseAsOccluder: Boolean
    open var bEnableDensityScaling: Boolean
    open var bEnableDiscardOnLoad: Boolean
    open var bRenderCustomDepth: Boolean
    open var bIncludeInHLOD: Boolean
    open var bVisibleInRayTracing: Boolean
    open var bHiddenInGame: Boolean
    open var bIsEditorOnly: Boolean
    open var bVisible: Boolean
    open var bConsiderForActorPlacementWhenHidden: Boolean
    open fun clone(): ISMComponentDescriptor

    companion object {
        fun C(Other: UObject): ISMComponentDescriptor
        fun C(Other: Any): ISMComponentDescriptor
    }
}

external open class InstancedPlacemenClientSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var UpdateGuid: Guid
    open var ObjectPath: SoftObjectPath
    open var InstancedComponentSettings: ISMComponentDescriptor

    companion object {
        fun Load(ResourceName: String): InstancedPlacemenClientSettings
        fun Find(Outer: UObject, ResourceName: String): InstancedPlacemenClientSettings
        fun GetDefaultObject(): InstancedPlacemenClientSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InstancedPlacemenClientSettings
        fun C(Other: UObject): InstancedPlacemenClientSettings
        fun C(Other: Any): InstancedPlacemenClientSettings
    }
}

external open class EditorInstancedPlacementSettings : InstancedPlacemenClientSettings {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EditorInstancedPlacementSettings
        fun Find(Outer: UObject, ResourceName: String): EditorInstancedPlacementSettings
        fun GetDefaultObject(): EditorInstancedPlacementSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorInstancedPlacementSettings
        fun C(Other: UObject): EditorInstancedPlacementSettings
        fun C(Other: Any): EditorInstancedPlacementSettings
    }
}

external object EUnit {
    var Micrometers: String /* "Micrometers" */
    var Millimeters: String /* "Millimeters" */
    var Centimeters: String /* "Centimeters" */
    var Meters: String /* "Meters" */
    var Kilometers: String /* "Kilometers" */
    var Inches: String /* "Inches" */
    var Feet: String /* "Feet" */
    var Yards: String /* "Yards" */
    var Miles: String /* "Miles" */
    var Lightyears: String /* "Lightyears" */
    var Degrees: String /* "Degrees" */
    var Radians: String /* "Radians" */
    var CentimetersPerSecond: String /* "CentimetersPerSecond" */
    var MetersPerSecond: String /* "MetersPerSecond" */
    var KilometersPerHour: String /* "KilometersPerHour" */
    var MilesPerHour: String /* "MilesPerHour" */
    var Celsius: String /* "Celsius" */
    var Farenheit: String /* "Farenheit" */
    var Kelvin: String /* "Kelvin" */
    var Micrograms: String /* "Micrograms" */
    var Milligrams: String /* "Milligrams" */
    var Grams: String /* "Grams" */
    var Kilograms: String /* "Kilograms" */
    var MetricTons: String /* "MetricTons" */
    var Ounces: String /* "Ounces" */
    var Pounds: String /* "Pounds" */
    var Stones: String /* "Stones" */
    var Newtons: String /* "Newtons" */
    var PoundsForce: String /* "PoundsForce" */
    var KilogramsForce: String /* "KilogramsForce" */
    var Hertz: String /* "Hertz" */
    var Kilohertz: String /* "Kilohertz" */
    var Megahertz: String /* "Megahertz" */
    var Gigahertz: String /* "Gigahertz" */
    var RevolutionsPerMinute: String /* "RevolutionsPerMinute" */
    var Bytes: String /* "Bytes" */
    var Kilobytes: String /* "Kilobytes" */
    var Megabytes: String /* "Megabytes" */
    var Gigabytes: String /* "Gigabytes" */
    var Terabytes: String /* "Terabytes" */
    var Lumens: String /* "Lumens" */
    var Milliseconds: String /* "Milliseconds" */
    var Seconds: String /* "Seconds" */
    var Minutes: String /* "Minutes" */
    var Hours: String /* "Hours" */
    var Days: String /* "Days" */
    var Months: String /* "Months" */
    var Years: String /* "Years" */
    var Multiplier: String /* "Multiplier" */
    var Percentage: String /* "Percentage" */
    var Unspecified: String /* "Unspecified" */
    var EUnit_MAX: String /* "EUnit_MAX" */
}

external object EReferenceViewerSettingMode {
    var NoPreference: String /* "NoPreference" */
    var ShowByDefault: String /* "ShowByDefault" */
    var HideByDefault: String /* "HideByDefault" */
    var EReferenceViewerSettingMode_MAX: String /* "EReferenceViewerSettingMode_MAX" */
}

external object EUnitDisplay {
    var None: String /* "None" */
    var Metric: String /* "Metric" */
    var Imperial: String /* "Imperial" */
    var Invalid: String /* "Invalid" */
    var EUnitDisplay_MAX: String /* "EUnitDisplay_MAX" */
}

external object EDefaultLocationUnit {
    var Micrometers: String /* "Micrometers" */
    var Millimeters: String /* "Millimeters" */
    var Centimeters: String /* "Centimeters" */
    var Meters: String /* "Meters" */
    var Kilometers: String /* "Kilometers" */
    var Inches: String /* "Inches" */
    var Feet: String /* "Feet" */
    var Yards: String /* "Yards" */
    var Miles: String /* "Miles" */
    var Invalid: String /* "Invalid" */
    var EDefaultLocationUnit_MAX: String /* "EDefaultLocationUnit_MAX" */
}

external open class EditorProjectAppearanceSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var bDisplayUnits: Boolean
    open var bDisplayUnitsOnComponentTransforms: Boolean
    open var DistanceUnits: Array<String /* "Micrometers" | "Millimeters" | "Centimeters" | "Meters" | "Kilometers" | "Inches" | "Feet" | "Yards" | "Miles" | "Lightyears" | "Degrees" | "Radians" | "CentimetersPerSecond" | "MetersPerSecond" | "KilometersPerHour" | "MilesPerHour" | "Celsius" | "Farenheit" | "Kelvin" | "Micrograms" | "Milligrams" | "Grams" | "Kilograms" | "MetricTons" | "Ounces" | "Pounds" | "Stones" | "Newtons" | "PoundsForce" | "KilogramsForce" | "Hertz" | "Kilohertz" | "Megahertz" | "Gigahertz" | "RevolutionsPerMinute" | "Bytes" | "Kilobytes" | "Megabytes" | "Gigabytes" | "Terabytes" | "Lumens" | "Milliseconds" | "Seconds" | "Minutes" | "Hours" | "Days" | "Months" | "Years" | "Multiplier" | "Percentage" | "Unspecified" | "EUnit_MAX" */>
    open var MassUnits: Array<String /* "Micrometers" | "Millimeters" | "Centimeters" | "Meters" | "Kilometers" | "Inches" | "Feet" | "Yards" | "Miles" | "Lightyears" | "Degrees" | "Radians" | "CentimetersPerSecond" | "MetersPerSecond" | "KilometersPerHour" | "MilesPerHour" | "Celsius" | "Farenheit" | "Kelvin" | "Micrograms" | "Milligrams" | "Grams" | "Kilograms" | "MetricTons" | "Ounces" | "Pounds" | "Stones" | "Newtons" | "PoundsForce" | "KilogramsForce" | "Hertz" | "Kilohertz" | "Megahertz" | "Gigahertz" | "RevolutionsPerMinute" | "Bytes" | "Kilobytes" | "Megabytes" | "Gigabytes" | "Terabytes" | "Lumens" | "Milliseconds" | "Seconds" | "Minutes" | "Hours" | "Days" | "Months" | "Years" | "Multiplier" | "Percentage" | "Unspecified" | "EUnit_MAX" */>
    open var TimeUnits: Array<String /* "Micrometers" | "Millimeters" | "Centimeters" | "Meters" | "Kilometers" | "Inches" | "Feet" | "Yards" | "Miles" | "Lightyears" | "Degrees" | "Radians" | "CentimetersPerSecond" | "MetersPerSecond" | "KilometersPerHour" | "MilesPerHour" | "Celsius" | "Farenheit" | "Kelvin" | "Micrograms" | "Milligrams" | "Grams" | "Kilograms" | "MetricTons" | "Ounces" | "Pounds" | "Stones" | "Newtons" | "PoundsForce" | "KilogramsForce" | "Hertz" | "Kilohertz" | "Megahertz" | "Gigahertz" | "RevolutionsPerMinute" | "Bytes" | "Kilobytes" | "Megabytes" | "Gigabytes" | "Terabytes" | "Lumens" | "Milliseconds" | "Seconds" | "Minutes" | "Hours" | "Days" | "Months" | "Years" | "Multiplier" | "Percentage" | "Unspecified" | "EUnit_MAX" */>
    open var AngleUnits: String /* "Micrometers" | "Millimeters" | "Centimeters" | "Meters" | "Kilometers" | "Inches" | "Feet" | "Yards" | "Miles" | "Lightyears" | "Degrees" | "Radians" | "CentimetersPerSecond" | "MetersPerSecond" | "KilometersPerHour" | "MilesPerHour" | "Celsius" | "Farenheit" | "Kelvin" | "Micrograms" | "Milligrams" | "Grams" | "Kilograms" | "MetricTons" | "Ounces" | "Pounds" | "Stones" | "Newtons" | "PoundsForce" | "KilogramsForce" | "Hertz" | "Kilohertz" | "Megahertz" | "Gigahertz" | "RevolutionsPerMinute" | "Bytes" | "Kilobytes" | "Megabytes" | "Gigabytes" | "Terabytes" | "Lumens" | "Milliseconds" | "Seconds" | "Minutes" | "Hours" | "Days" | "Months" | "Years" | "Multiplier" | "Percentage" | "Unspecified" | "EUnit_MAX" */
    open var SpeedUnits: String /* "Micrometers" | "Millimeters" | "Centimeters" | "Meters" | "Kilometers" | "Inches" | "Feet" | "Yards" | "Miles" | "Lightyears" | "Degrees" | "Radians" | "CentimetersPerSecond" | "MetersPerSecond" | "KilometersPerHour" | "MilesPerHour" | "Celsius" | "Farenheit" | "Kelvin" | "Micrograms" | "Milligrams" | "Grams" | "Kilograms" | "MetricTons" | "Ounces" | "Pounds" | "Stones" | "Newtons" | "PoundsForce" | "KilogramsForce" | "Hertz" | "Kilohertz" | "Megahertz" | "Gigahertz" | "RevolutionsPerMinute" | "Bytes" | "Kilobytes" | "Megabytes" | "Gigabytes" | "Terabytes" | "Lumens" | "Milliseconds" | "Seconds" | "Minutes" | "Hours" | "Days" | "Months" | "Years" | "Multiplier" | "Percentage" | "Unspecified" | "EUnit_MAX" */
    open var TemperatureUnits: String /* "Micrometers" | "Millimeters" | "Centimeters" | "Meters" | "Kilometers" | "Inches" | "Feet" | "Yards" | "Miles" | "Lightyears" | "Degrees" | "Radians" | "CentimetersPerSecond" | "MetersPerSecond" | "KilometersPerHour" | "MilesPerHour" | "Celsius" | "Farenheit" | "Kelvin" | "Micrograms" | "Milligrams" | "Grams" | "Kilograms" | "MetricTons" | "Ounces" | "Pounds" | "Stones" | "Newtons" | "PoundsForce" | "KilogramsForce" | "Hertz" | "Kilohertz" | "Megahertz" | "Gigahertz" | "RevolutionsPerMinute" | "Bytes" | "Kilobytes" | "Megabytes" | "Gigabytes" | "Terabytes" | "Lumens" | "Milliseconds" | "Seconds" | "Minutes" | "Hours" | "Days" | "Months" | "Years" | "Multiplier" | "Percentage" | "Unspecified" | "EUnit_MAX" */
    open var ForceUnits: String /* "Micrometers" | "Millimeters" | "Centimeters" | "Meters" | "Kilometers" | "Inches" | "Feet" | "Yards" | "Miles" | "Lightyears" | "Degrees" | "Radians" | "CentimetersPerSecond" | "MetersPerSecond" | "KilometersPerHour" | "MilesPerHour" | "Celsius" | "Farenheit" | "Kelvin" | "Micrograms" | "Milligrams" | "Grams" | "Kilograms" | "MetricTons" | "Ounces" | "Pounds" | "Stones" | "Newtons" | "PoundsForce" | "KilogramsForce" | "Hertz" | "Kilohertz" | "Megahertz" | "Gigahertz" | "RevolutionsPerMinute" | "Bytes" | "Kilobytes" | "Megabytes" | "Gigabytes" | "Terabytes" | "Lumens" | "Milliseconds" | "Seconds" | "Minutes" | "Hours" | "Days" | "Months" | "Years" | "Multiplier" | "Percentage" | "Unspecified" | "EUnit_MAX" */
    open var ShowSearchableNames: String /* "NoPreference" | "ShowByDefault" | "HideByDefault" | "EReferenceViewerSettingMode_MAX" */
    open var ReferenceViewerDefaultMaxSearchBreadth: Number
    open var UnitDisplay: String /* "None" | "Metric" | "Imperial" | "Invalid" | "EUnitDisplay_MAX" */
    open var DefaultInputUnits: String /* "Micrometers" | "Millimeters" | "Centimeters" | "Meters" | "Kilometers" | "Inches" | "Feet" | "Yards" | "Miles" | "Invalid" | "EDefaultLocationUnit_MAX" */

    companion object {
        fun Load(ResourceName: String): EditorProjectAppearanceSettings
        fun Find(Outer: UObject, ResourceName: String): EditorProjectAppearanceSettings
        fun GetDefaultObject(): EditorProjectAppearanceSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorProjectAppearanceSettings
        fun C(Other: UObject): EditorProjectAppearanceSettings
        fun C(Other: Any): EditorProjectAppearanceSettings
    }
}

external object ELevelEditor2DAxis {
    var X: String /* "X" */
    var Y: String /* "Y" */
    var Z: String /* "Z" */
    var ELevelEditor2DAxis_MAX: String /* "ELevelEditor2DAxis_MAX" */
}

external open class Mode2DLayer {
    open var Name: String
    open var Depth: Number
    open fun clone(): Mode2DLayer

    companion object {
        fun C(Other: UObject): Mode2DLayer
        fun C(Other: Any): Mode2DLayer
    }
}

external open class LevelEditor2DSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var bEnable2DWidget: Boolean
    open var bEnableSnapLayers: Boolean
    open var SnapAxis: String /* "X" | "Y" | "Z" | "ELevelEditor2DAxis_MAX" */
    open var SnapLayers: Array<Mode2DLayer>

    companion object {
        fun Load(ResourceName: String): LevelEditor2DSettings
        fun Find(Outer: UObject, ResourceName: String): LevelEditor2DSettings
        fun GetDefaultObject(): LevelEditor2DSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelEditor2DSettings
        fun C(Other: UObject): LevelEditor2DSettings
        fun C(Other: Any): LevelEditor2DSettings
    }
}

external object EScreenPercentageMode {
    var Manual: String /* "Manual" */
    var BasedOnDisplayResolution: String /* "BasedOnDisplayResolution" */
    var BasedOnDPIScale: String /* "BasedOnDPIScale" */
    var EScreenPercentageMode_MAX: String /* "EScreenPercentageMode_MAX" */
}

external open class EditorPerformanceProjectSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var RealtimeScreenPercentageMode: String /* "Manual" | "BasedOnDisplayResolution" | "BasedOnDPIScale" | "EScreenPercentageMode_MAX" */
    open var NonRealtimeScreenPercentageMode: String /* "Manual" | "BasedOnDisplayResolution" | "BasedOnDPIScale" | "EScreenPercentageMode_MAX" */
    open var ManualScreenPercentage: Number
    open var MinViewportRenderingResolution: Number
    open var MaxViewportRenderingResolution: Number

    companion object {
        fun Load(ResourceName: String): EditorPerformanceProjectSettings
        fun Find(Outer: UObject, ResourceName: String): EditorPerformanceProjectSettings
        fun GetDefaultObject(): EditorPerformanceProjectSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorPerformanceProjectSettings
        fun C(Other: UObject): EditorPerformanceProjectSettings
        fun C(Other: Any): EditorPerformanceProjectSettings
    }
}

external open class DDCProjectSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var EnableWarnings: Boolean
    open var RecommendEveryoneSetupAGlobalLocalDDCPath: Boolean
    open var RecommendEveryoneSetupAGlobalSharedDDCPath: Boolean
    open var RecommendEveryoneSetupAGlobalS3DDCPath: Boolean
    open var RecommendEveryoneEnableS3DDC: Boolean
    open var RecommendEveryoneUseHordeStorage: Boolean

    companion object {
        fun Load(ResourceName: String): DDCProjectSettings
        fun Find(Outer: UObject, ResourceName: String): DDCProjectSettings
        fun GetDefaultObject(): DDCProjectSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DDCProjectSettings
        fun C(Other: UObject): DDCProjectSettings
        fun C(Other: Any): DDCProjectSettings
    }
}

external open class RecentProjectFile {
    open var ProjectName: String
    open var LastOpenTime: DateTime
    open fun clone(): RecentProjectFile

    companion object {
        fun C(Other: UObject): RecentProjectFile
        fun C(Other: Any): RecentProjectFile
    }
}

external open class EditorSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var GlobalLocalDDCPath: DirectoryPath
    open var GlobalSharedDDCPath: DirectoryPath
    open var LocalDerivedDataCache: DirectoryPath
    open var SharedDerivedDataCache: DirectoryPath
    open var bEnableDDCNotifications: Boolean
    open var bNotifyUseHordeStorage: Boolean
    open var bNotifySetupDDCPath: Boolean
    open var bNotifyEnableS3DD: Boolean
    open var bEnableS3DDC: Boolean
    open var GlobalS3DDCPath: DirectoryPath
    open var bLoadTheMostRecentlyLoadedProjectAtStartup: Boolean
    open var bEditorAnalyticsEnabled: Boolean
    open var RecentlyOpenedProjectFiles: Array<RecentProjectFile>
    open var CreatedProjectPaths: Array<String>
    open var bCopyStarterContentPreference: Boolean
    open var CompletedSurveys: Array<Guid>
    open var InProgressSurveys: Array<Guid>
    open var AutoScalabilityWorkScaleAmount: Number

    companion object {
        fun Load(ResourceName: String): EditorSettings
        fun Find(Outer: UObject, ResourceName: String): EditorSettings
        fun GetDefaultObject(): EditorSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorSettings
        fun C(Other: UObject): EditorSettings
        fun C(Other: Any): EditorSettings
    }
}

external open class EditorSkeletonNotifyObj : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Name: String

    companion object {
        fun Load(ResourceName: String): EditorSkeletonNotifyObj
        fun Find(Outer: UObject, ResourceName: String): EditorSkeletonNotifyObj
        fun GetDefaultObject(): EditorSkeletonNotifyObj
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorSkeletonNotifyObj
        fun C(Other: UObject): EditorSkeletonNotifyObj
        fun C(Other: Any): EditorSkeletonNotifyObj
    }
}

external open class EditorStaticMeshFactory : ActorFactoryStaticMesh {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EditorStaticMeshFactory
        fun Find(Outer: UObject, ResourceName: String): EditorStaticMeshFactory
        fun GetDefaultObject(): EditorStaticMeshFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorStaticMeshFactory
        fun C(Other: UObject): EditorStaticMeshFactory
        fun C(Other: Any): EditorStaticMeshFactory
    }
}

external open class EditorSubsystemBlueprintLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EditorSubsystemBlueprintLibrary
        fun Find(Outer: UObject, ResourceName: String): EditorSubsystemBlueprintLibrary
        fun GetDefaultObject(): EditorSubsystemBlueprintLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorSubsystemBlueprintLibrary
        fun GetEditorSubsystem(Class: UnrealEngineClass): EditorSubsystem
        fun C(Other: UObject): EditorSubsystemBlueprintLibrary
        fun C(Other: Any): EditorSubsystemBlueprintLibrary
    }
}

external open class EnumFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EnumFactory
        fun Find(Outer: UObject, ResourceName: String): EnumFactory
        fun GetDefaultObject(): EnumFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnumFactory
        fun C(Other: UObject): EnumFactory
        fun C(Other: Any): EnumFactory
    }
}

external open class GatherTextCommandletBase : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GatherTextCommandletBase
        fun Find(Outer: UObject, ResourceName: String): GatherTextCommandletBase
        fun GetDefaultObject(): GatherTextCommandletBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GatherTextCommandletBase
        fun C(Other: UObject): GatherTextCommandletBase
        fun C(Other: Any): GatherTextCommandletBase
    }
}

external open class ExportDialogueScriptCommandlet : GatherTextCommandletBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ExportDialogueScriptCommandlet
        fun Find(Outer: UObject, ResourceName: String): ExportDialogueScriptCommandlet
        fun GetDefaultObject(): ExportDialogueScriptCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ExportDialogueScriptCommandlet
        fun C(Other: UObject): ExportDialogueScriptCommandlet
        fun C(Other: Any): ExportDialogueScriptCommandlet
    }
}

external open class ExportPakDependenciesCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ExportPakDependenciesCommandlet
        fun Find(Outer: UObject, ResourceName: String): ExportPakDependenciesCommandlet
        fun GetDefaultObject(): ExportPakDependenciesCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ExportPakDependenciesCommandlet
        fun C(Other: UObject): ExportPakDependenciesCommandlet
        fun C(Other: Any): ExportPakDependenciesCommandlet
    }
}

external open class ExportTextContainer : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ExportText: String

    companion object {
        fun Load(ResourceName: String): ExportTextContainer
        fun Find(Outer: UObject, ResourceName: String): ExportTextContainer
        fun GetDefaultObject(): ExportTextContainer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ExportTextContainer
        fun C(Other: UObject): ExportTextContainer
        fun C(Other: Any): ExportTextContainer
    }
}

external open class ExternalActorsCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ExternalActorsCommandlet
        fun Find(Outer: UObject, ResourceName: String): ExternalActorsCommandlet
        fun GetDefaultObject(): ExternalActorsCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ExternalActorsCommandlet
        fun C(Other: UObject): ExternalActorsCommandlet
        fun C(Other: Any): ExternalActorsCommandlet
    }
}

external open class ExtractLocResCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ExtractLocResCommandlet
        fun Find(Outer: UObject, ResourceName: String): ExtractLocResCommandlet
        fun GetDefaultObject(): ExtractLocResCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ExtractLocResCommandlet
        fun C(Other: UObject): ExtractLocResCommandlet
        fun C(Other: Any): ExtractLocResCommandlet
    }
}

external open class FbxSceneImportData : UObject {
    constructor()
    constructor(Outer: UObject)
    open var SourceFbxFile: String

    companion object {
        fun Load(ResourceName: String): FbxSceneImportData
        fun Find(Outer: UObject, ResourceName: String): FbxSceneImportData
        fun GetDefaultObject(): FbxSceneImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FbxSceneImportData
        fun C(Other: UObject): FbxSceneImportData
        fun C(Other: Any): FbxSceneImportData
    }
}

external open class FbxAssetImportData : AssetImportData {
    constructor()
    constructor(Outer: UObject)
    open var ImportTranslation: Vector
    open var ImportRotation: Rotator
    open var ImportUniformScale: Number
    open var bConvertScene: Boolean
    open var bForceFrontXAxis: Boolean
    open var bConvertSceneUnit: Boolean
    open var bImportAsScene: Boolean
    open var FbxSceneImportDataReference: FbxSceneImportData

    companion object {
        fun Load(ResourceName: String): FbxAssetImportData
        fun Find(Outer: UObject, ResourceName: String): FbxAssetImportData
        fun GetDefaultObject(): FbxAssetImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FbxAssetImportData
        fun C(Other: UObject): FbxAssetImportData
        fun C(Other: Any): FbxAssetImportData
    }
}

external object EFBXAnimationLengthImportType {
    var FBXALIT_ExportedTime: String /* "FBXALIT_ExportedTime" */
    var FBXALIT_AnimatedKey: String /* "FBXALIT_AnimatedKey" */
    var FBXALIT_SetRange: String /* "FBXALIT_SetRange" */
    var FBXALIT_MAX: String /* "FBXALIT_MAX" */
}

external open class FbxAnimSequenceImportData : FbxAssetImportData {
    constructor()
    constructor(Outer: UObject)
    open var bImportMeshesInBoneHierarchy: Boolean
    open var AnimationLength: String /* "FBXALIT_ExportedTime" | "FBXALIT_AnimatedKey" | "FBXALIT_SetRange" | "FBXALIT_MAX" */
    open var StartFrame: Number
    open var EndFrame: Number
    open var FrameImportRange: Int32Interval
    open var bUseDefaultSampleRate: Boolean
    open var CustomSampleRate: Number
    open var SourceAnimationName: String
    open var bImportCustomAttribute: Boolean
    open var bDeleteExistingCustomAttributeCurves: Boolean
    open var bDeleteExistingNonCurveCustomAttributes: Boolean
    open var bImportBoneTracks: Boolean
    open var bSetMaterialDriveParameterOnCustomAttribute: Boolean
    open var MaterialCurveSuffixes: Array<String>
    open var bRemoveRedundantKeys: Boolean
    open var bDeleteExistingMorphTargetCurves: Boolean
    open var bDoNotImportCurveWithZero: Boolean
    open var bPreserveLocalTransform: Boolean

    companion object {
        fun Load(ResourceName: String): FbxAnimSequenceImportData
        fun Find(Outer: UObject, ResourceName: String): FbxAnimSequenceImportData
        fun GetDefaultObject(): FbxAnimSequenceImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FbxAnimSequenceImportData
        fun C(Other: UObject): FbxAnimSequenceImportData
        fun C(Other: Any): FbxAnimSequenceImportData
    }
}

external object EFBXTestPlanActionType {
    var Import: String /* "Import" */
    var Reimport: String /* "Reimport" */
    var AddLOD: String /* "AddLOD" */
    var ReimportLOD: String /* "ReimportLOD" */
    var ImportReload: String /* "ImportReload" */
    var AddAlternateSkinnig: String /* "AddAlternateSkinnig" */
    var EFBXTestPlanActionType_MAX: String /* "EFBXTestPlanActionType_MAX" */
}

external object EFBXExpectedResultPreset {
    var Error_Number: String /* "Error_Number" */
    var Warning_Number: String /* "Warning_Number" */
    var Created_Staticmesh_Number: String /* "Created_Staticmesh_Number" */
    var Created_Skeletalmesh_Number: String /* "Created_Skeletalmesh_Number" */
    var Materials_Created_Number: String /* "Materials_Created_Number" */
    var Material_Slot_Imported_Name: String /* "Material_Slot_Imported_Name" */
    var Vertex_Number: String /* "Vertex_Number" */
    var Lod_Number: String /* "Lod_Number" */
    var Vertex_Number_Lod: String /* "Vertex_Number_Lod" */
    var Mesh_Materials_Number: String /* "Mesh_Materials_Number" */
    var Mesh_LOD_Section_Number: String /* "Mesh_LOD_Section_Number" */
    var Mesh_LOD_Section_Vertex_Number: String /* "Mesh_LOD_Section_Vertex_Number" */
    var Mesh_LOD_Section_Triangle_Number: String /* "Mesh_LOD_Section_Triangle_Number" */
    var Mesh_LOD_Section_Material_Name: String /* "Mesh_LOD_Section_Material_Name" */
    var Mesh_LOD_Section_Material_Index: String /* "Mesh_LOD_Section_Material_Index" */
    var Mesh_LOD_Section_Material_Imported_Name: String /* "Mesh_LOD_Section_Material_Imported_Name" */
    var Mesh_LOD_Vertex_Position: String /* "Mesh_LOD_Vertex_Position" */
    var Mesh_LOD_Vertex_Normal: String /* "Mesh_LOD_Vertex_Normal" */
    var LOD_UV_Channel_Number: String /* "LOD_UV_Channel_Number" */
    var Bone_Number: String /* "Bone_Number" */
    var Bone_Position: String /* "Bone_Position" */
    var Animation_Frame_Number: String /* "Animation_Frame_Number" */
    var Animation_Length: String /* "Animation_Length" */
    var Animation_CustomCurve_KeyValue: String /* "Animation_CustomCurve_KeyValue" */
    var Animation_CustomCurve_KeyArriveTangent: String /* "Animation_CustomCurve_KeyArriveTangent" */
    var Animation_CustomCurve_KeyLeaveTangent: String /* "Animation_CustomCurve_KeyLeaveTangent" */
    var Skin_By_Bone_Vertex_Number: String /* "Skin_By_Bone_Vertex_Number" */
    var Animation_CustomCurve_KeyArriveTangentWeight: String /* "Animation_CustomCurve_KeyArriveTangentWeight" */
    var Animation_CustomCurve_KeyLeaveTangentWeight: String /* "Animation_CustomCurve_KeyLeaveTangentWeight" */
    var EFBXExpectedResultPreset_MAX: String /* "EFBXExpectedResultPreset_MAX" */
}

external open class FbxTestPlanExpectedResult {
    open var ExpectedPresetsType: String /* "Error_Number" | "Warning_Number" | "Created_Staticmesh_Number" | "Created_Skeletalmesh_Number" | "Materials_Created_Number" | "Material_Slot_Imported_Name" | "Vertex_Number" | "Lod_Number" | "Vertex_Number_Lod" | "Mesh_Materials_Number" | "Mesh_LOD_Section_Number" | "Mesh_LOD_Section_Vertex_Number" | "Mesh_LOD_Section_Triangle_Number" | "Mesh_LOD_Section_Material_Name" | "Mesh_LOD_Section_Material_Index" | "Mesh_LOD_Section_Material_Imported_Name" | "Mesh_LOD_Vertex_Position" | "Mesh_LOD_Vertex_Normal" | "LOD_UV_Channel_Number" | "Bone_Number" | "Bone_Position" | "Animation_Frame_Number" | "Animation_Length" | "Animation_CustomCurve_KeyValue" | "Animation_CustomCurve_KeyArriveTangent" | "Animation_CustomCurve_KeyLeaveTangent" | "Skin_By_Bone_Vertex_Number" | "Animation_CustomCurve_KeyArriveTangentWeight" | "Animation_CustomCurve_KeyLeaveTangentWeight" | "EFBXExpectedResultPreset_MAX" */
    open var ExpectedPresetsDataInteger: Array<Number>
    open var ExpectedPresetsDataFloat: Array<Number>
    open var ExpectedPresetsDataDouble: Array<Any>
    open var ExpectedPresetsDataString: Array<String>
    open fun clone(): FbxTestPlanExpectedResult

    companion object {
        fun C(Other: UObject): FbxTestPlanExpectedResult
        fun C(Other: Any): FbxTestPlanExpectedResult
    }
}

external object EFBXImportType {
    var FBXIT_StaticMesh: String /* "FBXIT_StaticMesh" */
    var FBXIT_SkeletalMesh: String /* "FBXIT_SkeletalMesh" */
    var FBXIT_Animation: String /* "FBXIT_Animation" */
    var FBXIT_MAX: String /* "FBXIT_MAX" */
}

external object EFBXNormalImportMethod {
    var FBXNIM_ComputeNormals: String /* "FBXNIM_ComputeNormals" */
    var FBXNIM_ImportNormals: String /* "FBXNIM_ImportNormals" */
    var FBXNIM_ImportNormalsAndTangents: String /* "FBXNIM_ImportNormalsAndTangents" */
    var FBXNIM_MAX: String /* "FBXNIM_MAX" */
}

external object EFBXNormalGenerationMethod {
    var BuiltIn: String /* "BuiltIn" */
    var MikkTSpace: String /* "MikkTSpace" */
    var EFBXNormalGenerationMethod_MAX: String /* "EFBXNormalGenerationMethod_MAX" */
}

external open class ImportMeshLodSectionsData {
    open var SectionOriginalMaterialName: Array<String>
    open fun clone(): ImportMeshLodSectionsData

    companion object {
        fun C(Other: UObject): ImportMeshLodSectionsData
        fun C(Other: Any): ImportMeshLodSectionsData
    }
}

external open class FbxMeshImportData : FbxAssetImportData {
    constructor()
    constructor(Outer: UObject)
    open var bTransformVertexToAbsolute: Boolean
    open var bBakePivotInVertex: Boolean
    open var bImportMeshLODs: Boolean
    open var NormalImportMethod: String /* "FBXNIM_ComputeNormals" | "FBXNIM_ImportNormals" | "FBXNIM_ImportNormalsAndTangents" | "FBXNIM_MAX" */
    open var NormalGenerationMethod: String /* "BuiltIn" | "MikkTSpace" | "EFBXNormalGenerationMethod_MAX" */
    open var bComputeWeightedNormals: Boolean
    open var bReorderMaterialToFbxOrder: Boolean
    open var ImportMaterialOriginalNameData: Array<String>
    open var ImportMeshLodData: Array<ImportMeshLodSectionsData>

    companion object {
        fun Load(ResourceName: String): FbxMeshImportData
        fun Find(Outer: UObject, ResourceName: String): FbxMeshImportData
        fun GetDefaultObject(): FbxMeshImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FbxMeshImportData
        fun C(Other: UObject): FbxMeshImportData
        fun C(Other: Any): FbxMeshImportData
    }
}

external object EVertexColorImportOption {
    var Replace: String /* "Replace" */
    var Ignore: String /* "Ignore" */
    var Override: String /* "Override" */
    var EVertexColorImportOption_MAX: String /* "EVertexColorImportOption_MAX" */
}

external open class FbxStaticMeshImportData : FbxMeshImportData {
    constructor()
    constructor(Outer: UObject)
    open var StaticMeshLODGroup: String
    open var VertexColorImportOption: String /* "Replace" | "Ignore" | "Override" | "EVertexColorImportOption_MAX" */
    open var VertexOverrideColor: Color
    open var bRemoveDegenerates: Boolean
    open var bBuildReversedIndexBuffer: Boolean
    open var bBuildNanite: Boolean
    open var bGenerateLightmapUVs: Boolean
    open var bOneConvexHullPerUCX: Boolean
    open var bAutoGenerateCollision: Boolean
    open var bCombineMeshes: Boolean
    open var DistanceFieldResolutionScale: Number

    companion object {
        fun Load(ResourceName: String): FbxStaticMeshImportData
        fun Find(Outer: UObject, ResourceName: String): FbxStaticMeshImportData
        fun GetDefaultObject(): FbxStaticMeshImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FbxStaticMeshImportData
        fun C(Other: UObject): FbxStaticMeshImportData
        fun C(Other: Any): FbxStaticMeshImportData
    }
}

external object EFBXImportContentType {
    var FBXICT_All: String /* "FBXICT_All" */
    var FBXICT_Geometry: String /* "FBXICT_Geometry" */
    var FBXICT_SkinningWeights: String /* "FBXICT_SkinningWeights" */
    var FBXICT_MAX: String /* "FBXICT_MAX" */
}

external open class FbxSkeletalMeshImportData : FbxMeshImportData {
    constructor()
    constructor(Outer: UObject)
    open var ImportContentType: String /* "FBXICT_All" | "FBXICT_Geometry" | "FBXICT_SkinningWeights" | "FBXICT_MAX" */
    open var LastImportContentType: String /* "FBXICT_All" | "FBXICT_Geometry" | "FBXICT_SkinningWeights" | "FBXICT_MAX" */
    open var VertexColorImportOption: String /* "Replace" | "Ignore" | "Override" | "EVertexColorImportOption_MAX" */
    open var VertexOverrideColor: Color
    open var bUpdateSkeletonReferencePose: Boolean
    open var bUseT0AsRefPose: Boolean
    open var bPreserveSmoothingGroups: Boolean
    open var bImportMeshesInBoneHierarchy: Boolean
    open var bImportMorphTargets: Boolean
    open var ThresholdPosition: Number
    open var ThresholdTangentNormal: Number
    open var ThresholdUV: Number
    open var MorphThresholdPosition: Number

    companion object {
        fun Load(ResourceName: String): FbxSkeletalMeshImportData
        fun Find(Outer: UObject, ResourceName: String): FbxSkeletalMeshImportData
        fun GetDefaultObject(): FbxSkeletalMeshImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FbxSkeletalMeshImportData
        fun C(Other: UObject): FbxSkeletalMeshImportData
        fun C(Other: Any): FbxSkeletalMeshImportData
    }
}

external object EMaterialSearchLocation {
    var Local: String /* "Local" */
    var UnderParent: String /* "UnderParent" */
    var UnderRoot: String /* "UnderRoot" */
    var AllAssets: String /* "AllAssets" */
    var DoNotSearch: String /* "DoNotSearch" */
    var EMaterialSearchLocation_MAX: String /* "EMaterialSearchLocation_MAX" */
}

external open class FbxTextureImportData : FbxAssetImportData {
    constructor()
    constructor(Outer: UObject)
    open var bInvertNormalMaps: Boolean
    open var MaterialSearchLocation: String /* "Local" | "UnderParent" | "UnderRoot" | "AllAssets" | "DoNotSearch" | "EMaterialSearchLocation_MAX" */
    open var BaseMaterialName: SoftObjectPath
    open var BaseColorName: String
    open var BaseDiffuseTextureName: String
    open var BaseNormalTextureName: String
    open var BaseEmissiveColorName: String
    open var BaseEmmisiveTextureName: String
    open var BaseSpecularTextureName: String
    open var BaseOpacityTextureName: String

    companion object {
        fun Load(ResourceName: String): FbxTextureImportData
        fun Find(Outer: UObject, ResourceName: String): FbxTextureImportData
        fun GetDefaultObject(): FbxTextureImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FbxTextureImportData
        fun C(Other: UObject): FbxTextureImportData
        fun C(Other: Any): FbxTextureImportData
    }
}

external open class FbxImportUI : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bIsObjImport: Boolean
    open var OriginalImportType: String /* "FBXIT_StaticMesh" | "FBXIT_SkeletalMesh" | "FBXIT_Animation" | "FBXIT_MAX" */
    open var MeshTypeToImport: String /* "FBXIT_StaticMesh" | "FBXIT_SkeletalMesh" | "FBXIT_Animation" | "FBXIT_MAX" */
    open var bOverrideFullName: Boolean
    open var bImportAsSkeletal: Boolean
    open var bImportMesh: Boolean
    open var Skeleton: Skeleton
    open var bCreatePhysicsAsset: Boolean
    open var PhysicsAsset: PhysicsAsset
    open var bAutoComputeLodDistances: Boolean
    open var LodDistance0: Number
    open var LodDistance1: Number
    open var LodDistance2: Number
    open var LodDistance3: Number
    open var LodDistance4: Number
    open var LodDistance5: Number
    open var LodDistance6: Number
    open var LodDistance7: Number
    open var MinimumLodNumber: Number
    open var LodNumber: Number
    open var bImportAnimations: Boolean
    open var OverrideAnimationName: String
    open var bImportRigidMesh: Boolean
    open var bImportMaterials: Boolean
    open var bImportTextures: Boolean
    open var bResetToFbxOnMaterialConflict: Boolean
    open var StaticMeshImportData: FbxStaticMeshImportData
    open var SkeletalMeshImportData: FbxSkeletalMeshImportData
    open var AnimSequenceImportData: FbxAnimSequenceImportData
    open var TextureImportData: FbxTextureImportData
    open var bAutomatedImportShouldDetectType: Boolean
    open var FileVersion: String
    open var FileCreator: String
    open var FileCreatorApplication: String
    open var FileUnits: String
    open var FileAxisDirection: String
    open var FileSampleRate: String
    open var AnimStartFrame: String
    open var AnimEndFrame: String
    open fun ResetToDefault()

    companion object {
        fun Load(ResourceName: String): FbxImportUI
        fun Find(Outer: UObject, ResourceName: String): FbxImportUI
        fun GetDefaultObject(): FbxImportUI
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FbxImportUI
        fun C(Other: UObject): FbxImportUI
        fun C(Other: Any): FbxImportUI
    }
}

external open class FbxTestPlan : UObject {
    constructor()
    constructor(Outer: UObject)
    open var TestPlanName: String
    open var Action: String /* "Import" | "Reimport" | "AddLOD" | "ReimportLOD" | "ImportReload" | "AddAlternateSkinnig" | "EFBXTestPlanActionType_MAX" */
    open var LODIndex: Number
    open var bDeleteFolderAssets: Boolean
    open var ExpectedResult: Array<FbxTestPlanExpectedResult>
    open var ImportUI: FbxImportUI

    companion object {
        fun Load(ResourceName: String): FbxTestPlan
        fun Find(Outer: UObject, ResourceName: String): FbxTestPlan
        fun GetDefaultObject(): FbxTestPlan
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FbxTestPlan
        fun C(Other: UObject): FbxTestPlan
        fun C(Other: Any): FbxTestPlan
    }
}

external open class FbxFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var ImportUI: FbxImportUI
    open var OriginalImportUI: FbxImportUI

    companion object {
        fun Load(ResourceName: String): FbxFactory
        fun Find(Outer: UObject, ResourceName: String): FbxFactory
        fun GetDefaultObject(): FbxFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FbxFactory
        fun C(Other: UObject): FbxFactory
        fun C(Other: Any): FbxFactory
    }
}

external open class SceneImportFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SceneImportFactory
        fun Find(Outer: UObject, ResourceName: String): SceneImportFactory
        fun GetDefaultObject(): SceneImportFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SceneImportFactory
        fun C(Other: UObject): SceneImportFactory
        fun C(Other: Any): SceneImportFactory
    }
}

external object EFBXSceneOptionsCreateHierarchyType {
    var FBXSOCHT_CreateLevelActors: String /* "FBXSOCHT_CreateLevelActors" */
    var FBXSOCHT_CreateActorComponents: String /* "FBXSOCHT_CreateActorComponents" */
    var FBXSOCHT_CreateBlueprint: String /* "FBXSOCHT_CreateBlueprint" */
    var FBXSOCHT_MAX: String /* "FBXSOCHT_MAX" */
}

external open class FbxSceneImportOptions : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bCreateContentFolderHierarchy: Boolean
    open var bImportAsDynamic: Boolean
    open var HierarchyType: String /* "FBXSOCHT_CreateLevelActors" | "FBXSOCHT_CreateActorComponents" | "FBXSOCHT_CreateBlueprint" | "FBXSOCHT_MAX" */
    open var bForceFrontXAxis: Boolean
    open var ImportTranslation: Vector
    open var ImportRotation: Rotator
    open var ImportUniformScale: Number
    open var bTransformVertexToAbsolute: Boolean
    open var bBakePivotInVertex: Boolean
    open var bImportStaticMeshLODs: Boolean
    open var bImportSkeletalMeshLODs: Boolean
    open var bInvertNormalMaps: Boolean

    companion object {
        fun Load(ResourceName: String): FbxSceneImportOptions
        fun Find(Outer: UObject, ResourceName: String): FbxSceneImportOptions
        fun GetDefaultObject(): FbxSceneImportOptions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FbxSceneImportOptions
        fun C(Other: UObject): FbxSceneImportOptions
        fun C(Other: Any): FbxSceneImportOptions
    }
}

external object EFbxSceneVertexColorImportOption {
    var Replace: String /* "Replace" */
    var Ignore: String /* "Ignore" */
    var Override: String /* "Override" */
    var EFbxSceneVertexColorImportOption_MAX: String /* "EFbxSceneVertexColorImportOption_MAX" */
}

external object EFBXSceneNormalImportMethod {
    var FBXSceneNIM_ComputeNormals: String /* "FBXSceneNIM_ComputeNormals" */
    var FBXSceneNIM_ImportNormals: String /* "FBXSceneNIM_ImportNormals" */
    var FBXSceneNIM_ImportNormalsAndTangents: String /* "FBXSceneNIM_ImportNormalsAndTangents" */
    var FBXSceneNIM_MAX: String /* "FBXSceneNIM_MAX" */
}

external object EFBXSceneNormalGenerationMethod {
    var BuiltIn: String /* "BuiltIn" */
    var MikkTSpace: String /* "MikkTSpace" */
    var EFBXSceneNormalGenerationMethod_MAX: String /* "EFBXSceneNormalGenerationMethod_MAX" */
}

external open class FbxSceneImportOptionsStaticMesh : UObject {
    constructor()
    constructor(Outer: UObject)
    open var StaticMeshLODGroup: String
    open var bAutoGenerateCollision: Boolean
    open var VertexColorImportOption: String /* "Replace" | "Ignore" | "Override" | "EFbxSceneVertexColorImportOption_MAX" */
    open var VertexOverrideColor: Color
    open var bRemoveDegenerates: Boolean
    open var bBuildReversedIndexBuffer: Boolean
    open var bGenerateLightmapUVs: Boolean
    open var bOneConvexHullPerUCX: Boolean
    open var NormalImportMethod: String /* "FBXSceneNIM_ComputeNormals" | "FBXSceneNIM_ImportNormals" | "FBXSceneNIM_ImportNormalsAndTangents" | "FBXSceneNIM_MAX" */
    open var NormalGenerationMethod: String /* "BuiltIn" | "MikkTSpace" | "EFBXSceneNormalGenerationMethod_MAX" */

    companion object {
        fun Load(ResourceName: String): FbxSceneImportOptionsStaticMesh
        fun Find(Outer: UObject, ResourceName: String): FbxSceneImportOptionsStaticMesh
        fun GetDefaultObject(): FbxSceneImportOptionsStaticMesh
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FbxSceneImportOptionsStaticMesh
        fun C(Other: UObject): FbxSceneImportOptionsStaticMesh
        fun C(Other: Any): FbxSceneImportOptionsStaticMesh
    }
}

external open class FbxSceneImportOptionsSkeletalMesh : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bUpdateSkeletonReferencePose: Boolean
    open var bCreatePhysicsAsset: Boolean
    open var bUseT0AsRefPose: Boolean
    open var bPreserveSmoothingGroups: Boolean
    open var bImportMeshesInBoneHierarchy: Boolean
    open var bImportMorphTargets: Boolean
    open var ThresholdPosition: Number
    open var ThresholdTangentNormal: Number
    open var ThresholdUV: Number
    open var MorphThresholdPosition: Number
    open var bImportAnimations: Boolean
    open var AnimationLength: String /* "FBXALIT_ExportedTime" | "FBXALIT_AnimatedKey" | "FBXALIT_SetRange" | "FBXALIT_MAX" */
    open var FrameImportRange: Int32Interval
    open var bUseDefaultSampleRate: Boolean
    open var CustomSampleRate: Number
    open var bImportCustomAttribute: Boolean
    open var bDeleteExistingCustomAttributeCurves: Boolean
    open var bDeleteExistingNonCurveCustomAttributes: Boolean
    open var bPreserveLocalTransform: Boolean
    open var bDeleteExistingMorphTargetCurves: Boolean

    companion object {
        fun Load(ResourceName: String): FbxSceneImportOptionsSkeletalMesh
        fun Find(Outer: UObject, ResourceName: String): FbxSceneImportOptionsSkeletalMesh
        fun GetDefaultObject(): FbxSceneImportOptionsSkeletalMesh
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FbxSceneImportOptionsSkeletalMesh
        fun C(Other: UObject): FbxSceneImportOptionsSkeletalMesh
        fun C(Other: Any): FbxSceneImportOptionsSkeletalMesh
    }
}

external open class FbxSceneImportFactory : SceneImportFactory {
    constructor()
    constructor(Outer: UObject)
    open var SceneImportOptions: FbxSceneImportOptions
    open var SceneImportOptionsStaticMesh: FbxSceneImportOptionsStaticMesh
    open var SceneImportOptionsSkeletalMesh: FbxSceneImportOptionsSkeletalMesh
    open var StaticMeshImportData: FbxStaticMeshImportData
    open var SkeletalMeshImportData: FbxSkeletalMeshImportData
    open var AnimSequenceImportData: FbxAnimSequenceImportData
    open var TextureImportData: FbxTextureImportData
    open var ReimportData: FbxSceneImportData

    companion object {
        fun Load(ResourceName: String): FbxSceneImportFactory
        fun Find(Outer: UObject, ResourceName: String): FbxSceneImportFactory
        fun GetDefaultObject(): FbxSceneImportFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FbxSceneImportFactory
        fun C(Other: UObject): FbxSceneImportFactory
        fun C(Other: Any): FbxSceneImportFactory
    }
}

external object EReloadPackagesInteractionMode {
    var Interactive: String /* "Interactive" */
    var AssumePositive: String /* "AssumePositive" */
    var AssumeNegative: String /* "AssumeNegative" */
    var EReloadPackagesInteractionMode_MAX: String /* "EReloadPackagesInteractionMode_MAX" */
}

external interface `T$658` {
    var bOutAnyPackagesUnloaded: Boolean
    var OutErrorMessage: String
}

external interface `T$659` {
    var bOutAnyPackagesReloaded: Boolean
    var OutErrorMessage: String
}

external interface `T$660` {
    var OutDirtyPackages: Array<Package>
}

external interface `T$661` {
    var OutDirtyPackages: Array<Package>
}

external open class EditorLoadingAndSavingUtils : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EditorLoadingAndSavingUtils
        fun Find(Outer: UObject, ResourceName: String): EditorLoadingAndSavingUtils
        fun GetDefaultObject(): EditorLoadingAndSavingUtils
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorLoadingAndSavingUtils
        fun UnloadPackages(PackagesToUnload: Array<Package>, bOutAnyPackagesUnloaded: Boolean = definedExternally, OutErrorMessage: String = definedExternally): `T$658`
        fun SavePackagesWithDialog(PackagesToSave: Array<Package>, bOnlyDirty: Boolean): Boolean
        fun SavePackages(PackagesToSave: Array<Package>, bOnlyDirty: Boolean): Boolean
        fun SaveMap(World: World, AssetPath: String): Boolean
        fun SaveDirtyPackagesWithDialog(bSaveMapPackages: Boolean, bSaveContentPackages: Boolean): Boolean
        fun SaveDirtyPackages(bSaveMapPackages: Boolean, bSaveContentPackages: Boolean): Boolean
        fun SaveCurrentLevel(): Boolean
        fun ReloadPackages(PackagesToReload: Array<Package>, bOutAnyPackagesReloaded: Boolean = definedExternally, OutErrorMessage: String = definedExternally, InteractionMode: String /* "Interactive" | "AssumePositive" | "AssumeNegative" | "EReloadPackagesInteractionMode_MAX" */ = definedExternally): `T$659`
        fun NewMapFromTemplate(PathToTemplateLevel: String, bSaveExistingMap: Boolean): World
        fun NewBlankMap(bSaveExistingMap: Boolean): World
        fun LoadMapWithDialog(): World
        fun LoadMap(Filename: String): World
        fun ImportScene(Filename: String)
        fun GetDirtyMapPackages(OutDirtyPackages: Array<Package> = definedExternally): `T$660`
        fun GetDirtyContentPackages(OutDirtyPackages: Array<Package> = definedExternally): `T$661`
        fun ExportScene(bExportSelectedActorsOnly: Boolean)
        fun C(Other: UObject): EditorLoadingAndSavingUtils
        fun C(Other: Any): EditorLoadingAndSavingUtils
    }
}

external open class FileServerCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): FileServerCommandlet
        fun Find(Outer: UObject, ResourceName: String): FileServerCommandlet
        fun GetDefaultObject(): FileServerCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FileServerCommandlet
        fun C(Other: UObject): FileServerCommandlet
        fun C(Other: Any): FileServerCommandlet
    }
}

external open class FixConflictingLocalizationKeysCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): FixConflictingLocalizationKeysCommandlet
        fun Find(Outer: UObject, ResourceName: String): FixConflictingLocalizationKeysCommandlet
        fun GetDefaultObject(): FixConflictingLocalizationKeysCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FixConflictingLocalizationKeysCommandlet
        fun C(Other: UObject): FixConflictingLocalizationKeysCommandlet
        fun C(Other: Any): FixConflictingLocalizationKeysCommandlet
    }
}

external open class ResavePackagesCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ResavePackagesCommandlet
        fun Find(Outer: UObject, ResourceName: String): ResavePackagesCommandlet
        fun GetDefaultObject(): ResavePackagesCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ResavePackagesCommandlet
        fun C(Other: UObject): ResavePackagesCommandlet
        fun C(Other: Any): ResavePackagesCommandlet
    }
}

external open class FixupNeedsLoadForEditorGameCommandlet : ResavePackagesCommandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): FixupNeedsLoadForEditorGameCommandlet
        fun Find(Outer: UObject, ResourceName: String): FixupNeedsLoadForEditorGameCommandlet
        fun GetDefaultObject(): FixupNeedsLoadForEditorGameCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FixupNeedsLoadForEditorGameCommandlet
        fun C(Other: UObject): FixupNeedsLoadForEditorGameCommandlet
        fun C(Other: Any): FixupNeedsLoadForEditorGameCommandlet
    }
}

external open class FontFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): FontFactory
        fun Find(Outer: UObject, ResourceName: String): FontFactory
        fun GetDefaultObject(): FontFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FontFactory
        fun C(Other: UObject): FontFactory
        fun C(Other: Any): FontFactory
    }
}

external open class FontFileImportFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): FontFileImportFactory
        fun Find(Outer: UObject, ResourceName: String): FontFileImportFactory
        fun GetDefaultObject(): FontFileImportFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FontFileImportFactory
        fun C(Other: UObject): FontFileImportFactory
        fun C(Other: Any): FontFileImportFactory
    }
}

external open class FontThumbnailRenderer : TextureThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): FontThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): FontThumbnailRenderer
        fun GetDefaultObject(): FontThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FontThumbnailRenderer
        fun C(Other: UObject): FontThumbnailRenderer
        fun C(Other: Any): FontThumbnailRenderer
    }
}

external open class ForceFeedbackAttenuationFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ForceFeedbackAttenuationFactory
        fun Find(Outer: UObject, ResourceName: String): ForceFeedbackAttenuationFactory
        fun GetDefaultObject(): ForceFeedbackAttenuationFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ForceFeedbackAttenuationFactory
        fun C(Other: UObject): ForceFeedbackAttenuationFactory
        fun C(Other: Any): ForceFeedbackAttenuationFactory
    }
}

external open class ForceFeedbackEffectFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ForceFeedbackEffectFactory
        fun Find(Outer: UObject, ResourceName: String): ForceFeedbackEffectFactory
        fun GetDefaultObject(): ForceFeedbackEffectFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ForceFeedbackEffectFactory
        fun C(Other: UObject): ForceFeedbackEffectFactory
        fun C(Other: Any): ForceFeedbackEffectFactory
    }
}

external open class GatherTextCommandlet : GatherTextCommandletBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GatherTextCommandlet
        fun Find(Outer: UObject, ResourceName: String): GatherTextCommandlet
        fun GetDefaultObject(): GatherTextCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GatherTextCommandlet
        fun C(Other: UObject): GatherTextCommandlet
        fun C(Other: Any): GatherTextCommandlet
    }
}

external open class GatherTextFromAssetsCommandlet : GatherTextCommandletBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GatherTextFromAssetsCommandlet
        fun Find(Outer: UObject, ResourceName: String): GatherTextFromAssetsCommandlet
        fun GetDefaultObject(): GatherTextFromAssetsCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GatherTextFromAssetsCommandlet
        fun C(Other: UObject): GatherTextFromAssetsCommandlet
        fun C(Other: Any): GatherTextFromAssetsCommandlet
    }
}

external open class GatherTextFromMetaDataCommandlet : GatherTextCommandletBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GatherTextFromMetaDataCommandlet
        fun Find(Outer: UObject, ResourceName: String): GatherTextFromMetaDataCommandlet
        fun GetDefaultObject(): GatherTextFromMetaDataCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GatherTextFromMetaDataCommandlet
        fun C(Other: UObject): GatherTextFromMetaDataCommandlet
        fun C(Other: Any): GatherTextFromMetaDataCommandlet
    }
}

external open class GatherTextFromSourceCommandlet : GatherTextCommandletBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GatherTextFromSourceCommandlet
        fun Find(Outer: UObject, ResourceName: String): GatherTextFromSourceCommandlet
        fun GetDefaultObject(): GatherTextFromSourceCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GatherTextFromSourceCommandlet
        fun C(Other: UObject): GatherTextFromSourceCommandlet
        fun C(Other: Any): GatherTextFromSourceCommandlet
    }
}

external open class GenerateAssetManifestCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GenerateAssetManifestCommandlet
        fun Find(Outer: UObject, ResourceName: String): GenerateAssetManifestCommandlet
        fun GetDefaultObject(): GenerateAssetManifestCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GenerateAssetManifestCommandlet
        fun C(Other: UObject): GenerateAssetManifestCommandlet
        fun C(Other: Any): GenerateAssetManifestCommandlet
    }
}

external open class GenerateBlueprintAPICommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GenerateBlueprintAPICommandlet
        fun Find(Outer: UObject, ResourceName: String): GenerateBlueprintAPICommandlet
        fun GetDefaultObject(): GenerateBlueprintAPICommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GenerateBlueprintAPICommandlet
        fun C(Other: UObject): GenerateBlueprintAPICommandlet
        fun C(Other: Any): GenerateBlueprintAPICommandlet
    }
}

external open class GenerateDistillFileSetsCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GenerateDistillFileSetsCommandlet
        fun Find(Outer: UObject, ResourceName: String): GenerateDistillFileSetsCommandlet
        fun GetDefaultObject(): GenerateDistillFileSetsCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GenerateDistillFileSetsCommandlet
        fun C(Other: UObject): GenerateDistillFileSetsCommandlet
        fun C(Other: Any): GenerateDistillFileSetsCommandlet
    }
}

external open class GenerateGatherArchiveCommandlet : GatherTextCommandletBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GenerateGatherArchiveCommandlet
        fun Find(Outer: UObject, ResourceName: String): GenerateGatherArchiveCommandlet
        fun GetDefaultObject(): GenerateGatherArchiveCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GenerateGatherArchiveCommandlet
        fun C(Other: UObject): GenerateGatherArchiveCommandlet
        fun C(Other: Any): GenerateGatherArchiveCommandlet
    }
}

external open class GenerateGatherManifestCommandlet : GatherTextCommandletBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GenerateGatherManifestCommandlet
        fun Find(Outer: UObject, ResourceName: String): GenerateGatherManifestCommandlet
        fun GetDefaultObject(): GenerateGatherManifestCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GenerateGatherManifestCommandlet
        fun C(Other: UObject): GenerateGatherManifestCommandlet
        fun C(Other: Any): GenerateGatherManifestCommandlet
    }
}

external open class GenerateTextLocalizationReportCommandlet : GatherTextCommandletBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GenerateTextLocalizationReportCommandlet
        fun Find(Outer: UObject, ResourceName: String): GenerateTextLocalizationReportCommandlet
        fun GetDefaultObject(): GenerateTextLocalizationReportCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GenerateTextLocalizationReportCommandlet
        fun C(Other: UObject): GenerateTextLocalizationReportCommandlet
        fun C(Other: Any): GenerateTextLocalizationReportCommandlet
    }
}

external open class GenerateTextLocalizationResourceCommandlet : GatherTextCommandletBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GenerateTextLocalizationResourceCommandlet
        fun Find(Outer: UObject, ResourceName: String): GenerateTextLocalizationResourceCommandlet
        fun GetDefaultObject(): GenerateTextLocalizationResourceCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GenerateTextLocalizationResourceCommandlet
        fun C(Other: UObject): GenerateTextLocalizationResourceCommandlet
        fun C(Other: Any): GenerateTextLocalizationResourceCommandlet
    }
}

external open class HapticFeedbackEffectBufferFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): HapticFeedbackEffectBufferFactory
        fun Find(Outer: UObject, ResourceName: String): HapticFeedbackEffectBufferFactory
        fun GetDefaultObject(): HapticFeedbackEffectBufferFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): HapticFeedbackEffectBufferFactory
        fun C(Other: UObject): HapticFeedbackEffectBufferFactory
        fun C(Other: Any): HapticFeedbackEffectBufferFactory
    }
}

external open class HapticFeedbackEffectCurveFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): HapticFeedbackEffectCurveFactory
        fun Find(Outer: UObject, ResourceName: String): HapticFeedbackEffectCurveFactory
        fun GetDefaultObject(): HapticFeedbackEffectCurveFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): HapticFeedbackEffectCurveFactory
        fun C(Other: UObject): HapticFeedbackEffectCurveFactory
        fun C(Other: Any): HapticFeedbackEffectCurveFactory
    }
}

external open class HapticFeedbackEffectSoundWaveFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): HapticFeedbackEffectSoundWaveFactory
        fun Find(Outer: UObject, ResourceName: String): HapticFeedbackEffectSoundWaveFactory
        fun GetDefaultObject(): HapticFeedbackEffectSoundWaveFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): HapticFeedbackEffectSoundWaveFactory
        fun C(Other: UObject): HapticFeedbackEffectSoundWaveFactory
        fun C(Other: Any): HapticFeedbackEffectSoundWaveFactory
    }
}

external open class HierarchicalLODSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var bForceSettingsInAllMaps: Boolean
    open var bSaveLODActorsToHLODPackages: Boolean
    open var DefaultSetup: Class
    open var DirectoriesForHLODCommandlet: Array<DirectoryPath>
    open var MapsToBuild: Array<FilePath>
    open var BaseMaterial: MaterialInterface

    companion object {
        fun Load(ResourceName: String): HierarchicalLODSettings
        fun Find(Outer: UObject, ResourceName: String): HierarchicalLODSettings
        fun GetDefaultObject(): HierarchicalLODSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): HierarchicalLODSettings
        fun C(Other: UObject): HierarchicalLODSettings
        fun C(Other: Any): HierarchicalLODSettings
    }
}

external open class HierarchicalLODVolume(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Volume {
    open var bIncludeOverlappingActors: Boolean
    open var ApplyOnlyToSpecificHLODLevels: Array<Number>

    companion object {
        fun GetDefaultObject(): HierarchicalLODVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): HierarchicalLODVolume
        fun C(Other: UObject): HierarchicalLODVolume
        fun C(Other: Any): HierarchicalLODVolume
    }
}

external open class ImportAssetsCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)
    open var GlobalImportData: AutomatedAssetImportData
    open var ImportDataList: Array<AutomatedAssetImportData>

    companion object {
        fun Load(ResourceName: String): ImportAssetsCommandlet
        fun Find(Outer: UObject, ResourceName: String): ImportAssetsCommandlet
        fun GetDefaultObject(): ImportAssetsCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ImportAssetsCommandlet
        fun C(Other: UObject): ImportAssetsCommandlet
        fun C(Other: Any): ImportAssetsCommandlet
    }
}

external open class ImportDialogueScriptCommandlet : GatherTextCommandletBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ImportDialogueScriptCommandlet
        fun Find(Outer: UObject, ResourceName: String): ImportDialogueScriptCommandlet
        fun GetDefaultObject(): ImportDialogueScriptCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ImportDialogueScriptCommandlet
        fun C(Other: UObject): ImportDialogueScriptCommandlet
        fun C(Other: Any): ImportDialogueScriptCommandlet
    }
}

external open class ImportLocalizedDialogueCommandlet : GatherTextCommandletBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ImportLocalizedDialogueCommandlet
        fun Find(Outer: UObject, ResourceName: String): ImportLocalizedDialogueCommandlet
        fun GetDefaultObject(): ImportLocalizedDialogueCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ImportLocalizedDialogueCommandlet
        fun C(Other: UObject): ImportLocalizedDialogueCommandlet
        fun C(Other: Any): ImportLocalizedDialogueCommandlet
    }
}

external open class ImportSubsystem : EditorSubsystem {
    constructor()
    constructor(Outer: UObject)
    open var OnAssetPreImport_BP: UnrealEngineMulticastDelegate<(InFactory: Factory, InClass: UnrealEngineClass, InParent: UObject, Name: String, Type: String) -> Unit>
    open var OnAssetPostImport_BP: UnrealEngineMulticastDelegate<(InFactory: Factory, InCreatedObject: UObject) -> Unit>
    open var OnAssetReimport_BP: UnrealEngineMulticastDelegate<(InCreatedObject: UObject) -> Unit>
    open var OnAssetPostLODImport_BP: UnrealEngineMulticastDelegate<(InObject: UObject, InLODIndex: Number) -> Unit>

    companion object {
        fun Load(ResourceName: String): ImportSubsystem
        fun Find(Outer: UObject, ResourceName: String): ImportSubsystem
        fun GetDefaultObject(): ImportSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ImportSubsystem
        fun C(Other: UObject): ImportSubsystem
        fun C(Other: Any): ImportSubsystem
    }
}

external open class InternationalizationConditioningCommandlet : GatherTextCommandletBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InternationalizationConditioningCommandlet
        fun Find(Outer: UObject, ResourceName: String): InternationalizationConditioningCommandlet
        fun GetDefaultObject(): InternationalizationConditioningCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InternationalizationConditioningCommandlet
        fun C(Other: UObject): InternationalizationConditioningCommandlet
        fun C(Other: Any): InternationalizationConditioningCommandlet
    }
}

external open class InternationalizationExportCommandlet : GatherTextCommandletBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InternationalizationExportCommandlet
        fun Find(Outer: UObject, ResourceName: String): InternationalizationExportCommandlet
        fun GetDefaultObject(): InternationalizationExportCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InternationalizationExportCommandlet
        fun C(Other: UObject): InternationalizationExportCommandlet
        fun C(Other: Any): InternationalizationExportCommandlet
    }
}

external open class IoStoreCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): IoStoreCommandlet
        fun Find(Outer: UObject, ResourceName: String): IoStoreCommandlet
        fun GetDefaultObject(): IoStoreCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): IoStoreCommandlet
        fun C(Other: UObject): IoStoreCommandlet
        fun C(Other: Any): IoStoreCommandlet
    }
}

external interface `T$662` {
    var OutLayer: Layer
    var `$`: Boolean
}

external interface `T$663` {
    var InOutActors: Array<Actor>
}

external interface `T$664` {
    var InOutActors: Array<Actor>
}

external interface `T$665` {
    var OutLayers: Array<Layer>
}

external interface `T$666` {
    var OutLayerNames: Array<String>
}

external open class LayersSubsystem : EditorSubsystem {
    constructor()
    constructor(Outer: UObject)
    open fun UpdateAllViewVisibility(LayerThatChanged: String)
    open fun UpdateAllActorsVisibility(bNotifySelectionChange: Boolean, bRedrawViewports: Boolean): Boolean
    open fun UpdateActorVisibility(Actor: Actor, bOutSelectionChanged: Boolean = definedExternally, bOutActorModified: Boolean = definedExternally, bNotifySelectionChange: Boolean = definedExternally, bRedrawViewports: Boolean = definedExternally): `T$592`
    open fun UpdateActorAllViewsVisibility(Actor: Actor)
    open fun TryGetLayer(LayerName: String, OutLayer: Layer = definedExternally): `T$662`
    open fun ToggleLayerVisibility(LayerName: String)
    open fun ToggleLayersVisibility(LayerNames: Array<String>)
    open fun SetLayerVisibility(LayerName: String, bIsVisible: Boolean)
    open fun SetLayersVisibility(LayerNames: Array<String>, bIsVisible: Boolean)
    open fun SelectActorsInLayers(LayerNames: Array<String>, bSelect: Boolean, bNotify: Boolean, bSelectEvenIfHidden: Boolean): Boolean
    open fun SelectActorsInLayer(LayerName: String, bSelect: Boolean, bNotify: Boolean, bSelectEvenIfHidden: Boolean): Boolean
    open fun RenameLayer(OriginalLayerName: String, NewLayerName: String): Boolean
    open fun RemoveSelectedActorsFromLayers(LayerNames: Array<String>): Boolean
    open fun RemoveSelectedActorsFromLayer(LayerName: String): Boolean
    open fun RemoveLevelLayerInformation(Level: Level)
    open fun RemoveActorsFromLayers(Actors: Array<Actor>, LayerNames: Array<String>, bUpdateStats: Boolean): Boolean
    open fun RemoveActorsFromLayer(Actors: Array<Actor>, LayerName: String, bUpdateStats: Boolean): Boolean
    open fun RemoveActorFromLayers(Actor: Actor, LayerNames: Array<String>, bUpdateStats: Boolean): Boolean
    open fun RemoveActorFromLayer(Actor: Actor, LayerToRemove: String, bUpdateStats: Boolean): Boolean
    open fun MakeAllLayersVisible()
    open fun IsLayer(LayerName: String): Boolean
    open fun IsActorValidForLayer(Actor: Actor): Boolean
    open fun InitializeNewActorLayers(Actor: Actor): Boolean
    open fun GetWorld(): World
    open fun GetSelectedActors(): Array<Actor>
    open fun GetLayer(LayerName: String): Layer
    open fun GetActorsFromLayers(LayerNames: Array<String>): Array<Actor>
    open fun GetActorsFromLayer(LayerName: String): Array<Actor>
    open fun EditorRefreshLayerBrowser()
    open fun EditorMapChange()
    open fun DisassociateActorsFromLayers(Actors: Array<Actor>): Boolean
    open fun DisassociateActorFromLayers(Actor: Actor): Boolean
    open fun DeleteLayers(LayersToDelete: Array<String>)
    open fun DeleteLayer(LayerToDelete: String)
    open fun CreateLayer(LayerName: String): Layer
    open fun AppendActorsFromLayers(LayerNames: Array<String>, InOutActors: Array<Actor> = definedExternally): `T$663`
    open fun AppendActorsFromLayer(LayerName: String, InOutActors: Array<Actor> = definedExternally): `T$664`
    open fun AddSelectedActorsToLayers(LayerNames: Array<String>): Boolean
    open fun AddSelectedActorsToLayer(LayerName: String): Boolean
    open fun AddLevelLayerInformation(Level: Level)
    open fun AddAllLayersTo(OutLayers: Array<Layer> = definedExternally): `T$665`
    open fun AddAllLayerNamesTo(OutLayerNames: Array<String> = definedExternally): `T$666`
    open fun AddActorToLayers(Actor: Actor, LayerNames: Array<String>): Boolean
    open fun AddActorToLayer(Actor: Actor, LayerName: String): Boolean
    open fun AddActorsToLayers(Actors: Array<Actor>, LayerNames: Array<String>): Boolean
    open fun AddActorsToLayer(Actors: Array<Actor>, LayerName: String): Boolean

    companion object {
        fun Load(ResourceName: String): LayersSubsystem
        fun Find(Outer: UObject, ResourceName: String): LayersSubsystem
        fun GetDefaultObject(): LayersSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LayersSubsystem
        fun C(Other: UObject): LayersSubsystem
        fun C(Other: Any): LayersSubsystem
    }
}

external open class LegacyEdModeWrapper : EdMode {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LegacyEdModeWrapper
        fun Find(Outer: UObject, ResourceName: String): LegacyEdModeWrapper
        fun GetDefaultObject(): LegacyEdModeWrapper
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LegacyEdModeWrapper
        fun C(Other: UObject): LegacyEdModeWrapper
        fun C(Other: Any): LegacyEdModeWrapper
    }
}

external open class LegacyEdModeSelectInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LegacyEdModeSelectInterface
        fun Find(Outer: UObject, ResourceName: String): LegacyEdModeSelectInterface
        fun GetDefaultObject(): LegacyEdModeSelectInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LegacyEdModeSelectInterface
        fun C(Other: UObject): LegacyEdModeSelectInterface
        fun C(Other: Any): LegacyEdModeSelectInterface
    }
}

external open class LegacyEdModeWidgetInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LegacyEdModeWidgetInterface
        fun Find(Outer: UObject, ResourceName: String): LegacyEdModeWidgetInterface
        fun GetDefaultObject(): LegacyEdModeWidgetInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LegacyEdModeWidgetInterface
        fun C(Other: UObject): LegacyEdModeWidgetInterface
        fun C(Other: Any): LegacyEdModeWidgetInterface
    }
}

external open class LegacyEdModeToolInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LegacyEdModeToolInterface
        fun Find(Outer: UObject, ResourceName: String): LegacyEdModeToolInterface
        fun GetDefaultObject(): LegacyEdModeToolInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LegacyEdModeToolInterface
        fun C(Other: UObject): LegacyEdModeToolInterface
        fun C(Other: Any): LegacyEdModeToolInterface
    }
}

external open class LegacyEdModeDrawHelperInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LegacyEdModeDrawHelperInterface
        fun Find(Outer: UObject, ResourceName: String): LegacyEdModeDrawHelperInterface
        fun GetDefaultObject(): LegacyEdModeDrawHelperInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LegacyEdModeDrawHelperInterface
        fun C(Other: UObject): LegacyEdModeDrawHelperInterface
        fun C(Other: Any): LegacyEdModeDrawHelperInterface
    }
}

external open class LegacyEdModeViewportInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LegacyEdModeViewportInterface
        fun Find(Outer: UObject, ResourceName: String): LegacyEdModeViewportInterface
        fun GetDefaultObject(): LegacyEdModeViewportInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LegacyEdModeViewportInterface
        fun C(Other: UObject): LegacyEdModeViewportInterface
        fun C(Other: Any): LegacyEdModeViewportInterface
    }
}

external open class LevelEditorMiscSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var bAutoApplyLightingEnable: Boolean
    open var bBSPAutoUpdate: Boolean
    open var bAutoMoveBSPPivotOffset: Boolean
    open var bNavigationAutoUpdate: Boolean
    open var bReplaceRespectsScale: Boolean
    open var bEnableExperimentalLevelEditor: Boolean
    open var bAvoidRelabelOnPasteSelected: Boolean
    open var bAllowBackgroundAudio: Boolean
    open var bCreateNewAudioDeviceForPlayInEditor: Boolean
    open var bEnableRealTimeAudio: Boolean
    open var EditorVolumeLevel: Number
    open var bEnableEditorSounds: Boolean
    open var DefaultLevelStreamingClass: UnrealEngineClass
    open var bPromptWhenAddingToLevelBeforeCheckout: Boolean
    open var bPromptWhenAddingToLevelOutsideBounds: Boolean
    open var PercentageThresholdForPrompt: Number
    open var MinimumBoundsForCheckingSize: Vector
    open var EditorScreenshotSaveDirectory: DirectoryPath

    companion object {
        fun Load(ResourceName: String): LevelEditorMiscSettings
        fun Find(Outer: UObject, ResourceName: String): LevelEditorMiscSettings
        fun GetDefaultObject(): LevelEditorMiscSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelEditorMiscSettings
        fun C(Other: UObject): LevelEditorMiscSettings
        fun C(Other: Any): LevelEditorMiscSettings
    }
}

external open class CommonResolutionMenuContext : ToolMenuContextBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CommonResolutionMenuContext
        fun Find(Outer: UObject, ResourceName: String): CommonResolutionMenuContext
        fun GetDefaultObject(): CommonResolutionMenuContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CommonResolutionMenuContext
        fun C(Other: UObject): CommonResolutionMenuContext
        fun C(Other: Any): CommonResolutionMenuContext
    }
}

external object ELabelAnchorMode {
    var LabelAnchorMode_TopLeft: String /* "LabelAnchorMode_TopLeft" */
    var LabelAnchorMode_TopCenter: String /* "LabelAnchorMode_TopCenter" */
    var LabelAnchorMode_TopRight: String /* "LabelAnchorMode_TopRight" */
    var LabelAnchorMode_CenterLeft: String /* "LabelAnchorMode_CenterLeft" */
    var LabelAnchorMode_Centered: String /* "LabelAnchorMode_Centered" */
    var LabelAnchorMode_CenterRight: String /* "LabelAnchorMode_CenterRight" */
    var LabelAnchorMode_BottomLeft: String /* "LabelAnchorMode_BottomLeft" */
    var LabelAnchorMode_BottomCenter: String /* "LabelAnchorMode_BottomCenter" */
    var LabelAnchorMode_BottomRight: String /* "LabelAnchorMode_BottomRight" */
    var LabelAnchorMode_MAX: String /* "LabelAnchorMode_MAX" */
}

external object EPlayOnBuildMode {
    var PlayOnBuild_Always: String /* "PlayOnBuild_Always" */
    var PlayOnBuild_Never: String /* "PlayOnBuild_Never" */
    var PlayOnBuild_Default: String /* "PlayOnBuild_Default" */
    var PlayOnBuild_IfEditorBuiltLocally: String /* "PlayOnBuild_IfEditorBuiltLocally" */
    var PlayOnBuild_MAX: String /* "PlayOnBuild_MAX" */
}

external object EPlayOnLaunchConfiguration {
    var LaunchConfig_Default: String /* "LaunchConfig_Default" */
    var LaunchConfig_Debug: String /* "LaunchConfig_Debug" */
    var LaunchConfig_Development: String /* "LaunchConfig_Development" */
    var LaunchConfig_Test: String /* "LaunchConfig_Test" */
    var LaunchConfig_Shipping: String /* "LaunchConfig_Shipping" */
    var LaunchConfig_MAX: String /* "LaunchConfig_MAX" */
}

external object EPlayOnPakFileMode {
    var NoPak: String /* "NoPak" */
    var PakNoCompress: String /* "PakNoCompress" */
    var PakCompress: String /* "PakCompress" */
    var EPlayOnPakFileMode_MAX: String /* "EPlayOnPakFileMode_MAX" */
}

external object EPlayNetMode {
    var PIE_Standalone: String /* "PIE_Standalone" */
    var PIE_ListenServer: String /* "PIE_ListenServer" */
    var PIE_Client: String /* "PIE_Client" */
    var PIE_MAX: String /* "PIE_MAX" */
}

external object NetworkEmulationTarget {
    var Server: String /* "Server" */
    var Client: String /* "Client" */
    var Any: String /* "Any" */
    var NetworkEmulationTarget_MAX: String /* "NetworkEmulationTarget_MAX" */
}

external open class NetworkEmulationPacketSettings {
    open var MinLatency: Number
    open var MaxLatency: Number
    open var PacketLossPercentage: Number
    open fun clone(): NetworkEmulationPacketSettings

    companion object {
        fun C(Other: UObject): NetworkEmulationPacketSettings
        fun C(Other: Any): NetworkEmulationPacketSettings
    }
}

external open class LevelEditorPlayNetworkEmulationSettings {
    open var bIsNetworkEmulationEnabled: Boolean
    open var EmulationTarget: String /* "Server" | "Client" | "Any" | "NetworkEmulationTarget_MAX" */
    open var CurrentProfile: String
    open var OutPackets: NetworkEmulationPacketSettings
    open var InPackets: NetworkEmulationPacketSettings
    open fun clone(): LevelEditorPlayNetworkEmulationSettings

    companion object {
        fun C(Other: UObject): LevelEditorPlayNetworkEmulationSettings
        fun C(Other: Any): LevelEditorPlayNetworkEmulationSettings
    }
}

external object ELaunchModeType {
    var LaunchMode_OnDevice: String /* "LaunchMode_OnDevice" */
    var LaunchMode_MAX: String /* "LaunchMode_MAX" */
}

external object EPlayModeLocations {
    var PlayLocation_CurrentCameraLocation: String /* "PlayLocation_CurrentCameraLocation" */
    var PlayLocation_DefaultPlayerStart: String /* "PlayLocation_DefaultPlayerStart" */
    var PlayLocation_MAX: String /* "PlayLocation_MAX" */
}

external object EPlayModeType {
    var PlayMode_InViewPort: String /* "PlayMode_InViewPort" */
    var PlayMode_InEditorFloating: String /* "PlayMode_InEditorFloating" */
    var PlayMode_InMobilePreview: String /* "PlayMode_InMobilePreview" */
    var PlayMode_InTargetedMobilePreview: String /* "PlayMode_InTargetedMobilePreview" */
    var PlayMode_InVulkanPreview: String /* "PlayMode_InVulkanPreview" */
    var PlayMode_InNewProcess: String /* "PlayMode_InNewProcess" */
    var PlayMode_InVR: String /* "PlayMode_InVR" */
    var PlayMode_Simulate: String /* "PlayMode_Simulate" */
    var PlayMode_QuickLaunch: String /* "PlayMode_QuickLaunch" */
    var PlayMode_Count: String /* "PlayMode_Count" */
    var PlayMode_MAX: String /* "PlayMode_MAX" */
}

external open class PlayScreenResolution {
    open var Description: String
    open var Width: Number
    open var Height: Number
    open var AspectRatio: String
    open var bCanSwapAspectRatio: Boolean
    open var ProfileName: String
    open var ScaleFactor: Number
    open var LogicalHeight: Number
    open var LogicalWidth: Number
    open fun clone(): PlayScreenResolution

    companion object {
        fun C(Other: UObject): PlayScreenResolution
        fun C(Other: Any): PlayScreenResolution
    }
}

external open class LevelEditorPlaySettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var PlayFromHerePlayerStartClassName: String
    open var GameGetsMouseControl: Boolean
    open var UseMouseForTouch: Boolean
    open var ShowMouseControlLabel: Boolean
    open var MouseControlLabelPosition: String /* "LabelAnchorMode_TopLeft" | "LabelAnchorMode_TopCenter" | "LabelAnchorMode_TopRight" | "LabelAnchorMode_CenterLeft" | "LabelAnchorMode_Centered" | "LabelAnchorMode_CenterRight" | "LabelAnchorMode_BottomLeft" | "LabelAnchorMode_BottomCenter" | "LabelAnchorMode_BottomRight" | "LabelAnchorMode_MAX" */
    open var ViewportGetsHMDControl: Boolean
    open var ShouldMinimizeEditorOnVRPIE: Boolean
    open var AutoRecompileBlueprints: Boolean
    open var EnableGameSound: Boolean
    open var SoloAudioInFirstPIEClient: Boolean
    open var EnablePIEEnterAndExitSounds: Boolean
    open var PlayInEditorSoundQualityLevel: Number
    open var bUseNonRealtimeAudioDevice: Boolean
    open var bOnlyLoadVisibleLevelsInPIE: Boolean
    open var bPreferToStreamLevelsInPIE: Boolean
    open var NewWindowWidth: Number
    open var NewWindowHeight: Number
    open var NewWindowPosition: IntPoint
    open var CenterNewWindow: Boolean
    open var PIEAlwaysOnTop: Boolean
    open var DisableStandaloneSound: Boolean
    open var AdditionalLaunchParameters: String
    open var BuildGameBeforeLaunch: String /* "PlayOnBuild_Always" | "PlayOnBuild_Never" | "PlayOnBuild_Default" | "PlayOnBuild_IfEditorBuiltLocally" | "PlayOnBuild_MAX" */
    open var LaunchConfiguration: String /* "LaunchConfig_Default" | "LaunchConfig_Debug" | "LaunchConfig_Development" | "LaunchConfig_Test" | "LaunchConfig_Shipping" | "LaunchConfig_MAX" */
    open var PackFilesForLaunch: String /* "NoPak" | "PakNoCompress" | "PakCompress" | "EPlayOnPakFileMode_MAX" */
    open var bAutoCompileBlueprintsOnLaunch: Boolean
    open var bLaunchSeparateServer: Boolean
    open var PlayNetMode: String /* "PIE_Standalone" | "PIE_ListenServer" | "PIE_Client" | "PIE_MAX" */
    open var RunUnderOneProcess: Boolean
    open var PlayNetDedicated: Boolean
    open var PlayNumberOfClients: Number
    open var ServerPort: Any
    open var ClientWindowWidth: Number
    open var AutoConnectToServer: Boolean
    open var RouteGamepadToSecondWindow: Boolean
    open var CreateAudioDeviceForEveryPlayer: Boolean
    open var ClientWindowHeight: Number
    open var ServerMapNameOverride: String
    open var AdditionalServerGameOptions: String
    open var AdditionalLaunchOptions: String
    open var bShowServerDebugDrawingByDefault: Boolean
    open var ServerDebugDrawingColorTintStrength: Number
    open var ServerDebugDrawingColorTint: LinearColor
    open var AdditionalServerLaunchParameters: String
    open var ServerFixedFPS: Number
    open var ClientFixedFPS: Array<Number>
    open var NetworkEmulationSettings: LevelEditorPlayNetworkEmulationSettings
    open var LastSize: IntPoint
    open var MultipleInstancePositions: Array<IntPoint>
    open var LastExecutedLaunchDevice: String
    open var LastExecutedLaunchName: String
    open var LastExecutedLaunchModeType: String /* "LaunchMode_OnDevice" | "LaunchMode_MAX" */
    open var LastExecutedPlayModeLocation: String /* "PlayLocation_CurrentCameraLocation" | "PlayLocation_DefaultPlayerStart" | "PlayLocation_MAX" */
    open var LastExecutedPlayModeType: String /* "PlayMode_InViewPort" | "PlayMode_InEditorFloating" | "PlayMode_InMobilePreview" | "PlayMode_InTargetedMobilePreview" | "PlayMode_InVulkanPreview" | "PlayMode_InNewProcess" | "PlayMode_InVR" | "PlayMode_Simulate" | "PlayMode_QuickLaunch" | "PlayMode_Count" | "PlayMode_MAX" */
    open var LastExecutedPIEPreviewDevice: String
    open var LaptopScreenResolutions: Array<PlayScreenResolution>
    open var MonitorScreenResolutions: Array<PlayScreenResolution>
    open var PhoneScreenResolutions: Array<PlayScreenResolution>
    open var TabletScreenResolutions: Array<PlayScreenResolution>
    open var TelevisionScreenResolutions: Array<PlayScreenResolution>
    open var DeviceToEmulate: String
    open var PIESafeZoneOverride: Margin
    open var CustomUnsafeZoneStarts: Array<Vector2D>
    open var CustomUnsafeZoneDimensions: Array<Vector2D>

    companion object {
        fun Load(ResourceName: String): LevelEditorPlaySettings
        fun Find(Outer: UObject, ResourceName: String): LevelEditorPlaySettings
        fun GetDefaultObject(): LevelEditorPlaySettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelEditorPlaySettings
        fun C(Other: UObject): LevelEditorPlaySettings
        fun C(Other: Any): LevelEditorPlaySettings
    }
}

external object EWASDType {
    var WASD_Always: String /* "WASD_Always" */
    var WASD_RMBOnly: String /* "WASD_RMBOnly" */
    var WASD_Never: String /* "WASD_Never" */
    var WASD_MAX: String /* "WASD_MAX" */
}

external object ELandscapeFoliageEditorControlType {
    var IgnoreCtrl: String /* "IgnoreCtrl" */
    var RequireCtrl: String /* "RequireCtrl" */
    var RequireNoCtrl: String /* "RequireNoCtrl" */
    var ELandscapeFoliageEditorControlType_MAX: String /* "ELandscapeFoliageEditorControlType_MAX" */
}

external object EScrollGestureDirection {
    var UseSystemSetting: String /* "UseSystemSetting" */
    var Standard: String /* "Standard" */
    var Natural: String /* "Natural" */
    var EScrollGestureDirection_MAX: String /* "EScrollGestureDirection_MAX" */
}

external open class SnapToSurfaceSettings {
    open var bEnabled: Boolean
    open var SnapOffsetExtent: Number
    open var bSnapRotation: Boolean
    open fun clone(): SnapToSurfaceSettings

    companion object {
        fun C(Other: UObject): SnapToSurfaceSettings
        fun C(Other: Any): SnapToSurfaceSettings
    }
}

external object ERotationGridMode {
    var GridMode_DivisionsOf360: String /* "GridMode_DivisionsOf360" */
    var GridMode_Common: String /* "GridMode_Common" */
    var GridMode_MAX: String /* "GridMode_MAX" */
}

external object EMeasuringToolUnits {
    var MeasureUnits_Centimeters: String /* "MeasureUnits_Centimeters" */
    var MeasureUnits_Meters: String /* "MeasureUnits_Meters" */
    var MeasureUnits_Kilometers: String /* "MeasureUnits_Kilometers" */
    var MeasureUnits_MAX: String /* "MeasureUnits_MAX" */
}

external object ELevelViewportType {
    var LVT_OrthoXY: String /* "LVT_OrthoXY" */
    var LVT_OrthoXZ: String /* "LVT_OrthoXZ" */
    var LVT_OrthoYZ: String /* "LVT_OrthoYZ" */
    var LVT_Perspective: String /* "LVT_Perspective" */
    var LVT_OrthoFreelook: String /* "LVT_OrthoFreelook" */
    var LVT_OrthoNegativeXY: String /* "LVT_OrthoNegativeXY" */
    var LVT_OrthoNegativeXZ: String /* "LVT_OrthoNegativeXZ" */
    var LVT_OrthoNegativeYZ: String /* "LVT_OrthoNegativeYZ" */
    var LVT_MAX: String /* "LVT_MAX" */
    var LVT_None: String /* "LVT_None" */
}

external object EViewModeIndex {
    var VMI_BrushWireframe: String /* "VMI_BrushWireframe" */
    var VMI_Wireframe: String /* "VMI_Wireframe" */
    var VMI_Unlit: String /* "VMI_Unlit" */
    var VMI_Lit: String /* "VMI_Lit" */
    var VMI_Lit_DetailLighting: String /* "VMI_Lit_DetailLighting" */
    var VMI_LightingOnly: String /* "VMI_LightingOnly" */
    var VMI_LightComplexity: String /* "VMI_LightComplexity" */
    var VMI_ShaderComplexity: String /* "VMI_ShaderComplexity" */
    var VMI_LightmapDensity: String /* "VMI_LightmapDensity" */
    var VMI_LitLightmapDensity: String /* "VMI_LitLightmapDensity" */
    var VMI_ReflectionOverride: String /* "VMI_ReflectionOverride" */
    var VMI_VisualizeBuffer: String /* "VMI_VisualizeBuffer" */
    var VMI_StationaryLightOverlap: String /* "VMI_StationaryLightOverlap" */
    var VMI_CollisionPawn: String /* "VMI_CollisionPawn" */
    var VMI_CollisionVisibility: String /* "VMI_CollisionVisibility" */
    var VMI_LODColoration: String /* "VMI_LODColoration" */
    var VMI_QuadOverdraw: String /* "VMI_QuadOverdraw" */
    var VMI_PrimitiveDistanceAccuracy: String /* "VMI_PrimitiveDistanceAccuracy" */
    var VMI_MeshUVDensityAccuracy: String /* "VMI_MeshUVDensityAccuracy" */
    var VMI_ShaderComplexityWithQuadOverdraw: String /* "VMI_ShaderComplexityWithQuadOverdraw" */
    var VMI_HLODColoration: String /* "VMI_HLODColoration" */
    var VMI_GroupLODColoration: String /* "VMI_GroupLODColoration" */
    var VMI_MaterialTextureScaleAccuracy: String /* "VMI_MaterialTextureScaleAccuracy" */
    var VMI_RequiredTextureResolution: String /* "VMI_RequiredTextureResolution" */
    var VMI_PathTracing: String /* "VMI_PathTracing" */
    var VMI_RayTracingDebug: String /* "VMI_RayTracingDebug" */
    var VMI_VisualizeNanite: String /* "VMI_VisualizeNanite" */
    var VMI_VirtualTexturePendingMips: String /* "VMI_VirtualTexturePendingMips" */
    var VMI_VisualizeLumen: String /* "VMI_VisualizeLumen" */
    var VMI_VisualizeVirtualShadowMap: String /* "VMI_VisualizeVirtualShadowMap" */
    var VMI_Max: String /* "VMI_Max" */
    var VMI_Unknown: String /* "VMI_Unknown" */
}

external open class ExposureSettings {
    open var FixedEV100: Number
    open var bFixed: Boolean
    open fun clone(): ExposureSettings

    companion object {
        fun C(Other: UObject): ExposureSettings
        fun C(Other: Any): ExposureSettings
    }
}

external open class LevelEditorViewportInstanceSettings {
    open var ViewportType: String /* "LVT_OrthoXY" | "LVT_OrthoXZ" | "LVT_OrthoYZ" | "LVT_Perspective" | "LVT_OrthoFreelook" | "LVT_OrthoNegativeXY" | "LVT_OrthoNegativeXZ" | "LVT_OrthoNegativeYZ" | "LVT_MAX" | "LVT_None" */
    open var PerspViewModeIndex: String /* "VMI_BrushWireframe" | "VMI_Wireframe" | "VMI_Unlit" | "VMI_Lit" | "VMI_Lit_DetailLighting" | "VMI_LightingOnly" | "VMI_LightComplexity" | "VMI_ShaderComplexity" | "VMI_LightmapDensity" | "VMI_LitLightmapDensity" | "VMI_ReflectionOverride" | "VMI_VisualizeBuffer" | "VMI_StationaryLightOverlap" | "VMI_CollisionPawn" | "VMI_CollisionVisibility" | "VMI_LODColoration" | "VMI_QuadOverdraw" | "VMI_PrimitiveDistanceAccuracy" | "VMI_MeshUVDensityAccuracy" | "VMI_ShaderComplexityWithQuadOverdraw" | "VMI_HLODColoration" | "VMI_GroupLODColoration" | "VMI_MaterialTextureScaleAccuracy" | "VMI_RequiredTextureResolution" | "VMI_PathTracing" | "VMI_RayTracingDebug" | "VMI_VisualizeNanite" | "VMI_VirtualTexturePendingMips" | "VMI_VisualizeLumen" | "VMI_VisualizeVirtualShadowMap" | "VMI_Max" | "VMI_Unknown" */
    open var OrthoViewModeIndex: String /* "VMI_BrushWireframe" | "VMI_Wireframe" | "VMI_Unlit" | "VMI_Lit" | "VMI_Lit_DetailLighting" | "VMI_LightingOnly" | "VMI_LightComplexity" | "VMI_ShaderComplexity" | "VMI_LightmapDensity" | "VMI_LitLightmapDensity" | "VMI_ReflectionOverride" | "VMI_VisualizeBuffer" | "VMI_StationaryLightOverlap" | "VMI_CollisionPawn" | "VMI_CollisionVisibility" | "VMI_LODColoration" | "VMI_QuadOverdraw" | "VMI_PrimitiveDistanceAccuracy" | "VMI_MeshUVDensityAccuracy" | "VMI_ShaderComplexityWithQuadOverdraw" | "VMI_HLODColoration" | "VMI_GroupLODColoration" | "VMI_MaterialTextureScaleAccuracy" | "VMI_RequiredTextureResolution" | "VMI_PathTracing" | "VMI_RayTracingDebug" | "VMI_VisualizeNanite" | "VMI_VirtualTexturePendingMips" | "VMI_VisualizeLumen" | "VMI_VisualizeVirtualShadowMap" | "VMI_Max" | "VMI_Unknown" */
    open var EditorShowFlagsString: String
    open var GameShowFlagsString: String
    open var BufferVisualizationMode: String
    open var NaniteVisualizationMode: String
    open var LumenVisualizationMode: String
    open var VirtualShadowMapVisualizationMode: String
    open var RayTracingDebugVisualizationMode: String
    open var ExposureSettings: ExposureSettings
    open var FOVAngle: Number
    open var FarViewPlane: Number
    open var bIsRealtime: Boolean
    open var bShowFPS: Boolean
    open var bShowOnScreenStats: Boolean
    open var EnabledStats: Array<String>
    open var bShowFullToolbar: Boolean
    open fun clone(): LevelEditorViewportInstanceSettings

    companion object {
        fun C(Other: UObject): LevelEditorViewportInstanceSettings
        fun C(Other: Any): LevelEditorViewportInstanceSettings
    }
}

external open class LevelEditorViewportInstanceSettingsKeyValuePair {
    open var ConfigName: String
    open var ConfigSettings: LevelEditorViewportInstanceSettings
    open fun clone(): LevelEditorViewportInstanceSettingsKeyValuePair

    companion object {
        fun C(Other: UObject): LevelEditorViewportInstanceSettingsKeyValuePair
        fun C(Other: Any): LevelEditorViewportInstanceSettingsKeyValuePair
    }
}

external open class LevelEditorViewportSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var FlightCameraControlType: String /* "WASD_Always" | "WASD_RMBOnly" | "WASD_Never" | "WASD_MAX" */
    open var FlightCameraControlExperimentalNavigation: Boolean
    open var LandscapeEditorControlType: String /* "IgnoreCtrl" | "RequireCtrl" | "RequireNoCtrl" | "ELandscapeFoliageEditorControlType_MAX" */
    open var FoliageEditorControlType: String /* "IgnoreCtrl" | "RequireCtrl" | "RequireNoCtrl" | "ELandscapeFoliageEditorControlType_MAX" */
    open var bPanMovesCanvas: Boolean
    open var bCenterZoomAroundCursor: Boolean
    open var MinimumOrthographicZoom: Number
    open var bAllowTranslateRotateZWidget: Boolean
    open var bAllowArcballRotate: Boolean
    open var bAllowScreenRotate: Boolean
    open var bClickBSPSelectsBrush: Boolean
    open var CameraSpeed: Number
    open var CameraSpeedScalar: Number
    open var MouseScrollCameraSpeed: Number
    open var MouseSensitivty: Number
    open var bInvertMouseLookYAxis: Boolean
    open var bInvertOrbitYAxis: Boolean
    open var bInvertMiddleMousePan: Boolean
    open var bInvertRightMouseDollyYAxis: Boolean
    open var bUseAbsoluteTranslation: Boolean
    open var bLevelStreamingVolumePrevis: Boolean
    open var bUseUE3OrbitControls: Boolean
    open var ScrollGestureDirectionFor3DViewports: String /* "UseSystemSetting" | "Standard" | "Natural" | "EScrollGestureDirection_MAX" */
    open var ScrollGestureDirectionForOrthoViewports: String /* "UseSystemSetting" | "Standard" | "Natural" | "EScrollGestureDirection_MAX" */
    open var bLevelEditorJoystickControls: Boolean
    open var bUseDistanceScaledCameraSpeed: Boolean
    open var bOrbitCameraAroundSelection: Boolean
    open var bUsePowerOf2SnapSize: Boolean
    open var DecimalGridSizes: Array<Number>
    open var DecimalGridIntervals: Array<Number>
    open var Pow2GridSizes: Array<Number>
    open var Pow2GridIntervals: Array<Number>
    open var CommonRotGridSizes: Array<Number>
    open var DivisionsOf360RotGridSizes: Array<Number>
    open var ScalingGridSizes: Array<Number>
    open var GridEnabled: Boolean
    open var RotGridEnabled: Boolean
    open var SnapScaleEnabled: Boolean
    open var SnapToSurface: SnapToSurfaceSettings
    open var bUsePercentageBasedScaling: Boolean
    open var bEnableLayerSnap: Boolean
    open var ActiveSnapLayerIndex: Number
    open var bEnableActorSnap: Boolean
    open var ActorSnapScale: Number
    open var ActorSnapDistance: Number
    open var bSnapVertices: Boolean
    open var SnapDistance: Number
    open var CurrentPosGridSize: Number
    open var CurrentRotGridSize: Number
    open var CurrentScalingGridSize: Number
    open var PreserveNonUniformScale: Boolean
    open var CurrentRotGridMode: String /* "GridMode_DivisionsOf360" | "GridMode_Common" | "GridMode_MAX" */
    open var AspectRatioAxisConstraint: String /* "AspectRatio_MaintainYFOV" | "AspectRatio_MaintainXFOV" | "AspectRatio_MajorAxisFOV" | "AspectRatio_MAX" */
    open var bEnableViewportHoverFeedback: Boolean
    open var bHighlightWithBrackets: Boolean
    open var bUseLinkedOrthographicViewports: Boolean
    open var bStrictBoxSelection: Boolean
    open var bTransparentBoxSelection: Boolean
    open var bUseSelectionOutline: Boolean
    open var SelectionHighlightIntensity: Number
    open var BSPSelectionHighlightIntensity: Number
    open var bEnableViewportCameraToUpdateFromPIV: Boolean
    open var bPreviewSelectedCameras: Boolean
    open var CameraPreviewSize: Number
    open var BackgroundDropDistance: Number
    open var PreviewMeshes: Array<SoftObjectPath>
    open var BillboardScale: Number
    open var TransformWidgetSizeAdjustment: Number
    open var bSaveEngineStats: Boolean
    open var MeasuringToolUnits: String /* "MeasureUnits_Centimeters" | "MeasureUnits_Meters" | "MeasureUnits_Kilometers" | "MeasureUnits_MAX" */
    open var SelectedSplinePointSizeAdjustment: Number
    open var SplineLineThicknessAdjustment: Number
    open var SplineTangentHandleSizeAdjustment: Number
    open var SplineTangentScale: Number
    open var LastInViewportMenuLocation: Vector2D
    open var PerInstanceSettings: Array<LevelEditorViewportInstanceSettingsKeyValuePair>

    companion object {
        fun Load(ResourceName: String): LevelEditorViewportSettings
        fun Find(Outer: UObject, ResourceName: String): LevelEditorViewportSettings
        fun GetDefaultObject(): LevelEditorViewportSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelEditorViewportSettings
        fun C(Other: UObject): LevelEditorViewportSettings
        fun C(Other: Any): LevelEditorViewportSettings
    }
}

external open class LevelExporterFBX : ExporterFBX {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LevelExporterFBX
        fun Find(Outer: UObject, ResourceName: String): LevelExporterFBX
        fun GetDefaultObject(): LevelExporterFBX
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelExporterFBX
        fun C(Other: UObject): LevelExporterFBX
        fun C(Other: Any): LevelExporterFBX
    }
}

external open class LevelExporterLOD : Exporter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LevelExporterLOD
        fun Find(Outer: UObject, ResourceName: String): LevelExporterLOD
        fun GetDefaultObject(): LevelExporterLOD
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelExporterLOD
        fun C(Other: UObject): LevelExporterLOD
        fun C(Other: Any): LevelExporterLOD
    }
}

external open class LevelExporterOBJ : Exporter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LevelExporterOBJ
        fun Find(Outer: UObject, ResourceName: String): LevelExporterOBJ
        fun GetDefaultObject(): LevelExporterOBJ
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelExporterOBJ
        fun C(Other: UObject): LevelExporterOBJ
        fun C(Other: Any): LevelExporterOBJ
    }
}

external open class LevelExporterSTL : Exporter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LevelExporterSTL
        fun Find(Outer: UObject, ResourceName: String): LevelExporterSTL
        fun GetDefaultObject(): LevelExporterSTL
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelExporterSTL
        fun C(Other: UObject): LevelExporterSTL
        fun C(Other: Any): LevelExporterSTL
    }
}

external open class LevelExporterT3D : Exporter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LevelExporterT3D
        fun Find(Outer: UObject, ResourceName: String): LevelExporterT3D
        fun GetDefaultObject(): LevelExporterT3D
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelExporterT3D
        fun C(Other: UObject): LevelExporterT3D
        fun C(Other: Any): LevelExporterT3D
    }
}

external open class LevelFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LevelFactory
        fun Find(Outer: UObject, ResourceName: String): LevelFactory
        fun GetDefaultObject(): LevelFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelFactory
        fun C(Other: UObject): LevelFactory
        fun C(Other: Any): LevelFactory
    }
}

external open class LevelThumbnailRenderer : DefaultSizedThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LevelThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): LevelThumbnailRenderer
        fun GetDefaultObject(): LevelThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelThumbnailRenderer
        fun C(Other: UObject): LevelThumbnailRenderer
        fun C(Other: Any): LevelThumbnailRenderer
    }
}

external open class LightmassDebugOptions {
    open var bDebugMode: Boolean
    open var bStatsEnabled: Boolean
    open var bGatherBSPSurfacesAcrossComponents: Boolean
    open var CoplanarTolerance: Number
    open var bUseImmediateImport: Boolean
    open var bImmediateProcessMappings: Boolean
    open var bSortMappings: Boolean
    open var bDumpBinaryFiles: Boolean
    open var bDebugMaterials: Boolean
    open var bPadMappings: Boolean
    open var bDebugPaddings: Boolean
    open var bOnlyCalcDebugTexelMappings: Boolean
    open var bUseRandomColors: Boolean
    open var bColorBordersGreen: Boolean
    open var bColorByExecutionTime: Boolean
    open var ExecutionTimeDivisor: Number
    open fun clone(): LightmassDebugOptions

    companion object {
        fun C(Other: UObject): LightmassDebugOptions
        fun C(Other: Any): LightmassDebugOptions
    }
}

external open class SwarmDebugOptions {
    open var bDistributionEnabled: Boolean
    open var bForceContentExport: Boolean
    open var bInitialized: Boolean
    open fun clone(): SwarmDebugOptions

    companion object {
        fun C(Other: UObject): SwarmDebugOptions
        fun C(Other: Any): SwarmDebugOptions
    }
}

external open class LightmassOptionsObject : UObject {
    constructor()
    constructor(Outer: UObject)
    open var DebugSettings: LightmassDebugOptions
    open var SwarmSettings: SwarmDebugOptions

    companion object {
        fun Load(ResourceName: String): LightmassOptionsObject
        fun Find(Outer: UObject, ResourceName: String): LightmassOptionsObject
        fun GetDefaultObject(): LightmassOptionsObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LightmassOptionsObject
        fun C(Other: UObject): LightmassOptionsObject
        fun C(Other: Any): LightmassOptionsObject
    }
}

external open class LightWeightInstanceFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var ParentClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): LightWeightInstanceFactory
        fun Find(Outer: UObject, ResourceName: String): LightWeightInstanceFactory
        fun GetDefaultObject(): LightWeightInstanceFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LightWeightInstanceFactory
        fun C(Other: UObject): LightWeightInstanceFactory
        fun C(Other: Any): LightWeightInstanceFactory
    }
}

external open class LinearStairBuilder : EditorBrushBuilder {
    constructor()
    constructor(Outer: UObject)
    open var StepLength: Number
    open var StepHeight: Number
    open var StepWidth: Number
    open var NumSteps: Number
    open var AddToFirstStep: Number
    open var GroupName: String

    companion object {
        fun Load(ResourceName: String): LinearStairBuilder
        fun Find(Outer: UObject, ResourceName: String): LinearStairBuilder
        fun GetDefaultObject(): LinearStairBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LinearStairBuilder
        fun C(Other: UObject): LinearStairBuilder
        fun C(Other: Any): LinearStairBuilder
    }
}

external open class ListMaterialsUsedWithMeshEmittersCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ListMaterialsUsedWithMeshEmittersCommandlet
        fun Find(Outer: UObject, ResourceName: String): ListMaterialsUsedWithMeshEmittersCommandlet
        fun GetDefaultObject(): ListMaterialsUsedWithMeshEmittersCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ListMaterialsUsedWithMeshEmittersCommandlet
        fun C(Other: UObject): ListMaterialsUsedWithMeshEmittersCommandlet
        fun C(Other: Any): ListMaterialsUsedWithMeshEmittersCommandlet
    }
}

external open class ListStaticMeshesImportedFromSpeedTreesCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ListStaticMeshesImportedFromSpeedTreesCommandlet
        fun Find(Outer: UObject, ResourceName: String): ListStaticMeshesImportedFromSpeedTreesCommandlet
        fun GetDefaultObject(): ListStaticMeshesImportedFromSpeedTreesCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ListStaticMeshesImportedFromSpeedTreesCommandlet
        fun C(Other: UObject): ListStaticMeshesImportedFromSpeedTreesCommandlet
        fun C(Other: Any): ListStaticMeshesImportedFromSpeedTreesCommandlet
    }
}

external open class LoadPackageCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LoadPackageCommandlet
        fun Find(Outer: UObject, ResourceName: String): LoadPackageCommandlet
        fun GetDefaultObject(): LoadPackageCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LoadPackageCommandlet
        fun C(Other: UObject): LoadPackageCommandlet
        fun C(Other: Any): LoadPackageCommandlet
    }
}

external open class MakeBinaryConfigCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MakeBinaryConfigCommandlet
        fun Find(Outer: UObject, ResourceName: String): MakeBinaryConfigCommandlet
        fun GetDefaultObject(): MakeBinaryConfigCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MakeBinaryConfigCommandlet
        fun C(Other: UObject): MakeBinaryConfigCommandlet
        fun C(Other: Any): MakeBinaryConfigCommandlet
    }
}

external open class EditorParameterGroup {
    open var GroupName: String
    open var GroupAssociation: String /* "LayerParameter" | "BlendParameter" | "GlobalParameter" | "EMaterialParameterAssociation_MAX" */
    open var Parameters: Array<DEditorParameterValue>
    open var GroupSortPriority: Number
    open fun clone(): EditorParameterGroup

    companion object {
        fun C(Other: UObject): EditorParameterGroup
        fun C(Other: Any): EditorParameterGroup
    }
}

external open class MaterialFunctionInstance : MaterialFunctionInterface {
    constructor()
    constructor(Outer: UObject)
    open var Parent: MaterialFunctionInterface
    open var Base: MaterialFunctionInterface
    open var ScalarParameterValues: Array<ScalarParameterValue>
    open var VectorParameterValues: Array<VectorParameterValue>
    open var DoubleVectorParameterValues: Array<DoubleVectorParameterValue>
    open var TextureParameterValues: Array<TextureParameterValue>
    open var FontParameterValues: Array<FontParameterValue>
    open var StaticSwitchParameterValues: Array<StaticSwitchParameter>
    open var StaticComponentMaskParameterValues: Array<StaticComponentMaskParameter>
    open var RuntimeVirtualTextureParameterValues: Array<RuntimeVirtualTextureParameterValue>
    open var PreviewMaterial: MaterialInstanceConstant

    companion object {
        fun Load(ResourceName: String): MaterialFunctionInstance
        fun Find(Outer: UObject, ResourceName: String): MaterialFunctionInstance
        fun GetDefaultObject(): MaterialFunctionInstance
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialFunctionInstance
        fun C(Other: UObject): MaterialFunctionInstance
        fun C(Other: Any): MaterialFunctionInstance
    }
}

external open class LightmassParameterValue {
    open var bOverride: Boolean
    open fun clone(): LightmassParameterValue

    companion object {
        fun C(Other: UObject): LightmassParameterValue
        fun C(Other: Any): LightmassParameterValue
    }
}

external open class LightmassBooleanParameterValue : LightmassParameterValue {
    open var ParameterValue: Boolean
    override fun clone(): LightmassBooleanParameterValue

    companion object {
        fun C(Other: UObject): LightmassBooleanParameterValue
        fun C(Other: Any): LightmassBooleanParameterValue
    }
}

external open class LightmassScalarParameterValue : LightmassParameterValue {
    open var ParameterValue: Number
    override fun clone(): LightmassScalarParameterValue

    companion object {
        fun C(Other: UObject): LightmassScalarParameterValue
        fun C(Other: Any): LightmassScalarParameterValue
    }
}

external open class LightmassParameterizedMaterialSettings {
    open var CastShadowAsMasked: LightmassBooleanParameterValue
    open var EmissiveBoost: LightmassScalarParameterValue
    open var DiffuseBoost: LightmassScalarParameterValue
    open var ExportResolutionScale: LightmassScalarParameterValue
    open fun clone(): LightmassParameterizedMaterialSettings

    companion object {
        fun C(Other: UObject): LightmassParameterizedMaterialSettings
        fun C(Other: Any): LightmassParameterizedMaterialSettings
    }
}

external open class MaterialEditorInstanceConstant : UObject {
    constructor()
    constructor(Outer: UObject)
    open var PhysMaterial: PhysicalMaterial
    open var Parent: MaterialInterface
    open var ParameterGroups: Array<EditorParameterGroup>
    open var RefractionDepthBias: Number
    open var SubsurfaceProfile: SubsurfaceProfile
    open var bOverrideSubsurfaceProfile: Boolean
    open var bOverrideBaseProperties: Boolean
    open var bIsFunctionPreviewMaterial: Boolean
    open var bIsFunctionInstanceDirty: Boolean
    open var BasePropertyOverrides: MaterialInstanceBasePropertyOverrides
    open var SourceInstance: MaterialInstanceConstant
    open var SourceFunction: MaterialFunctionInstance
    open var VisibleExpressions: Array<MaterialParameterInfo>
    open var LightmassSettings: LightmassParameterizedMaterialSettings
    open var bUseOldStyleMICEditorGroups: Boolean
    open var StoredLayerPreviews: Array<MaterialInstanceConstant>
    open var StoredBlendPreviews: Array<MaterialInstanceConstant>

    companion object {
        fun Load(ResourceName: String): MaterialEditorInstanceConstant
        fun Find(Outer: UObject, ResourceName: String): MaterialEditorInstanceConstant
        fun GetDefaultObject(): MaterialEditorInstanceConstant
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialEditorInstanceConstant
        fun C(Other: UObject): MaterialEditorInstanceConstant
        fun C(Other: Any): MaterialEditorInstanceConstant
    }
}

external open class MaterialEditorMeshComponent : StaticMeshComponent {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialEditorMeshComponent
        fun Find(Outer: UObject, ResourceName: String): MaterialEditorMeshComponent
        fun GetDefaultObject(): MaterialEditorMeshComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialEditorMeshComponent
        fun C(Other: UObject): MaterialEditorMeshComponent
        fun C(Other: Any): MaterialEditorMeshComponent
    }
}

external open class MaterialEditorOptions : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bShowGrid: Boolean
    open var bHideUnusedConnectorsSetting: Boolean
    open var bRealtimeMaterialViewport: Boolean
    open var bRealtimeExpressionViewport: Boolean
    open var bLivePreviewUpdate: Boolean
    open var bHideUnrelatedNodes: Boolean
    open var bAlwaysRefreshAllPreviews: Boolean
    open var bUseUnsortedMenus: Boolean
    open var FavoriteExpressions: Array<String>

    companion object {
        fun Load(ResourceName: String): MaterialEditorOptions
        fun Find(Outer: UObject, ResourceName: String): MaterialEditorOptions
        fun GetDefaultObject(): MaterialEditorOptions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialEditorOptions
        fun C(Other: UObject): MaterialEditorOptions
        fun C(Other: Any): MaterialEditorOptions
    }
}

external open class MaterialEditorPreviewParameters : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ParameterGroups: Array<EditorParameterGroup>
    open var PreviewMaterial: Material
    open var OriginalFunction: MaterialFunction
    open var OriginalMaterial: Material
    open var StoredLayerPreviews: Array<MaterialInstanceConstant>
    open var StoredBlendPreviews: Array<MaterialInstanceConstant>

    companion object {
        fun Load(ResourceName: String): MaterialEditorPreviewParameters
        fun Find(Outer: UObject, ResourceName: String): MaterialEditorPreviewParameters
        fun GetDefaultObject(): MaterialEditorPreviewParameters
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialEditorPreviewParameters
        fun C(Other: UObject): MaterialEditorPreviewParameters
        fun C(Other: Any): MaterialEditorPreviewParameters
    }
}

external open class MaterialFactoryNew : Factory {
    constructor()
    constructor(Outer: UObject)
    open var InitialTexture: Texture

    companion object {
        fun Load(ResourceName: String): MaterialFactoryNew
        fun Find(Outer: UObject, ResourceName: String): MaterialFactoryNew
        fun GetDefaultObject(): MaterialFactoryNew
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialFactoryNew
        fun C(Other: UObject): MaterialFactoryNew
        fun C(Other: Any): MaterialFactoryNew
    }
}

external open class MaterialFunctionFactoryNew : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialFunctionFactoryNew
        fun Find(Outer: UObject, ResourceName: String): MaterialFunctionFactoryNew
        fun GetDefaultObject(): MaterialFunctionFactoryNew
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialFunctionFactoryNew
        fun C(Other: UObject): MaterialFunctionFactoryNew
        fun C(Other: Any): MaterialFunctionFactoryNew
    }
}

external open class MaterialFunctionInstanceFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var InitialParent: MaterialFunctionInterface

    companion object {
        fun Load(ResourceName: String): MaterialFunctionInstanceFactory
        fun Find(Outer: UObject, ResourceName: String): MaterialFunctionInstanceFactory
        fun GetDefaultObject(): MaterialFunctionInstanceFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialFunctionInstanceFactory
        fun C(Other: UObject): MaterialFunctionInstanceFactory
        fun C(Other: Any): MaterialFunctionInstanceFactory
    }
}

external open class MaterialFunctionMaterialLayerInstanceFactory : MaterialFunctionInstanceFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialFunctionMaterialLayerInstanceFactory
        fun Find(Outer: UObject, ResourceName: String): MaterialFunctionMaterialLayerInstanceFactory
        fun GetDefaultObject(): MaterialFunctionMaterialLayerInstanceFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialFunctionMaterialLayerInstanceFactory
        fun C(Other: UObject): MaterialFunctionMaterialLayerInstanceFactory
        fun C(Other: Any): MaterialFunctionMaterialLayerInstanceFactory
    }
}

external open class MaterialFunctionMaterialLayerBlendInstanceFactory : MaterialFunctionInstanceFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialFunctionMaterialLayerBlendInstanceFactory
        fun Find(Outer: UObject, ResourceName: String): MaterialFunctionMaterialLayerBlendInstanceFactory
        fun GetDefaultObject(): MaterialFunctionMaterialLayerBlendInstanceFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialFunctionMaterialLayerBlendInstanceFactory
        fun C(Other: UObject): MaterialFunctionMaterialLayerBlendInstanceFactory
        fun C(Other: Any): MaterialFunctionMaterialLayerBlendInstanceFactory
    }
}

external open class MaterialFunctionMaterialLayerBlendFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialFunctionMaterialLayerBlendFactory
        fun Find(Outer: UObject, ResourceName: String): MaterialFunctionMaterialLayerBlendFactory
        fun GetDefaultObject(): MaterialFunctionMaterialLayerBlendFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialFunctionMaterialLayerBlendFactory
        fun C(Other: UObject): MaterialFunctionMaterialLayerBlendFactory
        fun C(Other: Any): MaterialFunctionMaterialLayerBlendFactory
    }
}

external open class MaterialFunctionMaterialLayerFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialFunctionMaterialLayerFactory
        fun Find(Outer: UObject, ResourceName: String): MaterialFunctionMaterialLayerFactory
        fun GetDefaultObject(): MaterialFunctionMaterialLayerFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialFunctionMaterialLayerFactory
        fun C(Other: UObject): MaterialFunctionMaterialLayerFactory
        fun C(Other: Any): MaterialFunctionMaterialLayerFactory
    }
}

external open class MaterialFunctionThumbnailRenderer : DefaultSizedThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialFunctionThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): MaterialFunctionThumbnailRenderer
        fun GetDefaultObject(): MaterialFunctionThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialFunctionThumbnailRenderer
        fun C(Other: UObject): MaterialFunctionThumbnailRenderer
        fun C(Other: Any): MaterialFunctionThumbnailRenderer
    }
}

external open class MaterialGraphNode_Base : EdGraphNode {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialGraphNode_Base
        fun Find(Outer: UObject, ResourceName: String): MaterialGraphNode_Base
        fun GetDefaultObject(): MaterialGraphNode_Base
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialGraphNode_Base
        fun C(Other: UObject): MaterialGraphNode_Base
        fun C(Other: Any): MaterialGraphNode_Base
    }
}

external open class MaterialGraphNode_Root : MaterialGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var Material: Material

    companion object {
        fun Load(ResourceName: String): MaterialGraphNode_Root
        fun Find(Outer: UObject, ResourceName: String): MaterialGraphNode_Root
        fun GetDefaultObject(): MaterialGraphNode_Root
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialGraphNode_Root
        fun C(Other: UObject): MaterialGraphNode_Root
        fun C(Other: Any): MaterialGraphNode_Root
    }
}

external open class MaterialGraph : EdGraph {
    constructor()
    constructor(Outer: UObject)
    open var Material: Material
    open var MaterialFunction: MaterialFunction
    open var RootNode: MaterialGraphNode_Root
    open var SubgraphExpression: MaterialExpression
    open var OriginalMaterialFullName: String

    companion object {
        fun Load(ResourceName: String): MaterialGraph
        fun Find(Outer: UObject, ResourceName: String): MaterialGraph
        fun GetDefaultObject(): MaterialGraph
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialGraph
        fun C(Other: UObject): MaterialGraph
        fun C(Other: Any): MaterialGraph
    }
}

external open class MaterialGraphNode : MaterialGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var MaterialExpression: MaterialExpression

    companion object {
        fun Load(ResourceName: String): MaterialGraphNode
        fun Find(Outer: UObject, ResourceName: String): MaterialGraphNode
        fun GetDefaultObject(): MaterialGraphNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialGraphNode
        fun C(Other: UObject): MaterialGraphNode
        fun C(Other: Any): MaterialGraphNode
    }
}

external open class MaterialGraphNode_Comment : EdGraphNode_Comment {
    constructor()
    constructor(Outer: UObject)
    open var MaterialExpressionComment: MaterialExpressionComment

    companion object {
        fun Load(ResourceName: String): MaterialGraphNode_Comment
        fun Find(Outer: UObject, ResourceName: String): MaterialGraphNode_Comment
        fun GetDefaultObject(): MaterialGraphNode_Comment
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialGraphNode_Comment
        fun C(Other: UObject): MaterialGraphNode_Comment
        fun C(Other: Any): MaterialGraphNode_Comment
    }
}

external open class MaterialGraphNode_Composite : MaterialGraphNode {
    constructor()
    constructor(Outer: UObject)
    open var BoundGraph: MaterialGraph

    companion object {
        fun Load(ResourceName: String): MaterialGraphNode_Composite
        fun Find(Outer: UObject, ResourceName: String): MaterialGraphNode_Composite
        fun GetDefaultObject(): MaterialGraphNode_Composite
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialGraphNode_Composite
        fun C(Other: UObject): MaterialGraphNode_Composite
        fun C(Other: Any): MaterialGraphNode_Composite
    }
}

external open class MaterialGraphNode_Knot : MaterialGraphNode {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialGraphNode_Knot
        fun Find(Outer: UObject, ResourceName: String): MaterialGraphNode_Knot
        fun GetDefaultObject(): MaterialGraphNode_Knot
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialGraphNode_Knot
        fun C(Other: UObject): MaterialGraphNode_Knot
        fun C(Other: Any): MaterialGraphNode_Knot
    }
}

external open class MaterialGraphNode_PinBase : MaterialGraphNode {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialGraphNode_PinBase
        fun Find(Outer: UObject, ResourceName: String): MaterialGraphNode_PinBase
        fun GetDefaultObject(): MaterialGraphNode_PinBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialGraphNode_PinBase
        fun C(Other: UObject): MaterialGraphNode_PinBase
        fun C(Other: Any): MaterialGraphNode_PinBase
    }
}

external open class MaterialGraphSchema : EdGraphSchema {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialGraphSchema
        fun Find(Outer: UObject, ResourceName: String): MaterialGraphSchema
        fun GetDefaultObject(): MaterialGraphSchema
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialGraphSchema
        fun C(Other: UObject): MaterialGraphSchema
        fun C(Other: Any): MaterialGraphSchema
    }
}

external interface `T$667` {
    var OutError: String
    var `$`: MaterialInterface
}

external open class MaterialImportHelpers : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialImportHelpers
        fun Find(Outer: UObject, ResourceName: String): MaterialImportHelpers
        fun GetDefaultObject(): MaterialImportHelpers
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialImportHelpers
        fun FindExistingMaterialFromSearchLocation(MaterialFullName: String, BasePackagePath: String, SearchLocation: String /* "Local" | "UnderParent" | "UnderRoot" | "AllAssets" | "DoNotSearch" | "EMaterialSearchLocation_MAX" */, OutError: String = definedExternally): `T$667`
        fun FindExistingMaterial(BasePath: String, MaterialFullName: String, bRecursivePaths: Boolean, OutError: String = definedExternally): `T$667`
        fun C(Other: UObject): MaterialImportHelpers
        fun C(Other: Any): MaterialImportHelpers
    }
}

external open class MaterialInstanceConstantFactoryNew : Factory {
    constructor()
    constructor(Outer: UObject)
    open var InitialParent: MaterialInterface

    companion object {
        fun Load(ResourceName: String): MaterialInstanceConstantFactoryNew
        fun Find(Outer: UObject, ResourceName: String): MaterialInstanceConstantFactoryNew
        fun GetDefaultObject(): MaterialInstanceConstantFactoryNew
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialInstanceConstantFactoryNew
        fun C(Other: UObject): MaterialInstanceConstantFactoryNew
        fun C(Other: Any): MaterialInstanceConstantFactoryNew
    }
}

external open class MaterialInstanceThumbnailRenderer : DefaultSizedThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialInstanceThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): MaterialInstanceThumbnailRenderer
        fun GetDefaultObject(): MaterialInstanceThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialInstanceThumbnailRenderer
        fun C(Other: UObject): MaterialInstanceThumbnailRenderer
        fun C(Other: Any): MaterialInstanceThumbnailRenderer
    }
}

external open class MaterialParameterCollectionFactoryNew : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialParameterCollectionFactoryNew
        fun Find(Outer: UObject, ResourceName: String): MaterialParameterCollectionFactoryNew
        fun GetDefaultObject(): MaterialParameterCollectionFactoryNew
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialParameterCollectionFactoryNew
        fun C(Other: UObject): MaterialParameterCollectionFactoryNew
        fun C(Other: Any): MaterialParameterCollectionFactoryNew
    }
}

external open class MaterialStatsOptions : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bPlatformUsed: Number
    open var bMaterialQualityUsed: Number

    companion object {
        fun Load(ResourceName: String): MaterialStatsOptions
        fun Find(Outer: UObject, ResourceName: String): MaterialStatsOptions
        fun GetDefaultObject(): MaterialStatsOptions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialStatsOptions
        fun C(Other: UObject): MaterialStatsOptions
        fun C(Other: Any): MaterialStatsOptions
    }
}

external open class MergeShaderPipelineCachesCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MergeShaderPipelineCachesCommandlet
        fun Find(Outer: UObject, ResourceName: String): MergeShaderPipelineCachesCommandlet
        fun GetDefaultObject(): MergeShaderPipelineCachesCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MergeShaderPipelineCachesCommandlet
        fun C(Other: UObject): MergeShaderPipelineCachesCommandlet
        fun C(Other: Any): MergeShaderPipelineCachesCommandlet
    }
}

external open class MirrorTableFindReplaceExpressions : UObject {
    constructor()
    constructor(Outer: UObject)
    open var FindReplaceExpressions: Array<MirrorFindReplaceExpression>

    companion object {
        fun Load(ResourceName: String): MirrorTableFindReplaceExpressions
        fun Find(Outer: UObject, ResourceName: String): MirrorTableFindReplaceExpressions
        fun GetDefaultObject(): MirrorTableFindReplaceExpressions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MirrorTableFindReplaceExpressions
        fun C(Other: UObject): MirrorTableFindReplaceExpressions
        fun C(Other: Any): MirrorTableFindReplaceExpressions
    }
}

external open class MirrorDataTableFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var struct: ScriptStruct
    open var Skeleton: Skeleton
    open var MirrorFindReplaceExpressions: MirrorTableFindReplaceExpressions

    companion object {
        fun Load(ResourceName: String): MirrorDataTableFactory
        fun Find(Outer: UObject, ResourceName: String): MirrorDataTableFactory
        fun GetDefaultObject(): MirrorDataTableFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MirrorDataTableFactory
        fun C(Other: UObject): MirrorDataTableFactory
        fun C(Other: Any): MirrorDataTableFactory
    }
}

external open class ModelExporterT3D : Exporter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ModelExporterT3D
        fun Find(Outer: UObject, ResourceName: String): ModelExporterT3D
        fun GetDefaultObject(): ModelExporterT3D
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ModelExporterT3D
        fun C(Other: UObject): ModelExporterT3D
        fun C(Other: Any): ModelExporterT3D
    }
}

external open class ModelFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ModelFactory
        fun Find(Outer: UObject, ResourceName: String): ModelFactory
        fun GetDefaultObject(): ModelFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ModelFactory
        fun C(Other: UObject): ModelFactory
        fun C(Other: Any): ModelFactory
    }
}

external open class ObjectElementDetailsInterface : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ObjectElementDetailsInterface
        fun Find(Outer: UObject, ResourceName: String): ObjectElementDetailsInterface
        fun GetDefaultObject(): ObjectElementDetailsInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ObjectElementDetailsInterface
        fun C(Other: UObject): ObjectElementDetailsInterface
        fun C(Other: Any): ObjectElementDetailsInterface
    }
}

external open class ObjectElementSelectionInterface : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ObjectElementSelectionInterface
        fun Find(Outer: UObject, ResourceName: String): ObjectElementSelectionInterface
        fun GetDefaultObject(): ObjectElementSelectionInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ObjectElementSelectionInterface
        fun C(Other: UObject): ObjectElementSelectionInterface
        fun C(Other: Any): ObjectElementSelectionInterface
    }
}

external open class ObjectElementEditorSelectionInterface : ObjectElementSelectionInterface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ObjectElementEditorSelectionInterface
        fun Find(Outer: UObject, ResourceName: String): ObjectElementEditorSelectionInterface
        fun GetDefaultObject(): ObjectElementEditorSelectionInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ObjectElementEditorSelectionInterface
        fun C(Other: UObject): ObjectElementEditorSelectionInterface
        fun C(Other: Any): ObjectElementEditorSelectionInterface
    }
}

external open class ObjectExporterT3D : Exporter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ObjectExporterT3D
        fun Find(Outer: UObject, ResourceName: String): ObjectExporterT3D
        fun GetDefaultObject(): ObjectExporterT3D
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ObjectExporterT3D
        fun C(Other: UObject): ObjectExporterT3D
        fun C(Other: Any): ObjectExporterT3D
    }
}

external open class ObjectLibraryFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ObjectLibraryFactory
        fun Find(Outer: UObject, ResourceName: String): ObjectLibraryFactory
        fun GetDefaultObject(): ObjectLibraryFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ObjectLibraryFactory
        fun C(Other: UObject): ObjectLibraryFactory
        fun C(Other: Any): ObjectLibraryFactory
    }
}

external open class PackageFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PackageFactory
        fun Find(Outer: UObject, ResourceName: String): PackageFactory
        fun GetDefaultObject(): PackageFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PackageFactory
        fun C(Other: UObject): PackageFactory
        fun C(Other: Any): PackageFactory
    }
}

external open class PackageTools : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PackageTools
        fun Find(Outer: UObject, ResourceName: String): PackageTools
        fun GetDefaultObject(): PackageTools
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PackageTools
        fun SanitizePackageName(InPackageName: String): String
        fun C(Other: UObject): PackageTools
        fun C(Other: Any): PackageTools
    }
}

external open class PackFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PackFactory
        fun Find(Outer: UObject, ResourceName: String): PackFactory
        fun GetDefaultObject(): PackFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PackFactory
        fun C(Other: UObject): PackFactory
        fun C(Other: Any): PackFactory
    }
}

external open class PanelExtensionSubsystem : EditorSubsystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PanelExtensionSubsystem
        fun Find(Outer: UObject, ResourceName: String): PanelExtensionSubsystem
        fun GetDefaultObject(): PanelExtensionSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PanelExtensionSubsystem
        fun C(Other: UObject): PanelExtensionSubsystem
        fun C(Other: Any): PanelExtensionSubsystem
    }
}

external open class ParticleSystemAuditCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)
    open var HighSpawnRateOrBurstThreshold: Number
    open var FarLODDistanceTheshold: Number

    companion object {
        fun Load(ResourceName: String): ParticleSystemAuditCommandlet
        fun Find(Outer: UObject, ResourceName: String): ParticleSystemAuditCommandlet
        fun GetDefaultObject(): ParticleSystemAuditCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleSystemAuditCommandlet
        fun C(Other: UObject): ParticleSystemAuditCommandlet
        fun C(Other: Any): ParticleSystemAuditCommandlet
    }
}

external open class ParticleSystemFactoryNew : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ParticleSystemFactoryNew
        fun Find(Outer: UObject, ResourceName: String): ParticleSystemFactoryNew
        fun GetDefaultObject(): ParticleSystemFactoryNew
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleSystemFactoryNew
        fun C(Other: UObject): ParticleSystemFactoryNew
        fun C(Other: Any): ParticleSystemFactoryNew
    }
}

external open class ParticleSystemThumbnailRenderer : TextureThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)
    open var NoImage: Texture2D
    open var OutOfDate: Texture2D

    companion object {
        fun Load(ResourceName: String): ParticleSystemThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): ParticleSystemThumbnailRenderer
        fun GetDefaultObject(): ParticleSystemThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleSystemThumbnailRenderer
        fun C(Other: UObject): ParticleSystemThumbnailRenderer
        fun C(Other: Any): ParticleSystemThumbnailRenderer
    }
}

external object EAnimationViewportCameraFollowMode {
    var None: String /* "None" */
    var Bounds: String /* "Bounds" */
    var Bone: String /* "Bone" */
    var EAnimationViewportCameraFollowMode_MAX: String /* "EAnimationViewportCameraFollowMode_MAX" */
}

external open class ViewportConfigOptions {
    open var ViewModeIndex: String /* "VMI_BrushWireframe" | "VMI_Wireframe" | "VMI_Unlit" | "VMI_Lit" | "VMI_Lit_DetailLighting" | "VMI_LightingOnly" | "VMI_LightComplexity" | "VMI_ShaderComplexity" | "VMI_LightmapDensity" | "VMI_LitLightmapDensity" | "VMI_ReflectionOverride" | "VMI_VisualizeBuffer" | "VMI_StationaryLightOverlap" | "VMI_CollisionPawn" | "VMI_CollisionVisibility" | "VMI_LODColoration" | "VMI_QuadOverdraw" | "VMI_PrimitiveDistanceAccuracy" | "VMI_MeshUVDensityAccuracy" | "VMI_ShaderComplexityWithQuadOverdraw" | "VMI_HLODColoration" | "VMI_GroupLODColoration" | "VMI_MaterialTextureScaleAccuracy" | "VMI_RequiredTextureResolution" | "VMI_PathTracing" | "VMI_RayTracingDebug" | "VMI_VisualizeNanite" | "VMI_VirtualTexturePendingMips" | "VMI_VisualizeLumen" | "VMI_VisualizeVirtualShadowMap" | "VMI_Max" | "VMI_Unknown" */
    open var ViewFOV: Number
    open var CameraSpeedSetting: Number
    open var CameraSpeedScalar: Number
    open var CameraFollowMode: String /* "None" | "Bounds" | "Bone" | "EAnimationViewportCameraFollowMode_MAX" */
    open var CameraFollowBoneName: String
    open fun clone(): ViewportConfigOptions

    companion object {
        fun C(Other: UObject): ViewportConfigOptions
        fun C(Other: Any): ViewportConfigOptions
    }
}

external open class AssetEditorOptions {
    open var Context: String
    open var ViewportConfigs: ViewportConfigOptions
    open fun clone(): AssetEditorOptions

    companion object {
        fun C(Other: UObject): AssetEditorOptions
        fun C(Other: Any): AssetEditorOptions
    }
}

external open class PersonaOptions : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bAutoAlignFloorToMesh: Boolean
    open var bAlwaysOpenAnimationAssetsInNewTab: Boolean
    open var bShowGrid: Boolean
    open var bHighlightOrigin: Boolean
    open var bMuteAudio: Boolean
    open var bUseAudioAttenuation: Boolean
    open var ShowMeshStats: Number
    open var DefaultLocalAxesSelection: Any
    open var DefaultBoneDrawSelection: Any
    open var SectionTimingNodeColor: LinearColor
    open var NotifyTimingNodeColor: LinearColor
    open var BranchingPointTimingNodeColor: LinearColor
    open var bUseInlineSocketEditor: Boolean
    open var bFlattenSkeletonHierarchyWhenFiltering: Boolean
    open var bHideParentsWhenFiltering: Boolean
    open var bExpandTreeOnSelection: Boolean
    open var bAllowPreviewMeshCollectionsToSelectFromDifferentSkeletons: Boolean
    open var bAllowPreviewMeshCollectionsToUseCustomAnimBP: Boolean
    open var bAllowMeshSectionSelection: Boolean
    open var NumFolderFiltersInAssetBrowser: Any
    open var AssetEditorOptions: Array<AssetEditorOptions>
    open var CurveEditorSnapInterval: Number
    open var TimelineScrubSnapValue: Number
    open var TimelineDisplayFormat: String /* "NonDropFrameTimecode" | "DropFrameTimecode" | "Seconds" | "Frames" | "MAX_Count" | "EFrameNumberDisplayFormats_MAX" */
    open var bTimelineDisplayPercentage: Boolean
    open var bTimelineDisplayFormatSecondary: Boolean
    open var bTimelineDisplayCurveKeys: Boolean
    open var TimelineEnabledSnaps: Array<String>

    companion object {
        fun Load(ResourceName: String): PersonaOptions
        fun Find(Outer: UObject, ResourceName: String): PersonaOptions
        fun GetDefaultObject(): PersonaOptions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PersonaOptions
        fun C(Other: UObject): PersonaOptions
        fun C(Other: Any): PersonaOptions
    }
}

external open class PhysicalMaterialFactoryNew : Factory {
    constructor()
    constructor(Outer: UObject)
    open var PhysicalMaterialClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): PhysicalMaterialFactoryNew
        fun Find(Outer: UObject, ResourceName: String): PhysicalMaterialFactoryNew
        fun GetDefaultObject(): PhysicalMaterialFactoryNew
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PhysicalMaterialFactoryNew
        fun C(Other: UObject): PhysicalMaterialFactoryNew
        fun C(Other: Any): PhysicalMaterialFactoryNew
    }
}

external open class PhysicalMaterialMaskFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var PhysicalMaterialMaskClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): PhysicalMaterialMaskFactory
        fun Find(Outer: UObject, ResourceName: String): PhysicalMaterialMaskFactory
        fun GetDefaultObject(): PhysicalMaterialMaskFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PhysicalMaterialMaskFactory
        fun C(Other: UObject): PhysicalMaterialMaskFactory
        fun C(Other: Any): PhysicalMaterialMaskFactory
    }
}

external open class PhysicalMaterialMaskThumbnailRenderer : TextureThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PhysicalMaterialMaskThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): PhysicalMaterialMaskThumbnailRenderer
        fun GetDefaultObject(): PhysicalMaterialMaskThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PhysicalMaterialMaskThumbnailRenderer
        fun C(Other: UObject): PhysicalMaterialMaskThumbnailRenderer
        fun C(Other: Any): PhysicalMaterialMaskThumbnailRenderer
    }
}

external object EPhysicsAssetEditorRenderMode {
    var Solid: String /* "Solid" */
    var Wireframe: String /* "Wireframe" */
    var None: String /* "None" */
    var EPhysicsAssetEditorRenderMode_MAX: String /* "EPhysicsAssetEditorRenderMode_MAX" */
}

external object EPhysicsAssetEditorConstraintViewMode {
    var None: String /* "None" */
    var AllPositions: String /* "AllPositions" */
    var AllLimits: String /* "AllLimits" */
    var EPhysicsAssetEditorConstraintViewMode_MAX: String /* "EPhysicsAssetEditorConstraintViewMode_MAX" */
}

external open class PhysicsAssetEditorOptions : UObject {
    constructor()
    constructor(Outer: UObject)
    open var PhysicsBlend: Number
    open var bUpdateJointsFromAnimation: Boolean
    open var PhysicsUpdateMode: String /* "SimulationUpatesComponentTransform" | "ComponentTransformIsKinematic" | "EPhysicsTransformUpdateMode_MAX" */
    open var PokePauseTime: Number
    open var PokeBlendTime: Number
    open var GravScale: Number
    open var GravityOverrideZ: Number
    open var bUseGravityOverride: Boolean
    open var MaxFPS: Number
    open var HandleLinearDamping: Number
    open var HandleLinearStiffness: Number
    open var HandleAngularDamping: Number
    open var HandleAngularStiffness: Number
    open var InterpolationSpeed: Number
    open var PokeStrength: Number
    open var InteractionDistance: Number
    open var bShowConstraintsAsPoints: Boolean
    open var bRenderOnlySelectedConstraints: Boolean
    open var ConstraintDrawSize: Number
    open var MeshViewMode: String /* "Solid" | "Wireframe" | "None" | "EPhysicsAssetEditorRenderMode_MAX" */
    open var CollisionViewMode: String /* "Solid" | "Wireframe" | "None" | "EPhysicsAssetEditorRenderMode_MAX" */
    open var ConstraintViewMode: String /* "None" | "AllPositions" | "AllLimits" | "EPhysicsAssetEditorConstraintViewMode_MAX" */
    open var SimulationMeshViewMode: String /* "Solid" | "Wireframe" | "None" | "EPhysicsAssetEditorRenderMode_MAX" */
    open var SimulationCollisionViewMode: String /* "Solid" | "Wireframe" | "None" | "EPhysicsAssetEditorRenderMode_MAX" */
    open var SimulationConstraintViewMode: String /* "None" | "AllPositions" | "AllLimits" | "EPhysicsAssetEditorConstraintViewMode_MAX" */
    open var CollisionOpacity: Number
    open var bSolidRenderingForSelectedOnly: Boolean
    open var bHideSimulatedBodies: Boolean
    open var bHideKinematicBodies: Boolean
    open var bResetClothWhenSimulating: Boolean

    companion object {
        fun Load(ResourceName: String): PhysicsAssetEditorOptions
        fun Find(Outer: UObject, ResourceName: String): PhysicsAssetEditorOptions
        fun GetDefaultObject(): PhysicsAssetEditorOptions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PhysicsAssetEditorOptions
        fun C(Other: UObject): PhysicsAssetEditorOptions
        fun C(Other: Any): PhysicsAssetEditorOptions
    }
}

external open class PhysicsAssetFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var TargetSkeletalMesh: SkeletalMesh

    companion object {
        fun Load(ResourceName: String): PhysicsAssetFactory
        fun Find(Outer: UObject, ResourceName: String): PhysicsAssetFactory
        fun GetDefaultObject(): PhysicsAssetFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PhysicsAssetFactory
        fun C(Other: UObject): PhysicsAssetFactory
        fun C(Other: Any): PhysicsAssetFactory
    }
}

external object EPhysAssetFitGeomType {
    var EFG_Box: String /* "EFG_Box" */
    var EFG_Sphyl: String /* "EFG_Sphyl" */
    var EFG_Sphere: String /* "EFG_Sphere" */
    var EFG_TaperedCapsule: String /* "EFG_TaperedCapsule" */
    var EFG_SingleConvexHull: String /* "EFG_SingleConvexHull" */
    var EFG_MultiConvexHull: String /* "EFG_MultiConvexHull" */
    var EFG_MAX: String /* "EFG_MAX" */
}

external object EPhysAssetFitVertWeight {
    var EVW_AnyWeight: String /* "EVW_AnyWeight" */
    var EVW_DominantWeight: String /* "EVW_DominantWeight" */
    var EVW_MAX: String /* "EVW_MAX" */
}

external open class PhysAssetCreateParams {
    open var MinBoneSize: Number
    open var MinWeldSize: Number
    open var GeomType: String /* "EFG_Box" | "EFG_Sphyl" | "EFG_Sphere" | "EFG_TaperedCapsule" | "EFG_SingleConvexHull" | "EFG_MultiConvexHull" | "EFG_MAX" */
    open var VertWeight: String /* "EVW_AnyWeight" | "EVW_DominantWeight" | "EVW_MAX" */
    open var bAutoOrientToBone: Boolean
    open var bCreateConstraints: Boolean
    open var bWalkPastSmall: Boolean
    open var bBodyForAll: Boolean
    open var bDisableCollisionsByDefault: Boolean
    open var AngularConstraintMode: String /* "ACM_Free" | "ACM_Limited" | "ACM_Locked" | "ACM_MAX" */
    open var HullCount: Number
    open var MaxHullVerts: Number
    open fun clone(): PhysAssetCreateParams

    companion object {
        fun C(Other: UObject): PhysAssetCreateParams
        fun C(Other: Any): PhysAssetCreateParams
    }
}

external open class PhysicsAssetGenerationSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var CreateParams: PhysAssetCreateParams

    companion object {
        fun Load(ResourceName: String): PhysicsAssetGenerationSettings
        fun Find(Outer: UObject, ResourceName: String): PhysicsAssetGenerationSettings
        fun GetDefaultObject(): PhysicsAssetGenerationSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PhysicsAssetGenerationSettings
        fun C(Other: UObject): PhysicsAssetGenerationSettings
        fun C(Other: Any): PhysicsAssetGenerationSettings
    }
}

external open class PhysicsAssetThumbnailRenderer : DefaultSizedThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PhysicsAssetThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): PhysicsAssetThumbnailRenderer
        fun GetDefaultObject(): PhysicsAssetThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PhysicsAssetThumbnailRenderer
        fun C(Other: UObject): PhysicsAssetThumbnailRenderer
        fun C(Other: Any): PhysicsAssetThumbnailRenderer
    }
}

external open class PkgInfoCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PkgInfoCommandlet
        fun Find(Outer: UObject, ResourceName: String): PkgInfoCommandlet
        fun GetDefaultObject(): PkgInfoCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PkgInfoCommandlet
        fun C(Other: UObject): PkgInfoCommandlet
        fun C(Other: Any): PkgInfoCommandlet
    }
}

external open class PolysExporterOBJ : Exporter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PolysExporterOBJ
        fun Find(Outer: UObject, ResourceName: String): PolysExporterOBJ
        fun GetDefaultObject(): PolysExporterOBJ
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PolysExporterOBJ
        fun C(Other: UObject): PolysExporterOBJ
        fun C(Other: Any): PolysExporterOBJ
    }
}

external open class PolysExporterT3D : Exporter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PolysExporterT3D
        fun Find(Outer: UObject, ResourceName: String): PolysExporterT3D
        fun GetDefaultObject(): PolysExporterT3D
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PolysExporterT3D
        fun C(Other: UObject): PolysExporterT3D
        fun C(Other: Any): PolysExporterT3D
    }
}

external open class PolysFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PolysFactory
        fun Find(Outer: UObject, ResourceName: String): PolysFactory
        fun GetDefaultObject(): PolysFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PolysFactory
        fun C(Other: UObject): PolysFactory
        fun C(Other: Any): PolysFactory
    }
}

external open class PopulateDialogueWaveFromCharacterSheetCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PopulateDialogueWaveFromCharacterSheetCommandlet
        fun Find(Outer: UObject, ResourceName: String): PopulateDialogueWaveFromCharacterSheetCommandlet
        fun GetDefaultObject(): PopulateDialogueWaveFromCharacterSheetCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PopulateDialogueWaveFromCharacterSheetCommandlet
        fun C(Other: UObject): PopulateDialogueWaveFromCharacterSheetCommandlet
        fun C(Other: Any): PopulateDialogueWaveFromCharacterSheetCommandlet
    }
}

external open class PoseAssetFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var SourceAnimation: AnimSequence
    open var PoseNames: Array<String>
    open var TargetSkeleton: Skeleton
    open var PreviewSkeletalMesh: SkeletalMesh

    companion object {
        fun Load(ResourceName: String): PoseAssetFactory
        fun Find(Outer: UObject, ResourceName: String): PoseAssetFactory
        fun GetDefaultObject(): PoseAssetFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PoseAssetFactory
        fun C(Other: UObject): PoseAssetFactory
        fun C(Other: Any): PoseAssetFactory
    }
}

external open class PreviewMaterial : Material {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PreviewMaterial
        fun Find(Outer: UObject, ResourceName: String): PreviewMaterial
        fun GetDefaultObject(): PreviewMaterial
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PreviewMaterial
        fun C(Other: UObject): PreviewMaterial
        fun C(Other: Any): PreviewMaterial
    }
}

external open class PreviewMeshCollectionFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var CurrentSkeleton: Any

    companion object {
        fun Load(ResourceName: String): PreviewMeshCollectionFactory
        fun Find(Outer: UObject, ResourceName: String): PreviewMeshCollectionFactory
        fun GetDefaultObject(): PreviewMeshCollectionFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PreviewMeshCollectionFactory
        fun C(Other: UObject): PreviewMeshCollectionFactory
        fun C(Other: Any): PreviewMeshCollectionFactory
    }
}

external open class PropertyEditorTestInstancedObject : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Number: Number

    companion object {
        fun Load(ResourceName: String): PropertyEditorTestInstancedObject
        fun Find(Outer: UObject, ResourceName: String): PropertyEditorTestInstancedObject
        fun GetDefaultObject(): PropertyEditorTestInstancedObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PropertyEditorTestInstancedObject
        fun C(Other: UObject): PropertyEditorTestInstancedObject
        fun C(Other: Any): PropertyEditorTestInstancedObject
    }
}

external object EPropertyEditorTestEnum {
    var PropertyEditorTest_Enum1: String /* "PropertyEditorTest_Enum1" */
    var PropertyEditorTest_Enum2: String /* "PropertyEditorTest_Enum2" */
    var PropertyEditorTest_Enum3: String /* "PropertyEditorTest_Enum3" */
    var PropertyEditorTest_Enum4: String /* "PropertyEditorTest_Enum4" */
    var PropertyEditorTest_Enum5: String /* "PropertyEditorTest_Enum5" */
    var PropertyEditorTest_Enum6: String /* "PropertyEditorTest_Enum6" */
    var PropertyEditorTest_MAX: String /* "PropertyEditorTest_MAX" */
}

external object EPropertyEditorTestEditColor {
    var Red: String /* "Red" */
    var Orange: String /* "Orange" */
    var Yellow: String /* "Yellow" */
    var Green: String /* "Green" */
    var Blue: String /* "Blue" */
    var Indigo: String /* "Indigo" */
    var Violet: String /* "Violet" */
    var Pink: String /* "Pink" */
    var Magenta: String /* "Magenta" */
    var Cyan: String /* "Cyan" */
    var EPropertyEditorTestEditColor_MAX: String /* "EPropertyEditorTestEditColor_MAX" */
}

external object EPropertyEditorTestUnderscores {
    var _One: String /* "_One" */
    var _Two: String /* "_Two" */
    var _Three: String /* "_Three" */
    var NotUnderscore: String /* "NotUnderscore" */
    var EPropertyEditorTestUnderscores_MAX: String /* "EPropertyEditorTestUnderscores_MAX" */
}

external open class PropertyEditorTestSubStruct {
    open var FirstProperty: Number
    open var SecondProperty: Number
    open var CustomizedStructInsideUncustomizedStruct: LinearColor
    open var CustomizedStructInsideUncustomizedStruct2: SoftObjectPath
    open fun clone(): PropertyEditorTestSubStruct

    companion object {
        fun C(Other: UObject): PropertyEditorTestSubStruct
        fun C(Other: Any): PropertyEditorTestSubStruct
    }
}

external open class PropertyEditorTestBasicStruct {
    open var IntPropertyInsideAStruct: Number
    open var FloatPropertyInsideAStruct: Number
    open var ObjectPropertyInsideAStruct: UObject
    open var InnerStruct: PropertyEditorTestSubStruct
    open fun clone(): PropertyEditorTestBasicStruct

    companion object {
        fun C(Other: UObject): PropertyEditorTestBasicStruct
        fun C(Other: Any): PropertyEditorTestBasicStruct
    }
}

external open class PropertyEditorTestInstancedStruct {
    open var UObject: PropertyEditorTestInstancedObject
    open fun clone(): PropertyEditorTestInstancedStruct

    companion object {
        fun C(Other: UObject): PropertyEditorTestInstancedStruct
        fun C(Other: Any): PropertyEditorTestInstancedStruct
    }
}

external open class PropertyEditTestTextStruct {
    open var NormalProperty: String
    open fun clone(): PropertyEditTestTextStruct

    companion object {
        fun C(Other: UObject): PropertyEditTestTextStruct
        fun C(Other: Any): PropertyEditTestTextStruct
    }
}

external object ETestEnumFlags {
    var None: String /* "None" */
    var One: String /* "One" */
    var Two: String /* "Two" */
    var Four: String /* "Four" */
    var ETestEnumFlags_MAX: String /* "ETestEnumFlags_MAX" */
}

external open class PropertyEditorTestEditCondition {
    open var InlineEditCondition: Boolean
    open var HasInlineEditCondition: Number
    open var Flags: String /* "None" | "One" | "Two" | "Four" | "ETestEnumFlags_MAX" */
    open var EnabledAndVisibleWhenOne: Number
    open fun clone(): PropertyEditorTestEditCondition

    companion object {
        fun C(Other: UObject): PropertyEditorTestEditCondition
        fun C(Other: Any): PropertyEditorTestEditCondition
    }
}

external open class PropertyEditorTestObject : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Int8Property: Any
    open var Int16Property: Any
    open var Int32Property: Number
    open var Int64Property: Any
    open var ByteProperty: Number
    open var UnsignedInt16Property: Any
    open var UnsignedInt32Property: Any
    open var UnsignedInt64Property: Any
    open var FloatProperty: Number
    open var DoubleProperty: Any
    open var NameProperty: String
    open var BoolProperty: Boolean
    open var StringProperty: String
    open var TextProperty: String
    open var IntPointProperty: IntPoint
    open var Vector3Property: Vector
    open var Vector2Property: Vector2D
    open var Vector4Property: Vector4
    open var RotatorProperty: Rotator
    open var ObjectProperty: UObject
    open var LinearColorProperty: LinearColor
    open var ColorProperty: Color
    open var EnumByteProperty: String /* "PropertyEditorTest_Enum1" | "PropertyEditorTest_Enum2" | "PropertyEditorTest_Enum3" | "PropertyEditorTest_Enum4" | "PropertyEditorTest_Enum5" | "PropertyEditorTest_Enum6" | "PropertyEditorTest_MAX" */
    open var EnumProperty: String /* "Red" | "Orange" | "Yellow" | "Green" | "Blue" | "Indigo" | "Violet" | "Pink" | "Magenta" | "Cyan" | "EPropertyEditorTestEditColor_MAX" */
    open var EnumUnderscores: String /* "_One" | "_Two" | "_Three" | "NotUnderscore" | "EPropertyEditorTestUnderscores_MAX" */
    open var MatrixProperty: Matrix
    open var TransformProperty: Transform
    open var ClassProperty: UnrealEngineClass
    open var ClassPropertyWithAllowed: UnrealEngineClass
    open var ClassPropertyWithDisallowed: UnrealEngineClass
    open var SubclassOfTexture: UnrealEngineClass
    open var SubclassOfWithAllowed: UnrealEngineClass
    open var SubclassOfWithDisallowed: UnrealEngineClass
    open var AssetPointerWithAllowedAndWhitespace: UObject
    open var IntProperty32Array: Array<Number>
    open var BytePropertyArray: Array<Number>
    open var FloatPropertyArray: Array<Number>
    open var NamePropertyArray: Array<String>
    open var BoolPropertyArray: Array<Boolean>
    open var StringPropertyArray: Array<String>
    open var TextPropertyArray: Array<String>
    open var Vector3PropertyArray: Array<Vector>
    open var Vector2PropertyArray: Array<Vector2D>
    open var Vector4PropertyArray: Array<Vector4>
    open var RotatorPropertyArray: Array<Rotator>
    open var ObjectPropertyArray: Array<UObject>
    open var ActorPropertyArray: Array<Actor>
    open var LinearColorPropertyArray: Array<LinearColor>
    open var ColorPropertyArray: Array<Color>
    open var EnumPropertyArray: Array<String /* "PropertyEditorTest_Enum1" | "PropertyEditorTest_Enum2" | "PropertyEditorTest_Enum3" | "PropertyEditorTest_Enum4" | "PropertyEditorTest_Enum5" | "PropertyEditorTest_Enum6" | "PropertyEditorTest_MAX" */>
    open var StructPropertyArray: Array<PropertyEditorTestBasicStruct>
    open var StructPropertyArrayWithTitle: Array<PropertyEditorTestBasicStruct>
    open var StructPropertyArrayWithFormattedTitle: Array<PropertyEditorTestBasicStruct>
    open var StructPropertyArrayWithTitleError: Array<PropertyEditorTestBasicStruct>
    open var StructPropertyArrayWithFormattedTitleError: Array<PropertyEditorTestBasicStruct>
    open var InstancedStructArray: Array<PropertyEditorTestInstancedStruct>
    open var InstancedUObjectArray: Array<PropertyEditorTestInstancedObject>
    open var FixedArrayOfInts: Array<Number>
    open var StaticArrayOfInts: Number
    open var StaticArrayOfIntsWithEnumLabels: Number
    open var FloatRange: FloatRange
    open var FloatPropertyWithClampedRange: Number
    open var IntPropertyWithClampedRange: Number
    open var IntThatCannotBeChanged: Number
    open var StringThatCannotBeChanged: String
    open var ObjectThatCannotBeChanged: PrimitiveComponent
    open var EnumBitflags: Number
    open var StringPasswordProperty: String
    open var TextPasswordProperty: String
    open var ThisIsBrokenIfItsVisibleInADetailsView: PropertyEditorTestBasicStruct
    open var StructWithMultipleInstances1: PropertyEditorTestBasicStruct
    open var bEditConditionStructWithMultipleInstances2: Boolean
    open var StructWithMultipleInstances2: PropertyEditorTestBasicStruct
    open var RichCurve: RichCurve
    open var AssetReferenceCustomStruct: SoftObjectPath
    open var AssetReferenceCustomStructWithThumbnail: SoftObjectPath
    open var ExactlyPointLightActorReference: SoftObjectPath
    open var LightActorReference: SoftObjectPath
    open var ExactPointOrSpotLightActorReference: SoftObjectPath
    open var LightOrStaticMeshActorReference: SoftObjectPath
    open var NotLightActorReference: SoftObjectPath
    open var MaterialOrTextureAssetReference: SoftObjectPath
    open var ActorWithMetaClass: SoftObjectPath
    open var DisabledByCanEditChange: SoftObjectPath
    open var bEditCondition: Boolean
    open var SimplePropertyWithEditCondition: Number
    open var bEditConditionAssetReferenceCustomStructWithEditCondition: Boolean
    open var AssetReferenceCustomStructWithEditCondition: SoftObjectPath
    open var ArrayOfStructs: Array<PropertyEditorTestBasicStruct>
    open var struct: PropertyEditTestTextStruct
    open var EditInlineNewStaticMeshComponent: StaticMeshComponent
    open var ArrayOfEditInlineNewSMCs: Array<StaticMeshComponent>
    open var TextureProp: Texture
    open var StaticMeshProp: StaticMesh
    open var AnyMaterialInterface: MaterialInterface
    open var MaterialNoThumbnail: MaterialInterface
    open var OnlyActorsAllowed: Actor
    open var Int32Set: Any
    open var FloatSet: Any
    open var StringSet: Any
    open var ObjectSet: Any
    open var ActorSet: Any
    open var EditColorSet: Any
    open var NameSet: Any
    open var Int32ToStringMap: Any
    open var StringToColorMap: Any
    open var Int32ToStructMap: Any
    open var StringToFloatMap: Any
    open var StringToObjectMap: Any
    open var StringToActorMap: Any
    open var ObjectToInt32Map: Any
    open var ObjectToColorMap: Any
    open var IntToEnumMap: Any
    open var NameToNameMap: Any
    open var NameToObjectMap: Any
    open var NameToCustomMap: Any
    open var NameToColorMap: Any
    open var IntToCustomMap: Any
    open var IntToSubStructMap: Any
    open var LinearColorSet: Any
    open var VectorSet: Any
    open var LinearColorToStringMap: Any
    open var VectorToFloatMap: Any
    open var LinearColorToVectorMap: Any
    open var BlendableInterface: Any
    open var AnimClassInterface: Any
    open var LightPropagationVolumeBlendable: Any
    open var TextureOrBlendableInterface: UObject
    open var bSubcategory: Boolean
    open var bSubcategoryAdvanced: Boolean
    open var bSubcategoryFooSimple: Boolean
    open var bSubcategoryFooAdvanced: Boolean
    open var bSubcategoryBarSimple: Boolean
    open var bSubcategoryBarAdvanced: Boolean
    open var bSubcategoryLast: Boolean
    open var bEnablesNext: Boolean
    open var bEnabledByPrevious: Boolean
    open var EnumEditCondition: String /* "Red" | "Orange" | "Yellow" | "Green" | "Blue" | "Indigo" | "Violet" | "Pink" | "Magenta" | "Cyan" | "EPropertyEditorTestEditColor_MAX" */
    open var bEnabledWhenBlue: Boolean
    open var bEnabledWhenPink: Boolean
    open var EnumAsByteEditCondition: String /* "PropertyEditorTest_Enum1" | "PropertyEditorTest_Enum2" | "PropertyEditorTest_Enum3" | "PropertyEditorTest_Enum4" | "PropertyEditorTest_Enum5" | "PropertyEditorTest_Enum6" | "PropertyEditorTest_MAX" */
    open var bEnabledWhenEnumIs2: Boolean
    open var bEnabledWhenEnumIs4: Boolean
    open var IntegerEditCondition: Number
    open var bEnabledWhenIntGreaterOrEqual5: Boolean
    open var bEnabledWhenIntLessOrEqual10: Boolean
    open var FloatEditCondition: Number
    open var bEnabledWhenFloatGreaterThan5: Boolean
    open var bEnabledWhenFloatLessThan10: Boolean
    open var bEditConditionForArrays: Boolean
    open var ArrayWithEditCondition: Array<Texture2D>
    open var ArrayOfStructsWithEditCondition: Array<PropertyEditorTestBasicStruct>
    open var bEditConditionForFixedArray: Boolean
    open var FixedArrayWithEditCondition: String
    open var EditConditionFlags: Any
    open var bEnabledWhenFlagsHasTwoOrFour: Boolean
    open var bDisabledWhenFlagsIsOdd: Boolean
    open var InlineProperty: String /* "Static" | "Stationary" | "Movable" | "EComponentMobility_MAX" */
    open var PropertyThatHides: String /* "Static" | "Stationary" | "Movable" | "EComponentMobility_MAX" */
    open var bVisibleWhenStatic: Boolean
    open var VisibleWhenStationary: Number
    open var DateTime: DateTime
    open var Timespan: Timespan
    open var Guid: Guid
    open var PerPlatformFloat: PerPlatformFloat
    open var PerPlatformInt: PerPlatformInt
    open var bInlineEditConditionWithoutMetaToggle: Boolean
    open var InlineEditConditionWithoutMeta: Number
    open var bInlineEditConditionWithMetaToggle: Boolean
    open var InlineEditConditionWithMeta: Number
    open var bInlineEditConditionNotEditable: Boolean
    open var HasNonEditableInlineCondition: Number
    open var bSharedEditCondition: Boolean
    open var UsesSharedEditCondition1: Number
    open var UsesSharedEditCondition2: Number
    open var StructWithInlineCondition: PropertyEditorTestEditCondition
    open var ArrayOfStructsWithInlineCondition: Array<PropertyEditorTestEditCondition>

    companion object {
        fun Load(ResourceName: String): PropertyEditorTestObject
        fun Find(Outer: UObject, ResourceName: String): PropertyEditorTestObject
        fun GetDefaultObject(): PropertyEditorTestObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PropertyEditorTestObject
        fun C(Other: UObject): PropertyEditorTestObject
        fun C(Other: Any): PropertyEditorTestObject
    }
}

external open class BlueprintPropertyTestObject : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ShouldBeHidden: Number
    open var ShouldBeVisible: Number

    companion object {
        fun Load(ResourceName: String): BlueprintPropertyTestObject
        fun Find(Outer: UObject, ResourceName: String): BlueprintPropertyTestObject
        fun GetDefaultObject(): BlueprintPropertyTestObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintPropertyTestObject
        fun C(Other: UObject): BlueprintPropertyTestObject
        fun C(Other: Any): BlueprintPropertyTestObject
    }
}

external open class BlueprintPropertyContainerTestObject : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Array: Array<BlueprintPropertyTestObject>

    companion object {
        fun Load(ResourceName: String): BlueprintPropertyContainerTestObject
        fun Find(Outer: UObject, ResourceName: String): BlueprintPropertyContainerTestObject
        fun GetDefaultObject(): BlueprintPropertyContainerTestObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintPropertyContainerTestObject
        fun C(Other: UObject): BlueprintPropertyContainerTestObject
        fun C(Other: Any): BlueprintPropertyContainerTestObject
    }
}

external open class TestSparseClassDataBase : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TestSparseClassDataBase
        fun Find(Outer: UObject, ResourceName: String): TestSparseClassDataBase
        fun GetDefaultObject(): TestSparseClassDataBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TestSparseClassDataBase
        fun C(Other: UObject): TestSparseClassDataBase
        fun C(Other: Any): TestSparseClassDataBase
    }
}

external open class TestSparseClassData : TestSparseClassDataBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TestSparseClassData
        fun Find(Outer: UObject, ResourceName: String): TestSparseClassData
        fun GetDefaultObject(): TestSparseClassData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TestSparseClassData
        fun C(Other: UObject): TestSparseClassData
        fun C(Other: Any): TestSparseClassData
    }
}

external open class PropertyEditorTestActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var GetOptionsValue: String
    open fun GetOptionsFunc(): Array<String>

    companion object {
        fun GetDefaultObject(): PropertyEditorTestActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PropertyEditorTestActor
        fun C(Other: UObject): PropertyEditorTestActor
        fun C(Other: Any): PropertyEditorTestActor
    }
}

external open class ReimportCurveFactory : CSVImportFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ReimportCurveFactory
        fun Find(Outer: UObject, ResourceName: String): ReimportCurveFactory
        fun GetDefaultObject(): ReimportCurveFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ReimportCurveFactory
        fun C(Other: UObject): ReimportCurveFactory
        fun C(Other: Any): ReimportCurveFactory
    }
}

external open class ReimportCurveTableFactory : CSVImportFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ReimportCurveTableFactory
        fun Find(Outer: UObject, ResourceName: String): ReimportCurveTableFactory
        fun GetDefaultObject(): ReimportCurveTableFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ReimportCurveTableFactory
        fun C(Other: UObject): ReimportCurveTableFactory
        fun C(Other: Any): ReimportCurveTableFactory
    }
}

external open class ReimportDataTableFactory : CSVImportFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ReimportDataTableFactory
        fun Find(Outer: UObject, ResourceName: String): ReimportDataTableFactory
        fun GetDefaultObject(): ReimportDataTableFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ReimportDataTableFactory
        fun C(Other: UObject): ReimportDataTableFactory
        fun C(Other: Any): ReimportDataTableFactory
    }
}

external open class ReimportFbxAnimSequenceFactory : FbxFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ReimportFbxAnimSequenceFactory
        fun Find(Outer: UObject, ResourceName: String): ReimportFbxAnimSequenceFactory
        fun GetDefaultObject(): ReimportFbxAnimSequenceFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ReimportFbxAnimSequenceFactory
        fun C(Other: UObject): ReimportFbxAnimSequenceFactory
        fun C(Other: Any): ReimportFbxAnimSequenceFactory
    }
}

external open class ReimportFbxSceneFactory : FbxSceneImportFactory {
    constructor()
    constructor(Outer: UObject)
    open fun ScriptReimportHelper(Obj: UObject)

    companion object {
        fun Load(ResourceName: String): ReimportFbxSceneFactory
        fun Find(Outer: UObject, ResourceName: String): ReimportFbxSceneFactory
        fun GetDefaultObject(): ReimportFbxSceneFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ReimportFbxSceneFactory
        fun C(Other: UObject): ReimportFbxSceneFactory
        fun C(Other: Any): ReimportFbxSceneFactory
    }
}

external open class ReimportFbxSkeletalMeshFactory : FbxFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ReimportFbxSkeletalMeshFactory
        fun Find(Outer: UObject, ResourceName: String): ReimportFbxSkeletalMeshFactory
        fun GetDefaultObject(): ReimportFbxSkeletalMeshFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ReimportFbxSkeletalMeshFactory
        fun C(Other: UObject): ReimportFbxSkeletalMeshFactory
        fun C(Other: Any): ReimportFbxSkeletalMeshFactory
    }
}

external open class ReimportFbxStaticMeshFactory : FbxFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ReimportFbxStaticMeshFactory
        fun Find(Outer: UObject, ResourceName: String): ReimportFbxStaticMeshFactory
        fun GetDefaultObject(): ReimportFbxStaticMeshFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ReimportFbxStaticMeshFactory
        fun C(Other: UObject): ReimportFbxStaticMeshFactory
        fun C(Other: Any): ReimportFbxStaticMeshFactory
    }
}

external object ETextureSourceColorSpace {
    var Auto: String /* "Auto" */
    var Linear: String /* "Linear" */
    var SRGB: String /* "SRGB" */
    var ETextureSourceColorSpace_MAX: String /* "ETextureSourceColorSpace_MAX" */
}

external open class TextureFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var NoCompression: Boolean
    open var NoAlpha: Boolean
    open var bDeferCompression: Boolean
    open var CompressionSettings: String /* "TC_Default" | "TC_Normalmap" | "TC_Masks" | "TC_Grayscale" | "TC_Displacementmap" | "TC_VectorDisplacementmap" | "TC_HDR" | "TC_EditorIcon" | "TC_Alpha" | "TC_DistanceFieldFont" | "TC_HDR_Compressed" | "TC_BC7" | "TC_HalfFloat" | "TC_LQ" | "TC_EncodedReflectionCapture" | "TC_MAX" */
    open var bCreateMaterial: Boolean
    open var bRGBToBaseColor: Boolean
    open var bRGBToEmissive: Boolean
    open var bAlphaToRoughness: Boolean
    open var bAlphaToEmissive: Boolean
    open var bAlphaToOpacity: Boolean
    open var bAlphaToOpacityMask: Boolean
    open var bTwoSided: Boolean
    open var Blending: String /* "BLEND_Opaque" | "BLEND_Masked" | "BLEND_Translucent" | "BLEND_Additive" | "BLEND_Modulate" | "BLEND_AlphaComposite" | "BLEND_AlphaHoldout" | "BLEND_MAX" */
    open var ShadingModel: String /* "MSM_Unlit" | "MSM_DefaultLit" | "MSM_Subsurface" | "MSM_PreintegratedSkin" | "MSM_ClearCoat" | "MSM_SubsurfaceProfile" | "MSM_TwoSidedFoliage" | "MSM_Hair" | "MSM_Cloth" | "MSM_Eye" | "MSM_SingleLayerWater" | "MSM_ThinTranslucent" | "MSM_Strata" | "MSM_NUM" | "MSM_FromMaterialExpression" | "MSM_MAX" */
    open var MipGenSettings: String /* "TMGS_FromTextureGroup" | "TMGS_SimpleAverage" | "TMGS_Sharpen0" | "TMGS_Sharpen1" | "TMGS_Sharpen2" | "TMGS_Sharpen3" | "TMGS_Sharpen4" | "TMGS_Sharpen5" | "TMGS_Sharpen6" | "TMGS_Sharpen7" | "TMGS_Sharpen8" | "TMGS_Sharpen9" | "TMGS_Sharpen10" | "TMGS_NoMipmaps" | "TMGS_LeaveExistingMips" | "TMGS_Blur1" | "TMGS_Blur2" | "TMGS_Blur3" | "TMGS_Blur4" | "TMGS_Blur5" | "TMGS_Unfiltered" | "TMGS_Angular" | "TMGS_MAX" */
    open var LODGroup: String /* "TEXTUREGROUP_World" | "TEXTUREGROUP_WorldNormalMap" | "TEXTUREGROUP_WorldSpecular" | "TEXTUREGROUP_Character" | "TEXTUREGROUP_CharacterNormalMap" | "TEXTUREGROUP_CharacterSpecular" | "TEXTUREGROUP_Weapon" | "TEXTUREGROUP_WeaponNormalMap" | "TEXTUREGROUP_WeaponSpecular" | "TEXTUREGROUP_Vehicle" | "TEXTUREGROUP_VehicleNormalMap" | "TEXTUREGROUP_VehicleSpecular" | "TEXTUREGROUP_Cinematic" | "TEXTUREGROUP_Effects" | "TEXTUREGROUP_EffectsNotFiltered" | "TEXTUREGROUP_Skybox" | "TEXTUREGROUP_UI" | "TEXTUREGROUP_Lightmap" | "TEXTUREGROUP_RenderTarget" | "TEXTUREGROUP_MobileFlattened" | "TEXTUREGROUP_ProcBuilding_Face" | "TEXTUREGROUP_ProcBuilding_LightMap" | "TEXTUREGROUP_Shadowmap" | "TEXTUREGROUP_ColorLookupTable" | "TEXTUREGROUP_Terrain_Heightmap" | "TEXTUREGROUP_Terrain_Weightmap" | "TEXTUREGROUP_Bokeh" | "TEXTUREGROUP_IESLightProfile" | "TEXTUREGROUP_Pixels2D" | "TEXTUREGROUP_HierarchicalLOD" | "TEXTUREGROUP_Impostor" | "TEXTUREGROUP_ImpostorNormalDepth" | "TEXTUREGROUP_8BitData" | "TEXTUREGROUP_16BitData" | "TEXTUREGROUP_Project01" | "TEXTUREGROUP_Project02" | "TEXTUREGROUP_Project03" | "TEXTUREGROUP_Project04" | "TEXTUREGROUP_Project05" | "TEXTUREGROUP_Project06" | "TEXTUREGROUP_Project07" | "TEXTUREGROUP_Project08" | "TEXTUREGROUP_Project09" | "TEXTUREGROUP_Project10" | "TEXTUREGROUP_Project11" | "TEXTUREGROUP_Project12" | "TEXTUREGROUP_Project13" | "TEXTUREGROUP_Project14" | "TEXTUREGROUP_Project15" | "TEXTUREGROUP_Project16" | "TEXTUREGROUP_MAX" */
    open var bDitherMipMapAlpha: Boolean
    open var bDoScaleMipsForAlphaCoverage: Boolean
    open var AlphaCoverageThresholds: Vector4
    open var bPreserveBorder: Boolean
    open var bFlipNormalMapGreenChannel: Boolean
    open var bUsingExistingSettings: Boolean
    open var bUseHashAsGuid: Boolean
    open var UdimRegexPattern: String
    open var ColorSpaceMode: String /* "Auto" | "Linear" | "SRGB" | "ETextureSourceColorSpace_MAX" */

    companion object {
        fun Load(ResourceName: String): TextureFactory
        fun Find(Outer: UObject, ResourceName: String): TextureFactory
        fun GetDefaultObject(): TextureFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextureFactory
        fun C(Other: UObject): TextureFactory
        fun C(Other: Any): TextureFactory
    }
}

external open class ReimportTextureFactory : TextureFactory {
    constructor()
    constructor(Outer: UObject)
    open var pOriginalTex: Texture

    companion object {
        fun Load(ResourceName: String): ReimportTextureFactory
        fun Find(Outer: UObject, ResourceName: String): ReimportTextureFactory
        fun GetDefaultObject(): ReimportTextureFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ReimportTextureFactory
        fun C(Other: UObject): ReimportTextureFactory
        fun C(Other: Any): ReimportTextureFactory
    }
}

external open class VectorFieldStaticFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): VectorFieldStaticFactory
        fun Find(Outer: UObject, ResourceName: String): VectorFieldStaticFactory
        fun GetDefaultObject(): VectorFieldStaticFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VectorFieldStaticFactory
        fun C(Other: UObject): VectorFieldStaticFactory
        fun C(Other: Any): VectorFieldStaticFactory
    }
}

external open class ReimportVectorFieldStaticFactory : VectorFieldStaticFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ReimportVectorFieldStaticFactory
        fun Find(Outer: UObject, ResourceName: String): ReimportVectorFieldStaticFactory
        fun GetDefaultObject(): ReimportVectorFieldStaticFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ReimportVectorFieldStaticFactory
        fun C(Other: UObject): ReimportVectorFieldStaticFactory
        fun C(Other: Any): ReimportVectorFieldStaticFactory
    }
}

external open class RenderTargetExporterHDR : Exporter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): RenderTargetExporterHDR
        fun Find(Outer: UObject, ResourceName: String): RenderTargetExporterHDR
        fun GetDefaultObject(): RenderTargetExporterHDR
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RenderTargetExporterHDR
        fun C(Other: UObject): RenderTargetExporterHDR
        fun C(Other: Any): RenderTargetExporterHDR
    }
}

external open class ReplaceActorCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ReplaceActorCommandlet
        fun Find(Outer: UObject, ResourceName: String): ReplaceActorCommandlet
        fun GetDefaultObject(): ReplaceActorCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ReplaceActorCommandlet
        fun C(Other: UObject): ReplaceActorCommandlet
        fun C(Other: Any): ReplaceActorCommandlet
    }
}

external open class ReplaceAssetsCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ReplaceAssetsCommandlet
        fun Find(Outer: UObject, ResourceName: String): ReplaceAssetsCommandlet
        fun GetDefaultObject(): ReplaceAssetsCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ReplaceAssetsCommandlet
        fun C(Other: UObject): ReplaceAssetsCommandlet
        fun C(Other: Any): ReplaceAssetsCommandlet
    }
}

external open class SavePackageUtilitiesCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SavePackageUtilitiesCommandlet
        fun Find(Outer: UObject, ResourceName: String): SavePackageUtilitiesCommandlet
        fun GetDefaultObject(): SavePackageUtilitiesCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SavePackageUtilitiesCommandlet
        fun C(Other: UObject): SavePackageUtilitiesCommandlet
        fun C(Other: Any): SavePackageUtilitiesCommandlet
    }
}

external open class SceneThumbnailInfo : ThumbnailInfo {
    constructor()
    constructor(Outer: UObject)
    open var OrbitPitch: Number
    open var OrbitYaw: Number
    open var OrbitZoom: Number

    companion object {
        fun Load(ResourceName: String): SceneThumbnailInfo
        fun Find(Outer: UObject, ResourceName: String): SceneThumbnailInfo
        fun GetDefaultObject(): SceneThumbnailInfo
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SceneThumbnailInfo
        fun C(Other: UObject): SceneThumbnailInfo
        fun C(Other: Any): SceneThumbnailInfo
    }
}

external object EThumbnailPrimType {
    var TPT_None: String /* "TPT_None" */
    var TPT_Sphere: String /* "TPT_Sphere" */
    var TPT_Cube: String /* "TPT_Cube" */
    var TPT_Plane: String /* "TPT_Plane" */
    var TPT_Cylinder: String /* "TPT_Cylinder" */
    var TPT_MAX: String /* "TPT_MAX" */
}

external open class SceneThumbnailInfoWithPrimitive : SceneThumbnailInfo {
    constructor()
    constructor(Outer: UObject)
    open var PrimitiveType: String /* "TPT_None" | "TPT_Sphere" | "TPT_Cube" | "TPT_Plane" | "TPT_Cylinder" | "TPT_MAX" */
    open var PreviewMesh: SoftObjectPath
    open var bUserModifiedShape: Boolean

    companion object {
        fun Load(ResourceName: String): SceneThumbnailInfoWithPrimitive
        fun Find(Outer: UObject, ResourceName: String): SceneThumbnailInfoWithPrimitive
        fun GetDefaultObject(): SceneThumbnailInfoWithPrimitive
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SceneThumbnailInfoWithPrimitive
        fun C(Other: UObject): SceneThumbnailInfoWithPrimitive
        fun C(Other: Any): SceneThumbnailInfoWithPrimitive
    }
}

external open class EditorViewportViewMenuContext : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EditorViewportViewMenuContext
        fun Find(Outer: UObject, ResourceName: String): EditorViewportViewMenuContext
        fun GetDefaultObject(): EditorViewportViewMenuContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorViewportViewMenuContext
        fun C(Other: UObject): EditorViewportViewMenuContext
        fun C(Other: Any): EditorViewportViewMenuContext
    }
}

external open class SequenceExporterT3D : Exporter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SequenceExporterT3D
        fun Find(Outer: UObject, ResourceName: String): SequenceExporterT3D
        fun GetDefaultObject(): SequenceExporterT3D
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SequenceExporterT3D
        fun C(Other: UObject): SequenceExporterT3D
        fun C(Other: Any): SequenceExporterT3D
    }
}

external open class ShaderCodeLibraryToolsCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ShaderCodeLibraryToolsCommandlet
        fun Find(Outer: UObject, ResourceName: String): ShaderCodeLibraryToolsCommandlet
        fun GetDefaultObject(): ShaderCodeLibraryToolsCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ShaderCodeLibraryToolsCommandlet
        fun C(Other: UObject): ShaderCodeLibraryToolsCommandlet
        fun C(Other: Any): ShaderCodeLibraryToolsCommandlet
    }
}

external open class ShaderPipelineCacheToolsCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ShaderPipelineCacheToolsCommandlet
        fun Find(Outer: UObject, ResourceName: String): ShaderPipelineCacheToolsCommandlet
        fun GetDefaultObject(): ShaderPipelineCacheToolsCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ShaderPipelineCacheToolsCommandlet
        fun C(Other: UObject): ShaderPipelineCacheToolsCommandlet
        fun C(Other: Any): ShaderPipelineCacheToolsCommandlet
    }
}

external object ESheetAxis {
    var AX_Horizontal: String /* "AX_Horizontal" */
    var AX_XAxis: String /* "AX_XAxis" */
    var AX_YAxis: String /* "AX_YAxis" */
    var AX_MAX: String /* "AX_MAX" */
}

external open class SheetBuilder : EditorBrushBuilder {
    constructor()
    constructor(Outer: UObject)
    open var X: Number
    open var Y: Number
    open var XSegments: Number
    open var YSegments: Number
    open var Axis: String /* "AX_Horizontal" | "AX_XAxis" | "AX_YAxis" | "AX_MAX" */
    open var GroupName: String

    companion object {
        fun Load(ResourceName: String): SheetBuilder
        fun Find(Outer: UObject, ResourceName: String): SheetBuilder
        fun GetDefaultObject(): SheetBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SheetBuilder
        fun C(Other: UObject): SheetBuilder
        fun C(Other: Any): SheetBuilder
    }
}

external open class SkeletalMeshEditorSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var AnimPreviewFloorColor: Color
    open var AnimPreviewSkyColor: Color
    open var AnimPreviewSkyBrightness: Number
    open var AnimPreviewLightBrightness: Number
    open var AnimPreviewLightingDirection: Rotator
    open var AnimPreviewDirectionalColor: Color

    companion object {
        fun Load(ResourceName: String): SkeletalMeshEditorSettings
        fun Find(Outer: UObject, ResourceName: String): SkeletalMeshEditorSettings
        fun GetDefaultObject(): SkeletalMeshEditorSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SkeletalMeshEditorSettings
        fun C(Other: UObject): SkeletalMeshEditorSettings
        fun C(Other: Any): SkeletalMeshEditorSettings
    }
}

external open class SkeletalMeshExporterFBX : ExporterFBX {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SkeletalMeshExporterFBX
        fun Find(Outer: UObject, ResourceName: String): SkeletalMeshExporterFBX
        fun GetDefaultObject(): SkeletalMeshExporterFBX
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SkeletalMeshExporterFBX
        fun C(Other: UObject): SkeletalMeshExporterFBX
        fun C(Other: Any): SkeletalMeshExporterFBX
    }
}

external open class SkeletalMeshThumbnailRenderer : DefaultSizedThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SkeletalMeshThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): SkeletalMeshThumbnailRenderer
        fun GetDefaultObject(): SkeletalMeshThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SkeletalMeshThumbnailRenderer
        fun C(Other: UObject): SkeletalMeshThumbnailRenderer
        fun C(Other: Any): SkeletalMeshThumbnailRenderer
    }
}

external open class SkeletalMeshToolMenuContext : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SkeletalMeshToolMenuContext
        fun Find(Outer: UObject, ResourceName: String): SkeletalMeshToolMenuContext
        fun GetDefaultObject(): SkeletalMeshToolMenuContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SkeletalMeshToolMenuContext
        fun C(Other: UObject): SkeletalMeshToolMenuContext
        fun C(Other: Any): SkeletalMeshToolMenuContext
    }
}

external open class SkeletonFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var TargetSkeletalMesh: SkeletalMesh

    companion object {
        fun Load(ResourceName: String): SkeletonFactory
        fun Find(Outer: UObject, ResourceName: String): SkeletonFactory
        fun GetDefaultObject(): SkeletonFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SkeletonFactory
        fun C(Other: UObject): SkeletonFactory
        fun C(Other: Any): SkeletonFactory
    }
}

external open class SkeletonThumbnailRenderer : DefaultSizedThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SkeletonThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): SkeletonThumbnailRenderer
        fun GetDefaultObject(): SkeletonThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SkeletonThumbnailRenderer
        fun C(Other: UObject): SkeletonThumbnailRenderer
        fun C(Other: Any): SkeletonThumbnailRenderer
    }
}

external open class SlateBrushAssetFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var InitialTexture: Texture2D

    companion object {
        fun Load(ResourceName: String): SlateBrushAssetFactory
        fun Find(Outer: UObject, ResourceName: String): SlateBrushAssetFactory
        fun GetDefaultObject(): SlateBrushAssetFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SlateBrushAssetFactory
        fun C(Other: UObject): SlateBrushAssetFactory
        fun C(Other: Any): SlateBrushAssetFactory
    }
}

external open class SlateBrushThumbnailRenderer : DefaultSizedThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SlateBrushThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): SlateBrushThumbnailRenderer
        fun GetDefaultObject(): SlateBrushThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SlateBrushThumbnailRenderer
        fun C(Other: UObject): SlateBrushThumbnailRenderer
        fun C(Other: Any): SlateBrushThumbnailRenderer
    }
}

external open class SlateWidgetStyleAssetFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var StyleType: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): SlateWidgetStyleAssetFactory
        fun Find(Outer: UObject, ResourceName: String): SlateWidgetStyleAssetFactory
        fun GetDefaultObject(): SlateWidgetStyleAssetFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SlateWidgetStyleAssetFactory
        fun C(Other: UObject): SlateWidgetStyleAssetFactory
        fun C(Other: Any): SlateWidgetStyleAssetFactory
    }
}

external open class SMInstanceElementDetailsInterface : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SMInstanceElementDetailsInterface
        fun Find(Outer: UObject, ResourceName: String): SMInstanceElementDetailsInterface
        fun GetDefaultObject(): SMInstanceElementDetailsInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SMInstanceElementDetailsInterface
        fun C(Other: UObject): SMInstanceElementDetailsInterface
        fun C(Other: Any): SMInstanceElementDetailsInterface
    }
}

external open class SMInstanceElementDetailsProxyObject : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Transform: Transform

    companion object {
        fun Load(ResourceName: String): SMInstanceElementDetailsProxyObject
        fun Find(Outer: UObject, ResourceName: String): SMInstanceElementDetailsProxyObject
        fun GetDefaultObject(): SMInstanceElementDetailsProxyObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SMInstanceElementDetailsProxyObject
        fun C(Other: UObject): SMInstanceElementDetailsProxyObject
        fun C(Other: Any): SMInstanceElementDetailsProxyObject
    }
}

external open class SMInstanceElementSelectionInterface : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SMInstanceElementSelectionInterface
        fun Find(Outer: UObject, ResourceName: String): SMInstanceElementSelectionInterface
        fun GetDefaultObject(): SMInstanceElementSelectionInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SMInstanceElementSelectionInterface
        fun C(Other: UObject): SMInstanceElementSelectionInterface
        fun C(Other: Any): SMInstanceElementSelectionInterface
    }
}

external open class SMInstanceElementEditorSelectionInterface : SMInstanceElementSelectionInterface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SMInstanceElementEditorSelectionInterface
        fun Find(Outer: UObject, ResourceName: String): SMInstanceElementEditorSelectionInterface
        fun GetDefaultObject(): SMInstanceElementEditorSelectionInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SMInstanceElementEditorSelectionInterface
        fun C(Other: UObject): SMInstanceElementEditorSelectionInterface
        fun C(Other: Any): SMInstanceElementEditorSelectionInterface
    }
}

external open class SMInstanceElementWorldInterface : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SMInstanceElementWorldInterface
        fun Find(Outer: UObject, ResourceName: String): SMInstanceElementWorldInterface
        fun GetDefaultObject(): SMInstanceElementWorldInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SMInstanceElementWorldInterface
        fun C(Other: UObject): SMInstanceElementWorldInterface
        fun C(Other: Any): SMInstanceElementWorldInterface
    }
}

external open class SMInstanceElementEditorWorldInterface : SMInstanceElementWorldInterface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SMInstanceElementEditorWorldInterface
        fun Find(Outer: UObject, ResourceName: String): SMInstanceElementEditorWorldInterface
        fun GetDefaultObject(): SMInstanceElementEditorWorldInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SMInstanceElementEditorWorldInterface
        fun C(Other: UObject): SMInstanceElementEditorWorldInterface
        fun C(Other: Any): SMInstanceElementEditorWorldInterface
    }
}

external open class SoundExporterOGG : Exporter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundExporterOGG
        fun Find(Outer: UObject, ResourceName: String): SoundExporterOGG
        fun GetDefaultObject(): SoundExporterOGG
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundExporterOGG
        fun C(Other: UObject): SoundExporterOGG
        fun C(Other: Any): SoundExporterOGG
    }
}

external open class SoundExporterWAV : Exporter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundExporterWAV
        fun Find(Outer: UObject, ResourceName: String): SoundExporterWAV
        fun GetDefaultObject(): SoundExporterWAV
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundExporterWAV
        fun C(Other: UObject): SoundExporterWAV
        fun C(Other: Any): SoundExporterWAV
    }
}

external open class SoundSurroundExporterWAV : Exporter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundSurroundExporterWAV
        fun Find(Outer: UObject, ResourceName: String): SoundSurroundExporterWAV
        fun GetDefaultObject(): SoundSurroundExporterWAV
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundSurroundExporterWAV
        fun C(Other: UObject): SoundSurroundExporterWAV
        fun C(Other: Any): SoundSurroundExporterWAV
    }
}

external open class SoundWaveThumbnailRenderer : DefaultSizedThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundWaveThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): SoundWaveThumbnailRenderer
        fun GetDefaultObject(): SoundWaveThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundWaveThumbnailRenderer
        fun C(Other: UObject): SoundWaveThumbnailRenderer
        fun C(Other: Any): SoundWaveThumbnailRenderer
    }
}

external open class SpiralStairBuilder : EditorBrushBuilder {
    constructor()
    constructor(Outer: UObject)
    open var InnerRadius: Number
    open var StepWidth: Number
    open var StepHeight: Number
    open var StepThickness: Number
    open var NumStepsPer360: Number
    open var NumSteps: Number
    open var GroupName: String
    open var SlopedCeiling: Boolean
    open var SlopedFloor: Boolean
    open var CounterClockwise: Boolean

    companion object {
        fun Load(ResourceName: String): SpiralStairBuilder
        fun Find(Outer: UObject, ResourceName: String): SpiralStairBuilder
        fun GetDefaultObject(): SpiralStairBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SpiralStairBuilder
        fun C(Other: UObject): SpiralStairBuilder
        fun C(Other: Any): SpiralStairBuilder
    }
}

external open class StabilizeLocalizationKeysCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): StabilizeLocalizationKeysCommandlet
        fun Find(Outer: UObject, ResourceName: String): StabilizeLocalizationKeysCommandlet
        fun GetDefaultObject(): StabilizeLocalizationKeysCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): StabilizeLocalizationKeysCommandlet
        fun C(Other: UObject): StabilizeLocalizationKeysCommandlet
        fun C(Other: Any): StabilizeLocalizationKeysCommandlet
    }
}

external open class StaticMeshExporterFBX : ExporterFBX {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): StaticMeshExporterFBX
        fun Find(Outer: UObject, ResourceName: String): StaticMeshExporterFBX
        fun GetDefaultObject(): StaticMeshExporterFBX
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): StaticMeshExporterFBX
        fun C(Other: UObject): StaticMeshExporterFBX
        fun C(Other: Any): StaticMeshExporterFBX
    }
}

external open class StaticMeshExporterOBJ : Exporter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): StaticMeshExporterOBJ
        fun Find(Outer: UObject, ResourceName: String): StaticMeshExporterOBJ
        fun GetDefaultObject(): StaticMeshExporterOBJ
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): StaticMeshExporterOBJ
        fun C(Other: UObject): StaticMeshExporterOBJ
        fun C(Other: Any): StaticMeshExporterOBJ
    }
}

external open class StaticMeshMinLodCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): StaticMeshMinLodCommandlet
        fun Find(Outer: UObject, ResourceName: String): StaticMeshMinLodCommandlet
        fun GetDefaultObject(): StaticMeshMinLodCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): StaticMeshMinLodCommandlet
        fun C(Other: UObject): StaticMeshMinLodCommandlet
        fun C(Other: Any): StaticMeshMinLodCommandlet
    }
}

external open class StaticMeshThumbnailRenderer : DefaultSizedThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): StaticMeshThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): StaticMeshThumbnailRenderer
        fun GetDefaultObject(): StaticMeshThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): StaticMeshThumbnailRenderer
        fun C(Other: UObject): StaticMeshThumbnailRenderer
        fun C(Other: Any): StaticMeshThumbnailRenderer
    }
}

external open class StringTableFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): StringTableFactory
        fun Find(Outer: UObject, ResourceName: String): StringTableFactory
        fun GetDefaultObject(): StringTableFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): StringTableFactory
        fun C(Other: UObject): StringTableFactory
        fun C(Other: Any): StringTableFactory
    }
}

external open class StructureFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): StructureFactory
        fun Find(Outer: UObject, ResourceName: String): StructureFactory
        fun GetDefaultObject(): StructureFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): StructureFactory
        fun C(Other: UObject): StructureFactory
        fun C(Other: Any): StructureFactory
    }
}

external object EStructViewerDeveloperType {
    var SVDT_None: String /* "SVDT_None" */
    var SVDT_CurrentUser: String /* "SVDT_CurrentUser" */
    var SVDT_All: String /* "SVDT_All" */
    var SVDT_Max: String /* "SVDT_Max" */
}

external open class StructViewerSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var DisplayInternalStructs: Boolean
    open var DeveloperFolderType: String /* "SVDT_None" | "SVDT_CurrentUser" | "SVDT_All" | "SVDT_Max" */

    companion object {
        fun Load(ResourceName: String): StructViewerSettings
        fun Find(Outer: UObject, ResourceName: String): StructViewerSettings
        fun GetDefaultObject(): StructViewerSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): StructViewerSettings
        fun C(Other: UObject): StructViewerSettings
        fun C(Other: Any): StructViewerSettings
    }
}

external open class SubsurfaceProfileFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SubsurfaceProfileFactory
        fun Find(Outer: UObject, ResourceName: String): SubsurfaceProfileFactory
        fun GetDefaultObject(): SubsurfaceProfileFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SubsurfaceProfileFactory
        fun C(Other: UObject): SubsurfaceProfileFactory
        fun C(Other: Any): SubsurfaceProfileFactory
    }
}

external open class SubsurfaceProfileRenderer : TextureThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SubsurfaceProfileRenderer
        fun Find(Outer: UObject, ResourceName: String): SubsurfaceProfileRenderer
        fun GetDefaultObject(): SubsurfaceProfileRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SubsurfaceProfileRenderer
        fun C(Other: UObject): SubsurfaceProfileRenderer
        fun C(Other: Any): SubsurfaceProfileRenderer
    }
}

external open class SubUVAnimationFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var InitialTexture: Texture2D

    companion object {
        fun Load(ResourceName: String): SubUVAnimationFactory
        fun Find(Outer: UObject, ResourceName: String): SubUVAnimationFactory
        fun GetDefaultObject(): SubUVAnimationFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SubUVAnimationFactory
        fun C(Other: UObject): SubUVAnimationFactory
        fun C(Other: Any): SubUVAnimationFactory
    }
}

external open class SummarizeTraceCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SummarizeTraceCommandlet
        fun Find(Outer: UObject, ResourceName: String): SummarizeTraceCommandlet
        fun GetDefaultObject(): SummarizeTraceCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SummarizeTraceCommandlet
        fun C(Other: UObject): SummarizeTraceCommandlet
        fun C(Other: Any): SummarizeTraceCommandlet
    }
}

external open class SwapSoundForDialogueInCuesCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SwapSoundForDialogueInCuesCommandlet
        fun Find(Outer: UObject, ResourceName: String): SwapSoundForDialogueInCuesCommandlet
        fun GetDefaultObject(): SwapSoundForDialogueInCuesCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SwapSoundForDialogueInCuesCommandlet
        fun C(Other: UObject): SwapSoundForDialogueInCuesCommandlet
        fun C(Other: Any): SwapSoundForDialogueInCuesCommandlet
    }
}

external open class TemplateMapMetadata : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TemplateMapMetadata
        fun Find(Outer: UObject, ResourceName: String): TemplateMapMetadata
        fun GetDefaultObject(): TemplateMapMetadata
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TemplateMapMetadata
        fun C(Other: UObject): TemplateMapMetadata
        fun C(Other: Any): TemplateMapMetadata
    }
}

external open class TetrahedronBuilder : EditorBrushBuilder {
    constructor()
    constructor(Outer: UObject)
    open var Radius: Number
    open var SphereExtrapolation: Number
    open var GroupName: String

    companion object {
        fun Load(ResourceName: String): TetrahedronBuilder
        fun Find(Outer: UObject, ResourceName: String): TetrahedronBuilder
        fun GetDefaultObject(): TetrahedronBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TetrahedronBuilder
        fun C(Other: UObject): TetrahedronBuilder
        fun C(Other: Any): TetrahedronBuilder
    }
}

external object ETexAlign {
    var TEXALIGN_None: String /* "TEXALIGN_None" */
    var TEXALIGN_Default: String /* "TEXALIGN_Default" */
    var TEXALIGN_Box: String /* "TEXALIGN_Box" */
    var TEXALIGN_Planar: String /* "TEXALIGN_Planar" */
    var TEXALIGN_Fit: String /* "TEXALIGN_Fit" */
    var TEXALIGN_PlanarAuto: String /* "TEXALIGN_PlanarAuto" */
    var TEXALIGN_PlanarWall: String /* "TEXALIGN_PlanarWall" */
    var TEXALIGN_PlanarFloor: String /* "TEXALIGN_PlanarFloor" */
    var TEXALIGN_MAX: String /* "TEXALIGN_MAX" */
}

external open class TexAligner : UObject {
    constructor()
    constructor(Outer: UObject)
    open var DefTexAlign: String /* "TEXALIGN_None" | "TEXALIGN_Default" | "TEXALIGN_Box" | "TEXALIGN_Planar" | "TEXALIGN_Fit" | "TEXALIGN_PlanarAuto" | "TEXALIGN_PlanarWall" | "TEXALIGN_PlanarFloor" | "TEXALIGN_MAX" */
    open var TAxis: Number
    open var UTile: Number
    open var VTile: Number
    open var Desc: String

    companion object {
        fun Load(ResourceName: String): TexAligner
        fun Find(Outer: UObject, ResourceName: String): TexAligner
        fun GetDefaultObject(): TexAligner
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TexAligner
        fun C(Other: UObject): TexAligner
        fun C(Other: Any): TexAligner
    }
}

external open class TexAlignerBox : TexAligner {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TexAlignerBox
        fun Find(Outer: UObject, ResourceName: String): TexAlignerBox
        fun GetDefaultObject(): TexAlignerBox
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TexAlignerBox
        fun C(Other: UObject): TexAlignerBox
        fun C(Other: Any): TexAlignerBox
    }
}

external open class TexAlignerDefault : TexAligner {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TexAlignerDefault
        fun Find(Outer: UObject, ResourceName: String): TexAlignerDefault
        fun GetDefaultObject(): TexAlignerDefault
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TexAlignerDefault
        fun C(Other: UObject): TexAlignerDefault
        fun C(Other: Any): TexAlignerDefault
    }
}

external open class TexAlignerFit : TexAligner {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TexAlignerFit
        fun Find(Outer: UObject, ResourceName: String): TexAlignerFit
        fun GetDefaultObject(): TexAlignerFit
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TexAlignerFit
        fun C(Other: UObject): TexAlignerFit
        fun C(Other: Any): TexAlignerFit
    }
}

external open class TexAlignerPlanar : TexAligner {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TexAlignerPlanar
        fun Find(Outer: UObject, ResourceName: String): TexAlignerPlanar
        fun GetDefaultObject(): TexAlignerPlanar
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TexAlignerPlanar
        fun C(Other: UObject): TexAlignerPlanar
        fun C(Other: Any): TexAlignerPlanar
    }
}

external open class TextAssetCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TextAssetCommandlet
        fun Find(Outer: UObject, ResourceName: String): TextAssetCommandlet
        fun GetDefaultObject(): TextAssetCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextAssetCommandlet
        fun C(Other: UObject): TextAssetCommandlet
        fun C(Other: Any): TextAssetCommandlet
    }
}

external open class TextBufferExporterTXT : Exporter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TextBufferExporterTXT
        fun Find(Outer: UObject, ResourceName: String): TextBufferExporterTXT
        fun GetDefaultObject(): TextBufferExporterTXT
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextBufferExporterTXT
        fun C(Other: UObject): TextBufferExporterTXT
        fun C(Other: Any): TextBufferExporterTXT
    }
}

external open class Texture2DArrayFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var InitialTextures: Array<Texture2D>

    companion object {
        fun Load(ResourceName: String): Texture2DArrayFactory
        fun Find(Outer: UObject, ResourceName: String): Texture2DArrayFactory
        fun GetDefaultObject(): Texture2DArrayFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Texture2DArrayFactory
        fun C(Other: UObject): Texture2DArrayFactory
        fun C(Other: Any): Texture2DArrayFactory
    }
}

external open class Texture2DArrayThumbnailRenderer : TextureThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): Texture2DArrayThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): Texture2DArrayThumbnailRenderer
        fun GetDefaultObject(): Texture2DArrayThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Texture2DArrayThumbnailRenderer
        fun C(Other: UObject): Texture2DArrayThumbnailRenderer
        fun C(Other: Any): Texture2DArrayThumbnailRenderer
    }
}

external open class Texture2DFactoryNew : Factory {
    constructor()
    constructor(Outer: UObject)
    open var Width: Number
    open var Height: Number

    companion object {
        fun Load(ResourceName: String): Texture2DFactoryNew
        fun Find(Outer: UObject, ResourceName: String): Texture2DFactoryNew
        fun GetDefaultObject(): Texture2DFactoryNew
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Texture2DFactoryNew
        fun C(Other: UObject): Texture2DFactoryNew
        fun C(Other: Any): Texture2DFactoryNew
    }
}

external open class TextureCubeArrayFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var InitialTextures: Array<TextureCube>

    companion object {
        fun Load(ResourceName: String): TextureCubeArrayFactory
        fun Find(Outer: UObject, ResourceName: String): TextureCubeArrayFactory
        fun GetDefaultObject(): TextureCubeArrayFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextureCubeArrayFactory
        fun C(Other: UObject): TextureCubeArrayFactory
        fun C(Other: Any): TextureCubeArrayFactory
    }
}

external open class TextureCubeArrayThumbnailRenderer : TextureThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TextureCubeArrayThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): TextureCubeArrayThumbnailRenderer
        fun GetDefaultObject(): TextureCubeArrayThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextureCubeArrayThumbnailRenderer
        fun C(Other: UObject): TextureCubeArrayThumbnailRenderer
        fun C(Other: Any): TextureCubeArrayThumbnailRenderer
    }
}

external open class TextureCubeExporterHDR : Exporter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TextureCubeExporterHDR
        fun Find(Outer: UObject, ResourceName: String): TextureCubeExporterHDR
        fun GetDefaultObject(): TextureCubeExporterHDR
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextureCubeExporterHDR
        fun C(Other: UObject): TextureCubeExporterHDR
        fun C(Other: Any): TextureCubeExporterHDR
    }
}

external open class TextureCubeThumbnailRenderer : TextureThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TextureCubeThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): TextureCubeThumbnailRenderer
        fun GetDefaultObject(): TextureCubeThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextureCubeThumbnailRenderer
        fun C(Other: UObject): TextureCubeThumbnailRenderer
        fun C(Other: Any): TextureCubeThumbnailRenderer
    }
}

external open class TextureExporterBMP : Exporter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TextureExporterBMP
        fun Find(Outer: UObject, ResourceName: String): TextureExporterBMP
        fun GetDefaultObject(): TextureExporterBMP
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextureExporterBMP
        fun C(Other: UObject): TextureExporterBMP
        fun C(Other: Any): TextureExporterBMP
    }
}

external open class VirtualTextureBuilderExporterBMP : TextureExporterBMP {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): VirtualTextureBuilderExporterBMP
        fun Find(Outer: UObject, ResourceName: String): VirtualTextureBuilderExporterBMP
        fun GetDefaultObject(): VirtualTextureBuilderExporterBMP
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VirtualTextureBuilderExporterBMP
        fun C(Other: UObject): VirtualTextureBuilderExporterBMP
        fun C(Other: Any): VirtualTextureBuilderExporterBMP
    }
}

external open class TextureExporterHDR : Exporter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TextureExporterHDR
        fun Find(Outer: UObject, ResourceName: String): TextureExporterHDR
        fun GetDefaultObject(): TextureExporterHDR
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextureExporterHDR
        fun C(Other: UObject): TextureExporterHDR
        fun C(Other: Any): TextureExporterHDR
    }
}

external open class TextureExporterPCX : Exporter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TextureExporterPCX
        fun Find(Outer: UObject, ResourceName: String): TextureExporterPCX
        fun GetDefaultObject(): TextureExporterPCX
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextureExporterPCX
        fun C(Other: UObject): TextureExporterPCX
        fun C(Other: Any): TextureExporterPCX
    }
}

external open class TextureExporterTGA : Exporter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TextureExporterTGA
        fun Find(Outer: UObject, ResourceName: String): TextureExporterTGA
        fun GetDefaultObject(): TextureExporterTGA
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextureExporterTGA
        fun C(Other: UObject): TextureExporterTGA
        fun C(Other: Any): TextureExporterTGA
    }
}

external open class TextureRenderTarget2DArrayFactoryNew : Factory {
    constructor()
    constructor(Outer: UObject)
    open var Width: Number
    open var Height: Number
    open var Slices: Number
    open var Format: Number

    companion object {
        fun Load(ResourceName: String): TextureRenderTarget2DArrayFactoryNew
        fun Find(Outer: UObject, ResourceName: String): TextureRenderTarget2DArrayFactoryNew
        fun GetDefaultObject(): TextureRenderTarget2DArrayFactoryNew
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextureRenderTarget2DArrayFactoryNew
        fun C(Other: UObject): TextureRenderTarget2DArrayFactoryNew
        fun C(Other: Any): TextureRenderTarget2DArrayFactoryNew
    }
}

external open class TextureRenderTargetCubeFactoryNew : Factory {
    constructor()
    constructor(Outer: UObject)
    open var Width: Number
    open var Format: Number

    companion object {
        fun Load(ResourceName: String): TextureRenderTargetCubeFactoryNew
        fun Find(Outer: UObject, ResourceName: String): TextureRenderTargetCubeFactoryNew
        fun GetDefaultObject(): TextureRenderTargetCubeFactoryNew
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextureRenderTargetCubeFactoryNew
        fun C(Other: UObject): TextureRenderTargetCubeFactoryNew
        fun C(Other: Any): TextureRenderTargetCubeFactoryNew
    }
}

external open class TextureRenderTargetFactoryNew : Factory {
    constructor()
    constructor(Outer: UObject)
    open var Width: Number
    open var Height: Number
    open var Format: Number

    companion object {
        fun Load(ResourceName: String): TextureRenderTargetFactoryNew
        fun Find(Outer: UObject, ResourceName: String): TextureRenderTargetFactoryNew
        fun GetDefaultObject(): TextureRenderTargetFactoryNew
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextureRenderTargetFactoryNew
        fun C(Other: UObject): TextureRenderTargetFactoryNew
        fun C(Other: Any): TextureRenderTargetFactoryNew
    }
}

external open class TextureRenderTargetVolumeFactoryNew : Factory {
    constructor()
    constructor(Outer: UObject)
    open var Width: Number
    open var Height: Number
    open var Depth: Number
    open var Format: Number

    companion object {
        fun Load(ResourceName: String): TextureRenderTargetVolumeFactoryNew
        fun Find(Outer: UObject, ResourceName: String): TextureRenderTargetVolumeFactoryNew
        fun GetDefaultObject(): TextureRenderTargetVolumeFactoryNew
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextureRenderTargetVolumeFactoryNew
        fun C(Other: UObject): TextureRenderTargetVolumeFactoryNew
        fun C(Other: Any): TextureRenderTargetVolumeFactoryNew
    }
}

external open class SkeletalMeshActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var bShouldDoAnimNotifies: Boolean
    open var bWakeOnLevelStart: Boolean
    open var SkeletalMeshComponent: SkeletalMeshComponent
    open var ReplicatedMesh: SkeletalMesh
    open var ReplicatedPhysAsset: PhysicsAsset
    open var ReplicatedMaterial0: MaterialInterface
    open var ReplicatedMaterial1: MaterialInterface
    open fun OnRep_ReplicatedPhysAsset()
    open fun OnRep_ReplicatedMesh()
    open fun OnRep_ReplicatedMaterial1()
    open fun OnRep_ReplicatedMaterial0()

    companion object {
        fun GetDefaultObject(): SkeletalMeshActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SkeletalMeshActor
        fun C(Other: UObject): SkeletalMeshActor
        fun C(Other: Any): SkeletalMeshActor
    }
}

external open class AnimationThumbnailSkeletalMeshActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : SkeletalMeshActor {
    companion object {
        fun GetDefaultObject(): AnimationThumbnailSkeletalMeshActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationThumbnailSkeletalMeshActor
        fun C(Other: UObject): AnimationThumbnailSkeletalMeshActor
        fun C(Other: Any): AnimationThumbnailSkeletalMeshActor
    }
}

external open class ThumbnailRenderingInfo {
    open var ClassNeedingThumbnailName: String
    open var ClassNeedingThumbnail: UnrealEngineClass
    open var RendererClassName: String
    open var Renderer: ThumbnailRenderer
    open fun clone(): ThumbnailRenderingInfo

    companion object {
        fun C(Other: UObject): ThumbnailRenderingInfo
        fun C(Other: Any): ThumbnailRenderingInfo
    }
}

external open class ThumbnailManager : UObject {
    constructor()
    constructor(Outer: UObject)
    open var NotSupported: ThumbnailRenderingInfo
    open var EditorCube: StaticMesh
    open var EditorSphere: StaticMesh
    open var EditorCylinder: StaticMesh
    open var EditorPlane: StaticMesh
    open var EditorSkySphere: StaticMesh
    open var FloorPlaneMaterial: Material
    open var AmbientCubemap: TextureCube
    open var CheckerboardTexture: Texture2D
    open var RenderableThumbnailTypes: Array<ThumbnailRenderingInfo>
    open var ThumbnailManagerClassName: String

    companion object {
        fun Load(ResourceName: String): ThumbnailManager
        fun Find(Outer: UObject, ResourceName: String): ThumbnailManager
        fun GetDefaultObject(): ThumbnailManager
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ThumbnailManager
        fun C(Other: UObject): ThumbnailManager
        fun C(Other: Any): ThumbnailManager
    }
}

external open class TouchInterfaceFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TouchInterfaceFactory
        fun Find(Outer: UObject, ResourceName: String): TouchInterfaceFactory
        fun GetDefaultObject(): TouchInterfaceFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TouchInterfaceFactory
        fun C(Other: UObject): TouchInterfaceFactory
        fun C(Other: Any): TouchInterfaceFactory
    }
}

external open class TransBuffer : Transactor {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TransBuffer
        fun Find(Outer: UObject, ResourceName: String): TransBuffer
        fun GetDefaultObject(): TransBuffer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TransBuffer
        fun C(Other: UObject): TransBuffer
        fun C(Other: Any): TransBuffer
    }
}

external open class FontImportOptions : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Data: FontImportOptionsData

    companion object {
        fun Load(ResourceName: String): FontImportOptions
        fun Find(Outer: UObject, ResourceName: String): FontImportOptions
        fun GetDefaultObject(): FontImportOptions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FontImportOptions
        fun C(Other: UObject): FontImportOptions
        fun C(Other: Any): FontImportOptions
    }
}

external open class TrueTypeFontFactory : TextureFactory {
    constructor()
    constructor(Outer: UObject)
    open var ImportOptions: FontImportOptions
    open var bPropertiesConfigured: Boolean
    open var bFontSelected: Boolean

    companion object {
        fun Load(ResourceName: String): TrueTypeFontFactory
        fun Find(Outer: UObject, ResourceName: String): TrueTypeFontFactory
        fun GetDefaultObject(): TrueTypeFontFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TrueTypeFontFactory
        fun C(Other: UObject): TrueTypeFontFactory
        fun C(Other: Any): TrueTypeFontFactory
    }
}

external open class EditorCommandCategory {
    open var Parent: String
    open var Name: String
    open fun clone(): EditorCommandCategory

    companion object {
        fun C(Other: UObject): EditorCommandCategory
        fun C(Other: Any): EditorCommandCategory
    }
}

external open class EditorCommand {
    open var Parent: String
    open var CommandName: String
    open var ExecCommand: String
    open var Description: String
    open fun clone(): EditorCommand

    companion object {
        fun C(Other: UObject): EditorCommand
        fun C(Other: Any): EditorCommand
    }
}

external open class EditorKeyBinding {
    open var bCtrlDown: Boolean
    open var bAltDown: Boolean
    open var bShiftDown: Boolean
    open var Key: Key
    open var CommandName: String
    open fun clone(): EditorKeyBinding

    companion object {
        fun C(Other: UObject): EditorKeyBinding
        fun C(Other: Any): EditorKeyBinding
    }
}

external open class UnrealEdKeyBindings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var KeyBindings: Array<EditorKeyBinding>

    companion object {
        fun Load(ResourceName: String): UnrealEdKeyBindings
        fun Find(Outer: UObject, ResourceName: String): UnrealEdKeyBindings
        fun GetDefaultObject(): UnrealEdKeyBindings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UnrealEdKeyBindings
        fun C(Other: UObject): UnrealEdKeyBindings
        fun C(Other: Any): UnrealEdKeyBindings
    }
}

external open class ClassPickerDefaults {
    open var ClassName: String
    open var AssetClass: String
    open fun clone(): ClassPickerDefaults

    companion object {
        fun C(Other: UObject): ClassPickerDefaults
        fun C(Other: Any): ClassPickerDefaults
    }
}

external open class UnrealEdOptions : UObject {
    constructor()
    constructor(Outer: UObject)
    open var EditorCategories: Array<EditorCommandCategory>
    open var EditorCommands: Array<EditorCommand>
    open var EditorKeyBindings: UnrealEdKeyBindings
    open var bExpandClassPickerClassList: Boolean
    open var NewAssetDefaultClasses: Array<ClassPickerDefaults>

    companion object {
        fun Load(ResourceName: String): UnrealEdOptions
        fun Find(Outer: UObject, ResourceName: String): UnrealEdOptions
        fun GetDefaultObject(): UnrealEdOptions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UnrealEdOptions
        fun C(Other: UObject): UnrealEdOptions
        fun C(Other: Any): UnrealEdOptions
    }
}

external object AnimationCompressionFormat {
    var ACF_None: String /* "ACF_None" */
    var ACF_Float96NoW: String /* "ACF_Float96NoW" */
    var ACF_Fixed48NoW: String /* "ACF_Fixed48NoW" */
    var ACF_IntervalFixed32NoW: String /* "ACF_IntervalFixed32NoW" */
    var ACF_Fixed32NoW: String /* "ACF_Fixed32NoW" */
    var ACF_Float32NoW: String /* "ACF_Float32NoW" */
    var ACF_Identity: String /* "ACF_Identity" */
    var ACF_MAX: String /* "ACF_MAX" */
}

external open class AnimCompress : AnimBoneCompressionCodec {
    constructor()
    constructor(Outer: UObject)
    open var bNeedsSkeleton: Boolean
    open var TranslationCompressionFormat: String /* "ACF_None" | "ACF_Float96NoW" | "ACF_Fixed48NoW" | "ACF_IntervalFixed32NoW" | "ACF_Fixed32NoW" | "ACF_Float32NoW" | "ACF_Identity" | "ACF_MAX" */
    open var RotationCompressionFormat: String /* "ACF_None" | "ACF_Float96NoW" | "ACF_Fixed48NoW" | "ACF_IntervalFixed32NoW" | "ACF_Fixed32NoW" | "ACF_Float32NoW" | "ACF_Identity" | "ACF_MAX" */
    open var ScaleCompressionFormat: String /* "ACF_None" | "ACF_Float96NoW" | "ACF_Fixed48NoW" | "ACF_IntervalFixed32NoW" | "ACF_Fixed32NoW" | "ACF_Float32NoW" | "ACF_Identity" | "ACF_MAX" */

    companion object {
        fun Load(ResourceName: String): AnimCompress
        fun Find(Outer: UObject, ResourceName: String): AnimCompress
        fun GetDefaultObject(): AnimCompress
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimCompress
        fun C(Other: UObject): AnimCompress
        fun C(Other: Any): AnimCompress
    }
}

external open class TemplateMapInfo {
    open var ThumbnailTexture: Texture2D
    open var Thumbnail: SoftObjectPath
    open var Map: SoftObjectPath
    open var DisplayName: String
    open var Category: String
    open fun clone(): TemplateMapInfo

    companion object {
        fun C(Other: UObject): TemplateMapInfo
        fun C(Other: Any): TemplateMapInfo
    }
}

external open class UnrealEdEngine : EditorEngine {
    constructor()
    constructor(Outer: UObject)
    open var EditorOptionsInst: UnrealEdOptions
    open var AutoReimportManager: AutoReimportManager
    open var MaterialCopyPasteBuffer: Material
    open var SoundCueCopyPasteBuffer: SoundCue
    open var AnimationCompressionAlgorithms: Array<AnimCompress>
    open var PackagesToBeFullyLoadedAtStartup: Array<String>
    open var CurrentLODParentActor: Actor
    open var bNeedWarningForPkgEngineVer: Boolean
    open var SortedSpriteCategories: Array<String>
    open var TemplateMapInfos: Array<TemplateMapInfo>
    open var CookServer: CookOnTheFlyServer

    companion object {
        fun Load(ResourceName: String): UnrealEdEngine
        fun Find(Outer: UObject, ResourceName: String): UnrealEdEngine
        fun GetDefaultObject(): UnrealEdEngine
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UnrealEdEngine
        fun C(Other: UObject): UnrealEdEngine
        fun C(Other: Any): UnrealEdEngine
    }
}

external open class UnrealEditorSubsystem : EditorSubsystem {
    constructor()
    constructor(Outer: UObject)
    open fun SetLevelViewportCameraInfo(CameraLocation: Vector, CameraRotation: Rotator)
    open fun GetLevelViewportCameraInfo(CameraLocation: Vector = definedExternally, CameraRotation: Rotator = definedExternally): `T$432`
    open fun GetGameWorld(): World
    open fun GetEditorWorld(): World

    companion object {
        fun Load(ResourceName: String): UnrealEditorSubsystem
        fun Find(Outer: UObject, ResourceName: String): UnrealEditorSubsystem
        fun GetDefaultObject(): UnrealEditorSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UnrealEditorSubsystem
        fun C(Other: UObject): UnrealEditorSubsystem
        fun C(Other: Any): UnrealEditorSubsystem
    }
}

external open class UnrealEdTypes : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): UnrealEdTypes
        fun Find(Outer: UObject, ResourceName: String): UnrealEdTypes
        fun GetDefaultObject(): UnrealEdTypes
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UnrealEdTypes
        fun C(Other: UObject): UnrealEdTypes
        fun C(Other: Any): UnrealEdTypes
    }
}

external open class UnrealPakCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): UnrealPakCommandlet
        fun Find(Outer: UObject, ResourceName: String): UnrealPakCommandlet
        fun GetDefaultObject(): UnrealPakCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UnrealPakCommandlet
        fun C(Other: UObject): UnrealPakCommandlet
        fun C(Other: Any): UnrealPakCommandlet
    }
}

external open class UpdateGameProjectCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): UpdateGameProjectCommandlet
        fun Find(Outer: UObject, ResourceName: String): UpdateGameProjectCommandlet
        fun GetDefaultObject(): UpdateGameProjectCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UpdateGameProjectCommandlet
        fun C(Other: UObject): UpdateGameProjectCommandlet
        fun C(Other: Any): UpdateGameProjectCommandlet
    }
}

external open class StructVariableDescription {
    open var VarName: String
    open var VarGuid: Guid
    open var FriendlyName: String
    open var DefaultValue: String
    open var Category: String
    open var SubCategory: String
    open var SubCategoryObject: UObject
    open var PinValueType: EdGraphTerminalType
    open var ContainerType: String /* "None" | "Array" | "Set" | "Map" | "EPinContainerType_MAX" */
    open var bIsArray: Boolean
    open var bIsSet: Boolean
    open var bIsMap: Boolean
    open var bInvalidMember: Boolean
    open var bDontEditOnInstance: Boolean
    open var bEnableSaveGame: Boolean
    open var bEnableMultiLineText: Boolean
    open var bEnable3dWidget: Boolean
    open var CurrentDefaultValue: String
    open var Tooltip: String
    open fun clone(): StructVariableDescription

    companion object {
        fun C(Other: UObject): StructVariableDescription
        fun C(Other: Any): StructVariableDescription
    }
}

external open class UserDefinedStructEditorData : UObject {
    constructor()
    constructor(Outer: UObject)
    open var UniqueNameId: Any
    open var VariablesDescriptions: Array<StructVariableDescription>
    open var Tooltip: String

    companion object {
        fun Load(ResourceName: String): UserDefinedStructEditorData
        fun Find(Outer: UObject, ResourceName: String): UserDefinedStructEditorData
        fun GetDefaultObject(): UserDefinedStructEditorData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UserDefinedStructEditorData
        fun C(Other: UObject): UserDefinedStructEditorData
        fun C(Other: Any): UserDefinedStructEditorData
    }
}

external open class VectorFieldExporter : Exporter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): VectorFieldExporter
        fun Find(Outer: UObject, ResourceName: String): VectorFieldExporter
        fun GetDefaultObject(): VectorFieldExporter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VectorFieldExporter
        fun C(Other: UObject): VectorFieldExporter
        fun C(Other: Any): VectorFieldExporter
    }
}

external open class VolumeTextureFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var InitialTexture: Texture2D

    companion object {
        fun Load(ResourceName: String): VolumeTextureFactory
        fun Find(Outer: UObject, ResourceName: String): VolumeTextureFactory
        fun GetDefaultObject(): VolumeTextureFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VolumeTextureFactory
        fun C(Other: UObject): VolumeTextureFactory
        fun C(Other: Any): VolumeTextureFactory
    }
}

external open class VolumeTextureThumbnailRenderer : DefaultSizedThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)
    open var MaterialInstance: MaterialInstanceConstant

    companion object {
        fun Load(ResourceName: String): VolumeTextureThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): VolumeTextureThumbnailRenderer
        fun GetDefaultObject(): VolumeTextureThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VolumeTextureThumbnailRenderer
        fun C(Other: UObject): VolumeTextureThumbnailRenderer
        fun C(Other: Any): VolumeTextureThumbnailRenderer
    }
}

external open class VolumetricBuilder : EditorBrushBuilder {
    constructor()
    constructor(Outer: UObject)
    open var Z: Number
    open var Radius: Number
    open var NumSheets: Number
    open var GroupName: String

    companion object {
        fun Load(ResourceName: String): VolumetricBuilder
        fun Find(Outer: UObject, ResourceName: String): VolumetricBuilder
        fun GetDefaultObject(): VolumetricBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VolumetricBuilder
        fun C(Other: UObject): VolumetricBuilder
        fun C(Other: Any): VolumetricBuilder
    }
}

external open class WorldFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): WorldFactory
        fun Find(Outer: UObject, ResourceName: String): WorldFactory
        fun GetDefaultObject(): WorldFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WorldFactory
        fun C(Other: UObject): WorldFactory
        fun C(Other: Any): WorldFactory
    }
}

external open class WorldFolders : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): WorldFolders
        fun Find(Outer: UObject, ResourceName: String): WorldFolders
        fun GetDefaultObject(): WorldFolders
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WorldFolders
        fun C(Other: UObject): WorldFolders
        fun C(Other: Any): WorldFolders
    }
}

external open class WorldPartitionBuilder : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): WorldPartitionBuilder
        fun Find(Outer: UObject, ResourceName: String): WorldPartitionBuilder
        fun GetDefaultObject(): WorldPartitionBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WorldPartitionBuilder
        fun C(Other: UObject): WorldPartitionBuilder
        fun C(Other: Any): WorldPartitionBuilder
    }
}

external open class WorldPartitionBuilderCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)
    open var Builders: Array<WorldPartitionBuilder>

    companion object {
        fun Load(ResourceName: String): WorldPartitionBuilderCommandlet
        fun Find(Outer: UObject, ResourceName: String): WorldPartitionBuilderCommandlet
        fun GetDefaultObject(): WorldPartitionBuilderCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WorldPartitionBuilderCommandlet
        fun C(Other: UObject): WorldPartitionBuilderCommandlet
        fun C(Other: Any): WorldPartitionBuilderCommandlet
    }
}

external open class WorldPartitionBuildNavigationOptions : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bVerbose: Boolean
    open var bCleanPackages: Boolean

    companion object {
        fun Load(ResourceName: String): WorldPartitionBuildNavigationOptions
        fun Find(Outer: UObject, ResourceName: String): WorldPartitionBuildNavigationOptions
        fun GetDefaultObject(): WorldPartitionBuildNavigationOptions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WorldPartitionBuildNavigationOptions
        fun C(Other: UObject): WorldPartitionBuildNavigationOptions
        fun C(Other: Any): WorldPartitionBuildNavigationOptions
    }
}

external open class HLODLayerActorMapping {
    open var ActorClass: Class
    open var HLODLayer: String
    open fun clone(): HLODLayerActorMapping

    companion object {
        fun C(Other: UObject): HLODLayerActorMapping
        fun C(Other: Any): HLODLayerActorMapping
    }
}

external open class WorldPartitionConvertCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)
    open var EditorHashClass: UnrealEngineClass
    open var RuntimeHashClass: UnrealEngineClass
    open var ExcludedLevels: Array<String>
    open var bConvertActorsNotReferencedByLevelScript: Boolean
    open var WorldOrigin: Vector
    open var WorldExtent: Vector
    open var HLODLayerAssetsPath: String
    open var DefaultHLODLayerName: String
    open var FoliageTypePath: String
    open var HLODLayersForActorClasses: Array<HLODLayerActorMapping>
    open var HLODLayers: Any
    open var LandscapeGridSize: Any

    companion object {
        fun Load(ResourceName: String): WorldPartitionConvertCommandlet
        fun Find(Outer: UObject, ResourceName: String): WorldPartitionConvertCommandlet
        fun GetDefaultObject(): WorldPartitionConvertCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WorldPartitionConvertCommandlet
        fun C(Other: UObject): WorldPartitionConvertCommandlet
        fun C(Other: Any): WorldPartitionConvertCommandlet
    }
}

external open class WorldPartitionFoliageBuilder : WorldPartitionBuilder {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): WorldPartitionFoliageBuilder
        fun Find(Outer: UObject, ResourceName: String): WorldPartitionFoliageBuilder
        fun GetDefaultObject(): WorldPartitionFoliageBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WorldPartitionFoliageBuilder
        fun C(Other: UObject): WorldPartitionFoliageBuilder
        fun C(Other: Any): WorldPartitionFoliageBuilder
    }
}

external open class WorldPartitionHLODsBuilder : WorldPartitionBuilder {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): WorldPartitionHLODsBuilder
        fun Find(Outer: UObject, ResourceName: String): WorldPartitionHLODsBuilder
        fun GetDefaultObject(): WorldPartitionHLODsBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WorldPartitionHLODsBuilder
        fun C(Other: UObject): WorldPartitionHLODsBuilder
        fun C(Other: Any): WorldPartitionHLODsBuilder
    }
}

external open class WorldPartitionMiniMapBuilder : WorldPartitionBuilder {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): WorldPartitionMiniMapBuilder
        fun Find(Outer: UObject, ResourceName: String): WorldPartitionMiniMapBuilder
        fun GetDefaultObject(): WorldPartitionMiniMapBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WorldPartitionMiniMapBuilder
        fun C(Other: UObject): WorldPartitionMiniMapBuilder
        fun C(Other: Any): WorldPartitionMiniMapBuilder
    }
}

external open class WorldPartitionNavigationDataBuilder : WorldPartitionBuilder {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): WorldPartitionNavigationDataBuilder
        fun Find(Outer: UObject, ResourceName: String): WorldPartitionNavigationDataBuilder
        fun GetDefaultObject(): WorldPartitionNavigationDataBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WorldPartitionNavigationDataBuilder
        fun C(Other: UObject): WorldPartitionNavigationDataBuilder
        fun C(Other: Any): WorldPartitionNavigationDataBuilder
    }
}

external open class WorldPartitionRenameDuplicateBuilder : WorldPartitionBuilder {
    constructor()
    constructor(Outer: UObject)
    open var DuplicatedObjects: Any

    companion object {
        fun Load(ResourceName: String): WorldPartitionRenameDuplicateBuilder
        fun Find(Outer: UObject, ResourceName: String): WorldPartitionRenameDuplicateBuilder
        fun GetDefaultObject(): WorldPartitionRenameDuplicateBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WorldPartitionRenameDuplicateBuilder
        fun C(Other: UObject): WorldPartitionRenameDuplicateBuilder
        fun C(Other: Any): WorldPartitionRenameDuplicateBuilder
    }
}

external open class WorldPartitionResaveActorsBuilder : WorldPartitionBuilder {
    constructor()
    constructor(Outer: UObject)
    open var ActorClassName: String
    open var bReportOnly: Boolean
    open var bResaveDirtyActorDescsOnly: Boolean
    open var bSwitchActorPackagingSchemeToReduced: Boolean
    open var bEnableActorFolders: Boolean

    companion object {
        fun Load(ResourceName: String): WorldPartitionResaveActorsBuilder
        fun Find(Outer: UObject, ResourceName: String): WorldPartitionResaveActorsBuilder
        fun GetDefaultObject(): WorldPartitionResaveActorsBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WorldPartitionResaveActorsBuilder
        fun C(Other: UObject): WorldPartitionResaveActorsBuilder
        fun C(Other: Any): WorldPartitionResaveActorsBuilder
    }
}

external object EOrthoThumbnailDirection {
    var Top: String /* "Top" */
    var Bottom: String /* "Bottom" */
    var Left: String /* "Left" */
    var Right: String /* "Right" */
    var Front: String /* "Front" */
    var Back: String /* "Back" */
    var EOrthoThumbnailDirection_MAX: String /* "EOrthoThumbnailDirection_MAX" */
}

external open class WorldThumbnailInfo : SceneThumbnailInfo {
    constructor()
    constructor(Outer: UObject)
    open var CameraMode: String /* "Perspective" | "Orthographic" | "ECameraProjectionMode_MAX" */
    open var OrthoDirection: String /* "Top" | "Bottom" | "Left" | "Right" | "Front" | "Back" | "EOrthoThumbnailDirection_MAX" */

    companion object {
        fun Load(ResourceName: String): WorldThumbnailInfo
        fun Find(Outer: UObject, ResourceName: String): WorldThumbnailInfo
        fun GetDefaultObject(): WorldThumbnailInfo
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WorldThumbnailInfo
        fun C(Other: UObject): WorldThumbnailInfo
        fun C(Other: Any): WorldThumbnailInfo
    }
}

external open class WorldThumbnailRenderer : DefaultSizedThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)
    open var GlobalOrbitPitchOffset: Number
    open var GlobalOrbitYawOffset: Number
    open var bUseUnlitScene: Boolean
    open var bAllowWorldThumbnails: Boolean

    companion object {
        fun Load(ResourceName: String): WorldThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): WorldThumbnailRenderer
        fun GetDefaultObject(): WorldThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WorldThumbnailRenderer
        fun C(Other: UObject): WorldThumbnailRenderer
        fun C(Other: Any): WorldThumbnailRenderer
    }
}

external open class WrangleContentCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): WrangleContentCommandlet
        fun Find(Outer: UObject, ResourceName: String): WrangleContentCommandlet
        fun GetDefaultObject(): WrangleContentCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WrangleContentCommandlet
        fun C(Other: UObject): WrangleContentCommandlet
        fun C(Other: Any): WrangleContentCommandlet
    }
}

external interface `T$668` {
    var OutTransforms: Array<Transform>
}

external open class FoliageStatistics : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): FoliageStatistics
        fun Find(Outer: UObject, ResourceName: String): FoliageStatistics
        fun GetDefaultObject(): FoliageStatistics
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FoliageStatistics
        fun FoliageOverlappingSphereCount(WorldContextObject: UObject, StaticMesh: StaticMesh, CenterPosition: Vector, Radius: Number): Number
        fun FoliageOverlappingBoxTransforms(WorldContextObject: UObject, StaticMesh: StaticMesh, Box: Box, OutTransforms: Array<Transform> = definedExternally): `T$668`
        fun FoliageOverlappingBoxCount(WorldContextObject: UObject, StaticMesh: StaticMesh, Box: Box): Number
        fun C(Other: UObject): FoliageStatistics
        fun C(Other: Any): FoliageStatistics
    }
}

external open class FoliageType_Actor : FoliageType {
    constructor()
    constructor(Outer: UObject)
    open var ActorClass: UnrealEngineClass
    open var bShouldAttachToBaseComponent: Boolean
    open var bStaticMeshOnly: Boolean
    open var StaticMeshOnlyComponentClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): FoliageType_Actor
        fun Find(Outer: UObject, ResourceName: String): FoliageType_Actor
        fun GetDefaultObject(): FoliageType_Actor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FoliageType_Actor
        fun C(Other: UObject): FoliageType_Actor
        fun C(Other: Any): FoliageType_Actor
    }
}

external open class PartitionActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var GridSize: Any

    companion object {
        fun GetDefaultObject(): PartitionActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PartitionActor
        fun C(Other: UObject): PartitionActor
        fun C(Other: Any): PartitionActor
    }
}

external open class ISMComponentInstance {
    open var ClientIndex: Number
    open var InstanceIndex: Number
    open var InstanceSubIndex: Number
    open fun clone(): ISMComponentInstance

    companion object {
        fun C(Other: UObject): ISMComponentInstance
        fun C(Other: Any): ISMComponentInstance
    }
}

external open class ISMClientInstance {
    open var ComponentIndices: Array<Number>
    open fun clone(): ISMClientInstance

    companion object {
        fun C(Other: UObject): ISMClientInstance
        fun C(Other: Any): ISMClientInstance
    }
}

external open class ISMClientData {
    open var Instances: Array<ISMClientInstance>
    open fun clone(): ISMClientData

    companion object {
        fun C(Other: UObject): ISMClientData
        fun C(Other: Any): ISMClientData
    }
}

external open class ISMComponentData {
    open var Instances: Array<ISMComponentInstance>
    open var ClientInstances: Array<ISMClientData>
    open var Component: InstancedStaticMeshComponent
    open fun clone(): ISMComponentData

    companion object {
        fun C(Other: UObject): ISMComponentData
        fun C(Other: Any): ISMComponentData
    }
}

external open class ISMPartitionActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : PartitionActor {
    open var Clients: Array<Guid>
    open var Descriptors: Array<ISMComponentDescriptor>
    open var DescriptorComponents: Array<ISMComponentData>
    open var ClientInstanceManagers: Any

    companion object {
        fun GetDefaultObject(): ISMPartitionActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ISMPartitionActor
        fun C(Other: UObject): ISMPartitionActor
        fun C(Other: Any): ISMPartitionActor
    }
}

external open class InstancedFoliageActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : ISMPartitionActor {
    companion object {
        fun GetDefaultObject(): InstancedFoliageActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InstancedFoliageActor
        fun RemoveAllInstances(WorldContextObject: UObject, InFoliageType: FoliageType)
        fun AddInstances(WorldContextObject: UObject, InFoliageType: FoliageType, InTransforms: Array<Transform>)
        fun C(Other: UObject): InstancedFoliageActor
        fun C(Other: Any): InstancedFoliageActor
    }
}

external object ENavDataGatheringMode {
    var Default: String /* "Default" */
    var Instant: String /* "Instant" */
    var Lazy: String /* "Lazy" */
    var ENavDataGatheringMode_MAX: String /* "ENavDataGatheringMode_MAX" */
}

external open class StaticMeshActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var StaticMeshComponent: StaticMeshComponent
    open var bStaticMeshReplicateMovement: Boolean
    open var NavigationGeometryGatheringMode: String /* "Default" | "Instant" | "Lazy" | "ENavDataGatheringMode_MAX" */
    open fun SetMobility(InMobility: String /* "Static" | "Stationary" | "Movable" | "EComponentMobility_MAX" */)

    companion object {
        fun GetDefaultObject(): StaticMeshActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): StaticMeshActor
        fun C(Other: UObject): StaticMeshActor
        fun C(Other: Any): StaticMeshActor
    }
}

external open class InteractiveFoliageActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : StaticMeshActor {
    open var CapsuleComponent: CapsuleComponent
    open var TouchingActorEntryPosition: Vector
    open var FoliageVelocity: Vector
    open var FoliageForce: Vector
    open var FoliagePosition: Vector
    open var FoliageDamageImpulseScale: Number
    open var FoliageTouchImpulseScale: Number
    open var FoliageStiffness: Number
    open var FoliageStiffnessQuadratic: Number
    open var FoliageDamping: Number
    open var MaxDamageImpulse: Number
    open var MaxTouchImpulse: Number
    open var MaxForce: Number
    open var Mass: Number
    open fun CapsuleTouched(OverlappedComp: PrimitiveComponent, Other: Actor, OtherComp: PrimitiveComponent, OtherBodyIndex: Number, bFromSweep: Boolean, OverlapInfo: HitResult)

    companion object {
        fun GetDefaultObject(): InteractiveFoliageActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InteractiveFoliageActor
        fun C(Other: UObject): InteractiveFoliageActor
        fun C(Other: Any): InteractiveFoliageActor
    }
}

external open class InteractiveFoliageComponent : StaticMeshComponent {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InteractiveFoliageComponent
        fun Find(Outer: UObject, ResourceName: String): InteractiveFoliageComponent
        fun GetDefaultObject(): InteractiveFoliageComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InteractiveFoliageComponent
        fun C(Other: UObject): InteractiveFoliageComponent
        fun C(Other: Any): InteractiveFoliageComponent
    }
}

external open class ProceduralFoliageBlockingVolume(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Volume {
    open var ProceduralFoliageVolume: ProceduralFoliageVolume
    open var DensityFalloff: FoliageDensityFalloff

    companion object {
        fun GetDefaultObject(): ProceduralFoliageBlockingVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ProceduralFoliageBlockingVolume
        fun C(Other: UObject): ProceduralFoliageBlockingVolume
        fun C(Other: Any): ProceduralFoliageBlockingVolume
    }
}

external open class ProceduralFoliageInstance {
    open var Rotation: Quat
    open var Location: Vector
    open var Age: Number
    open var Normal: Vector
    open var Scale: Number
    open var Type: FoliageType
    open fun clone(): ProceduralFoliageInstance

    companion object {
        fun C(Other: UObject): ProceduralFoliageInstance
        fun C(Other: Any): ProceduralFoliageInstance
    }
}

external open class ProceduralFoliageTile : UObject {
    constructor()
    constructor(Outer: UObject)
    open var FoliageSpawner: ProceduralFoliageSpawner
    open var InstancesArray: Array<ProceduralFoliageInstance>

    companion object {
        fun Load(ResourceName: String): ProceduralFoliageTile
        fun Find(Outer: UObject, ResourceName: String): ProceduralFoliageTile
        fun GetDefaultObject(): ProceduralFoliageTile
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ProceduralFoliageTile
        fun C(Other: UObject): ProceduralFoliageTile
        fun C(Other: Any): ProceduralFoliageTile
    }
}

external open class ImageWriteBlueprintLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ImageWriteBlueprintLibrary
        fun Find(Outer: UObject, ResourceName: String): ImageWriteBlueprintLibrary
        fun GetDefaultObject(): ImageWriteBlueprintLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ImageWriteBlueprintLibrary
        fun ExportToDisk(Texture: Texture, Filename: String, Options: ImageWriteOptions)
        fun C(Other: UObject): ImageWriteBlueprintLibrary
        fun C(Other: Any): ImageWriteBlueprintLibrary
    }
}

external open class ControlPointMeshComponent : StaticMeshComponent {
    constructor()
    constructor(Outer: UObject)
    open var bSelected: Boolean
    open var VirtualTextureMainPassMaxDrawDistance: Number

    companion object {
        fun Load(ResourceName: String): ControlPointMeshComponent
        fun Find(Outer: UObject, ResourceName: String): ControlPointMeshComponent
        fun GetDefaultObject(): ControlPointMeshComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ControlPointMeshComponent
        fun C(Other: UObject): ControlPointMeshComponent
        fun C(Other: Any): ControlPointMeshComponent
    }
}

external open class ControlPointMeshActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var ControlPointMeshComponent: ControlPointMeshComponent

    companion object {
        fun GetDefaultObject(): ControlPointMeshActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ControlPointMeshActor
        fun C(Other: UObject): ControlPointMeshActor
        fun C(Other: Any): ControlPointMeshActor
    }
}

external open class LandscapeSplineInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LandscapeSplineInterface
        fun Find(Outer: UObject, ResourceName: String): LandscapeSplineInterface
        fun GetDefaultObject(): LandscapeSplineInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeSplineInterface
        fun C(Other: UObject): LandscapeSplineInterface
        fun C(Other: Any): LandscapeSplineInterface
    }
}

external open class LandscapeSplineSegmentConnection {
    open var ControlPoint: LandscapeSplineControlPoint
    open var TangentLen: Number
    open var SocketName: String
    open fun clone(): LandscapeSplineSegmentConnection

    companion object {
        fun C(Other: UObject): LandscapeSplineSegmentConnection
        fun C(Other: Any): LandscapeSplineSegmentConnection
    }
}

external object LandscapeSplineMeshOrientation {
    var LSMO_XUp: String /* "LSMO_XUp" */
    var LSMO_YUp: String /* "LSMO_YUp" */
    var LSMO_MAX: String /* "LSMO_MAX" */
}

external open class LandscapeSplineMeshEntry {
    open var Mesh: StaticMesh
    open var MaterialOverrides: Array<MaterialInterface>
    open var bCenterH: Boolean
    open var CenterAdjust: Vector2D
    open var bScaleToWidth: Boolean
    open var Scale: Vector
    open var Orientation: String /* "LSMO_XUp" | "LSMO_YUp" | "LSMO_MAX" */
    open var ForwardAxis: String /* "X" | "Y" | "Z" | "ESplineMeshAxis_MAX" */
    open var UpAxis: String /* "X" | "Y" | "Z" | "ESplineMeshAxis_MAX" */
    open fun clone(): LandscapeSplineMeshEntry

    companion object {
        fun C(Other: UObject): LandscapeSplineMeshEntry
        fun C(Other: Any): LandscapeSplineMeshEntry
    }
}

external open class LandscapeSplineInterpPoint {
    open var Center: Vector
    open var Left: Vector
    open var Right: Vector
    open var FalloffLeft: Vector
    open var FalloffRight: Vector
    open var LayerLeft: Vector
    open var LayerRight: Vector
    open var LayerFalloffLeft: Vector
    open var LayerFalloffRight: Vector
    open var StartEndFalloff: Number
    open fun clone(): LandscapeSplineInterpPoint

    companion object {
        fun C(Other: UObject): LandscapeSplineInterpPoint
        fun C(Other: Any): LandscapeSplineInterpPoint
    }
}

external open class LandscapeSplineSegment : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Connections: LandscapeSplineSegmentConnection
    open var LayerName: String
    open var bRaiseTerrain: Boolean
    open var bLowerTerrain: Boolean
    open var SplineMeshes: Array<LandscapeSplineMeshEntry>
    open var bEnableCollision: Boolean
    open var CollisionProfileName: String
    open var bCastShadow: Boolean
    open var bHiddenInGame: Boolean
    open var bPlaceSplineMeshesInStreamingLevels: Boolean
    open var RandomSeed: Number
    open var LDMaxDrawDistance: Number
    open var TranslucencySortPriority: Number
    open var bRenderCustomDepth: Boolean
    open var CustomDepthStencilWriteMask: String /* "ERSM_Default" | "ERSM_255" | "ERSM_1" | "ERSM_2" | "ERSM_4" | "ERSM_8" | "ERSM_16" | "ERSM_32" | "ERSM_64" | "ERSM_128" | "ERSM_MAX" */
    open var CustomDepthStencilValue: Number
    open var RuntimeVirtualTextures: Array<RuntimeVirtualTexture>
    open var VirtualTextureLodBias: Number
    open var VirtualTextureCullMips: Number
    open var VirtualTextureMainPassMaxDrawDistance: Number
    open var VirtualTextureRenderPassType: String /* "Never" | "Exclusive" | "Always" | "ERuntimeVirtualTextureMainPassType_MAX" */
    open var BodyInstance: BodyInstance
    open var bSelected: Boolean
    open var bNavDirty: Boolean
    open var SplineInfo: InterpCurveVector
    open var Points: Array<LandscapeSplineInterpPoint>
    open var Bounds: Box
    open var LocalMeshComponents: Array<SplineMeshComponent>
    open var ForeignWorlds: Array<World>
    open var ModificationKey: Guid

    companion object {
        fun Load(ResourceName: String): LandscapeSplineSegment
        fun Find(Outer: UObject, ResourceName: String): LandscapeSplineSegment
        fun GetDefaultObject(): LandscapeSplineSegment
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeSplineSegment
        fun C(Other: UObject): LandscapeSplineSegment
        fun C(Other: Any): LandscapeSplineSegment
    }
}

external open class LandscapeSplineConnection {
    open var Segment: LandscapeSplineSegment
    open var End: Boolean
    open fun clone(): LandscapeSplineConnection

    companion object {
        fun C(Other: UObject): LandscapeSplineConnection
        fun C(Other: Any): LandscapeSplineConnection
    }
}

external open class LandscapeSplineControlPoint : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Location: Vector
    open var Rotation: Rotator
    open var Width: Number
    open var LayerWidthRatio: Number
    open var SideFalloff: Number
    open var LeftSideFalloffFactor: Number
    open var RightSideFalloffFactor: Number
    open var LeftSideLayerFalloffFactor: Number
    open var RightSideLayerFalloffFactor: Number
    open var EndFalloff: Number
    open var SegmentMeshOffset: Number
    open var LayerName: String
    open var bRaiseTerrain: Boolean
    open var bLowerTerrain: Boolean
    open var Mesh: StaticMesh
    open var MaterialOverrides: Array<MaterialInterface>
    open var MeshScale: Vector
    open var bEnableCollision: Boolean
    open var CollisionProfileName: String
    open var bCastShadow: Boolean
    open var bHiddenInGame: Boolean
    open var bPlaceSplineMeshesInStreamingLevels: Boolean
    open var LDMaxDrawDistance: Number
    open var TranslucencySortPriority: Number
    open var bRenderCustomDepth: Boolean
    open var CustomDepthStencilWriteMask: String /* "ERSM_Default" | "ERSM_255" | "ERSM_1" | "ERSM_2" | "ERSM_4" | "ERSM_8" | "ERSM_16" | "ERSM_32" | "ERSM_64" | "ERSM_128" | "ERSM_MAX" */
    open var CustomDepthStencilValue: Number
    open var RuntimeVirtualTextures: Array<RuntimeVirtualTexture>
    open var VirtualTextureLodBias: Number
    open var VirtualTextureCullMips: Number
    open var VirtualTextureMainPassMaxDrawDistance: Number
    open var VirtualTextureRenderPassType: String /* "Never" | "Exclusive" | "Always" | "ERuntimeVirtualTextureMainPassType_MAX" */
    open var BodyInstance: BodyInstance
    open var bSelected: Boolean
    open var bNavDirty: Boolean
    open var ConnectedSegments: Array<LandscapeSplineConnection>
    open var Points: Array<LandscapeSplineInterpPoint>
    open var Bounds: Box
    open var LocalMeshComponent: ControlPointMeshComponent
    open var ForeignWorld: World
    open var ModificationKey: Guid

    companion object {
        fun Load(ResourceName: String): LandscapeSplineControlPoint
        fun Find(Outer: UObject, ResourceName: String): LandscapeSplineControlPoint
        fun GetDefaultObject(): LandscapeSplineControlPoint
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeSplineControlPoint
        fun C(Other: UObject): LandscapeSplineControlPoint
        fun C(Other: Any): LandscapeSplineControlPoint
    }
}

external open class LandscapeSplinesComponent : PrimitiveComponent {
    constructor()
    constructor(Outer: UObject)
    open var SplineResolution: Number
    open var SplineColor: Color
    open var ControlPointSprite: Texture2D
    open var SplineEditorMesh: StaticMesh
    open var bShowSplineEditorMesh: Boolean
    open var ControlPoints: Array<LandscapeSplineControlPoint>
    open var Segments: Array<LandscapeSplineSegment>
    open var ForeignWorldSplineDataMap: Any
    open var CookedForeignMeshComponents: Array<MeshComponent>
    open fun GetSplineMeshComponents(): Array<SplineMeshComponent>

    companion object {
        fun Load(ResourceName: String): LandscapeSplinesComponent
        fun Find(Outer: UObject, ResourceName: String): LandscapeSplinesComponent
        fun GetDefaultObject(): LandscapeSplinesComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeSplinesComponent
        fun C(Other: UObject): LandscapeSplinesComponent
        fun C(Other: Any): LandscapeSplinesComponent
    }
}

external object ELandscapeLODFalloff {
    var Linear: String /* "Linear" */
    var SquareRoot: String /* "SquareRoot" */
    var ELandscapeLODFalloff_MAX: String /* "ELandscapeLODFalloff_MAX" */
}

external object ELandscapeLayerDisplayMode {
    var Default: String /* "Default" */
    var Alphabetical: String /* "Alphabetical" */
    var UserSpecific: String /* "UserSpecific" */
    var ELandscapeLayerDisplayMode_MAX: String /* "ELandscapeLayerDisplayMode_MAX" */
}

external open class LandscapeProxyMaterialOverride {
    open var LODIndex: PerPlatformInt
    open var Material: MaterialInterface
    open fun clone(): LandscapeProxyMaterialOverride

    companion object {
        fun C(Other: UObject): LandscapeProxyMaterialOverride
        fun C(Other: Any): LandscapeProxyMaterialOverride
    }
}

external open class LandscapeComponentMaterialOverride {
    open var LODIndex: PerPlatformInt
    open var Material: MaterialInterface
    open fun clone(): LandscapeComponentMaterialOverride

    companion object {
        fun C(Other: UObject): LandscapeComponentMaterialOverride
        fun C(Other: Any): LandscapeComponentMaterialOverride
    }
}

external open class LandscapeWeightmapUsage : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ChannelUsage: LandscapeComponent
    open var LayerGuid: Guid

    companion object {
        fun Load(ResourceName: String): LandscapeWeightmapUsage
        fun Find(Outer: UObject, ResourceName: String): LandscapeWeightmapUsage
        fun GetDefaultObject(): LandscapeWeightmapUsage
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeWeightmapUsage
        fun C(Other: UObject): LandscapeWeightmapUsage
        fun C(Other: Any): LandscapeWeightmapUsage
    }
}

external object ESplineModulationColorMask {
    var Red: String /* "Red" */
    var Green: String /* "Green" */
    var Blue: String /* "Blue" */
    var Alpha: String /* "Alpha" */
    var ESplineModulationColorMask_MAX: String /* "ESplineModulationColorMask_MAX" */
}

external open class LandscapeLayerInfoObject : UObject {
    constructor()
    constructor(Outer: UObject)
    open var LayerName: String
    open var PhysMaterial: PhysicalMaterial
    open var Hardness: Number
    open var MinimumCollisionRelevanceWeight: Number
    open var bNoWeightBlend: Boolean
    open var SplineFalloffModulationTexture: Texture2D
    open var SplineFalloffModulationColorMask: String /* "Red" | "Green" | "Blue" | "Alpha" | "ESplineModulationColorMask_MAX" */
    open var SplineFalloffModulationTiling: Number
    open var SplineFalloffModulationBias: Number
    open var SplineFalloffModulationScale: Number
    open var IsReferencedFromLoadedData: Boolean
    open var LayerUsageDebugColor: LinearColor

    companion object {
        fun Load(ResourceName: String): LandscapeLayerInfoObject
        fun Find(Outer: UObject, ResourceName: String): LandscapeLayerInfoObject
        fun GetDefaultObject(): LandscapeLayerInfoObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeLayerInfoObject
        fun C(Other: UObject): LandscapeLayerInfoObject
        fun C(Other: Any): LandscapeLayerInfoObject
    }
}

external open class WeightmapLayerAllocationInfo {
    open var LayerInfo: LandscapeLayerInfoObject
    open var WeightmapTextureIndex: Number
    open var WeightmapTextureChannel: Number
    open fun clone(): WeightmapLayerAllocationInfo

    companion object {
        fun C(Other: UObject): WeightmapLayerAllocationInfo
        fun C(Other: Any): WeightmapLayerAllocationInfo
    }
}

external open class LandscapeLODStreamingProxy : StreamableRenderAsset {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LandscapeLODStreamingProxy
        fun Find(Outer: UObject, ResourceName: String): LandscapeLODStreamingProxy
        fun GetDefaultObject(): LandscapeLODStreamingProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeLODStreamingProxy
        fun C(Other: UObject): LandscapeLODStreamingProxy
        fun C(Other: Any): LandscapeLODStreamingProxy
    }
}

external open class LandscapeEditToolRenderData {
    open var ToolMaterial: MaterialInterface
    open var GizmoMaterial: MaterialInterface
    open var SelectedType: Number
    open var DebugChannelR: Number
    open var DebugChannelG: Number
    open var DebugChannelB: Number
    open var DataTexture: Texture2D
    open var LayerContributionTexture: Texture2D
    open var DirtyTexture: Texture2D
    open fun clone(): LandscapeEditToolRenderData

    companion object {
        fun C(Other: UObject): LandscapeEditToolRenderData
        fun C(Other: Any): LandscapeEditToolRenderData
    }
}

external open class LandscapeComponent : PrimitiveComponent {
    constructor()
    constructor(Outer: UObject)
    open var SectionBaseX: Number
    open var SectionBaseY: Number
    open var ComponentSizeQuads: Number
    open var SubsectionSizeQuads: Number
    open var NumSubsections: Number
    open var OverrideMaterial: MaterialInterface
    open var OverrideHoleMaterial: MaterialInterface
    open var OverrideMaterials: Array<LandscapeComponentMaterialOverride>
    open var MaterialInstance: MaterialInstanceConstant
    open var MaterialInstances: Array<MaterialInstanceConstant>
    open var MaterialInstancesDynamic: Array<MaterialInstanceDynamic>
    open var LODIndexToMaterialIndex: Array<Any>
    open var XYOffsetmapTexture: Texture2D
    open var WeightmapScaleBias: Vector4
    open var WeightmapSubsectionOffset: Number
    open var HeightmapScaleBias: Vector4
    open var CachedLocalBox: Box
    open var CollisionComponent: Any
    open var LightingGuid: Guid
    open var LayersData: Any
    open var WeightmapTexturesUsage: Array<LandscapeWeightmapUsage>
    open var LayerUpdateFlagPerMode: Any
    open var bPendingCollisionDataUpdate: Boolean
    open var bPendingLayerCollisionDataUpdate: Boolean
    open var HeightmapTexture: Texture2D
    open var WeightmapLayerAllocations: Array<WeightmapLayerAllocationInfo>
    open var WeightmapTextures: Array<Texture2D>
    open var LODStreamingProxy: LandscapeLODStreamingProxy
    open var MapBuildDataId: Guid
    open var IrrelevantLights: Array<Guid>
    open var CollisionMipLevel: Number
    open var SimpleCollisionMipLevel: Number
    open var NegativeZBoundsExtension: Number
    open var PositiveZBoundsExtension: Number
    open var StaticLightingResolution: Number
    open var ForcedLOD: Number
    open var LODBias: Number
    open var StateId: Guid
    open var BakedTextureMaterialGuid: Guid
    open var LastBakedTextureMaterialGuid: Guid
    open var GIBakedBaseColorTexture: Texture2D
    open var LightingLODBias: Number
    open var LayerAllowList: Array<LandscapeLayerInfoObject>
    open var EditToolRenderData: LandscapeEditToolRenderData
    open var MobileDataSourceHash: Guid
    open var MaterialPerLOD: Any
    open var SplineHash: Any
    open var PhysicalMaterialHash: Any
    open var LastSavedPhysicalMaterialHash: Any
    open var MobileBlendableLayerMask: Number
    open var MobileMaterialInterface: MaterialInterface
    open var MobileMaterialInterfaces: Array<MaterialInterface>
    open var MobileWeightmapTextures: Array<Texture2D>
    open var MobileCombinationMaterialInstances: Array<MaterialInstanceConstant>
    open var MobileCombinationMaterialInstance: MaterialInstanceConstant
    open fun GetMaterialInstanceDynamic(InIndex: Number): MaterialInstanceDynamic
    open fun EditorGetPaintLayerWeightByNameAtLocation(InLocation: Vector, InPaintLayerName: String): Number
    open fun EditorGetPaintLayerWeightAtLocation(InLocation: Vector, PaintLayer: LandscapeLayerInfoObject): Number

    companion object {
        fun Load(ResourceName: String): LandscapeComponent
        fun Find(Outer: UObject, ResourceName: String): LandscapeComponent
        fun GetDefaultObject(): LandscapeComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeComponent
        fun C(Other: UObject): LandscapeComponent
        fun C(Other: Any): LandscapeComponent
    }
}

external open class LandscapeHeightfieldCollisionComponent : PrimitiveComponent {
    constructor()
    constructor(Outer: UObject)
    open var ComponentLayerInfos: Array<LandscapeLayerInfoObject>
    open var SectionBaseX: Number
    open var SectionBaseY: Number
    open var CollisionSizeQuads: Number
    open var CollisionScale: Number
    open var SimpleCollisionSizeQuads: Number
    open var CollisionQuadFlags: Array<Number>
    open var HeightfieldGuid: Guid
    open var CachedLocalBox: Box
    open var RenderComponent: Any
    open var PhysicalMaterialRenderObjects: Array<PhysicalMaterial>
    open var CookedPhysicalMaterials: Array<PhysicalMaterial>
    open fun GetRenderComponent(): LandscapeComponent

    companion object {
        fun Load(ResourceName: String): LandscapeHeightfieldCollisionComponent
        fun Find(Outer: UObject, ResourceName: String): LandscapeHeightfieldCollisionComponent
        fun GetDefaultObject(): LandscapeHeightfieldCollisionComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeHeightfieldCollisionComponent
        fun C(Other: UObject): LandscapeHeightfieldCollisionComponent
        fun C(Other: Any): LandscapeHeightfieldCollisionComponent
    }
}

external open class LandscapeEditorLayerSettings {
    open var LayerInfoObj: LandscapeLayerInfoObject
    open var ReimportLayerFilePath: String
    open fun clone(): LandscapeEditorLayerSettings

    companion object {
        fun C(Other: UObject): LandscapeEditorLayerSettings
        fun C(Other: Any): LandscapeEditorLayerSettings
    }
}

external open class LandscapeProxy(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : PartitionActor {
    open var SplineComponent: LandscapeSplinesComponent
    open var LandscapeGuid: Guid
    open var LandscapeSectionOffset: IntPoint
    open var MaxLODLevel: Number
    open var LODDistanceFactor: Number
    open var LODFalloff: String /* "Linear" | "SquareRoot" | "ELandscapeLODFalloff_MAX" */
    open var ComponentScreenSizeToUseSubSections: Number
    open var LOD0ScreenSize: Number
    open var LOD0DistributionSetting: Number
    open var LODDistributionSetting: Number
    open var ExportLOD: Number
    open var TargetDisplayOrderList: Array<String>
    open var TargetDisplayOrder: String /* "Default" | "Alphabetical" | "UserSpecific" | "ELandscapeLayerDisplayMode_MAX" */
    open var StaticLightingLOD: Number
    open var DefaultPhysMaterial: PhysicalMaterial
    open var StreamingDistanceMultiplier: Number
    open var LandscapeMaterial: MaterialInterface
    open var LandscapeHoleMaterial: MaterialInterface
    open var LandscapeMaterialsOverride: Array<LandscapeProxyMaterialOverride>
    open var PreEditLandscapeMaterial: MaterialInterface
    open var PreEditLandscapeHoleMaterial: MaterialInterface
    open var PreEditLandscapeMaterialsOverride: Array<LandscapeProxyMaterialOverride>
    open var bIsPerformingInteractiveActionOnLandscapeMaterialOverride: Boolean
    open var bMeshHoles: Boolean
    open var MeshHolesMaxLod: Number
    open var RuntimeVirtualTextures: Array<RuntimeVirtualTexture>
    open var bSetCreateRuntimeVirtualTextureVolumes: Boolean
    open var VirtualTextureNumLods: Number
    open var VirtualTextureLodBias: Number
    open var VirtualTextureRenderPassType: String /* "Never" | "Exclusive" | "Always" | "ERuntimeVirtualTextureMainPassType_MAX" */
    open var NegativeZBoundsExtension: Number
    open var PositiveZBoundsExtension: Number
    open var LandscapeComponents: Array<LandscapeComponent>
    open var CollisionComponents: Array<LandscapeHeightfieldCollisionComponent>
    open var FoliageComponents: Array<HierarchicalInstancedStaticMeshComponent>
    open var bHasLandscapeGrass: Boolean
    open var StaticLightingResolution: Number
    open var CastShadow: Boolean
    open var bCastDynamicShadow: Boolean
    open var bCastStaticShadow: Boolean
    open var bCastContactShadow: Boolean
    open var bCastFarShadow: Boolean
    open var bCastHiddenShadow: Boolean
    open var bCastShadowAsTwoSided: Boolean
    open var bAffectDistanceFieldLighting: Boolean
    open var LightingChannels: LightingChannels
    open var bUseMaterialPositionOffsetInStaticLighting: Boolean
    open var bRenderCustomDepth: Boolean
    open var CustomDepthStencilWriteMask: String /* "ERSM_Default" | "ERSM_255" | "ERSM_1" | "ERSM_2" | "ERSM_4" | "ERSM_8" | "ERSM_16" | "ERSM_32" | "ERSM_64" | "ERSM_128" | "ERSM_MAX" */
    open var CustomDepthStencilValue: Number
    open var LDMaxDrawDistance: Number
    open var bIsMovingToLevel: Boolean
    open var LightmassSettings: LightmassPrimitiveSettings
    open var CollisionMipLevel: Number
    open var SimpleCollisionMipLevel: Number
    open var CollisionThickness: Number
    open var BodyInstance: BodyInstance
    open var bGenerateOverlapEvents: Boolean
    open var bBakeMaterialPositionOffsetIntoCollision: Boolean
    open var EditorCachedLayerInfos: Array<LandscapeLayerInfoObject>
    open var ReimportHeightmapFilePath: String
    open var ReimportDestinationLayerGuid: Guid
    open var EditorLayerSettings: Array<LandscapeEditorLayerSettings>
    open var WeightmapUsageMap: Any
    open var ComponentSizeQuads: Number
    open var SubsectionSizeQuads: Number
    open var NumSubsections: Number
    open var bUsedForNavigation: Boolean
    open var bFillCollisionUnderLandscapeForNavmesh: Boolean
    open var bUseDynamicMaterialInstance: Boolean
    open var NavigationGeometryGatheringMode: String /* "Default" | "Instant" | "Lazy" | "ENavDataGatheringMode_MAX" */
    open var MaxPaintedLayersPerComponent: Number
    open var bUseLandscapeForCullingInvisibleHLODVertices: Boolean
    open var bHasLayersContent: Boolean
    open fun SetLandscapeMaterialVectorParameterValue(ParameterName: String, Value: LinearColor)
    open fun SetLandscapeMaterialTextureParameterValue(ParameterName: String, Value: Texture)
    open fun SetLandscapeMaterialScalarParameterValue(ParameterName: String, Value: Number)
    open fun LandscapeImportWeightmapFromRenderTarget(InRenderTarget: TextureRenderTarget2D, InLayerName: String): Boolean
    open fun LandscapeImportHeightmapFromRenderTarget(InRenderTarget: TextureRenderTarget2D, InImportHeightFromRGChannel: Boolean): Boolean
    open fun LandscapeExportWeightmapToRenderTarget(InRenderTarget: TextureRenderTarget2D, InLayerName: String): Boolean
    open fun LandscapeExportHeightmapToRenderTarget(InRenderTarget: TextureRenderTarget2D, InExportHeightIntoRGChannel: Boolean, InExportLandscapeProxies: Boolean): Boolean
    open fun EditorSetLandscapeMaterial(NewLandscapeMaterial: MaterialInterface)
    open fun EditorApplySpline(InSplineComponent: SplineComponent, StartWidth: Number, EndWidth: Number, StartSideFalloff: Number, EndSideFalloff: Number, StartRoll: Number, EndRoll: Number, NumSubdivisions: Number, bRaiseHeights: Boolean, bLowerHeights: Boolean, PaintLayer: LandscapeLayerInfoObject, EditLayerName: String)
    open fun ChangeLODDistanceFactor(InLODDistanceFactor: Number)
    open fun ChangeComponentScreenSizeToUseSubSections(InComponentScreenSizeToUseSubSections: Number)

    companion object {
        fun GetDefaultObject(): LandscapeProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeProxy
        fun C(Other: UObject): LandscapeProxy
        fun C(Other: Any): LandscapeProxy
    }
}

external object ELandscapeBlendMode {
    var LSBM_AdditiveBlend: String /* "LSBM_AdditiveBlend" */
    var LSBM_AlphaBlend: String /* "LSBM_AlphaBlend" */
    var LSBM_MAX: String /* "LSBM_MAX" */
}

external interface `T$669` {
    var OutStreamableAssets: Array<UObject>
}

external open class LandscapeBlueprintBrushBase(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var OwningLandscape: Landscape
    open var AffectHeightmap: Boolean
    open var AffectWeightmap: Boolean
    open var AffectedWeightmapLayers: Array<String>
    open var bIsVisible: Boolean
    open fun RequestLandscapeUpdate()
    open fun Render(InIsHeightmap: Boolean, InCombinedResult: TextureRenderTarget2D, InWeightmapLayerName: String): TextureRenderTarget2D
    open fun Initialize(InLandscapeTransform: Transform, InLandscapeSize: IntPoint, InLandscapeRenderTargetSize: IntPoint)
    open fun GetBlueprintRenderDependencies(OutStreamableAssets: Array<UObject> = definedExternally): `T$669`

    companion object {
        fun GetDefaultObject(): LandscapeBlueprintBrushBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeBlueprintBrushBase
        fun C(Other: UObject): LandscapeBlueprintBrushBase
        fun C(Other: Any): LandscapeBlueprintBrushBase
    }
}

external open class LandscapeLayerBrush {
    open var BlueprintBrush: LandscapeBlueprintBrushBase
    open fun clone(): LandscapeLayerBrush

    companion object {
        fun C(Other: UObject): LandscapeLayerBrush
        fun C(Other: Any): LandscapeLayerBrush
    }
}

external open class LandscapeLayer {
    open var Guid: Guid
    open var Name: String
    open var bVisible: Boolean
    open var bLocked: Boolean
    open var HeightmapAlpha: Number
    open var WeightmapAlpha: Number
    open var BlendMode: String /* "LSBM_AdditiveBlend" | "LSBM_AlphaBlend" | "LSBM_MAX" */
    open var Brushes: Array<LandscapeLayerBrush>
    open var WeightmapLayerAllocationBlend: Any
    open fun clone(): LandscapeLayer

    companion object {
        fun C(Other: UObject): LandscapeLayer
        fun C(Other: Any): LandscapeLayer
    }
}

external open class LandscapeInfoLayerSettings {
    open var LayerInfoObj: LandscapeLayerInfoObject
    open var LayerName: String
    open var ThumbnailMIC: MaterialInstanceConstant
    open var Owner: LandscapeProxy
    open var DebugColorChannel: Number
    open var bValid: Boolean
    open fun clone(): LandscapeInfoLayerSettings

    companion object {
        fun C(Other: UObject): LandscapeInfoLayerSettings
        fun C(Other: Any): LandscapeInfoLayerSettings
    }
}

external open class LandscapeStreamingProxy(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : LandscapeProxy {
    open var LandscapeActor: Actor

    companion object {
        fun GetDefaultObject(): LandscapeStreamingProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeStreamingProxy
        fun C(Other: UObject): LandscapeStreamingProxy
        fun C(Other: Any): LandscapeStreamingProxy
    }
}

external object ELandscapeLayerPaintingRestriction {
    var None: String /* "None" */
    var UseMaxLayers: String /* "UseMaxLayers" */
    var ExistingOnly: String /* "ExistingOnly" */
    var UseComponentAllowList: String /* "UseComponentAllowList" */
    var ELandscapeLayerPaintingRestriction_MAX: String /* "ELandscapeLayerPaintingRestriction_MAX" */
}

external interface `T$670` {
    var MinX: Number
    var MinY: Number
    var MaxX: Number
    var MaxY: Number
    var `$`: Boolean
}

external open class LandscapeInfo : UObject {
    constructor()
    constructor(Outer: UObject)
    open var LandscapeActor: Actor
    open var LandscapeGuid: Guid
    open var ComponentSizeQuads: Number
    open var SubsectionSizeQuads: Number
    open var ComponentNumSubsections: Number
    open var DrawScale: Vector
    open var Layers: Array<LandscapeInfoLayerSettings>
    open var Proxies: Array<LandscapeStreamingProxy>
    open var SplineActors: Array<Any>
    open fun GetAlphamapDataToMemory(LayerInfo: LandscapeLayerInfoObject, MinX: Number, MinY: Number, MaxX: Number, MaxY: Number)
    open fun GetHeightmapDataToMemory(MinX: Number, MinY: Number, MaxX: Number, MaxY: Number)
    open fun GetLandscapeExtent(MinX: Number = definedExternally, MinY: Number = definedExternally, MaxX: Number = definedExternally, MaxY: Number = definedExternally): `T$670`
    open fun GetLayerInfoByName(LayerName: String, Owner: LandscapeProxy): LandscapeLayerInfoObject
    open fun SetAlphamapDataFromMemory(LayerInfo: LandscapeLayerInfoObject, MinX: Number, MinY: Number, MaxX: Number, MaxY: Number, PaintingRestriction: String /* "None" | "UseMaxLayers" | "ExistingOnly" | "UseComponentAllowList" | "ELandscapeLayerPaintingRestriction_MAX" */)
    open fun SetHeightmapDataFromMemory(MinX: Number, MinY: Number, MaxX: Number, MaxY: Number)

    companion object {
        fun Load(ResourceName: String): LandscapeInfo
        fun Find(Outer: UObject, ResourceName: String): LandscapeInfo
        fun GetDefaultObject(): LandscapeInfo
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeInfo
        fun C(Other: UObject): LandscapeInfo
        fun C(Other: Any): LandscapeInfo
        fun GetAlphamapDataToMemory(LandscapeInfo: LandscapeInfo, LayerInfo: LandscapeLayerInfoObject, MinX: Number, MinY: Number, MaxX: Number, MaxY: Number)
        fun GetHeightmapDataToMemory(LandscapeInfo: LandscapeInfo, MinX: Number, MinY: Number, MaxX: Number, MaxY: Number)
        fun GetLandscapeExtent(LandscapeInfo: LandscapeInfo, MinX: Number = definedExternally, MinY: Number = definedExternally, MaxX: Number = definedExternally, MaxY: Number = definedExternally): `T$670`
        fun GetLayerInfoByName(LandscapeInfo: LandscapeInfo, LayerName: String, Owner: LandscapeProxy): LandscapeLayerInfoObject
        fun SetAlphamapDataFromMemory(LandscapeInfo: LandscapeInfo, LayerInfo: LandscapeLayerInfoObject, MinX: Number, MinY: Number, MaxX: Number, MaxY: Number, PaintingRestriction: String /* "None" | "UseMaxLayers" | "ExistingOnly" | "UseComponentAllowList" | "ELandscapeLayerPaintingRestriction_MAX" */)
        fun SetHeightmapDataFromMemory(LandscapeInfo: LandscapeInfo, MinX: Number, MinY: Number, MaxX: Number, MaxY: Number)
    }
}

external open class Landscape(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : LandscapeProxy {
    open var bCanHaveLayersContent: Boolean
    open var LandscapeSplinesTargetLayerGuid: Guid
    open var LandscapeLayers: Array<LandscapeLayer>
    open var HeightmapRTList: Array<TextureRenderTarget2D>
    open var WeightmapRTList: Array<TextureRenderTarget2D>
    open var TrackedStreamingInTextures: Any
    open var LandscapeSplinesAffectedComponents: Any
    open var bLandscapeLayersAreInitialized: Boolean
    open var bLandscapeLayersAreUsingLocalMerge: Boolean
    open var WasCompilingShaders: Boolean
    open var LayerContentUpdateModes: Any
    open var bSplineLayerUpdateRequested: Boolean
    open fun GetLandscapeInfo(bSpawnNewActor: Boolean): LandscapeInfo

    companion object {
        fun GetDefaultObject(): Landscape
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Landscape
        fun C(Other: UObject): Landscape
        fun C(Other: Any): Landscape
        fun GetLandscapeInfo(Landscape: Landscape, bSpawnNewActor: Boolean): LandscapeInfo
    }
}

external open class LandscapeGizmoActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var Width: Number
    open var Height: Number
    open var LengthZ: Number
    open var MarginZ: Number
    open var MinRelativeZ: Number
    open var RelativeScaleZ: Number
    open var TargetLandscapeInfo: LandscapeInfo
    open var SpriteComponent: BillboardComponent

    companion object {
        fun GetDefaultObject(): LandscapeGizmoActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeGizmoActor
        fun C(Other: UObject): LandscapeGizmoActor
        fun C(Other: Any): LandscapeGizmoActor
    }
}

external object ELandscapeGizmoType {
    var LGT_None: String /* "LGT_None" */
    var LGT_Height: String /* "LGT_Height" */
    var LGT_Weight: String /* "LGT_Weight" */
    var LGT_MAX: String /* "LGT_MAX" */
}

external open class LandscapeGizmoActiveActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : LandscapeGizmoActor {
    open var DataType: String /* "LGT_None" | "LGT_Height" | "LGT_Weight" | "LGT_MAX" */
    open var GizmoTexture: Texture2D
    open var TextureScale: Vector2D
    open var SampledHeight: Array<Vector>
    open var SampledNormal: Array<Vector>
    open var SampleSizeX: Number
    open var SampleSizeY: Number
    open var CachedWidth: Number
    open var CachedHeight: Number
    open var CachedScaleXY: Number
    open var FrustumVerts: Vector
    open var GizmoMaterial: Material
    open var GizmoDataMaterial: MaterialInstance
    open var GizmoMeshMaterial: Material
    open var LayerInfos: Array<LandscapeLayerInfoObject>
    open var bSnapToLandscapeGrid: Boolean
    open var UnsnappedRotation: Rotator

    companion object {
        fun GetDefaultObject(): LandscapeGizmoActiveActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeGizmoActiveActor
        fun C(Other: UObject): LandscapeGizmoActiveActor
        fun C(Other: Any): LandscapeGizmoActiveActor
    }
}

external open class LandscapeGizmoRenderComponent : PrimitiveComponent {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LandscapeGizmoRenderComponent
        fun Find(Outer: UObject, ResourceName: String): LandscapeGizmoRenderComponent
        fun GetDefaultObject(): LandscapeGizmoRenderComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeGizmoRenderComponent
        fun C(Other: UObject): LandscapeGizmoRenderComponent
        fun C(Other: Any): LandscapeGizmoRenderComponent
    }
}

external object EGrassScaling {
    var Uniform: String /* "Uniform" */
    var Free: String /* "Free" */
    var LockXY: String /* "LockXY" */
    var EGrassScaling_MAX: String /* "EGrassScaling_MAX" */
}

external open class GrassVariety {
    open var GrassMesh: StaticMesh
    open var OverrideMaterials: Array<MaterialInterface>
    open var GrassDensity: PerPlatformFloat
    open var bUseGrid: Boolean
    open var PlacementJitter: Number
    open var StartCullDistance: PerPlatformInt
    open var EndCullDistance: PerPlatformInt
    open var MinLOD: Number
    open var Scaling: String /* "Uniform" | "Free" | "LockXY" | "EGrassScaling_MAX" */
    open var ScaleX: FloatInterval
    open var ScaleY: FloatInterval
    open var ScaleZ: FloatInterval
    open var RandomRotation: Boolean
    open var AlignToSurface: Boolean
    open var bUseLandscapeLightmap: Boolean
    open var LightingChannels: LightingChannels
    open var bReceivesDecals: Boolean
    open var bCastDynamicShadow: Boolean
    open var bKeepInstanceBufferCPUCopy: Boolean
    open fun clone(): GrassVariety

    companion object {
        fun C(Other: UObject): GrassVariety
        fun C(Other: Any): GrassVariety
    }
}

external open class LandscapeGrassType : UObject {
    constructor()
    constructor(Outer: UObject)
    open var GrassVarieties: Array<GrassVariety>
    open var bEnableDensityScaling: Boolean
    open var GrassMesh: StaticMesh
    open var GrassDensity: Number
    open var PlacementJitter: Number
    open var StartCullDistance: Number
    open var EndCullDistance: Number
    open var RandomRotation: Boolean
    open var AlignToSurface: Boolean

    companion object {
        fun Load(ResourceName: String): LandscapeGrassType
        fun Find(Outer: UObject, ResourceName: String): LandscapeGrassType
        fun GetDefaultObject(): LandscapeGrassType
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeGrassType
        fun C(Other: UObject): LandscapeGrassType
        fun C(Other: Any): LandscapeGrassType
    }
}

external open class LandscapeHLODBuilder : HLODBuilder {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LandscapeHLODBuilder
        fun Find(Outer: UObject, ResourceName: String): LandscapeHLODBuilder
        fun GetDefaultObject(): LandscapeHLODBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeHLODBuilder
        fun C(Other: UObject): LandscapeHLODBuilder
        fun C(Other: Any): LandscapeHLODBuilder
    }
}

external open class LandscapeInfoMap : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LandscapeInfoMap
        fun Find(Outer: UObject, ResourceName: String): LandscapeInfoMap
        fun GetDefaultObject(): LandscapeInfoMap
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeInfoMap
        fun C(Other: UObject): LandscapeInfoMap
        fun C(Other: Any): LandscapeInfoMap
    }
}

external open class LandscapeMaterialTextureStreamingInfo {
    open var TextureName: String
    open var TexelFactor: Number
    open fun clone(): LandscapeMaterialTextureStreamingInfo

    companion object {
        fun C(Other: UObject): LandscapeMaterialTextureStreamingInfo
        fun C(Other: Any): LandscapeMaterialTextureStreamingInfo
    }
}

external open class LandscapeMaterialInstanceConstant : MaterialInstanceConstant {
    constructor()
    constructor(Outer: UObject)
    open var TextureStreamingInfo: Array<LandscapeMaterialTextureStreamingInfo>
    open var bIsLayerThumbnail: Boolean
    open var bDisableTessellation: Boolean
    open var bMobile: Boolean
    open var bEditorToolUsage: Boolean

    companion object {
        fun Load(ResourceName: String): LandscapeMaterialInstanceConstant
        fun Find(Outer: UObject, ResourceName: String): LandscapeMaterialInstanceConstant
        fun GetDefaultObject(): LandscapeMaterialInstanceConstant
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeMaterialInstanceConstant
        fun C(Other: UObject): LandscapeMaterialInstanceConstant
        fun C(Other: Any): LandscapeMaterialInstanceConstant
    }
}

external open class LandscapeMeshCollisionComponent : LandscapeHeightfieldCollisionComponent {
    constructor()
    constructor(Outer: UObject)
    open var MeshGuid: Guid

    companion object {
        fun Load(ResourceName: String): LandscapeMeshCollisionComponent
        fun Find(Outer: UObject, ResourceName: String): LandscapeMeshCollisionComponent
        fun GetDefaultObject(): LandscapeMeshCollisionComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeMeshCollisionComponent
        fun C(Other: UObject): LandscapeMeshCollisionComponent
        fun C(Other: Any): LandscapeMeshCollisionComponent
    }
}

external open class LandscapeMeshProxyComponent : StaticMeshComponent {
    constructor()
    constructor(Outer: UObject)
    open var LandscapeGuid: Guid
    open var ProxyComponentBases: Array<IntPoint>
    open var ProxyLOD: Any

    companion object {
        fun Load(ResourceName: String): LandscapeMeshProxyComponent
        fun Find(Outer: UObject, ResourceName: String): LandscapeMeshProxyComponent
        fun GetDefaultObject(): LandscapeMeshProxyComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeMeshProxyComponent
        fun C(Other: UObject): LandscapeMeshProxyComponent
        fun C(Other: Any): LandscapeMeshProxyComponent
    }
}

external open class LandscapeMeshProxyActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var LandscapeMeshProxyComponent: LandscapeMeshProxyComponent

    companion object {
        fun GetDefaultObject(): LandscapeMeshProxyActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeMeshProxyActor
        fun C(Other: UObject): LandscapeMeshProxyActor
        fun C(Other: Any): LandscapeMeshProxyActor
    }
}

external open class LandscapeSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var MaxNumberOfLayers: Number

    companion object {
        fun Load(ResourceName: String): LandscapeSettings
        fun Find(Outer: UObject, ResourceName: String): LandscapeSettings
        fun GetDefaultObject(): LandscapeSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeSettings
        fun C(Other: UObject): LandscapeSettings
        fun C(Other: Any): LandscapeSettings
    }
}

external open class LandscapeSplineActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var LandscapeGuid: Guid

    companion object {
        fun GetDefaultObject(): LandscapeSplineActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeSplineActor
        fun C(Other: UObject): LandscapeSplineActor
        fun C(Other: Any): LandscapeSplineActor
    }
}

external open class LandscapeSubsystem : TickableWorldSubsystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LandscapeSubsystem
        fun Find(Outer: UObject, ResourceName: String): LandscapeSubsystem
        fun GetDefaultObject(): LandscapeSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeSubsystem
        fun C(Other: UObject): LandscapeSubsystem
        fun C(Other: Any): LandscapeSubsystem
    }
}

external open class MaterialExpressionCustomOutput : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionCustomOutput
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionCustomOutput
        fun GetDefaultObject(): MaterialExpressionCustomOutput
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionCustomOutput
        fun C(Other: UObject): MaterialExpressionCustomOutput
        fun C(Other: Any): MaterialExpressionCustomOutput
    }
}

external open class GrassInput {
    open var Name: String
    open var GrassType: LandscapeGrassType
    open var Input: ExpressionInput
    open fun clone(): GrassInput

    companion object {
        fun C(Other: UObject): GrassInput
        fun C(Other: Any): GrassInput
    }
}

external open class MaterialExpressionLandscapeGrassOutput : MaterialExpressionCustomOutput {
    constructor()
    constructor(Outer: UObject)
    open var GrassTypes: Array<GrassInput>

    companion object {
        fun Load(ResourceName: String): MaterialExpressionLandscapeGrassOutput
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionLandscapeGrassOutput
        fun GetDefaultObject(): MaterialExpressionLandscapeGrassOutput
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionLandscapeGrassOutput
        fun C(Other: UObject): MaterialExpressionLandscapeGrassOutput
        fun C(Other: Any): MaterialExpressionLandscapeGrassOutput
    }
}

external object ELandscapeLayerBlendType {
    var LB_WeightBlend: String /* "LB_WeightBlend" */
    var LB_AlphaBlend: String /* "LB_AlphaBlend" */
    var LB_HeightBlend: String /* "LB_HeightBlend" */
    var LB_MAX: String /* "LB_MAX" */
}

external open class LayerBlendInput {
    open var LayerName: String
    open var BlendType: String /* "LB_WeightBlend" | "LB_AlphaBlend" | "LB_HeightBlend" | "LB_MAX" */
    open var LayerInput: ExpressionInput
    open var HeightInput: ExpressionInput
    open var PreviewWeight: Number
    open var ConstLayerInput: Vector
    open var ConstHeightInput: Number
    open fun clone(): LayerBlendInput

    companion object {
        fun C(Other: UObject): LayerBlendInput
        fun C(Other: Any): LayerBlendInput
    }
}

external open class MaterialExpressionLandscapeLayerBlend : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Layers: Array<LayerBlendInput>

    companion object {
        fun Load(ResourceName: String): MaterialExpressionLandscapeLayerBlend
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionLandscapeLayerBlend
        fun GetDefaultObject(): MaterialExpressionLandscapeLayerBlend
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionLandscapeLayerBlend
        fun C(Other: UObject): MaterialExpressionLandscapeLayerBlend
        fun C(Other: Any): MaterialExpressionLandscapeLayerBlend
    }
}

external object ETerrainCoordMappingType {
    var TCMT_Auto: String /* "TCMT_Auto" */
    var TCMT_XY: String /* "TCMT_XY" */
    var TCMT_XZ: String /* "TCMT_XZ" */
    var TCMT_YZ: String /* "TCMT_YZ" */
    var TCMT_MAX: String /* "TCMT_MAX" */
}

external object ELandscapeCustomizedCoordType {
    var LCCT_None: String /* "LCCT_None" */
    var LCCT_CustomUV0: String /* "LCCT_CustomUV0" */
    var LCCT_CustomUV1: String /* "LCCT_CustomUV1" */
    var LCCT_CustomUV2: String /* "LCCT_CustomUV2" */
    var LCCT_WeightMapUV: String /* "LCCT_WeightMapUV" */
    var LCCT_MAX: String /* "LCCT_MAX" */
}

external open class MaterialExpressionLandscapeLayerCoords : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var MappingType: String /* "TCMT_Auto" | "TCMT_XY" | "TCMT_XZ" | "TCMT_YZ" | "TCMT_MAX" */
    open var CustomUVType: String /* "LCCT_None" | "LCCT_CustomUV0" | "LCCT_CustomUV1" | "LCCT_CustomUV2" | "LCCT_WeightMapUV" | "LCCT_MAX" */
    open var MappingScale: Number
    open var MappingRotation: Number
    open var MappingPanU: Number
    open var MappingPanV: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionLandscapeLayerCoords
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionLandscapeLayerCoords
        fun GetDefaultObject(): MaterialExpressionLandscapeLayerCoords
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionLandscapeLayerCoords
        fun C(Other: UObject): MaterialExpressionLandscapeLayerCoords
        fun C(Other: Any): MaterialExpressionLandscapeLayerCoords
    }
}

external open class MaterialExpressionLandscapeLayerSample : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var ParameterName: String
    open var PreviewWeight: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionLandscapeLayerSample
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionLandscapeLayerSample
        fun GetDefaultObject(): MaterialExpressionLandscapeLayerSample
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionLandscapeLayerSample
        fun C(Other: UObject): MaterialExpressionLandscapeLayerSample
        fun C(Other: Any): MaterialExpressionLandscapeLayerSample
    }
}

external open class MaterialExpressionLandscapeLayerSwitch : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var LayerUsed: ExpressionInput
    open var LayerNotUsed: ExpressionInput
    open var ParameterName: String
    open var PreviewUsed: Boolean

    companion object {
        fun Load(ResourceName: String): MaterialExpressionLandscapeLayerSwitch
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionLandscapeLayerSwitch
        fun GetDefaultObject(): MaterialExpressionLandscapeLayerSwitch
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionLandscapeLayerSwitch
        fun C(Other: UObject): MaterialExpressionLandscapeLayerSwitch
        fun C(Other: Any): MaterialExpressionLandscapeLayerSwitch
    }
}

external open class MaterialExpressionLandscapeLayerWeight : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Base: ExpressionInput
    open var Layer: ExpressionInput
    open var ParameterName: String
    open var PreviewWeight: Number
    open var ConstBase: Vector

    companion object {
        fun Load(ResourceName: String): MaterialExpressionLandscapeLayerWeight
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionLandscapeLayerWeight
        fun GetDefaultObject(): MaterialExpressionLandscapeLayerWeight
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionLandscapeLayerWeight
        fun C(Other: UObject): MaterialExpressionLandscapeLayerWeight
        fun C(Other: Any): MaterialExpressionLandscapeLayerWeight
    }
}

external open class PhysicalMaterialInput {
    open var PhysicalMaterial: PhysicalMaterial
    open var Input: ExpressionInput
    open fun clone(): PhysicalMaterialInput

    companion object {
        fun C(Other: UObject): PhysicalMaterialInput
        fun C(Other: Any): PhysicalMaterialInput
    }
}

external open class MaterialExpressionLandscapePhysicalMaterialOutput : MaterialExpressionCustomOutput {
    constructor()
    constructor(Outer: UObject)
    open var Inputs: Array<PhysicalMaterialInput>

    companion object {
        fun Load(ResourceName: String): MaterialExpressionLandscapePhysicalMaterialOutput
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionLandscapePhysicalMaterialOutput
        fun GetDefaultObject(): MaterialExpressionLandscapePhysicalMaterialOutput
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionLandscapePhysicalMaterialOutput
        fun C(Other: UObject): MaterialExpressionLandscapePhysicalMaterialOutput
        fun C(Other: Any): MaterialExpressionLandscapePhysicalMaterialOutput
    }
}

external open class MaterialExpressionLandscapeVisibilityMask : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionLandscapeVisibilityMask
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionLandscapeVisibilityMask
        fun GetDefaultObject(): MaterialExpressionLandscapeVisibilityMask
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionLandscapeVisibilityMask
        fun C(Other: UObject): MaterialExpressionLandscapeVisibilityMask
        fun C(Other: Any): MaterialExpressionLandscapeVisibilityMask
    }
}

external open class ActiveSoundUpdateInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActiveSoundUpdateInterface
        fun Find(Outer: UObject, ResourceName: String): ActiveSoundUpdateInterface
        fun GetDefaultObject(): ActiveSoundUpdateInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActiveSoundUpdateInterface
        fun C(Other: UObject): ActiveSoundUpdateInterface
        fun C(Other: Any): ActiveSoundUpdateInterface
    }
}

external open class ActorChannel : Channel {
    constructor()
    constructor(Outer: UObject)
    open var Actor: Actor
    open var CreateSubObjects: Array<UObject>

    companion object {
        fun Load(ResourceName: String): ActorChannel
        fun Find(Outer: UObject, ResourceName: String): ActorChannel
        fun GetDefaultObject(): ActorChannel
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorChannel
        fun C(Other: UObject): ActorChannel
        fun C(Other: Any): ActorChannel
    }
}

external open class ActorElementCounterInterface : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorElementCounterInterface
        fun Find(Outer: UObject, ResourceName: String): ActorElementCounterInterface
        fun GetDefaultObject(): ActorElementCounterInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorElementCounterInterface
        fun C(Other: UObject): ActorElementCounterInterface
        fun C(Other: Any): ActorElementCounterInterface
    }
}

external open class ActorElementHierarchyInterface : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorElementHierarchyInterface
        fun Find(Outer: UObject, ResourceName: String): ActorElementHierarchyInterface
        fun GetDefaultObject(): ActorElementHierarchyInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorElementHierarchyInterface
        fun C(Other: UObject): ActorElementHierarchyInterface
        fun C(Other: Any): ActorElementHierarchyInterface
    }
}

external open class ActorElementObjectInterface : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorElementObjectInterface
        fun Find(Outer: UObject, ResourceName: String): ActorElementObjectInterface
        fun GetDefaultObject(): ActorElementObjectInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorElementObjectInterface
        fun C(Other: UObject): ActorElementObjectInterface
        fun C(Other: Any): ActorElementObjectInterface
    }
}

external open class ActorPartitionSubsystem : WorldSubsystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorPartitionSubsystem
        fun Find(Outer: UObject, ResourceName: String): ActorPartitionSubsystem
        fun GetDefaultObject(): ActorPartitionSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorPartitionSubsystem
        fun C(Other: UObject): ActorPartitionSubsystem
        fun C(Other: Any): ActorPartitionSubsystem
    }
}

external interface `T$671` {
    var Params: Array<AudioParameter>
}

external open class ActorSoundParameterInterface : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun GetActorSoundParams(Params: Array<AudioParameter> = definedExternally): `T$671`

    companion object {
        fun Load(ResourceName: String): ActorSoundParameterInterface
        fun Find(Outer: UObject, ResourceName: String): ActorSoundParameterInterface
        fun GetDefaultObject(): ActorSoundParameterInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorSoundParameterInterface
        fun C(Other: UObject): ActorSoundParameterInterface
        fun C(Other: Any): ActorSoundParameterInterface
    }
}

external open class StreamableTexture {
    open var Name: String
    open var Guid: Guid
    open fun clone(): StreamableTexture

    companion object {
        fun C(Other: UObject): StreamableTexture
        fun C(Other: Any): StreamableTexture
    }
}

external open class ActorTextureStreamingBuildDataComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var StreamableTextures: Array<StreamableTexture>
    open var PackedTextureStreamingQualityLevelFeatureLevel: Any

    companion object {
        fun Load(ResourceName: String): ActorTextureStreamingBuildDataComponent
        fun Find(Outer: UObject, ResourceName: String): ActorTextureStreamingBuildDataComponent
        fun GetDefaultObject(): ActorTextureStreamingBuildDataComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorTextureStreamingBuildDataComponent
        fun C(Other: UObject): ActorTextureStreamingBuildDataComponent
        fun C(Other: Any): ActorTextureStreamingBuildDataComponent
    }
}

external open class AimOffsetBlendSpace : BlendSpace {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AimOffsetBlendSpace
        fun Find(Outer: UObject, ResourceName: String): AimOffsetBlendSpace
        fun GetDefaultObject(): AimOffsetBlendSpace
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AimOffsetBlendSpace
        fun C(Other: UObject): AimOffsetBlendSpace
        fun C(Other: Any): AimOffsetBlendSpace
    }
}

external open class BlendSpace1D : BlendSpace {
    constructor()
    constructor(Outer: UObject)
    open var bDisplayEditorVertically: Boolean
    open var bScaleAnimation: Boolean

    companion object {
        fun Load(ResourceName: String): BlendSpace1D
        fun Find(Outer: UObject, ResourceName: String): BlendSpace1D
        fun GetDefaultObject(): BlendSpace1D
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlendSpace1D
        fun C(Other: UObject): BlendSpace1D
        fun C(Other: Any): BlendSpace1D
    }
}

external open class AimOffsetBlendSpace1D : BlendSpace1D {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AimOffsetBlendSpace1D
        fun Find(Outer: UObject, ResourceName: String): AimOffsetBlendSpace1D
        fun GetDefaultObject(): AimOffsetBlendSpace1D
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AimOffsetBlendSpace1D
        fun C(Other: UObject): AimOffsetBlendSpace1D
        fun C(Other: Any): AimOffsetBlendSpace1D
    }
}

external open class AmbientSound(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var AudioComponent: AudioComponent
    open fun Stop()
    open fun Play(StartTime: Number)
    open fun FadeOut(FadeOutDuration: Number, FadeVolumeLevel: Number)
    open fun FadeIn(FadeInDuration: Number, FadeVolumeLevel: Number)
    open fun AdjustVolume(AdjustVolumeDuration: Number, AdjustVolumeLevel: Number)

    companion object {
        fun GetDefaultObject(): AmbientSound
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AmbientSound
        fun C(Other: UObject): AmbientSound
        fun C(Other: Any): AmbientSound
    }
}

external open class AnimationAssetExtensions : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimationAssetExtensions
        fun Find(Outer: UObject, ResourceName: String): AnimationAssetExtensions
        fun GetDefaultObject(): AnimationAssetExtensions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationAssetExtensions
        fun GetSkeleton(InAsset: AnimationAsset): Skeleton
        fun C(Other: UObject): AnimationAssetExtensions
        fun C(Other: Any): AnimationAssetExtensions
    }
}

external open class TimecodeCustomAttributeNameSettings {
    open var HourAttributeName: String
    open var MinuteAttributeName: String
    open var SecondAttributeName: String
    open var FrameAttributeName: String
    open var SubframeAttributeName: String
    open var RateAttributeName: String
    open var TakenameAttributeName: String
    open fun clone(): TimecodeCustomAttributeNameSettings

    companion object {
        fun C(Other: UObject): TimecodeCustomAttributeNameSettings
        fun C(Other: Any): TimecodeCustomAttributeNameSettings
    }
}

external open class CustomAttributeSetting {
    open var Name: String
    open var Meaning: String
    open fun clone(): CustomAttributeSetting

    companion object {
        fun C(Other: UObject): CustomAttributeSetting
        fun C(Other: Any): CustomAttributeSetting
    }
}

external object ECustomAttributeBlendType {
    var Override: String /* "Override" */
    var Blend: String /* "Blend" */
    var ECustomAttributeBlendType_MAX: String /* "ECustomAttributeBlendType_MAX" */
}

external open class AnimationSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var CompressCommandletVersion: Number
    open var KeyEndEffectorsMatchNameArray: Array<String>
    open var ForceRecompression: Boolean
    open var bForceBelowThreshold: Boolean
    open var bFirstRecompressUsingCurrentOrDefault: Boolean
    open var bRaiseMaxErrorToExisting: Boolean
    open var bEnablePerformanceLog: Boolean
    open var bStripAnimationDataOnDedicatedServer: Boolean
    open var bTickAnimationOnSkeletalMeshInit: Boolean
    open var BoneTimecodeCustomAttributeNameSettings: TimecodeCustomAttributeNameSettings
    open var BoneCustomAttributesNames: Array<CustomAttributeSetting>
    open var BoneNamesWithCustomAttributes: Array<String>
    open var AttributeBlendModes: Any
    open var DefaultAttributeBlendMode: String /* "Override" | "Blend" | "ECustomAttributeBlendType_MAX" */
    open var TransformAttributeNames: Array<String>
    open var MirrorFindReplaceExpressions: Array<MirrorFindReplaceExpression>
    open fun GetBoneCustomAttributeNamesToImport(): Array<String>

    companion object {
        fun Load(ResourceName: String): AnimationSettings
        fun Find(Outer: UObject, ResourceName: String): AnimationSettings
        fun GetDefaultObject(): AnimationSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationSettings
        fun C(Other: UObject): AnimationSettings
        fun C(Other: Any): AnimationSettings
    }
}

external open class AnimBlueprintClassSubsystem_PropertyAccess : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimBlueprintClassSubsystem_PropertyAccess
        fun Find(Outer: UObject, ResourceName: String): AnimBlueprintClassSubsystem_PropertyAccess
        fun GetDefaultObject(): AnimBlueprintClassSubsystem_PropertyAccess
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimBlueprintClassSubsystem_PropertyAccess
        fun C(Other: UObject): AnimBlueprintClassSubsystem_PropertyAccess
        fun C(Other: Any): AnimBlueprintClassSubsystem_PropertyAccess
    }
}

external open class AnimBlueprintGeneratedStruct : ScriptStruct {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimBlueprintGeneratedStruct
        fun Find(Outer: UObject, ResourceName: String): AnimBlueprintGeneratedStruct
        fun GetDefaultObject(): AnimBlueprintGeneratedStruct
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimBlueprintGeneratedStruct
        fun C(Other: UObject): AnimBlueprintGeneratedStruct
        fun C(Other: Any): AnimBlueprintGeneratedStruct
    }
}

external open class BakedStateExitTransition {
    open var CanTakeDelegateIndex: Number
    open var CustomResultNodeIndex: Number
    open var TransitionIndex: Number
    open var bDesiredTransitionReturnValue: Boolean
    open var bAutomaticRemainingTimeRule: Boolean
    open var SyncGroupNameToRequireValidMarkersRule: String
    open var PoseEvaluatorLinks: Array<Number>
    open fun clone(): BakedStateExitTransition

    companion object {
        fun C(Other: UObject): BakedStateExitTransition
        fun C(Other: Any): BakedStateExitTransition
    }
}

external open class BakedAnimationState {
    open var StateName: String
    open var Transitions: Array<BakedStateExitTransition>
    open var StateRootNodeIndex: Number
    open var StartNotify: Number
    open var EndNotify: Number
    open var FullyBlendedNotify: Number
    open var bIsAConduit: Boolean
    open var EntryRuleNodeIndex: Number
    open var PlayerNodeIndices: Array<Number>
    open var LayerNodeIndices: Array<Number>
    open var bAlwaysResetOnEntry: Boolean
    open fun clone(): BakedAnimationState

    companion object {
        fun C(Other: UObject): BakedAnimationState
        fun C(Other: Any): BakedAnimationState
    }
}

external open class AnimationStateBase {
    open var StateName: String
    open fun clone(): AnimationStateBase

    companion object {
        fun C(Other: UObject): AnimationStateBase
        fun C(Other: Any): AnimationStateBase
    }
}

external open class AnimationTransitionBetweenStates : AnimationStateBase {
    open var PreviousState: Number
    open var NextState: Number
    open var CrossfadeDuration: Number
    open var StartNotify: Number
    open var EndNotify: Number
    open var InterruptNotify: Number
    open var BlendMode: String /* "Linear" | "Cubic" | "HermiteCubic" | "Sinusoidal" | "QuadraticInOut" | "CubicInOut" | "QuarticInOut" | "QuinticInOut" | "CircularIn" | "CircularOut" | "CircularInOut" | "ExpIn" | "ExpOut" | "ExpInOut" | "Custom" | "EAlphaBlendOption_MAX" */
    open var CustomCurve: CurveFloat
    open var BlendProfile: BlendProfile
    open var LogicType: String /* "TLT_StandardBlend" | "TLT_Inertialization" | "TLT_Custom" | "TLT_MAX" */
    override fun clone(): AnimationTransitionBetweenStates

    companion object {
        fun C(Other: UObject): AnimationTransitionBetweenStates
        fun C(Other: Any): AnimationTransitionBetweenStates
    }
}

external open class BakedAnimationStateMachine {
    open var MachineName: String
    open var InitialState: Number
    open var States: Array<BakedAnimationState>
    open var Transitions: Array<AnimationTransitionBetweenStates>
    open fun clone(): BakedAnimationStateMachine

    companion object {
        fun C(Other: UObject): BakedAnimationStateMachine
        fun C(Other: Any): BakedAnimationStateMachine
    }
}

external object EAnimNodeDataFlags {
    var None: String /* "None" */
    var HasInitialUpdateFunction: String /* "HasInitialUpdateFunction" */
    var HasBecomeRelevantFunction: String /* "HasBecomeRelevantFunction" */
    var HasUpdateFunction: String /* "HasUpdateFunction" */
    var EAnimNodeDataFlags_MAX: String /* "EAnimNodeDataFlags_MAX" */
}

external open class AnimNodeData {
    open var AnimClassInterface: Any
    open var Entries: Array<Any>
    open var NodeIndex: Number
    open var Flags: String /* "None" | "HasInitialUpdateFunction" | "HasBecomeRelevantFunction" | "HasUpdateFunction" | "EAnimNodeDataFlags_MAX" */
    open fun clone(): AnimNodeData

    companion object {
        fun C(Other: UObject): AnimNodeData
        fun C(Other: Any): AnimNodeData
    }
}

external open class AnimBlueprintGeneratedClass : BlueprintGeneratedClass {
    constructor()
    constructor(Outer: UObject)
    open var BakedStateMachines: Array<BakedAnimationStateMachine>
    open var TargetSkeleton: Skeleton
    open var AnimNotifies: Array<AnimNotifyEvent>
    open var OrderedSavedPoseIndicesMap: Any
    open var SyncGroupNames: Array<String>
    open var EvaluateGraphExposedInputs: Array<ExposedValueHandler>
    open var GraphAssetPlayerInformation: Any
    open var GraphBlendOptions: Any
    open var AnimNodeData: Array<AnimNodeData>
    open var NodeTypeMap: Any

    companion object {
        fun Load(ResourceName: String): AnimBlueprintGeneratedClass
        fun Find(Outer: UObject, ResourceName: String): AnimBlueprintGeneratedClass
        fun GetDefaultObject(): AnimBlueprintGeneratedClass
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimBlueprintGeneratedClass
        fun C(Other: UObject): AnimBlueprintGeneratedClass
        fun C(Other: Any): AnimBlueprintGeneratedClass
    }
}

external open class AnimBlueprintFunction {
    open var Name: String
    open var Group: String
    open var OutputPoseNodeIndex: Number
    open var InputPoseNames: Array<String>
    open var InputPoseNodeIndices: Array<Number>
    open var bImplemented: Boolean
    open fun clone(): AnimBlueprintFunction

    companion object {
        fun C(Other: UObject): AnimBlueprintFunction
        fun C(Other: Any): AnimBlueprintFunction
    }
}

external open class AnimBlueprintFunctionData {
    open var OutputPoseNodeProperty: Any
    open var InputPoseNodeProperties: Array<Any>
    open var InputProperties: Array<Any>
    open fun clone(): AnimBlueprintFunctionData

    companion object {
        fun C(Other: UObject): AnimBlueprintFunctionData
        fun C(Other: Any): AnimBlueprintFunctionData
    }
}

external open class AnimClassData : UObject {
    constructor()
    constructor(Outer: UObject)
    open var BakedStateMachines: Array<BakedAnimationStateMachine>
    open var TargetSkeleton: Skeleton
    open var AnimNotifies: Array<AnimNotifyEvent>
    open var OrderedSavedPoseIndicesMap: Any
    open var AnimBlueprintFunctions: Array<AnimBlueprintFunction>
    open var AnimBlueprintFunctionData: Array<AnimBlueprintFunctionData>
    open var AnimNodeProperties: Array<Any>
    open var LinkedAnimGraphNodeProperties: Array<Any>
    open var LinkedAnimLayerNodeProperties: Array<Any>
    open var PreUpdateNodeProperties: Array<Any>
    open var DynamicResetNodeProperties: Array<Any>
    open var StateMachineNodeProperties: Array<Any>
    open var InitializationNodeProperties: Array<Any>
    open var GraphNameAssetPlayers: Any
    open var SyncGroupNames: Array<String>
    open var GraphBlendOptions: Any

    companion object {
        fun Load(ResourceName: String): AnimClassData
        fun Find(Outer: UObject, ResourceName: String): AnimClassData
        fun GetDefaultObject(): AnimClassData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimClassData
        fun C(Other: UObject): AnimClassData
        fun C(Other: Any): AnimClassData
    }
}

external open class AnimClassInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimClassInterface
        fun Find(Outer: UObject, ResourceName: String): AnimClassInterface
        fun GetDefaultObject(): AnimClassInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimClassInterface
        fun C(Other: UObject): AnimClassInterface
        fun C(Other: Any): AnimClassInterface
    }
}

external open class AnimComposite : AnimCompositeBase {
    constructor()
    constructor(Outer: UObject)
    open var AnimationTrack: AnimTrack
    open var PreviewBasePose: AnimSequence

    companion object {
        fun Load(ResourceName: String): AnimComposite
        fun Find(Outer: UObject, ResourceName: String): AnimComposite
        fun GetDefaultObject(): AnimComposite
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimComposite
        fun C(Other: UObject): AnimComposite
        fun C(Other: Any): AnimComposite
    }
}

external open class AnimCompress_BitwiseCompressOnly : AnimCompress {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimCompress_BitwiseCompressOnly
        fun Find(Outer: UObject, ResourceName: String): AnimCompress_BitwiseCompressOnly
        fun GetDefaultObject(): AnimCompress_BitwiseCompressOnly
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimCompress_BitwiseCompressOnly
        fun C(Other: UObject): AnimCompress_BitwiseCompressOnly
        fun C(Other: Any): AnimCompress_BitwiseCompressOnly
    }
}

external open class AnimCompress_LeastDestructive : AnimCompress_BitwiseCompressOnly {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimCompress_LeastDestructive
        fun Find(Outer: UObject, ResourceName: String): AnimCompress_LeastDestructive
        fun GetDefaultObject(): AnimCompress_LeastDestructive
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimCompress_LeastDestructive
        fun C(Other: UObject): AnimCompress_LeastDestructive
        fun C(Other: Any): AnimCompress_LeastDestructive
    }
}

external open class AnimCompress_RemoveLinearKeys : AnimCompress {
    constructor()
    constructor(Outer: UObject)
    open var MaxPosDiff: Number
    open var MaxAngleDiff: Number
    open var MaxScaleDiff: Number
    open var MaxEffectorDiff: Number
    open var MinEffectorDiff: Number
    open var EffectorDiffSocket: Number
    open var ParentKeyScale: Number
    open var bRetarget: Boolean
    open var bActuallyFilterLinearKeys: Boolean

    companion object {
        fun Load(ResourceName: String): AnimCompress_RemoveLinearKeys
        fun Find(Outer: UObject, ResourceName: String): AnimCompress_RemoveLinearKeys
        fun GetDefaultObject(): AnimCompress_RemoveLinearKeys
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimCompress_RemoveLinearKeys
        fun C(Other: UObject): AnimCompress_RemoveLinearKeys
        fun C(Other: Any): AnimCompress_RemoveLinearKeys
    }
}

external open class AnimCompress_PerTrackCompression : AnimCompress_RemoveLinearKeys {
    constructor()
    constructor(Outer: UObject)
    open var MaxZeroingThreshold: Number
    open var MaxPosDiffBitwise: Number
    open var MaxAngleDiffBitwise: Number
    open var MaxScaleDiffBitwise: Number
    open var AllowedRotationFormats: Array<String /* "ACF_None" | "ACF_Float96NoW" | "ACF_Fixed48NoW" | "ACF_IntervalFixed32NoW" | "ACF_Fixed32NoW" | "ACF_Float32NoW" | "ACF_Identity" | "ACF_MAX" */>
    open var AllowedTranslationFormats: Array<String /* "ACF_None" | "ACF_Float96NoW" | "ACF_Fixed48NoW" | "ACF_IntervalFixed32NoW" | "ACF_Fixed32NoW" | "ACF_Float32NoW" | "ACF_Identity" | "ACF_MAX" */>
    open var AllowedScaleFormats: Array<String /* "ACF_None" | "ACF_Float96NoW" | "ACF_Fixed48NoW" | "ACF_IntervalFixed32NoW" | "ACF_Fixed32NoW" | "ACF_Float32NoW" | "ACF_Identity" | "ACF_MAX" */>
    open var bResampleAnimation: Boolean
    open var ResampledFramerate: Number
    open var MinKeysForResampling: Number
    open var bUseAdaptiveError: Boolean
    open var bUseOverrideForEndEffectors: Boolean
    open var TrackHeightBias: Number
    open var ParentingDivisor: Number
    open var ParentingDivisorExponent: Number
    open var bUseAdaptiveError2: Boolean
    open var RotationErrorSourceRatio: Number
    open var TranslationErrorSourceRatio: Number
    open var ScaleErrorSourceRatio: Number
    open var MaxErrorPerTrackRatio: Number
    open var PerturbationProbeSize: Number

    companion object {
        fun Load(ResourceName: String): AnimCompress_PerTrackCompression
        fun Find(Outer: UObject, ResourceName: String): AnimCompress_PerTrackCompression
        fun GetDefaultObject(): AnimCompress_PerTrackCompression
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimCompress_PerTrackCompression
        fun C(Other: UObject): AnimCompress_PerTrackCompression
        fun C(Other: Any): AnimCompress_PerTrackCompression
    }
}

external open class AnimCompress_RemoveEverySecondKey : AnimCompress {
    constructor()
    constructor(Outer: UObject)
    open var MinKeys: Number
    open var bStartAtSecondKey: Boolean

    companion object {
        fun Load(ResourceName: String): AnimCompress_RemoveEverySecondKey
        fun Find(Outer: UObject, ResourceName: String): AnimCompress_RemoveEverySecondKey
        fun GetDefaultObject(): AnimCompress_RemoveEverySecondKey
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimCompress_RemoveEverySecondKey
        fun C(Other: UObject): AnimCompress_RemoveEverySecondKey
        fun C(Other: Any): AnimCompress_RemoveEverySecondKey
    }
}

external open class AnimCompress_RemoveTrivialKeys : AnimCompress {
    constructor()
    constructor(Outer: UObject)
    open var MaxPosDiff: Number
    open var MaxAngleDiff: Number
    open var MaxScaleDiff: Number

    companion object {
        fun Load(ResourceName: String): AnimCompress_RemoveTrivialKeys
        fun Find(Outer: UObject, ResourceName: String): AnimCompress_RemoveTrivialKeys
        fun GetDefaultObject(): AnimCompress_RemoveTrivialKeys
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimCompress_RemoveTrivialKeys
        fun C(Other: UObject): AnimCompress_RemoveTrivialKeys
        fun C(Other: Any): AnimCompress_RemoveTrivialKeys
    }
}

external open class AnimCurveCompressionCodec_CompressedRichCurve : AnimCurveCompressionCodec {
    constructor()
    constructor(Outer: UObject)
    open var MaxCurveError: Number
    open var UseAnimSequenceSampleRate: Boolean
    open var ErrorSampleRate: Number

    companion object {
        fun Load(ResourceName: String): AnimCurveCompressionCodec_CompressedRichCurve
        fun Find(Outer: UObject, ResourceName: String): AnimCurveCompressionCodec_CompressedRichCurve
        fun GetDefaultObject(): AnimCurveCompressionCodec_CompressedRichCurve
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimCurveCompressionCodec_CompressedRichCurve
        fun C(Other: UObject): AnimCurveCompressionCodec_CompressedRichCurve
        fun C(Other: Any): AnimCurveCompressionCodec_CompressedRichCurve
    }
}

external open class AnimCurveCompressionCodec_UniformIndexable : AnimCurveCompressionCodec {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimCurveCompressionCodec_UniformIndexable
        fun Find(Outer: UObject, ResourceName: String): AnimCurveCompressionCodec_UniformIndexable
        fun GetDefaultObject(): AnimCurveCompressionCodec_UniformIndexable
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimCurveCompressionCodec_UniformIndexable
        fun C(Other: UObject): AnimCurveCompressionCodec_UniformIndexable
        fun C(Other: Any): AnimCurveCompressionCodec_UniformIndexable
    }
}

external open class AnimCurveCompressionCodec_UniformlySampled : AnimCurveCompressionCodec {
    constructor()
    constructor(Outer: UObject)
    open var UseAnimSequenceSampleRate: Boolean
    open var SampleRate: Number

    companion object {
        fun Load(ResourceName: String): AnimCurveCompressionCodec_UniformlySampled
        fun Find(Outer: UObject, ResourceName: String): AnimCurveCompressionCodec_UniformlySampled
        fun GetDefaultObject(): AnimCurveCompressionCodec_UniformlySampled
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimCurveCompressionCodec_UniformlySampled
        fun C(Other: UObject): AnimCurveCompressionCodec_UniformlySampled
        fun C(Other: Any): AnimCurveCompressionCodec_UniformlySampled
    }
}

external open class AnimationDataModelNotifiesExtensions : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimationDataModelNotifiesExtensions
        fun Find(Outer: UObject, ResourceName: String): AnimationDataModelNotifiesExtensions
        fun GetDefaultObject(): AnimationDataModelNotifiesExtensions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationDataModelNotifiesExtensions
        fun GetPayload(Payload: AnimDataModelNotifPayload): EmptyPayload
        fun CopyPayload(Payload: AnimDataModelNotifPayload, ExpectedStruct: ScriptStruct, OutPayload: EmptyPayload = definedExternally): `T$78`
        fun C(Other: UObject): AnimationDataModelNotifiesExtensions
        fun C(Other: Any): AnimationDataModelNotifiesExtensions
    }
}

external open class AnimNotifyMirrorInspectionLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimNotifyMirrorInspectionLibrary
        fun Find(Outer: UObject, ResourceName: String): AnimNotifyMirrorInspectionLibrary
        fun GetDefaultObject(): AnimNotifyMirrorInspectionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimNotifyMirrorInspectionLibrary
        fun IsTriggeredByMirroredAnimation(EventReference: AnimNotifyEventReference): Boolean
        fun GetMirrorDataTable(EventReference: AnimNotifyEventReference): MirrorDataTable
        fun C(Other: UObject): AnimNotifyMirrorInspectionLibrary
        fun C(Other: Any): AnimNotifyMirrorInspectionLibrary
    }
}

external open class AnimNotifyStateMachineInspectionLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimNotifyStateMachineInspectionLibrary
        fun Find(Outer: UObject, ResourceName: String): AnimNotifyStateMachineInspectionLibrary
        fun GetDefaultObject(): AnimNotifyStateMachineInspectionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimNotifyStateMachineInspectionLibrary
        fun IsTriggeredByStateMachine(EventReference: AnimNotifyEventReference, AnimInstance: AnimInstance, StateMachineName: String): Boolean
        fun IsTriggeredByStateInStateMachine(EventReference: AnimNotifyEventReference, AnimInstance: AnimInstance, StateMachineName: String, StateName: String): Boolean
        fun IsTriggeredByState(EventReference: AnimNotifyEventReference, AnimInstance: AnimInstance, StateName: String): Boolean
        fun C(Other: UObject): AnimNotifyStateMachineInspectionLibrary
        fun C(Other: Any): AnimNotifyStateMachineInspectionLibrary
    }
}

external open class AnimNotifyState_DisableRootMotion : AnimNotifyState {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimNotifyState_DisableRootMotion
        fun Find(Outer: UObject, ResourceName: String): AnimNotifyState_DisableRootMotion
        fun GetDefaultObject(): AnimNotifyState_DisableRootMotion
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimNotifyState_DisableRootMotion
        fun C(Other: UObject): AnimNotifyState_DisableRootMotion
        fun C(Other: Any): AnimNotifyState_DisableRootMotion
    }
}

external open class AnimNotifyState_TimedParticleEffect : AnimNotifyState {
    constructor()
    constructor(Outer: UObject)
    open var PSTemplate: ParticleSystem
    open var SocketName: String
    open var LocationOffset: Vector
    open var RotationOffset: Rotator
    open var bDestroyAtEnd: Boolean
    open var PreviousPSTemplates: Array<ParticleSystem>
    open var PreviousSocketNames: Array<String>

    companion object {
        fun Load(ResourceName: String): AnimNotifyState_TimedParticleEffect
        fun Find(Outer: UObject, ResourceName: String): AnimNotifyState_TimedParticleEffect
        fun GetDefaultObject(): AnimNotifyState_TimedParticleEffect
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimNotifyState_TimedParticleEffect
        fun C(Other: UObject): AnimNotifyState_TimedParticleEffect
        fun C(Other: Any): AnimNotifyState_TimedParticleEffect
    }
}

external open class AnimNotifyState_Trail : AnimNotifyState {
    constructor()
    constructor(Outer: UObject)
    open var PSTemplate: ParticleSystem
    open var FirstSocketName: String
    open var SecondSocketName: String
    open var WidthScaleMode: String /* "ETrailWidthMode_FromCentre" | "ETrailWidthMode_FromFirst" | "ETrailWidthMode_FromSecond" | "ETrailWidthMode_MAX" */
    open var WidthScaleCurve: String
    open var bRecycleSpawnedSystems: Boolean
    open var bRenderGeometry: Boolean
    open var bRenderSpawnPoints: Boolean
    open var bRenderTangents: Boolean
    open var bRenderTessellation: Boolean
    open fun OverridePSTemplate(MeshComp: SkeletalMeshComponent, Animation: AnimSequenceBase): ParticleSystem

    companion object {
        fun Load(ResourceName: String): AnimNotifyState_Trail
        fun Find(Outer: UObject, ResourceName: String): AnimNotifyState_Trail
        fun GetDefaultObject(): AnimNotifyState_Trail
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimNotifyState_Trail
        fun C(Other: UObject): AnimNotifyState_Trail
        fun C(Other: Any): AnimNotifyState_Trail
    }
}

external open class AnimNotify_PauseClothingSimulation : AnimNotify {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimNotify_PauseClothingSimulation
        fun Find(Outer: UObject, ResourceName: String): AnimNotify_PauseClothingSimulation
        fun GetDefaultObject(): AnimNotify_PauseClothingSimulation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimNotify_PauseClothingSimulation
        fun C(Other: UObject): AnimNotify_PauseClothingSimulation
        fun C(Other: Any): AnimNotify_PauseClothingSimulation
    }
}

external open class AnimNotify_PlayParticleEffect : AnimNotify {
    constructor()
    constructor(Outer: UObject)
    open var PSTemplate: ParticleSystem
    open var LocationOffset: Vector
    open var RotationOffset: Rotator
    open var Scale: Vector
    open var Attached: Boolean
    open var SocketName: String

    companion object {
        fun Load(ResourceName: String): AnimNotify_PlayParticleEffect
        fun Find(Outer: UObject, ResourceName: String): AnimNotify_PlayParticleEffect
        fun GetDefaultObject(): AnimNotify_PlayParticleEffect
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimNotify_PlayParticleEffect
        fun C(Other: UObject): AnimNotify_PlayParticleEffect
        fun C(Other: Any): AnimNotify_PlayParticleEffect
    }
}

external open class AnimNotify_PlaySound : AnimNotify {
    constructor()
    constructor(Outer: UObject)
    open var Sound: SoundBase
    open var VolumeMultiplier: Number
    open var PitchMultiplier: Number
    open var bFollow: Boolean
    open var bPreviewIgnoreAttenuation: Boolean
    open var AttachName: String

    companion object {
        fun Load(ResourceName: String): AnimNotify_PlaySound
        fun Find(Outer: UObject, ResourceName: String): AnimNotify_PlaySound
        fun GetDefaultObject(): AnimNotify_PlaySound
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimNotify_PlaySound
        fun C(Other: UObject): AnimNotify_PlaySound
        fun C(Other: Any): AnimNotify_PlaySound
    }
}

external open class AnimNotify_ResetClothingSimulation : AnimNotify {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimNotify_ResetClothingSimulation
        fun Find(Outer: UObject, ResourceName: String): AnimNotify_ResetClothingSimulation
        fun GetDefaultObject(): AnimNotify_ResetClothingSimulation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimNotify_ResetClothingSimulation
        fun C(Other: UObject): AnimNotify_ResetClothingSimulation
        fun C(Other: Any): AnimNotify_ResetClothingSimulation
    }
}

external open class AnimNotify_ResetDynamics : AnimNotify {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimNotify_ResetDynamics
        fun Find(Outer: UObject, ResourceName: String): AnimNotify_ResetDynamics
        fun GetDefaultObject(): AnimNotify_ResetDynamics
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimNotify_ResetDynamics
        fun C(Other: UObject): AnimNotify_ResetDynamics
        fun C(Other: Any): AnimNotify_ResetDynamics
    }
}

external open class AnimNotify_ResumeClothingSimulation : AnimNotify {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimNotify_ResumeClothingSimulation
        fun Find(Outer: UObject, ResourceName: String): AnimNotify_ResumeClothingSimulation
        fun GetDefaultObject(): AnimNotify_ResumeClothingSimulation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimNotify_ResumeClothingSimulation
        fun C(Other: UObject): AnimNotify_ResumeClothingSimulation
        fun C(Other: Any): AnimNotify_ResumeClothingSimulation
    }
}

external open class AnimSetMeshLinkup {
    open var BoneToTrackTable: Array<Number>
    open fun clone(): AnimSetMeshLinkup

    companion object {
        fun C(Other: UObject): AnimSetMeshLinkup
        fun C(Other: Any): AnimSetMeshLinkup
    }
}

external open class AnimSet : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bAnimRotationOnly: Boolean
    open var TrackBoneNames: Array<String>
    open var Sequences: Array<AnimSequence>
    open var LinkupCache: Array<AnimSetMeshLinkup>
    open var BoneUseAnimTranslation: Array<Number>
    open var ForceUseMeshTranslation: Array<Number>
    open var UseTranslationBoneNames: Array<String>
    open var ForceMeshTranslationBoneNames: Array<String>
    open var PreviewSkelMeshName: String
    open var BestRatioSkelMeshName: String

    companion object {
        fun Load(ResourceName: String): AnimSet
        fun Find(Outer: UObject, ResourceName: String): AnimSet
        fun GetDefaultObject(): AnimSet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimSet
        fun C(Other: UObject): AnimSet
        fun C(Other: Any): AnimSet
    }
}

external open class AnimStateMachineTypes : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimStateMachineTypes
        fun Find(Outer: UObject, ResourceName: String): AnimStateMachineTypes
        fun GetDefaultObject(): AnimStateMachineTypes
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimStateMachineTypes
        fun C(Other: UObject): AnimStateMachineTypes
        fun C(Other: Any): AnimStateMachineTypes
    }
}

external open class AnimStreamable : AnimSequenceBase {
    constructor()
    constructor(Outer: UObject)
    open var NumberOfKeys: Number
    open var Interpolation: String /* "Linear" | "Step" | "EAnimInterpolationType_MAX" */
    open var RetargetSource: String
    open var SourceSequence: AnimSequence
    open var RawDataGuid: Guid
    open var NumFrames: Number
    open var RawAnimationData: Array<RawAnimSequenceTrack>
    open var TrackToSkeletonMapTable: Array<TrackToSkeletonMap>
    open var AnimationTrackNames: Array<String>
    open var BoneCompressionSettings: AnimBoneCompressionSettings
    open var CurveCompressionSettings: AnimCurveCompressionSettings
    open var bEnableRootMotion: Boolean
    open var RootMotionRootLock: String /* "RefPose" | "AnimFirstFrame" | "Zero" | "ERootMotionRootLock_MAX" */
    open var bForceRootLock: Boolean
    open var bUseNormalizedRootMotionScale: Boolean

    companion object {
        fun Load(ResourceName: String): AnimStreamable
        fun Find(Outer: UObject, ResourceName: String): AnimStreamable
        fun GetDefaultObject(): AnimStreamable
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimStreamable
        fun C(Other: UObject): AnimStreamable
        fun C(Other: Any): AnimStreamable
    }
}

external open class RawAnimSequenceTrackExtensions : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): RawAnimSequenceTrackExtensions
        fun Find(Outer: UObject, ResourceName: String): RawAnimSequenceTrackExtensions
        fun GetDefaultObject(): RawAnimSequenceTrackExtensions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RawAnimSequenceTrackExtensions
        fun GetScaleKeys(Track: RawAnimSequenceTrack): Array<Vector>
        fun GetRotationalKeys(Track: RawAnimSequenceTrack): Array<Quat>
        fun GetPositionalKeys(Track: RawAnimSequenceTrack): Array<Vector>
        fun C(Other: UObject): RawAnimSequenceTrackExtensions
        fun C(Other: Any): RawAnimSequenceTrackExtensions
    }
}

external object ETemperatureSeverityType {
    var Unknown: String /* "Unknown" */
    var Good: String /* "Good" */
    var Bad: String /* "Bad" */
    var Serious: String /* "Serious" */
    var Critical: String /* "Critical" */
    var NumSeverities: String /* "NumSeverities" */
    var ETemperatureSeverityType_MAX: String /* "ETemperatureSeverityType_MAX" */
}

external open class ApplicationLifecycleComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var ApplicationWillDeactivateDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var ApplicationHasReactivatedDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var ApplicationWillEnterBackgroundDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var ApplicationHasEnteredForegroundDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var ApplicationWillTerminateDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var ApplicationShouldUnloadResourcesDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var ApplicationReceivedStartupArgumentsDelegate: UnrealEngineMulticastDelegate<(StartupArguments: Array<String>) -> Unit>
    open var OnTemperatureChangeDelegate: UnrealEngineMulticastDelegate<(Severity: String /* "Unknown" | "Good" | "Bad" | "Serious" | "Critical" | "NumSeverities" | "ETemperatureSeverityType_MAX" */) -> Unit>
    open var OnLowPowerModeDelegate: UnrealEngineMulticastDelegate<(bInLowPowerMode: Boolean) -> Unit>

    companion object {
        fun Load(ResourceName: String): ApplicationLifecycleComponent
        fun Find(Outer: UObject, ResourceName: String): ApplicationLifecycleComponent
        fun GetDefaultObject(): ApplicationLifecycleComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ApplicationLifecycleComponent
        fun C(Other: UObject): ApplicationLifecycleComponent
        fun C(Other: Any): ApplicationLifecycleComponent
    }
}

external object EPrimaryAssetCookRule {
    var Unknown: String /* "Unknown" */
    var NeverCook: String /* "NeverCook" */
    var DevelopmentCook: String /* "DevelopmentCook" */
    var DevelopmentAlwaysCook: String /* "DevelopmentAlwaysCook" */
    var AlwaysCook: String /* "AlwaysCook" */
    var EPrimaryAssetCookRule_MAX: String /* "EPrimaryAssetCookRule_MAX" */
}

external open class PrimaryAssetRules {
    open var Priority: Number
    open var ChunkID: Number
    open var bApplyRecursively: Boolean
    open var CookRule: String /* "Unknown" | "NeverCook" | "DevelopmentCook" | "DevelopmentAlwaysCook" | "AlwaysCook" | "EPrimaryAssetCookRule_MAX" */
    open fun clone(): PrimaryAssetRules

    companion object {
        fun C(Other: UObject): PrimaryAssetRules
        fun C(Other: Any): PrimaryAssetRules
    }
}

external open class PrimaryAssetTypeInfo {
    open var PrimaryAssetType: String
    open var AssetBaseClass: Class
    open var AssetBaseClassLoaded: UnrealEngineClass
    open var bHasBlueprintClasses: Boolean
    open var bIsEditorOnly: Boolean
    open var Directories: Array<DirectoryPath>
    open var SpecificAssets: Array<SoftObjectPath>
    open var Rules: PrimaryAssetRules
    open var AssetScanPaths: Array<String>
    open var bIsDynamicAsset: Boolean
    open var NumberOfAssets: Number
    open fun clone(): PrimaryAssetTypeInfo

    companion object {
        fun C(Other: UObject): PrimaryAssetTypeInfo
        fun C(Other: Any): PrimaryAssetTypeInfo
    }
}

external open class PrimaryAssetRulesOverride {
    open var PrimaryAssetId: PrimaryAssetId
    open var Rules: PrimaryAssetRules
    open fun clone(): PrimaryAssetRulesOverride

    companion object {
        fun C(Other: UObject): PrimaryAssetRulesOverride
        fun C(Other: Any): PrimaryAssetRulesOverride
    }
}

external open class PrimaryAssetRulesCustomOverride {
    open var PrimaryAssetType: PrimaryAssetType
    open var FilterDirectory: DirectoryPath
    open var FilterString: String
    open var Rules: PrimaryAssetRules
    open fun clone(): PrimaryAssetRulesCustomOverride

    companion object {
        fun C(Other: UObject): PrimaryAssetRulesCustomOverride
        fun C(Other: Any): PrimaryAssetRulesCustomOverride
    }
}

external open class AssetManagerRedirect {
    open var Old: String
    open var New: String
    open fun clone(): AssetManagerRedirect

    companion object {
        fun C(Other: UObject): AssetManagerRedirect
        fun C(Other: Any): AssetManagerRedirect
    }
}

external open class AssetManagerSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var PrimaryAssetTypesToScan: Array<PrimaryAssetTypeInfo>
    open var DirectoriesToExclude: Array<DirectoryPath>
    open var PrimaryAssetRules: Array<PrimaryAssetRulesOverride>
    open var CustomPrimaryAssetRules: Array<PrimaryAssetRulesCustomOverride>
    open var bOnlyCookProductionAssets: Boolean
    open var bShouldManagerDetermineTypeAndName: Boolean
    open var bShouldGuessTypeAndNameInEditor: Boolean
    open var bShouldAcquireMissingChunksOnLoad: Boolean
    open var bShouldWarnAboutInvalidAssets: Boolean
    open var PrimaryAssetIdRedirects: Array<AssetManagerRedirect>
    open var PrimaryAssetTypeRedirects: Array<AssetManagerRedirect>
    open var AssetPathRedirects: Array<AssetManagerRedirect>
    open var MetaDataTagsForAssetRegistry: Any

    companion object {
        fun Load(ResourceName: String): AssetManagerSettings
        fun Find(Outer: UObject, ResourceName: String): AssetManagerSettings
        fun GetDefaultObject(): AssetManagerSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AssetManagerSettings
        fun C(Other: UObject): AssetManagerSettings
        fun C(Other: Any): AssetManagerSettings
    }
}

external open class AsyncActionHandleSaveGame : BlueprintAsyncActionBase {
    constructor()
    constructor(Outer: UObject)
    open var Completed: UnrealEngineMulticastDelegate<(SaveGame: SaveGame, bSuccess: Boolean) -> Unit>
    open var SaveGameObject: SaveGame

    companion object {
        fun Load(ResourceName: String): AsyncActionHandleSaveGame
        fun Find(Outer: UObject, ResourceName: String): AsyncActionHandleSaveGame
        fun GetDefaultObject(): AsyncActionHandleSaveGame
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AsyncActionHandleSaveGame
        fun AsyncSaveGameToSlot(WorldContextObject: UObject, SaveGameObject: SaveGame, SlotName: String, UserIndex: Number): AsyncActionHandleSaveGame
        fun AsyncLoadGameFromSlot(WorldContextObject: UObject, SlotName: String, UserIndex: Number): AsyncActionHandleSaveGame
        fun C(Other: UObject): AsyncActionHandleSaveGame
        fun C(Other: Any): AsyncActionHandleSaveGame
    }
}

external open class AsyncActionLoadPrimaryAssetBase : BlueprintAsyncActionBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AsyncActionLoadPrimaryAssetBase
        fun Find(Outer: UObject, ResourceName: String): AsyncActionLoadPrimaryAssetBase
        fun GetDefaultObject(): AsyncActionLoadPrimaryAssetBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AsyncActionLoadPrimaryAssetBase
        fun C(Other: UObject): AsyncActionLoadPrimaryAssetBase
        fun C(Other: Any): AsyncActionLoadPrimaryAssetBase
    }
}

external open class AsyncActionLoadPrimaryAsset : AsyncActionLoadPrimaryAssetBase {
    constructor()
    constructor(Outer: UObject)
    open var Completed: UnrealEngineMulticastDelegate<(Loaded: UObject) -> Unit>

    companion object {
        fun Load(ResourceName: String): AsyncActionLoadPrimaryAsset
        fun Find(Outer: UObject, ResourceName: String): AsyncActionLoadPrimaryAsset
        fun GetDefaultObject(): AsyncActionLoadPrimaryAsset
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AsyncActionLoadPrimaryAsset
        fun AsyncLoadPrimaryAsset(WorldContextObject: UObject, PrimaryAsset: PrimaryAssetId, LoadBundles: Array<String>): AsyncActionLoadPrimaryAsset
        fun C(Other: UObject): AsyncActionLoadPrimaryAsset
        fun C(Other: Any): AsyncActionLoadPrimaryAsset
    }
}

external open class AsyncActionLoadPrimaryAssetClass : AsyncActionLoadPrimaryAssetBase {
    constructor()
    constructor(Outer: UObject)
    open var Completed: UnrealEngineMulticastDelegate<(Loaded: UnrealEngineClass) -> Unit>

    companion object {
        fun Load(ResourceName: String): AsyncActionLoadPrimaryAssetClass
        fun Find(Outer: UObject, ResourceName: String): AsyncActionLoadPrimaryAssetClass
        fun GetDefaultObject(): AsyncActionLoadPrimaryAssetClass
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AsyncActionLoadPrimaryAssetClass
        fun AsyncLoadPrimaryAssetClass(WorldContextObject: UObject, PrimaryAsset: PrimaryAssetId, LoadBundles: Array<String>): AsyncActionLoadPrimaryAssetClass
        fun C(Other: UObject): AsyncActionLoadPrimaryAssetClass
        fun C(Other: Any): AsyncActionLoadPrimaryAssetClass
    }
}

external open class AsyncActionLoadPrimaryAssetList : AsyncActionLoadPrimaryAssetBase {
    constructor()
    constructor(Outer: UObject)
    open var Completed: UnrealEngineMulticastDelegate<(Loaded: Array<UObject>) -> Unit>

    companion object {
        fun Load(ResourceName: String): AsyncActionLoadPrimaryAssetList
        fun Find(Outer: UObject, ResourceName: String): AsyncActionLoadPrimaryAssetList
        fun GetDefaultObject(): AsyncActionLoadPrimaryAssetList
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AsyncActionLoadPrimaryAssetList
        fun AsyncLoadPrimaryAssetList(WorldContextObject: UObject, PrimaryAssetList: Array<PrimaryAssetId>, LoadBundles: Array<String>): AsyncActionLoadPrimaryAssetList
        fun C(Other: UObject): AsyncActionLoadPrimaryAssetList
        fun C(Other: Any): AsyncActionLoadPrimaryAssetList
    }
}

external open class AsyncActionLoadPrimaryAssetClassList : AsyncActionLoadPrimaryAssetBase {
    constructor()
    constructor(Outer: UObject)
    open var Completed: UnrealEngineMulticastDelegate<(Loaded: Array<UnrealEngineClass>) -> Unit>

    companion object {
        fun Load(ResourceName: String): AsyncActionLoadPrimaryAssetClassList
        fun Find(Outer: UObject, ResourceName: String): AsyncActionLoadPrimaryAssetClassList
        fun GetDefaultObject(): AsyncActionLoadPrimaryAssetClassList
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AsyncActionLoadPrimaryAssetClassList
        fun AsyncLoadPrimaryAssetClassList(WorldContextObject: UObject, PrimaryAssetList: Array<PrimaryAssetId>, LoadBundles: Array<String>): AsyncActionLoadPrimaryAssetClassList
        fun C(Other: UObject): AsyncActionLoadPrimaryAssetClassList
        fun C(Other: Any): AsyncActionLoadPrimaryAssetClassList
    }
}

external open class AsyncActionChangePrimaryAssetBundles : AsyncActionLoadPrimaryAssetBase {
    constructor()
    constructor(Outer: UObject)
    open var Completed: UnrealEngineMulticastDelegate<() -> Unit>

    companion object {
        fun Load(ResourceName: String): AsyncActionChangePrimaryAssetBundles
        fun Find(Outer: UObject, ResourceName: String): AsyncActionChangePrimaryAssetBundles
        fun GetDefaultObject(): AsyncActionChangePrimaryAssetBundles
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AsyncActionChangePrimaryAssetBundles
        fun AsyncChangeBundleStateForPrimaryAssetList(WorldContextObject: UObject, PrimaryAssetList: Array<PrimaryAssetId>, AddBundles: Array<String>, RemoveBundles: Array<String>): AsyncActionChangePrimaryAssetBundles
        fun AsyncChangeBundleStateForMatchingPrimaryAssets(WorldContextObject: UObject, NewBundles: Array<String>, OldBundles: Array<String>): AsyncActionChangePrimaryAssetBundles
        fun C(Other: UObject): AsyncActionChangePrimaryAssetBundles
        fun C(Other: Any): AsyncActionChangePrimaryAssetBundles
    }
}

external object ESkyAtmosphereTransformMode {
    var PlanetTopAtAbsoluteWorldOrigin: String /* "PlanetTopAtAbsoluteWorldOrigin" */
    var PlanetTopAtComponentTransform: String /* "PlanetTopAtComponentTransform" */
    var PlanetCenterAtComponentTransform: String /* "PlanetCenterAtComponentTransform" */
    var ESkyAtmosphereTransformMode_MAX: String /* "ESkyAtmosphereTransformMode_MAX" */
}

external open class TentDistribution {
    open var TipAltitude: Number
    open var TipValue: Number
    open var Width: Number
    open fun clone(): TentDistribution

    companion object {
        fun C(Other: UObject): TentDistribution
        fun C(Other: Any): TentDistribution
    }
}

external open class LightmassDirectionalLightSettings : LightmassLightSettings {
    open var LightSourceAngle: Number
    override fun clone(): LightmassDirectionalLightSettings

    companion object {
        fun C(Other: UObject): LightmassDirectionalLightSettings
        fun C(Other: Any): LightmassDirectionalLightSettings
    }
}

external open class DirectionalLightComponent : LightComponent {
    constructor()
    constructor(Outer: UObject)
    open var ShadowCascadeBiasDistribution: Number
    open var bEnableLightShaftOcclusion: Boolean
    open var OcclusionMaskDarkness: Number
    open var OcclusionDepthRange: Number
    open var LightShaftOverrideDirection: Vector
    open var WholeSceneDynamicShadowRadius: Number
    open var DynamicShadowDistanceMovableLight: Number
    open var DynamicShadowDistanceStationaryLight: Number
    open var DynamicShadowCascades: Number
    open var CascadeDistributionExponent: Number
    open var CascadeTransitionFraction: Number
    open var ShadowDistanceFadeoutFraction: Number
    open var bUseInsetShadowsForMovableObjects: Boolean
    open var FarShadowCascadeCount: Number
    open var FarShadowDistance: Number
    open var DistanceFieldShadowDistance: Number
    open var LightSourceAngle: Number
    open var LightSourceSoftAngle: Number
    open var ShadowSourceAngleFactor: Number
    open var TraceDistance: Number
    open var bUsedAsAtmosphereSunLight: Boolean
    open var bAtmosphereSunLight: Boolean
    open var AtmosphereSunLightIndex: Number
    open var AtmosphereSunDiskColorScale: LinearColor
    open var bPerPixelAtmosphereTransmittance: Boolean
    open var bCastShadowsOnClouds: Boolean
    open var bCastShadowsOnAtmosphere: Boolean
    open var bCastCloudShadows: Boolean
    open var CloudShadowStrength: Number
    open var CloudShadowOnAtmosphereStrength: Number
    open var CloudShadowOnSurfaceStrength: Number
    open var CloudShadowDepthBias: Number
    open var CloudShadowExtent: Number
    open var CloudShadowMapResolutionScale: Number
    open var CloudShadowRaySampleCountScale: Number
    open var CloudScatteredLuminanceScale: LinearColor
    open var LightmassSettings: LightmassDirectionalLightSettings
    open var bCastModulatedShadows: Boolean
    open var ModulatedShadowColor: Color
    open var ShadowAmount: Number
    open fun SetShadowSourceAngleFactor(NewValue: Number)
    open fun SetShadowDistanceFadeoutFraction(NewValue: Number)
    open fun SetShadowCascadeBiasDistribution(NewValue: Number)
    open fun SetShadowAmount(NewValue: Number)
    open fun SetOcclusionMaskDarkness(NewValue: Number)
    open fun SetOcclusionDepthRange(NewValue: Number)
    open fun SetLightSourceSoftAngle(NewValue: Number)
    open fun SetLightSourceAngle(NewValue: Number)
    open fun SetLightShaftOverrideDirection(NewValue: Vector)
    open fun SetEnableLightShaftOcclusion(bNewValue: Boolean)
    open fun SetDynamicShadowDistanceStationaryLight(NewValue: Number)
    open fun SetDynamicShadowDistanceMovableLight(NewValue: Number)
    open fun SetDynamicShadowCascades(NewValue: Number)
    open fun SetCascadeTransitionFraction(NewValue: Number)
    open fun SetCascadeDistributionExponent(NewValue: Number)
    open fun SetAtmosphereSunLightIndex(NewValue: Number)
    open fun SetAtmosphereSunLight(bNewValue: Boolean)

    companion object {
        fun Load(ResourceName: String): DirectionalLightComponent
        fun Find(Outer: UObject, ResourceName: String): DirectionalLightComponent
        fun GetDefaultObject(): DirectionalLightComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DirectionalLightComponent
        fun C(Other: UObject): DirectionalLightComponent
        fun C(Other: Any): DirectionalLightComponent
    }
}

external open class SkyAtmosphereComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var TransformMode: String /* "PlanetTopAtAbsoluteWorldOrigin" | "PlanetTopAtComponentTransform" | "PlanetCenterAtComponentTransform" | "ESkyAtmosphereTransformMode_MAX" */
    open var BottomRadius: Number
    open var GroundAlbedo: Color
    open var AtmosphereHeight: Number
    open var MultiScatteringFactor: Number
    open var TraceSampleCountScale: Number
    open var RayleighScatteringScale: Number
    open var RayleighScattering: LinearColor
    open var RayleighExponentialDistribution: Number
    open var MieScatteringScale: Number
    open var MieScattering: LinearColor
    open var MieAbsorptionScale: Number
    open var MieAbsorption: LinearColor
    open var MieAnisotropy: Number
    open var MieExponentialDistribution: Number
    open var OtherAbsorptionScale: Number
    open var OtherAbsorption: LinearColor
    open var OtherTentDistribution: TentDistribution
    open var SkyLuminanceFactor: LinearColor
    open var AerialPespectiveViewDistanceScale: Number
    open var HeightFogContribution: Number
    open var TransmittanceMinLightElevationAngle: Number
    open var AerialPerspectiveStartDepth: Number
    open var bStaticLightingBuiltGUID: Guid
    open fun SetSkyLuminanceFactor(NewValue: LinearColor)
    open fun SetRayleighScatteringScale(NewValue: Number)
    open fun SetRayleighScattering(NewValue: LinearColor)
    open fun SetRayleighExponentialDistribution(NewValue: Number)
    open fun SetAbsorptionScale(NewValue: Number)
    open fun SetAbsorption(NewValue: LinearColor)
    open fun SetMultiScatteringFactor(NewValue: Number)
    open fun SetMieScatteringScale(NewValue: Number)
    open fun SetMieScattering(NewValue: LinearColor)
    open fun SetMieExponentialDistribution(NewValue: Number)
    open fun SetMieAnisotropy(NewValue: Number)
    open fun SetMieAbsorptionScale(NewValue: Number)
    open fun SetMieAbsorption(NewValue: LinearColor)
    open fun SetHeightFogContribution(NewValue: Number)
    open fun SetAtmosphereHeight(NewValue: Number)
    open fun SetAerialPespectiveViewDistanceScale(NewValue: Number)
    open fun OverrideAtmosphereLightDirection(AtmosphereLightIndex: Number, LightDirection: Vector)
    open fun GetAtmosphereTransmitanceOnGroundAtPlanetTop(DirectionalLight: DirectionalLightComponent): LinearColor

    companion object {
        fun Load(ResourceName: String): SkyAtmosphereComponent
        fun Find(Outer: UObject, ResourceName: String): SkyAtmosphereComponent
        fun GetDefaultObject(): SkyAtmosphereComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SkyAtmosphereComponent
        fun C(Other: UObject): SkyAtmosphereComponent
        fun C(Other: Any): SkyAtmosphereComponent
    }
}

external open class AtmosphericFogComponent : SkyAtmosphereComponent {
    constructor()
    constructor(Outer: UObject)
    open fun SetSunMultiplier(NewSunMultiplier: Number)
    open fun SetStartDistance(NewStartDistance: Number)
    open fun SetPrecomputeParams(DensityHeight: Number, MaxScatteringOrder: Number, InscatterAltitudeSampleNum: Number)
    open fun SetFogMultiplier(NewFogMultiplier: Number)
    open fun SetDistanceScale(NewDistanceScale: Number)
    open fun SetDistanceOffset(NewDistanceOffset: Number)
    open fun SetDensityOffset(NewDensityOffset: Number)
    open fun SetDensityMultiplier(NewDensityMultiplier: Number)
    open fun SetDefaultLightColor(NewLightColor: LinearColor)
    open fun SetDefaultBrightness(NewBrightness: Number)
    open fun SetAltitudeScale(NewAltitudeScale: Number)
    open fun DisableSunDisk(NewSunDisk: Boolean)
    open fun DisableGroundScattering(NewGroundScattering: Boolean)

    companion object {
        fun Load(ResourceName: String): AtmosphericFogComponent
        fun Find(Outer: UObject, ResourceName: String): AtmosphericFogComponent
        fun GetDefaultObject(): AtmosphericFogComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AtmosphericFogComponent
        fun C(Other: UObject): AtmosphericFogComponent
        fun C(Other: Any): AtmosphericFogComponent
    }
}

external open class AtmosphericFog(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Info {
    open var AtmosphericFogComponent: AtmosphericFogComponent
    open var ArrowComponent: ArrowComponent

    companion object {
        fun GetDefaultObject(): AtmosphericFog
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AtmosphericFog
        fun C(Other: UObject): AtmosphericFog
        fun C(Other: Any): AtmosphericFog
    }
}

external open class AnimationAttributeIdentifierExtensions : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimationAttributeIdentifierExtensions
        fun Find(Outer: UObject, ResourceName: String): AnimationAttributeIdentifierExtensions
        fun GetDefaultObject(): AnimationAttributeIdentifierExtensions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationAttributeIdentifierExtensions
        fun IsValid(Identifier: AnimationAttributeIdentifier = definedExternally): `T$80`
        fun CreateAttributeIdentifier(AnimationAsset: AnimationAsset, AttributeName: String, BoneName: String, AttributeType: ScriptStruct, bValidateExistsOnAsset: Boolean): AnimationAttributeIdentifier
        fun C(Other: UObject): AnimationAttributeIdentifierExtensions
        fun C(Other: Any): AnimationAttributeIdentifierExtensions
    }
}

external open class AudioSubsystemCollectionRoot : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AudioSubsystemCollectionRoot
        fun Find(Outer: UObject, ResourceName: String): AudioSubsystemCollectionRoot
        fun GetDefaultObject(): AudioSubsystemCollectionRoot
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AudioSubsystemCollectionRoot
        fun C(Other: UObject): AudioSubsystemCollectionRoot
        fun C(Other: Any): AudioSubsystemCollectionRoot
    }
}

external open class AudioPanelWidgetInterface : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun GetIconBrushName(): String
    open fun GetEditorName(): String

    companion object {
        fun Load(ResourceName: String): AudioPanelWidgetInterface
        fun Find(Outer: UObject, ResourceName: String): AudioPanelWidgetInterface
        fun GetDefaultObject(): AudioPanelWidgetInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AudioPanelWidgetInterface
        fun C(Other: UObject): AudioPanelWidgetInterface
        fun C(Other: Any): AudioPanelWidgetInterface
    }
}

external object EVoiceSampleRate {
    var Low16000Hz: String /* "Low16000Hz" */
    var Normal24000Hz: String /* "Normal24000Hz" */
    var EVoiceSampleRate_MAX: String /* "EVoiceSampleRate_MAX" */
}

external open class AudioQualitySettings {
    open var DisplayName: String
    open var MaxChannels: Number
    open fun clone(): AudioQualitySettings

    companion object {
        fun C(Other: UObject): AudioQualitySettings
        fun C(Other: Any): AudioQualitySettings
    }
}

external object EPanningMethod {
    var Linear: String /* "Linear" */
    var EqualPower: String /* "EqualPower" */
    var EPanningMethod_MAX: String /* "EPanningMethod_MAX" */
}

external object EMonoChannelUpmixMethod {
    var Linear: String /* "Linear" */
    var EqualPower: String /* "EqualPower" */
    var FullVolume: String /* "FullVolume" */
    var EMonoChannelUpmixMethod_MAX: String /* "EMonoChannelUpmixMethod_MAX" */
}

external open class SoundDebugEntry {
    open var DebugName: String
    open var Sound: SoftObjectPath
    open fun clone(): SoundDebugEntry

    companion object {
        fun C(Other: UObject): SoundDebugEntry
        fun C(Other: Any): SoundDebugEntry
    }
}

external open class DefaultAudioBusSettings {
    open var AudioBus: SoftObjectPath
    open fun clone(): DefaultAudioBusSettings

    companion object {
        fun C(Other: UObject): DefaultAudioBusSettings
        fun C(Other: Any): DefaultAudioBusSettings
    }
}

external open class AudioSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var DefaultSoundClassName: SoftObjectPath
    open var DefaultMediaSoundClassName: SoftObjectPath
    open var DefaultSoundConcurrencyName: SoftObjectPath
    open var DefaultBaseSoundMix: SoftObjectPath
    open var VoiPSoundClass: SoftObjectPath
    open var MasterSubmix: SoftObjectPath
    open var BaseDefaultSubmix: SoftObjectPath
    open var ReverbSubmix: SoftObjectPath
    open var EQSubmix: SoftObjectPath
    open var VoiPSampleRate: String /* "Low16000Hz" | "Normal24000Hz" | "EVoiceSampleRate_MAX" */
    open var DefaultReverbSendLevel: Number
    open var MaximumConcurrentStreams: Number
    open var GlobalMinPitchScale: Number
    open var GlobalMaxPitchScale: Number
    open var QualityLevels: Array<AudioQualitySettings>
    open var bAllowPlayWhenSilent: Boolean
    open var bDisableMasterEQ: Boolean
    open var bAllowCenterChannel3DPanning: Boolean
    open var NumStoppingSources: Any
    open var PanningMethod: String /* "Linear" | "EqualPower" | "EPanningMethod_MAX" */
    open var MonoChannelUpmixMethod: String /* "Linear" | "EqualPower" | "FullVolume" | "EMonoChannelUpmixMethod_MAX" */
    open var DialogueFilenameFormat: String
    open var DebugSounds: Array<SoundDebugEntry>
    open var DefaultAudioBuses: Array<DefaultAudioBusSettings>
    open var DefaultSoundClass: SoundClass
    open var DefaultMediaSoundClass: SoundClass
    open var DefaultSoundConcurrency: SoundConcurrency

    companion object {
        fun Load(ResourceName: String): AudioSettings
        fun Find(Outer: UObject, ResourceName: String): AudioSettings
        fun GetDefaultObject(): AudioSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AudioSettings
        fun C(Other: UObject): AudioSettings
        fun C(Other: Any): AudioSettings
    }
}

external object EAudioVolumeLocationState {
    var InsideTheVolume: String /* "InsideTheVolume" */
    var OutsideTheVolume: String /* "OutsideTheVolume" */
    var EAudioVolumeLocationState_MAX: String /* "EAudioVolumeLocationState_MAX" */
}

external open class AudioVolumeSubmixSendSettings {
    open var ListenerLocationState: String /* "InsideTheVolume" | "OutsideTheVolume" | "EAudioVolumeLocationState_MAX" */
    open var SourceLocationState: String /* "InsideTheVolume" | "OutsideTheVolume" | "EAudioVolumeLocationState_MAX" */
    open var SubmixSends: Array<SoundSubmixSendInfo>
    open fun clone(): AudioVolumeSubmixSendSettings

    companion object {
        fun C(Other: UObject): AudioVolumeSubmixSendSettings
        fun C(Other: Any): AudioVolumeSubmixSendSettings
    }
}

external open class AudioVolumeSubmixOverrideSettings {
    open var Submix: SoundSubmix
    open var SubmixEffectChain: Array<SoundEffectSubmixPreset>
    open var CrossfadeTime: Number
    open fun clone(): AudioVolumeSubmixOverrideSettings

    companion object {
        fun C(Other: UObject): AudioVolumeSubmixOverrideSettings
        fun C(Other: Any): AudioVolumeSubmixOverrideSettings
    }
}

external open class AudioVolume(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Volume {
    open var Priority: Number
    open var bEnabled: Boolean
    open var Settings: ReverbSettings
    open var AmbientZoneSettings: InteriorSettings
    open var SubmixSendSettings: Array<AudioVolumeSubmixSendSettings>
    open var SubmixOverrideSettings: Array<AudioVolumeSubmixOverrideSettings>
    open fun SetSubmixSendSettings(NewSubmixSendSettings: Array<AudioVolumeSubmixSendSettings>)
    open fun SetSubmixOverrideSettings(NewSubmixOverrideSettings: Array<AudioVolumeSubmixOverrideSettings>)
    open fun SetReverbSettings(NewReverbSettings: ReverbSettings)
    open fun SetPriority(NewPriority: Number)
    open fun SetInteriorSettings(NewInteriorSettings: InteriorSettings)
    open fun SetEnabled(bNewEnabled: Boolean)
    open fun OnRep_bEnabled()

    companion object {
        fun GetDefaultObject(): AudioVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AudioVolume
        fun C(Other: UObject): AudioVolume
        fun C(Other: Any): AudioVolume
    }
}

external open class AudioWidgetSubsystem : EngineSubsystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AudioWidgetSubsystem
        fun Find(Outer: UObject, ResourceName: String): AudioWidgetSubsystem
        fun GetDefaultObject(): AudioWidgetSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AudioWidgetSubsystem
        fun C(Other: UObject): AudioWidgetSubsystem
        fun C(Other: Any): AudioWidgetSubsystem
    }
}

external open class AutoDestroySubsystem : TickableWorldSubsystem {
    constructor()
    constructor(Outer: UObject)
    open var ActorsToPoll: Array<Actor>
    open fun OnActorEndPlay(Actor: Actor, EndPlayReason: String /* "Destroyed" | "LevelTransition" | "EndPlayInEditor" | "RemovedFromWorld" | "Quit" | "EEndPlayReason_MAX" */)

    companion object {
        fun Load(ResourceName: String): AutoDestroySubsystem
        fun Find(Outer: UObject, ResourceName: String): AutoDestroySubsystem
        fun GetDefaultObject(): AutoDestroySubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AutoDestroySubsystem
        fun C(Other: UObject): AutoDestroySubsystem
        fun C(Other: Any): AutoDestroySubsystem
    }
}

external open class EditorMapPerformanceTestDefinition {
    open var PerformanceTestmap: SoftObjectPath
    open var TestTimer: Number
    open fun clone(): EditorMapPerformanceTestDefinition

    companion object {
        fun C(Other: UObject): EditorMapPerformanceTestDefinition
        fun C(Other: Any): EditorMapPerformanceTestDefinition
    }
}

external open class ImportFactorySettingValues {
    open var SettingName: String
    open var Value: String
    open fun clone(): ImportFactorySettingValues

    companion object {
        fun C(Other: UObject): ImportFactorySettingValues
        fun C(Other: Any): ImportFactorySettingValues
    }
}

external open class EditorImportWorkflowDefinition {
    open var ImportFilePath: FilePath
    open var FactorySettings: Array<ImportFactorySettingValues>
    open fun clone(): EditorImportWorkflowDefinition

    companion object {
        fun C(Other: UObject): EditorImportWorkflowDefinition
        fun C(Other: Any): EditorImportWorkflowDefinition
    }
}

external open class BuildPromotionImportWorkflowSettings {
    open var Diffuse: EditorImportWorkflowDefinition
    open var Normal: EditorImportWorkflowDefinition
    open var StaticMesh: EditorImportWorkflowDefinition
    open var ReimportStaticMesh: EditorImportWorkflowDefinition
    open var BlendShapeMesh: EditorImportWorkflowDefinition
    open var MorphMesh: EditorImportWorkflowDefinition
    open var SkeletalMesh: EditorImportWorkflowDefinition
    open var Animation: EditorImportWorkflowDefinition
    open var Sound: EditorImportWorkflowDefinition
    open var SurroundSound: EditorImportWorkflowDefinition
    open var OtherAssetsToImport: Array<EditorImportWorkflowDefinition>
    open fun clone(): BuildPromotionImportWorkflowSettings

    companion object {
        fun C(Other: UObject): BuildPromotionImportWorkflowSettings
        fun C(Other: Any): BuildPromotionImportWorkflowSettings
    }
}

external open class BuildPromotionOpenAssetSettings {
    open var BlueprintAsset: FilePath
    open var MaterialAsset: FilePath
    open var ParticleSystemAsset: FilePath
    open var SkeletalMeshAsset: FilePath
    open var StaticMeshAsset: FilePath
    open var TextureAsset: FilePath
    open fun clone(): BuildPromotionOpenAssetSettings

    companion object {
        fun C(Other: UObject): BuildPromotionOpenAssetSettings
        fun C(Other: Any): BuildPromotionOpenAssetSettings
    }
}

external open class BuildPromotionNewProjectSettings {
    open var NewProjectFolderOverride: DirectoryPath
    open var NewProjectNameOverride: String
    open fun clone(): BuildPromotionNewProjectSettings

    companion object {
        fun C(Other: UObject): BuildPromotionNewProjectSettings
        fun C(Other: Any): BuildPromotionNewProjectSettings
    }
}

external open class BuildPromotionTestSettings {
    open var DefaultStaticMeshAsset: FilePath
    open var ImportWorkflow: BuildPromotionImportWorkflowSettings
    open var OpenAssets: BuildPromotionOpenAssetSettings
    open var NewProjectSettings: BuildPromotionNewProjectSettings
    open var SourceControlMaterial: FilePath
    open fun clone(): BuildPromotionTestSettings

    companion object {
        fun C(Other: UObject): BuildPromotionTestSettings
        fun C(Other: Any): BuildPromotionTestSettings
    }
}

external open class MaterialEditorPromotionSettings {
    open var DefaultMaterialAsset: FilePath
    open var DefaultDiffuseTexture: FilePath
    open var DefaultNormalTexture: FilePath
    open fun clone(): MaterialEditorPromotionSettings

    companion object {
        fun C(Other: UObject): MaterialEditorPromotionSettings
        fun C(Other: Any): MaterialEditorPromotionSettings
    }
}

external open class ParticleEditorPromotionSettings {
    open var DefaultParticleAsset: FilePath
    open fun clone(): ParticleEditorPromotionSettings

    companion object {
        fun C(Other: UObject): ParticleEditorPromotionSettings
        fun C(Other: Any): ParticleEditorPromotionSettings
    }
}

external open class BlueprintEditorPromotionSettings {
    open var FirstMeshPath: FilePath
    open var SecondMeshPath: FilePath
    open var DefaultParticleAsset: FilePath
    open fun clone(): BlueprintEditorPromotionSettings

    companion object {
        fun C(Other: UObject): BlueprintEditorPromotionSettings
        fun C(Other: Any): BlueprintEditorPromotionSettings
    }
}

external open class ExternalToolDefinition {
    open var ToolName: String
    open var ExecutablePath: FilePath
    open var CommandLineOptions: String
    open var WorkingDirectory: DirectoryPath
    open var ScriptExtension: String
    open var ScriptDirectory: DirectoryPath
    open fun clone(): ExternalToolDefinition

    companion object {
        fun C(Other: UObject): ExternalToolDefinition
        fun C(Other: Any): ExternalToolDefinition
    }
}

external open class EditorImportExportTestDefinition {
    open var ImportFilePath: FilePath
    open var ExportFileExtension: String
    open var bSkipExport: Boolean
    open var FactorySettings: Array<ImportFactorySettingValues>
    open fun clone(): EditorImportExportTestDefinition

    companion object {
        fun C(Other: UObject): EditorImportExportTestDefinition
        fun C(Other: Any): EditorImportExportTestDefinition
    }
}

external open class LaunchOnTestSettings {
    open var LaunchOnTestmap: FilePath
    open var DeviceID: String
    open fun clone(): LaunchOnTestSettings

    companion object {
        fun C(Other: UObject): LaunchOnTestSettings
        fun C(Other: Any): LaunchOnTestSettings
    }
}

external open class AutomationTestSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var EngineTestModules: Array<String>
    open var EditorTestModules: Array<String>
    open var AutomationTestmap: SoftObjectPath
    open var EditorPerformanceTestMaps: Array<EditorMapPerformanceTestDefinition>
    open var AssetsToOpen: Array<String>
    open var MapsToPIETest: Array<String>
    open var bUseAllProjectMapsToPlayInPIE: Boolean
    open var BuildPromotionTest: BuildPromotionTestSettings
    open var MaterialEditorPromotionTest: MaterialEditorPromotionSettings
    open var ParticleEditorPromotionTest: ParticleEditorPromotionSettings
    open var BlueprintEditorPromotionTest: BlueprintEditorPromotionSettings
    open var TestLevelFolders: Array<String>
    open var ExternalTools: Array<ExternalToolDefinition>
    open var ImportExportTestDefinitions: Array<EditorImportExportTestDefinition>
    open var LaunchOnSettings: Array<LaunchOnTestSettings>
    open var DefaultScreenshotResolution: IntPoint
    open var PIETestDuration: Number

    companion object {
        fun Load(ResourceName: String): AutomationTestSettings
        fun Find(Outer: UObject, ResourceName: String): AutomationTestSettings
        fun GetDefaultObject(): AutomationTestSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AutomationTestSettings
        fun C(Other: UObject): AutomationTestSettings
        fun C(Other: Any): AutomationTestSettings
    }
}

external open class BandwidthTestItem {
    open var Kilobyte: Array<Number>
    open fun clone(): BandwidthTestItem

    companion object {
        fun C(Other: UObject): BandwidthTestItem
        fun C(Other: Any): BandwidthTestItem
    }
}

external open class BandwidthTestGenerator {
    open var ReplicatedBuffers: Array<BandwidthTestItem>
    open fun clone(): BandwidthTestGenerator

    companion object {
        fun C(Other: UObject): BandwidthTestGenerator
        fun C(Other: Any): BandwidthTestGenerator
    }
}

external open class BandwidthTestActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var BandwidthGenerator: BandwidthTestGenerator

    companion object {
        fun GetDefaultObject(): BandwidthTestActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BandwidthTestActor
        fun C(Other: UObject): BandwidthTestActor
        fun C(Other: Any): BandwidthTestActor
    }
}

external open class BlendableInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlendableInterface
        fun Find(Outer: UObject, ResourceName: String): BlendableInterface
        fun GetDefaultObject(): BlendableInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlendableInterface
        fun C(Other: UObject): BlendableInterface
        fun C(Other: Any): BlendableInterface
    }
}

external open class BlockingVolume(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Volume {
    companion object {
        fun GetDefaultObject(): BlockingVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlockingVolume
        fun C(Other: UObject): BlockingVolume
        fun C(Other: Any): BlockingVolume
    }
}

external interface `T$672` {
    var Values: Array<Number>
}

external interface `T$673` {
    var Keys: Array<Number>
}

external interface `T$674` {
    var Value: Number
    var `$`: Boolean
}

external open class BlueprintMapLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlueprintMapLibrary
        fun Find(Outer: UObject, ResourceName: String): BlueprintMapLibrary
        fun GetDefaultObject(): BlueprintMapLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintMapLibrary
        fun SetMapPropertyByName(UObject: UObject, PropertyName: String, Value: Any)
        fun Values(TargetMap: Any, Values: Array<Number> = definedExternally): `T$672`
        fun Remove(TargetMap: Any, Key: Number): Boolean
        fun Length(TargetMap: Any): Number
        fun Keys(TargetMap: Any, Keys: Array<Number> = definedExternally): `T$673`
        fun IsNotEmpty(TargetMap: Any): Boolean
        fun IsEmpty(TargetMap: Any): Boolean
        fun Find(TargetMap: Any, Key: Number, Value: Number = definedExternally): `T$674`
        fun Contains(TargetMap: Any, Key: Number): Boolean
        fun Clear(TargetMap: Any)
        fun Add(TargetMap: Any, Key: Number, Value: Number)
        fun C(Other: UObject): BlueprintMapLibrary
        fun C(Other: Any): BlueprintMapLibrary
    }
}

external interface `T$675` {
    var bDidSucceed: Boolean
    var OutReason: String
}

external interface `T$676` {
    var PathPart: String
    var FilenamePart: String
    var ExtensionPart: String
}

external interface `T$677` {
    var OutPath: String
}

external open class BlueprintPathsLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlueprintPathsLibrary
        fun Find(Outer: UObject, ResourceName: String): BlueprintPathsLibrary
        fun GetDefaultObject(): BlueprintPathsLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintPathsLibrary
        fun VideoCaptureDir(): String
        fun ValidatePath(InPath: String, bDidSucceed: Boolean = definedExternally, OutReason: String = definedExternally): `T$675`
        fun Split(InPath: String, PathPart: String = definedExternally, FilenamePart: String = definedExternally, ExtensionPart: String = definedExternally): `T$676`
        fun SourceConfigDir(): String
        fun ShouldSaveToUserDir(): Boolean
        fun ShaderWorkingDir(): String
        fun SetProjectFilePath(NewGameProjectFilePath: String)
        fun SetExtension(InPath: String, InNewExtension: String): String
        fun ScreenShotDir(): String
        fun SandboxesDir(): String
        fun RootDir(): String
        fun RemoveDuplicateSlashes(InPath: String, OutPath: String = definedExternally): `T$677`
        fun ProjectUserDir(): String
        fun ProjectSavedDir(): String
        fun ProjectPluginsDir(): String
        fun ProjectPersistentDownloadDir(): String
        fun ProjectModsDir(): String
        fun ProjectLogDir(): String
        fun ProjectIntermediateDir(): String
        fun ProjectDir(): String
        fun ProjectContentDir(): String
        fun ProjectConfigDir(): String
        fun ProfilingDir(): String
        fun NormalizeFilename(InPath: String, OutPath: String = definedExternally): `T$677`
        fun NormalizeDirectoryName(InPath: String, OutPath: String = definedExternally): `T$677`
        fun MakeValidFileName(InString: String, InReplacementChar: String): String
        fun MakeStandardFilename(InPath: String, OutPath: String = definedExternally): `T$677`
        fun MakePlatformFilename(InPath: String, OutPath: String = definedExternally): `T$677`
        fun MakePathRelativeTo(InPath: String, InRelativeTo: String, OutPath: String = definedExternally): `T$431`
        fun LaunchDir(): String
        fun IsSamePath(PathA: String, PathB: String): Boolean
        fun IsRestrictedPath(InPath: String): Boolean
        fun IsRelative(InPath: String): Boolean
        fun IsProjectFilePathSet(): Boolean
        fun IsDrive(InPath: String): Boolean
        fun HasProjectPersistentDownloadDir(): Boolean
        fun GetToolTipLocalizationPaths(): Array<String>
        fun GetRestrictedFolderNames(): Array<String>
        fun GetRelativePathToRoot(): String
        fun GetPropertyNameLocalizationPaths(): Array<String>
        fun GetProjectFilePath(): String
        fun GetPath(InPath: String): String
        fun GetInvalidFileSystemChars(): String
        fun GetGameLocalizationPaths(): Array<String>
        fun GetExtension(InPath: String, bIncludeDot: Boolean): String
        fun GetEngineLocalizationPaths(): Array<String>
        fun GetEditorLocalizationPaths(): Array<String>
        fun GetCleanFilename(InPath: String): String
        fun GetBaseFilename(InPath: String, bRemovePath: Boolean): String
        fun GeneratedConfigDir(): String
        fun GameUserDeveloperDir(): String
        fun GameSourceDir(): String
        fun GameDevelopersDir(): String
        fun GameAgnosticSavedDir(): String
        fun FileExists(InPath: String): Boolean
        fun FeaturePackDir(): String
        fun EnterprisePluginsDir(): String
        fun EnterpriseFeaturePackDir(): String
        fun EnterpriseDir(): String
        fun EngineVersionAgnosticUserDir(): String
        fun EngineUserDir(): String
        fun EngineSourceDir(): String
        fun EngineSavedDir(): String
        fun EnginePluginsDir(): String
        fun EngineIntermediateDir(): String
        fun EngineDir(): String
        fun EngineContentDir(): String
        fun EngineConfigDir(): String
        fun DirectoryExists(InPath: String): Boolean
        fun DiffDir(): String
        fun CreateTempFilename(Path: String, Prefix: String, Extension: String): String
        fun ConvertToSandboxPath(InPath: String, InSandboxName: String): String
        fun ConvertRelativePathToFull(InPath: String, InBasePath: String): String
        fun ConvertFromSandboxPath(InPath: String, InSandboxName: String): String
        fun Combine(InPaths: Array<String>): String
        fun CollapseRelativeDirectories(InPath: String, OutPath: String = definedExternally): `T$431`
        fun CloudDir(): String
        fun ChangeExtension(InPath: String, InNewExtension: String): String
        fun BugItDir(): String
        fun AutomationTransientDir(): String
        fun AutomationLogDir(): String
        fun AutomationDir(): String
        fun C(Other: UObject): BlueprintPathsLibrary
        fun C(Other: Any): BlueprintPathsLibrary
    }
}

external object EApplicationState {
    var Unknown: String /* "Unknown" */
    var Inactive: String /* "Inactive" */
    var Background: String /* "Background" */
    var Active: String /* "Active" */
    var EApplicationState_MAX: String /* "EApplicationState_MAX" */
}

external object EScreenOrientation {
    var Unknown: String /* "Unknown" */
    var Portrait: String /* "Portrait" */
    var PortraitUpsideDown: String /* "PortraitUpsideDown" */
    var LandscapeLeft: String /* "LandscapeLeft" */
    var LandscapeRight: String /* "LandscapeRight" */
    var FaceUp: String /* "FaceUp" */
    var FaceDown: String /* "FaceDown" */
    var EScreenOrientation_MAX: String /* "EScreenOrientation_MAX" */
}

external open class PlatformGameInstance : GameInstance {
    constructor()
    constructor(Outer: UObject)
    open var ApplicationWillDeactivateDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var ApplicationHasReactivatedDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var ApplicationWillEnterBackgroundDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var ApplicationHasEnteredForegroundDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var ApplicationWillTerminateDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var ApplicationShouldUnloadResourcesDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var ApplicationReceivedStartupArgumentsDelegate: UnrealEngineMulticastDelegate<(StartupArguments: Array<String>) -> Unit>
    open var ApplicationRegisteredForRemoteNotificationsDelegate: UnrealEngineMulticastDelegate<(inArray: Array<Number>) -> Unit>
    open var ApplicationRegisteredForUserNotificationsDelegate: UnrealEngineMulticastDelegate<(inInt: Number) -> Unit>
    open var ApplicationFailedToRegisterForRemoteNotificationsDelegate: UnrealEngineMulticastDelegate<(InString: String) -> Unit>
    open var ApplicationReceivedRemoteNotificationDelegate: UnrealEngineMulticastDelegate<(InString: String, inAppState: String /* "Unknown" | "Inactive" | "Background" | "Active" | "EApplicationState_MAX" */) -> Unit>
    open var ApplicationReceivedLocalNotificationDelegate: UnrealEngineMulticastDelegate<(InString: String, inInt: Number, inAppState: String /* "Unknown" | "Inactive" | "Background" | "Active" | "EApplicationState_MAX" */) -> Unit>
    open var ApplicationReceivedScreenOrientationChangedNotificationDelegate: UnrealEngineMulticastDelegate<(inScreenOrientation: String /* "Unknown" | "Portrait" | "PortraitUpsideDown" | "LandscapeLeft" | "LandscapeRight" | "FaceUp" | "FaceDown" | "EScreenOrientation_MAX" */) -> Unit>

    companion object {
        fun Load(ResourceName: String): PlatformGameInstance
        fun Find(Outer: UObject, ResourceName: String): PlatformGameInstance
        fun GetDefaultObject(): PlatformGameInstance
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PlatformGameInstance
        fun C(Other: UObject): PlatformGameInstance
        fun C(Other: Any): PlatformGameInstance
    }
}

external interface `T$678` {
    var NotificationLaunchedApp: Boolean
    var ActivationEvent: String
    var FireDate: Number
}

external open class BlueprintPlatformLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlueprintPlatformLibrary
        fun Find(Outer: UObject, ResourceName: String): BlueprintPlatformLibrary
        fun GetDefaultObject(): BlueprintPlatformLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintPlatformLibrary
        fun ScheduleLocalNotificationFromNow(inSecondsFromNow: Number, Title: String, Body: String, Action: String, ActivationEvent: String): Number
        fun ScheduleLocalNotificationBadgeFromNow(inSecondsFromNow: Number, ActivationEvent: String)
        fun ScheduleLocalNotificationBadgeAtTime(FireDateTime: DateTime, LocalTime: Boolean, ActivationEvent: String): Number
        fun ScheduleLocalNotificationAtTime(FireDateTime: DateTime, LocalTime: Boolean, Title: String, Body: String, Action: String, ActivationEvent: String): Number
        fun GetLaunchNotification(NotificationLaunchedApp: Boolean = definedExternally, ActivationEvent: String = definedExternally, FireDate: Number = definedExternally): `T$678`
        fun GetDeviceOrientation(): String /* "Unknown" | "Portrait" | "PortraitUpsideDown" | "LandscapeLeft" | "LandscapeRight" | "FaceUp" | "FaceDown" | "EScreenOrientation_MAX" */
        fun ClearAllLocalNotifications()
        fun CancelLocalNotificationById(NotificationId: Number)
        fun CancelLocalNotification(ActivationEvent: String)
        fun C(Other: UObject): BlueprintPlatformLibrary
        fun C(Other: Any): BlueprintPlatformLibrary
    }
}

external interface `T$679` {
    var Result: Any
}

external interface `T$680` {
    var Result: Array<Number>
}

external open class BlueprintSetLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlueprintSetLibrary
        fun Find(Outer: UObject, ResourceName: String): BlueprintSetLibrary
        fun GetDefaultObject(): BlueprintSetLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintSetLibrary
        fun SetSetPropertyByName(UObject: UObject, PropertyName: String, Value: Any)
        fun Union(A: Any, B: Any, Result: Any = definedExternally): `T$679`
        fun ToArray(A: Any, Result: Array<Number> = definedExternally): `T$680`
        fun RemoveItems(TargetSet: Any, Items: Array<Number>)
        fun Remove(TargetSet: Any, Item: Number): Boolean
        fun Length(TargetSet: Any): Number
        fun IsNotEmpty(TargetSet: Any): Boolean
        fun IsEmpty(TargetSet: Any): Boolean
        fun Intersection(A: Any, B: Any, Result: Any = definedExternally): `T$679`
        fun Difference(A: Any, B: Any, Result: Any = definedExternally): `T$679`
        fun ContainsItem(TargetSet: Any, ItemToFind: Number): Boolean
        fun Clear(TargetSet: Any)
        fun AddItems(TargetSet: Any, NewItems: Array<Number>)
        fun Add(TargetSet: Any, NewItem: Number)
        fun C(Other: UObject): BlueprintSetLibrary
        fun C(Other: Any): BlueprintSetLibrary
    }
}

external open class BoneMaskFilter : UObject {
    constructor()
    constructor(Outer: UObject)
    open var BlendPoses: Array<InputBlendPose>

    companion object {
        fun Load(ResourceName: String): BoneMaskFilter
        fun Find(Outer: UObject, ResourceName: String): BoneMaskFilter
        fun GetDefaultObject(): BoneMaskFilter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BoneMaskFilter
        fun C(Other: UObject): BoneMaskFilter
        fun C(Other: Any): BoneMaskFilter
    }
}

external open class BookMark2D : BookmarkBase {
    constructor()
    constructor(Outer: UObject)
    open var Zoom2D: Number
    open var Location: IntPoint

    companion object {
        fun Load(ResourceName: String): BookMark2D
        fun Find(Outer: UObject, ResourceName: String): BookMark2D
        fun GetDefaultObject(): BookMark2D
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BookMark2D
        fun C(Other: UObject): BookMark2D
        fun C(Other: Any): BookMark2D
    }
}

external open class BoundsCopyComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var BoundsSourceActor: Actor
    open var bUseCollidingComponentsForSourceBounds: Boolean
    open var bKeepOwnBoundsScale: Boolean
    open var bUseCollidingComponentsForOwnBounds: Boolean
    open var PostTransform: Transform
    open var bCopyXBounds: Boolean
    open var bCopyYBounds: Boolean
    open var bCopyZBounds: Boolean
    open fun CopyBounds()
    open fun CopyRotation()

    companion object {
        fun Load(ResourceName: String): BoundsCopyComponent
        fun Find(Outer: UObject, ResourceName: String): BoundsCopyComponent
        fun GetDefaultObject(): BoundsCopyComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BoundsCopyComponent
        fun C(Other: UObject): BoundsCopyComponent
        fun C(Other: Any): BoundsCopyComponent
    }
}

external open class BoxComponent : ShapeComponent {
    constructor()
    constructor(Outer: UObject)
    open var BoxExtent: Vector
    open var LineThickness: Number
    open fun SetBoxExtent(InBoxExtent: Vector, bUpdateOverlaps: Boolean)
    open fun GetUnscaledBoxExtent(): Vector
    open fun GetScaledBoxExtent(): Vector

    companion object {
        fun Load(ResourceName: String): BoxComponent
        fun Find(Outer: UObject, ResourceName: String): BoxComponent
        fun GetDefaultObject(): BoxComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BoxComponent
        fun C(Other: UObject): BoxComponent
        fun C(Other: Any): BoxComponent
    }
}

external object EReflectionSourceType {
    var CapturedScene: String /* "CapturedScene" */
    var SpecifiedCubemap: String /* "SpecifiedCubemap" */
    var EReflectionSourceType_MAX: String /* "EReflectionSourceType_MAX" */
}

external object EMobileReflectionCompression {
    var Default: String /* "Default" */
    var On: String /* "On" */
    var Off: String /* "Off" */
    var EMobileReflectionCompression_MAX: String /* "EMobileReflectionCompression_MAX" */
}

external open class ReflectionCaptureComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var CaptureOffsetComponent: BillboardComponent
    open var ReflectionSourceType: String /* "CapturedScene" | "SpecifiedCubemap" | "EReflectionSourceType_MAX" */
    open var MobileReflectionCompression: String /* "Default" | "On" | "Off" | "EMobileReflectionCompression_MAX" */
    open var Cubemap: TextureCube
    open var SourceCubemapAngle: Number
    open var Brightness: Number
    open var bModifyMaxValueRGBM: Boolean
    open var MaxValueRGBM: Number
    open var CaptureOffset: Vector
    open var MapBuildDataId: Guid
    open var CachedEncodedHDRCubemap: TextureCube

    companion object {
        fun Load(ResourceName: String): ReflectionCaptureComponent
        fun Find(Outer: UObject, ResourceName: String): ReflectionCaptureComponent
        fun GetDefaultObject(): ReflectionCaptureComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ReflectionCaptureComponent
        fun C(Other: UObject): ReflectionCaptureComponent
        fun C(Other: Any): ReflectionCaptureComponent
    }
}

external open class ReflectionCapture(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var CaptureComponent: ReflectionCaptureComponent
    open var SpriteComponent: BillboardComponent
    open var CaptureOffsetComponent: BillboardComponent

    companion object {
        fun GetDefaultObject(): ReflectionCapture
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ReflectionCapture
        fun C(Other: UObject): ReflectionCapture
        fun C(Other: Any): ReflectionCapture
    }
}

external open class BoxReflectionCapture(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : ReflectionCapture {
    companion object {
        fun GetDefaultObject(): BoxReflectionCapture
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BoxReflectionCapture
        fun C(Other: UObject): BoxReflectionCapture
        fun C(Other: Any): BoxReflectionCapture
    }
}

external open class BoxReflectionCaptureComponent : ReflectionCaptureComponent {
    constructor()
    constructor(Outer: UObject)
    open var BoxTransitionDistance: Number
    open var PreviewInfluenceBox: BoxComponent
    open var PreviewCaptureBox: BoxComponent

    companion object {
        fun Load(ResourceName: String): BoxReflectionCaptureComponent
        fun Find(Outer: UObject, ResourceName: String): BoxReflectionCaptureComponent
        fun GetDefaultObject(): BoxReflectionCaptureComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BoxReflectionCaptureComponent
        fun C(Other: UObject): BoxReflectionCaptureComponent
        fun C(Other: Any): BoxReflectionCaptureComponent
    }
}

external open class BrushShape(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Brush {
    companion object {
        fun GetDefaultObject(): BrushShape
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BrushShape
        fun C(Other: UObject): BrushShape
        fun C(Other: Any): BrushShape
    }
}

external open class BuiltInAttributesExtensions : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BuiltInAttributesExtensions
        fun Find(Outer: UObject, ResourceName: String): BuiltInAttributesExtensions
        fun GetDefaultObject(): BuiltInAttributesExtensions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BuiltInAttributesExtensions
        fun AddTransformAttribute(AnimSequenceBase: AnimSequenceBase, AttributeName: String, BoneName: String, Keys: Array<Number>, Values: Array<Transform>): Boolean
        fun C(Other: UObject): BuiltInAttributesExtensions
        fun C(Other: Any): BuiltInAttributesExtensions
    }
}

external open class ButtonStyleAsset : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ButtonStyle: ButtonStyle

    companion object {
        fun Load(ResourceName: String): ButtonStyleAsset
        fun Find(Outer: UObject, ResourceName: String): ButtonStyleAsset
        fun GetDefaultObject(): ButtonStyleAsset
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ButtonStyleAsset
        fun C(Other: UObject): ButtonStyleAsset
        fun C(Other: Any): ButtonStyleAsset
    }
}

external open class CachedAnimDataLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CachedAnimDataLibrary
        fun Find(Outer: UObject, ResourceName: String): CachedAnimDataLibrary
        fun GetDefaultObject(): CachedAnimDataLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CachedAnimDataLibrary
        fun StateMachine_IsStateRelevant(InAnimInstance: AnimInstance, CachedAnimStateData: CachedAnimStateData): Boolean
        fun StateMachine_GetLocalWeight(InAnimInstance: AnimInstance, CachedAnimStateData: CachedAnimStateData): Number
        fun StateMachine_GetGlobalWeight(InAnimInstance: AnimInstance, CachedAnimStateData: CachedAnimStateData): Number
        fun C(Other: UObject): CachedAnimDataLibrary
        fun C(Other: Any): CachedAnimDataLibrary
    }
}

external open class CameraBlockingVolume(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Volume {
    companion object {
        fun GetDefaultObject(): CameraBlockingVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CameraBlockingVolume
        fun C(Other: UObject): CameraBlockingVolume
        fun C(Other: Any): CameraBlockingVolume
    }
}

external open class CameraLensEffectInterface : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun GetPrimaryParticleComponent(): FXSystemComponent
    open fun GetParticleComponents(): Array<FXSystemComponent>

    companion object {
        fun Load(ResourceName: String): CameraLensEffectInterface
        fun Find(Outer: UObject, ResourceName: String): CameraLensEffectInterface
        fun GetDefaultObject(): CameraLensEffectInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CameraLensEffectInterface
        fun C(Other: UObject): CameraLensEffectInterface
        fun C(Other: Any): CameraLensEffectInterface
    }
}

external open class CameraLensEffectInterfaceClassSupportLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CameraLensEffectInterfaceClassSupportLibrary
        fun Find(Outer: UObject, ResourceName: String): CameraLensEffectInterfaceClassSupportLibrary
        fun GetDefaultObject(): CameraLensEffectInterfaceClassSupportLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CameraLensEffectInterfaceClassSupportLibrary
        fun SetInterfaceClass(Class: UnrealEngineClass, Var: CameraLensInterfaceClassSupport = definedExternally, Result: String /* "Valid" | "Invalid" | "EInterfaceValidResult_MAX" */ = definedExternally): `T$284`
        fun IsInterfaceClassValid(CameraLens: CameraLensInterfaceClassSupport, Result: String /* "Valid" | "Invalid" | "EInterfaceValidResult_MAX" */ = definedExternally): `T$49`
        fun GetInterfaceClass(CameraLens: CameraLensInterfaceClassSupport): UnrealEngineClass
        fun C(Other: UObject): CameraLensEffectInterfaceClassSupportLibrary
        fun C(Other: Any): CameraLensEffectInterfaceClassSupportLibrary
    }
}

external open class CameraShakeSourceActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var CameraShakeSourceComponent: CameraShakeSourceComponent

    companion object {
        fun GetDefaultObject(): CameraShakeSourceActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CameraShakeSourceActor
        fun C(Other: UObject): CameraShakeSourceActor
        fun C(Other: Any): CameraShakeSourceActor
    }
}

external open class CancellableAsyncAction : BlueprintAsyncActionBase {
    constructor()
    constructor(Outer: UObject)
    open fun IsActive(): Boolean
    open fun Cancel()

    companion object {
        fun Load(ResourceName: String): CancellableAsyncAction
        fun Find(Outer: UObject, ResourceName: String): CancellableAsyncAction
        fun GetDefaultObject(): CancellableAsyncAction
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CancellableAsyncAction
        fun C(Other: UObject): CancellableAsyncAction
        fun C(Other: Any): CancellableAsyncAction
    }
}

external interface `T$681` {
    var Width: Number
    var Height: Number
}

external open class CanvasRenderTarget2D : TextureRenderTarget2D {
    constructor()
    constructor(Outer: UObject)
    open var OnCanvasRenderTargetUpdate: UnrealEngineMulticastDelegate<(Canvas: Canvas, Width: Number, Height: Number) -> Unit>
    open var World: Any
    open var bShouldClearRenderTargetOnReceiveUpdate: Boolean
    open fun UpdateResource()
    open fun ReceiveUpdate(Canvas: Canvas, Width: Number, Height: Number)
    open fun GetSize(Width: Number = definedExternally, Height: Number = definedExternally): `T$681`

    companion object {
        fun Load(ResourceName: String): CanvasRenderTarget2D
        fun Find(Outer: UObject, ResourceName: String): CanvasRenderTarget2D
        fun GetDefaultObject(): CanvasRenderTarget2D
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CanvasRenderTarget2D
        fun CreateCanvasRenderTarget2D(WorldContextObject: UObject, CanvasRenderTarget2DClass: UnrealEngineClass, Width: Number, Height: Number): CanvasRenderTarget2D
        fun C(Other: UObject): CanvasRenderTarget2D
        fun C(Other: Any): CanvasRenderTarget2D
    }
}

external open class CheckBoxStyleAsset : UObject {
    constructor()
    constructor(Outer: UObject)
    open var CheckBoxStyle: CheckBoxStyle

    companion object {
        fun Load(ResourceName: String): CheckBoxStyleAsset
        fun Find(Outer: UObject, ResourceName: String): CheckBoxStyleAsset
        fun GetDefaultObject(): CheckBoxStyleAsset
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CheckBoxStyleAsset
        fun C(Other: UObject): CheckBoxStyleAsset
        fun C(Other: Any): CheckBoxStyleAsset
    }
}

external object EPlatformInterfaceDataType {
    var PIDT_None: String /* "PIDT_None" */
    var PIDT_Int: String /* "PIDT_Int" */
    var PIDT_Float: String /* "PIDT_Float" */
    var PIDT_String: String /* "PIDT_String" */
    var PIDT_Object: String /* "PIDT_Object" */
    var PIDT_Custom: String /* "PIDT_Custom" */
    var PIDT_MAX: String /* "PIDT_MAX" */
}

external open class PlatformInterfaceData {
    open var DataName: String
    open var Type: String /* "PIDT_None" | "PIDT_Int" | "PIDT_Float" | "PIDT_String" | "PIDT_Object" | "PIDT_Custom" | "PIDT_MAX" */
    open var IntValue: Number
    open var FloatValue: Number
    open var StringValue: String
    open var ObjectValue: UObject
    open fun clone(): PlatformInterfaceData

    companion object {
        fun C(Other: UObject): PlatformInterfaceData
        fun C(Other: Any): PlatformInterfaceData
    }
}

external open class PlatformInterfaceDelegateResult {
    open var bSuccessful: Boolean
    open var Data: PlatformInterfaceData
    open fun clone(): PlatformInterfaceDelegateResult

    companion object {
        fun C(Other: UObject): PlatformInterfaceDelegateResult
        fun C(Other: Any): PlatformInterfaceDelegateResult
    }
}

external open class DelegateArray {
    open var Delegates: Array<UnrealEngineDelegate<(Result: PlatformInterfaceDelegateResult) -> Unit>>
    open fun clone(): DelegateArray

    companion object {
        fun C(Other: UObject): DelegateArray
        fun C(Other: Any): DelegateArray
    }
}

external open class PlatformInterfaceBase : UObject {
    constructor()
    constructor(Outer: UObject)
    open var AllDelegates: Array<DelegateArray>

    companion object {
        fun Load(ResourceName: String): PlatformInterfaceBase
        fun Find(Outer: UObject, ResourceName: String): PlatformInterfaceBase
        fun GetDefaultObject(): PlatformInterfaceBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PlatformInterfaceBase
        fun C(Other: UObject): PlatformInterfaceBase
        fun C(Other: Any): PlatformInterfaceBase
    }
}

external open class CloudStorageBase : PlatformInterfaceBase {
    constructor()
    constructor(Outer: UObject)
    open var LocalCloudFiles: Array<String>
    open var bSuppressDelegateCalls: Boolean

    companion object {
        fun Load(ResourceName: String): CloudStorageBase
        fun Find(Outer: UObject, ResourceName: String): CloudStorageBase
        fun GetDefaultObject(): CloudStorageBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CloudStorageBase
        fun C(Other: UObject): CloudStorageBase
        fun C(Other: Any): CloudStorageBase
    }
}

external open class CollisionResponseTemplate {
    open var Name: String
    open var CollisionEnabled: String /* "NoCollision" | "QueryOnly" | "PhysicsOnly" | "QueryAndPhysics" | "ECollisionEnabled_MAX" */
    open var bCanModify: Boolean
    open var ObjectTypeName: String
    open var CustomResponses: Array<ResponseChannel>
    open var HelpMessage: String
    open fun clone(): CollisionResponseTemplate

    companion object {
        fun C(Other: UObject): CollisionResponseTemplate
        fun C(Other: Any): CollisionResponseTemplate
    }
}

external open class CustomChannelSetup {
    open var Channel: String /* "ECC_WorldStatic" | "ECC_WorldDynamic" | "ECC_Pawn" | "ECC_Visibility" | "ECC_Camera" | "ECC_PhysicsBody" | "ECC_Vehicle" | "ECC_Destructible" | "ECC_EngineTraceChannel1" | "ECC_EngineTraceChannel2" | "ECC_EngineTraceChannel3" | "ECC_EngineTraceChannel4" | "ECC_EngineTraceChannel5" | "ECC_EngineTraceChannel6" | "ECC_GameTraceChannel1" | "ECC_GameTraceChannel2" | "ECC_GameTraceChannel3" | "ECC_GameTraceChannel4" | "ECC_GameTraceChannel5" | "ECC_GameTraceChannel6" | "ECC_GameTraceChannel7" | "ECC_GameTraceChannel8" | "ECC_GameTraceChannel9" | "ECC_GameTraceChannel10" | "ECC_GameTraceChannel11" | "ECC_GameTraceChannel12" | "ECC_GameTraceChannel13" | "ECC_GameTraceChannel14" | "ECC_GameTraceChannel15" | "ECC_GameTraceChannel16" | "ECC_GameTraceChannel17" | "ECC_GameTraceChannel18" | "ECC_OverlapAll_Deprecated" | "ECC_MAX" */
    open var DefaultResponse: String /* "ECR_Ignore" | "ECR_Overlap" | "ECR_Block" | "ECR_MAX" */
    open var bTraceType: Boolean
    open var bStaticObject: Boolean
    open var Name: String
    open fun clone(): CustomChannelSetup

    companion object {
        fun C(Other: UObject): CustomChannelSetup
        fun C(Other: Any): CustomChannelSetup
    }
}

external open class CustomProfile {
    open var Name: String
    open var CustomResponses: Array<ResponseChannel>
    open fun clone(): CustomProfile

    companion object {
        fun C(Other: UObject): CustomProfile
        fun C(Other: Any): CustomProfile
    }
}

external open class Redirector {
    open var OldName: String
    open var NewName: String
    open fun clone(): Redirector

    companion object {
        fun C(Other: UObject): Redirector
        fun C(Other: Any): Redirector
    }
}

external open class CollisionProfile : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var Profiles: Array<CollisionResponseTemplate>
    open var DefaultChannelResponses: Array<CustomChannelSetup>
    open var EditProfiles: Array<CustomProfile>
    open var ProfileRedirects: Array<Redirector>
    open var CollisionChannelRedirects: Array<Redirector>

    companion object {
        fun Load(ResourceName: String): CollisionProfile
        fun Find(Outer: UObject, ResourceName: String): CollisionProfile
        fun GetDefaultObject(): CollisionProfile
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CollisionProfile
        fun C(Other: UObject): CollisionProfile
        fun C(Other: Any): CollisionProfile
    }
}

external open class BlueprintComponentDelegateBinding {
    open var ComponentPropertyName: String
    open var DelegatePropertyName: String
    open var FunctionNameToBind: String
    open fun clone(): BlueprintComponentDelegateBinding

    companion object {
        fun C(Other: UObject): BlueprintComponentDelegateBinding
        fun C(Other: Any): BlueprintComponentDelegateBinding
    }
}

external open class ComponentDelegateBinding : DynamicBlueprintBinding {
    constructor()
    constructor(Outer: UObject)
    open var ComponentDelegateBindings: Array<BlueprintComponentDelegateBinding>

    companion object {
        fun Load(ResourceName: String): ComponentDelegateBinding
        fun Find(Outer: UObject, ResourceName: String): ComponentDelegateBinding
        fun GetDefaultObject(): ComponentDelegateBinding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ComponentDelegateBinding
        fun C(Other: UObject): ComponentDelegateBinding
        fun C(Other: Any): ComponentDelegateBinding
    }
}

external open class ComponentElementCounterInterface : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ComponentElementCounterInterface
        fun Find(Outer: UObject, ResourceName: String): ComponentElementCounterInterface
        fun GetDefaultObject(): ComponentElementCounterInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ComponentElementCounterInterface
        fun C(Other: UObject): ComponentElementCounterInterface
        fun C(Other: Any): ComponentElementCounterInterface
    }
}

external open class ComponentElementHierarchyInterface : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ComponentElementHierarchyInterface
        fun Find(Outer: UObject, ResourceName: String): ComponentElementHierarchyInterface
        fun GetDefaultObject(): ComponentElementHierarchyInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ComponentElementHierarchyInterface
        fun C(Other: UObject): ComponentElementHierarchyInterface
        fun C(Other: Any): ComponentElementHierarchyInterface
    }
}

external open class ComponentElementObjectInterface : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ComponentElementObjectInterface
        fun Find(Outer: UObject, ResourceName: String): ComponentElementObjectInterface
        fun GetDefaultObject(): ComponentElementObjectInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ComponentElementObjectInterface
        fun C(Other: UObject): ComponentElementObjectInterface
        fun C(Other: Any): ComponentElementObjectInterface
    }
}

external open class ActorComponentInstanceDataTransientOuter : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorComponentInstanceDataTransientOuter
        fun Find(Outer: UObject, ResourceName: String): ActorComponentInstanceDataTransientOuter
        fun GetDefaultObject(): ActorComponentInstanceDataTransientOuter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorComponentInstanceDataTransientOuter
        fun C(Other: UObject): ActorComponentInstanceDataTransientOuter
        fun C(Other: Any): ActorComponentInstanceDataTransientOuter
    }
}

external open class CompositeCurveTable : CurveTable {
    constructor()
    constructor(Outer: UObject)
    open var ParentTables: Array<CurveTable>
    open var OldParentTables: Array<CurveTable>

    companion object {
        fun Load(ResourceName: String): CompositeCurveTable
        fun Find(Outer: UObject, ResourceName: String): CompositeCurveTable
        fun GetDefaultObject(): CompositeCurveTable
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CompositeCurveTable
        fun C(Other: UObject): CompositeCurveTable
        fun C(Other: Any): CompositeCurveTable
    }
}

external open class CompositeDataTable : DataTable {
    constructor()
    constructor(Outer: UObject)
    open var ParentTables: Array<DataTable>
    open var OldParentTables: Array<DataTable>

    companion object {
        fun Load(ResourceName: String): CompositeDataTable
        fun Find(Outer: UObject, ResourceName: String): CompositeDataTable
        fun GetDefaultObject(): CompositeDataTable
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CompositeDataTable
        fun C(Other: UObject): CompositeDataTable
        fun C(Other: Any): CompositeDataTable
    }
}

external open class ConstraintInstanceBlueprintLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ConstraintInstanceBlueprintLibrary
        fun Find(Outer: UObject, ResourceName: String): ConstraintInstanceBlueprintLibrary
        fun GetDefaultObject(): ConstraintInstanceBlueprintLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ConstraintInstanceBlueprintLibrary
        fun SetProjectionParams(Accessor: ConstraintInstanceAccessor = definedExternally, bEnableProjection: Boolean = definedExternally, ProjectionLinearAlpha: Number = definedExternally, ProjectionAngularAlpha: Number = definedExternally): `T$176`
        fun SetParentDominates(Accessor: ConstraintInstanceAccessor = definedExternally, bParentDominates: Boolean = definedExternally): `T$176`
        fun SetOrientationDriveTwistAndSwing(Accessor: ConstraintInstanceAccessor = definedExternally, bEnableTwistDrive: Boolean = definedExternally, bEnableSwingDrive: Boolean = definedExternally): `T$176`
        fun SetOrientationDriveSLERP(Accessor: ConstraintInstanceAccessor = definedExternally, bEnableSLERP: Boolean = definedExternally): `T$176`
        fun SetLinearVelocityTarget(Accessor: ConstraintInstanceAccessor = definedExternally, InVelTarget: Vector = definedExternally): `T$176`
        fun SetLinearVelocityDrive(Accessor: ConstraintInstanceAccessor = definedExternally, bEnableDriveX: Boolean = definedExternally, bEnableDriveY: Boolean = definedExternally, bEnableDriveZ: Boolean = definedExternally): `T$176`
        fun SetLinearSoftLimitParams(Accessor: ConstraintInstanceAccessor = definedExternally, bSoftLinearLimit: Boolean = definedExternally, LinearLimitStiffness: Number = definedExternally, LinearLimitDamping: Number = definedExternally, LinearLimitRestitution: Number = definedExternally, LinearLimitContactDistance: Number = definedExternally): `T$176`
        fun SetLinearPositionTarget(Accessor: ConstraintInstanceAccessor = definedExternally, InPosTarget: Vector = definedExternally): `T$176`
        fun SetLinearPositionDrive(Accessor: ConstraintInstanceAccessor = definedExternally, bEnableDriveX: Boolean = definedExternally, bEnableDriveY: Boolean = definedExternally, bEnableDriveZ: Boolean = definedExternally): `T$176`
        fun SetLinearPlasticity(Accessor: ConstraintInstanceAccessor = definedExternally, bLinearPlasticity: Boolean = definedExternally, LinearPlasticityThreshold: Number = definedExternally, PlasticityType: String /* "CCPT_Free" | "CCPT_Shrink" | "CCPT_Grow" | "CCPT_MAX" */ = definedExternally): `T$176`
        fun SetLinearLimits(Accessor: ConstraintInstanceAccessor = definedExternally, XMotion: String /* "LCM_Free" | "LCM_Limited" | "LCM_Locked" | "LCM_MAX" */ = definedExternally, YMotion: String /* "LCM_Free" | "LCM_Limited" | "LCM_Locked" | "LCM_MAX" */ = definedExternally, ZMotion: String /* "LCM_Free" | "LCM_Limited" | "LCM_Locked" | "LCM_MAX" */ = definedExternally, Limit: Number = definedExternally): `T$176`
        fun SetLinearDriveParams(Accessor: ConstraintInstanceAccessor = definedExternally, PositionStrength: Number = definedExternally, VelocityStrength: Number = definedExternally, InForceLimit: Number = definedExternally): `T$176`
        fun SetLinearBreakable(Accessor: ConstraintInstanceAccessor = definedExternally, bLinearBreakable: Boolean = definedExternally, LinearBreakThreshold: Number = definedExternally): `T$176`
        fun SetDisableCollision(Accessor: ConstraintInstanceAccessor = definedExternally, bDisableCollision: Boolean = definedExternally): `T$176`
        fun SetContactTransferScale(Accessor: ConstraintInstanceAccessor = definedExternally, ContactTransferScale: Number = definedExternally): `T$176`
        fun SetAngularVelocityTarget(Accessor: ConstraintInstanceAccessor = definedExternally, InVelTarget: Vector = definedExternally): `T$176`
        fun SetAngularVelocityDriveTwistAndSwing(Accessor: ConstraintInstanceAccessor = definedExternally, bEnableTwistDrive: Boolean = definedExternally, bEnableSwingDrive: Boolean = definedExternally): `T$176`
        fun SetAngularVelocityDriveSLERP(Accessor: ConstraintInstanceAccessor = definedExternally, bEnableSLERP: Boolean = definedExternally): `T$176`
        fun SetAngularSoftTwistLimitParams(Accessor: ConstraintInstanceAccessor = definedExternally, bSoftTwistLimit: Boolean = definedExternally, TwistLimitStiffness: Number = definedExternally, TwistLimitDamping: Number = definedExternally, TwistLimitRestitution: Number = definedExternally, TwistLimitContactDistance: Number = definedExternally): `T$176`
        fun SetAngularSoftSwingLimitParams(Accessor: ConstraintInstanceAccessor = definedExternally, bSoftSwingLimit: Boolean = definedExternally, SwingLimitStiffness: Number = definedExternally, SwingLimitDamping: Number = definedExternally, SwingLimitRestitution: Number = definedExternally, SwingLimitContactDistance: Number = definedExternally): `T$176`
        fun SetAngularPlasticity(Accessor: ConstraintInstanceAccessor = definedExternally, bAngularPlasticity: Boolean = definedExternally, AngularPlasticityThreshold: Number = definedExternally): `T$176`
        fun SetAngularOrientationTarget(Accessor: ConstraintInstanceAccessor = definedExternally, InPosTarget: Rotator = definedExternally): `T$176`
        fun SetAngularLimits(Accessor: ConstraintInstanceAccessor = definedExternally, Swing1MotionType: String /* "ACM_Free" | "ACM_Limited" | "ACM_Locked" | "ACM_MAX" */ = definedExternally, Swing1LimitAngle: Number = definedExternally, Swing2MotionType: String /* "ACM_Free" | "ACM_Limited" | "ACM_Locked" | "ACM_MAX" */ = definedExternally, Swing2LimitAngle: Number = definedExternally, TwistMotionType: String /* "ACM_Free" | "ACM_Limited" | "ACM_Locked" | "ACM_MAX" */ = definedExternally, TwistLimitAngle: Number = definedExternally): `T$176`
        fun SetAngularDriveParams(Accessor: ConstraintInstanceAccessor = definedExternally, PositionStrength: Number = definedExternally, VelocityStrength: Number = definedExternally, InForceLimit: Number = definedExternally): `T$176`
        fun SetAngularDriveMode(Accessor: ConstraintInstanceAccessor = definedExternally, DriveMode: String /* "SLERP" | "TwistAndSwing" | "EAngularDriveMode_MAX" */ = definedExternally): `T$176`
        fun SetAngularBreakable(Accessor: ConstraintInstanceAccessor = definedExternally, bAngularBreakable: Boolean = definedExternally, AngularBreakThreshold: Number = definedExternally): `T$176`
        fun GetProjectionParams(Accessor: ConstraintInstanceAccessor = definedExternally, bEnableProjection: Boolean = definedExternally, ProjectionLinearAlpha: Number = definedExternally, ProjectionAngularAlpha: Number = definedExternally): `T$175`
        fun GetParentDominates(Accessor: ConstraintInstanceAccessor = definedExternally): `T$168`
        fun GetOrientationDriveTwistAndSwing(Accessor: ConstraintInstanceAccessor = definedExternally, bOutEnableTwistDrive: Boolean = definedExternally, bOutEnableSwingDrive: Boolean = definedExternally): `T$164`
        fun GetOrientationDriveSLERP(Accessor: ConstraintInstanceAccessor = definedExternally, bOutEnableSLERP: Boolean = definedExternally): `T$163`
        fun GetLinearVelocityTarget(Accessor: ConstraintInstanceAccessor = definedExternally, OutVelTarget: Vector = definedExternally): `T$165`
        fun GetLinearVelocityDrive(Accessor: ConstraintInstanceAccessor = definedExternally, bOutEnableDriveX: Boolean = definedExternally, bOutEnableDriveY: Boolean = definedExternally, bOutEnableDriveZ: Boolean = definedExternally): `T$172`
        fun GetLinearSoftLimitParams(Accessor: ConstraintInstanceAccessor = definedExternally, bSoftLinearLimit: Boolean = definedExternally, LinearLimitStiffness: Number = definedExternally, LinearLimitDamping: Number = definedExternally, LinearLimitRestitution: Number = definedExternally, LinearLimitContactDistance: Number = definedExternally): `T$174`
        fun GetLinearPositionTarget(Accessor: ConstraintInstanceAccessor = definedExternally, OutPosTarget: Vector = definedExternally): `T$173`
        fun GetLinearPositionDrive(Accessor: ConstraintInstanceAccessor = definedExternally, bOutEnableDriveX: Boolean = definedExternally, bOutEnableDriveY: Boolean = definedExternally, bOutEnableDriveZ: Boolean = definedExternally): `T$172`
        fun GetLinearPlasticity(Accessor: ConstraintInstanceAccessor = definedExternally, bLinearPlasticity: Boolean = definedExternally, LinearPlasticityThreshold: Number = definedExternally, PlasticityType: String /* "CCPT_Free" | "CCPT_Shrink" | "CCPT_Grow" | "CCPT_MAX" */ = definedExternally): `T$171`
        fun GetLinearLimits(Accessor: ConstraintInstanceAccessor = definedExternally, XMotion: String /* "LCM_Free" | "LCM_Limited" | "LCM_Locked" | "LCM_MAX" */ = definedExternally, YMotion: String /* "LCM_Free" | "LCM_Limited" | "LCM_Locked" | "LCM_MAX" */ = definedExternally, ZMotion: String /* "LCM_Free" | "LCM_Limited" | "LCM_Locked" | "LCM_MAX" */ = definedExternally, Limit: Number = definedExternally): `T$170`
        fun GetLinearDriveParams(Accessor: ConstraintInstanceAccessor = definedExternally, OutPositionStrength: Number = definedExternally, OutVelocityStrength: Number = definedExternally, OutForceLimit: Number = definedExternally): `T$157`
        fun GetLinearBreakable(Accessor: ConstraintInstanceAccessor = definedExternally, bLinearBreakable: Boolean = definedExternally, LinearBreakThreshold: Number = definedExternally): `T$169`
        fun GetDisableCollsion(Accessor: ConstraintInstanceAccessor = definedExternally): `T$168`
        fun GetContactTransferScale(Accessor: ConstraintInstanceAccessor = definedExternally, ContactTransferScale: Number = definedExternally): `T$167`
        fun GetAttachedBodyNames(Accessor: ConstraintInstanceAccessor = definedExternally, ParentBody: String = definedExternally, ChildBody: String = definedExternally): `T$166`
        fun GetAngularVelocityTarget(Accessor: ConstraintInstanceAccessor = definedExternally, OutVelTarget: Vector = definedExternally): `T$165`
        fun GetAngularVelocityDriveTwistAndSwing(Accessor: ConstraintInstanceAccessor = definedExternally, bOutEnableTwistDrive: Boolean = definedExternally, bOutEnableSwingDrive: Boolean = definedExternally): `T$164`
        fun GetAngularVelocityDriveSLERP(Accessor: ConstraintInstanceAccessor = definedExternally, bOutEnableSLERP: Boolean = definedExternally): `T$163`
        fun GetAngularSoftTwistLimitParams(Accessor: ConstraintInstanceAccessor = definedExternally, bSoftTwistLimit: Boolean = definedExternally, TwistLimitStiffness: Number = definedExternally, TwistLimitDamping: Number = definedExternally, TwistLimitRestitution: Number = definedExternally, TwistLimitContactDistance: Number = definedExternally): `T$162`
        fun GetAngularSoftSwingLimitParams(Accessor: ConstraintInstanceAccessor = definedExternally, bSoftSwingLimit: Boolean = definedExternally, SwingLimitStiffness: Number = definedExternally, SwingLimitDamping: Number = definedExternally, SwingLimitRestitution: Number = definedExternally, SwingLimitContactDistance: Number = definedExternally): `T$161`
        fun GetAngularPlasticity(Accessor: ConstraintInstanceAccessor = definedExternally, bAngularPlasticity: Boolean = definedExternally, AngularPlasticityThreshold: Number = definedExternally): `T$160`
        fun GetAngularOrientationTarget(Accessor: ConstraintInstanceAccessor = definedExternally, OutPosTarget: Rotator = definedExternally): `T$159`
        fun GetAngularLimits(Accessor: ConstraintInstanceAccessor = definedExternally, Swing1MotionType: String /* "ACM_Free" | "ACM_Limited" | "ACM_Locked" | "ACM_MAX" */ = definedExternally, Swing1LimitAngle: Number = definedExternally, Swing2MotionType: String /* "ACM_Free" | "ACM_Limited" | "ACM_Locked" | "ACM_MAX" */ = definedExternally, Swing2LimitAngle: Number = definedExternally, TwistMotionType: String /* "ACM_Free" | "ACM_Limited" | "ACM_Locked" | "ACM_MAX" */ = definedExternally, TwistLimitAngle: Number = definedExternally): `T$158`
        fun GetAngularDriveParams(Accessor: ConstraintInstanceAccessor = definedExternally, OutPositionStrength: Number = definedExternally, OutVelocityStrength: Number = definedExternally, OutForceLimit: Number = definedExternally): `T$157`
        fun GetAngularDriveMode(Accessor: ConstraintInstanceAccessor = definedExternally, OutDriveMode: String /* "SLERP" | "TwistAndSwing" | "EAngularDriveMode_MAX" */ = definedExternally): `T$156`
        fun GetAngularBreakable(Accessor: ConstraintInstanceAccessor = definedExternally, bAngularBreakable: Boolean = definedExternally, AngularBreakThreshold: Number = definedExternally): `T$155`
        fun CopyParams(Accessor: ConstraintInstanceAccessor = definedExternally, SourceAccessor: ConstraintInstanceAccessor = definedExternally, bKeepPosition: Boolean = definedExternally, bKeepRotation: Boolean = definedExternally): `T$154`
        fun C(Other: UObject): ConstraintInstanceBlueprintLibrary
        fun C(Other: Any): ConstraintInstanceBlueprintLibrary
    }
}

external open class ControlChannel : Channel {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ControlChannel
        fun Find(Outer: UObject, ResourceName: String): ControlChannel
        fun GetDefaultObject(): ControlChannel
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ControlChannel
        fun C(Other: UObject): ControlChannel
        fun C(Other: Any): ControlChannel
    }
}

external open class StreamingSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var AsyncLoadingThreadEnabled: Boolean
    open var WarnIfTimeLimitExceeded: Boolean
    open var TimeLimitExceededMultiplier: Number
    open var TimeLimitExceededMinTime: Number
    open var MinBulkDataSizeForAsyncLoading: Number
    open var UseBackgroundLevelStreaming: Boolean
    open var AsyncLoadingUseFullTimeLimit: Boolean
    open var AsyncLoadingTimeLimit: Number
    open var PriorityAsyncLoadingExtraTime: Number
    open var LevelStreamingActorsUpdateTimeLimit: Number
    open var PriorityLevelStreamingActorsUpdateExtraTime: Number
    open var LevelStreamingComponentsRegistrationGranularity: Number
    open var LevelStreamingAddPrimitiveGranularity: Number
    open var LevelStreamingUnregisterComponentsTimeLimit: Number
    open var LevelStreamingComponentsUnregistrationGranularity: Number
    open var FlushStreamingOnExit: Boolean
    open var EventDrivenLoaderEnabled: Boolean

    companion object {
        fun Load(ResourceName: String): StreamingSettings
        fun Find(Outer: UObject, ResourceName: String): StreamingSettings
        fun GetDefaultObject(): StreamingSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): StreamingSettings
        fun C(Other: UObject): StreamingSettings
        fun C(Other: Any): StreamingSettings
    }
}

external open class GarbageCollectionSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var TimeBetweenPurgingPendingKillObjects: Number
    open var FlushStreamingOnGC: Boolean
    open var AllowParallelGC: Boolean
    open var IncrementalBeginDestroyEnabled: Boolean
    open var MultithreadedDestructionEnabled: Boolean
    open var CreateGCClusters: Boolean
    open var AssetClusteringEnabled: Boolean
    open var ActorClusteringEnabled: Boolean
    open var BlueprintClusteringEnabled: Boolean
    open var UseDisregardForGCOnDedicatedServers: Boolean
    open var VerifyGCObjectNames: Boolean
    open var VerifyUObjectsAreNotFGCObjects: Boolean
    open var PendingKillEnabled: Boolean
    open var MinGCClusterSize: Number
    open var NumRetriesBeforeForcingGC: Number
    open var MaxObjectsNotConsideredByGC: Number
    open var SizeOfPermanentObjectPool: Number
    open var MaxObjectsInGame: Number
    open var MaxObjectsInEditor: Number

    companion object {
        fun Load(ResourceName: String): GarbageCollectionSettings
        fun Find(Outer: UObject, ResourceName: String): GarbageCollectionSettings
        fun GetDefaultObject(): GarbageCollectionSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GarbageCollectionSettings
        fun C(Other: UObject): GarbageCollectionSettings
        fun C(Other: Any): GarbageCollectionSettings
    }
}

external open class CullDistanceSizePair {
    open var Size: Number
    open var CullDistance: Number
    open fun clone(): CullDistanceSizePair

    companion object {
        fun C(Other: UObject): CullDistanceSizePair
        fun C(Other: Any): CullDistanceSizePair
    }
}

external open class CullDistanceVolume(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Volume {
    open var CullDistances: Array<CullDistanceSizePair>
    open var bEnabled: Boolean

    companion object {
        fun GetDefaultObject(): CullDistanceVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CullDistanceVolume
        fun C(Other: UObject): CullDistanceVolume
        fun C(Other: Any): CullDistanceVolume
    }
}

external open class CurveEdPresetCurve : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CurveEdPresetCurve
        fun Find(Outer: UObject, ResourceName: String): CurveEdPresetCurve
        fun GetDefaultObject(): CurveEdPresetCurve
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CurveEdPresetCurve
        fun C(Other: UObject): CurveEdPresetCurve
        fun C(Other: Any): CurveEdPresetCurve
    }
}

external open class AnimationCurveIdentifierExtensions : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimationCurveIdentifierExtensions
        fun Find(Outer: UObject, ResourceName: String): AnimationCurveIdentifierExtensions
        fun GetDefaultObject(): AnimationCurveIdentifierExtensions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationCurveIdentifierExtensions
        fun IsValid(Identifier: AnimationCurveIdentifier = definedExternally): `T$57`
        fun GetType(Identifier: AnimationCurveIdentifier = definedExternally): `T$56`
        fun GetTransformChildCurveIdentifier(InOutIdentifier: AnimationCurveIdentifier = definedExternally, Channel: String /* "Position" | "Rotation" | "Scale" | "Invalid" | "ETransformCurveChannel_MAX" */ = definedExternally, Axis: String /* "X" | "Y" | "Z" | "Invalid" | "EVectorCurveChannel_MAX" */ = definedExternally): `T$55`
        fun GetName(Identifier: AnimationCurveIdentifier = definedExternally): `T$54`
        fun GetCurveIdentifiers(InSkeleton: Skeleton, CurveType: String /* "RCT_Float" | "RCT_Vector" | "RCT_Transform" | "RCT_MAX" */): Array<AnimationCurveIdentifier>
        fun GetCurveIdentifier(InSkeleton: Skeleton, Name: String, CurveType: String /* "RCT_Float" | "RCT_Vector" | "RCT_Transform" | "RCT_MAX" */): AnimationCurveIdentifier
        fun FindCurveIdentifier(InSkeleton: Skeleton, Name: String, CurveType: String /* "RCT_Float" | "RCT_Vector" | "RCT_Transform" | "RCT_MAX" */): AnimationCurveIdentifier
        fun C(Other: UObject): AnimationCurveIdentifierExtensions
        fun C(Other: Any): AnimationCurveIdentifierExtensions
    }
}

external open class NamedCurveValue {
    open var Name: String
    open var Value: Number
    open fun clone(): NamedCurveValue

    companion object {
        fun C(Other: UObject): NamedCurveValue
        fun C(Other: Any): NamedCurveValue
    }
}

external interface `T$682` {
    var OutValues: Array<NamedCurveValue>
}

external open class CurveSourceInterface : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun GetCurveValue(CurveName: String): Number
    open fun GetCurves(OutValues: Array<NamedCurveValue> = definedExternally): `T$682`
    open fun GetBindingName(): String

    companion object {
        fun Load(ResourceName: String): CurveSourceInterface
        fun Find(Outer: UObject, ResourceName: String): CurveSourceInterface
        fun GetDefaultObject(): CurveSourceInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CurveSourceInterface
        fun C(Other: UObject): CurveSourceInterface
        fun C(Other: Any): CurveSourceInterface
    }
}

external open class AssetBundleEntry {
    open var BundleName: String
    open var BundleAssets: Array<SoftObjectPath>
    open fun clone(): AssetBundleEntry

    companion object {
        fun C(Other: UObject): AssetBundleEntry
        fun C(Other: Any): AssetBundleEntry
    }
}

external open class AssetBundleData {
    open var Bundles: Array<AssetBundleEntry>
    open fun clone(): AssetBundleData

    companion object {
        fun C(Other: UObject): AssetBundleData
        fun C(Other: Any): AssetBundleData
    }
}

external open class PrimaryDataAsset : DataAsset {
    constructor()
    constructor(Outer: UObject)
    open var AssetBundleData: AssetBundleData

    companion object {
        fun Load(ResourceName: String): PrimaryDataAsset
        fun Find(Outer: UObject, ResourceName: String): PrimaryDataAsset
        fun GetDefaultObject(): PrimaryDataAsset
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PrimaryDataAsset
        fun C(Other: UObject): PrimaryDataAsset
        fun C(Other: Any): PrimaryDataAsset
    }
}

external open class DataDrivenCVarEngineSubsystem : EngineSubsystem {
    constructor()
    constructor(Outer: UObject)
    open var OnDataDrivenCVarDelegate: UnrealEngineMulticastDelegate<(CVarName: String) -> Unit>

    companion object {
        fun Load(ResourceName: String): DataDrivenCVarEngineSubsystem
        fun Find(Outer: UObject, ResourceName: String): DataDrivenCVarEngineSubsystem
        fun GetDefaultObject(): DataDrivenCVarEngineSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DataDrivenCVarEngineSubsystem
        fun C(Other: UObject): DataDrivenCVarEngineSubsystem
        fun C(Other: Any): DataDrivenCVarEngineSubsystem
    }
}

external object FDataDrivenCVarType {
    var CVarFloat: String /* "CVarFloat" */
    var CVarInt: String /* "CVarInt" */
    var CVarBool: String /* "CVarBool" */
    var FDataDrivenCVarType_MAX: String /* "FDataDrivenCVarType_MAX" */
}

external open class DataDrivenConsoleVariable {
    open var Type: String /* "CVarFloat" | "CVarInt" | "CVarBool" | "FDataDrivenCVarType_MAX" */
    open var Name: String
    open var Tooltip: String
    open var DefaultValueFloat: Number
    open var DefaultValueInt: Number
    open var DefaultValueBool: Boolean
    open fun clone(): DataDrivenConsoleVariable

    companion object {
        fun C(Other: UObject): DataDrivenConsoleVariable
        fun C(Other: Any): DataDrivenConsoleVariable
    }
}

external open class DataDrivenConsoleVariableSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var CVarsArray: Array<DataDrivenConsoleVariable>

    companion object {
        fun Load(ResourceName: String): DataDrivenConsoleVariableSettings
        fun Find(Outer: UObject, ResourceName: String): DataDrivenConsoleVariableSettings
        fun GetDefaultObject(): DataDrivenConsoleVariableSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DataDrivenConsoleVariableSettings
        fun C(Other: UObject): DataDrivenConsoleVariableSettings
        fun C(Other: Any): DataDrivenConsoleVariableSettings
    }
}

external open class DataLayerSubsystem : WorldSubsystem {
    constructor()
    constructor(Outer: UObject)
    open var OnDataLayerRuntimeStateChanged: UnrealEngineMulticastDelegate<(DataLayer: DataLayer, State: String /* "Unloaded" | "Loaded" | "Activated" | "EDataLayerRuntimeState_MAX" */) -> Unit>
    open fun SetDataLayerStateByLabel(InDataLayerLabel: String, InState: String /* "Unloaded" | "Loaded" | "Activated" | "EDataLayerState_MAX" */)
    open fun SetDataLayerState(InDataLayer: ActorDataLayer, InState: String /* "Unloaded" | "Loaded" | "Activated" | "EDataLayerState_MAX" */)
    open fun SetDataLayerRuntimeStateByLabel(InDataLayerLabel: String, InState: String /* "Unloaded" | "Loaded" | "Activated" | "EDataLayerRuntimeState_MAX" */, bInIsRecursive: Boolean)
    open fun SetDataLayerRuntimeState(InDataLayer: ActorDataLayer, InState: String /* "Unloaded" | "Loaded" | "Activated" | "EDataLayerRuntimeState_MAX" */, bInIsRecursive: Boolean)
    open fun GetLoadedDataLayerNames(): Any
    open fun GetDataLayerStateByLabel(InDataLayerLabel: String): String /* "Unloaded" | "Loaded" | "Activated" | "EDataLayerState_MAX" */
    open fun GetDataLayerState(InDataLayer: ActorDataLayer): String /* "Unloaded" | "Loaded" | "Activated" | "EDataLayerState_MAX" */
    open fun GetDataLayerRuntimeStateByLabel(InDataLayerLabel: String): String /* "Unloaded" | "Loaded" | "Activated" | "EDataLayerRuntimeState_MAX" */
    open fun GetDataLayerRuntimeState(InDataLayer: ActorDataLayer): String /* "Unloaded" | "Loaded" | "Activated" | "EDataLayerRuntimeState_MAX" */
    open fun GetDataLayerFromName(InDataLayerName: String): DataLayer
    open fun GetDataLayerFromLabel(InDataLayerLabel: String): DataLayer
    open fun GetDataLayerEffectiveRuntimeStateByLabel(InDataLayerLabel: String): String /* "Unloaded" | "Loaded" | "Activated" | "EDataLayerRuntimeState_MAX" */
    open fun GetDataLayerEffectiveRuntimeState(InDataLayer: ActorDataLayer): String /* "Unloaded" | "Loaded" | "Activated" | "EDataLayerRuntimeState_MAX" */
    open fun GetDataLayer(InDataLayer: ActorDataLayer): DataLayer
    open fun GetActiveDataLayerNames(): Any

    companion object {
        fun Load(ResourceName: String): DataLayerSubsystem
        fun Find(Outer: UObject, ResourceName: String): DataLayerSubsystem
        fun GetDefaultObject(): DataLayerSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DataLayerSubsystem
        fun C(Other: UObject): DataLayerSubsystem
        fun C(Other: Any): DataLayerSubsystem
    }
}

external interface `T$683` {
    var OutRowNames: Array<String>
}

external open class DataTableFunctionLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DataTableFunctionLibrary
        fun Find(Outer: UObject, ResourceName: String): DataTableFunctionLibrary
        fun GetDefaultObject(): DataTableFunctionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DataTableFunctionLibrary
        fun GetDataTableRowNames(Table: DataTable, OutRowNames: Array<String> = definedExternally): `T$683`
        fun GetDataTableRowFromName(Table: DataTable, RowName: String, OutRow: TableRowBase = definedExternally): `T$58`
        fun GetDataTableColumnAsString(DataTable: DataTable, PropertyName: String): Array<String>
        fun FillDataTableFromJSONString(DataTable: DataTable, JsonString: String): Boolean
        fun FillDataTableFromJSONFile(DataTable: DataTable, JSONFilePath: String, ImportRowStruct: ScriptStruct): Boolean
        fun FillDataTableFromCSVString(DataTable: DataTable, CSVString: String): Boolean
        fun FillDataTableFromCSVFile(DataTable: DataTable, CSVFilePath: String): Boolean
        fun EvaluateCurveTableRow(CurveTable: CurveTable, RowName: String, InXY: Number, OutResult: String /* "RowFound" | "RowNotFound" | "EEvaluateCurveTableResult_MAX" */ = definedExternally, OutXY: Number = definedExternally, ContextString: String = definedExternally): `T$262`
        fun DoesDataTableRowExist(Table: DataTable, RowName: String): Boolean
        fun C(Other: UObject): DataTableFunctionLibrary
        fun C(Other: Any): DataTableFunctionLibrary
    }
}

external open class DebugCameraControllerSettingsViewModeIndex {
    open var ViewModeIndex: String /* "VMI_BrushWireframe" | "VMI_Wireframe" | "VMI_Unlit" | "VMI_Lit" | "VMI_Lit_DetailLighting" | "VMI_LightingOnly" | "VMI_LightComplexity" | "VMI_ShaderComplexity" | "VMI_LightmapDensity" | "VMI_LitLightmapDensity" | "VMI_ReflectionOverride" | "VMI_VisualizeBuffer" | "VMI_StationaryLightOverlap" | "VMI_CollisionPawn" | "VMI_CollisionVisibility" | "VMI_LODColoration" | "VMI_QuadOverdraw" | "VMI_PrimitiveDistanceAccuracy" | "VMI_MeshUVDensityAccuracy" | "VMI_ShaderComplexityWithQuadOverdraw" | "VMI_HLODColoration" | "VMI_GroupLODColoration" | "VMI_MaterialTextureScaleAccuracy" | "VMI_RequiredTextureResolution" | "VMI_PathTracing" | "VMI_RayTracingDebug" | "VMI_VisualizeNanite" | "VMI_VirtualTexturePendingMips" | "VMI_VisualizeLumen" | "VMI_VisualizeVirtualShadowMap" | "VMI_Max" | "VMI_Unknown" */
    open fun clone(): DebugCameraControllerSettingsViewModeIndex

    companion object {
        fun C(Other: UObject): DebugCameraControllerSettingsViewModeIndex
        fun C(Other: Any): DebugCameraControllerSettingsViewModeIndex
    }
}

external open class DebugCameraControllerSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var CycleViewModes: Array<DebugCameraControllerSettingsViewModeIndex>

    companion object {
        fun Load(ResourceName: String): DebugCameraControllerSettings
        fun Find(Outer: UObject, ResourceName: String): DebugCameraControllerSettings
        fun GetDefaultObject(): DebugCameraControllerSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DebugCameraControllerSettings
        fun C(Other: UObject): DebugCameraControllerSettings
        fun C(Other: Any): DebugCameraControllerSettings
    }
}

external open class DebugCameraHUD(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : HUD {
    companion object {
        fun GetDefaultObject(): DebugCameraHUD
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DebugCameraHUD
        fun C(Other: UObject): DebugCameraHUD
        fun C(Other: Any): DebugCameraHUD
    }
}

external open class DebugDrawService : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DebugDrawService
        fun Find(Outer: UObject, ResourceName: String): DebugDrawService
        fun GetDefaultObject(): DebugDrawService
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DebugDrawService
        fun C(Other: UObject): DebugDrawService
        fun C(Other: Any): DebugDrawService
    }
}

external open class DecalActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var Decal: DecalComponent
    open var ArrowComponent: ArrowComponent
    open var SpriteComponent: BillboardComponent
    open var BoxComponent: BoxComponent
    open fun SetDecalMaterial(NewDecalMaterial: MaterialInterface)
    open fun GetDecalMaterial(): MaterialInterface
    open fun CreateDynamicMaterialInstance(): MaterialInstanceDynamic

    companion object {
        fun GetDefaultObject(): DecalActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DecalActor
        fun C(Other: UObject): DecalActor
        fun C(Other: Any): DecalActor
    }
}

external open class DemoNetConnection : NetConnection {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DemoNetConnection
        fun Find(Outer: UObject, ResourceName: String): DemoNetConnection
        fun GetDefaultObject(): DemoNetConnection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DemoNetConnection
        fun C(Other: UObject): DemoNetConnection
        fun C(Other: Any): DemoNetConnection
    }
}

external open class PendingNetGame : UObject {
    constructor()
    constructor(Outer: UObject)
    open var NetDriver: NetDriver
    open var DemoNetDriver: DemoNetDriver

    companion object {
        fun Load(ResourceName: String): PendingNetGame
        fun Find(Outer: UObject, ResourceName: String): PendingNetGame
        fun GetDefaultObject(): PendingNetGame
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PendingNetGame
        fun C(Other: UObject): PendingNetGame
        fun C(Other: Any): PendingNetGame
    }
}

external open class DemoPendingNetGame : PendingNetGame {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DemoPendingNetGame
        fun Find(Outer: UObject, ResourceName: String): DemoPendingNetGame
        fun GetDefaultObject(): DemoPendingNetGame
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DemoPendingNetGame
        fun C(Other: UObject): DemoPendingNetGame
        fun C(Other: Any): DemoPendingNetGame
    }
}

external open class DestructibleInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DestructibleInterface
        fun Find(Outer: UObject, ResourceName: String): DestructibleInterface
        fun GetDefaultObject(): DestructibleInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DestructibleInterface
        fun C(Other: UObject): DestructibleInterface
        fun C(Other: Any): DestructibleInterface
    }
}

external open class TextureLODGroup {
    open var Group: String /* "TEXTUREGROUP_World" | "TEXTUREGROUP_WorldNormalMap" | "TEXTUREGROUP_WorldSpecular" | "TEXTUREGROUP_Character" | "TEXTUREGROUP_CharacterNormalMap" | "TEXTUREGROUP_CharacterSpecular" | "TEXTUREGROUP_Weapon" | "TEXTUREGROUP_WeaponNormalMap" | "TEXTUREGROUP_WeaponSpecular" | "TEXTUREGROUP_Vehicle" | "TEXTUREGROUP_VehicleNormalMap" | "TEXTUREGROUP_VehicleSpecular" | "TEXTUREGROUP_Cinematic" | "TEXTUREGROUP_Effects" | "TEXTUREGROUP_EffectsNotFiltered" | "TEXTUREGROUP_Skybox" | "TEXTUREGROUP_UI" | "TEXTUREGROUP_Lightmap" | "TEXTUREGROUP_RenderTarget" | "TEXTUREGROUP_MobileFlattened" | "TEXTUREGROUP_ProcBuilding_Face" | "TEXTUREGROUP_ProcBuilding_LightMap" | "TEXTUREGROUP_Shadowmap" | "TEXTUREGROUP_ColorLookupTable" | "TEXTUREGROUP_Terrain_Heightmap" | "TEXTUREGROUP_Terrain_Weightmap" | "TEXTUREGROUP_Bokeh" | "TEXTUREGROUP_IESLightProfile" | "TEXTUREGROUP_Pixels2D" | "TEXTUREGROUP_HierarchicalLOD" | "TEXTUREGROUP_Impostor" | "TEXTUREGROUP_ImpostorNormalDepth" | "TEXTUREGROUP_8BitData" | "TEXTUREGROUP_16BitData" | "TEXTUREGROUP_Project01" | "TEXTUREGROUP_Project02" | "TEXTUREGROUP_Project03" | "TEXTUREGROUP_Project04" | "TEXTUREGROUP_Project05" | "TEXTUREGROUP_Project06" | "TEXTUREGROUP_Project07" | "TEXTUREGROUP_Project08" | "TEXTUREGROUP_Project09" | "TEXTUREGROUP_Project10" | "TEXTUREGROUP_Project11" | "TEXTUREGROUP_Project12" | "TEXTUREGROUP_Project13" | "TEXTUREGROUP_Project14" | "TEXTUREGROUP_Project15" | "TEXTUREGROUP_Project16" | "TEXTUREGROUP_MAX" */
    open var LODBias: Number
    open var LODBias_Smaller: Number
    open var LODBias_Smallest: Number
    open var NumStreamedMips: Number
    open var MipGenSettings: String /* "TMGS_FromTextureGroup" | "TMGS_SimpleAverage" | "TMGS_Sharpen0" | "TMGS_Sharpen1" | "TMGS_Sharpen2" | "TMGS_Sharpen3" | "TMGS_Sharpen4" | "TMGS_Sharpen5" | "TMGS_Sharpen6" | "TMGS_Sharpen7" | "TMGS_Sharpen8" | "TMGS_Sharpen9" | "TMGS_Sharpen10" | "TMGS_NoMipmaps" | "TMGS_LeaveExistingMips" | "TMGS_Blur1" | "TMGS_Blur2" | "TMGS_Blur3" | "TMGS_Blur4" | "TMGS_Blur5" | "TMGS_Unfiltered" | "TMGS_Angular" | "TMGS_MAX" */
    open var MinLODSize: Number
    open var MaxLODSize: Number
    open var MaxLODSize_Smaller: Number
    open var MaxLODSize_Smallest: Number
    open var MaxLODSize_VT: Number
    open var OptionalLODBias: Number
    open var OptionalMaxLODSize: Number
    open var MinMagFilter: String
    open var MipFilter: String
    open var MipLoadOptions: String /* "Default" | "AllMips" | "OnlyFirstMip" | "ETextureMipLoadOptions_MAX" */
    open var HighPriorityLoad: Boolean
    open var DuplicateNonOptionalMips: Boolean
    open var Downscale: Number
    open var DownscaleOptions: String /* "Default" | "Unfiltered" | "SimpleAverage" | "Sharpen0" | "Sharpen1" | "Sharpen2" | "Sharpen3" | "Sharpen4" | "Sharpen5" | "Sharpen6" | "Sharpen7" | "Sharpen8" | "Sharpen9" | "Sharpen10" | "ETextureDownscaleOptions_MAX" */
    open var VirtualTextureTileCountBias: Number
    open var VirtualTextureTileSizeBias: Number
    open var LossyCompressionAmount: String /* "TLCA_Default" | "TLCA_None" | "TLCA_Lowest" | "TLCA_Low" | "TLCA_Medium" | "TLCA_High" | "TLCA_Highest" | "TLCA_MAX" */
    open fun clone(): TextureLODGroup

    companion object {
        fun C(Other: UObject): TextureLODGroup
        fun C(Other: Any): TextureLODGroup
    }
}

external open class TextureLODSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var TextureLODGroups: Array<TextureLODGroup>

    companion object {
        fun Load(ResourceName: String): TextureLODSettings
        fun Find(Outer: UObject, ResourceName: String): TextureLODSettings
        fun GetDefaultObject(): TextureLODSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextureLODSettings
        fun C(Other: UObject): TextureLODSettings
        fun C(Other: Any): TextureLODSettings
    }
}

external open class DPMatchingIfCondition {
    open var Operator: String
    open var Arg1: String
    open var Arg2: String
    open fun clone(): DPMatchingIfCondition

    companion object {
        fun C(Other: UObject): DPMatchingIfCondition
        fun C(Other: Any): DPMatchingIfCondition
    }
}

external open class DPMatchingRulestructBase {
    open var RuleName: String
    open var IfConditions: Array<DPMatchingIfCondition>
    open var AppendFragments: String
    open var SetUserVar: String
    open fun clone(): DPMatchingRulestructBase

    companion object {
        fun C(Other: UObject): DPMatchingRulestructBase
        fun C(Other: Any): DPMatchingRulestructBase
    }
}

external open class DPMatchingRulestructA : DPMatchingRulestructBase {
    open var OnTrue: Array<DPMatchingRulestructBase>
    open var OnFalse: Array<DPMatchingRulestructBase>
    override fun clone(): DPMatchingRulestructA

    companion object {
        fun C(Other: UObject): DPMatchingRulestructA
        fun C(Other: Any): DPMatchingRulestructA
    }
}

external open class DPMatchingRulestructB : DPMatchingRulestructBase {
    open var OnTrue: Array<DPMatchingRulestructA>
    open var OnFalse: Array<DPMatchingRulestructA>
    override fun clone(): DPMatchingRulestructB

    companion object {
        fun C(Other: UObject): DPMatchingRulestructB
        fun C(Other: Any): DPMatchingRulestructB
    }
}

external open class DPMatchingRulestructC : DPMatchingRulestructBase {
    open var OnTrue: Array<DPMatchingRulestructB>
    open var OnFalse: Array<DPMatchingRulestructB>
    override fun clone(): DPMatchingRulestructC

    companion object {
        fun C(Other: UObject): DPMatchingRulestructC
        fun C(Other: Any): DPMatchingRulestructC
    }
}

external open class DPMatchingRulestructD : DPMatchingRulestructBase {
    open var OnTrue: Array<DPMatchingRulestructC>
    open var OnFalse: Array<DPMatchingRulestructC>
    override fun clone(): DPMatchingRulestructD

    companion object {
        fun C(Other: UObject): DPMatchingRulestructD
        fun C(Other: Any): DPMatchingRulestructD
    }
}

external open class DPMatchingRulestructE : DPMatchingRulestructBase {
    open var OnTrue: Array<DPMatchingRulestructD>
    open var OnFalse: Array<DPMatchingRulestructD>
    override fun clone(): DPMatchingRulestructE

    companion object {
        fun C(Other: UObject): DPMatchingRulestructE
        fun C(Other: Any): DPMatchingRulestructE
    }
}

external open class DPMatchingRulestruct : DPMatchingRulestructBase {
    open var OnTrue: Array<DPMatchingRulestructE>
    open var OnFalse: Array<DPMatchingRulestructE>
    override fun clone(): DPMatchingRulestruct

    companion object {
        fun C(Other: UObject): DPMatchingRulestruct
        fun C(Other: Any): DPMatchingRulestruct
    }
}

external open class DeviceProfile : TextureLODSettings {
    constructor()
    constructor(Outer: UObject)
    open var DeviceType: String
    open var BaseProfileName: String
    open var Parent: DeviceProfile
    open var CVars: Array<String>
    open var MatchingRules: Array<DPMatchingRulestruct>

    companion object {
        fun Load(ResourceName: String): DeviceProfile
        fun Find(Outer: UObject, ResourceName: String): DeviceProfile
        fun GetDefaultObject(): DeviceProfile
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DeviceProfile
        fun C(Other: UObject): DeviceProfile
        fun C(Other: Any): DeviceProfile
    }
}

external open class DeviceProfileFragment : UObject {
    constructor()
    constructor(Outer: UObject)
    open var CVars: Array<String>

    companion object {
        fun Load(ResourceName: String): DeviceProfileFragment
        fun Find(Outer: UObject, ResourceName: String): DeviceProfileFragment
        fun GetDefaultObject(): DeviceProfileFragment
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DeviceProfileFragment
        fun C(Other: UObject): DeviceProfileFragment
        fun C(Other: Any): DeviceProfileFragment
    }
}

external open class DeviceProfileManager : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Profiles: Array<DeviceProfile>
    open var BackupProfiles: Array<DeviceProfile>

    companion object {
        fun Load(ResourceName: String): DeviceProfileManager
        fun Find(Outer: UObject, ResourceName: String): DeviceProfileManager
        fun GetDefaultObject(): DeviceProfileManager
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DeviceProfileManager
        fun C(Other: UObject): DeviceProfileManager
        fun C(Other: Any): DeviceProfileManager
    }
}

external open class Light(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var LightComponent: LightComponent
    open var bEnabled: Boolean
    open fun ToggleEnabled()
    open fun SetLightFunctionScale(NewLightFunctionScale: Vector)
    open fun SetLightFunctionMaterial(NewLightFunctionMaterial: MaterialInterface)
    open fun SetLightFunctionFadeDistance(NewLightFunctionFadeDistance: Number)
    open fun SetLightColor(NewLightColor: LinearColor)
    open fun SetEnabled(bSetEnabled: Boolean)
    open fun SetCastShadows(bNewValue: Boolean)
    open fun SetBrightness(NewBrightness: Number)
    open fun SetAffectTranslucentLighting(bNewValue: Boolean)
    open fun OnRep_bEnabled()
    open fun IsEnabled(): Boolean
    open fun GetLightColor(): LinearColor
    open fun GetBrightness(): Number

    companion object {
        fun GetDefaultObject(): Light
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Light
        fun C(Other: UObject): Light
        fun C(Other: Any): Light
    }
}

external open class DirectionalLight(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Light {
    open var ArrowComponent: ArrowComponent
    open var DirectionalLightComponent: DirectionalLightComponent

    companion object {
        fun GetDefaultObject(): DirectionalLight
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DirectionalLight
        fun C(Other: UObject): DirectionalLight
        fun C(Other: Any): DirectionalLight
    }
}

external open class DistributionFloatConstant : DistributionFloat {
    constructor()
    constructor(Outer: UObject)
    open var Constant: Number

    companion object {
        fun Load(ResourceName: String): DistributionFloatConstant
        fun Find(Outer: UObject, ResourceName: String): DistributionFloatConstant
        fun GetDefaultObject(): DistributionFloatConstant
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DistributionFloatConstant
        fun C(Other: UObject): DistributionFloatConstant
        fun C(Other: Any): DistributionFloatConstant
    }
}

external open class DistributionFloatConstantCurve : DistributionFloat {
    constructor()
    constructor(Outer: UObject)
    open var ConstantCurve: InterpCurveFloat

    companion object {
        fun Load(ResourceName: String): DistributionFloatConstantCurve
        fun Find(Outer: UObject, ResourceName: String): DistributionFloatConstantCurve
        fun GetDefaultObject(): DistributionFloatConstantCurve
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DistributionFloatConstantCurve
        fun C(Other: UObject): DistributionFloatConstantCurve
        fun C(Other: Any): DistributionFloatConstantCurve
    }
}

external object DistributionParamMode {
    var DPM_Normal: String /* "DPM_Normal" */
    var DPM_Abs: String /* "DPM_Abs" */
    var DPM_Direct: String /* "DPM_Direct" */
    var DPM_MAX: String /* "DPM_MAX" */
}

external open class DistributionFloatParameterBase : DistributionFloatConstant {
    constructor()
    constructor(Outer: UObject)
    open var ParameterName: String
    open var MinInput: Number
    open var MaxInput: Number
    open var MinOutput: Number
    open var MaxOutput: Number
    open var ParamMode: String /* "DPM_Normal" | "DPM_Abs" | "DPM_Direct" | "DPM_MAX" */

    companion object {
        fun Load(ResourceName: String): DistributionFloatParameterBase
        fun Find(Outer: UObject, ResourceName: String): DistributionFloatParameterBase
        fun GetDefaultObject(): DistributionFloatParameterBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DistributionFloatParameterBase
        fun C(Other: UObject): DistributionFloatParameterBase
        fun C(Other: Any): DistributionFloatParameterBase
    }
}

external open class DistributionFloatParticleParameter : DistributionFloatParameterBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DistributionFloatParticleParameter
        fun Find(Outer: UObject, ResourceName: String): DistributionFloatParticleParameter
        fun GetDefaultObject(): DistributionFloatParticleParameter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DistributionFloatParticleParameter
        fun C(Other: UObject): DistributionFloatParticleParameter
        fun C(Other: Any): DistributionFloatParticleParameter
    }
}

external open class DistributionFloatUniform : DistributionFloat {
    constructor()
    constructor(Outer: UObject)
    open var Min: Number
    open var Max: Number

    companion object {
        fun Load(ResourceName: String): DistributionFloatUniform
        fun Find(Outer: UObject, ResourceName: String): DistributionFloatUniform
        fun GetDefaultObject(): DistributionFloatUniform
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DistributionFloatUniform
        fun C(Other: UObject): DistributionFloatUniform
        fun C(Other: Any): DistributionFloatUniform
    }
}

external open class InterpCurvePointVector2D {
    open var InVal: Number
    open var OutVal: Vector2D
    open var ArriveTangent: Vector2D
    open var LeaveTangent: Vector2D
    open var InterpMode: String /* "CIM_Linear" | "CIM_CurveAuto" | "CIM_Constant" | "CIM_CurveUser" | "CIM_CurveBreak" | "CIM_CurveAutoClamped" | "CIM_MAX" */
    open fun clone(): InterpCurvePointVector2D

    companion object {
        fun C(Other: UObject): InterpCurvePointVector2D
        fun C(Other: Any): InterpCurvePointVector2D
    }
}

external open class InterpCurveVector2D {
    open var Points: Array<InterpCurvePointVector2D>
    open var bIsLooped: Boolean
    open var LoopKeyOffset: Number
    open fun clone(): InterpCurveVector2D

    companion object {
        fun C(Other: UObject): InterpCurveVector2D
        fun C(Other: Any): InterpCurveVector2D
    }
}

external open class DistributionFloatUniformCurve : DistributionFloat {
    constructor()
    constructor(Outer: UObject)
    open var ConstantCurve: InterpCurveVector2D

    companion object {
        fun Load(ResourceName: String): DistributionFloatUniformCurve
        fun Find(Outer: UObject, ResourceName: String): DistributionFloatUniformCurve
        fun GetDefaultObject(): DistributionFloatUniformCurve
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DistributionFloatUniformCurve
        fun C(Other: UObject): DistributionFloatUniformCurve
        fun C(Other: Any): DistributionFloatUniformCurve
    }
}

external object EDistributionVectorLockFlags {
    var EDVLF_None: String /* "EDVLF_None" */
    var EDVLF_XY: String /* "EDVLF_XY" */
    var EDVLF_XZ: String /* "EDVLF_XZ" */
    var EDVLF_YZ: String /* "EDVLF_YZ" */
    var EDVLF_XYZ: String /* "EDVLF_XYZ" */
    var EDVLF_MAX: String /* "EDVLF_MAX" */
}

external open class DistributionVectorConstant : DistributionVector {
    constructor()
    constructor(Outer: UObject)
    open var Constant: Vector
    open var bLockAxes: Boolean
    open var LockedAxes: String /* "EDVLF_None" | "EDVLF_XY" | "EDVLF_XZ" | "EDVLF_YZ" | "EDVLF_XYZ" | "EDVLF_MAX" */

    companion object {
        fun Load(ResourceName: String): DistributionVectorConstant
        fun Find(Outer: UObject, ResourceName: String): DistributionVectorConstant
        fun GetDefaultObject(): DistributionVectorConstant
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DistributionVectorConstant
        fun C(Other: UObject): DistributionVectorConstant
        fun C(Other: Any): DistributionVectorConstant
    }
}

external open class DistributionVectorConstantCurve : DistributionVector {
    constructor()
    constructor(Outer: UObject)
    open var ConstantCurve: InterpCurveVector
    open var bLockAxes: Boolean
    open var LockedAxes: String /* "EDVLF_None" | "EDVLF_XY" | "EDVLF_XZ" | "EDVLF_YZ" | "EDVLF_XYZ" | "EDVLF_MAX" */

    companion object {
        fun Load(ResourceName: String): DistributionVectorConstantCurve
        fun Find(Outer: UObject, ResourceName: String): DistributionVectorConstantCurve
        fun GetDefaultObject(): DistributionVectorConstantCurve
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DistributionVectorConstantCurve
        fun C(Other: UObject): DistributionVectorConstantCurve
        fun C(Other: Any): DistributionVectorConstantCurve
    }
}

external open class DistributionVectorParameterBase : DistributionVectorConstant {
    constructor()
    constructor(Outer: UObject)
    open var ParameterName: String
    open var MinInput: Vector
    open var MaxInput: Vector
    open var MinOutput: Vector
    open var MaxOutput: Vector
    open var ParamModes: String /* "DPM_Normal" | "DPM_Abs" | "DPM_Direct" | "DPM_MAX" */

    companion object {
        fun Load(ResourceName: String): DistributionVectorParameterBase
        fun Find(Outer: UObject, ResourceName: String): DistributionVectorParameterBase
        fun GetDefaultObject(): DistributionVectorParameterBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DistributionVectorParameterBase
        fun C(Other: UObject): DistributionVectorParameterBase
        fun C(Other: Any): DistributionVectorParameterBase
    }
}

external open class DistributionVectorParticleParameter : DistributionVectorParameterBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DistributionVectorParticleParameter
        fun Find(Outer: UObject, ResourceName: String): DistributionVectorParticleParameter
        fun GetDefaultObject(): DistributionVectorParticleParameter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DistributionVectorParticleParameter
        fun C(Other: UObject): DistributionVectorParticleParameter
        fun C(Other: Any): DistributionVectorParticleParameter
    }
}

external object EDistributionVectorMirrorFlags {
    var EDVMF_Same: String /* "EDVMF_Same" */
    var EDVMF_Different: String /* "EDVMF_Different" */
    var EDVMF_Mirror: String /* "EDVMF_Mirror" */
    var EDVMF_MAX: String /* "EDVMF_MAX" */
}

external open class DistributionVectorUniform : DistributionVector {
    constructor()
    constructor(Outer: UObject)
    open var Max: Vector
    open var Min: Vector
    open var bLockAxes: Boolean
    open var LockedAxes: String /* "EDVLF_None" | "EDVLF_XY" | "EDVLF_XZ" | "EDVLF_YZ" | "EDVLF_XYZ" | "EDVLF_MAX" */
    open var MirrorFlags: String /* "EDVMF_Same" | "EDVMF_Different" | "EDVMF_Mirror" | "EDVMF_MAX" */
    open var bUseExtremes: Boolean

    companion object {
        fun Load(ResourceName: String): DistributionVectorUniform
        fun Find(Outer: UObject, ResourceName: String): DistributionVectorUniform
        fun GetDefaultObject(): DistributionVectorUniform
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DistributionVectorUniform
        fun C(Other: UObject): DistributionVectorUniform
        fun C(Other: Any): DistributionVectorUniform
    }
}

external open class TwoVectors {
    open var v1: Vector
    open var v2: Vector
    open fun clone(): TwoVectors

    companion object {
        fun C(Other: UObject): TwoVectors
        fun C(Other: Any): TwoVectors
    }
}

external open class InterpCurvePointTwoVectors {
    open var InVal: Number
    open var OutVal: TwoVectors
    open var ArriveTangent: TwoVectors
    open var LeaveTangent: TwoVectors
    open var InterpMode: String /* "CIM_Linear" | "CIM_CurveAuto" | "CIM_Constant" | "CIM_CurveUser" | "CIM_CurveBreak" | "CIM_CurveAutoClamped" | "CIM_MAX" */
    open fun clone(): InterpCurvePointTwoVectors

    companion object {
        fun C(Other: UObject): InterpCurvePointTwoVectors
        fun C(Other: Any): InterpCurvePointTwoVectors
    }
}

external open class InterpCurveTwoVectors {
    open var Points: Array<InterpCurvePointTwoVectors>
    open var bIsLooped: Boolean
    open var LoopKeyOffset: Number
    open fun clone(): InterpCurveTwoVectors

    companion object {
        fun C(Other: UObject): InterpCurveTwoVectors
        fun C(Other: Any): InterpCurveTwoVectors
    }
}

external open class DistributionVectorUniformCurve : DistributionVector {
    constructor()
    constructor(Outer: UObject)
    open var ConstantCurve: InterpCurveTwoVectors
    open var bLockAxes1: Boolean
    open var bLockAxes2: Boolean
    open var LockedAxes: String /* "EDVLF_None" | "EDVLF_XY" | "EDVLF_XZ" | "EDVLF_YZ" | "EDVLF_XYZ" | "EDVLF_MAX" */
    open var MirrorFlags: String /* "EDVMF_Same" | "EDVMF_Different" | "EDVMF_Mirror" | "EDVMF_MAX" */
    open var bUseExtremes: Boolean

    companion object {
        fun Load(ResourceName: String): DistributionVectorUniformCurve
        fun Find(Outer: UObject, ResourceName: String): DistributionVectorUniformCurve
        fun GetDefaultObject(): DistributionVectorUniformCurve
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DistributionVectorUniformCurve
        fun C(Other: UObject): DistributionVectorUniformCurve
        fun C(Other: Any): DistributionVectorUniformCurve
    }
}

external open class MaterialSpriteElement {
    open var Material: MaterialInterface
    open var DistanceToOpacityCurve: CurveFloat
    open var bSizeIsInScreenSpace: Boolean
    open var BaseSizeX: Number
    open var BaseSizeY: Number
    open var DistanceToSizeCurve: CurveFloat
    open fun clone(): MaterialSpriteElement

    companion object {
        fun C(Other: UObject): MaterialSpriteElement
        fun C(Other: Any): MaterialSpriteElement
    }
}

external open class MaterialBillboardComponent : PrimitiveComponent {
    constructor()
    constructor(Outer: UObject)
    open var Elements: Array<MaterialSpriteElement>
    open fun SetElements(NewElements: Array<MaterialSpriteElement>)
    open fun AddElement(Material: MaterialInterface, DistanceToOpacityCurve: CurveFloat, bSizeIsInScreenSpace: Boolean, BaseSizeX: Number, BaseSizeY: Number, DistanceToSizeCurve: CurveFloat)

    companion object {
        fun Load(ResourceName: String): MaterialBillboardComponent
        fun Find(Outer: UObject, ResourceName: String): MaterialBillboardComponent
        fun GetDefaultObject(): MaterialBillboardComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialBillboardComponent
        fun C(Other: UObject): MaterialBillboardComponent
        fun C(Other: Any): MaterialBillboardComponent
    }
}

external open class DocumentationActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var DocumentLink: String
    open var Billboard: MaterialBillboardComponent

    companion object {
        fun GetDefaultObject(): DocumentationActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DocumentationActor
        fun C(Other: UObject): DocumentationActor
        fun C(Other: Any): DocumentationActor
    }
}

external open class DPICustomScalingRule : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DPICustomScalingRule
        fun Find(Outer: UObject, ResourceName: String): DPICustomScalingRule
        fun GetDefaultObject(): DPICustomScalingRule
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DPICustomScalingRule
        fun C(Other: UObject): DPICustomScalingRule
        fun C(Other: Any): DPICustomScalingRule
    }
}

external open class DrawSphereComponent : SphereComponent {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DrawSphereComponent
        fun Find(Outer: UObject, ResourceName: String): DrawSphereComponent
        fun GetDefaultObject(): DrawSphereComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DrawSphereComponent
        fun C(Other: UObject): DrawSphereComponent
        fun C(Other: Any): DrawSphereComponent
    }
}

external open class GraphNodeContextMenuContext : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Blueprint: Blueprint
    open var Graph: EdGraph
    open var UNode: EdGraphNode
    open var bIsDebugging: Boolean

    companion object {
        fun Load(ResourceName: String): GraphNodeContextMenuContext
        fun Find(Outer: UObject, ResourceName: String): GraphNodeContextMenuContext
        fun GetDefaultObject(): GraphNodeContextMenuContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GraphNodeContextMenuContext
        fun C(Other: UObject): GraphNodeContextMenuContext
        fun C(Other: Any): GraphNodeContextMenuContext
    }
}

external open class EdGraphNode_Documentation : EdGraphNode {
    constructor()
    constructor(Outer: UObject)
    open var Link: String
    open var Excerpt: String

    companion object {
        fun Load(ResourceName: String): EdGraphNode_Documentation
        fun Find(Outer: UObject, ResourceName: String): EdGraphNode_Documentation
        fun GetDefaultObject(): EdGraphNode_Documentation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EdGraphNode_Documentation
        fun C(Other: UObject): EdGraphNode_Documentation
        fun C(Other: Any): EdGraphNode_Documentation
    }
}

external open class ViewModeUtils : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ViewModeUtils
        fun Find(Outer: UObject, ResourceName: String): ViewModeUtils
        fun GetDefaultObject(): ViewModeUtils
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ViewModeUtils
        fun C(Other: UObject): ViewModeUtils
        fun C(Other: Any): ViewModeUtils
    }
}

external open class EngineBaseTypes : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EngineBaseTypes
        fun Find(Outer: UObject, ResourceName: String): EngineBaseTypes
        fun GetDefaultObject(): EngineBaseTypes
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EngineBaseTypes
        fun C(Other: UObject): EngineBaseTypes
        fun C(Other: Any): EngineBaseTypes
    }
}

external open class EngineElementsLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EngineElementsLibrary
        fun Find(Outer: UObject, ResourceName: String): EngineElementsLibrary
        fun GetDefaultObject(): EngineElementsLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EngineElementsLibrary
        fun K2_AcquireEditorSMInstanceElementHandle(ISMComponent: InstancedStaticMeshComponent, InstanceIndex: Number, bAllowCreate: Boolean): ScriptTypedElementHandle
        fun K2_AcquireEditorObjectElementHandle(UObject: UObject, bAllowCreate: Boolean): ScriptTypedElementHandle
        fun K2_AcquireEditorComponentElementHandle(Component: ActorComponent, bAllowCreate: Boolean): ScriptTypedElementHandle
        fun K2_AcquireEditorActorElementHandle(Actor: Actor, bAllowCreate: Boolean): ScriptTypedElementHandle
        fun C(Other: UObject): EngineElementsLibrary
        fun C(Other: Any): EngineElementsLibrary
    }
}

external open class EngineHandlerComponentFactory : HandlerComponentFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EngineHandlerComponentFactory
        fun Find(Outer: UObject, ResourceName: String): EngineHandlerComponentFactory
        fun GetDefaultObject(): EngineHandlerComponentFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EngineHandlerComponentFactory
        fun C(Other: UObject): EngineHandlerComponentFactory
        fun C(Other: Any): EngineHandlerComponentFactory
    }
}

external open class EngineMessage : LocalMessage {
    constructor()
    constructor(Outer: UObject)
    open var FailedPlaceMessage: String
    open var MaxedOutMessage: String
    open var EnteredMessage: String
    open var LeftMessage: String
    open var GlobalNameChange: String
    open var SpecEnteredMessage: String
    open var NewPlayerMessage: String
    open var NewSpecMessage: String

    companion object {
        fun Load(ResourceName: String): EngineMessage
        fun Find(Outer: UObject, ResourceName: String): EngineMessage
        fun GetDefaultObject(): EngineMessage
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EngineMessage
        fun C(Other: UObject): EngineMessage
        fun C(Other: Any): EngineMessage
    }
}

external open class EngineTypes : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EngineTypes
        fun Find(Outer: UObject, ResourceName: String): EngineTypes
        fun GetDefaultObject(): EngineTypes
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EngineTypes
        fun C(Other: UObject): EngineTypes
        fun C(Other: Any): EngineTypes
    }
}

external open class ExponentialHeightFogData {
    open var FogDensity: Number
    open var FogHeightFalloff: Number
    open var FogHeightOffset: Number
    open fun clone(): ExponentialHeightFogData

    companion object {
        fun C(Other: UObject): ExponentialHeightFogData
        fun C(Other: Any): ExponentialHeightFogData
    }
}

external open class ExponentialHeightFogComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var FogDensity: Number
    open var FogHeightFalloff: Number
    open var SecondFogData: ExponentialHeightFogData
    open var FogInscatteringColor: LinearColor
    open var FogInscatteringLuminance: LinearColor
    open var InscatteringColorCubemap: TextureCube
    open var InscatteringColorCubemapAngle: Number
    open var InscatteringTextureTint: LinearColor
    open var FullyDirectionalInscatteringColorDistance: Number
    open var NonDirectionalInscatteringColorDistance: Number
    open var DirectionalInscatteringExponent: Number
    open var DirectionalInscatteringStartDistance: Number
    open var DirectionalInscatteringColor: LinearColor
    open var DirectionalInscatteringLuminance: LinearColor
    open var FogMaxOpacity: Number
    open var StartDistance: Number
    open var FogCutoffDistance: Number
    open var bEnableVolumetricFog: Boolean
    open var VolumetricFogScatteringDistribution: Number
    open var VolumetricFogAlbedo: Color
    open var VolumetricFogEmissive: LinearColor
    open var VolumetricFogExtinctionScale: Number
    open var VolumetricFogDistance: Number
    open var VolumetricFogStaticLightingScatteringIntensity: Number
    open var bOverrideLightColorsWithFogInscatteringColors: Boolean
    open fun SetVolumetricFogScatteringDistribution(NewValue: Number)
    open fun SetVolumetricFogExtinctionScale(NewValue: Number)
    open fun SetVolumetricFogEmissive(NewValue: LinearColor)
    open fun SetVolumetricFogDistance(NewValue: Number)
    open fun SetVolumetricFogAlbedo(NewValue: Color)
    open fun SetVolumetricFog(bNewValue: Boolean)
    open fun SetStartDistance(Value: Number)
    open fun SetNonDirectionalInscatteringColorDistance(Value: Number)
    open fun SetInscatteringTextureTint(Value: LinearColor)
    open fun SetInscatteringColorCubemapAngle(Value: Number)
    open fun SetInscatteringColorCubemap(Value: TextureCube)
    open fun SetFullyDirectionalInscatteringColorDistance(Value: Number)
    open fun SetFogMaxOpacity(Value: Number)
    open fun SetFogInscatteringColor(Value: LinearColor)
    open fun SetFogHeightFalloff(Value: Number)
    open fun SetFogDensity(Value: Number)
    open fun SetFogCutoffDistance(Value: Number)
    open fun SetDirectionalInscatteringStartDistance(Value: Number)
    open fun SetDirectionalInscatteringExponent(Value: Number)
    open fun SetDirectionalInscatteringColor(Value: LinearColor)

    companion object {
        fun Load(ResourceName: String): ExponentialHeightFogComponent
        fun Find(Outer: UObject, ResourceName: String): ExponentialHeightFogComponent
        fun GetDefaultObject(): ExponentialHeightFogComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ExponentialHeightFogComponent
        fun C(Other: UObject): ExponentialHeightFogComponent
        fun C(Other: Any): ExponentialHeightFogComponent
    }
}

external open class ExponentialHeightFog(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Info {
    open var Component: ExponentialHeightFogComponent
    open var bEnabled: Boolean
    open fun OnRep_bEnabled()

    companion object {
        fun GetDefaultObject(): ExponentialHeightFog
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ExponentialHeightFog
        fun C(Other: UObject): ExponentialHeightFog
        fun C(Other: Any): ExponentialHeightFog
    }
}

external open class FloatingPawnMovement : PawnMovementComponent {
    constructor()
    constructor(Outer: UObject)
    open var MaxSpeed: Number
    open var Acceleration: Number
    open var Deceleration: Number
    open var TurningBoost: Number
    open var bPositionCorrected: Boolean

    companion object {
        fun Load(ResourceName: String): FloatingPawnMovement
        fun Find(Outer: UObject, ResourceName: String): FloatingPawnMovement
        fun GetDefaultObject(): FloatingPawnMovement
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FloatingPawnMovement
        fun C(Other: UObject): FloatingPawnMovement
        fun C(Other: Any): FloatingPawnMovement
    }
}

external object EFontLayoutMethod {
    var Metrics: String /* "Metrics" */
    var BoundingBox: String /* "BoundingBox" */
    var EFontLayoutMethod_MAX: String /* "EFontLayoutMethod_MAX" */
}

external open class FontFace : UObject {
    constructor()
    constructor(Outer: UObject)
    open var SourceFilename: String
    open var Hinting: String /* "Default" | "Auto" | "AutoLight" | "Monochrome" | "None" | "EFontHinting_MAX" */
    open var LoadingPolicy: String /* "LazyLoad" | "Stream" | "Inline" | "EFontLoadingPolicy_MAX" */
    open var LayoutMethod: String /* "Metrics" | "BoundingBox" | "EFontLayoutMethod_MAX" */
    open var FontFaceData: Array<Number>
    open var SubFaces: Array<String>

    companion object {
        fun Load(ResourceName: String): FontFace
        fun Find(Outer: UObject, ResourceName: String): FontFace
        fun GetDefaultObject(): FontFace
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FontFace
        fun C(Other: UObject): FontFace
        fun C(Other: Any): FontFace
    }
}

external open class GameEngine : Engine {
    constructor()
    constructor(Outer: UObject)
    open var MaxDeltaTime: Number
    open var ServerFlushLogInterval: Number
    open var GameInstance: GameInstance

    companion object {
        fun Load(ResourceName: String): GameEngine
        fun Find(Outer: UObject, ResourceName: String): GameEngine
        fun GetDefaultObject(): GameEngine
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameEngine
        fun C(Other: UObject): GameEngine
        fun C(Other: Any): GameEngine
    }
}

external interface `T$684` {
    var Key: String
    var Value: String
}

external interface `T$685` {
    var OutActors: Array<Actor>
}

external interface `T$686` {
    var OutActors: Array<Actor>
}

external interface `T$687` {
    var OutActors: Array<Actor>
}

external interface `T$688` {
    var OutActors: Array<Actor>
}

external interface `T$689` {
    var Center: Vector
    var BoxExtent: Vector
}

external interface `T$690` {
    var Seconds: Number
    var PartialSeconds: Number
}

external interface `T$691` {
    var OutHit: HitResult
    var OutPathPositions: Array<Vector>
    var OutLastTraceDestination: Vector
    var `$`: Boolean
}

external interface `T$692` {
    var OutHit: HitResult
    var OutPathPositions: Array<Vector>
    var OutLastTraceDestination: Vector
    var `$`: Boolean
}

external open class GameplayStatics : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GameplayStatics
        fun Find(Outer: UObject, ResourceName: String): GameplayStatics
        fun GetDefaultObject(): GameplayStatics
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayStatics
        fun UnRetainAllSoundsInSoundClass(InSoundClass: SoundClass)
        fun UnloadStreamLevelBySoftObjectPtr(WorldContextObject: UObject, Level: World, LatentInfo: LatentActionInfo, bShouldBlockOnUnload: Boolean)
        fun UnloadStreamLevel(WorldContextObject: UObject, LevelName: String, LatentInfo: LatentActionInfo, bShouldBlockOnUnload: Boolean)
        fun SuggestProjectileVelocity_CustomArc(WorldContextObject: UObject, OutLaunchVelocity: Vector = definedExternally, StartPos: Vector = definedExternally, EndPos: Vector = definedExternally, OverrideGravityZ: Number = definedExternally, ArcParam: Number = definedExternally): `T$353`
        fun SpawnSoundAttached(Sound: SoundBase, AttachToComponent: SceneComponent, AttachPointName: String, Location: Vector, Rotation: Rotator, LocationType: String /* "KeepRelativeOffset" | "KeepWorldPosition" | "SnapToTarget" | "SnapToTargetIncludingScale" | "EAttachLocation_MAX" */, bStopWhenAttachedToDestroyed: Boolean, VolumeMultiplier: Number, PitchMultiplier: Number, StartTime: Number, AttenuationSettings: SoundAttenuation, ConcurrencySettings: SoundConcurrency, bAutoDestroy: Boolean): AudioComponent
        fun SpawnSoundAtLocation(WorldContextObject: UObject, Sound: SoundBase, Location: Vector, Rotation: Rotator, VolumeMultiplier: Number, PitchMultiplier: Number, StartTime: Number, AttenuationSettings: SoundAttenuation, ConcurrencySettings: SoundConcurrency, bAutoDestroy: Boolean): AudioComponent
        fun SpawnSound2D(WorldContextObject: UObject, Sound: SoundBase, VolumeMultiplier: Number, PitchMultiplier: Number, StartTime: Number, ConcurrencySettings: SoundConcurrency, bPersistAcrossLevelTransition: Boolean, bAutoDestroy: Boolean): AudioComponent
        fun SpawnObject(ObjectClass: UnrealEngineClass, Outer: UObject): UObject
        fun SpawnForceFeedbackAttached(ForceFeedbackEffect: ForceFeedbackEffect, AttachToComponent: SceneComponent, AttachPointName: String, Location: Vector, Rotation: Rotator, LocationType: String /* "KeepRelativeOffset" | "KeepWorldPosition" | "SnapToTarget" | "SnapToTargetIncludingScale" | "EAttachLocation_MAX" */, bStopWhenAttachedToDestroyed: Boolean, bLooping: Boolean, IntensityMultiplier: Number, StartTime: Number, AttenuationSettings: ForceFeedbackAttenuation, bAutoDestroy: Boolean): ForceFeedbackComponent
        fun SpawnForceFeedbackAtLocation(WorldContextObject: UObject, ForceFeedbackEffect: ForceFeedbackEffect, Location: Vector, Rotation: Rotator, bLooping: Boolean, IntensityMultiplier: Number, StartTime: Number, AttenuationSettings: ForceFeedbackAttenuation, bAutoDestroy: Boolean): ForceFeedbackComponent
        fun SpawnEmitterAttached(EmitterTemplate: ParticleSystem, AttachToComponent: SceneComponent, AttachPointName: String, Location: Vector, Rotation: Rotator, Scale: Vector, LocationType: String /* "KeepRelativeOffset" | "KeepWorldPosition" | "SnapToTarget" | "SnapToTargetIncludingScale" | "EAttachLocation_MAX" */, bAutoDestroy: Boolean, PoolingMethod: String /* "None" | "AutoRelease" | "ManualRelease" | "ManualRelease_OnComplete" | "FreeInPool" | "EPSCPoolMethod_MAX" */, bAutoActivate: Boolean): ParticleSystemComponent
        fun SpawnEmitterAtLocation(WorldContextObject: UObject, EmitterTemplate: ParticleSystem, Location: Vector, Rotation: Rotator, Scale: Vector, bAutoDestroy: Boolean, PoolingMethod: String /* "None" | "AutoRelease" | "ManualRelease" | "ManualRelease_OnComplete" | "FreeInPool" | "EPSCPoolMethod_MAX" */, bAutoActivateSystem: Boolean): ParticleSystemComponent
        fun SpawnDialogueAttached(Dialogue: DialogueWave, Context: DialogueContext, AttachToComponent: SceneComponent, AttachPointName: String, Location: Vector, Rotation: Rotator, LocationType: String /* "KeepRelativeOffset" | "KeepWorldPosition" | "SnapToTarget" | "SnapToTargetIncludingScale" | "EAttachLocation_MAX" */, bStopWhenAttachedToDestroyed: Boolean, VolumeMultiplier: Number, PitchMultiplier: Number, StartTime: Number, AttenuationSettings: SoundAttenuation, bAutoDestroy: Boolean): AudioComponent
        fun SpawnDialogueAtLocation(WorldContextObject: UObject, Dialogue: DialogueWave, Context: DialogueContext, Location: Vector, Rotation: Rotator, VolumeMultiplier: Number, PitchMultiplier: Number, StartTime: Number, AttenuationSettings: SoundAttenuation, bAutoDestroy: Boolean): AudioComponent
        fun SpawnDialogue2D(WorldContextObject: UObject, Dialogue: DialogueWave, Context: DialogueContext, VolumeMultiplier: Number, PitchMultiplier: Number, StartTime: Number, bAutoDestroy: Boolean): AudioComponent
        fun SpawnDecalAttached(DecalMaterial: MaterialInterface, DecalSize: Vector, AttachToComponent: SceneComponent, AttachPointName: String, Location: Vector, Rotation: Rotator, LocationType: String /* "KeepRelativeOffset" | "KeepWorldPosition" | "SnapToTarget" | "SnapToTargetIncludingScale" | "EAttachLocation_MAX" */, LifeSpan: Number): DecalComponent
        fun SpawnDecalAtLocation(WorldContextObject: UObject, DecalMaterial: MaterialInterface, DecalSize: Vector, Location: Vector, Rotation: Rotator, LifeSpan: Number): DecalComponent
        fun SetWorldOriginLocation(WorldContextObject: UObject, NewLocation: IntVector)
        fun SetViewportMouseCaptureMode(WorldContextObject: UObject, MouseCaptureMode: String /* "NoCapture" | "CapturePermanently" | "CapturePermanently_IncludingInitialMouseDown" | "CaptureDuringMouseDown" | "CaptureDuringRightMouseDown" | "EMouseCaptureMode_MAX" */)
        fun SetSubtitlesEnabled(bEnabled: Boolean)
        fun SetSoundMixClassOverride(WorldContextObject: UObject, InSoundMixModifier: SoundMix, InSoundClass: SoundClass, Volume: Number, Pitch: Number, FadeInTime: Number, bApplyToChildren: Boolean)
        fun SetSoundClassDistanceScale(WorldContextObject: UObject, SoundClass: SoundClass, DistanceAttenuationScale: Number, TimeSec: Number)
        fun SetPlayerControllerID(Player: PlayerController, ControllerId: Number)
        fun SetMaxAudioChannelsScaled(WorldContextObject: UObject, MaxChannelCountScale: Number)
        fun SetGlobalTimeDilation(WorldContextObject: UObject, TimeDilation: Number)
        fun SetGlobalPitchModulation(WorldContextObject: UObject, PitchModulation: Number, TimeSec: Number)
        fun SetGlobalListenerFocusParameters(WorldContextObject: UObject, FocusAzimuthScale: Number, NonFocusAzimuthScale: Number, FocusDistanceScale: Number, NonFocusDistanceScale: Number, FocusVolumeScale: Number, NonFocusVolumeScale: Number, FocusPriorityScale: Number, NonFocusPriorityScale: Number)
        fun SetGamePaused(WorldContextObject: UObject, bPaused: Boolean): Boolean
        fun SetForceDisableSplitscreen(WorldContextObject: UObject, bDisable: Boolean)
        fun SetEnableWorldRendering(WorldContextObject: UObject, bEnable: Boolean)
        fun SetBaseSoundMix(WorldContextObject: UObject, InSoundMix: SoundMix)
        fun SaveGameToSlot(SaveGameObject: SaveGame, SlotName: String, UserIndex: Number): Boolean
        fun RemovePlayer(Player: PlayerController, bDestroyPawn: Boolean)
        fun RebaseZeroOriginOntoLocal(WorldContextObject: UObject, WorldLocation: Vector): Vector
        fun RebaseLocalOriginOntoZero(WorldContextObject: UObject, WorldLocation: Vector): Vector
        fun PushSoundMixModifier(WorldContextObject: UObject, InSoundMixModifier: SoundMix)
        fun ProjectWorldToScreen(Player: PlayerController, WorldPosition: Vector, ScreenPosition: Vector2D = definedExternally, bPlayerViewportRelative: Boolean = definedExternally): `T$279`
        fun PrimeSound(InSound: SoundBase)
        fun PrimeAllSoundsInSoundClass(InSoundClass: SoundClass)
        fun PopSoundMixModifier(WorldContextObject: UObject, InSoundMixModifier: SoundMix)
        fun PlayWorldCameraShake(WorldContextObject: UObject, Shake: UnrealEngineClass, Epicenter: Vector, InnerRadius: Number, OuterRadius: Number, Falloff: Number, bOrientShakeTowardsEpicenter: Boolean)
        fun PlaySoundAtLocation(WorldContextObject: UObject, Sound: SoundBase, Location: Vector, Rotation: Rotator, VolumeMultiplier: Number, PitchMultiplier: Number, StartTime: Number, AttenuationSettings: SoundAttenuation, ConcurrencySettings: SoundConcurrency, OwningActor: Actor, InitialParams: InitialActiveSoundParams = definedExternally)
        fun PlaySound2D(WorldContextObject: UObject, Sound: SoundBase, VolumeMultiplier: Number, PitchMultiplier: Number, StartTime: Number, ConcurrencySettings: SoundConcurrency, OwningActor: Actor, bIsUISound: Boolean)
        fun PlayDialogueAtLocation(WorldContextObject: UObject, Dialogue: DialogueWave, Context: DialogueContext, Location: Vector, Rotation: Rotator, VolumeMultiplier: Number, PitchMultiplier: Number, StartTime: Number, AttenuationSettings: SoundAttenuation)
        fun PlayDialogue2D(WorldContextObject: UObject, Dialogue: DialogueWave, Context: DialogueContext, VolumeMultiplier: Number, PitchMultiplier: Number, StartTime: Number)
        fun ParseOption(Options: String, Key: String): String
        fun OpenLevelBySoftObjectPtr(WorldContextObject: UObject, Level: World, bAbsolute: Boolean, Options: String)
        fun OpenLevel(WorldContextObject: UObject, LevelName: String, bAbsolute: Boolean, Options: String)
        fun MakeHitResult(bBlockingHit: Boolean, bInitialOverlap: Boolean, Time: Number, Distance: Number, Location: Vector, ImpactPoint: Vector, Normal: Vector, ImpactNormal: Vector, PhysMat: PhysicalMaterial, HitActor: Actor, HitComponent: PrimitiveComponent, HitBoneName: String, BoneName: String, HitItem: Number, ElementIndex: Number, FaceIndex: Number, TraceStart: Vector, TraceEnd: Vector): HitResult
        fun LoadStreamLevelBySoftObjectPtr(WorldContextObject: UObject, Level: World, bMakeVisibleAfterLoad: Boolean, bShouldBlockOnLoad: Boolean, LatentInfo: LatentActionInfo)
        fun LoadStreamLevel(WorldContextObject: UObject, LevelName: String, bMakeVisibleAfterLoad: Boolean, bShouldBlockOnLoad: Boolean, LatentInfo: LatentActionInfo)
        fun LoadGameFromSlot(SlotName: String, UserIndex: Number): SaveGame
        fun IsSplitscreenForceDisabled(WorldContextObject: UObject): Boolean
        fun IsGamePaused(WorldContextObject: UObject): Boolean
        fun HasOption(Options: String, InKey: String): Boolean
        fun HasLaunchOption(OptionToCheck: String): Boolean
        fun GrassOverlappingSphereCount(WorldContextObject: UObject, StaticMesh: StaticMesh, CenterPosition: Vector, Radius: Number): Number
        fun GetWorldOriginLocation(WorldContextObject: UObject): IntVector
        fun GetWorldDeltaSeconds(WorldContextObject: UObject): Number
        fun GetViewProjectionMatrix(DesiredView: MinimalViewInfo, ViewMatrix: Matrix = definedExternally, ProjectionMatrix: Matrix = definedExternally, ViewProjectionMatrix: Matrix = definedExternally): `T$199`
        fun GetViewportMouseCaptureMode(WorldContextObject: UObject): String /* "NoCapture" | "CapturePermanently" | "CapturePermanently_IncludingInitialMouseDown" | "CaptureDuringMouseDown" | "CaptureDuringRightMouseDown" | "EMouseCaptureMode_MAX" */
        fun GetUnpausedTimeSeconds(WorldContextObject: UObject): Number
        fun GetTimeSeconds(WorldContextObject: UObject): Number
        fun GetSurfaceType(Hit: HitResult): String /* "SurfaceType_Default" | "SurfaceType1" | "SurfaceType2" | "SurfaceType3" | "SurfaceType4" | "SurfaceType5" | "SurfaceType6" | "SurfaceType7" | "SurfaceType8" | "SurfaceType9" | "SurfaceType10" | "SurfaceType11" | "SurfaceType12" | "SurfaceType13" | "SurfaceType14" | "SurfaceType15" | "SurfaceType16" | "SurfaceType17" | "SurfaceType18" | "SurfaceType19" | "SurfaceType20" | "SurfaceType21" | "SurfaceType22" | "SurfaceType23" | "SurfaceType24" | "SurfaceType25" | "SurfaceType26" | "SurfaceType27" | "SurfaceType28" | "SurfaceType29" | "SurfaceType30" | "SurfaceType31" | "SurfaceType32" | "SurfaceType33" | "SurfaceType34" | "SurfaceType35" | "SurfaceType36" | "SurfaceType37" | "SurfaceType38" | "SurfaceType39" | "SurfaceType40" | "SurfaceType41" | "SurfaceType42" | "SurfaceType43" | "SurfaceType44" | "SurfaceType45" | "SurfaceType46" | "SurfaceType47" | "SurfaceType48" | "SurfaceType49" | "SurfaceType50" | "SurfaceType51" | "SurfaceType52" | "SurfaceType53" | "SurfaceType54" | "SurfaceType55" | "SurfaceType56" | "SurfaceType57" | "SurfaceType58" | "SurfaceType59" | "SurfaceType60" | "SurfaceType61" | "SurfaceType62" | "SurfaceType_Max" | "EPhysicalSurface_MAX" */
        fun GetStreamingLevel(WorldContextObject: UObject, PackageName: String): LevelStreaming
        fun GetRealTimeSeconds(WorldContextObject: UObject): Number
        fun GetPlayerStateFromUniqueNetId(WorldContextObject: UObject, UniqueId: UniqueNetIdRepl): PlayerState
        fun GetPlayerState(WorldContextObject: UObject, PlayerStateIndex: Number): PlayerState
        fun GetPlayerPawn(WorldContextObject: UObject, PlayerIndex: Number): Pawn
        fun GetPlayerControllerID(Player: PlayerController): Number
        fun GetPlayerControllerFromID(WorldContextObject: UObject, ControllerId: Number): PlayerController
        fun GetPlayerController(WorldContextObject: UObject, PlayerIndex: Number): PlayerController
        fun GetPlayerCharacter(WorldContextObject: UObject, PlayerIndex: Number): Character
        fun GetPlayerCameraManager(WorldContextObject: UObject, PlayerIndex: Number): PlayerCameraManager
        fun GetPlatformName(): String
        fun GetObjectClass(UObject: UObject): UnrealEngineClass
        fun GetNumPlayerStates(WorldContextObject: UObject): Number
        fun GetNumPlayerControllers(WorldContextObject: UObject): Number
        fun GetNumLocalPlayerControllers(WorldContextObject: UObject): Number
        fun GetMaxAudioChannelCount(WorldContextObject: UObject): Number
        fun GetKeyValue(Pair: String, Key: String = definedExternally, Value: String = definedExternally): `T$684`
        fun GetIntOption(Options: String, Key: String, DefaultValue: Number): Number
        fun GetGlobalTimeDilation(WorldContextObject: UObject): Number
        fun GetGameState(WorldContextObject: UObject): GameStateBase
        fun GetGameMode(WorldContextObject: UObject): GameModeBase
        fun GetGameInstance(WorldContextObject: UObject): GameInstance
        fun GetEnableWorldRendering(WorldContextObject: UObject): Boolean
        fun GetCurrentReverbEffect(WorldContextObject: UObject): ReverbEffect
        fun GetCurrentLevelName(WorldContextObject: UObject, bRemovePrefixString: Boolean): String
        fun GetClosestListenerLocation(WorldContextObject: UObject, Location: Vector, MaximumRange: Number, bAllowAttenuationOverride: Boolean, ListenerPosition: Vector = definedExternally): `T$352`
        fun GetAudioTimeSeconds(WorldContextObject: UObject): Number
        fun GetAllActorsWithTag(WorldContextObject: UObject, Tag: String, OutActors: Array<Actor> = definedExternally): `T$685`
        fun GetAllActorsWithInterface(WorldContextObject: UObject, Interface: UnrealEngineClass, OutActors: Array<Actor> = definedExternally): `T$686`
        fun GetAllActorsOfClassWithTag(WorldContextObject: UObject, ActorClass: UnrealEngineClass, Tag: String, OutActors: Array<Actor> = definedExternally): `T$687`
        fun GetAllActorsOfClass(WorldContextObject: UObject, ActorClass: UnrealEngineClass, OutActors: Array<Actor> = definedExternally): `T$688`
        fun GetActorOfClass(WorldContextObject: UObject, ActorClass: UnrealEngineClass): Actor
        fun GetActorArrayBounds(Actors: Array<Actor>, bOnlyCollidingComponents: Boolean, Center: Vector = definedExternally, BoxExtent: Vector = definedExternally): `T$689`
        fun GetActorArrayAverageLocation(Actors: Array<Actor>): Vector
        fun GetAccurateRealTime(Seconds: Number = definedExternally, PartialSeconds: Number = definedExternally): `T$690`
        fun FlushLevelStreaming(WorldContextObject: UObject)
        fun FinishSpawningActor(Actor: Actor, SpawnTransform: Transform): Actor
        fun FindNearestActor(Origin: Vector, ActorsToCheck: Array<Actor>, Distance: Number = definedExternally): `T$502`
        fun FindCollisionUV(Hit: HitResult, UVChannel: Number, UV: Vector2D = definedExternally): `T$52`
        fun EnableLiveStreaming(Enable: Boolean)
        fun DoesSaveGameExist(SlotName: String, UserIndex: Number): Boolean
        fun DeprojectScreenToWorld(Player: PlayerController, ScreenPosition: Vector2D, WorldPosition: Vector = definedExternally, WorldDirection: Vector = definedExternally): `T$278`
        fun DeleteGameInSlot(SlotName: String, UserIndex: Number): Boolean
        fun DeactivateReverbEffect(WorldContextObject: UObject, TagName: String)
        fun CreateSound2D(WorldContextObject: UObject, Sound: SoundBase, VolumeMultiplier: Number, PitchMultiplier: Number, StartTime: Number, ConcurrencySettings: SoundConcurrency, bPersistAcrossLevelTransition: Boolean, bAutoDestroy: Boolean): AudioComponent
        fun CreateSaveGameObject(SaveGameClass: UnrealEngineClass): SaveGame
        fun CreatePlayer(WorldContextObject: UObject, ControllerId: Number, bSpawnPlayerController: Boolean): PlayerController
        fun ClearSoundMixModifiers(WorldContextObject: UObject)
        fun ClearSoundMixClassOverride(WorldContextObject: UObject, InSoundMixModifier: SoundMix, InSoundClass: SoundClass, FadeOutTime: Number)
        fun CancelAsyncLoading()
        fun BreakHitResult(Hit: HitResult, bBlockingHit: Boolean = definedExternally, bInitialOverlap: Boolean = definedExternally, Time: Number = definedExternally, Distance: Number = definedExternally, Location: Vector = definedExternally, ImpactPoint: Vector = definedExternally, Normal: Vector = definedExternally, ImpactNormal: Vector = definedExternally, PhysMat: PhysicalMaterial = definedExternally, HitActor: Actor = definedExternally, HitComponent: PrimitiveComponent = definedExternally, HitBoneName: String = definedExternally, BoneName: String = definedExternally, HitItem: Number = definedExternally, ElementIndex: Number = definedExternally, FaceIndex: Number = definedExternally, TraceStart: Vector = definedExternally, TraceEnd: Vector = definedExternally): `T$51`
        fun BlueprintSuggestProjectileVelocity(WorldContextObject: UObject, TossVelocity: Vector = definedExternally, StartLocation: Vector = definedExternally, EndLocation: Vector = definedExternally, LaunchSpeed: Number = definedExternally, OverrideGravityZ: Number = definedExternally, TraceOption: String /* "DoNotTrace" | "TraceFullPath" | "OnlyTraceWhileAscending" | "ESuggestProjVelocityTraceOption_MAX" */ = definedExternally, CollisionRadius: Number = definedExternally, bFavorHighArc: Boolean = definedExternally, bDrawDebug: Boolean = definedExternally): `T$347`
        fun Blueprint_PredictProjectilePath_ByTraceChannel(WorldContextObject: UObject, OutHit: HitResult = definedExternally, OutPathPositions: Array<Vector> = definedExternally, OutLastTraceDestination: Vector = definedExternally, StartPos: Vector = definedExternally, LaunchVelocity: Vector = definedExternally, bTracePath: Boolean = definedExternally, ProjectileRadius: Number = definedExternally, TraceChannel: String /* "ECC_WorldStatic" | "ECC_WorldDynamic" | "ECC_Pawn" | "ECC_Visibility" | "ECC_Camera" | "ECC_PhysicsBody" | "ECC_Vehicle" | "ECC_Destructible" | "ECC_EngineTraceChannel1" | "ECC_EngineTraceChannel2" | "ECC_EngineTraceChannel3" | "ECC_EngineTraceChannel4" | "ECC_EngineTraceChannel5" | "ECC_EngineTraceChannel6" | "ECC_GameTraceChannel1" | "ECC_GameTraceChannel2" | "ECC_GameTraceChannel3" | "ECC_GameTraceChannel4" | "ECC_GameTraceChannel5" | "ECC_GameTraceChannel6" | "ECC_GameTraceChannel7" | "ECC_GameTraceChannel8" | "ECC_GameTraceChannel9" | "ECC_GameTraceChannel10" | "ECC_GameTraceChannel11" | "ECC_GameTraceChannel12" | "ECC_GameTraceChannel13" | "ECC_GameTraceChannel14" | "ECC_GameTraceChannel15" | "ECC_GameTraceChannel16" | "ECC_GameTraceChannel17" | "ECC_GameTraceChannel18" | "ECC_OverlapAll_Deprecated" | "ECC_MAX" */ = definedExternally, bTraceComplex: Boolean = definedExternally, ActorsToIgnore: Array<Actor> = definedExternally, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */ = definedExternally, DrawDebugTime: Number = definedExternally, SimFrequency: Number = definedExternally, MaxSimTime: Number = definedExternally, OverrideGravityZ: Number = definedExternally): `T$691`
        fun Blueprint_PredictProjectilePath_ByObjectType(WorldContextObject: UObject, OutHit: HitResult = definedExternally, OutPathPositions: Array<Vector> = definedExternally, OutLastTraceDestination: Vector = definedExternally, StartPos: Vector = definedExternally, LaunchVelocity: Vector = definedExternally, bTracePath: Boolean = definedExternally, ProjectileRadius: Number = definedExternally, ObjectTypes: Array<String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */> = definedExternally, bTraceComplex: Boolean = definedExternally, ActorsToIgnore: Array<Actor> = definedExternally, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */ = definedExternally, DrawDebugTime: Number = definedExternally, SimFrequency: Number = definedExternally, MaxSimTime: Number = definedExternally, OverrideGravityZ: Number = definedExternally): `T$692`
        fun Blueprint_PredictProjectilePath_Advanced(WorldContextObject: UObject, PredictParams: PredictProjectilePathParams, PredictResult: PredictProjectilePathResult = definedExternally): `T$344`
        fun BeginSpawningActorFromBlueprint(WorldContextObject: UObject, Blueprint: Blueprint, SpawnTransform: Transform, bNoCollisionFail: Boolean): Actor
        fun BeginDeferredActorSpawnFromClass(WorldContextObject: UObject, ActorClass: UnrealEngineClass, SpawnTransform: Transform, CollisionHandlingOverride: String /* "Undefined" | "AlwaysSpawn" | "AdjustIfPossibleButAlwaysSpawn" | "AdjustIfPossibleButDontSpawnIfColliding" | "DontSpawnIfColliding" | "ESpawnActorCollisionHandlingMethod_MAX" */, Owner: Actor): Actor
        fun AreSubtitlesEnabled(): Boolean
        fun AreAnyListenersWithinRange(WorldContextObject: UObject, Location: Vector, MaximumRange: Number): Boolean
        fun ApplyRadialDamageWithFalloff(WorldContextObject: UObject, BaseDamage: Number, MinimumDamage: Number, Origin: Vector, DamageInnerRadius: Number, DamageOuterRadius: Number, DamageFalloff: Number, DamageTypeClass: UnrealEngineClass, IgnoreActors: Array<Actor>, DamageCauser: Actor, InstigatedByController: Controller, DamagePreventionChannel: String /* "ECC_WorldStatic" | "ECC_WorldDynamic" | "ECC_Pawn" | "ECC_Visibility" | "ECC_Camera" | "ECC_PhysicsBody" | "ECC_Vehicle" | "ECC_Destructible" | "ECC_EngineTraceChannel1" | "ECC_EngineTraceChannel2" | "ECC_EngineTraceChannel3" | "ECC_EngineTraceChannel4" | "ECC_EngineTraceChannel5" | "ECC_EngineTraceChannel6" | "ECC_GameTraceChannel1" | "ECC_GameTraceChannel2" | "ECC_GameTraceChannel3" | "ECC_GameTraceChannel4" | "ECC_GameTraceChannel5" | "ECC_GameTraceChannel6" | "ECC_GameTraceChannel7" | "ECC_GameTraceChannel8" | "ECC_GameTraceChannel9" | "ECC_GameTraceChannel10" | "ECC_GameTraceChannel11" | "ECC_GameTraceChannel12" | "ECC_GameTraceChannel13" | "ECC_GameTraceChannel14" | "ECC_GameTraceChannel15" | "ECC_GameTraceChannel16" | "ECC_GameTraceChannel17" | "ECC_GameTraceChannel18" | "ECC_OverlapAll_Deprecated" | "ECC_MAX" */): Boolean
        fun ApplyRadialDamage(WorldContextObject: UObject, BaseDamage: Number, Origin: Vector, DamageRadius: Number, DamageTypeClass: UnrealEngineClass, IgnoreActors: Array<Actor>, DamageCauser: Actor, InstigatedByController: Controller, bDoFullDamage: Boolean, DamagePreventionChannel: String /* "ECC_WorldStatic" | "ECC_WorldDynamic" | "ECC_Pawn" | "ECC_Visibility" | "ECC_Camera" | "ECC_PhysicsBody" | "ECC_Vehicle" | "ECC_Destructible" | "ECC_EngineTraceChannel1" | "ECC_EngineTraceChannel2" | "ECC_EngineTraceChannel3" | "ECC_EngineTraceChannel4" | "ECC_EngineTraceChannel5" | "ECC_EngineTraceChannel6" | "ECC_GameTraceChannel1" | "ECC_GameTraceChannel2" | "ECC_GameTraceChannel3" | "ECC_GameTraceChannel4" | "ECC_GameTraceChannel5" | "ECC_GameTraceChannel6" | "ECC_GameTraceChannel7" | "ECC_GameTraceChannel8" | "ECC_GameTraceChannel9" | "ECC_GameTraceChannel10" | "ECC_GameTraceChannel11" | "ECC_GameTraceChannel12" | "ECC_GameTraceChannel13" | "ECC_GameTraceChannel14" | "ECC_GameTraceChannel15" | "ECC_GameTraceChannel16" | "ECC_GameTraceChannel17" | "ECC_GameTraceChannel18" | "ECC_OverlapAll_Deprecated" | "ECC_MAX" */): Boolean
        fun ApplyPointDamage(DamagedActor: Actor, BaseDamage: Number, HitFromDirection: Vector, HitInfo: HitResult, EventInstigator: Controller, DamageCauser: Actor, DamageTypeClass: UnrealEngineClass): Number
        fun ApplyDamage(DamagedActor: Actor, BaseDamage: Number, EventInstigator: Controller, DamageCauser: Actor, DamageTypeClass: UnrealEngineClass): Number
        fun AnnounceAccessibleString(AnnouncementString: String)
        fun ActivateReverbEffect(WorldContextObject: UObject, ReverbEffect: ReverbEffect, TagName: String, Priority: Number, Volume: Number, FadeTime: Number)
        fun C(Other: UObject): GameplayStatics
        fun C(Other: Any): GameplayStatics
    }
}

external open class SpotLightComponent : PointLightComponent {
    constructor()
    constructor(Outer: UObject)
    open var InnerConeAngle: Number
    open var OuterConeAngle: Number
    open fun SetOuterConeAngle(NewOuterConeAngle: Number)
    open fun SetInnerConeAngle(NewInnerConeAngle: Number)

    companion object {
        fun Load(ResourceName: String): SpotLightComponent
        fun Find(Outer: UObject, ResourceName: String): SpotLightComponent
        fun GetDefaultObject(): SpotLightComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SpotLightComponent
        fun C(Other: UObject): SpotLightComponent
        fun C(Other: Any): SpotLightComponent
    }
}

external open class SpotLight(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Light {
    open var SpotLightComponent: SpotLightComponent
    open var ArrowComponent: ArrowComponent
    open fun SetOuterConeAngle(NewOuterConeAngle: Number)
    open fun SetInnerConeAngle(NewInnerConeAngle: Number)

    companion object {
        fun GetDefaultObject(): SpotLight
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SpotLight
        fun C(Other: UObject): SpotLight
        fun C(Other: Any): SpotLight
    }
}

external open class GeneratedMeshAreaLight(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : SpotLight {
    companion object {
        fun GetDefaultObject(): GeneratedMeshAreaLight
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GeneratedMeshAreaLight
        fun C(Other: UObject): GeneratedMeshAreaLight
        fun C(Other: Any): GeneratedMeshAreaLight
    }
}

external open class HapticFeedbackEffect_Buffer : HapticFeedbackEffect_Base {
    constructor()
    constructor(Outer: UObject)
    open var Amplitudes: Array<Number>
    open var SampleRate: Number

    companion object {
        fun Load(ResourceName: String): HapticFeedbackEffect_Buffer
        fun Find(Outer: UObject, ResourceName: String): HapticFeedbackEffect_Buffer
        fun GetDefaultObject(): HapticFeedbackEffect_Buffer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): HapticFeedbackEffect_Buffer
        fun C(Other: UObject): HapticFeedbackEffect_Buffer
        fun C(Other: Any): HapticFeedbackEffect_Buffer
    }
}

external open class HapticFeedbackDetails_Curve {
    open var Frequency: RuntimeFloatCurve
    open var Amplitude: RuntimeFloatCurve
    open fun clone(): HapticFeedbackDetails_Curve

    companion object {
        fun C(Other: UObject): HapticFeedbackDetails_Curve
        fun C(Other: Any): HapticFeedbackDetails_Curve
    }
}

external open class HapticFeedbackEffect_Curve : HapticFeedbackEffect_Base {
    constructor()
    constructor(Outer: UObject)
    open var HapticDetails: HapticFeedbackDetails_Curve

    companion object {
        fun Load(ResourceName: String): HapticFeedbackEffect_Curve
        fun Find(Outer: UObject, ResourceName: String): HapticFeedbackEffect_Curve
        fun GetDefaultObject(): HapticFeedbackEffect_Curve
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): HapticFeedbackEffect_Curve
        fun C(Other: UObject): HapticFeedbackEffect_Curve
        fun C(Other: Any): HapticFeedbackEffect_Curve
    }
}

external open class HapticFeedbackEffect_SoundWave : HapticFeedbackEffect_Base {
    constructor()
    constructor(Outer: UObject)
    open var SoundWave: SoundWave

    companion object {
        fun Load(ResourceName: String): HapticFeedbackEffect_SoundWave
        fun Find(Outer: UObject, ResourceName: String): HapticFeedbackEffect_SoundWave
        fun GetDefaultObject(): HapticFeedbackEffect_SoundWave
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): HapticFeedbackEffect_SoundWave
        fun C(Other: UObject): HapticFeedbackEffect_SoundWave
        fun C(Other: Any): HapticFeedbackEffect_SoundWave
    }
}

external open class HealthSnapshotBlueprintLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): HealthSnapshotBlueprintLibrary
        fun Find(Outer: UObject, ResourceName: String): HealthSnapshotBlueprintLibrary
        fun GetDefaultObject(): HealthSnapshotBlueprintLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): HealthSnapshotBlueprintLibrary
        fun StopPerformanceSnapshots()
        fun StartPerformanceSnapshots()
        fun LogPerformanceSnapshot(SnapshotTitle: String, bResetStats: Boolean)
        fun C(Other: UObject): HealthSnapshotBlueprintLibrary
        fun C(Other: Any): HealthSnapshotBlueprintLibrary
    }
}

external open class ActorContainerID {
    open var ID: Any
    open fun clone(): ActorContainerID

    companion object {
        fun C(Other: UObject): ActorContainerID
        fun C(Other: Any): ActorContainerID
    }
}

external open class HLODSubActor {
    open var ActorGuid: Guid
    open var ActorPackage: String
    open var ActorPath: String
    open var ContainerID: ActorContainerID
    open var ContainerPackage: String
    open var ContainerTransform: Transform
    open fun clone(): HLODSubActor

    companion object {
        fun C(Other: UObject): HLODSubActor
        fun C(Other: Any): HLODSubActor
    }
}

external open class WorldPartitionRuntimeCell : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bIsAlwaysLoaded: Boolean
    open var DataLayers: Array<String>
    open var Coords: IntVector
    open var GridName: String
    open var DebugName: String
    open var Priority: Number
    open var bClientOnlyVisible: Boolean
    open var bIsHLOD: Boolean
    open var bBlockOnSlowLoading: Boolean

    companion object {
        fun Load(ResourceName: String): WorldPartitionRuntimeCell
        fun Find(Outer: UObject, ResourceName: String): WorldPartitionRuntimeCell
        fun GetDefaultObject(): WorldPartitionRuntimeCell
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WorldPartitionRuntimeCell
        fun C(Other: UObject): WorldPartitionRuntimeCell
        fun C(Other: Any): WorldPartitionRuntimeCell
    }
}

external open class WorldPartitionHLOD(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var HLODSubActors: Array<HLODSubActor>
    open var SubActorsHLODLayer: HLODLayer
    open var GridIndexX: Any
    open var GridIndexY: Any
    open var GridIndexZ: Any
    open var HLODBounds: Box
    open var MinVisibleDistance: Any
    open var HLODHash: Any
    open var LODLevel: Any
    open var bRequireWarmup: Boolean
    open var SourceCell: WorldPartitionRuntimeCell
    open var SourceCellName: String

    companion object {
        fun GetDefaultObject(): WorldPartitionHLOD
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WorldPartitionHLOD
        fun C(Other: UObject): WorldPartitionHLOD
        fun C(Other: Any): WorldPartitionHLOD
    }
}

external open class HLODEngineSubsystem : EngineSubsystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): HLODEngineSubsystem
        fun Find(Outer: UObject, ResourceName: String): HLODEngineSubsystem
        fun GetDefaultObject(): HLODEngineSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): HLODEngineSubsystem
        fun C(Other: UObject): HLODEngineSubsystem
        fun C(Other: Any): HLODEngineSubsystem
    }
}

external open class HLODProxyMesh {
    open var LODActor: Actor
    open var StaticMesh: StaticMesh
    open var Key: String
    open fun clone(): HLODProxyMesh

    companion object {
        fun C(Other: UObject): HLODProxyMesh
        fun C(Other: Any): HLODProxyMesh
    }
}

external open class HLODProxy : UObject {
    constructor()
    constructor(Outer: UObject)
    open var OwningMap: World
    open var ProxyMeshes: Array<HLODProxyMesh>
    open var HLODActors: Any

    companion object {
        fun Load(ResourceName: String): HLODProxy
        fun Find(Outer: UObject, ResourceName: String): HLODProxy
        fun GetDefaultObject(): HLODProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): HLODProxy
        fun C(Other: UObject): HLODProxy
        fun C(Other: Any): HLODProxy
    }
}

external open class HLODISMComponentDesc {
    open var StaticMesh: StaticMesh
    open var Material: MaterialInterface
    open var Instances: Array<Transform>
    open fun clone(): HLODISMComponentDesc

    companion object {
        fun C(Other: UObject): HLODISMComponentDesc
        fun C(Other: Any): HLODISMComponentDesc
    }
}

external open class HLODProxyDesc : UObject {
    constructor()
    constructor(Outer: UObject)
    open var SubActors: Array<String>
    open var StaticMesh: StaticMesh
    open var ISMComponentsDesc: Array<HLODISMComponentDesc>
    open var LODDrawDistance: Number
    open var bOverrideMaterialMergeSettings: Boolean
    open var MaterialSettings: MaterialProxySettings
    open var bOverrideTransitionScreenSize: Boolean
    open var TransitionScreenSize: Number
    open var bOverrideScreenSize: Boolean
    open var ScreenSize: Number
    open var Key: String
    open var LODLevel: Number
    open var LODActorTag: String
    open var Location: Vector
    open var HLODBakingTransform: Transform
    open var SubHLODDescs: Array<HLODProxyDesc>

    companion object {
        fun Load(ResourceName: String): HLODProxyDesc
        fun Find(Outer: UObject, ResourceName: String): HLODProxyDesc
        fun GetDefaultObject(): HLODProxyDesc
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): HLODProxyDesc
        fun C(Other: UObject): HLODProxyDesc
        fun C(Other: Any): HLODProxyDesc
    }
}

external open class HLODSubsystem : WorldSubsystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): HLODSubsystem
        fun Find(Outer: UObject, ResourceName: String): HLODSubsystem
        fun GetDefaultObject(): HLODSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): HLODSubsystem
        fun C(Other: UObject): HLODSubsystem
        fun C(Other: Any): HLODSubsystem
    }
}

external object EAnimAssetCurveFlags {
    var AACF_NONE: String /* "AACF_NONE" */
    var AACF_DriveMorphTarget_DEPRECATED: String /* "AACF_DriveMorphTarget_DEPRECATED" */
    var AACF_DriveAttribute_DEPRECATED: String /* "AACF_DriveAttribute_DEPRECATED" */
    var AACF_Editable: String /* "AACF_Editable" */
    var AACF_DriveMaterial_DEPRECATED: String /* "AACF_DriveMaterial_DEPRECATED" */
    var AACF_Metadata: String /* "AACF_Metadata" */
    var AACF_DriveTrack: String /* "AACF_DriveTrack" */
    var AACF_Disabled: String /* "AACF_Disabled" */
    var AACF_MAX: String /* "AACF_MAX" */
}

external open class AnimationDataController : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun UpdateCurveNamesFromSkeleton(Skeleton: Skeleton, SupportedCurveType: String /* "RCT_Float" | "RCT_Vector" | "RCT_Transform" | "RCT_MAX" */, bShouldTransact: Boolean)
    open fun SetTransformCurveKeys(CurveId: AnimationCurveIdentifier, TransformValues: Array<Transform>, TimeKeys: Array<Number>, bShouldTransact: Boolean): Boolean
    open fun SetTransformCurveKey(CurveId: AnimationCurveIdentifier, Time: Number, Value: Transform, bShouldTransact: Boolean): Boolean
    open fun SetPlayLength(Length: Number, bShouldTransact: Boolean)
    open fun SetModel(InModel: AnimDataModel)
    open fun SetFrameRate(FrameRate: FrameRate, bShouldTransact: Boolean)
    open fun SetCurveKeys(CurveId: AnimationCurveIdentifier, CurveKeys: Array<RichCurveKey>, bShouldTransact: Boolean): Boolean
    open fun SetCurveKey(CurveId: AnimationCurveIdentifier, Key: RichCurveKey, bShouldTransact: Boolean): Boolean
    open fun SetCurveFlags(CurveId: AnimationCurveIdentifier, Flags: Number, bShouldTransact: Boolean): Boolean
    open fun SetCurveFlag(CurveId: AnimationCurveIdentifier, Flag: String /* "AACF_NONE" | "AACF_DriveMorphTarget_DEPRECATED" | "AACF_DriveAttribute_DEPRECATED" | "AACF_Editable" | "AACF_DriveMaterial_DEPRECATED" | "AACF_Metadata" | "AACF_DriveTrack" | "AACF_Disabled" | "AACF_MAX" */, bState: Boolean, bShouldTransact: Boolean): Boolean
    open fun SetCurveColor(CurveId: AnimationCurveIdentifier, Color: LinearColor, bShouldTransact: Boolean): Boolean
    open fun SetBoneTrackKeys(BoneName: String, PositionalKeys: Array<Vector>, RotationalKeys: Array<Quat>, ScalingKeys: Array<Vector>, bShouldTransact: Boolean): Boolean
    open fun ScaleCurve(CurveId: AnimationCurveIdentifier, Origin: Number, Factor: Number, bShouldTransact: Boolean): Boolean
    open fun ResizePlayLength(NewLength: Number, T0: Number, T1: Number, bShouldTransact: Boolean)
    open fun Resize(Length: Number, T0: Number, T1: Number, bShouldTransact: Boolean)
    open fun RenameCurve(CurveToRenameId: AnimationCurveIdentifier, NewCurveId: AnimationCurveIdentifier, bShouldTransact: Boolean): Boolean
    open fun RemoveTransformCurveKey(CurveId: AnimationCurveIdentifier, Time: Number, bShouldTransact: Boolean): Boolean
    open fun RemoveCurveKey(CurveId: AnimationCurveIdentifier, Time: Number, bShouldTransact: Boolean): Boolean
    open fun RemoveCurve(CurveId: AnimationCurveIdentifier, bShouldTransact: Boolean): Boolean
    open fun RemoveBoneTrack(BoneName: String, bShouldTransact: Boolean): Boolean
    open fun RemoveAttributeKey(AttributeIdentifier: AnimationAttributeIdentifier, Time: Number, bShouldTransact: Boolean): Boolean
    open fun RemoveAttribute(AttributeIdentifier: AnimationAttributeIdentifier, bShouldTransact: Boolean): Boolean
    open fun RemoveAllCurvesOfType(SupportedCurveType: String /* "RCT_Float" | "RCT_Vector" | "RCT_Transform" | "RCT_MAX" */, bShouldTransact: Boolean)
    open fun RemoveAllBoneTracks(bShouldTransact: Boolean)
    open fun RemoveAllAttributesForBone(BoneName: String, bShouldTransact: Boolean): Number
    open fun RemoveAllAttributes(bShouldTransact: Boolean): Number
    open fun OpenBracket(InTitle: String, bShouldTransact: Boolean)
    open fun InsertBoneTrack(BoneName: String, DesiredIndex: Number, bShouldTransact: Boolean): Number
    open fun GetModel(): AnimDataModel
    open fun FindOrAddCurveNamesOnSkeleton(Skeleton: Skeleton, SupportedCurveType: String /* "RCT_Float" | "RCT_Vector" | "RCT_Transform" | "RCT_MAX" */, bShouldTransact: Boolean)
    open fun DuplicateCurve(CopyCurveId: AnimationCurveIdentifier, NewCurveId: AnimationCurveIdentifier, bShouldTransact: Boolean): Boolean
    open fun DuplicateAttribute(AttributeIdentifier: AnimationAttributeIdentifier, NewAttributeIdentifier: AnimationAttributeIdentifier, bShouldTransact: Boolean): Boolean
    open fun CloseBracket(bShouldTransact: Boolean)
    open fun AddCurve(CurveId: AnimationCurveIdentifier, CurveFlags: Number, bShouldTransact: Boolean): Boolean
    open fun AddBoneTrack(BoneName: String, bShouldTransact: Boolean): Number
    open fun AddAttribute(AttributeIdentifier: AnimationAttributeIdentifier, bShouldTransact: Boolean): Boolean

    companion object {
        fun Load(ResourceName: String): AnimationDataController
        fun Find(Outer: UObject, ResourceName: String): AnimationDataController
        fun GetDefaultObject(): AnimationDataController
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationDataController
        fun C(Other: UObject): AnimationDataController
        fun C(Other: Any): AnimationDataController
    }
}

external open class ImportanceSamplingLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ImportanceSamplingLibrary
        fun Find(Outer: UObject, ResourceName: String): ImportanceSamplingLibrary
        fun GetDefaultObject(): ImportanceSamplingLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ImportanceSamplingLibrary
        fun RandomSobolFloat(index: Number, Dimension: Number, Seed: Number): Number
        fun RandomSobolCell3D(index: Number, NumCells: Number, Cell: Vector, Seed: Vector): Vector
        fun RandomSobolCell2D(index: Number, NumCells: Number, Cell: Vector2D, Seed: Vector2D): Vector2D
        fun NextSobolFloat(index: Number, Dimension: Number, PreviousValue: Number): Number
        fun NextSobolCell3D(index: Number, NumCells: Number, PreviousValue: Vector): Vector
        fun NextSobolCell2D(index: Number, NumCells: Number, PreviousValue: Vector2D): Vector2D
        fun MakeImportanceTexture(Texture: Texture2D, WeightingFunc: String /* "Luminance" | "Red" | "Green" | "Blue" | "Alpha" | "EImportanceWeight_MAX" */): ImportanceTexture
        fun ImportanceSample(Texture: ImportanceTexture, Rand: Vector2D, Samples: Number, Intensity: Number, SamplePosition: Vector2D = definedExternally, SampleColor: LinearColor = definedExternally, SampleIntensity: Number = definedExternally, SampleSize: Number = definedExternally): `T$25`
        fun BreakImportanceTexture(ImportanceTexture: ImportanceTexture, Texture: Texture2D = definedExternally, WeightingFunc: String /* "Luminance" | "Red" | "Green" | "Blue" | "Alpha" | "EImportanceWeight_MAX" */ = definedExternally): `T$24`
        fun C(Other: UObject): ImportanceSamplingLibrary
        fun C(Other: Any): ImportanceSamplingLibrary
    }
}

external open class ImportantToggleSettingInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ImportantToggleSettingInterface
        fun Find(Outer: UObject, ResourceName: String): ImportantToggleSettingInterface
        fun GetDefaultObject(): ImportantToggleSettingInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ImportantToggleSettingInterface
        fun C(Other: UObject): ImportantToggleSettingInterface
        fun C(Other: Any): ImportantToggleSettingInterface
    }
}

external open class InGameAdManager : PlatformInterfaceBase {
    constructor()
    constructor(Outer: UObject)
    open var bShouldPauseWhileAdOpen: Boolean
    open var ClickedBannerDelegates: Array<UnrealEngineDelegate<() -> Unit>>
    open var ClosedAdDelegates: Array<UnrealEngineDelegate<() -> Unit>>

    companion object {
        fun Load(ResourceName: String): InGameAdManager
        fun Find(Outer: UObject, ResourceName: String): InGameAdManager
        fun GetDefaultObject(): InGameAdManager
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InGameAdManager
        fun C(Other: UObject): InGameAdManager
        fun C(Other: Any): InGameAdManager
    }
}

external open class InputDelegateBinding : DynamicBlueprintBinding {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InputDelegateBinding
        fun Find(Outer: UObject, ResourceName: String): InputDelegateBinding
        fun GetDefaultObject(): InputDelegateBinding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InputDelegateBinding
        fun C(Other: UObject): InputDelegateBinding
        fun C(Other: Any): InputDelegateBinding
    }
}

external open class BlueprintInputDelegateBinding {
    open var bConsumeInput: Boolean
    open var bExecuteWhenPaused: Boolean
    open var bOverrideParentBinding: Boolean
    open fun clone(): BlueprintInputDelegateBinding

    companion object {
        fun C(Other: UObject): BlueprintInputDelegateBinding
        fun C(Other: Any): BlueprintInputDelegateBinding
    }
}

external open class BlueprintInputActionDelegateBinding : BlueprintInputDelegateBinding {
    open var InputActionName: String
    open var InputKeyEvent: String /* "IE_Pressed" | "IE_Released" | "IE_Repeat" | "IE_DoubleClick" | "IE_Axis" | "IE_MAX" */
    open var FunctionNameToBind: String
    override fun clone(): BlueprintInputActionDelegateBinding

    companion object {
        fun C(Other: UObject): BlueprintInputActionDelegateBinding
        fun C(Other: Any): BlueprintInputActionDelegateBinding
    }
}

external open class InputActionDelegateBinding : InputDelegateBinding {
    constructor()
    constructor(Outer: UObject)
    open var InputActionDelegateBindings: Array<BlueprintInputActionDelegateBinding>

    companion object {
        fun Load(ResourceName: String): InputActionDelegateBinding
        fun Find(Outer: UObject, ResourceName: String): InputActionDelegateBinding
        fun GetDefaultObject(): InputActionDelegateBinding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InputActionDelegateBinding
        fun C(Other: UObject): InputActionDelegateBinding
        fun C(Other: Any): InputActionDelegateBinding
    }
}

external open class BlueprintInputAxisDelegateBinding : BlueprintInputDelegateBinding {
    open var InputAxisName: String
    open var FunctionNameToBind: String
    override fun clone(): BlueprintInputAxisDelegateBinding

    companion object {
        fun C(Other: UObject): BlueprintInputAxisDelegateBinding
        fun C(Other: Any): BlueprintInputAxisDelegateBinding
    }
}

external open class InputAxisDelegateBinding : InputDelegateBinding {
    constructor()
    constructor(Outer: UObject)
    open var InputAxisDelegateBindings: Array<BlueprintInputAxisDelegateBinding>

    companion object {
        fun Load(ResourceName: String): InputAxisDelegateBinding
        fun Find(Outer: UObject, ResourceName: String): InputAxisDelegateBinding
        fun GetDefaultObject(): InputAxisDelegateBinding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InputAxisDelegateBinding
        fun C(Other: UObject): InputAxisDelegateBinding
        fun C(Other: Any): InputAxisDelegateBinding
    }
}

external open class BlueprintInputAxisKeyDelegateBinding : BlueprintInputDelegateBinding {
    open var AxisKey: Key
    open var FunctionNameToBind: String
    override fun clone(): BlueprintInputAxisKeyDelegateBinding

    companion object {
        fun C(Other: UObject): BlueprintInputAxisKeyDelegateBinding
        fun C(Other: Any): BlueprintInputAxisKeyDelegateBinding
    }
}

external open class InputAxisKeyDelegateBinding : InputDelegateBinding {
    constructor()
    constructor(Outer: UObject)
    open var InputAxisKeyDelegateBindings: Array<BlueprintInputAxisKeyDelegateBinding>

    companion object {
        fun Load(ResourceName: String): InputAxisKeyDelegateBinding
        fun Find(Outer: UObject, ResourceName: String): InputAxisKeyDelegateBinding
        fun GetDefaultObject(): InputAxisKeyDelegateBinding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InputAxisKeyDelegateBinding
        fun C(Other: UObject): InputAxisKeyDelegateBinding
        fun C(Other: Any): InputAxisKeyDelegateBinding
    }
}

external open class BlueprintInputKeyDelegateBinding : BlueprintInputDelegateBinding {
    open var InputChord: InputChord
    open var InputKeyEvent: String /* "IE_Pressed" | "IE_Released" | "IE_Repeat" | "IE_DoubleClick" | "IE_Axis" | "IE_MAX" */
    open var FunctionNameToBind: String
    override fun clone(): BlueprintInputKeyDelegateBinding

    companion object {
        fun C(Other: UObject): BlueprintInputKeyDelegateBinding
        fun C(Other: Any): BlueprintInputKeyDelegateBinding
    }
}

external open class InputKeyDelegateBinding : InputDelegateBinding {
    constructor()
    constructor(Outer: UObject)
    open var InputKeyDelegateBindings: Array<BlueprintInputKeyDelegateBinding>

    companion object {
        fun Load(ResourceName: String): InputKeyDelegateBinding
        fun Find(Outer: UObject, ResourceName: String): InputKeyDelegateBinding
        fun GetDefaultObject(): InputKeyDelegateBinding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InputKeyDelegateBinding
        fun C(Other: UObject): InputKeyDelegateBinding
        fun C(Other: Any): InputKeyDelegateBinding
    }
}

external open class InputAxisProperties {
    open var DeadZone: Number
    open var Sensitivity: Number
    open var Exponent: Number
    open var bInvert: Boolean
    open fun clone(): InputAxisProperties

    companion object {
        fun C(Other: UObject): InputAxisProperties
        fun C(Other: Any): InputAxisProperties
    }
}

external open class InputAxisConfigEntry {
    open var AxisKeyName: String
    open var AxisProperties: InputAxisProperties
    open fun clone(): InputAxisConfigEntry

    companion object {
        fun C(Other: UObject): InputAxisConfigEntry
        fun C(Other: Any): InputAxisConfigEntry
    }
}

external open class InputActionKeyMapping {
    open var ActionName: String
    open var bShift: Boolean
    open var bCtrl: Boolean
    open var bAlt: Boolean
    open var bCmd: Boolean
    open var Key: Key
    open fun clone(): InputActionKeyMapping

    companion object {
        fun C(Other: UObject): InputActionKeyMapping
        fun C(Other: Any): InputActionKeyMapping
    }
}

external open class InputAxisKeyMapping {
    open var AxisName: String
    open var Scale: Number
    open var Key: Key
    open fun clone(): InputAxisKeyMapping

    companion object {
        fun C(Other: UObject): InputAxisKeyMapping
        fun C(Other: Any): InputAxisKeyMapping
    }
}

external open class InputActionSpeechMapping {
    open var ActionName: String
    open var SpeechKeyword: String
    open fun clone(): InputActionSpeechMapping

    companion object {
        fun C(Other: UObject): InputActionSpeechMapping
        fun C(Other: Any): InputActionSpeechMapping
    }
}

external interface `T$693` {
    var AxisNames: Array<String>
}

external interface `T$694` {
    var OutMappings: Array<InputAxisKeyMapping>
}

external interface `T$695` {
    var ActionNames: Array<String>
}

external interface `T$696` {
    var OutMappings: Array<InputActionKeyMapping>
}

external open class InputSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var AxisConfig: Array<InputAxisConfigEntry>
    open var bAltEnterTogglesFullscreen: Boolean
    open var bF11TogglesFullscreen: Boolean
    open var bUseMouseForTouch: Boolean
    open var bEnableMouseSmoothing: Boolean
    open var bEnableFOVScaling: Boolean
    open var bCaptureMouseOnLaunch: Boolean
    open var bDefaultViewportMouseLock: Boolean
    open var bEnableLegacyInputScales: Boolean
    open var bAlwaysShowTouchInterface: Boolean
    open var bShowConsoleOnFourFingerTap: Boolean
    open var bEnableGestureRecognizer: Boolean
    open var bUseAutocorrect: Boolean
    open var ExcludedAutocorrectOS: Array<String>
    open var ExcludedAutocorrectCultures: Array<String>
    open var ExcludedAutocorrectDeviceModels: Array<String>
    open var DefaultViewportMouseCaptureMode: String /* "NoCapture" | "CapturePermanently" | "CapturePermanently_IncludingInitialMouseDown" | "CaptureDuringMouseDown" | "CaptureDuringRightMouseDown" | "EMouseCaptureMode_MAX" */
    open var DefaultViewportMouseLockMode: String /* "DoNotLock" | "LockOnCapture" | "LockAlways" | "LockInFullscreen" | "EMouseLockMode_MAX" */
    open var FOVScale: Number
    open var DoubleClickTime: Number
    open var ActionMappings: Array<InputActionKeyMapping>
    open var AxisMappings: Array<InputAxisKeyMapping>
    open var SpeechMappings: Array<InputActionSpeechMapping>
    open var DefaultPlayerInputClass: Class
    open var DefaultInputComponentClass: Class
    open var DefaultTouchInterface: SoftObjectPath
    open var ConsoleKey: Key
    open var ConsoleKeys: Array<Key>
    open fun SaveKeyMappings()
    open fun RemoveAxisMapping(KeyMapping: InputAxisKeyMapping, bForceRebuildKeymaps: Boolean)
    open fun RemoveActionMapping(KeyMapping: InputActionKeyMapping, bForceRebuildKeymaps: Boolean)
    open fun GetAxisNames(AxisNames: Array<String> = definedExternally): `T$693`
    open fun GetAxisMappingByName(InAxisName: String, OutMappings: Array<InputAxisKeyMapping> = definedExternally): `T$694`
    open fun GetActionNames(ActionNames: Array<String> = definedExternally): `T$695`
    open fun GetActionMappingByName(InActionName: String, OutMappings: Array<InputActionKeyMapping> = definedExternally): `T$696`
    open fun ForceRebuildKeymaps()
    open fun AddAxisMapping(KeyMapping: InputAxisKeyMapping, bForceRebuildKeymaps: Boolean)
    open fun AddActionMapping(KeyMapping: InputActionKeyMapping, bForceRebuildKeymaps: Boolean)

    companion object {
        fun Load(ResourceName: String): InputSettings
        fun Find(Outer: UObject, ResourceName: String): InputSettings
        fun GetDefaultObject(): InputSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InputSettings
        fun GetInputSettings(): InputSettings
        fun C(Other: UObject): InputSettings
        fun C(Other: Any): InputSettings
    }
}

external open class BlueprintInputTouchDelegateBinding : BlueprintInputDelegateBinding {
    open var InputKeyEvent: String /* "IE_Pressed" | "IE_Released" | "IE_Repeat" | "IE_DoubleClick" | "IE_Axis" | "IE_MAX" */
    open var FunctionNameToBind: String
    override fun clone(): BlueprintInputTouchDelegateBinding

    companion object {
        fun C(Other: UObject): BlueprintInputTouchDelegateBinding
        fun C(Other: Any): BlueprintInputTouchDelegateBinding
    }
}

external open class InputTouchDelegateBinding : InputDelegateBinding {
    constructor()
    constructor(Outer: UObject)
    open var InputTouchDelegateBindings: Array<BlueprintInputTouchDelegateBinding>

    companion object {
        fun Load(ResourceName: String): InputTouchDelegateBinding
        fun Find(Outer: UObject, ResourceName: String): InputTouchDelegateBinding
        fun GetDefaultObject(): InputTouchDelegateBinding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InputTouchDelegateBinding
        fun C(Other: UObject): InputTouchDelegateBinding
        fun C(Other: Any): InputTouchDelegateBinding
    }
}

external open class InputVectorAxisDelegateBinding : InputAxisKeyDelegateBinding {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InputVectorAxisDelegateBinding
        fun Find(Outer: UObject, ResourceName: String): InputVectorAxisDelegateBinding
        fun GetDefaultObject(): InputVectorAxisDelegateBinding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InputVectorAxisDelegateBinding
        fun C(Other: UObject): InputVectorAxisDelegateBinding
        fun C(Other: Any): InputVectorAxisDelegateBinding
    }
}

external open class InstancedPlacementPartitionActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : ISMPartitionActor {
    open var PlacementGridGuid: Guid

    companion object {
        fun GetDefaultObject(): InstancedPlacementPartitionActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InstancedPlacementPartitionActor
        fun C(Other: UObject): InstancedPlacementPartitionActor
        fun C(Other: Any): InstancedPlacementPartitionActor
    }
}

external open class Interface_ActorSubobject : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): Interface_ActorSubobject
        fun Find(Outer: UObject, ResourceName: String): Interface_ActorSubobject
        fun GetDefaultObject(): Interface_ActorSubobject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Interface_ActorSubobject
        fun C(Other: UObject): Interface_ActorSubobject
        fun C(Other: Any): Interface_ActorSubobject
    }
}

external open class Interface_AssetUserData : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): Interface_AssetUserData
        fun Find(Outer: UObject, ResourceName: String): Interface_AssetUserData
        fun GetDefaultObject(): Interface_AssetUserData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Interface_AssetUserData
        fun C(Other: UObject): Interface_AssetUserData
        fun C(Other: Any): Interface_AssetUserData
    }
}

external open class Interface_AsyncCompilation : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): Interface_AsyncCompilation
        fun Find(Outer: UObject, ResourceName: String): Interface_AsyncCompilation
        fun GetDefaultObject(): Interface_AsyncCompilation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Interface_AsyncCompilation
        fun C(Other: UObject): Interface_AsyncCompilation
        fun C(Other: Any): Interface_AsyncCompilation
    }
}

external open class BoneReferenceSkeletonProvider : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BoneReferenceSkeletonProvider
        fun Find(Outer: UObject, ResourceName: String): BoneReferenceSkeletonProvider
        fun GetDefaultObject(): BoneReferenceSkeletonProvider
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BoneReferenceSkeletonProvider
        fun C(Other: UObject): BoneReferenceSkeletonProvider
        fun C(Other: Any): BoneReferenceSkeletonProvider
    }
}

external open class Interface_CollisionDataProvider : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): Interface_CollisionDataProvider
        fun Find(Outer: UObject, ResourceName: String): Interface_CollisionDataProvider
        fun GetDefaultObject(): Interface_CollisionDataProvider
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Interface_CollisionDataProvider
        fun C(Other: UObject): Interface_CollisionDataProvider
        fun C(Other: Any): Interface_CollisionDataProvider
    }
}

external open class Interface_PostProcessVolume : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): Interface_PostProcessVolume
        fun Find(Outer: UObject, ResourceName: String): Interface_PostProcessVolume
        fun GetDefaultObject(): Interface_PostProcessVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Interface_PostProcessVolume
        fun C(Other: UObject): Interface_PostProcessVolume
        fun C(Other: Any): Interface_PostProcessVolume
    }
}

external open class Interface_PreviewMeshProvider : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): Interface_PreviewMeshProvider
        fun Find(Outer: UObject, ResourceName: String): Interface_PreviewMeshProvider
        fun GetDefaultObject(): Interface_PreviewMeshProvider
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Interface_PreviewMeshProvider
        fun C(Other: UObject): Interface_PreviewMeshProvider
        fun C(Other: Any): Interface_PreviewMeshProvider
    }
}

external open class InterpFilter_Classes : InterpFilter {
    constructor()
    constructor(Outer: UObject)
    open var ClassToFilterBy: UnrealEngineClass
    open var TrackClasses: Array<UnrealEngineClass>

    companion object {
        fun Load(ResourceName: String): InterpFilter_Classes
        fun Find(Outer: UObject, ResourceName: String): InterpFilter_Classes
        fun GetDefaultObject(): InterpFilter_Classes
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpFilter_Classes
        fun C(Other: UObject): InterpFilter_Classes
        fun C(Other: Any): InterpFilter_Classes
    }
}

external open class InterpFilter_Custom : InterpFilter {
    constructor()
    constructor(Outer: UObject)
    open var GroupsToInclude: Array<InterpGroup>

    companion object {
        fun Load(ResourceName: String): InterpFilter_Custom
        fun Find(Outer: UObject, ResourceName: String): InterpFilter_Custom
        fun GetDefaultObject(): InterpFilter_Custom
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpFilter_Custom
        fun C(Other: UObject): InterpFilter_Custom
        fun C(Other: Any): InterpFilter_Custom
    }
}

external open class CameraPreviewInfo {
    open var PawnClass: UnrealEngineClass
    open var AnimSeq: AnimSequence
    open var Location: Vector
    open var Rotation: Rotator
    open var PawnInst: Pawn
    open fun clone(): CameraPreviewInfo

    companion object {
        fun C(Other: UObject): CameraPreviewInfo
        fun C(Other: Any): CameraPreviewInfo
    }
}

external open class InterpGroupCamera : InterpGroup {
    constructor()
    constructor(Outer: UObject)
    open var CameraAnimInst: CameraAnim
    open var Target: CameraPreviewInfo
    open var CompressTolerance: Number

    companion object {
        fun Load(ResourceName: String): InterpGroupCamera
        fun Find(Outer: UObject, ResourceName: String): InterpGroupCamera
        fun GetDefaultObject(): InterpGroupCamera
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpGroupCamera
        fun C(Other: UObject): InterpGroupCamera
        fun C(Other: Any): InterpGroupCamera
    }
}

external open class InterpGroupInstCamera : InterpGroupInst {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InterpGroupInstCamera
        fun Find(Outer: UObject, ResourceName: String): InterpGroupInstCamera
        fun GetDefaultObject(): InterpGroupInstCamera
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpGroupInstCamera
        fun C(Other: UObject): InterpGroupInstCamera
        fun C(Other: Any): InterpGroupInstCamera
    }
}

external open class InterpGroupInstDirector : InterpGroupInst {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InterpGroupInstDirector
        fun Find(Outer: UObject, ResourceName: String): InterpGroupInstDirector
        fun GetDefaultObject(): InterpGroupInstDirector
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpGroupInstDirector
        fun C(Other: UObject): InterpGroupInstDirector
        fun C(Other: Any): InterpGroupInstDirector
    }
}

external object EInterpToBehaviourType {
    var OneShot: String /* "OneShot" */
    var OneShot_Reverse: String /* "OneShot_Reverse" */
    var Loop_Reset: String /* "Loop_Reset" */
    var PingPong: String /* "PingPong" */
    var EInterpToBehaviourType_MAX: String /* "EInterpToBehaviourType_MAX" */
}

external open class InterpControlPoint {
    open var PositionControlPoint: Vector
    open var bPositionIsRelative: Boolean
    open fun clone(): InterpControlPoint

    companion object {
        fun C(Other: UObject): InterpControlPoint
        fun C(Other: Any): InterpControlPoint
    }
}

external open class InterpToMovementComponent : MovementComponent {
    constructor()
    constructor(Outer: UObject)
    open var Duration: Number
    open var bPauseOnImpact: Boolean
    open var bSweep: Boolean
    open var TeleportType: String /* "None" | "TeleportPhysics" | "ResetPhysics" | "ETeleportType_MAX" */
    open var BehaviourType: String /* "OneShot" | "OneShot_Reverse" | "Loop_Reset" | "PingPong" | "EInterpToBehaviourType_MAX" */
    open var bCheckIfStillInWorld: Boolean
    open var bForceSubStepping: Boolean
    open var OnInterpToReverse: UnrealEngineMulticastDelegate<(ImpactResult: HitResult, Time: Number) -> Unit>
    open var OnInterpToStop: UnrealEngineMulticastDelegate<(ImpactResult: HitResult, Time: Number) -> Unit>
    open var OnWaitBeginDelegate: UnrealEngineMulticastDelegate<(ImpactResult: HitResult, Time: Number) -> Unit>
    open var OnWaitEndDelegate: UnrealEngineMulticastDelegate<(ImpactResult: HitResult, Time: Number) -> Unit>
    open var OnResetDelegate: UnrealEngineMulticastDelegate<(ImpactResult: HitResult, Time: Number) -> Unit>
    open var MaxSimulationTimeStep: Number
    open var MaxSimulationIterations: Number
    open var ControlPoints: Array<InterpControlPoint>
    open fun StopSimulating(HitResult: HitResult)
    open fun RestartMovement(InitialDirection: Number)
    open fun ResetControlPoints()
    open fun FinaliseControlPoints()
    open fun AddControlPointPosition(Pos: Vector, bPositionIsRelative: Boolean)

    companion object {
        fun Load(ResourceName: String): InterpToMovementComponent
        fun Find(Outer: UObject, ResourceName: String): InterpToMovementComponent
        fun GetDefaultObject(): InterpToMovementComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpToMovementComponent
        fun C(Other: UObject): InterpToMovementComponent
        fun C(Other: Any): InterpToMovementComponent
    }
}

external open class InterpTrackFloatBase : InterpTrack {
    constructor()
    constructor(Outer: UObject)
    open var FloatTrack: InterpCurveFloat
    open var CurveTension: Number

    companion object {
        fun Load(ResourceName: String): InterpTrackFloatBase
        fun Find(Outer: UObject, ResourceName: String): InterpTrackFloatBase
        fun GetDefaultObject(): InterpTrackFloatBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackFloatBase
        fun C(Other: UObject): InterpTrackFloatBase
        fun C(Other: Any): InterpTrackFloatBase
    }
}

external open class AnimControlTrackKey {
    open var StartTime: Number
    open var AnimSeq: AnimSequence
    open var AnimStartOffset: Number
    open var AnimEndOffset: Number
    open var AnimPlayRate: Number
    open var bLooping: Boolean
    open var bReverse: Boolean
    open fun clone(): AnimControlTrackKey

    companion object {
        fun C(Other: UObject): AnimControlTrackKey
        fun C(Other: Any): AnimControlTrackKey
    }
}

external open class InterpTrackAnimControl : InterpTrackFloatBase {
    constructor()
    constructor(Outer: UObject)
    open var SlotName: String
    open var AnimSeqs: Array<AnimControlTrackKey>
    open var bSkipAnimNotifiers: Boolean

    companion object {
        fun Load(ResourceName: String): InterpTrackAnimControl
        fun Find(Outer: UObject, ResourceName: String): InterpTrackAnimControl
        fun GetDefaultObject(): InterpTrackAnimControl
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackAnimControl
        fun C(Other: UObject): InterpTrackAnimControl
        fun C(Other: Any): InterpTrackAnimControl
    }
}

external open class InterpTrackVectorBase : InterpTrack {
    constructor()
    constructor(Outer: UObject)
    open var VectorTrack: InterpCurveVector
    open var CurveTension: Number

    companion object {
        fun Load(ResourceName: String): InterpTrackVectorBase
        fun Find(Outer: UObject, ResourceName: String): InterpTrackVectorBase
        fun GetDefaultObject(): InterpTrackVectorBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackVectorBase
        fun C(Other: UObject): InterpTrackVectorBase
        fun C(Other: Any): InterpTrackVectorBase
    }
}

external open class InterpTrackAudioMaster : InterpTrackVectorBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InterpTrackAudioMaster
        fun Find(Outer: UObject, ResourceName: String): InterpTrackAudioMaster
        fun GetDefaultObject(): InterpTrackAudioMaster
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackAudioMaster
        fun C(Other: UObject): InterpTrackAudioMaster
        fun C(Other: Any): InterpTrackAudioMaster
    }
}

external open class BoolTrackKey {
    open var Time: Number
    open var Value: Boolean
    open fun clone(): BoolTrackKey

    companion object {
        fun C(Other: UObject): BoolTrackKey
        fun C(Other: Any): BoolTrackKey
    }
}

external open class InterpTrackBoolProp : InterpTrack {
    constructor()
    constructor(Outer: UObject)
    open var BoolTrack: Array<BoolTrackKey>
    open var PropertyName: String

    companion object {
        fun Load(ResourceName: String): InterpTrackBoolProp
        fun Find(Outer: UObject, ResourceName: String): InterpTrackBoolProp
        fun GetDefaultObject(): InterpTrackBoolProp
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackBoolProp
        fun C(Other: UObject): InterpTrackBoolProp
        fun C(Other: Any): InterpTrackBoolProp
    }
}

external open class InterpTrackColorProp : InterpTrackVectorBase {
    constructor()
    constructor(Outer: UObject)
    open var PropertyName: String

    companion object {
        fun Load(ResourceName: String): InterpTrackColorProp
        fun Find(Outer: UObject, ResourceName: String): InterpTrackColorProp
        fun GetDefaultObject(): InterpTrackColorProp
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackColorProp
        fun C(Other: UObject): InterpTrackColorProp
        fun C(Other: Any): InterpTrackColorProp
    }
}

external open class InterpTrackColorScale : InterpTrackVectorBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InterpTrackColorScale
        fun Find(Outer: UObject, ResourceName: String): InterpTrackColorScale
        fun GetDefaultObject(): InterpTrackColorScale
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackColorScale
        fun C(Other: UObject): InterpTrackColorScale
        fun C(Other: Any): InterpTrackColorScale
    }
}

external open class DirectorTrackCut {
    open var Time: Number
    open var TransitionTime: Number
    open var TargetCamGroup: String
    open var ShotNumber: Number
    open fun clone(): DirectorTrackCut

    companion object {
        fun C(Other: UObject): DirectorTrackCut
        fun C(Other: Any): DirectorTrackCut
    }
}

external open class InterpTrackDirector : InterpTrack {
    constructor()
    constructor(Outer: UObject)
    open var CutTrack: Array<DirectorTrackCut>
    open var bSimulateCameraCutsOnClients: Boolean
    open var PreviewCamera: CameraActor

    companion object {
        fun Load(ResourceName: String): InterpTrackDirector
        fun Find(Outer: UObject, ResourceName: String): InterpTrackDirector
        fun GetDefaultObject(): InterpTrackDirector
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackDirector
        fun C(Other: UObject): InterpTrackDirector
        fun C(Other: Any): InterpTrackDirector
    }
}

external open class EventTrackKey {
    open var Time: Number
    open var EventName: String
    open fun clone(): EventTrackKey

    companion object {
        fun C(Other: UObject): EventTrackKey
        fun C(Other: Any): EventTrackKey
    }
}

external open class InterpTrackEvent : InterpTrack {
    constructor()
    constructor(Outer: UObject)
    open var EventTrack: Array<EventTrackKey>
    open var bFireEventsWhenForwards: Boolean
    open var bFireEventsWhenBackwards: Boolean
    open var bFireEventsWhenJumpingForwards: Boolean
    open var bUseCustomEventName: Boolean

    companion object {
        fun Load(ResourceName: String): InterpTrackEvent
        fun Find(Outer: UObject, ResourceName: String): InterpTrackEvent
        fun GetDefaultObject(): InterpTrackEvent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackEvent
        fun C(Other: UObject): InterpTrackEvent
        fun C(Other: Any): InterpTrackEvent
    }
}

external open class InterpTrackFade : InterpTrackFloatBase {
    constructor()
    constructor(Outer: UObject)
    open var bPersistFade: Boolean
    open var bFadeAudio: Boolean
    open var FadeColor: LinearColor

    companion object {
        fun Load(ResourceName: String): InterpTrackFade
        fun Find(Outer: UObject, ResourceName: String): InterpTrackFade
        fun GetDefaultObject(): InterpTrackFade
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackFade
        fun C(Other: UObject): InterpTrackFade
        fun C(Other: Any): InterpTrackFade
    }
}

external open class InterpTrackFloatAnimBPParam : InterpTrackFloatBase {
    constructor()
    constructor(Outer: UObject)
    open var AnimBlueprintClass: UnrealEngineClass
    open var AnimClass: UnrealEngineClass
    open var ParamName: String

    companion object {
        fun Load(ResourceName: String): InterpTrackFloatAnimBPParam
        fun Find(Outer: UObject, ResourceName: String): InterpTrackFloatAnimBPParam
        fun GetDefaultObject(): InterpTrackFloatAnimBPParam
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackFloatAnimBPParam
        fun C(Other: UObject): InterpTrackFloatAnimBPParam
        fun C(Other: Any): InterpTrackFloatAnimBPParam
    }
}

external open class InterpTrackFloatMaterialParam : InterpTrackFloatBase {
    constructor()
    constructor(Outer: UObject)
    open var TargetMaterials: Array<MaterialInterface>
    open var ParamName: String

    companion object {
        fun Load(ResourceName: String): InterpTrackFloatMaterialParam
        fun Find(Outer: UObject, ResourceName: String): InterpTrackFloatMaterialParam
        fun GetDefaultObject(): InterpTrackFloatMaterialParam
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackFloatMaterialParam
        fun C(Other: UObject): InterpTrackFloatMaterialParam
        fun C(Other: Any): InterpTrackFloatMaterialParam
    }
}

external open class InterpTrackFloatParticleParam : InterpTrackFloatBase {
    constructor()
    constructor(Outer: UObject)
    open var ParamName: String

    companion object {
        fun Load(ResourceName: String): InterpTrackFloatParticleParam
        fun Find(Outer: UObject, ResourceName: String): InterpTrackFloatParticleParam
        fun GetDefaultObject(): InterpTrackFloatParticleParam
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackFloatParticleParam
        fun C(Other: UObject): InterpTrackFloatParticleParam
        fun C(Other: Any): InterpTrackFloatParticleParam
    }
}

external open class InterpTrackFloatProp : InterpTrackFloatBase {
    constructor()
    constructor(Outer: UObject)
    open var PropertyName: String

    companion object {
        fun Load(ResourceName: String): InterpTrackFloatProp
        fun Find(Outer: UObject, ResourceName: String): InterpTrackFloatProp
        fun GetDefaultObject(): InterpTrackFloatProp
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackFloatProp
        fun C(Other: UObject): InterpTrackFloatProp
        fun C(Other: Any): InterpTrackFloatProp
    }
}

external open class InterpTrackInstAnimControl : InterpTrackInst {
    constructor()
    constructor(Outer: UObject)
    open var LastUpdatePosition: Number
    open var InitPosition: Vector
    open var InitRotation: Rotator

    companion object {
        fun Load(ResourceName: String): InterpTrackInstAnimControl
        fun Find(Outer: UObject, ResourceName: String): InterpTrackInstAnimControl
        fun GetDefaultObject(): InterpTrackInstAnimControl
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackInstAnimControl
        fun C(Other: UObject): InterpTrackInstAnimControl
        fun C(Other: Any): InterpTrackInstAnimControl
    }
}

external open class InterpTrackInstAudioMaster : InterpTrackInst {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InterpTrackInstAudioMaster
        fun Find(Outer: UObject, ResourceName: String): InterpTrackInstAudioMaster
        fun GetDefaultObject(): InterpTrackInstAudioMaster
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackInstAudioMaster
        fun C(Other: UObject): InterpTrackInstAudioMaster
        fun C(Other: Any): InterpTrackInstAudioMaster
    }
}

external open class InterpTrackInstProperty : InterpTrackInst {
    constructor()
    constructor(Outer: UObject)
    open var InterpProperty: Any
    open var PropertyOuterObjectInst: UObject

    companion object {
        fun Load(ResourceName: String): InterpTrackInstProperty
        fun Find(Outer: UObject, ResourceName: String): InterpTrackInstProperty
        fun GetDefaultObject(): InterpTrackInstProperty
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackInstProperty
        fun C(Other: UObject): InterpTrackInstProperty
        fun C(Other: Any): InterpTrackInstProperty
    }
}

external open class InterpTrackInstBoolProp : InterpTrackInstProperty {
    constructor()
    constructor(Outer: UObject)
    open var ResetBool: Boolean

    companion object {
        fun Load(ResourceName: String): InterpTrackInstBoolProp
        fun Find(Outer: UObject, ResourceName: String): InterpTrackInstBoolProp
        fun GetDefaultObject(): InterpTrackInstBoolProp
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackInstBoolProp
        fun C(Other: UObject): InterpTrackInstBoolProp
        fun C(Other: Any): InterpTrackInstBoolProp
    }
}

external open class InterpTrackInstColorProp : InterpTrackInstProperty {
    constructor()
    constructor(Outer: UObject)
    open var ResetColor: Color

    companion object {
        fun Load(ResourceName: String): InterpTrackInstColorProp
        fun Find(Outer: UObject, ResourceName: String): InterpTrackInstColorProp
        fun GetDefaultObject(): InterpTrackInstColorProp
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackInstColorProp
        fun C(Other: UObject): InterpTrackInstColorProp
        fun C(Other: Any): InterpTrackInstColorProp
    }
}

external open class InterpTrackInstColorScale : InterpTrackInst {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InterpTrackInstColorScale
        fun Find(Outer: UObject, ResourceName: String): InterpTrackInstColorScale
        fun GetDefaultObject(): InterpTrackInstColorScale
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackInstColorScale
        fun C(Other: UObject): InterpTrackInstColorScale
        fun C(Other: Any): InterpTrackInstColorScale
    }
}

external open class InterpTrackInstEvent : InterpTrackInst {
    constructor()
    constructor(Outer: UObject)
    open var LastUpdatePosition: Number

    companion object {
        fun Load(ResourceName: String): InterpTrackInstEvent
        fun Find(Outer: UObject, ResourceName: String): InterpTrackInstEvent
        fun GetDefaultObject(): InterpTrackInstEvent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackInstEvent
        fun C(Other: UObject): InterpTrackInstEvent
        fun C(Other: Any): InterpTrackInstEvent
    }
}

external open class InterpTrackInstFade : InterpTrackInst {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InterpTrackInstFade
        fun Find(Outer: UObject, ResourceName: String): InterpTrackInstFade
        fun GetDefaultObject(): InterpTrackInstFade
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackInstFade
        fun C(Other: UObject): InterpTrackInstFade
        fun C(Other: Any): InterpTrackInstFade
    }
}

external open class InterpTrackInstFloatAnimBPParam : InterpTrackInst {
    constructor()
    constructor(Outer: UObject)
    open var AnimScriptInstance: AnimInstance
    open var ResetFloat: Number

    companion object {
        fun Load(ResourceName: String): InterpTrackInstFloatAnimBPParam
        fun Find(Outer: UObject, ResourceName: String): InterpTrackInstFloatAnimBPParam
        fun GetDefaultObject(): InterpTrackInstFloatAnimBPParam
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackInstFloatAnimBPParam
        fun C(Other: UObject): InterpTrackInstFloatAnimBPParam
        fun C(Other: Any): InterpTrackInstFloatAnimBPParam
    }
}

external open class PrimitiveMaterialRef {
    open var Primitive: PrimitiveComponent
    open var Decal: DecalComponent
    open var ElementIndex: Number
    open fun clone(): PrimitiveMaterialRef

    companion object {
        fun C(Other: UObject): PrimitiveMaterialRef
        fun C(Other: Any): PrimitiveMaterialRef
    }
}

external open class InterpTrackInstFloatMaterialParam : InterpTrackInst {
    constructor()
    constructor(Outer: UObject)
    open var MaterialInstances: Array<MaterialInstanceDynamic>
    open var ResetFloats: Array<Number>
    open var PrimitiveMaterialRefs: Array<PrimitiveMaterialRef>
    open var InstancedTrack: InterpTrackFloatMaterialParam

    companion object {
        fun Load(ResourceName: String): InterpTrackInstFloatMaterialParam
        fun Find(Outer: UObject, ResourceName: String): InterpTrackInstFloatMaterialParam
        fun GetDefaultObject(): InterpTrackInstFloatMaterialParam
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackInstFloatMaterialParam
        fun C(Other: UObject): InterpTrackInstFloatMaterialParam
        fun C(Other: Any): InterpTrackInstFloatMaterialParam
    }
}

external open class InterpTrackInstFloatParticleParam : InterpTrackInst {
    constructor()
    constructor(Outer: UObject)
    open var ResetFloat: Number

    companion object {
        fun Load(ResourceName: String): InterpTrackInstFloatParticleParam
        fun Find(Outer: UObject, ResourceName: String): InterpTrackInstFloatParticleParam
        fun GetDefaultObject(): InterpTrackInstFloatParticleParam
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackInstFloatParticleParam
        fun C(Other: UObject): InterpTrackInstFloatParticleParam
        fun C(Other: Any): InterpTrackInstFloatParticleParam
    }
}

external open class InterpTrackInstFloatProp : InterpTrackInstProperty {
    constructor()
    constructor(Outer: UObject)
    open var ResetFloat: Number

    companion object {
        fun Load(ResourceName: String): InterpTrackInstFloatProp
        fun Find(Outer: UObject, ResourceName: String): InterpTrackInstFloatProp
        fun GetDefaultObject(): InterpTrackInstFloatProp
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackInstFloatProp
        fun C(Other: UObject): InterpTrackInstFloatProp
        fun C(Other: Any): InterpTrackInstFloatProp
    }
}

external open class InterpTrackInstLinearColorProp : InterpTrackInstProperty {
    constructor()
    constructor(Outer: UObject)
    open var ResetColor: LinearColor

    companion object {
        fun Load(ResourceName: String): InterpTrackInstLinearColorProp
        fun Find(Outer: UObject, ResourceName: String): InterpTrackInstLinearColorProp
        fun GetDefaultObject(): InterpTrackInstLinearColorProp
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackInstLinearColorProp
        fun C(Other: UObject): InterpTrackInstLinearColorProp
        fun C(Other: Any): InterpTrackInstLinearColorProp
    }
}

external open class InterpTrackInstParticleReplay : InterpTrackInst {
    constructor()
    constructor(Outer: UObject)
    open var LastUpdatePosition: Number

    companion object {
        fun Load(ResourceName: String): InterpTrackInstParticleReplay
        fun Find(Outer: UObject, ResourceName: String): InterpTrackInstParticleReplay
        fun GetDefaultObject(): InterpTrackInstParticleReplay
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackInstParticleReplay
        fun C(Other: UObject): InterpTrackInstParticleReplay
        fun C(Other: Any): InterpTrackInstParticleReplay
    }
}

external open class InterpTrackInstSlomo : InterpTrackInst {
    constructor()
    constructor(Outer: UObject)
    open var OldTimeDilation: Number

    companion object {
        fun Load(ResourceName: String): InterpTrackInstSlomo
        fun Find(Outer: UObject, ResourceName: String): InterpTrackInstSlomo
        fun GetDefaultObject(): InterpTrackInstSlomo
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackInstSlomo
        fun C(Other: UObject): InterpTrackInstSlomo
        fun C(Other: Any): InterpTrackInstSlomo
    }
}

external open class InterpTrackInstSound : InterpTrackInst {
    constructor()
    constructor(Outer: UObject)
    open var LastUpdatePosition: Number
    open var PlayAudioComp: AudioComponent

    companion object {
        fun Load(ResourceName: String): InterpTrackInstSound
        fun Find(Outer: UObject, ResourceName: String): InterpTrackInstSound
        fun GetDefaultObject(): InterpTrackInstSound
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackInstSound
        fun C(Other: UObject): InterpTrackInstSound
        fun C(Other: Any): InterpTrackInstSound
    }
}

external object ETrackToggleAction {
    var ETTA_Off: String /* "ETTA_Off" */
    var ETTA_On: String /* "ETTA_On" */
    var ETTA_Toggle: String /* "ETTA_Toggle" */
    var ETTA_Trigger: String /* "ETTA_Trigger" */
    var ETTA_MAX: String /* "ETTA_MAX" */
}

external open class InterpTrackInstToggle : InterpTrackInst {
    constructor()
    constructor(Outer: UObject)
    open var Action: String /* "ETTA_Off" | "ETTA_On" | "ETTA_Toggle" | "ETTA_Trigger" | "ETTA_MAX" */
    open var LastUpdatePosition: Number
    open var bSavedActiveState: Boolean

    companion object {
        fun Load(ResourceName: String): InterpTrackInstToggle
        fun Find(Outer: UObject, ResourceName: String): InterpTrackInstToggle
        fun GetDefaultObject(): InterpTrackInstToggle
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackInstToggle
        fun C(Other: UObject): InterpTrackInstToggle
        fun C(Other: Any): InterpTrackInstToggle
    }
}

external open class InterpTrackVectorMaterialParam : InterpTrackVectorBase {
    constructor()
    constructor(Outer: UObject)
    open var TargetMaterials: Array<MaterialInterface>
    open var ParamName: String

    companion object {
        fun Load(ResourceName: String): InterpTrackVectorMaterialParam
        fun Find(Outer: UObject, ResourceName: String): InterpTrackVectorMaterialParam
        fun GetDefaultObject(): InterpTrackVectorMaterialParam
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackVectorMaterialParam
        fun C(Other: UObject): InterpTrackVectorMaterialParam
        fun C(Other: Any): InterpTrackVectorMaterialParam
    }
}

external open class InterpTrackInstVectorMaterialParam : InterpTrackInst {
    constructor()
    constructor(Outer: UObject)
    open var MaterialInstances: Array<MaterialInstanceDynamic>
    open var ResetVectors: Array<Vector>
    open var PrimitiveMaterialRefs: Array<PrimitiveMaterialRef>
    open var InstancedTrack: InterpTrackVectorMaterialParam

    companion object {
        fun Load(ResourceName: String): InterpTrackInstVectorMaterialParam
        fun Find(Outer: UObject, ResourceName: String): InterpTrackInstVectorMaterialParam
        fun GetDefaultObject(): InterpTrackInstVectorMaterialParam
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackInstVectorMaterialParam
        fun C(Other: UObject): InterpTrackInstVectorMaterialParam
        fun C(Other: Any): InterpTrackInstVectorMaterialParam
    }
}

external open class InterpTrackInstVectorProp : InterpTrackInstProperty {
    constructor()
    constructor(Outer: UObject)
    open var ResetVector: Vector

    companion object {
        fun Load(ResourceName: String): InterpTrackInstVectorProp
        fun Find(Outer: UObject, ResourceName: String): InterpTrackInstVectorProp
        fun GetDefaultObject(): InterpTrackInstVectorProp
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackInstVectorProp
        fun C(Other: UObject): InterpTrackInstVectorProp
        fun C(Other: Any): InterpTrackInstVectorProp
    }
}

external object EVisibilityTrackAction {
    var EVTA_Hide: String /* "EVTA_Hide" */
    var EVTA_Show: String /* "EVTA_Show" */
    var EVTA_Toggle: String /* "EVTA_Toggle" */
    var EVTA_MAX: String /* "EVTA_MAX" */
}

external open class InterpTrackInstVisibility : InterpTrackInst {
    constructor()
    constructor(Outer: UObject)
    open var Action: String /* "EVTA_Hide" | "EVTA_Show" | "EVTA_Toggle" | "EVTA_MAX" */
    open var LastUpdatePosition: Number

    companion object {
        fun Load(ResourceName: String): InterpTrackInstVisibility
        fun Find(Outer: UObject, ResourceName: String): InterpTrackInstVisibility
        fun GetDefaultObject(): InterpTrackInstVisibility
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackInstVisibility
        fun C(Other: UObject): InterpTrackInstVisibility
        fun C(Other: Any): InterpTrackInstVisibility
    }
}

external open class InterpCurvePointLinearColor {
    open var InVal: Number
    open var OutVal: LinearColor
    open var ArriveTangent: LinearColor
    open var LeaveTangent: LinearColor
    open var InterpMode: String /* "CIM_Linear" | "CIM_CurveAuto" | "CIM_Constant" | "CIM_CurveUser" | "CIM_CurveBreak" | "CIM_CurveAutoClamped" | "CIM_MAX" */
    open fun clone(): InterpCurvePointLinearColor

    companion object {
        fun C(Other: UObject): InterpCurvePointLinearColor
        fun C(Other: Any): InterpCurvePointLinearColor
    }
}

external open class InterpCurveLinearColor {
    open var Points: Array<InterpCurvePointLinearColor>
    open var bIsLooped: Boolean
    open var LoopKeyOffset: Number
    open fun clone(): InterpCurveLinearColor

    companion object {
        fun C(Other: UObject): InterpCurveLinearColor
        fun C(Other: Any): InterpCurveLinearColor
    }
}

external open class InterpTrackLinearColorBase : InterpTrack {
    constructor()
    constructor(Outer: UObject)
    open var LinearColorTrack: InterpCurveLinearColor
    open var CurveTension: Number

    companion object {
        fun Load(ResourceName: String): InterpTrackLinearColorBase
        fun Find(Outer: UObject, ResourceName: String): InterpTrackLinearColorBase
        fun GetDefaultObject(): InterpTrackLinearColorBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackLinearColorBase
        fun C(Other: UObject): InterpTrackLinearColorBase
        fun C(Other: Any): InterpTrackLinearColorBase
    }
}

external open class InterpTrackLinearColorProp : InterpTrackLinearColorBase {
    constructor()
    constructor(Outer: UObject)
    open var PropertyName: String

    companion object {
        fun Load(ResourceName: String): InterpTrackLinearColorProp
        fun Find(Outer: UObject, ResourceName: String): InterpTrackLinearColorProp
        fun GetDefaultObject(): InterpTrackLinearColorProp
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackLinearColorProp
        fun C(Other: UObject): InterpTrackLinearColorProp
        fun C(Other: Any): InterpTrackLinearColorProp
    }
}

external object EInterpMoveAxis {
    var AXIS_TranslationX: String /* "AXIS_TranslationX" */
    var AXIS_TranslationY: String /* "AXIS_TranslationY" */
    var AXIS_TranslationZ: String /* "AXIS_TranslationZ" */
    var AXIS_RotationX: String /* "AXIS_RotationX" */
    var AXIS_RotationY: String /* "AXIS_RotationY" */
    var AXIS_RotationZ: String /* "AXIS_RotationZ" */
    var AXIS_MAX: String /* "AXIS_MAX" */
}

external open class InterpTrackMoveAxis : InterpTrackFloatBase {
    constructor()
    constructor(Outer: UObject)
    open var MoveAxis: String /* "AXIS_TranslationX" | "AXIS_TranslationY" | "AXIS_TranslationZ" | "AXIS_RotationX" | "AXIS_RotationY" | "AXIS_RotationZ" | "AXIS_MAX" */
    open var LookupTrack: InterpLookupTrack

    companion object {
        fun Load(ResourceName: String): InterpTrackMoveAxis
        fun Find(Outer: UObject, ResourceName: String): InterpTrackMoveAxis
        fun GetDefaultObject(): InterpTrackMoveAxis
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackMoveAxis
        fun C(Other: UObject): InterpTrackMoveAxis
        fun C(Other: Any): InterpTrackMoveAxis
    }
}

external open class ParticleReplayTrackKey {
    open var Time: Number
    open var Duration: Number
    open var ClipIDNumber: Number
    open fun clone(): ParticleReplayTrackKey

    companion object {
        fun C(Other: UObject): ParticleReplayTrackKey
        fun C(Other: Any): ParticleReplayTrackKey
    }
}

external open class InterpTrackParticleReplay : InterpTrack {
    constructor()
    constructor(Outer: UObject)
    open var TrackKeys: Array<ParticleReplayTrackKey>
    open var bIsCapturingReplay: Boolean
    open var FixedTimeStep: Number

    companion object {
        fun Load(ResourceName: String): InterpTrackParticleReplay
        fun Find(Outer: UObject, ResourceName: String): InterpTrackParticleReplay
        fun GetDefaultObject(): InterpTrackParticleReplay
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackParticleReplay
        fun C(Other: UObject): InterpTrackParticleReplay
        fun C(Other: Any): InterpTrackParticleReplay
    }
}

external open class InterpTrackSlomo : InterpTrackFloatBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InterpTrackSlomo
        fun Find(Outer: UObject, ResourceName: String): InterpTrackSlomo
        fun GetDefaultObject(): InterpTrackSlomo
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackSlomo
        fun C(Other: UObject): InterpTrackSlomo
        fun C(Other: Any): InterpTrackSlomo
    }
}

external open class SoundTrackKey {
    open var Time: Number
    open var Volume: Number
    open var Pitch: Number
    open var Sound: SoundBase
    open fun clone(): SoundTrackKey

    companion object {
        fun C(Other: UObject): SoundTrackKey
        fun C(Other: Any): SoundTrackKey
    }
}

external open class InterpTrackSound : InterpTrackVectorBase {
    constructor()
    constructor(Outer: UObject)
    open var Sounds: Array<SoundTrackKey>
    open var bPlayOnReverse: Boolean
    open var bContinueSoundOnMatineeEnd: Boolean
    open var bSuppressSubtitles: Boolean
    open var bTreatAsDialogue: Boolean
    open var bAttach: Boolean

    companion object {
        fun Load(ResourceName: String): InterpTrackSound
        fun Find(Outer: UObject, ResourceName: String): InterpTrackSound
        fun GetDefaultObject(): InterpTrackSound
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackSound
        fun C(Other: UObject): InterpTrackSound
        fun C(Other: Any): InterpTrackSound
    }
}

external open class ToggleTrackKey {
    open var Time: Number
    open var ToggleAction: String /* "ETTA_Off" | "ETTA_On" | "ETTA_Toggle" | "ETTA_Trigger" | "ETTA_MAX" */
    open fun clone(): ToggleTrackKey

    companion object {
        fun C(Other: UObject): ToggleTrackKey
        fun C(Other: Any): ToggleTrackKey
    }
}

external open class InterpTrackToggle : InterpTrack {
    constructor()
    constructor(Outer: UObject)
    open var ToggleTrack: Array<ToggleTrackKey>
    open var bActivateSystemEachUpdate: Boolean
    open var bActivateWithJustAttachedFlag: Boolean
    open var bFireEventsWhenForwards: Boolean
    open var bFireEventsWhenBackwards: Boolean
    open var bFireEventsWhenJumpingForwards: Boolean

    companion object {
        fun Load(ResourceName: String): InterpTrackToggle
        fun Find(Outer: UObject, ResourceName: String): InterpTrackToggle
        fun GetDefaultObject(): InterpTrackToggle
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackToggle
        fun C(Other: UObject): InterpTrackToggle
        fun C(Other: Any): InterpTrackToggle
    }
}

external open class InterpTrackVectorProp : InterpTrackVectorBase {
    constructor()
    constructor(Outer: UObject)
    open var PropertyName: String

    companion object {
        fun Load(ResourceName: String): InterpTrackVectorProp
        fun Find(Outer: UObject, ResourceName: String): InterpTrackVectorProp
        fun GetDefaultObject(): InterpTrackVectorProp
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackVectorProp
        fun C(Other: UObject): InterpTrackVectorProp
        fun C(Other: Any): InterpTrackVectorProp
    }
}

external object EVisibilityTrackCondition {
    var EVTC_Always: String /* "EVTC_Always" */
    var EVTC_GoreEnabled: String /* "EVTC_GoreEnabled" */
    var EVTC_GoreDisabled: String /* "EVTC_GoreDisabled" */
    var EVTC_MAX: String /* "EVTC_MAX" */
}

external open class VisibilityTrackKey {
    open var Time: Number
    open var Action: String /* "EVTA_Hide" | "EVTA_Show" | "EVTA_Toggle" | "EVTA_MAX" */
    open var ActiveCondition: String /* "EVTC_Always" | "EVTC_GoreEnabled" | "EVTC_GoreDisabled" | "EVTC_MAX" */
    open fun clone(): VisibilityTrackKey

    companion object {
        fun C(Other: UObject): VisibilityTrackKey
        fun C(Other: Any): VisibilityTrackKey
    }
}

external open class InterpTrackVisibility : InterpTrack {
    constructor()
    constructor(Outer: UObject)
    open var VisibilityTrack: Array<VisibilityTrackKey>
    open var bFireEventsWhenForwards: Boolean
    open var bFireEventsWhenBackwards: Boolean
    open var bFireEventsWhenJumpingForwards: Boolean

    companion object {
        fun Load(ResourceName: String): InterpTrackVisibility
        fun Find(Outer: UObject, ResourceName: String): InterpTrackVisibility
        fun GetDefaultObject(): InterpTrackVisibility
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpTrackVisibility
        fun C(Other: UObject): InterpTrackVisibility
        fun C(Other: Any): InterpTrackVisibility
    }
}

external open class IntSerialization : UObject {
    constructor()
    constructor(Outer: UObject)
    open var UnsignedInt16Variable: Any
    open var UnsignedInt32Variable: Any
    open var UnsignedInt64Variable: Any
    open var SignedInt8Variable: Any
    open var SignedInt16Variable: Any
    open var SignedInt64Variable: Any
    open var UnsignedInt8Variable: Number
    open var SignedInt32Variable: Number

    companion object {
        fun Load(ResourceName: String): IntSerialization
        fun Find(Outer: UObject, ResourceName: String): IntSerialization
        fun GetDefaultObject(): IntSerialization
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): IntSerialization
        fun C(Other: UObject): IntSerialization
        fun C(Other: Any): IntSerialization
    }
}

external open class ISMPartitionInstanceManager : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ISMPartitionInstanceManager
        fun Find(Outer: UObject, ResourceName: String): ISMPartitionInstanceManager
        fun GetDefaultObject(): ISMPartitionInstanceManager
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ISMPartitionInstanceManager
        fun C(Other: UObject): ISMPartitionInstanceManager
        fun C(Other: Any): ISMPartitionInstanceManager
    }
}

external open class ISMPartitionInstanceManagerProvider : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ISMPartitionInstanceManagerProvider
        fun Find(Outer: UObject, ResourceName: String): ISMPartitionInstanceManagerProvider
        fun GetDefaultObject(): ISMPartitionInstanceManagerProvider
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ISMPartitionInstanceManagerProvider
        fun C(Other: UObject): ISMPartitionInstanceManagerProvider
        fun C(Other: Any): ISMPartitionInstanceManagerProvider
    }
}

external open class KillZVolume(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : PhysicsVolume {
    companion object {
        fun GetDefaultObject(): KillZVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): KillZVolume
        fun C(Other: UObject): KillZVolume
        fun C(Other: Any): KillZVolume
    }
}

external interface `T$697` {
    var FilteredArray: Array<Actor>
}

external interface `T$698` {
    var RandomStream: RandomStream
    var OutItem: Number
    var OutIndex: Number
}

external interface `T$699` {
    var OutItem: Number
    var OutIndex: Number
}

external interface `T$700` {
    var Item: Number
}

external open class KismetArrayLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): KismetArrayLibrary
        fun Find(Outer: UObject, ResourceName: String): KismetArrayLibrary
        fun GetDefaultObject(): KismetArrayLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): KismetArrayLibrary
        fun SetArrayPropertyByName(UObject: UObject, PropertyName: String, Value: Array<Number>)
        fun FilterArray(TargetArray: Array<Actor>, FilterClass: UnrealEngineClass, FilteredArray: Array<Actor> = definedExternally): `T$697`
        fun SwapArrayElements(TargetArray: Array<Number>, FirstIndex: Number, SecondIndex: Number)
        fun Shuffle(TargetArray: Array<Number>)
        fun SetArrayElem(TargetArray: Array<Number>, index: Number, Item: Number, bSizeToFit: Boolean)
        fun Reverse(TargetArray: Array<Number>)
        fun Resize(TargetArray: Array<Number>, Size: Number)
        fun RemoveItem(TargetArray: Array<Number>, Item: Number): Boolean
        fun RemoveIndex(TargetArray: Array<Number>, IndexToRemove: Number)
        fun RandomArrayItemfromStream(TargetArray: Array<Number>, RandomStream: RandomStream = definedExternally, OutItem: Number = definedExternally, OutIndex: Number = definedExternally): `T$698`
        fun RandomArrayItem(TargetArray: Array<Number>, OutItem: Number = definedExternally, OutIndex: Number = definedExternally): `T$699`
        fun Length(TargetArray: Array<Number>): Number
        fun LastIndex(TargetArray: Array<Number>): Number
        fun IsValidIndex(TargetArray: Array<Number>, IndexToTest: Number): Boolean
        fun IsNotEmpty(TargetArray: Array<Number>): Boolean
        fun IsEmpty(TargetArray: Array<Number>): Boolean
        fun Insert(TargetArray: Array<Number>, NewItem: Number, index: Number)
        fun Identical(ArrayA: Array<Number>, ArrayB: Array<Number>): Boolean
        fun Get(TargetArray: Array<Number>, index: Number, Item: Number = definedExternally): `T$700`
        fun FindItem(TargetArray: Array<Number>, ItemToFind: Number): Number
        fun ContainsItem(TargetArray: Array<Number>, ItemToFind: Number): Boolean
        fun Clear(TargetArray: Array<Number>)
        fun AppendArray(TargetArray: Array<Number>, SourceArray: Array<Number>)
        fun AddUnique(TargetArray: Array<Number>, NewItem: Number): Number
        fun Add(TargetArray: Array<Number>, NewItem: Number): Number
        fun C(Other: UObject): KismetArrayLibrary
        fun C(Other: Any): KismetArrayLibrary
    }
}

external interface `T$701` {
    var OutGuid: Guid
    var Success: Boolean
}

external open class KismetGuidLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): KismetGuidLibrary
        fun Find(Outer: UObject, ResourceName: String): KismetGuidLibrary
        fun GetDefaultObject(): KismetGuidLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): KismetGuidLibrary
        fun ParseStringtoGuid(GuidString: String, OutGuid: Guid = definedExternally, Success: Boolean = definedExternally): `T$701`
        fun NotEqual_GuidGuid(A: Guid, B: Guid): Boolean
        fun NewGuid(): Guid
        fun IsValid_Guid(InGuid: Guid): Boolean
        fun Invalidate_Guid(InGuid: Guid = definedExternally): `T$0`
        fun EqualEqual_GuidGuid(A: Guid, B: Guid): Boolean
        fun Conv_GuidToString(InGuid: Guid): String
        fun C(Other: UObject): KismetGuidLibrary
        fun C(Other: Any): KismetGuidLibrary
    }
}

external open class KismetInputLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): KismetInputLibrary
        fun Find(Outer: UObject, ResourceName: String): KismetInputLibrary
        fun GetDefaultObject(): KismetInputLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): KismetInputLibrary
        fun PointerEvent_IsTouchEvent(Input: UPointerEvent): Boolean
        fun PointerEvent_IsMouseButtonDown(Input: UPointerEvent, MouseButton: Key): Boolean
        fun PointerEvent_GetWheelDelta(Input: UPointerEvent): Number
        fun PointerEvent_GetUserIndex(Input: UPointerEvent): Number
        fun PointerEvent_GetTouchpadIndex(Input: UPointerEvent): Number
        fun PointerEvent_GetScreenSpacePosition(Input: UPointerEvent): Vector2D
        fun PointerEvent_GetPointerIndex(Input: UPointerEvent): Number
        fun PointerEvent_GetLastScreenSpacePosition(Input: UPointerEvent): Vector2D
        fun PointerEvent_GetGestureType(Input: UPointerEvent): String /* "None" | "Scroll" | "Magnify" | "Swipe" | "Rotate" | "LongPress" | "ESlateGesture_MAX" */
        fun PointerEvent_GetGestureDelta(Input: UPointerEvent): Vector2D
        fun PointerEvent_GetEffectingButton(Input: UPointerEvent): Key
        fun PointerEvent_GetCursorDelta(Input: UPointerEvent): Vector2D
        fun Key_IsVectorAxis(Key: Key): Boolean
        fun Key_IsValid(Key: Key): Boolean
        fun Key_IsMouseButton(Key: Key): Boolean
        fun Key_IsModifierKey(Key: Key): Boolean
        fun Key_IsKeyboardKey(Key: Key): Boolean
        fun Key_IsGamepadKey(Key: Key): Boolean
        fun Key_IsDigital(Key: Key): Boolean
        fun Key_IsButtonAxis(Key: Key): Boolean
        fun Key_IsAxis3D(Key: Key): Boolean
        fun Key_IsAxis2D(Key: Key): Boolean
        fun Key_IsAxis1D(Key: Key): Boolean
        fun Key_IsAnalog(Key: Key): Boolean
        fun Key_GetNavigationDirectionFromKey(InKeyEvent: KeyEvent): String /* "Left" | "Right" | "Up" | "Down" | "Next" | "Previous" | "Num" | "Invalid" | "EUINavigation_MAX" */
        fun Key_GetNavigationDirectionFromAnalog(InAnalogEvent: AnalogInputEvent): String /* "Left" | "Right" | "Up" | "Down" | "Next" | "Previous" | "Num" | "Invalid" | "EUINavigation_MAX" */
        fun Key_GetNavigationActionFromKey(InKeyEvent: KeyEvent): String /* "Accept" | "Back" | "Num" | "Invalid" | "EUINavigationAction_MAX" */
        fun Key_GetNavigationAction(InKey: Key): String /* "Accept" | "Back" | "Num" | "Invalid" | "EUINavigationAction_MAX" */
        fun Key_GetDisplayName(Key: Key): String
        fun InputEvent_IsShiftDown(Input: InputEvent): Boolean
        fun InputEvent_IsRightShiftDown(Input: InputEvent): Boolean
        fun InputEvent_IsRightControlDown(Input: InputEvent): Boolean
        fun InputEvent_IsRightCommandDown(Input: InputEvent): Boolean
        fun InputEvent_IsRightAltDown(Input: InputEvent): Boolean
        fun InputEvent_IsRepeat(Input: InputEvent): Boolean
        fun InputEvent_IsLeftShiftDown(Input: InputEvent): Boolean
        fun InputEvent_IsLeftControlDown(Input: InputEvent): Boolean
        fun InputEvent_IsLeftCommandDown(Input: InputEvent): Boolean
        fun InputEvent_IsLeftAltDown(Input: InputEvent): Boolean
        fun InputEvent_IsControlDown(Input: InputEvent): Boolean
        fun InputEvent_IsCommandDown(Input: InputEvent): Boolean
        fun InputEvent_IsAltDown(Input: InputEvent): Boolean
        fun InputChord_GetDisplayName(Key: InputChord): String
        fun GetUserIndex(Input: KeyEvent): Number
        fun GetKey(Input: KeyEvent): Key
        fun GetAnalogValue(Input: AnalogInputEvent): Number
        fun EqualEqual_KeyKey(A: Key, B: Key): Boolean
        fun EqualEqual_InputChordInputChord(A: InputChord, B: InputChord): Boolean
        fun CalibrateTilt()
        fun C(Other: UObject): KismetInputLibrary
        fun C(Other: Any): KismetInputLibrary
    }
}

external object ELocalizedTextSourceCategory {
    var Game: String /* "Game" */
    var Engine: String /* "Engine" */
    var Editor: String /* "Editor" */
    var ELocalizedTextSourceCategory_MAX: String /* "ELocalizedTextSourceCategory_MAX" */
}

external open class KismetInternationalizationLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): KismetInternationalizationLibrary
        fun Find(Outer: UObject, ResourceName: String): KismetInternationalizationLibrary
        fun GetDefaultObject(): KismetInternationalizationLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): KismetInternationalizationLibrary
        fun SetCurrentLocale(Culture: String, SaveToConfig: Boolean): Boolean
        fun SetCurrentLanguageAndLocale(Culture: String, SaveToConfig: Boolean): Boolean
        fun SetCurrentLanguage(Culture: String, SaveToConfig: Boolean): Boolean
        fun SetCurrentCulture(Culture: String, SaveToConfig: Boolean): Boolean
        fun SetCurrentAssetGroupCulture(AssetGroup: String, Culture: String, SaveToConfig: Boolean): Boolean
        fun GetSuitableCulture(AvailableCultures: Array<String>, CultureToMatch: String, FallbackCulture: String): String
        fun GetNativeCulture(TextCategory: String /* "Game" | "Engine" | "Editor" | "ELocalizedTextSourceCategory_MAX" */): String
        fun GetLocalizedCultures(IncludeGame: Boolean, IncludeEngine: Boolean, IncludeEditor: Boolean, IncludeAdditional: Boolean): Array<String>
        fun GetCurrentLocale(): String
        fun GetCurrentLanguage(): String
        fun GetCurrentCulture(): String
        fun GetCurrentAssetGroupCulture(AssetGroup: String): String
        fun GetCultureDisplayName(Culture: String, Localized: Boolean): String
        fun ClearCurrentAssetGroupCulture(AssetGroup: String, SaveToConfig: Boolean)
        fun C(Other: UObject): KismetInternationalizationLibrary
        fun C(Other: Any): KismetInternationalizationLibrary
    }
}

external open class KismetMaterialLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): KismetMaterialLibrary
        fun Find(Outer: UObject, ResourceName: String): KismetMaterialLibrary
        fun GetDefaultObject(): KismetMaterialLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): KismetMaterialLibrary
        fun SetVectorParameterValue(WorldContextObject: UObject, Collection: MaterialParameterCollection, ParameterName: String, ParameterValue: LinearColor)
        fun SetScalarParameterValue(WorldContextObject: UObject, Collection: MaterialParameterCollection, ParameterName: String, ParameterValue: Number)
        fun GetVectorParameterValue(WorldContextObject: UObject, Collection: MaterialParameterCollection, ParameterName: String): LinearColor
        fun GetScalarParameterValue(WorldContextObject: UObject, Collection: MaterialParameterCollection, ParameterName: String): Number
        fun CreateDynamicMaterialInstance(WorldContextObject: UObject, Parent: MaterialInterface, OptionalName: String, CreationFlags: String /* "None" | "Transient" | "EMIDCreationFlags_MAX" */): MaterialInstanceDynamic
        fun C(Other: UObject): KismetMaterialLibrary
        fun C(Other: Any): KismetMaterialLibrary
    }
}

external interface `T$702` {
    var SpringState: FloatSpringState
}

external open class FloatSpringState {
    open fun clone(): FloatSpringState
    open fun ResetFloatSpringState(): `T$702`
    open fun SetFloatSpringStateVelocity(Velocity: Number = definedExternally): `T$702`

    companion object {
        fun C(Other: UObject): FloatSpringState
        fun C(Other: Any): FloatSpringState
        fun ResetFloatSpringState(SpringState: FloatSpringState = definedExternally): `T$702`
        fun SetFloatSpringStateVelocity(SpringState: FloatSpringState = definedExternally, Velocity: Number = definedExternally): `T$702`
    }
}

external interface `T$703` {
    var Result: Timespan
    var `$`: Boolean
}

external interface `T$704` {
    var IndexOfMinValue: Number
    var MinValue: Number
}

external interface `T$705` {
    var IndexOfMaxValue: Number
    var MaxValue: Number
}

external interface `T$706` {
    var Remainder: Any
    var `$`: Any
}

external interface `T$707` {
    var Remainder: Any
    var `$`: Number
}

external interface `T$708` {
    var SpringState: FloatSpringState
    var `$`: Number
}

external interface `T$709` {
    var Result: DateTime
    var `$`: Boolean
}

external open class KismetMathLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): KismetMathLibrary
        fun Find(Outer: UObject, ResourceName: String): KismetMathLibrary
        fun GetDefaultObject(): KismetMathLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): KismetMathLibrary
        fun BitwiseXOR(A: Number, B: Number): Number
        fun BitwiseXOR(A: Any, B: Any): Any
        fun Wrap(Value: Number, Min: Number, Max: Number): Number
        fun WeightedMovingAverage_FVector(CurrentSample: Vector, PreviousSample: Vector, Weight: Number): Vector
        fun WeightedMovingAverage_FRotator(CurrentSample: Rotator, PreviousSample: Rotator, Weight: Number): Rotator
        fun WeightedMovingAverageFloat(CurrentSample: Number, PreviousSample: Number, Weight: Number): Number
        fun VSizeXYSquared(A: Vector): Any
        fun VSizeXY(A: Vector): Any
        fun VSizeSquared(A: Vector): Any
        fun VSize2DSquared(A: Vector2D): Any
        fun VSize2D(A: Vector2D): Any
        fun VSize(A: Vector): Any
        fun VLerp(A: Vector, B: Vector, Alpha: Number): Vector
        fun VInterpTo_Constant(Current: Vector, Target: Vector, DeltaTime: Number, InterpSpeed: Number): Vector
        fun VInterpTo(Current: Vector, Target: Vector, DeltaTime: Number, InterpSpeed: Number): Vector
        fun VectorSpringInterp(Current: Vector, Target: Vector, SpringState: VectorSpringState = definedExternally, Stiffness: Number = definedExternally, CriticalDampingFactor: Number = definedExternally, DeltaTime: Number = definedExternally, Mass: Number = definedExternally, TargetVelocityAmount: Number = definedExternally, bClamp: Boolean = definedExternally, MinValue: Vector = definedExternally, MaxValue: Vector = definedExternally, bInitializeFromTarget: Boolean = definedExternally): `T$501`
        fun Vector_Zero(): Vector
        fun Vector_Up(): Vector
        fun Vector_UnwindEuler(A: Vector = definedExternally): `T$500`
        fun Vector_UnitCartesianToSpherical(A: Vector): Vector2D
        fun Vector_ToRadians(A: Vector): Vector
        fun Vector_ToDegrees(A: Vector): Vector
        fun Vector_SnappedToGrid(InVect: Vector, InGridSize: Number): Vector
        fun Vector_Set(A: Vector = definedExternally, X: Any = definedExternally, Y: Any = definedExternally, Z: Any = definedExternally): `T$500`
        fun Vector_Right(): Vector
        fun Vector_Reciprocal(A: Vector): Vector
        fun Vector_ProjectOnToNormal(V: Vector, InNormal: Vector): Vector
        fun Vector_One(): Vector
        fun Vector_NormalUnsafe(A: Vector): Vector
        fun Vector_Normalize(A: Vector = definedExternally, Tolerance: Number = definedExternally): `T$500`
        fun Vector_Normal2D(A: Vector, Tolerance: Number): Vector
        fun Vector_MirrorByPlane(A: Vector, InPlane: Plane): Vector
        fun Vector_Left(): Vector
        fun Vector_IsZero(A: Vector): Boolean
        fun Vector_IsUnit(A: Vector, SquaredLenthTolerance: Number): Boolean
        fun Vector_IsUniform(A: Vector, Tolerance: Number): Boolean
        fun Vector_IsNormal(A: Vector): Boolean
        fun Vector_IsNearlyZero(A: Vector, Tolerance: Number): Boolean
        fun Vector_IsNAN(A: Vector): Boolean
        fun Vector_HeadingAngle(A: Vector): Any
        fun Vector_GetSignVector(A: Vector): Vector
        fun Vector_GetProjection(A: Vector): Vector
        fun Vector_GetAbsMin(A: Vector): Any
        fun Vector_GetAbsMax(A: Vector): Any
        fun Vector_GetAbs(A: Vector): Vector
        fun Vector_Forward(): Vector
        fun Vector_Down(): Vector
        fun Vector_DistanceSquared(v1: Vector, v2: Vector): Any
        fun Vector_Distance2DSquared(v1: Vector, v2: Vector): Any
        fun Vector_Distance2D(v1: Vector, v2: Vector): Any
        fun Vector_Distance(v1: Vector, v2: Vector): Any
        fun Vector_CosineAngle2D(A: Vector, B: Vector): Any
        fun Vector_ComponentMin(A: Vector, B: Vector): Vector
        fun Vector_ComponentMax(A: Vector, B: Vector): Vector
        fun Vector_ClampSizeMax2D(A: Vector, Max: Any): Vector
        fun Vector_ClampSizeMax(A: Vector, Max: Any): Vector
        fun Vector_ClampSize2D(A: Vector, Min: Any, Max: Any): Vector
        fun Vector_BoundedToCube(InVect: Vector, InRadius: Number): Vector
        fun Vector_BoundedToBox(InVect: Vector, InBoxMin: Vector, InBoxMax: Vector): Vector
        fun Vector_Backward(): Vector
        fun Vector_Assign(A: Vector = definedExternally, InVector: Vector = definedExternally): `T$500`
        fun Vector_AddBounded(A: Vector = definedExternally, InAddVect: Vector = definedExternally, InRadius: Number = definedExternally): `T$500`
        fun Vector4_Zero(): Vector4
        fun Vector4_SizeSquared3(A: Vector4): Any
        fun Vector4_SizeSquared(A: Vector4): Any
        fun Vector4_Size3(A: Vector4): Any
        fun Vector4_Size(A: Vector4): Any
        fun Vector4_Set(A: Vector4 = definedExternally, X: Any = definedExternally, Y: Any = definedExternally, Z: Any = definedExternally, W: Any = definedExternally): `T$12`
        fun Vector4_NormalUnsafe3(A: Vector4): Vector4
        fun Vector4_Normalize3(A: Vector4 = definedExternally, Tolerance: Number = definedExternally): `T$12`
        fun Vector4_Normal3(A: Vector4, Tolerance: Number): Vector4
        fun Vector4_Negated(A: Vector4): Vector4
        fun Vector4_MirrorByVector3(Direction: Vector4, SurfaceNormal: Vector4): Vector4
        fun Vector4_IsZero(A: Vector4): Boolean
        fun Vector4_IsUnit3(A: Vector4, SquaredLenthTolerance: Number): Boolean
        fun Vector4_IsNormal3(A: Vector4): Boolean
        fun Vector4_IsNearlyZero3(A: Vector4, Tolerance: Number): Boolean
        fun Vector4_IsNAN(A: Vector4): Boolean
        fun Vector4_DotProduct3(A: Vector4, B: Vector4): Any
        fun Vector4_DotProduct(A: Vector4, B: Vector4): Any
        fun Vector4_CrossProduct3(A: Vector4, B: Vector4): Vector4
        fun Vector4_Assign(A: Vector4 = definedExternally, InVector: Vector4 = definedExternally): `T$12`
        fun Vector2DInterpTo_Constant(Current: Vector2D, Target: Vector2D, DeltaTime: Number, InterpSpeed: Number): Vector2D
        fun Vector2DInterpTo(Current: Vector2D, Target: Vector2D, DeltaTime: Number, InterpSpeed: Number): Vector2D
        fun Vector2D_Zero(): Vector2D
        fun Vector2D_Unit45Deg(): Vector2D
        fun Vector2D_One(): Vector2D
        fun VEase(A: Vector, B: Vector, Alpha: Number, EasingFunc: String /* "Linear" | "Step" | "SinusoidalIn" | "SinusoidalOut" | "SinusoidalInOut" | "EaseIn" | "EaseOut" | "EaseInOut" | "ExpoIn" | "ExpoOut" | "ExpoInOut" | "CircularIn" | "CircularOut" | "CircularInOut" | "EEasingFunc_MAX" */, BlendExp: Number, Steps: Number): Vector
        fun UtcNow(): DateTime
        fun TransformVector4(Matrix: Matrix, Vec4: Vector4): Vector4
        fun TransformRotation(T: Transform, Rotation: Rotator): Rotator
        fun TransformLocation(T: Transform, Location: Vector): Vector
        fun TransformDirection(T: Transform, Direction: Vector): Vector
        fun Transform_Determinant(Transform: Transform): Number
        fun ToSign2D(A: Vector2D): Vector2D
        fun ToRounded2D(A: Vector2D): Vector2D
        fun ToDirectionAndLength2D(A: Vector2D, OutDir: Vector2D = definedExternally, OutLength: Any = definedExternally): `T$492`
        fun Today(): DateTime
        fun TLerp(A: Transform, B: Transform, Alpha: Number, InterpMode: String /* "QuatInterp" | "EulerInterp" | "DualQuatInterp" | "ELerpInterpolationMode_MAX" */): Transform
        fun TInterpTo(Current: Transform, Target: Transform, DeltaTime: Number, InterpSpeed: Number): Transform
        fun TimespanZeroValue(): Timespan
        fun TimespanRatio(A: Timespan, B: Timespan): Number
        fun TimespanMinValue(): Timespan
        fun TimespanMaxValue(): Timespan
        fun TimespanFromString(TimespanString: String, Result: Timespan = definedExternally): `T$703`
        fun TEase(A: Transform, B: Transform, Alpha: Number, EasingFunc: String /* "Linear" | "Step" | "SinusoidalIn" | "SinusoidalOut" | "SinusoidalInOut" | "EaseIn" | "EaseOut" | "EaseInOut" | "ExpoIn" | "ExpoOut" | "ExpoInOut" | "CircularIn" | "CircularOut" | "CircularInOut" | "EEasingFunc_MAX" */, BlendExp: Number, Steps: Number): Transform
        fun Tan(A: Any): Any
        fun Subtract_VectorVector(A: Vector, B: Vector): Vector
        fun Subtract_VectorInt(A: Vector, B: Number): Vector
        fun Subtract_VectorFloat(A: Vector, B: Any): Vector
        fun Subtract_Vector4Vector4(A: Vector4, B: Vector4): Vector4
        fun Subtract_Vector2DVector2D(A: Vector2D, B: Vector2D): Vector2D
        fun Subtract_Vector2DFloat(A: Vector2D, B: Any): Vector2D
        fun Subtract_TimespanTimespan(A: Timespan, B: Timespan): Timespan
        fun Subtract_QuatQuat(A: Quat, B: Quat): Quat
        fun Subtract_LinearColorLinearColor(A: LinearColor, B: LinearColor): LinearColor
        fun Subtract_IntPointIntPoint(A: IntPoint, B: IntPoint): IntPoint
        fun Subtract_IntPointInt(A: IntPoint, B: Number): IntPoint
        fun Subtract_IntInt(A: Number, B: Number): Number
        fun Subtract_Int64Int64(A: Any, B: Any): Any
        fun Subtract_DoubleDouble(A: Any, B: Any): Any
        fun Subtract_DateTimeTimespan(A: DateTime, B: Timespan): DateTime
        fun Subtract_DateTimeDateTime(A: DateTime, B: DateTime): Timespan
        fun Subtract_ByteByte(A: Number, B: Number): Number
        fun Square(A: Any): Any
        fun Sqrt(A: Any): Any
        fun Spherical2DToUnitCartesian(A: Vector2D): Vector
        fun Sin(A: Any): Any
        fun Sign(A: Any): Any
        fun Sign(A: Number): Number
        fun SetVectorSpringStateVelocity(SpringState: VectorSpringState = definedExternally, Velocity: Vector = definedExternally): `T$493`
        fun SetRandomStreamSeed(Stream: RandomStream = definedExternally, NewSeed: Number = definedExternally): `T$2`
        fun SetQuaternionSpringStateAngularVelocity(SpringState: QuaternionSpringState = definedExternally, AngularVelocity: Vector = definedExternally): `T$6`
        fun SetFloatSpringStateVelocity(SpringState: FloatSpringState = definedExternally, Velocity: Number = definedExternally): `T$702`
        fun Set2D(A: Vector2D = definedExternally, X: Any = definedExternally, Y: Any = definedExternally): `T$491`
        fun SelectVector(A: Vector, B: Vector, bPickA: Boolean): Vector
        fun SelectTransform(A: Transform, B: Transform, bPickA: Boolean): Transform
        fun SelectString(A: String, B: String, bPickA: Boolean): String
        fun SelectRotator(A: Rotator, B: Rotator, bPickA: Boolean): Rotator
        fun SelectObject(A: UObject, B: UObject, bSelectA: Boolean): UObject
        fun SelectInt(A: Number, B: Number, bPickA: Boolean): Number
        fun SelectFloat(A: Any, B: Any, bPickA: Boolean): Any
        fun SelectColor(A: LinearColor, B: LinearColor, bPickA: Boolean): LinearColor
        fun SelectClass(A: UnrealEngineClass, B: UnrealEngineClass, bSelectA: Boolean): UnrealEngineClass
        fun SeedRandomStream(Stream: RandomStream = definedExternally): `T$2`
        fun SafeDivide(A: Any, B: Any): Any
        fun RoundtoInteger64(A: Any): Any
        fun Round(A: Any): Number
        fun RotatorFromAxisAndAngle(Axis: Vector, Angle: Number): Rotator
        fun RotateAngleAxis(InVect: Vector, AngleDeg: Number, Axis: Vector): Vector
        fun RLerp(A: Rotator, B: Rotator, Alpha: Number, bShortestPath: Boolean): Rotator
        fun RInterpTo_Constant(Current: Rotator, Target: Rotator, DeltaTime: Number, InterpSpeed: Number): Rotator
        fun RInterpTo(Current: Rotator, Target: Rotator, DeltaTime: Number, InterpSpeed: Number): Rotator
        fun RGBToHSV_Vector(RGB: LinearColor, HSV: LinearColor = definedExternally): `T$21`
        fun RGBToHSV(InColor: LinearColor, H: Number = definedExternally, S: Number = definedExternally, V: Number = definedExternally, A: Number = definedExternally): `T$20`
        fun RGBLinearToHSV(RGB: LinearColor): LinearColor
        fun ResetVectorSpringState(SpringState: VectorSpringState = definedExternally): `T$493`
        fun ResetRandomStream(Stream: RandomStream)
        fun ResetQuaternionSpringState(SpringState: QuaternionSpringState = definedExternally): `T$6`
        fun ResetFloatSpringState(SpringState: FloatSpringState = definedExternally): `T$702`
        fun REase(A: Rotator, B: Rotator, Alpha: Number, bShortestPath: Boolean, EasingFunc: String /* "Linear" | "Step" | "SinusoidalIn" | "SinusoidalOut" | "SinusoidalInOut" | "EaseIn" | "EaseOut" | "EaseInOut" | "ExpoIn" | "ExpoOut" | "ExpoInOut" | "CircularIn" | "CircularOut" | "CircularInOut" | "EEasingFunc_MAX" */, BlendExp: Number, Steps: Number): Rotator
        fun RandomUnitVectorInEllipticalConeInRadiansFromStream(ConeDir: Vector, MaxYawInRadians: Number, MaxPitchInRadians: Number, Stream: RandomStream): Vector
        fun RandomUnitVectorInEllipticalConeInRadians(ConeDir: Vector, MaxYawInRadians: Number, MaxPitchInRadians: Number): Vector
        fun RandomUnitVectorInEllipticalConeInDegreesFromStream(ConeDir: Vector, MaxYawInDegrees: Number, MaxPitchInDegrees: Number, Stream: RandomStream): Vector
        fun RandomUnitVectorInEllipticalConeInDegrees(ConeDir: Vector, MaxYawInDegrees: Number, MaxPitchInDegrees: Number): Vector
        fun RandomUnitVectorInConeInRadiansFromStream(ConeDir: Vector, ConeHalfAngleInRadians: Number, Stream: RandomStream): Vector
        fun RandomUnitVectorInConeInRadians(ConeDir: Vector, ConeHalfAngleInRadians: Number): Vector
        fun RandomUnitVectorInConeInDegreesFromStream(ConeDir: Vector, ConeHalfAngleInDegrees: Number, Stream: RandomStream): Vector
        fun RandomUnitVectorInConeInDegrees(ConeDir: Vector, ConeHalfAngleInDegrees: Number): Vector
        fun RandomUnitVectorFromStream(Stream: RandomStream): Vector
        fun RandomUnitVector(): Vector
        fun RandomRotatorFromStream(bRoll: Boolean, Stream: RandomStream): Rotator
        fun RandomRotator(bRoll: Boolean): Rotator
        fun RandomPointInBoundingBoxFromStream(Center: Vector, HalfSize: Vector, Stream: RandomStream): Vector
        fun RandomPointInBoundingBox(Center: Vector, HalfSize: Vector): Vector
        fun RandomIntegerInRangeFromStream(Min: Number, Max: Number, Stream: RandomStream): Number
        fun RandomIntegerInRange(Min: Number, Max: Number): Number
        fun RandomIntegerFromStream(Max: Number, Stream: RandomStream): Number
        fun RandomInteger64InRange(Min: Any, Max: Any): Any
        fun RandomInteger64(Max: Any): Any
        fun RandomInteger(Max: Number): Number
        fun RandomFloatInRangeFromStream(Min: Number, Max: Number, Stream: RandomStream): Number
        fun RandomFloatInRange(Min: Any, Max: Any): Any
        fun RandomFloatFromStream(Stream: RandomStream): Number
        fun RandomFloat(): Any
        fun RandomBoolWithWeightFromStream(Weight: Number, RandomStream: RandomStream): Boolean
        fun RandomBoolWithWeight(Weight: Number): Boolean
        fun RandomBoolFromStream(Stream: RandomStream): Boolean
        fun RandomBool(): Boolean
        fun RadiansToDegrees(A: Any): Any
        fun QuaternionSpringInterp(Current: Quat, Target: Quat, SpringState: QuaternionSpringState = definedExternally, Stiffness: Number = definedExternally, CriticalDampingFactor: Number = definedExternally, DeltaTime: Number = definedExternally, Mass: Number = definedExternally, TargetVelocityAmount: Number = definedExternally, bInitializeFromTarget: Boolean = definedExternally): `T$10`
        fun Quat_VectorUp(Q: Quat): Vector
        fun Quat_VectorRight(Q: Quat): Vector
        fun Quat_VectorForward(Q: Quat): Vector
        fun Quat_UnrotateVector(Q: Quat, V: Vector): Vector
        fun Quat_SizeSquared(Q: Quat): Number
        fun Quat_Size(Q: Quat): Number
        fun Quat_SetFromEuler(Q: Quat = definedExternally, Euler: Vector = definedExternally): `T$9`
        fun Quat_SetComponents(Q: Quat = definedExternally, X: Number = definedExternally, Y: Number = definedExternally, Z: Number = definedExternally, W: Number = definedExternally): `T$9`
        fun Quat_Rotator(Q: Quat): Rotator
        fun Quat_RotateVector(Q: Quat, V: Vector): Vector
        fun Quat_Normalized(Q: Quat, Tolerance: Number): Quat
        fun Quat_Normalize(Q: Quat = definedExternally, Tolerance: Number = definedExternally): `T$9`
        fun Quat_MakeFromEuler(Euler: Vector): Quat
        fun Quat_Log(Q: Quat): Quat
        fun Quat_IsNormalized(Q: Quat): Boolean
        fun Quat_IsNonFinite(Q: Quat): Boolean
        fun Quat_IsIdentity(Q: Quat, Tolerance: Number): Boolean
        fun Quat_IsFinite(Q: Quat): Boolean
        fun Quat_Inversed(Q: Quat): Quat
        fun Quat_Identity(): Quat
        fun Quat_GetRotationAxis(Q: Quat): Vector
        fun Quat_GetAxisZ(Q: Quat): Vector
        fun Quat_GetAxisY(Q: Quat): Vector
        fun Quat_GetAxisX(Q: Quat): Vector
        fun Quat_GetAngle(Q: Quat): Number
        fun Quat_Exp(Q: Quat): Quat
        fun Quat_Euler(Q: Quat): Vector
        fun Quat_EnforceShortestArcWith(A: Quat = definedExternally, B: Quat = definedExternally): `T$8`
        fun Quat_AngularDistance(A: Quat, B: Quat): Number
        fun ProjectVectorOnToVector(V: Vector, Target: Vector): Vector
        fun ProjectVectorOnToPlane(V: Vector, PlaneNormal: Vector): Vector
        fun ProjectPointOnToPlane(Point: Vector, PlaneBase: Vector, PlaneNormal: Vector): Vector
        fun PointsAreCoplanar(Points: Array<Vector>, Tolerance: Number): Boolean
        fun PerlinNoise1D(Value: Number): Number
        fun Percent_IntInt(A: Number, B: Number): Number
        fun Percent_FloatFloat(A: Any, B: Any): Any
        fun Percent_ByteByte(A: Number, B: Number): Number
        fun BitwiseOR(A: Number, B: Number): Number
        fun BitwiseOR(A: Any, B: Any): Any
        fun Now(): DateTime
        fun NotEqualExactly_VectorVector(A: Vector, B: Vector): Boolean
        fun NotEqualExactly_Vector4Vector4(A: Vector4, B: Vector4): Boolean
        fun NotEqualExactly_Vector2DVector2D(A: Vector2D, B: Vector2D): Boolean
        fun NotEqual_VectorVector(A: Vector, B: Vector, ErrorTolerance: Number): Boolean
        fun NotEqual_Vector4Vector4(A: Vector4, B: Vector4, ErrorTolerance: Number): Boolean
        fun NotEqual_Vector2DVector2D(A: Vector2D, B: Vector2D, ErrorTolerance: Number): Boolean
        fun NotEqual_TimespanTimespan(A: Timespan, B: Timespan): Boolean
        fun NotEqual_RotatorRotator(A: Rotator, B: Rotator, ErrorTolerance: Number): Boolean
        fun NotEqual_QuatQuat(A: Quat, B: Quat, ErrorTolerance: Number): Boolean
        fun NotEqual_ObjectObject(A: UObject, B: UObject): Boolean
        fun NotEqual(A: String, B: String): Boolean
        fun NotEqual_MatrixMatrix(A: Matrix, B: Matrix, Tolerance: Number): Boolean
        fun NotEqual_LinearColorLinearColor(A: LinearColor, B: LinearColor): Boolean
        fun NotEqual_IntPointIntPoint(A: IntPoint, B: IntPoint): Boolean
        fun NotEqual(A: Number, B: Number): Boolean
        fun NotEqual(A: Any, B: Any): Boolean
        fun NotEqual_DateTimeDateTime(A: DateTime, B: DateTime): Boolean
        fun NotEqual_ClassClass(A: UnrealEngineClass, B: UnrealEngineClass): Boolean
        fun NotEqual(A: Boolean, B: Boolean): Boolean
        fun NOTBoolean(A: Boolean): Boolean
        fun BitwiseNOT(A: Any): Any
        fun BitwiseNOT(A: Number): Number
        fun NormalSafe2D(A: Vector2D, Tolerance: Number): Vector2D
        fun NormalizeToRange(Value: Any, RangeMin: Any, RangeMax: Any): Any
        fun NormalizedDeltaRotator(A: Rotator, B: Rotator): Rotator
        fun NormalizeAxis(Angle: Number): Number
        fun Normalize2D(A: Vector2D = definedExternally, Tolerance: Number = definedExternally): `T$491`
        fun Normal2D(A: Vector2D): Vector2D
        fun Normal(A: Vector, Tolerance: Number): Vector
        fun NegateVector(A: Vector): Vector
        fun NegateRotator(A: Rotator): Rotator
        fun Negated2D(A: Vector2D): Vector2D
        fun NearlyEqual_TransformTransform(A: Transform, B: Transform, LocationTolerance: Number, RotationTolerance: Number, Scale3DTolerance: Number): Boolean
        fun NearlyEqual(A: Any, B: Any, ErrorTolerance: Any): Boolean
        fun Power(Base: Any, Exp: Any): Any
        fun MultiplyByPi(Value: Any): Any
        fun Multiply_VectorVector(A: Vector, B: Vector): Vector
        fun Multiply_VectorInt(A: Vector, B: Number): Vector
        fun Multiply_VectorFloat(A: Vector, B: Any): Vector
        fun Multiply_Vector4Vector4(A: Vector4, B: Vector4): Vector4
        fun Multiply_Vector2DVector2D(A: Vector2D, B: Vector2D): Vector2D
        fun Multiply_Vector2DFloat(A: Vector2D, B: Any): Vector2D
        fun Multiply_TimespanFloat(A: Timespan, Scalar: Number): Timespan
        fun Multiply_RotatorInt(A: Rotator, B: Number): Rotator
        fun Multiply_RotatorFloat(A: Rotator, B: Number): Rotator
        fun Multiply_QuatQuat(A: Quat, B: Quat): Quat
        fun Multiply_MatrixMatrix(A: Matrix, B: Matrix): Matrix
        fun Multiply_MatrixFloat(A: Matrix, B: Any): Matrix
        fun Multiply_LinearColorLinearColor(A: LinearColor, B: LinearColor): LinearColor
        fun Multiply_LinearColorFloat(A: LinearColor, B: Number): LinearColor
        fun Multiply_IntPointIntPoint(A: IntPoint, B: IntPoint): IntPoint
        fun Multiply_IntPointInt(A: IntPoint, B: Number): IntPoint
        fun Multiply_IntInt(A: Number, B: Number): Number
        fun Multiply_IntFloat(A: Number, B: Any): Any
        fun Multiply_Int64Int64(A: Any, B: Any): Any
        fun Multiply_DoubleDouble(A: Any, B: Any): Any
        fun Multiply_ByteByte(A: Number, B: Number): Number
        fun MirrorVectorByNormal(InVect: Vector, InNormal: Vector): Vector
        fun MinOfIntArray(IntArray: Array<Number>, IndexOfMinValue: Number = definedExternally, MinValue: Number = definedExternally): `T$704`
        fun MinOfFloatArray(FloatArray: Array<Number>, IndexOfMinValue: Number = definedExternally, MinValue: Number = definedExternally): `T$704`
        fun MinOfByteArray(ByteArray: Array<Number>, IndexOfMinValue: Number = definedExternally, MinValue: Number = definedExternally): `T$704`
        fun Min(A: Any, B: Any): Any
        fun MinimumAreaRectangle(WorldContextObject: UObject, InVerts: Array<Vector>, SampleSurfaceNormal: Vector, OutRectCenter: Vector = definedExternally, OutRectRotation: Rotator = definedExternally, OutSideLengthX: Number = definedExternally, OutSideLengthY: Number = definedExternally, bDebugDraw: Boolean = definedExternally): `T$343`
        fun MinAreaRectangle(WorldContextObject: UObject, InPoints: Array<Vector>, SampleSurfaceNormal: Vector, OutRectCenter: Vector = definedExternally, OutRectRotation: Rotator = definedExternally, OutRectLengthX: Number = definedExternally, OutRectLengthY: Number = definedExternally, bDebugDraw: Boolean = definedExternally): `T$342`
        fun Min(A: Number, B: Number): Number
        fun MaxOfIntArray(IntArray: Array<Number>, IndexOfMaxValue: Number = definedExternally, MaxValue: Number = definedExternally): `T$705`
        fun MaxOfFloatArray(FloatArray: Array<Number>, IndexOfMaxValue: Number = definedExternally, MaxValue: Number = definedExternally): `T$705`
        fun MaxOfByteArray(ByteArray: Array<Number>, IndexOfMaxValue: Number = definedExternally, MaxValue: Number = definedExternally): `T$705`
        fun Max(A: Any, B: Any): Any
        fun Max(A: Number, B: Number): Number
        fun Matrix_TransformVector4(M: Matrix, V: Vector4): Vector4
        fun Matrix_TransformVector(M: Matrix, V: Vector): Vector4
        fun Matrix_TransformPosition(M: Matrix, V: Vector): Vector4
        fun Matrix_ToQuat(M: Matrix): Quat
        fun Matrix_SetOrigin(M: Matrix = definedExternally, NewOrigin: Vector = definedExternally): `T$14`
        fun Matrix_SetColumn(M: Matrix = definedExternally, Column: String /* "First" | "Second" | "Third" | "Fourth" | "EMatrixColumns_MAX" */ = definedExternally, Value: Vector = definedExternally): `T$14`
        fun Matrix_SetAxis(M: Matrix = definedExternally, Axis: String /* "None" | "X" | "Y" | "Z" | "EAxis_MAX" */ = definedExternally, AxisVector: Vector = definedExternally): `T$14`
        fun Matrix_ScaleTranslation(M: Matrix, Scale3D: Vector): Matrix
        fun Matrix_RemoveTranslation(M: Matrix): Matrix
        fun Matrix_RemoveScaling(M: Matrix = definedExternally, Tolerance: Number = definedExternally): `T$14`
        fun Matrix_Mirror(M: Matrix, MirrorAxis: String /* "None" | "X" | "Y" | "Z" | "EAxis_MAX" */, FlipAxis: String /* "None" | "X" | "Y" | "Z" | "EAxis_MAX" */): Matrix
        fun Matrix_InverseTransformVector(M: Matrix, V: Vector): Vector
        fun Matrix_InverseTransformPosition(M: Matrix, V: Vector): Vector
        fun Matrix_Identity(): Matrix
        fun Matrix_GetUnitAxis(M: Matrix, Axis: String /* "None" | "X" | "Y" | "Z" | "EAxis_MAX" */): Vector
        fun Matrix_GetUnitAxes(M: Matrix, X: Vector = definedExternally, Y: Vector = definedExternally, Z: Vector = definedExternally): `T$4`
        fun Matrix_GetTransposed(M: Matrix): Matrix
        fun Matrix_GetTransposeAdjoint(M: Matrix): Matrix
        fun Matrix_GetScaleVector(M: Matrix, Tolerance: Number): Vector
        fun Matrix_GetScaledAxis(M: Matrix, Axis: String /* "None" | "X" | "Y" | "Z" | "EAxis_MAX" */): Vector
        fun Matrix_GetScaledAxes(M: Matrix, X: Vector = definedExternally, Y: Vector = definedExternally, Z: Vector = definedExternally): `T$4`
        fun Matrix_GetRotDeterminant(M: Matrix): Number
        fun Matrix_GetRotator(M: Matrix): Rotator
        fun Matrix_GetOrigin(InMatrix: Matrix): Vector
        fun Matrix_GetMaximumAxisScale(M: Matrix): Number
        fun Matrix_GetMatrixWithoutScale(M: Matrix, Tolerance: Number): Matrix
        fun Matrix_GetInverse(M: Matrix): Matrix
        fun Matrix_GetFrustumTopPlane(M: Matrix, OutPlane: Plane = definedExternally): `T$13`
        fun Matrix_GetFrustumRightPlane(M: Matrix, OutPlane: Plane = definedExternally): `T$13`
        fun Matrix_GetFrustumNearPlane(M: Matrix, OutPlane: Plane = definedExternally): `T$13`
        fun Matrix_GetFrustumLeftPlane(M: Matrix, OutPlane: Plane = definedExternally): `T$13`
        fun Matrix_GetFrustumFarPlane(M: Matrix, OutPlane: Plane = definedExternally): `T$13`
        fun Matrix_GetFrustumBottomPlane(M: Matrix, OutPlane: Plane = definedExternally): `T$13`
        fun Matrix_GetDeterminant(M: Matrix): Number
        fun Matrix_GetColumn(M: Matrix, Column: String /* "First" | "Second" | "Third" | "Fourth" | "EMatrixColumns_MAX" */): Vector
        fun Matrix_ContainsNaN(M: Matrix): Boolean
        fun Matrix_ConcatenateTranslation(M: Matrix, Translation: Vector): Matrix
        fun Matrix_ApplyScale(M: Matrix, Scale: Number): Matrix
        fun MapRangeUnclamped(Value: Any, InRangeA: Any, InRangeB: Any, OutRangeA: Any, OutRangeB: Any): Any
        fun MapRangeClamped(Value: Any, InRangeA: Any, InRangeB: Any, OutRangeA: Any, OutRangeB: Any): Any
        fun MakeVector_NetQuantizeNormal(X: Any, Y: Any, Z: Any): Vector_NetQuantizeNormal
        fun MakeVector_NetQuantize100(X: Any, Y: Any, Z: Any): Vector_NetQuantize100
        fun MakeVector_NetQuantize10(X: Any, Y: Any, Z: Any): Vector_NetQuantize10
        fun MakeVector_NetQuantize(X: Any, Y: Any, Z: Any): Vector_NetQuantize
        fun MakeVector4(X: Any, Y: Any, Z: Any, W: Any): Vector4
        fun MakeVector2D(X: Any, Y: Any): Vector2D
        fun MakeVector(X: Any, Y: Any, Z: Any): Vector
        fun MakeTransform(Location: Vector, Rotation: Rotator, Scale: Vector): Transform
        fun MakeTimespan2(Days: Number, Hours: Number, Minutes: Number, Seconds: Number, FractionNano: Number): Timespan
        fun MakeTimespan(Days: Number, Hours: Number, Minutes: Number, Seconds: Number, Milliseconds: Number): Timespan
        fun MakeRotFromZY(Z: Vector, Y: Vector): Rotator
        fun MakeRotFromZX(Z: Vector, X: Vector): Rotator
        fun MakeRotFromZ(Z: Vector): Rotator
        fun MakeRotFromYZ(Y: Vector, Z: Vector): Rotator
        fun MakeRotFromYX(Y: Vector, X: Vector): Rotator
        fun MakeRotFromY(Y: Vector): Rotator
        fun MakeRotFromXZ(X: Vector, Z: Vector): Rotator
        fun MakeRotFromXY(X: Vector, Y: Vector): Rotator
        fun MakeRotFromX(X: Vector): Rotator
        fun MakeRotator(Roll: Number, Pitch: Number, Yaw: Number): Rotator
        fun MakeRotationFromAxes(Forward: Vector, Right: Vector, Up: Vector): Rotator
        fun MakeRelativeTransform(A: Transform, RelativeTo: Transform): Transform
        fun MakeRandomStream(InitialSeed: Number): RandomStream
        fun MakeQuat(X: Number, Y: Number, Z: Number, W: Number): Quat
        fun MakeQualifiedFrameTime(Frame: FrameNumber, FrameRate: FrameRate, SubFrame: Number): QualifiedFrameTime
        fun MakePulsatingValue(InCurrentTime: Number, InPulsesPerSecond: Number, InPhase: Number): Number
        fun MakePlaneFromPointAndNormal(Point: Vector, Normal: Vector): Plane
        fun MakeFrameRate(Numerator: Number, Denominator: Number): FrameRate
        fun MakeDateTime(Year: Number, Month: Number, Day: Number, Hour: Number, Minute: Number, Second: Number, Millisecond: Number): DateTime
        fun MakeColor(R: Number, G: Number, B: Number, A: Number): LinearColor
        fun MakeBoxSphereBounds(Origin: Vector, BoxExtent: Vector, SphereRadius: Number): BoxSphereBounds
        fun MakeBox2D(Min: Vector2D, Max: Vector2D): Box2D
        fun MakeBox(Min: Vector, Max: Vector): Box
        fun Loge(A: Any): Any
        fun Log(A: Any, Base: Any): Any
        fun LinePlaneIntersection_OriginNormal(LineStart: Vector, LineEnd: Vector, PlaneOrigin: Vector, PlaneNormal: Vector, T: Number = definedExternally, Intersection: Vector = definedExternally): `T$499`
        fun LinePlaneIntersection(LineStart: Vector, LineEnd: Vector, APlane: Plane, T: Number = definedExternally, Intersection: Vector = definedExternally): `T$499`
        fun LinearColorLerpUsingHSV(A: LinearColor, B: LinearColor, Alpha: Number): LinearColor
        fun LinearColorLerp(A: LinearColor, B: LinearColor, Alpha: Number): LinearColor
        fun LinearColor_Yellow(): LinearColor
        fun LinearColor_White(): LinearColor
        fun LinearColor_Transparent(): LinearColor
        fun LinearColor_ToRGBE(InLinearColor: LinearColor): Color
        fun LinearColor_ToNewOpacity(InColor: LinearColor, InOpacity: Number): LinearColor
        fun LinearColor_SetTemperature(InOutColor: LinearColor = definedExternally, InTemperature: Number = definedExternally): `T$19`
        fun LinearColor_SetRGBA(InOutColor: LinearColor = definedExternally, R: Number = definedExternally, G: Number = definedExternally, B: Number = definedExternally, A: Number = definedExternally): `T$19`
        fun LinearColor_SetRandomHue(InOutColor: LinearColor = definedExternally): `T$19`
        fun LinearColor_SetFromSRGB(InOutColor: LinearColor = definedExternally, InSRGB: Color = definedExternally): `T$19`
        fun LinearColor_SetFromPow22(InOutColor: LinearColor = definedExternally, InColor: Color = definedExternally): `T$19`
        fun LinearColor_SetFromHSV(InOutColor: LinearColor = definedExternally, H: Number = definedExternally, S: Number = definedExternally, V: Number = definedExternally, A: Number = definedExternally): `T$19`
        fun LinearColor_Set(InOutColor: LinearColor = definedExternally, InColor: LinearColor = definedExternally): `T$19`
        fun LinearColor_Red(): LinearColor
        fun LinearColor_QuantizeRound(InColor: LinearColor): Color
        fun LinearColor_Quantize(InColor: LinearColor): Color
        fun LinearColor_IsNearEqual(A: LinearColor, B: LinearColor, Tolerance: Number): Boolean
        fun LinearColor_Green(): LinearColor
        fun LinearColor_Gray(): LinearColor
        fun LinearColor_GetMin(InColor: LinearColor): Number
        fun LinearColor_GetMax(InColor: LinearColor): Number
        fun LinearColor_GetLuminance(InColor: LinearColor): Number
        fun LinearColor_Distance(C1: LinearColor, C2: LinearColor): Number
        fun LinearColor_Desaturated(InColor: LinearColor, InDesaturation: Number): LinearColor
        fun LinearColor_Blue(): LinearColor
        fun LinearColor_Black(): LinearColor
        fun LessLess_VectorRotator(A: Vector, B: Rotator): Vector
        fun LessEqual_TimespanTimespan(A: Timespan, B: Timespan): Boolean
        fun LessEqual_IntInt(A: Number, B: Number): Boolean
        fun LessEqual_Int64Int64(A: Any, B: Any): Boolean
        fun LessEqual_DoubleDouble(A: Any, B: Any): Boolean
        fun LessEqual_DateTimeDateTime(A: DateTime, B: DateTime): Boolean
        fun LessEqual_ByteByte(A: Number, B: Number): Boolean
        fun Less_TimespanTimespan(A: Timespan, B: Timespan): Boolean
        fun Less_IntInt(A: Number, B: Number): Boolean
        fun Less_Int64Int64(A: Any, B: Any): Boolean
        fun Less_DoubleDouble(A: Any, B: Any): Boolean
        fun Less_DateTimeDateTime(A: DateTime, B: DateTime): Boolean
        fun Less_ByteByte(A: Number, B: Number): Boolean
        fun Lerp(A: Any, B: Any, Alpha: Any): Any
        fun IsZero2D(A: Vector2D): Boolean
        fun IsPointInBoxWithTransform(Point: Vector, BoxWorldTransform: Transform, BoxExtent: Vector): Boolean
        fun IsPointInBox(Point: Vector, BoxOrigin: Vector, BoxExtent: Vector): Boolean
        fun IsNearlyZero2D(A: Vector2D, Tolerance: Number): Boolean
        fun IsMorning(A: DateTime): Boolean
        fun IsLeapYear(Year: Number): Boolean
        fun IsAfternoon(A: DateTime): Boolean
        fun InvertTransform(T: Transform): Transform
        fun InverseTransformRotation(T: Transform, Rotation: Rotator): Rotator
        fun InverseTransformLocation(T: Transform, Location: Vector): Vector
        fun InverseTransformDirection(T: Transform, Direction: Vector): Vector
        fun IntPoint_Zero(): IntPoint
        fun IntPoint_Up(): IntPoint
        fun IntPoint_Right(): IntPoint
        fun IntPoint_One(): IntPoint
        fun IntPoint_Left(): IntPoint
        fun IntPoint_Down(): IntPoint
        fun InRange(Value: Number, Min: Number, Max: Number, InclusiveMin: Boolean, InclusiveMax: Boolean): Boolean
        fun InRange(Value: Any, Min: Any, Max: Any, InclusiveMin: Boolean, InclusiveMax: Boolean): Boolean
        fun Hypotenuse(Width: Any, Height: Any): Any
        fun HSVToRGBLinear(HSV: LinearColor): LinearColor
        fun HSVToRGB_Vector(HSV: LinearColor, RGB: LinearColor = definedExternally): `T$18`
        fun HSVToRGB(H: Number, S: Number, V: Number, A: Number): LinearColor
        fun SnapToGrid(Location: Any, GridSize: Any): Any
        fun GreaterGreater_VectorRotator(A: Vector, B: Rotator): Vector
        fun GreaterEqual_TimespanTimespan(A: Timespan, B: Timespan): Boolean
        fun GreaterEqual_IntInt(A: Number, B: Number): Boolean
        fun GreaterEqual_Int64Int64(A: Any, B: Any): Boolean
        fun GreaterEqual_DoubleDouble(A: Any, B: Any): Boolean
        fun GreaterEqual_DateTimeDateTime(A: DateTime, B: DateTime): Boolean
        fun GreaterEqual_ByteByte(A: Number, B: Number): Boolean
        fun Greater_TimespanTimespan(A: Timespan, B: Timespan): Boolean
        fun Greater_IntInt(A: Number, B: Number): Boolean
        fun Greater_Int64Int64(A: Any, B: Any): Boolean
        fun Greater_DoubleDouble(A: Any, B: Any): Boolean
        fun Greater_DateTimeDateTime(A: DateTime, B: DateTime): Boolean
        fun Greater_ByteByte(A: Number, B: Number): Boolean
        fun GetYear(A: DateTime): Number
        fun GetYawPitchFromVector(InVec: Vector, Yaw: Number = definedExternally, Pitch: Number = definedExternally): `T$498`
        fun GetVectorArrayAverage(Vectors: Array<Vector>): Vector
        fun GetUpVector(InRot: Rotator): Vector
        fun GetTotalSeconds(A: Timespan): Number
        fun GetTotalMinutes(A: Timespan): Number
        fun GetTotalMilliseconds(A: Timespan): Number
        fun GetTotalHours(A: Timespan): Number
        fun GetTotalDays(A: Timespan): Number
        fun GetTimeOfDay(A: DateTime): Timespan
        fun GetTAU(): Any
        fun GetSlopeDegreeAngles(MyRightYAxis: Vector, FloorNormal: Vector, UpVector: Vector, OutSlopePitchDegreeAngle: Number = definedExternally, OutSlopeRollDegreeAngle: Number = definedExternally): `T$497`
        fun GetSeconds(A: Timespan): Number
        fun GetSecond(A: DateTime): Number
        fun GetRotated2D(A: Vector2D, AngleDeg: Number): Vector2D
        fun GetRightVector(InRot: Rotator): Vector
        fun GetReflectionVector(Direction: Vector, SurfaceNormal: Vector): Vector
        fun GetPointDistanceToSegment(Point: Vector, SegmentStart: Vector, SegmentEnd: Vector): Number
        fun GetPointDistanceToLine(Point: Vector, LineOrigin: Vector, LineDirection: Vector): Number
        fun GetPI(): Any
        fun GetMonth(A: DateTime): Number
        fun GetMinutes(A: Timespan): Number
        fun GetMinute(A: DateTime): Number
        fun GetMinElement(A: Vector): Any
        fun GetMin2D(A: Vector2D): Any
        fun GetMilliseconds(A: Timespan): Number
        fun GetMillisecond(A: DateTime): Number
        fun GetMaxElement(A: Vector): Any
        fun GetMax2D(A: Vector2D): Any
        fun GetHours(A: Timespan): Number
        fun GetHour12(A: DateTime): Number
        fun GetHour(A: DateTime): Number
        fun GetForwardVector(InRot: Rotator): Vector
        fun GetDuration(A: Timespan): Timespan
        fun GetDirectionUnitVector(From: Vector, To: Vector): Vector
        fun GetDays(A: Timespan): Number
        fun GetDayOfYear(A: DateTime): Number
        fun GetDay(A: DateTime): Number
        fun GetDate(A: DateTime): DateTime
        fun GetAzimuthAndElevation(InDirection: Vector, ReferenceFrame: Transform, Azimuth: Number = definedExternally, Elevation: Number = definedExternally): `T$496`
        fun GetAxes(A: Rotator, X: Vector = definedExternally, Y: Vector = definedExternally, Z: Vector = definedExternally): `T$4`
        fun GetAbsMax2D(A: Vector2D): Any
        fun GetAbs2D(A: Vector2D): Vector2D
        fun Wrap(Value: Any, Min: Any, Max: Any): Any
        fun FTruncVector(InVector: Vector): IntVector
        fun TruncatetoInteger64(A: Any): Any
        fun Truncate(A: Any): Number
        fun FromSeconds(Seconds: Number): Timespan
        fun FromMinutes(Minutes: Number): Timespan
        fun FromMilliseconds(Milliseconds: Number): Timespan
        fun FromHours(Hours: Number): Timespan
        fun FromDays(Days: Number): Timespan
        fun Fraction(A: Any): Any
        fun Division(Dividend: Any, Divisor: Any, Remainder: Any = definedExternally): `T$706`
        fun Division(Dividend: Any, Divisor: Any, Remainder: Any = definedExternally): `T$707`
        fun FloatSpringInterp(Current: Number, Target: Number, SpringState: FloatSpringState = definedExternally, Stiffness: Number = definedExternally, CriticalDampingFactor: Number = definedExternally, DeltaTime: Number = definedExternally, Mass: Number = definedExternally, TargetVelocityAmount: Number = definedExternally, bClamp: Boolean = definedExternally, MinValue: Number = definedExternally, MaxValue: Number = definedExternally, bInitializeFromTarget: Boolean = definedExternally): `T$708`
        fun FixedTurn(InCurrent: Number, InDesired: Number, InDeltaRate: Number): Number
        fun FInterpTo_Constant(Current: Any, Target: Any, DeltaTime: Any, InterpSpeed: Any): Any
        fun FInterpTo(Current: Any, Target: Any, DeltaTime: Any, InterpSpeed: Any): Any
        fun FInterpEaseInOut(A: Any, B: Any, Alpha: Any, Exponent: Any): Any
        fun FindRelativeLookAtRotation(StartTransform: Transform, TargetLocation: Vector): Rotator
        fun FindNearestPointsOnLineSegments(Segment1Start: Vector, Segment1End: Vector, Segment2Start: Vector, Segment2End: Vector, Segment1Point: Vector = definedExternally, Segment2Point: Vector = definedExternally): `T$495`
        fun FindLookAtRotation(Start: Vector, Target: Vector): Rotator
        fun FindClosestPointOnSegment(Point: Vector, SegmentStart: Vector, SegmentEnd: Vector): Vector
        fun FindClosestPointOnLine(Point: Vector, LineOrigin: Vector, LineDirection: Vector): Vector
        fun FloortoInteger64(A: Any): Any
        fun Floor(A: Any): Number
        fun Clamp(Value: Any, Min: Any, Max: Any): Any
        fun CeiltoInteger64(A: Any): Any
        fun Ceil(A: Any): Number
        fun Exp(A: Any): Any
        fun EqualExactly_VectorVector(A: Vector, B: Vector): Boolean
        fun EqualExactly_Vector4Vector4(A: Vector4, B: Vector4): Boolean
        fun EqualExactly_Vector2DVector2D(A: Vector2D, B: Vector2D): Boolean
        fun EqualEqual_VectorVector(A: Vector, B: Vector, ErrorTolerance: Number): Boolean
        fun EqualEqual_Vector4Vector4(A: Vector4, B: Vector4, ErrorTolerance: Number): Boolean
        fun EqualEqual_Vector2DVector2D(A: Vector2D, B: Vector2D, ErrorTolerance: Number): Boolean
        fun EqualEqual_TransformTransform(A: Transform, B: Transform): Boolean
        fun EqualEqual_TimespanTimespan(A: Timespan, B: Timespan): Boolean
        fun EqualEqual_RotatorRotator(A: Rotator, B: Rotator, ErrorTolerance: Number): Boolean
        fun EqualEqual_QuatQuat(A: Quat, B: Quat, Tolerance: Number): Boolean
        fun EqualEqual_ObjectObject(A: UObject, B: UObject): Boolean
        fun Equal(A: String, B: String): Boolean
        fun EqualEqual_MatrixMatrix(A: Matrix, B: Matrix, Tolerance: Number): Boolean
        fun EqualEqual_LinearColorLinearColor(A: LinearColor, B: LinearColor): Boolean
        fun Equal(A: Number, B: Number): Boolean
        fun Equal(A: Any, B: Any): Boolean
        fun EqualEqual_DateTimeDateTime(A: DateTime, B: DateTime): Boolean
        fun EqualEqual_ClassClass(A: UnrealEngineClass, B: UnrealEngineClass): Boolean
        fun Equal(A: Boolean, B: Boolean): Boolean
        fun Equal_IntPointIntPoint(A: IntPoint, B: IntPoint): Boolean
        fun Ease(A: Any, B: Any, Alpha: Any, EasingFunc: String /* "Linear" | "Step" | "SinusoidalIn" | "SinusoidalOut" | "SinusoidalInOut" | "EaseIn" | "EaseOut" | "EaseInOut" | "ExpoIn" | "ExpoOut" | "ExpoInOut" | "CircularIn" | "CircularOut" | "CircularInOut" | "EEasingFunc_MAX" */, BlendExp: Any, Steps: Number): Any
        fun DynamicWeightedMovingAverage_FVector(CurrentSample: Vector, PreviousSample: Vector, MaxDistance: Number, MinWeight: Number, MaxWeight: Number): Vector
        fun DynamicWeightedMovingAverage_FRotator(CurrentSample: Rotator, PreviousSample: Rotator, MaxDistance: Number, MinWeight: Number, MaxWeight: Number): Rotator
        fun DynamicWeightedMovingAverageFloat(CurrentSample: Number, PreviousSample: Number, MaxDistance: Number, MinWeight: Number, MaxWeight: Number): Number
        fun DotProduct2D(A: Vector2D, B: Vector2D): Any
        fun Dot_VectorVector(A: Vector, B: Vector): Any
        fun Divide_VectorVector(A: Vector, B: Vector): Vector
        fun Divide_VectorInt(A: Vector, B: Number): Vector
        fun Divide_VectorFloat(A: Vector, B: Any): Vector
        fun Divide_Vector4Vector4(A: Vector4, B: Vector4): Vector4
        fun Divide_Vector2DVector2D(A: Vector2D, B: Vector2D): Vector2D
        fun Divide_Vector2DFloat(A: Vector2D, B: Any): Vector2D
        fun Divide_TimespanFloat(A: Timespan, Scalar: Number): Timespan
        fun Divide_LinearColorLinearColor(A: LinearColor, B: LinearColor): LinearColor
        fun Divide_IntPointIntPoint(A: IntPoint, B: IntPoint): IntPoint
        fun Divide_IntPointInt(A: IntPoint, B: Number): IntPoint
        fun Divide_IntInt(A: Number, B: Number): Number
        fun Divide_Int64Int64(A: Any, B: Any): Any
        fun Divide_DoubleDouble(A: Any, B: Any): Any
        fun Divide_ByteByte(A: Number, B: Number): Number
        fun DistanceSquared2D(v1: Vector2D, v2: Vector2D): Any
        fun Distance2D(v1: Vector2D, v2: Vector2D): Any
        fun DegreesToRadians(A: Any): Any
        fun Cos(A: Any): Any
        fun Atan2(Y: Any, X: Any): Any
        fun Atan(A: Any): Any
        fun Asin(A: Any): Any
        fun Acos(A: Any): Any
        fun DaysInYear(Year: Number): Number
        fun DaysInMonth(Year: Number, Month: Number): Number
        fun DateTimeMinValue(): DateTime
        fun DateTimeMaxValue(): DateTime
        fun DateTimeFromString(DateTimeString: String, Result: DateTime = definedExternally): `T$709`
        fun DateTimeFromIsoString(IsoString: String, Result: DateTime = definedExternally): `T$709`
        fun CrossProduct2D(A: Vector2D, B: Vector2D): Any
        fun Cross_VectorVector(A: Vector, B: Vector): Vector
        fun CreateVectorFromYawPitch(Yaw: Number, Pitch: Number, Length: Number): Vector
        fun ConvertTransformToRelative(Transform: Transform, ParentTransform: Transform): Transform
        fun Conv_VectorToVector2D(InVector: Vector): Vector2D
        fun Conv_VectorToTransform(InLocation: Vector): Transform
        fun Conv_VectorToRotator(InVec: Vector): Rotator
        fun Conv_VectorToQuaternion(InVec: Vector): Quat
        fun Conv_VectorToLinearColor(InVec: Vector): LinearColor
        fun Conv_Vector4ToVector(InVector4: Vector4): Vector
        fun Conv_Vector4ToRotator(InVec: Vector4): Rotator
        fun Conv_Vector4ToQuaternion(InVec: Vector4): Quat
        fun Conv_Vector2DToVector(InVector2D: Vector2D, Z: Number): Vector
        fun Conv_Vector2DToIntPoint(InVector2D: Vector2D): IntPoint
        fun Conv_TransformToMatrix(Transform: Transform): Matrix
        fun Conv_RotatorToVector(InRot: Rotator): Vector
        fun Conv_RotatorToTransform(InRotator: Rotator): Transform
        fun Conv_RotatorToQuaternion(InRot: Rotator): Quat
        fun Conv_MatrixToTransform(InMatrix: Matrix): Transform
        fun Conv_MatrixToRotator(InMatrix: Matrix): Rotator
        fun Conv_LinearColorToVector(InLinearColor: LinearColor): Vector
        fun Conv_LinearColorToColor(InLinearColor: LinearColor, InUseSRGB: Boolean): Color
        fun Conv_IntVectorToVector(InIntVector: IntVector): Vector
        fun Conv_IntToVector(inInt: Number): Vector
        fun Conv_IntToIntVector(inInt: Number): IntVector
        fun ToInteger64(inInt: Number): Any
        fun ToFloat(inInt: Number): Number
        fun ToDouble(inInt: Number): Any
        fun ToByte(inInt: Number): Number
        fun ToBoolean(inInt: Number): Boolean
        fun Conv_IntPointToVector2D(InIntPoint: IntPoint): Vector2D
        fun ToInteger(inInt: Any): Number
        fun ToDouble(inInt: Any): Any
        fun ToByte(inInt: Any): Number
        fun Conv_FloatToVector(InFloat: Number): Vector
        fun Conv_FloatToLinearColor(InFloat: Number): LinearColor
        fun ToDouble(InFloat: Number): Any
        fun Conv_DoubleToVector(InDouble: Any): Vector
        fun Conv_DoubleToLinearColor(InDouble: Any): LinearColor
        fun ToInteger64(InDouble: Any): Any
        fun ToFloat(InDouble: Any): Number
        fun Conv_ColorToLinearColor(InColor: Color): LinearColor
        fun ToInteger64(InByte: Number): Any
        fun ToInteger(InByte: Number): Number
        fun ToFloat(InByte: Number): Number
        fun ToDouble(InByte: Number): Any
        fun ToInteger(InBool: Boolean): Number
        fun ToFloat(InBool: Boolean): Number
        fun ToByte(InBool: Boolean): Number
        fun ComposeTransforms(A: Transform, B: Transform): Transform
        fun ComposeRotators(A: Rotator, B: Rotator): Rotator
        fun ClassIsChildOf(TestClass: UnrealEngineClass, ParentClass: UnrealEngineClass): Boolean
        fun ClampVectorSize(A: Vector, Min: Any, Max: Any): Vector
        fun ClampAxis(Angle: Number): Number
        fun ClampAxes2D(A: Vector2D, MinAxisVal: Any, MaxAxisVal: Any): Vector2D
        fun ClampAngle(AngleDegrees: Any, MinAngleDegrees: Any, MaxAngleDegrees: Any): Any
        fun Clamp(Value: Number, Min: Number, Max: Number): Number
        fun CInterpTo(Current: LinearColor, Target: LinearColor, DeltaTime: Number, InterpSpeed: Number): LinearColor
        fun BreakVector_NetQuantizeNormal(InVec: Vector_NetQuantizeNormal, X: Any = definedExternally, Y: Any = definedExternally, Z: Any = definedExternally): `T$50`
        fun BreakVector_NetQuantize100(InVec: Vector_NetQuantize100, X: Any = definedExternally, Y: Any = definedExternally, Z: Any = definedExternally): `T$50`
        fun BreakVector_NetQuantize10(InVec: Vector_NetQuantize10, X: Any = definedExternally, Y: Any = definedExternally, Z: Any = definedExternally): `T$50`
        fun BreakVector_NetQuantize(InVec: Vector_NetQuantize, X: Any = definedExternally, Y: Any = definedExternally, Z: Any = definedExternally): `T$50`
        fun BreakVector4(InVec: Vector4, X: Any = definedExternally, Y: Any = definedExternally, Z: Any = definedExternally, W: Any = definedExternally): `T$11`
        fun BreakVector3f(InVec: Vector3f, X: Number = definedExternally, Y: Number = definedExternally, Z: Number = definedExternally): `T$27`
        fun BreakVector2D(InVec: Vector2D, X: Any = definedExternally, Y: Any = definedExternally): `T$490`
        fun BreakVector(InVec: Vector, X: Any = definedExternally, Y: Any = definedExternally, Z: Any = definedExternally): `T$50`
        fun BreakTransform(InTransform: Transform, Location: Vector = definedExternally, Rotation: Rotator = definedExternally, Scale: Vector = definedExternally): `T$15`
        fun BreakTimespan2(InTimespan: Timespan, Days: Number = definedExternally, Hours: Number = definedExternally, Minutes: Number = definedExternally, Seconds: Number = definedExternally, FractionNano: Number = definedExternally): `T$311`
        fun BreakTimespan(InTimespan: Timespan, Days: Number = definedExternally, Hours: Number = definedExternally, Minutes: Number = definedExternally, Seconds: Number = definedExternally, Milliseconds: Number = definedExternally): `T$310`
        fun BreakRotIntoAxes(InRot: Rotator, X: Vector = definedExternally, Y: Vector = definedExternally, Z: Vector = definedExternally): `T$4`
        fun BreakRotator(InRot: Rotator, Roll: Number = definedExternally, Pitch: Number = definedExternally, Yaw: Number = definedExternally): `T$3`
        fun BreakRandomStream(InRandomStream: RandomStream, InitialSeed: Number = definedExternally): `T$1`
        fun BreakQuat(InQuat: Quat, X: Number = definedExternally, Y: Number = definedExternally, Z: Number = definedExternally, W: Number = definedExternally): `T$7`
        fun BreakQualifiedFrameTime(InFrameTime: QualifiedFrameTime, Frame: FrameNumber = definedExternally, FrameRate: FrameRate = definedExternally, SubFrame: Number = definedExternally): `T$82`
        fun BreakFrameRate(InFrameRate: FrameRate, Numerator: Number = definedExternally, Denominator: Number = definedExternally): `T$79`
        fun BreakDateTime(InDateTime: DateTime, Year: Number = definedExternally, Month: Number = definedExternally, Day: Number = definedExternally, Hour: Number = definedExternally, Minute: Number = definedExternally, Second: Number = definedExternally, Millisecond: Number = definedExternally): `T$572`
        fun BreakColor(InColor: LinearColor, R: Number = definedExternally, G: Number = definedExternally, B: Number = definedExternally, A: Number = definedExternally): `T$17`
        fun BreakBoxSphereBounds(InBoxSphereBounds: BoxSphereBounds, Origin: Vector = definedExternally, BoxExtent: Vector = definedExternally, SphereRadius: Number = definedExternally): `T$153`
        fun XORBoolean(A: Boolean, B: Boolean): Boolean
        fun ORBoolean(A: Boolean, B: Boolean): Boolean
        fun NORBoolean(A: Boolean, B: Boolean): Boolean
        fun NANDBoolean(A: Boolean, B: Boolean): Boolean
        fun ANDBoolean(A: Boolean, B: Boolean): Boolean
        fun BitwiseAND(A: Number, B: Number): Number
        fun BitwiseAND(A: Any, B: Any): Any
        fun Add_VectorVector(A: Vector, B: Vector): Vector
        fun Add_VectorInt(A: Vector, B: Number): Vector
        fun Add_VectorFloat(A: Vector, B: Any): Vector
        fun Add_Vector4Vector4(A: Vector4, B: Vector4): Vector4
        fun Add_Vector2DVector2D(A: Vector2D, B: Vector2D): Vector2D
        fun Add_Vector2DFloat(A: Vector2D, B: Any): Vector2D
        fun Add_TimespanTimespan(A: Timespan, B: Timespan): Timespan
        fun Add_QuatQuat(A: Quat, B: Quat): Quat
        fun Add_MatrixMatrix(A: Matrix, B: Matrix): Matrix
        fun Add_LinearColorLinearColor(A: LinearColor, B: LinearColor): LinearColor
        fun Add_IntPointIntPoint(A: IntPoint, B: IntPoint): IntPoint
        fun Add_IntPointInt(A: IntPoint, B: Number): IntPoint
        fun Add_IntInt(A: Number, B: Number): Number
        fun Add_Int64Int64(A: Any, B: Any): Any
        fun Add_DoubleDouble(A: Any, B: Any): Any
        fun Add_DateTimeTimespan(A: DateTime, B: Timespan): DateTime
        fun Add_DateTimeDateTime(A: DateTime, B: DateTime): DateTime
        fun Add_ByteByte(A: Number, B: Number): Number
        fun Absolute(A: Any): Any
        fun Absolute(A: Number): Number
        fun C(Other: UObject): KismetMathLibrary
        fun C(Other: Any): KismetMathLibrary
    }
}

external interface `T$710` {
    var Data: Number
}

external open class KismetNodeHelperLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): KismetNodeHelperLibrary
        fun Find(Outer: UObject, ResourceName: String): KismetNodeHelperLibrary
        fun GetDefaultObject(): KismetNodeHelperLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): KismetNodeHelperLibrary
        fun MarkBit(Data: Number = definedExternally, index: Number = definedExternally): `T$710`
        fun HasUnmarkedBit(Data: Number, NumBits: Number): Boolean
        fun HasMarkedBit(Data: Number, NumBits: Number): Boolean
        fun GetValidValue(Enum: Enum, EnumeratorValue: Number): Number
        fun GetUnmarkedBit(Data: Number, StartIdx: Number, NumBits: Number, bRandom: Boolean): Number
        fun GetRandomUnmarkedBit(Data: Number, StartIdx: Number, NumBits: Number): Number
        fun GetFirstUnmarkedBit(Data: Number, StartIdx: Number, NumBits: Number): Number
        fun GetEnumeratorValueFromIndex(Enum: Enum, EnumeratorIndex: Number): Number
        fun GetEnumeratorUserFriendlyName(Enum: Enum, EnumeratorValue: Number): String
        fun GetEnumeratorName(Enum: Enum, EnumeratorValue: Number): String
        fun ClearBit(Data: Number = definedExternally, index: Number = definedExternally): `T$710`
        fun ClearAllBits(Data: Number = definedExternally): `T$710`
        fun BitIsMarked(Data: Number, index: Number): Boolean
        fun C(Other: UObject): KismetNodeHelperLibrary
        fun C(Other: Any): KismetNodeHelperLibrary
    }
}

external interface `T$711` {
    var OutLinearSamples: Array<LinearColor>
    var `$`: Boolean
}

external interface `T$712` {
    var OutSamples: Array<Color>
    var `$`: Boolean
}

external open class KismetRenderingLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): KismetRenderingLibrary
        fun Find(Outer: UObject, ResourceName: String): KismetRenderingLibrary
        fun GetDefaultObject(): KismetRenderingLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): KismetRenderingLibrary
        fun SetCastInsetShadowForAllAttachments(PrimitiveComponent: PrimitiveComponent, bCastInsetShadow: Boolean, bLightAttachmentsAsGroup: Boolean)
        fun RenderTargetCreateStaticTexture2DEditorOnly(RenderTarget: TextureRenderTarget2D, Name: String, CompressionSettings: String /* "TC_Default" | "TC_Normalmap" | "TC_Masks" | "TC_Grayscale" | "TC_Displacementmap" | "TC_VectorDisplacementmap" | "TC_HDR" | "TC_EditorIcon" | "TC_Alpha" | "TC_DistanceFieldFont" | "TC_HDR_Compressed" | "TC_BC7" | "TC_HalfFloat" | "TC_LQ" | "TC_EncodedReflectionCapture" | "TC_MAX" */, MipSettings: String /* "TMGS_FromTextureGroup" | "TMGS_SimpleAverage" | "TMGS_Sharpen0" | "TMGS_Sharpen1" | "TMGS_Sharpen2" | "TMGS_Sharpen3" | "TMGS_Sharpen4" | "TMGS_Sharpen5" | "TMGS_Sharpen6" | "TMGS_Sharpen7" | "TMGS_Sharpen8" | "TMGS_Sharpen9" | "TMGS_Sharpen10" | "TMGS_NoMipmaps" | "TMGS_LeaveExistingMips" | "TMGS_Blur1" | "TMGS_Blur2" | "TMGS_Blur3" | "TMGS_Blur4" | "TMGS_Blur5" | "TMGS_Unfiltered" | "TMGS_Angular" | "TMGS_MAX" */): Texture2D
        fun ReleaseRenderTarget2D(TextureRenderTarget: TextureRenderTarget2D)
        fun ReadRenderTargetUV(WorldContextObject: UObject, TextureRenderTarget: TextureRenderTarget2D, U: Number, V: Number): Color
        fun ReadRenderTargetRawUVArea(WorldContextObject: UObject, TextureRenderTarget: TextureRenderTarget2D, Area: Box2D, bNormalize: Boolean): Array<LinearColor>
        fun ReadRenderTargetRawUV(WorldContextObject: UObject, TextureRenderTarget: TextureRenderTarget2D, U: Number, V: Number, bNormalize: Boolean): LinearColor
        fun ReadRenderTargetRawPixelArea(WorldContextObject: UObject, TextureRenderTarget: TextureRenderTarget2D, MinX: Number, MinY: Number, MaxX: Number, MaxY: Number, bNormalize: Boolean): Array<LinearColor>
        fun ReadRenderTargetRawPixel(WorldContextObject: UObject, TextureRenderTarget: TextureRenderTarget2D, X: Number, Y: Number, bNormalize: Boolean): LinearColor
        fun ReadRenderTargetRaw(WorldContextObject: UObject, TextureRenderTarget: TextureRenderTarget2D, OutLinearSamples: Array<LinearColor> = definedExternally, bNormalize: Boolean = definedExternally): `T$711`
        fun ReadRenderTargetPixel(WorldContextObject: UObject, TextureRenderTarget: TextureRenderTarget2D, X: Number, Y: Number): Color
        fun ReadRenderTarget(WorldContextObject: UObject, TextureRenderTarget: TextureRenderTarget2D, OutSamples: Array<Color> = definedExternally, bNormalize: Boolean = definedExternally): `T$712`
        fun MakeSkinWeightInfo(Bone0: Number, Weight0: Number, Bone1: Number, Weight1: Number, Bone2: Number, Weight2: Number, Bone3: Number, Weight3: Number): SkelMeshSkinWeightInfo
        fun ImportFileAsTexture2D(WorldContextObject: UObject, Filename: String): Texture2D
        fun ImportBufferAsTexture2D(WorldContextObject: UObject, Buffer: Array<Number>): Texture2D
        fun ExportTexture2D(WorldContextObject: UObject, Texture: Texture2D, FilePath: String, Filename: String)
        fun ExportRenderTarget(WorldContextObject: UObject, TextureRenderTarget: TextureRenderTarget2D, FilePath: String, Filename: String)
        fun EndDrawCanvasToRenderTarget(WorldContextObject: UObject, Context: DrawToRenderTargetContext)
        fun DrawMaterialToRenderTarget(WorldContextObject: UObject, TextureRenderTarget: TextureRenderTarget2D, Material: MaterialInterface)
        fun CreateRenderTargetVolume(WorldContextObject: UObject, Width: Number, Height: Number, Depth: Number, Format: String /* "RTF_R8" | "RTF_RG8" | "RTF_RGBA8" | "RTF_RGBA8_SRGB" | "RTF_R16f" | "RTF_RG16f" | "RTF_RGBA16f" | "RTF_R32f" | "RTF_RG32f" | "RTF_RGBA32f" | "RTF_RGB10A2" | "RTF_MAX" */, ClearColor: LinearColor, bAutoGenerateMipMaps: Boolean): TextureRenderTargetVolume
        fun CreateRenderTarget2DArray(WorldContextObject: UObject, Width: Number, Height: Number, Slices: Number, Format: String /* "RTF_R8" | "RTF_RG8" | "RTF_RGBA8" | "RTF_RGBA8_SRGB" | "RTF_R16f" | "RTF_RG16f" | "RTF_RGBA16f" | "RTF_R32f" | "RTF_RG32f" | "RTF_RGBA32f" | "RTF_RGB10A2" | "RTF_MAX" */, ClearColor: LinearColor, bAutoGenerateMipMaps: Boolean): TextureRenderTarget2DArray
        fun CreateRenderTarget2D(WorldContextObject: UObject, Width: Number, Height: Number, Format: String /* "RTF_R8" | "RTF_RG8" | "RTF_RGBA8" | "RTF_RGBA8_SRGB" | "RTF_R16f" | "RTF_RG16f" | "RTF_RGBA16f" | "RTF_R32f" | "RTF_RG32f" | "RTF_RGBA32f" | "RTF_RGB10A2" | "RTF_MAX" */, ClearColor: LinearColor, bAutoGenerateMipMaps: Boolean): TextureRenderTarget2D
        fun ConvertRenderTargetToTexture2DEditorOnly(WorldContextObject: UObject, RenderTarget: TextureRenderTarget2D, Texture: Texture2D)
        fun ClearRenderTarget2D(WorldContextObject: UObject, TextureRenderTarget: TextureRenderTarget2D, ClearColor: LinearColor)
        fun CalculateProjectionMatrix(MinimalViewInfo: MinimalViewInfo): Matrix
        fun BreakSkinWeightInfo(InWeight: SkelMeshSkinWeightInfo, Bone0: Number = definedExternally, Weight0: Number = definedExternally, Bone1: Number = definedExternally, Weight1: Number = definedExternally, Bone2: Number = definedExternally, Weight2: Number = definedExternally, Bone3: Number = definedExternally, Weight3: Number = definedExternally): `T$181`
        fun BeginDrawCanvasToRenderTarget(WorldContextObject: UObject, TextureRenderTarget: TextureRenderTarget2D, Canvas: Canvas = definedExternally, Size: Vector2D = definedExternally, Context: DrawToRenderTargetContext = definedExternally): `T$339`
        fun C(Other: UObject): KismetRenderingLibrary
        fun C(Other: Any): KismetRenderingLibrary
    }
}

external object ESearchCase {
    var CaseSensitive: String /* "CaseSensitive" */
    var IgnoreCase: String /* "IgnoreCase" */
    var ESearchCase_MAX: String /* "ESearchCase_MAX" */
}

external object ESearchDir {
    var FromStart: String /* "FromStart" */
    var FromEnd: String /* "FromEnd" */
    var ESearchDir_MAX: String /* "ESearchDir_MAX" */
}

external interface `T$713` {
    var LeftS: String
    var RightS: String
    var `$`: Boolean
}

external interface `T$714` {
    var SourceString: String
    var `$`: Number
}

external interface `T$715` {
    var inArray: Array<String>
    var `$`: Number
}

external interface `T$716` {
    var OutConvertedVector: Vector3f
    var OutIsValid: Boolean
}

external interface `T$717` {
    var OutConvertedVector2D: Vector2D
    var OutIsValid: Boolean
}

external interface `T$718` {
    var OutConvertedVector: Vector
    var OutIsValid: Boolean
}

external interface `T$719` {
    var OutConvertedRotator: Rotator
    var OutIsValid: Boolean
}

external interface `T$720` {
    var OutConvertedColor: LinearColor
    var OutIsValid: Boolean
}

external open class KismetStringLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): KismetStringLibrary
        fun Find(Outer: UObject, ResourceName: String): KismetStringLibrary
        fun GetDefaultObject(): KismetStringLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): KismetStringLibrary
        fun TrimTrailing(SourceString: String): String
        fun Trim(SourceString: String): String
        fun ToUpper(SourceString: String): String
        fun ToLower(SourceString: String): String
        fun TimeSecondsToString(InSeconds: Number): String
        fun StartsWith(SourceString: String, InPrefix: String, SearchCase: String /* "CaseSensitive" | "IgnoreCase" | "ESearchCase_MAX" */): Boolean
        fun Split(SourceString: String, InStr: String, LeftS: String = definedExternally, RightS: String = definedExternally, SearchCase: String /* "CaseSensitive" | "IgnoreCase" | "ESearchCase_MAX" */ = definedExternally, SearchDir: String /* "FromStart" | "FromEnd" | "ESearchDir_MAX" */ = definedExternally): `T$713`
        fun RightPad(SourceString: String, ChCount: Number): String
        fun RightChop(SourceString: String, Count: Number): String
        fun Right(SourceString: String, Count: Number): String
        fun Reverse(SourceString: String): String
        fun ReplaceInline(SourceString: String = definedExternally, SearchText: String = definedExternally, ReplacementText: String = definedExternally, SearchCase: String /* "CaseSensitive" | "IgnoreCase" | "ESearchCase_MAX" */ = definedExternally): `T$714`
        fun Replace(SourceString: String, From: String, To: String, SearchCase: String /* "CaseSensitive" | "IgnoreCase" | "ESearchCase_MAX" */): String
        fun ParseIntoArray(SourceString: String, Delimiter: String, CullEmptyStrings: Boolean): Array<String>
        fun NotEqualExactly(A: String, B: String): Boolean
        fun NotEqual_StriStri(A: String, B: String): Boolean
        fun Mid(SourceString: String, Start: Number, Count: Number): String
        fun MatchesWildcard(SourceString: String, wildcard: String, SearchCase: String /* "CaseSensitive" | "IgnoreCase" | "ESearchCase_MAX" */): Boolean
        fun Len(S: String): Number
        fun LeftPad(SourceString: String, ChCount: Number): String
        fun LeftChop(SourceString: String, Count: Number): String
        fun Left(SourceString: String, Count: Number): String
        fun JoinStringArray(SourceArray: Array<String>, Separator: String): String
        fun IsNumeric(SourceString: String): Boolean
        fun IsEmpty(InString: String): Boolean
        fun GetSubstring(SourceString: String, StartIndex: Number, Length: Number): String
        fun GetCharacterAsNumber(SourceString: String, index: Number): Number
        fun GetCharacterArrayFromString(SourceString: String): Array<String>
        fun FindSubstring(SearchIn: String, Substring: String, bUseCase: Boolean, bSearchFromEnd: Boolean, StartPosition: Number): Number
        fun EqualExactly(A: String, B: String): Boolean
        fun EqualEqual_StriStri(A: String, B: String): Boolean
        fun EndsWith(SourceString: String, InSuffix: String, SearchCase: String /* "CaseSensitive" | "IgnoreCase" | "ESearchCase_MAX" */): Boolean
        fun CullArray(SourceString: String, inArray: Array<String> = definedExternally): `T$715`
        fun Conv_VectorToString(InVec: Vector): String
        fun Conv_Vector3fToString(InVec: Vector3f): String
        fun Conv_Vector2dToString(InVec: Vector2D): String
        fun Conv_TransformToString(InTrans: Transform): String
        fun StringToFloatVector(InString: String, OutConvertedVector: Vector3f = definedExternally, OutIsValid: Boolean = definedExternally): `T$716`
        fun StringToVector2D(InString: String, OutConvertedVector2D: Vector2D = definedExternally, OutIsValid: Boolean = definedExternally): `T$717`
        fun StringToVector(InString: String, OutConvertedVector: Vector = definedExternally, OutIsValid: Boolean = definedExternally): `T$718`
        fun StringToRotator(InString: String, OutConvertedRotator: Rotator = definedExternally, OutIsValid: Boolean = definedExternally): `T$719`
        fun StringToName(InString: String): String
        fun StringToInteger(InString: String): Number
        fun StringToFloat(InString: String): Any
        fun StringToColor(InString: String, OutConvertedColor: LinearColor = definedExternally, OutIsValid: Boolean = definedExternally): `T$720`
        fun Conv_RotatorToString(InRot: Rotator): String
        fun Conv_ObjectToString(InObj: UObject): String
        fun ToString(InName: String): String
        fun Conv_MatrixToString(InMatrix: Matrix): String
        fun Conv_IntVectorToString(InIntVec: IntVector): String
        fun ToString(inInt: Number): String
        fun Conv_IntPointToString(InIntPoint: IntPoint): String
        fun ToString(inInt: Any): String
        fun ToString(InDouble: Any): String
        fun Conv_ColorToString(InColor: LinearColor): String
        fun ToString(InByte: Number): String
        fun ToString(InBool: Boolean): String
        fun Contains(SearchIn: String, Substring: String, bUseCase: Boolean, bSearchFromEnd: Boolean): Boolean
        fun Append(A: String, B: String): String
        fun BuildString(AppendTo: String, Prefix: String, InVector2D: Vector2D, Suffix: String): String
        fun BuildString(AppendTo: String, Prefix: String, InVector: Vector, Suffix: String): String
        fun BuildString(AppendTo: String, Prefix: String, InRot: Rotator, Suffix: String): String
        fun BuildString(AppendTo: String, Prefix: String, InObj: UObject, Suffix: String): String
        fun BuildString(AppendTo: String, Prefix: String, InName: String, Suffix: String): String
        fun BuildString(AppendTo: String, Prefix: String, InIntVector: IntVector, Suffix: String): String
        fun BuildString(AppendTo: String, Prefix: String, inInt: Number, Suffix: String): String
        fun BuildString(AppendTo: String, Prefix: String, InDouble: Any, Suffix: String): String
        fun BuildString(AppendTo: String, Prefix: String, InColor: LinearColor, Suffix: String): String
        fun BuildString(AppendTo: String, Prefix: String, InBool: Boolean, Suffix: String): String
        fun C(Other: UObject): KismetStringLibrary
        fun C(Other: Any): KismetStringLibrary
    }
}

external open class KismetStringTableLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): KismetStringTableLibrary
        fun Find(Outer: UObject, ResourceName: String): KismetStringTableLibrary
        fun GetDefaultObject(): KismetStringTableLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): KismetStringTableLibrary
        fun IsStringTableRegistered(TableId: String): Boolean
        fun IsStringTableEntryRegistered(TableId: String, Key: String): Boolean
        fun GetStringTableNamespace(TableId: String): String
        fun GetStringTableEntrySourceString(TableId: String, Key: String): String
        fun GetTableEntryMetaData(TableId: String, Key: String, MetaDataId: String): String
        fun GetRegisteredStringTables(): Array<String>
        fun GetMetaDataIdsFromStringTableEntry(TableId: String, Key: String): Array<String>
        fun GetKeysFromStringTable(TableId: String): Array<String>
        fun C(Other: UObject): KismetStringTableLibrary
        fun C(Other: Any): KismetStringTableLibrary
    }
}

external open class UserActivity {
    open var ActionName: String
    open fun clone(): UserActivity
    open fun SetUserActivity()

    companion object {
        fun C(Other: UObject): UserActivity
        fun C(Other: Any): UserActivity
        fun SetUserActivity(UserActivity: UserActivity)
    }
}

external interface `T$721` {
    var OutHits: Array<HitResult>
    var `$`: Boolean
}

external interface `T$722` {
    var OutHits: Array<HitResult>
    var `$`: Boolean
}

external interface `T$723` {
    var OutHits: Array<HitResult>
    var `$`: Boolean
}

external interface `T$724` {
    var OutComponents: Array<PrimitiveComponent>
    var `$`: Boolean
}

external interface `T$725` {
    var OutActors: Array<Actor>
    var `$`: Boolean
}

external interface `T$726` {
    var OutTokens: Array<String>
    var OutSwitches: Array<String>
    var OutParams: Any
}

external interface `T$727` {
    var OutHits: Array<HitResult>
    var `$`: Boolean
}

external interface `T$728` {
    var OutHits: Array<HitResult>
    var `$`: Boolean
}

external interface `T$729` {
    var OutHits: Array<HitResult>
    var `$`: Boolean
}

external interface `T$730` {
    var Resolutions: Array<IntPoint>
    var `$`: Boolean
}

external interface `T$731` {
    var OutPrimaryAssetIdList: Array<PrimaryAssetId>
}

external interface `T$732` {
    var OutPrimaryAssetIdList: Array<PrimaryAssetId>
}

external interface `T$733` {
    var OutBundles: Array<String>
    var `$`: Boolean
}

external interface `T$734` {
    var Resolutions: Array<IntPoint>
    var `$`: Boolean
}

external interface `T$735` {
    var OutActorList: Array<Actor>
}

external interface `T$736` {
    var OutComponents: Array<PrimitiveComponent>
    var `$`: Boolean
}

external interface `T$737` {
    var OutActors: Array<Actor>
    var `$`: Boolean
}

external interface `T$738` {
    var OutHits: Array<HitResult>
    var `$`: Boolean
}

external interface `T$739` {
    var OutHits: Array<HitResult>
    var `$`: Boolean
}

external interface `T$740` {
    var OutHits: Array<HitResult>
    var `$`: Boolean
}

external interface `T$741` {
    var OutComponents: Array<PrimitiveComponent>
    var `$`: Boolean
}

external interface `T$742` {
    var OutActors: Array<Actor>
    var `$`: Boolean
}

external interface `T$743` {
    var OutHits: Array<HitResult>
    var `$`: Boolean
}

external interface `T$744` {
    var OutHits: Array<HitResult>
    var `$`: Boolean
}

external interface `T$745` {
    var OutHits: Array<HitResult>
    var `$`: Boolean
}

external interface `T$746` {
    var OutComponents: Array<PrimitiveComponent>
    var `$`: Boolean
}

external interface `T$747` {
    var OutActors: Array<Actor>
    var `$`: Boolean
}

external open class KismetSystemLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): KismetSystemLibrary
        fun Find(Outer: UObject, ResourceName: String): KismetSystemLibrary
        fun GetDefaultObject(): KismetSystemLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): KismetSystemLibrary
        fun UnregisterForRemoteNotifications()
        fun UnloadPrimaryAssetList(PrimaryAssetIdList: Array<PrimaryAssetId>)
        fun UnloadPrimaryAsset(PrimaryAssetId: PrimaryAssetId)
        fun TransactObject(UObject: UObject)
        fun StackTrace()
        fun SphereTraceSingleForObjects(WorldContextObject: UObject, Start: Vector, End: Vector, Radius: Number, ObjectTypes: Array<String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */>, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHit: HitResult = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$53`
        fun SphereTraceSingleByProfile(WorldContextObject: UObject, Start: Vector, End: Vector, Radius: Number, ProfileName: String, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHit: HitResult = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$53`
        fun SphereTraceSingle(WorldContextObject: UObject, Start: Vector, End: Vector, Radius: Number, TraceChannel: String /* "TraceTypeQuery1" | "TraceTypeQuery2" | "TraceTypeQuery3" | "TraceTypeQuery4" | "TraceTypeQuery5" | "TraceTypeQuery6" | "TraceTypeQuery7" | "TraceTypeQuery8" | "TraceTypeQuery9" | "TraceTypeQuery10" | "TraceTypeQuery11" | "TraceTypeQuery12" | "TraceTypeQuery13" | "TraceTypeQuery14" | "TraceTypeQuery15" | "TraceTypeQuery16" | "TraceTypeQuery17" | "TraceTypeQuery18" | "TraceTypeQuery19" | "TraceTypeQuery20" | "TraceTypeQuery21" | "TraceTypeQuery22" | "TraceTypeQuery23" | "TraceTypeQuery24" | "TraceTypeQuery25" | "TraceTypeQuery26" | "TraceTypeQuery27" | "TraceTypeQuery28" | "TraceTypeQuery29" | "TraceTypeQuery30" | "TraceTypeQuery31" | "TraceTypeQuery32" | "TraceTypeQuery_MAX" | "ETraceTypeQuery_MAX" */, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHit: HitResult = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$53`
        fun SphereTraceMultiForObjects(WorldContextObject: UObject, Start: Vector, End: Vector, Radius: Number, ObjectTypes: Array<String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */>, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHits: Array<HitResult> = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$721`
        fun SphereTraceMultiByProfile(WorldContextObject: UObject, Start: Vector, End: Vector, Radius: Number, ProfileName: String, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHits: Array<HitResult> = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$722`
        fun SphereTraceMulti(WorldContextObject: UObject, Start: Vector, End: Vector, Radius: Number, TraceChannel: String /* "TraceTypeQuery1" | "TraceTypeQuery2" | "TraceTypeQuery3" | "TraceTypeQuery4" | "TraceTypeQuery5" | "TraceTypeQuery6" | "TraceTypeQuery7" | "TraceTypeQuery8" | "TraceTypeQuery9" | "TraceTypeQuery10" | "TraceTypeQuery11" | "TraceTypeQuery12" | "TraceTypeQuery13" | "TraceTypeQuery14" | "TraceTypeQuery15" | "TraceTypeQuery16" | "TraceTypeQuery17" | "TraceTypeQuery18" | "TraceTypeQuery19" | "TraceTypeQuery20" | "TraceTypeQuery21" | "TraceTypeQuery22" | "TraceTypeQuery23" | "TraceTypeQuery24" | "TraceTypeQuery25" | "TraceTypeQuery26" | "TraceTypeQuery27" | "TraceTypeQuery28" | "TraceTypeQuery29" | "TraceTypeQuery30" | "TraceTypeQuery31" | "TraceTypeQuery32" | "TraceTypeQuery_MAX" | "ETraceTypeQuery_MAX" */, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHits: Array<HitResult> = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$723`
        fun SphereOverlapComponents(WorldContextObject: UObject, SpherePos: Vector, SphereRadius: Number, ObjectTypes: Array<String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */>, ComponentClassFilter: UnrealEngineClass, ActorsToIgnore: Array<Actor>, OutComponents: Array<PrimitiveComponent> = definedExternally): `T$724`
        fun SphereOverlapActors(WorldContextObject: UObject, SpherePos: Vector, SphereRadius: Number, ObjectTypes: Array<String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */>, ActorClassFilter: UnrealEngineClass, ActorsToIgnore: Array<Actor>, OutActors: Array<Actor> = definedExternally): `T$725`
        fun SnapshotObject(UObject: UObject)
        fun ShowPlatformSpecificLeaderboardScreen(CategoryName: String)
        fun ShowPlatformSpecificAchievementsScreen(SpecificPlayer: PlayerController)
        fun ShowInterstitialAd()
        fun ShowAdBanner(AdIdIndex: Number, bShowOnBottomOfScreen: Boolean)
        fun SetWindowTitle(Title: String)
        fun SetVolumeButtonsHandledBySystem(bEnabled: Boolean)
        fun SetVectorPropertyByName(UObject: UObject, PropertyName: String, Value: Vector)
        fun SetVector3fPropertyByName(UObject: UObject, PropertyName: String, Value: Vector3f)
        fun SetUserActivity(UserActivity: UserActivity)
        fun SetTransformPropertyByName(UObject: UObject, PropertyName: String, Value: Transform)
        fun SetTextPropertyByName(UObject: UObject, PropertyName: String, Value: String)
        fun SetSuppressViewportTransitionMessage(WorldContextObject: UObject, bState: Boolean)
        fun SetStructurePropertyByName(UObject: UObject, PropertyName: String, Value: GenericStruct)
        fun SetStringPropertyByName(UObject: UObject, PropertyName: String, Value: String)
        fun SetSoftObjectPropertyByName(UObject: UObject, PropertyName: String, Value: UObject)
        fun SetSoftClassPropertyByName(UObject: UObject, PropertyName: String, Value: Class)
        fun SetRotatorPropertyByName(UObject: UObject, PropertyName: String, Value: Rotator)
        fun SetObjectPropertyByName(UObject: UObject, PropertyName: String, Value: UObject)
        fun SetNamePropertyByName(UObject: UObject, PropertyName: String, Value: String)
        fun SetLinearColorPropertyByName(UObject: UObject, PropertyName: String, Value: LinearColor)
        fun SetIntPropertyByName(UObject: UObject, PropertyName: String, Value: Number)
        fun SetInt64PropertyByName(UObject: UObject, PropertyName: String, Value: Any)
        fun SetGamepadsBlockDeviceFeedback(bBlock: Boolean)
        fun SetFieldPathPropertyByName(UObject: UObject, PropertyName: String, Value: Any)
        fun SetEditorProperty(UObject: UObject, PropertyName: String, PropertyValue: Number, ChangeNotifyMode: String /* "Default" | "Never" | "Always" | "EPropertyAccessChangeNotifyMode_MAX" */): Boolean
        fun SetDoublePropertyByName(UObject: UObject, PropertyName: String, Value: Any)
        fun SetColorPropertyByName(UObject: UObject, PropertyName: String, Value: Color)
        fun SetCollisionProfileNameProperty(UObject: UObject, PropertyName: String, Value: CollisionProfileName)
        fun SetClassPropertyByName(UObject: UObject, PropertyName: String, Value: UnrealEngineClass)
        fun SetBytePropertyByName(UObject: UObject, PropertyName: String, Value: Number)
        fun SetBoolPropertyByName(UObject: UObject, PropertyName: String, Value: Boolean)
        fun RetriggerableDelay(WorldContextObject: UObject, Duration: Number, LatentInfo: LatentActionInfo)
        fun ResetGamepadAssignmentToController(ControllerId: Number)
        fun ResetGamepadAssignments()
        fun RegisterForRemoteNotifications()
        fun QuitGame(WorldContextObject: UObject, SpecificPlayer: PlayerController, QuitPreference: String /* "Quit" | "Background" | "EQuitPreference_MAX" */, bIgnorePlatformRestrictions: Boolean)
        fun QuitEditor()
        fun PrintWarning(InString: String)
        fun PrintText(WorldContextObject: UObject, InText: String, bPrintToScreen: Boolean, bPrintToLog: Boolean, TextColor: LinearColor, Duration: Number, Key: String)
        fun PrintString(WorldContextObject: UObject, InString: String, bPrintToScreen: Boolean, bPrintToLog: Boolean, TextColor: LinearColor, Duration: Number, Key: String)
        fun ParseParamValue(InString: String, InParam: String, OutValue: String = definedExternally): `T$187`
        fun ParseParam(InString: String, InParam: String): Boolean
        fun ParseCommandLine(InCmdLine: String, OutTokens: Array<String> = definedExternally, OutSwitches: Array<String> = definedExternally, OutParams: Any = definedExternally): `T$726`
        fun NotEqual_SoftObjectReference(A: UObject, B: UObject): Boolean
        fun NotEqual_SoftClassReference(A: Class, B: Class): Boolean
        fun NotEqual_PrimaryAssetType(A: PrimaryAssetType, B: PrimaryAssetType): Boolean
        fun NotEqual_PrimaryAssetId(A: PrimaryAssetId, B: PrimaryAssetId): Boolean
        fun NormalizeFilename(InFilename: String): String
        fun MoveComponentTo(Component: SceneComponent, TargetRelativeLocation: Vector, TargetRelativeRotation: Rotator, bEaseOut: Boolean, bEaseIn: Boolean, OverTime: Number, bForceShortestRotationPath: Boolean, MoveAction: String /* "Move" | "Stop" | "Return" | "EMoveComponentAction_MAX" */, LatentInfo: LatentActionInfo)
        fun MakeSoftObjectPath(PathString: String): SoftObjectPath
        fun MakeSoftClassPath(PathString: String): SoftClassPath
        fun MakeLiteralText(Value: String): String
        fun MakeLiteralString(Value: String): String
        fun MakeLiteralName(Value: String): String
        fun MakeLiteralInt64(Value: Any): Any
        fun MakeLiteralInt(Value: Number): Number
        fun MakeLiteralFloat(Value: Number): Number
        fun MakeLiteralDouble(Value: Any): Any
        fun MakeLiteralByte(Value: Number): Number
        fun MakeLiteralBool(Value: Boolean): Boolean
        fun LogString(InString: String, bPrintToLog: Boolean)
        fun LoadInterstitialAd(AdIdIndex: Number)
        fun LoadClassAsset_Blocking(AssetClass: Class): UnrealEngineClass
        fun LoadAsset_Blocking(Asset: UObject): UObject
        fun LineTraceSingleForObjects(WorldContextObject: UObject, Start: Vector, End: Vector, ObjectTypes: Array<String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */>, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHit: HitResult = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$53`
        fun LineTraceSingleByProfile(WorldContextObject: UObject, Start: Vector, End: Vector, ProfileName: String, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHit: HitResult = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$53`
        fun LineTraceSingle(WorldContextObject: UObject, Start: Vector, End: Vector, TraceChannel: String /* "TraceTypeQuery1" | "TraceTypeQuery2" | "TraceTypeQuery3" | "TraceTypeQuery4" | "TraceTypeQuery5" | "TraceTypeQuery6" | "TraceTypeQuery7" | "TraceTypeQuery8" | "TraceTypeQuery9" | "TraceTypeQuery10" | "TraceTypeQuery11" | "TraceTypeQuery12" | "TraceTypeQuery13" | "TraceTypeQuery14" | "TraceTypeQuery15" | "TraceTypeQuery16" | "TraceTypeQuery17" | "TraceTypeQuery18" | "TraceTypeQuery19" | "TraceTypeQuery20" | "TraceTypeQuery21" | "TraceTypeQuery22" | "TraceTypeQuery23" | "TraceTypeQuery24" | "TraceTypeQuery25" | "TraceTypeQuery26" | "TraceTypeQuery27" | "TraceTypeQuery28" | "TraceTypeQuery29" | "TraceTypeQuery30" | "TraceTypeQuery31" | "TraceTypeQuery32" | "TraceTypeQuery_MAX" | "ETraceTypeQuery_MAX" */, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHit: HitResult = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$53`
        fun LineTraceMultiForObjects(WorldContextObject: UObject, Start: Vector, End: Vector, ObjectTypes: Array<String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */>, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHits: Array<HitResult> = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$727`
        fun LineTraceMultiByProfile(WorldContextObject: UObject, Start: Vector, End: Vector, ProfileName: String, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHits: Array<HitResult> = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$728`
        fun LineTraceMulti(WorldContextObject: UObject, Start: Vector, End: Vector, TraceChannel: String /* "TraceTypeQuery1" | "TraceTypeQuery2" | "TraceTypeQuery3" | "TraceTypeQuery4" | "TraceTypeQuery5" | "TraceTypeQuery6" | "TraceTypeQuery7" | "TraceTypeQuery8" | "TraceTypeQuery9" | "TraceTypeQuery10" | "TraceTypeQuery11" | "TraceTypeQuery12" | "TraceTypeQuery13" | "TraceTypeQuery14" | "TraceTypeQuery15" | "TraceTypeQuery16" | "TraceTypeQuery17" | "TraceTypeQuery18" | "TraceTypeQuery19" | "TraceTypeQuery20" | "TraceTypeQuery21" | "TraceTypeQuery22" | "TraceTypeQuery23" | "TraceTypeQuery24" | "TraceTypeQuery25" | "TraceTypeQuery26" | "TraceTypeQuery27" | "TraceTypeQuery28" | "TraceTypeQuery29" | "TraceTypeQuery30" | "TraceTypeQuery31" | "TraceTypeQuery32" | "TraceTypeQuery_MAX" | "ETraceTypeQuery_MAX" */, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHits: Array<HitResult> = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$729`
        fun LaunchURL(URL: String)
        fun K2_UnPauseTimerHandle(WorldContextObject: UObject, Handle: TimerHandle)
        fun K2_UnPauseTimer(UObject: UObject, FunctionName: String)
        fun K2_TimerExistsHandle(WorldContextObject: UObject, Handle: TimerHandle): Boolean
        fun K2_TimerExists(UObject: UObject, FunctionName: String): Boolean
        fun K2_SetTimerForNextTick(UObject: UObject, FunctionName: String): TimerHandle
        fun K2_SetTimer(UObject: UObject, FunctionName: String, Time: Number, bLooping: Boolean, InitialStartDelay: Number, InitialStartDelayVariance: Number): TimerHandle
        fun K2_PauseTimerHandle(WorldContextObject: UObject, Handle: TimerHandle)
        fun K2_PauseTimer(UObject: UObject, FunctionName: String)
        fun K2_IsValidTimerHandle(Handle: TimerHandle): Boolean
        fun K2_IsTimerPausedHandle(WorldContextObject: UObject, Handle: TimerHandle): Boolean
        fun K2_IsTimerPaused(UObject: UObject, FunctionName: String): Boolean
        fun K2_IsTimerActiveHandle(WorldContextObject: UObject, Handle: TimerHandle): Boolean
        fun K2_IsTimerActive(UObject: UObject, FunctionName: String): Boolean
        fun K2_InvalidateTimerHandle(Handle: TimerHandle = definedExternally): `T$292`
        fun K2_GetTimerRemainingTimeHandle(WorldContextObject: UObject, Handle: TimerHandle): Number
        fun K2_GetTimerRemainingTime(UObject: UObject, FunctionName: String): Number
        fun K2_GetTimerElapsedTimeHandle(WorldContextObject: UObject, Handle: TimerHandle): Number
        fun K2_GetTimerElapsedTime(UObject: UObject, FunctionName: String): Number
        fun K2_ClearTimerHandle(WorldContextObject: UObject, Handle: TimerHandle)
        fun K2_ClearTimer(UObject: UObject, FunctionName: String)
        fun K2_ClearAndInvalidateTimerHandle(WorldContextObject: UObject, Handle: TimerHandle = definedExternally): `T$330`
        fun IsValidSoftObjectReference(SoftObjectReference: UObject): Boolean
        fun IsValidSoftClassReference(SoftClassReference: Class): Boolean
        fun IsValidPrimaryAssetType(PrimaryAssetType: PrimaryAssetType): Boolean
        fun IsValidPrimaryAssetId(PrimaryAssetId: PrimaryAssetId): Boolean
        fun IsValidClass(Class: UnrealEngineClass): Boolean
        fun IsValid(UObject: UObject): Boolean
        fun IsUnattended(): Boolean
        fun IsStandalone(WorldContextObject: UObject): Boolean
        fun IsSplitScreen(WorldContextObject: UObject): Boolean
        fun IsServer(WorldContextObject: UObject): Boolean
        fun IsScreensaverEnabled(): Boolean
        fun IsPackagedForDistribution(): Boolean
        fun IsLoggedIn(SpecificPlayer: PlayerController): Boolean
        fun IsInterstitialAdRequested(): Boolean
        fun IsInterstitialAdAvailable(): Boolean
        fun IsDedicatedServer(WorldContextObject: UObject): Boolean
        fun IsControllerAssignedToGamepad(ControllerId: Number): Boolean
        fun HideAdBanner()
        fun HasMultipleLocalPlayers(WorldContextObject: UObject): Boolean
        fun GetVolumeButtonsHandledBySystem(): Boolean
        fun GetUniqueDeviceId(): String
        fun GetSystemPath(UObject: UObject): String
        fun GetSupportedFullscreenResolutions(Resolutions: Array<IntPoint> = definedExternally): `T$730`
        fun GetSoftObjectReferenceFromPrimaryAssetId(PrimaryAssetId: PrimaryAssetId): UObject
        fun GetSoftClassReferenceFromPrimaryAssetId(PrimaryAssetId: PrimaryAssetId): Class
        fun GetRenderingMaterialQualityLevel(): Number
        fun GetRenderingDetailMode(): Number
        fun GetProjectSavedDirectory(): String
        fun GetProjectDirectory(): String
        fun GetProjectContentDirectory(): String
        fun GetPrimaryAssetsWithBundleState(RequiredBundles: Array<String>, ExcludedBundles: Array<String>, ValidTypes: Array<PrimaryAssetType>, bForceCurrentState: Boolean, OutPrimaryAssetIdList: Array<PrimaryAssetId> = definedExternally): `T$731`
        fun GetPrimaryAssetIdList(PrimaryAssetType: PrimaryAssetType, OutPrimaryAssetIdList: Array<PrimaryAssetId> = definedExternally): `T$732`
        fun GetPrimaryAssetIdFromSoftObjectReference(SoftObjectReference: UObject): PrimaryAssetId
        fun GetPrimaryAssetIdFromSoftClassReference(SoftClassReference: Class): PrimaryAssetId
        fun GetPrimaryAssetIdFromObject(UObject: UObject): PrimaryAssetId
        fun GetPrimaryAssetIdFromClass(Class: UnrealEngineClass): PrimaryAssetId
        fun GetPreferredLanguages(): Array<String>
        fun GetPlatformUserName(): String
        fun GetPlatformUserDir(): String
        fun GetPathName(UObject: UObject): String
        fun GetOuterObject(UObject: UObject): UObject
        fun GetObjectName(UObject: UObject): String
        fun GetObjectFromPrimaryAssetId(PrimaryAssetId: PrimaryAssetId): UObject
        fun GetMinYResolutionForUI(): Number
        fun GetMinYResolutionFor3DView(): Number
        fun GetLocalCurrencySymbol(): String
        fun GetLocalCurrencyCode(): String
        fun GetGameTimeInSeconds(WorldContextObject: UObject): Number
        fun GetGamepadControllerName(ControllerId: Number): String
        fun GetGamepadButtonGlyph(ButtonKey: String, ControllerIndex: Number): Texture2D
        fun GetGameName(): String
        fun GetGameBundleId(): String
        fun GetFrameCount(): Any
        fun GetEngineVersion(): String
        fun GetEditorProperty(UObject: UObject, PropertyName: String, PropertyValue: Number = definedExternally): `T$521`
        fun GetDisplayName(UObject: UObject): String
        fun GetDeviceId(): String
        fun GetDefaultLocale(): String
        fun GetDefaultLanguage(): String
        fun GetCurrentBundleState(PrimaryAssetId: PrimaryAssetId, bForceCurrentState: Boolean, OutBundles: Array<String> = definedExternally): `T$733`
        fun GetConvenientWindowedResolutions(Resolutions: Array<IntPoint> = definedExternally): `T$734`
        fun GetConsoleVariableIntValue(VariableName: String): Number
        fun GetConsoleVariableFloatValue(VariableName: String): Number
        fun GetConsoleVariableBoolValue(VariableName: String): Boolean
        fun GetComponentBounds(Component: SceneComponent, Origin: Vector = definedExternally, BoxExtent: Vector = definedExternally, SphereRadius: Number = definedExternally): `T$153`
        fun GetCommandLine(): String
        fun GetClassFromPrimaryAssetId(PrimaryAssetId: PrimaryAssetId): UnrealEngineClass
        fun GetClassDisplayName(Class: UnrealEngineClass): String
        fun GetBuildVersion(): String
        fun GetBuildConfiguration(): String
        fun GetAdIDCount(): Number
        fun GetActorListFromComponentList(ComponentList: Array<PrimitiveComponent>, ActorClassFilter: UnrealEngineClass, OutActorList: Array<Actor> = definedExternally): `T$735`
        fun GetActorBounds(Actor: Actor, Origin: Vector = definedExternally, BoxExtent: Vector = definedExternally): `T$514`
        fun ForceCloseAdBanner()
        fun FlushPersistentDebugLines(WorldContextObject: UObject)
        fun FlushDebugStrings(WorldContextObject: UObject)
        fun ExecuteConsoleCommand(WorldContextObject: UObject, Command: String, SpecificPlayer: PlayerController)
        fun EqualEqual_SoftObjectReference(A: UObject, B: UObject): Boolean
        fun EqualEqual_SoftClassReference(A: Class, B: Class): Boolean
        fun EqualEqual_PrimaryAssetType(A: PrimaryAssetType, B: PrimaryAssetType): Boolean
        fun EqualEqual_PrimaryAssetId(A: PrimaryAssetId, B: PrimaryAssetId): Boolean
        fun EndTransaction(): Number
        fun DrawDebugString(WorldContextObject: UObject, TextLocation: Vector, text: String, TestBaseActor: Actor, TextColor: LinearColor, Duration: Number)
        fun DrawDebugSphere(WorldContextObject: UObject, Center: Vector, Radius: Number, Segments: Number, LineColor: LinearColor, Duration: Number, Thickness: Number)
        fun DrawDebugPoint(WorldContextObject: UObject, position: Vector, Size: Number, PointColor: LinearColor, Duration: Number)
        fun DrawDebugPlane(WorldContextObject: UObject, PlaneCoordinates: Plane, Location: Vector, Size: Number, PlaneColor: LinearColor, Duration: Number)
        fun DrawDebugLine(WorldContextObject: UObject, LineStart: Vector, LineEnd: Vector, LineColor: LinearColor, Duration: Number, Thickness: Number)
        fun DrawDebugFrustum(WorldContextObject: UObject, FrustumTransform: Transform, FrustumColor: LinearColor, Duration: Number, Thickness: Number)
        fun DrawDebugFloatHistoryTransform(WorldContextObject: UObject, FloatHistory: DebugFloatHistory, DrawTransform: Transform, DrawSize: Vector2D, DrawColor: LinearColor, Duration: Number)
        fun DrawDebugFloatHistoryLocation(WorldContextObject: UObject, FloatHistory: DebugFloatHistory, DrawLocation: Vector, DrawSize: Vector2D, DrawColor: LinearColor, Duration: Number)
        fun DrawDebugCylinder(WorldContextObject: UObject, Start: Vector, End: Vector, Radius: Number, Segments: Number, LineColor: LinearColor, Duration: Number, Thickness: Number)
        fun DrawDebugCoordinateSystem(WorldContextObject: UObject, AxisLoc: Vector, AxisRot: Rotator, Scale: Number, Duration: Number, Thickness: Number)
        fun DrawDebugConeInDegrees(WorldContextObject: UObject, Origin: Vector, Direction: Vector, Length: Number, AngleWidth: Number, AngleHeight: Number, NumSides: Number, LineColor: LinearColor, Duration: Number, Thickness: Number)
        fun DrawDebugCone(WorldContextObject: UObject, Origin: Vector, Direction: Vector, Length: Number, AngleWidth: Number, AngleHeight: Number, NumSides: Number, LineColor: LinearColor, Duration: Number, Thickness: Number)
        fun DrawDebugCircle(WorldContextObject: UObject, Center: Vector, Radius: Number, NumSegments: Number, LineColor: LinearColor, Duration: Number, Thickness: Number, YAxis: Vector, ZAxis: Vector, bDrawAxis: Boolean)
        fun DrawDebugCapsule(WorldContextObject: UObject, Center: Vector, HalfHeight: Number, Radius: Number, Rotation: Rotator, LineColor: LinearColor, Duration: Number, Thickness: Number)
        fun DrawDebugCamera(CameraActor: CameraActor, CameraColor: LinearColor, Duration: Number)
        fun DrawDebugBox(WorldContextObject: UObject, Center: Vector, Extent: Vector, LineColor: LinearColor, Rotation: Rotator, Duration: Number, Thickness: Number)
        fun DrawDebugArrow(WorldContextObject: UObject, LineStart: Vector, LineEnd: Vector, ArrowSize: Number, LineColor: LinearColor, Duration: Number, Thickness: Number)
        fun DoesImplementInterface(TestObject: UObject, Interface: UnrealEngineClass): Boolean
        fun DelayUntilNextTick(WorldContextObject: UObject, LatentInfo: LatentActionInfo)
        fun Delay(WorldContextObject: UObject, Duration: Number, LatentInfo: LatentActionInfo)
        fun CreateCopyForUndoBuffer(ObjectToModify: UObject)
        fun ConvertToRelativePath(Filename: String): String
        fun ConvertToAbsolutePath(Filename: String): String
        fun Conv_SoftObjPathToSoftObjRef(SoftObjectPath: SoftObjectPath): UObject
        fun Conv_SoftObjectReferenceToString(SoftObjectReference: UObject): String
        fun Conv_SoftObjectReferenceToObject(softobject: UObject): UObject
        fun Conv_SoftClassReferenceToString(SoftClassReference: Class): String
        fun Conv_SoftClassReferenceToClass(softclass: Class): UnrealEngineClass
        fun Conv_SoftClassPathToSoftClassRef(SoftClassPath: SoftClassPath): Class
        fun Conv_PrimaryAssetTypeToString(PrimaryAssetType: PrimaryAssetType): String
        fun Conv_PrimaryAssetIdToString(PrimaryAssetId: PrimaryAssetId): String
        fun Conv_ObjectToSoftObjectReference(UObject: UObject): UObject
        fun Conv_ObjectToClass(UObject: UObject, Class: UnrealEngineClass): UnrealEngineClass
        fun Conv_ClassToSoftClassReference(Class: UnrealEngineClass): Class
        fun ControlScreensaver(bAllowScreenSaver: Boolean)
        fun ComponentOverlapComponents(Component: PrimitiveComponent, ComponentTransform: Transform, ObjectTypes: Array<String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */>, ComponentClassFilter: UnrealEngineClass, ActorsToIgnore: Array<Actor>, OutComponents: Array<PrimitiveComponent> = definedExternally): `T$736`
        fun ComponentOverlapActors(Component: PrimitiveComponent, ComponentTransform: Transform, ObjectTypes: Array<String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */>, ActorClassFilter: UnrealEngineClass, ActorsToIgnore: Array<Actor>, OutActors: Array<Actor> = definedExternally): `T$737`
        fun CollectGarbage()
        fun CapsuleTraceSingleForObjects(WorldContextObject: UObject, Start: Vector, End: Vector, Radius: Number, HalfHeight: Number, ObjectTypes: Array<String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */>, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHit: HitResult = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$53`
        fun CapsuleTraceSingleByProfile(WorldContextObject: UObject, Start: Vector, End: Vector, Radius: Number, HalfHeight: Number, ProfileName: String, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHit: HitResult = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$53`
        fun CapsuleTraceSingle(WorldContextObject: UObject, Start: Vector, End: Vector, Radius: Number, HalfHeight: Number, TraceChannel: String /* "TraceTypeQuery1" | "TraceTypeQuery2" | "TraceTypeQuery3" | "TraceTypeQuery4" | "TraceTypeQuery5" | "TraceTypeQuery6" | "TraceTypeQuery7" | "TraceTypeQuery8" | "TraceTypeQuery9" | "TraceTypeQuery10" | "TraceTypeQuery11" | "TraceTypeQuery12" | "TraceTypeQuery13" | "TraceTypeQuery14" | "TraceTypeQuery15" | "TraceTypeQuery16" | "TraceTypeQuery17" | "TraceTypeQuery18" | "TraceTypeQuery19" | "TraceTypeQuery20" | "TraceTypeQuery21" | "TraceTypeQuery22" | "TraceTypeQuery23" | "TraceTypeQuery24" | "TraceTypeQuery25" | "TraceTypeQuery26" | "TraceTypeQuery27" | "TraceTypeQuery28" | "TraceTypeQuery29" | "TraceTypeQuery30" | "TraceTypeQuery31" | "TraceTypeQuery32" | "TraceTypeQuery_MAX" | "ETraceTypeQuery_MAX" */, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHit: HitResult = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$53`
        fun CapsuleTraceMultiForObjects(WorldContextObject: UObject, Start: Vector, End: Vector, Radius: Number, HalfHeight: Number, ObjectTypes: Array<String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */>, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHits: Array<HitResult> = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$738`
        fun CapsuleTraceMultiByProfile(WorldContextObject: UObject, Start: Vector, End: Vector, Radius: Number, HalfHeight: Number, ProfileName: String, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHits: Array<HitResult> = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$739`
        fun CapsuleTraceMulti(WorldContextObject: UObject, Start: Vector, End: Vector, Radius: Number, HalfHeight: Number, TraceChannel: String /* "TraceTypeQuery1" | "TraceTypeQuery2" | "TraceTypeQuery3" | "TraceTypeQuery4" | "TraceTypeQuery5" | "TraceTypeQuery6" | "TraceTypeQuery7" | "TraceTypeQuery8" | "TraceTypeQuery9" | "TraceTypeQuery10" | "TraceTypeQuery11" | "TraceTypeQuery12" | "TraceTypeQuery13" | "TraceTypeQuery14" | "TraceTypeQuery15" | "TraceTypeQuery16" | "TraceTypeQuery17" | "TraceTypeQuery18" | "TraceTypeQuery19" | "TraceTypeQuery20" | "TraceTypeQuery21" | "TraceTypeQuery22" | "TraceTypeQuery23" | "TraceTypeQuery24" | "TraceTypeQuery25" | "TraceTypeQuery26" | "TraceTypeQuery27" | "TraceTypeQuery28" | "TraceTypeQuery29" | "TraceTypeQuery30" | "TraceTypeQuery31" | "TraceTypeQuery32" | "TraceTypeQuery_MAX" | "ETraceTypeQuery_MAX" */, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHits: Array<HitResult> = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$740`
        fun CapsuleOverlapComponents(WorldContextObject: UObject, CapsulePos: Vector, Radius: Number, HalfHeight: Number, ObjectTypes: Array<String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */>, ComponentClassFilter: UnrealEngineClass, ActorsToIgnore: Array<Actor>, OutComponents: Array<PrimitiveComponent> = definedExternally): `T$741`
        fun CapsuleOverlapActors(WorldContextObject: UObject, CapsulePos: Vector, Radius: Number, HalfHeight: Number, ObjectTypes: Array<String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */>, ActorClassFilter: UnrealEngineClass, ActorsToIgnore: Array<Actor>, OutActors: Array<Actor> = definedExternally): `T$742`
        fun CanLaunchURL(URL: String): Boolean
        fun CancelTransaction(index: Number)
        fun BreakSoftObjectPath(InSoftObjectPath: SoftObjectPath, PathString: String = definedExternally): `T$26`
        fun BreakSoftClassPath(InSoftClassPath: SoftClassPath, PathString: String = definedExternally): `T$26`
        fun BoxTraceSingleForObjects(WorldContextObject: UObject, Start: Vector, End: Vector, HalfSize: Vector, Orientation: Rotator, ObjectTypes: Array<String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */>, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHit: HitResult = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$53`
        fun BoxTraceSingleByProfile(WorldContextObject: UObject, Start: Vector, End: Vector, HalfSize: Vector, Orientation: Rotator, ProfileName: String, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHit: HitResult = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$53`
        fun BoxTraceSingle(WorldContextObject: UObject, Start: Vector, End: Vector, HalfSize: Vector, Orientation: Rotator, TraceChannel: String /* "TraceTypeQuery1" | "TraceTypeQuery2" | "TraceTypeQuery3" | "TraceTypeQuery4" | "TraceTypeQuery5" | "TraceTypeQuery6" | "TraceTypeQuery7" | "TraceTypeQuery8" | "TraceTypeQuery9" | "TraceTypeQuery10" | "TraceTypeQuery11" | "TraceTypeQuery12" | "TraceTypeQuery13" | "TraceTypeQuery14" | "TraceTypeQuery15" | "TraceTypeQuery16" | "TraceTypeQuery17" | "TraceTypeQuery18" | "TraceTypeQuery19" | "TraceTypeQuery20" | "TraceTypeQuery21" | "TraceTypeQuery22" | "TraceTypeQuery23" | "TraceTypeQuery24" | "TraceTypeQuery25" | "TraceTypeQuery26" | "TraceTypeQuery27" | "TraceTypeQuery28" | "TraceTypeQuery29" | "TraceTypeQuery30" | "TraceTypeQuery31" | "TraceTypeQuery32" | "TraceTypeQuery_MAX" | "ETraceTypeQuery_MAX" */, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHit: HitResult = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$53`
        fun BoxTraceMultiForObjects(WorldContextObject: UObject, Start: Vector, End: Vector, HalfSize: Vector, Orientation: Rotator, ObjectTypes: Array<String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */>, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHits: Array<HitResult> = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$743`
        fun BoxTraceMultiByProfile(WorldContextObject: UObject, Start: Vector, End: Vector, HalfSize: Vector, Orientation: Rotator, ProfileName: String, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHits: Array<HitResult> = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$744`
        fun BoxTraceMulti(WorldContextObject: UObject, Start: Vector, End: Vector, HalfSize: Vector, Orientation: Rotator, TraceChannel: String /* "TraceTypeQuery1" | "TraceTypeQuery2" | "TraceTypeQuery3" | "TraceTypeQuery4" | "TraceTypeQuery5" | "TraceTypeQuery6" | "TraceTypeQuery7" | "TraceTypeQuery8" | "TraceTypeQuery9" | "TraceTypeQuery10" | "TraceTypeQuery11" | "TraceTypeQuery12" | "TraceTypeQuery13" | "TraceTypeQuery14" | "TraceTypeQuery15" | "TraceTypeQuery16" | "TraceTypeQuery17" | "TraceTypeQuery18" | "TraceTypeQuery19" | "TraceTypeQuery20" | "TraceTypeQuery21" | "TraceTypeQuery22" | "TraceTypeQuery23" | "TraceTypeQuery24" | "TraceTypeQuery25" | "TraceTypeQuery26" | "TraceTypeQuery27" | "TraceTypeQuery28" | "TraceTypeQuery29" | "TraceTypeQuery30" | "TraceTypeQuery31" | "TraceTypeQuery32" | "TraceTypeQuery_MAX" | "ETraceTypeQuery_MAX" */, bTraceComplex: Boolean, ActorsToIgnore: Array<Actor>, DrawDebugType: String /* "None" | "ForOneFrame" | "ForDuration" | "Persistent" | "EDrawDebugTrace_MAX" */, OutHits: Array<HitResult> = definedExternally, bIgnoreSelf: Boolean = definedExternally, TraceColor: LinearColor = definedExternally, TraceHitColor: LinearColor = definedExternally, DrawTime: Number = definedExternally): `T$745`
        fun BoxOverlapComponents(WorldContextObject: UObject, BoxPos: Vector, Extent: Vector, ObjectTypes: Array<String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */>, ComponentClassFilter: UnrealEngineClass, ActorsToIgnore: Array<Actor>, OutComponents: Array<PrimitiveComponent> = definedExternally): `T$746`
        fun BoxOverlapActors(WorldContextObject: UObject, BoxPos: Vector, BoxExtent: Vector, ObjectTypes: Array<String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */>, ActorClassFilter: UnrealEngineClass, ActorsToIgnore: Array<Actor>, OutActors: Array<Actor> = definedExternally): `T$747`
        fun BeginTransaction(Context: String, Description: String, PrimaryObject: UObject): Number
        fun AddFloatHistorySample(Value: Number, FloatHistory: DebugFloatHistory): DebugFloatHistory
        fun C(Other: UObject): KismetSystemLibrary
        fun C(Other: Any): KismetSystemLibrary
    }
}

external interface `T$748` {
    var IsValid: Boolean
    var ErrorMessage: String
}

external open class PolyglotTextData {
    open var Category: String /* "Game" | "Engine" | "Editor" | "ELocalizedTextSourceCategory_MAX" */
    open var NativeCulture: String
    open var Namespace: String
    open var Key: String
    open var NativeString: String
    open var LocalizedStrings: Any
    open var bIsMinimalPatch: Boolean
    open var CachedText: String
    open fun clone(): PolyglotTextData
    open fun IsPolyglotDataValid(IsValid: Boolean = definedExternally, ErrorMessage: String = definedExternally): `T$748`
    open fun PolyglotDataToText(): String

    companion object {
        fun C(Other: UObject): PolyglotTextData
        fun C(Other: Any): PolyglotTextData
        fun IsPolyglotDataValid(PolyglotData: PolyglotTextData, IsValid: Boolean = definedExternally, ErrorMessage: String = definedExternally): `T$748`
        fun PolyglotDataToText(PolyglotData: PolyglotTextData): String
    }
}

external object EFormatArgumentType {
    var Int: String /* "Int" */
    var UInt: String /* "UInt" */
    var Float: String /* "Float" */
    var Double: String /* "Double" */
    var Text: String /* "Text" */
    var Gender: String /* "Gender" */
    var EFormatArgumentType_MAX: String /* "EFormatArgumentType_MAX" */
}

external object ETextGender {
    var Masculine: String /* "Masculine" */
    var Feminine: String /* "Feminine" */
    var Neuter: String /* "Neuter" */
    var ETextGender_MAX: String /* "ETextGender_MAX" */
}

external open class FormatArgumentData {
    open var ArgumentName: String
    open var ArgumentValueType: String /* "Int" | "UInt" | "Float" | "Double" | "Text" | "Gender" | "EFormatArgumentType_MAX" */
    open var ArgumentValue: String
    open var ArgumentValueInt: Any
    open var ArgumentValueFloat: Number
    open var ArgumentValueDouble: Any
    open var ArgumentValueGender: String /* "Masculine" | "Feminine" | "Neuter" | "ETextGender_MAX" */
    open fun clone(): FormatArgumentData

    companion object {
        fun C(Other: UObject): FormatArgumentData
        fun C(Other: Any): FormatArgumentData
    }
}

external object ERoundingMode {
    var HalfToEven: String /* "HalfToEven" */
    var HalfFromZero: String /* "HalfFromZero" */
    var HalfToZero: String /* "HalfToZero" */
    var FromZero: String /* "FromZero" */
    var ToZero: String /* "ToZero" */
    var ToNegativeInfinity: String /* "ToNegativeInfinity" */
    var ToPositiveInfinity: String /* "ToPositiveInfinity" */
    var ERoundingMode_MAX: String /* "ERoundingMode_MAX" */
}

external interface `T$749` {
    var OutTableId: String
    var OutKey: String
    var `$`: Boolean
}

external interface `T$750` {
    var OutText: String
    var `$`: Boolean
}

external open class KismetTextLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): KismetTextLibrary
        fun Find(Outer: UObject, ResourceName: String): KismetTextLibrary
        fun GetDefaultObject(): KismetTextLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): KismetTextLibrary
        fun TextTrimTrailing(InText: String): String
        fun TextTrimPrecedingAndTrailing(InText: String): String
        fun TextTrimPreceding(InText: String): String
        fun TextToUpper(InText: String): String
        fun TextToLower(InText: String): String
        fun TextIsTransient(InText: String): Boolean
        fun IsTextfromStringTable(text: String): Boolean
        fun TextIsEmpty(InText: String): Boolean
        fun TextIsCultureInvariant(InText: String): Boolean
        fun MakeTextfromStringTable(TableId: String, Key: String): String
        fun FindStringTableIDandKeyfromText(text: String, OutTableId: String = definedExternally, OutKey: String = definedExternally): `T$749`
        fun PolyglotDataToText(PolyglotData: PolyglotTextData): String
        fun NotEqualExactly(A: String, B: String): Boolean
        fun NotEqual_IgnoreCase_TextText(A: String, B: String): Boolean
        fun IsPolyglotDataValid(PolyglotData: PolyglotTextData, IsValid: Boolean = definedExternally, ErrorMessage: String = definedExternally): `T$748`
        fun GetEmptyText(): String
        fun Format(InPattern: String, InArgs: Array<FormatArgumentData>): String
        fun FindTextInLocalizationTable(Namespace: String, Key: String, OutText: String = definedExternally): `T$750`
        fun EqualExactly(A: String, B: String): Boolean
        fun EqualEqual_IgnoreCase_TextText(A: String, B: String): Boolean
        fun Conv_VectorToText(InVec: Vector): String
        fun Conv_Vector2dToText(InVec: Vector2D): String
        fun Conv_TransformToText(InTrans: Transform): String
        fun ToString(InText: String): String
        fun ToText(InString: String): String
        fun Conv_RotatorToText(InRot: Rotator): String
        fun Conv_ObjectToText(InObj: UObject): String
        fun ToText(InName: String): String
        fun ToText(Value: Number, bAlwaysSign: Boolean, bUseGrouping: Boolean, MinimumIntegralDigits: Number, MaximumIntegralDigits: Number): String
        fun ToText(Value: Any, bAlwaysSign: Boolean, bUseGrouping: Boolean, MinimumIntegralDigits: Number, MaximumIntegralDigits: Number): String
        fun ToText(Value: Number, RoundingMode: String /* "HalfToEven" | "HalfFromZero" | "HalfToZero" | "FromZero" | "ToZero" | "ToNegativeInfinity" | "ToPositiveInfinity" | "ERoundingMode_MAX" */, bAlwaysSign: Boolean, bUseGrouping: Boolean, MinimumIntegralDigits: Number, MaximumIntegralDigits: Number, MinimumFractionalDigits: Number, MaximumFractionalDigits: Number): String
        fun ToText(InDouble: Any, RoundingMode: String /* "HalfToEven" | "HalfFromZero" | "HalfToZero" | "FromZero" | "ToZero" | "ToNegativeInfinity" | "ToPositiveInfinity" | "ERoundingMode_MAX" */, bAlwaysSign: Boolean, bUseGrouping: Boolean, MinimumIntegralDigits: Number, MaximumIntegralDigits: Number, MinimumFractionalDigits: Number, MaximumFractionalDigits: Number): String
        fun Conv_ColorToText(InColor: LinearColor): String
        fun ToText(Value: Number): String
        fun ToText(InBool: Boolean): String
        fun AsTimeZoneTime_DateTime(InDateTime: DateTime, InTimeZone: String): String
        fun AsTimeZoneDateTime_DateTime(InDateTime: DateTime, InTimeZone: String): String
        fun AsTimeZoneDate_DateTime(InDateTime: DateTime, InTimeZone: String): String
        fun AsTimespan_Timespan(InTimespan: Timespan): String
        fun AsTime_DateTime(In: DateTime): String
        fun AsPercent(Value: Number, RoundingMode: String /* "HalfToEven" | "HalfFromZero" | "HalfToZero" | "FromZero" | "ToZero" | "ToNegativeInfinity" | "ToPositiveInfinity" | "ERoundingMode_MAX" */, bAlwaysSign: Boolean, bUseGrouping: Boolean, MinimumIntegralDigits: Number, MaximumIntegralDigits: Number, MinimumFractionalDigits: Number, MaximumFractionalDigits: Number): String
        fun AsDateTime_DateTime(In: DateTime): String
        fun AsDate_DateTime(InDateTime: DateTime): String
        fun AsCurrency(BaseValue: Number, CurrencyCode: String): String
        fun AsCurrency(Value: Number, RoundingMode: String /* "HalfToEven" | "HalfFromZero" | "HalfToZero" | "FromZero" | "ToZero" | "ToNegativeInfinity" | "ToPositiveInfinity" | "ERoundingMode_MAX" */, bAlwaysSign: Boolean, bUseGrouping: Boolean, MinimumIntegralDigits: Number, MaximumIntegralDigits: Number, MinimumFractionalDigits: Number, MaximumFractionalDigits: Number, CurrencyCode: String): String
        fun C(Other: UObject): KismetTextLibrary
        fun C(Other: Any): KismetTextLibrary
    }
}

external open class LevelPartitionInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LevelPartitionInterface
        fun Find(Outer: UObject, ResourceName: String): LevelPartitionInterface
        fun GetDefaultObject(): LevelPartitionInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelPartitionInterface
        fun C(Other: UObject): LevelPartitionInterface
        fun C(Other: Any): LevelPartitionInterface
    }
}

external open class ActorContainer : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Actors: Any

    companion object {
        fun Load(ResourceName: String): ActorContainer
        fun Find(Outer: UObject, ResourceName: String): ActorContainer
        fun GetDefaultObject(): ActorContainer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorContainer
        fun C(Other: UObject): ActorContainer
        fun C(Other: Any): ActorContainer
    }
}

external open class LevelBounds(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var BoxComponent: BoxComponent
    open var bAutoUpdateBounds: Boolean

    companion object {
        fun GetDefaultObject(): LevelBounds
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelBounds
        fun C(Other: UObject): LevelBounds
        fun C(Other: Any): LevelBounds
    }
}

external object ELevelInstanceRuntimeBehavior {
    var None: String /* "None" */
    var Embedded_Deprecated: String /* "Embedded_Deprecated" */
    var Partitioned: String /* "Partitioned" */
    var LevelStreaming: String /* "LevelStreaming" */
    var ELevelInstanceRuntimeBehavior_MAX: String /* "ELevelInstanceRuntimeBehavior_MAX" */
}

external open class LevelInstance(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var WorldAsset: World
    open var CookedWorldAsset: World
    open var DesiredRuntimeBehavior: String /* "None" | "Embedded_Deprecated" | "Partitioned" | "LevelStreaming" | "ELevelInstanceRuntimeBehavior_MAX" */

    companion object {
        fun GetDefaultObject(): LevelInstance
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelInstance
        fun C(Other: UObject): LevelInstance
        fun C(Other: Any): LevelInstance
    }
}

external open class LevelInstanceComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LevelInstanceComponent
        fun Find(Outer: UObject, ResourceName: String): LevelInstanceComponent
        fun GetDefaultObject(): LevelInstanceComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelInstanceComponent
        fun C(Other: UObject): LevelInstanceComponent
        fun C(Other: Any): LevelInstanceComponent
    }
}

external open class LevelInstanceEditorInstanceActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    companion object {
        fun GetDefaultObject(): LevelInstanceEditorInstanceActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelInstanceEditorInstanceActor
        fun C(Other: UObject): LevelInstanceEditorInstanceActor
        fun C(Other: Any): LevelInstanceEditorInstanceActor
    }
}

external open class LevelStreamingAlwaysLoaded : LevelStreaming {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LevelStreamingAlwaysLoaded
        fun Find(Outer: UObject, ResourceName: String): LevelStreamingAlwaysLoaded
        fun GetDefaultObject(): LevelStreamingAlwaysLoaded
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelStreamingAlwaysLoaded
        fun C(Other: UObject): LevelStreamingAlwaysLoaded
        fun C(Other: Any): LevelStreamingAlwaysLoaded
    }
}

external open class LevelStreamingLevelInstanceEditor : LevelStreamingAlwaysLoaded {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LevelStreamingLevelInstanceEditor
        fun Find(Outer: UObject, ResourceName: String): LevelStreamingLevelInstanceEditor
        fun GetDefaultObject(): LevelStreamingLevelInstanceEditor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelStreamingLevelInstanceEditor
        fun C(Other: UObject): LevelStreamingLevelInstanceEditor
        fun C(Other: Any): LevelStreamingLevelInstanceEditor
    }
}

external open class LevelInstanceEditorObject : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bMovedActors: Boolean
    open var OtherPackagesToSave: Array<Any>

    companion object {
        fun Load(ResourceName: String): LevelInstanceEditorObject
        fun Find(Outer: UObject, ResourceName: String): LevelInstanceEditorObject
        fun GetDefaultObject(): LevelInstanceEditorObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelInstanceEditorObject
        fun C(Other: UObject): LevelInstanceEditorObject
        fun C(Other: Any): LevelInstanceEditorObject
    }
}

external open class LevelInstancePivot(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    companion object {
        fun GetDefaultObject(): LevelInstancePivot
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelInstancePivot
        fun C(Other: UObject): LevelInstancePivot
        fun C(Other: Any): LevelInstancePivot
    }
}

external interface `T$751` {
    var bOutSuccess: Boolean
    var `$`: LevelStreamingDynamic
}

external open class LevelStreamingDynamic : LevelStreaming {
    constructor()
    constructor(Outer: UObject)
    open var bInitiallyLoaded: Boolean
    open var bInitiallyVisible: Boolean

    companion object {
        fun Load(ResourceName: String): LevelStreamingDynamic
        fun Find(Outer: UObject, ResourceName: String): LevelStreamingDynamic
        fun GetDefaultObject(): LevelStreamingDynamic
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelStreamingDynamic
        fun LoadLevelInstance(WorldContextObject: UObject, Level: World, Location: Vector, Rotation: Rotator, bOutSuccess: Boolean = definedExternally, OptionalLevelNameOverride: String = definedExternally, OptionalLevelStreamingClass: UnrealEngineClass = definedExternally, bLoadAsTempPackage: Boolean = definedExternally): `T$751`
        fun LoadLevelInstance(WorldContextObject: UObject, LevelName: String, Location: Vector, Rotation: Rotator, bOutSuccess: Boolean = definedExternally, OptionalLevelNameOverride: String = definedExternally, OptionalLevelStreamingClass: UnrealEngineClass = definedExternally, bLoadAsTempPackage: Boolean = definedExternally): `T$751`
        fun C(Other: UObject): LevelStreamingDynamic
        fun C(Other: Any): LevelStreamingDynamic
    }
}

external open class LevelStreamingLevelInstance : LevelStreamingDynamic {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LevelStreamingLevelInstance
        fun Find(Outer: UObject, ResourceName: String): LevelStreamingLevelInstance
        fun GetDefaultObject(): LevelStreamingLevelInstance
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelStreamingLevelInstance
        fun C(Other: UObject): LevelStreamingLevelInstance
        fun C(Other: Any): LevelStreamingLevelInstance
    }
}

external open class LevelInstanceSubsystem : WorldSubsystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LevelInstanceSubsystem
        fun Find(Outer: UObject, ResourceName: String): LevelInstanceSubsystem
        fun GetDefaultObject(): LevelInstanceSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelInstanceSubsystem
        fun C(Other: UObject): LevelInstanceSubsystem
        fun C(Other: Any): LevelInstanceSubsystem
    }
}

external open class LevelStreamingPersistent : LevelStreaming {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LevelStreamingPersistent
        fun Find(Outer: UObject, ResourceName: String): LevelStreamingPersistent
        fun GetDefaultObject(): LevelStreamingPersistent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelStreamingPersistent
        fun C(Other: UObject): LevelStreamingPersistent
        fun C(Other: Any): LevelStreamingPersistent
    }
}

external open class LightmappedSurfaceCollection : UObject {
    constructor()
    constructor(Outer: UObject)
    open var SourceModel: Model
    open var Surfaces: Array<Number>

    companion object {
        fun Load(ResourceName: String): LightmappedSurfaceCollection
        fun Find(Outer: UObject, ResourceName: String): LightmappedSurfaceCollection
        fun GetDefaultObject(): LightmappedSurfaceCollection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LightmappedSurfaceCollection
        fun C(Other: UObject): LightmappedSurfaceCollection
        fun C(Other: Any): LightmappedSurfaceCollection
    }
}

external open class LightMapTexture2D : Texture2D {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LightMapTexture2D
        fun Find(Outer: UObject, ResourceName: String): LightMapTexture2D
        fun GetDefaultObject(): LightMapTexture2D
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LightMapTexture2D
        fun C(Other: UObject): LightMapTexture2D
        fun C(Other: Any): LightMapTexture2D
    }
}

external open class LightMapVirtualTexture2D : Texture2D {
    constructor()
    constructor(Outer: UObject)
    open var TypeToLayer: Array<Any>

    companion object {
        fun Load(ResourceName: String): LightMapVirtualTexture2D
        fun Find(Outer: UObject, ResourceName: String): LightMapVirtualTexture2D
        fun GetDefaultObject(): LightMapVirtualTexture2D
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LightMapVirtualTexture2D
        fun C(Other: UObject): LightMapVirtualTexture2D
        fun C(Other: Any): LightMapVirtualTexture2D
    }
}

external open class LightmassCharacterIndirectDetailVolume(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Volume {
    companion object {
        fun GetDefaultObject(): LightmassCharacterIndirectDetailVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LightmassCharacterIndirectDetailVolume
        fun C(Other: UObject): LightmassCharacterIndirectDetailVolume
        fun C(Other: Any): LightmassCharacterIndirectDetailVolume
    }
}

external open class LightmassImportanceVolume(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Volume {
    companion object {
        fun GetDefaultObject(): LightmassImportanceVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LightmassImportanceVolume
        fun C(Other: UObject): LightmassImportanceVolume
        fun C(Other: Any): LightmassImportanceVolume
    }
}

external open class LightmassPortalComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var PreviewBox: BoxComponent

    companion object {
        fun Load(ResourceName: String): LightmassPortalComponent
        fun Find(Outer: UObject, ResourceName: String): LightmassPortalComponent
        fun GetDefaultObject(): LightmassPortalComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LightmassPortalComponent
        fun C(Other: UObject): LightmassPortalComponent
        fun C(Other: Any): LightmassPortalComponent
    }
}

external open class LightmassPortal(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var PortalComponent: LightmassPortalComponent
    open var SpriteComponent: BillboardComponent

    companion object {
        fun GetDefaultObject(): LightmassPortal
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LightmassPortal
        fun C(Other: UObject): LightmassPortal
        fun C(Other: Any): LightmassPortal
    }
}

external open class LightmassPrimitiveSettingsObject : UObject {
    constructor()
    constructor(Outer: UObject)
    open var LightmassSettings: LightmassPrimitiveSettings

    companion object {
        fun Load(ResourceName: String): LightmassPrimitiveSettingsObject
        fun Find(Outer: UObject, ResourceName: String): LightmassPrimitiveSettingsObject
        fun GetDefaultObject(): LightmassPrimitiveSettingsObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LightmassPrimitiveSettingsObject
        fun C(Other: UObject): LightmassPrimitiveSettingsObject
        fun C(Other: Any): LightmassPrimitiveSettingsObject
    }
}

external open class LightWeightInstanceBlueprintFunctionLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LightWeightInstanceBlueprintFunctionLibrary
        fun Find(Outer: UObject, ResourceName: String): LightWeightInstanceBlueprintFunctionLibrary
        fun GetDefaultObject(): LightWeightInstanceBlueprintFunctionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LightWeightInstanceBlueprintFunctionLibrary
        fun CreateNewLightWeightInstance(ActorClass: UnrealEngineClass, Transform: Transform, Layer: DataLayer, World: World): ActorInstanceHandle
        fun ConvertActorToLightWeightInstance(Actor: Actor): ActorInstanceHandle
        fun C(Other: UObject): LightWeightInstanceBlueprintFunctionLibrary
        fun C(Other: Any): LightWeightInstanceBlueprintFunctionLibrary
    }
}

external open class ActorInstanceHandleInterface : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorInstanceHandleInterface
        fun Find(Outer: UObject, ResourceName: String): ActorInstanceHandleInterface
        fun GetDefaultObject(): ActorInstanceHandleInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorInstanceHandleInterface
        fun C(Other: UObject): ActorInstanceHandleInterface
        fun C(Other: Any): ActorInstanceHandleInterface
    }
}

external open class LightWeightInstanceManager(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var RepresentedClass: UnrealEngineClass
    open var AcceptedClass: UnrealEngineClass
    open var InstanceTransforms: Array<Transform>
    open var FreeIndices: Array<Number>
    open var ValidIndices: Array<Boolean>
    open fun OnRep_Transforms()

    companion object {
        fun GetDefaultObject(): LightWeightInstanceManager
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LightWeightInstanceManager
        fun C(Other: UObject): LightWeightInstanceManager
        fun C(Other: Any): LightWeightInstanceManager
    }
}

external open class LightWeightInstanceStaticMeshManager(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : LightWeightInstanceManager {
    open var StaticMesh: StaticMesh
    open var InstancedStaticMeshComponent: HierarchicalInstancedStaticMeshComponent
    open var RenderingIndicesToDataIndices: Array<Number>
    open var DataIndicesToRenderingIndices: Array<Number>
    open fun OnRep_StaticMesh()

    companion object {
        fun GetDefaultObject(): LightWeightInstanceStaticMeshManager
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LightWeightInstanceStaticMeshManager
        fun C(Other: UObject): LightWeightInstanceStaticMeshManager
        fun C(Other: Any): LightWeightInstanceStaticMeshManager
    }
}

external open class LODActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var StaticMeshComponent: StaticMeshComponent
    open var InstancedStaticMeshComponents: Any
    open var Proxy: HLODProxy
    open var Key: String
    open var LODDrawDistance: Number
    open var LODLevel: Number
    open var SubActors: Array<Actor>
    open var CachedNumHLODLevels: Number
    open var NumTrianglesInSubActors: Any
    open var NumTrianglesInMergedMesh: Any
    open var bOverrideMaterialMergeSettings: Boolean
    open var MaterialSettings: MaterialProxySettings
    open var bOverrideTransitionScreenSize: Boolean
    open var TransitionScreenSize: Number
    open var bOverrideScreenSize: Boolean
    open var ScreenSize: Number
    open var LODActorTag: String
    open var bBuiltFromHLODDesc: Boolean
    open var ProxyDesc: HLODProxyDesc

    companion object {
        fun GetDefaultObject(): LODActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LODActor
        fun C(Other: UObject): LODActor
        fun C(Other: Any): LODActor
    }
}

external object ESyncOption {
    var Drive: String /* "Drive" */
    var Passive: String /* "Passive" */
    var Disabled: String /* "Disabled" */
    var ESyncOption_MAX: String /* "ESyncOption_MAX" */
}

external open class ComponentSync {
    open var Name: String
    open var SyncOption: String /* "Drive" | "Passive" | "Disabled" | "ESyncOption_MAX" */
    open fun clone(): ComponentSync

    companion object {
        fun C(Other: UObject): ComponentSync
        fun C(Other: Any): ComponentSync
    }
}

external open class LODSyncComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var NumLODs: Number
    open var ForcedLOD: Number
    open var MinLOD: Number
    open var ComponentsToSync: Array<ComponentSync>
    open var CustomLODMapping: Any
    open var CurrentLOD: Number
    open var CurrentNumLODs: Number
    open var DriveComponents: Array<PrimitiveComponent>
    open var SubComponents: Array<PrimitiveComponent>
    open fun GetLODSyncDebugText(): String

    companion object {
        fun Load(ResourceName: String): LODSyncComponent
        fun Find(Outer: UObject, ResourceName: String): LODSyncComponent
        fun GetDefaultObject(): LODSyncComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LODSyncComponent
        fun C(Other: UObject): LODSyncComponent
        fun C(Other: Any): LODSyncComponent
    }
}

external open class LODSyncInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LODSyncInterface
        fun Find(Outer: UObject, ResourceName: String): LODSyncInterface
        fun GetDefaultObject(): LODSyncInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LODSyncInterface
        fun C(Other: UObject): LODSyncInterface
        fun C(Other: Any): LODSyncInterface
    }
}

external open class MaterialExpressionAbs : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionAbs
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionAbs
        fun GetDefaultObject(): MaterialExpressionAbs
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionAbs
        fun C(Other: UObject): MaterialExpressionAbs
        fun C(Other: Any): MaterialExpressionAbs
    }
}

external open class MaterialExpressionAbsorptionMediumMaterialOutput : MaterialExpressionCustomOutput {
    constructor()
    constructor(Outer: UObject)
    open var TransmittanceColor: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionAbsorptionMediumMaterialOutput
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionAbsorptionMediumMaterialOutput
        fun GetDefaultObject(): MaterialExpressionAbsorptionMediumMaterialOutput
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionAbsorptionMediumMaterialOutput
        fun C(Other: UObject): MaterialExpressionAbsorptionMediumMaterialOutput
        fun C(Other: Any): MaterialExpressionAbsorptionMediumMaterialOutput
    }
}

external open class MaterialExpressionActorPositionWS : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionActorPositionWS
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionActorPositionWS
        fun GetDefaultObject(): MaterialExpressionActorPositionWS
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionActorPositionWS
        fun C(Other: UObject): MaterialExpressionActorPositionWS
        fun C(Other: Any): MaterialExpressionActorPositionWS
    }
}

external open class MaterialExpressionAdd : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var A: ExpressionInput
    open var B: ExpressionInput
    open var ConstA: Number
    open var ConstB: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionAdd
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionAdd
        fun GetDefaultObject(): MaterialExpressionAdd
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionAdd
        fun C(Other: UObject): MaterialExpressionAdd
        fun C(Other: Any): MaterialExpressionAdd
    }
}

external object EMaterialSamplerType {
    var SAMPLERTYPE_Color: String /* "SAMPLERTYPE_Color" */
    var SAMPLERTYPE_Grayscale: String /* "SAMPLERTYPE_Grayscale" */
    var SAMPLERTYPE_Alpha: String /* "SAMPLERTYPE_Alpha" */
    var SAMPLERTYPE_Normal: String /* "SAMPLERTYPE_Normal" */
    var SAMPLERTYPE_Masks: String /* "SAMPLERTYPE_Masks" */
    var SAMPLERTYPE_DistanceFieldFont: String /* "SAMPLERTYPE_DistanceFieldFont" */
    var SAMPLERTYPE_LinearColor: String /* "SAMPLERTYPE_LinearColor" */
    var SAMPLERTYPE_LinearGrayscale: String /* "SAMPLERTYPE_LinearGrayscale" */
    var SAMPLERTYPE_Data: String /* "SAMPLERTYPE_Data" */
    var SAMPLERTYPE_External: String /* "SAMPLERTYPE_External" */
    var SAMPLERTYPE_VirtualColor: String /* "SAMPLERTYPE_VirtualColor" */
    var SAMPLERTYPE_VirtualGrayscale: String /* "SAMPLERTYPE_VirtualGrayscale" */
    var SAMPLERTYPE_VirtualAlpha: String /* "SAMPLERTYPE_VirtualAlpha" */
    var SAMPLERTYPE_VirtualNormal: String /* "SAMPLERTYPE_VirtualNormal" */
    var SAMPLERTYPE_VirtualMasks: String /* "SAMPLERTYPE_VirtualMasks" */
    var SAMPLERTYPE_VirtualLinearColor: String /* "SAMPLERTYPE_VirtualLinearColor" */
    var SAMPLERTYPE_VirtualLinearGrayscale: String /* "SAMPLERTYPE_VirtualLinearGrayscale" */
    var SAMPLERTYPE_MAX: String /* "SAMPLERTYPE_MAX" */
}

external open class MaterialExpressionTextureBase : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Texture: Texture
    open var SamplerType: String /* "SAMPLERTYPE_Color" | "SAMPLERTYPE_Grayscale" | "SAMPLERTYPE_Alpha" | "SAMPLERTYPE_Normal" | "SAMPLERTYPE_Masks" | "SAMPLERTYPE_DistanceFieldFont" | "SAMPLERTYPE_LinearColor" | "SAMPLERTYPE_LinearGrayscale" | "SAMPLERTYPE_Data" | "SAMPLERTYPE_External" | "SAMPLERTYPE_VirtualColor" | "SAMPLERTYPE_VirtualGrayscale" | "SAMPLERTYPE_VirtualAlpha" | "SAMPLERTYPE_VirtualNormal" | "SAMPLERTYPE_VirtualMasks" | "SAMPLERTYPE_VirtualLinearColor" | "SAMPLERTYPE_VirtualLinearGrayscale" | "SAMPLERTYPE_MAX" */
    open var IsDefaultMeshpaintTexture: Boolean

    companion object {
        fun Load(ResourceName: String): MaterialExpressionTextureBase
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionTextureBase
        fun GetDefaultObject(): MaterialExpressionTextureBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionTextureBase
        fun C(Other: UObject): MaterialExpressionTextureBase
        fun C(Other: Any): MaterialExpressionTextureBase
    }
}

external object ETextureMipValueMode {
    var TMVM_None: String /* "TMVM_None" */
    var TMVM_MipLevel: String /* "TMVM_MipLevel" */
    var TMVM_MipBias: String /* "TMVM_MipBias" */
    var TMVM_Derivative: String /* "TMVM_Derivative" */
    var TMVM_MAX: String /* "TMVM_MAX" */
}

external object ESamplerSourceMode {
    var SSM_FromTextureAsset: String /* "SSM_FromTextureAsset" */
    var SSM_Wrap_WorldGroupSettings: String /* "SSM_Wrap_WorldGroupSettings" */
    var SSM_Clamp_WorldGroupSettings: String /* "SSM_Clamp_WorldGroupSettings" */
    var SSM_MAX: String /* "SSM_MAX" */
}

external open class MaterialExpressionTextureSample : MaterialExpressionTextureBase {
    constructor()
    constructor(Outer: UObject)
    open var Coordinates: ExpressionInput
    open var TextureObject: ExpressionInput
    open var MipValue: ExpressionInput
    open var CoordinatesDX: ExpressionInput
    open var CoordinatesDY: ExpressionInput
    open var AutomaticViewMipBiasValue: ExpressionInput
    open var MipValueMode: String /* "TMVM_None" | "TMVM_MipLevel" | "TMVM_MipBias" | "TMVM_Derivative" | "TMVM_MAX" */
    open var SamplerSource: String /* "SSM_FromTextureAsset" | "SSM_Wrap_WorldGroupSettings" | "SSM_Clamp_WorldGroupSettings" | "SSM_MAX" */
    open var AutomaticViewMipBias: Boolean
    open var ConstCoordinate: Number
    open var ConstMipValue: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionTextureSample
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionTextureSample
        fun GetDefaultObject(): MaterialExpressionTextureSample
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionTextureSample
        fun C(Other: UObject): MaterialExpressionTextureSample
        fun C(Other: Any): MaterialExpressionTextureSample
    }
}

external open class MaterialExpressionTextureSampleParameter : MaterialExpressionTextureSample {
    constructor()
    constructor(Outer: UObject)
    open var ParameterName: String
    open var ExpressionGUID: Guid
    open var Group: String
    open var SortPriority: Number
    open var ChannelNames: ParameterChannelNames

    companion object {
        fun Load(ResourceName: String): MaterialExpressionTextureSampleParameter
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionTextureSampleParameter
        fun GetDefaultObject(): MaterialExpressionTextureSampleParameter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionTextureSampleParameter
        fun C(Other: UObject): MaterialExpressionTextureSampleParameter
        fun C(Other: Any): MaterialExpressionTextureSampleParameter
    }
}

external open class MaterialExpressionTextureSampleParameter2D : MaterialExpressionTextureSampleParameter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionTextureSampleParameter2D
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionTextureSampleParameter2D
        fun GetDefaultObject(): MaterialExpressionTextureSampleParameter2D
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionTextureSampleParameter2D
        fun C(Other: UObject): MaterialExpressionTextureSampleParameter2D
        fun C(Other: Any): MaterialExpressionTextureSampleParameter2D
    }
}

external object ETextureColorChannel {
    var TCC_Red: String /* "TCC_Red" */
    var TCC_Green: String /* "TCC_Green" */
    var TCC_Blue: String /* "TCC_Blue" */
    var TCC_Alpha: String /* "TCC_Alpha" */
    var TCC_MAX: String /* "TCC_MAX" */
}

external open class MaterialExpressionAntialiasedTextureMask : MaterialExpressionTextureSampleParameter2D {
    constructor()
    constructor(Outer: UObject)
    open var Threshold: Number
    open var Channel: String /* "TCC_Red" | "TCC_Green" | "TCC_Blue" | "TCC_Alpha" | "TCC_MAX" */

    companion object {
        fun Load(ResourceName: String): MaterialExpressionAntialiasedTextureMask
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionAntialiasedTextureMask
        fun GetDefaultObject(): MaterialExpressionAntialiasedTextureMask
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionAntialiasedTextureMask
        fun C(Other: UObject): MaterialExpressionAntialiasedTextureMask
        fun C(Other: Any): MaterialExpressionAntialiasedTextureMask
    }
}

external open class MaterialExpressionAppendVector : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var A: ExpressionInput
    open var B: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionAppendVector
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionAppendVector
        fun GetDefaultObject(): MaterialExpressionAppendVector
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionAppendVector
        fun C(Other: UObject): MaterialExpressionAppendVector
        fun C(Other: Any): MaterialExpressionAppendVector
    }
}

external open class MaterialExpressionArccosine : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionArccosine
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionArccosine
        fun GetDefaultObject(): MaterialExpressionArccosine
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionArccosine
        fun C(Other: UObject): MaterialExpressionArccosine
        fun C(Other: Any): MaterialExpressionArccosine
    }
}

external open class MaterialExpressionArccosineFast : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionArccosineFast
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionArccosineFast
        fun GetDefaultObject(): MaterialExpressionArccosineFast
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionArccosineFast
        fun C(Other: UObject): MaterialExpressionArccosineFast
        fun C(Other: Any): MaterialExpressionArccosineFast
    }
}

external open class MaterialExpressionArcsine : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionArcsine
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionArcsine
        fun GetDefaultObject(): MaterialExpressionArcsine
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionArcsine
        fun C(Other: UObject): MaterialExpressionArcsine
        fun C(Other: Any): MaterialExpressionArcsine
    }
}

external open class MaterialExpressionArcsineFast : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionArcsineFast
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionArcsineFast
        fun GetDefaultObject(): MaterialExpressionArcsineFast
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionArcsineFast
        fun C(Other: UObject): MaterialExpressionArcsineFast
        fun C(Other: Any): MaterialExpressionArcsineFast
    }
}

external open class MaterialExpressionArctangent : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionArctangent
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionArctangent
        fun GetDefaultObject(): MaterialExpressionArctangent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionArctangent
        fun C(Other: UObject): MaterialExpressionArctangent
        fun C(Other: Any): MaterialExpressionArctangent
    }
}

external open class MaterialExpressionArctangent2 : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Y: ExpressionInput
    open var X: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionArctangent2
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionArctangent2
        fun GetDefaultObject(): MaterialExpressionArctangent2
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionArctangent2
        fun C(Other: UObject): MaterialExpressionArctangent2
        fun C(Other: Any): MaterialExpressionArctangent2
    }
}

external open class MaterialExpressionArctangent2Fast : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Y: ExpressionInput
    open var X: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionArctangent2Fast
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionArctangent2Fast
        fun GetDefaultObject(): MaterialExpressionArctangent2Fast
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionArctangent2Fast
        fun C(Other: UObject): MaterialExpressionArctangent2Fast
        fun C(Other: Any): MaterialExpressionArctangent2Fast
    }
}

external open class MaterialExpressionArctangentFast : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionArctangentFast
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionArctangentFast
        fun GetDefaultObject(): MaterialExpressionArctangentFast
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionArctangentFast
        fun C(Other: UObject): MaterialExpressionArctangentFast
        fun C(Other: Any): MaterialExpressionArctangentFast
    }
}

external open class MaterialExpressionAtmosphericFogColor : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var WorldPosition: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionAtmosphericFogColor
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionAtmosphericFogColor
        fun GetDefaultObject(): MaterialExpressionAtmosphericFogColor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionAtmosphericFogColor
        fun C(Other: UObject): MaterialExpressionAtmosphericFogColor
        fun C(Other: Any): MaterialExpressionAtmosphericFogColor
    }
}

external open class MaterialExpressionAtmosphericLightColor : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionAtmosphericLightColor
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionAtmosphericLightColor
        fun GetDefaultObject(): MaterialExpressionAtmosphericLightColor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionAtmosphericLightColor
        fun C(Other: UObject): MaterialExpressionAtmosphericLightColor
        fun C(Other: Any): MaterialExpressionAtmosphericLightColor
    }
}

external open class MaterialExpressionAtmosphericLightVector : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionAtmosphericLightVector
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionAtmosphericLightVector
        fun GetDefaultObject(): MaterialExpressionAtmosphericLightVector
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionAtmosphericLightVector
        fun C(Other: UObject): MaterialExpressionAtmosphericLightVector
        fun C(Other: Any): MaterialExpressionAtmosphericLightVector
    }
}

external open class MaterialExpressionBentNormalCustomOutput : MaterialExpressionCustomOutput {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionBentNormalCustomOutput
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionBentNormalCustomOutput
        fun GetDefaultObject(): MaterialExpressionBentNormalCustomOutput
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionBentNormalCustomOutput
        fun C(Other: UObject): MaterialExpressionBentNormalCustomOutput
        fun C(Other: Any): MaterialExpressionBentNormalCustomOutput
    }
}

external open class MaterialExpressionBinaryOp : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var A: ExpressionInput
    open var B: ExpressionInput
    open var ConstA: Number
    open var ConstB: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionBinaryOp
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionBinaryOp
        fun GetDefaultObject(): MaterialExpressionBinaryOp
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionBinaryOp
        fun C(Other: UObject): MaterialExpressionBinaryOp
        fun C(Other: Any): MaterialExpressionBinaryOp
    }
}

external open class MaterialExpressionLess : MaterialExpressionBinaryOp {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionLess
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionLess
        fun GetDefaultObject(): MaterialExpressionLess
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionLess
        fun C(Other: UObject): MaterialExpressionLess
        fun C(Other: Any): MaterialExpressionLess
    }
}

external open class MaterialExpressionBlackBody : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Temp: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionBlackBody
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionBlackBody
        fun GetDefaultObject(): MaterialExpressionBlackBody
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionBlackBody
        fun C(Other: UObject): MaterialExpressionBlackBody
        fun C(Other: Any): MaterialExpressionBlackBody
    }
}

external object EMaterialAttributeBlend {
    var Blend: String /* "Blend" */
    var UseA: String /* "UseA" */
    var UseB: String /* "UseB" */
    var EMaterialAttributeBlend_MAX: String /* "EMaterialAttributeBlend_MAX" */
}

external open class MaterialExpressionBlendMaterialAttributes : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var A: MaterialAttributesInput
    open var B: MaterialAttributesInput
    open var Alpha: ExpressionInput
    open var PixelAttributeBlendType: String /* "Blend" | "UseA" | "UseB" | "EMaterialAttributeBlend_MAX" */
    open var VertexAttributeBlendType: String /* "Blend" | "UseA" | "UseB" | "EMaterialAttributeBlend_MAX" */

    companion object {
        fun Load(ResourceName: String): MaterialExpressionBlendMaterialAttributes
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionBlendMaterialAttributes
        fun GetDefaultObject(): MaterialExpressionBlendMaterialAttributes
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionBlendMaterialAttributes
        fun C(Other: UObject): MaterialExpressionBlendMaterialAttributes
        fun C(Other: Any): MaterialExpressionBlendMaterialAttributes
    }
}

external open class MaterialExpressionBreakMaterialAttributes : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var MaterialAttributes: MaterialAttributesInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionBreakMaterialAttributes
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionBreakMaterialAttributes
        fun GetDefaultObject(): MaterialExpressionBreakMaterialAttributes
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionBreakMaterialAttributes
        fun C(Other: UObject): MaterialExpressionBreakMaterialAttributes
        fun C(Other: Any): MaterialExpressionBreakMaterialAttributes
    }
}

external open class MaterialExpressionBumpOffset : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Coordinate: ExpressionInput
    open var Height: ExpressionInput
    open var HeightRatioInput: ExpressionInput
    open var HeightRatio: Number
    open var ReferencePlane: Number
    open var ConstCoordinate: Any

    companion object {
        fun Load(ResourceName: String): MaterialExpressionBumpOffset
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionBumpOffset
        fun GetDefaultObject(): MaterialExpressionBumpOffset
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionBumpOffset
        fun C(Other: UObject): MaterialExpressionBumpOffset
        fun C(Other: Any): MaterialExpressionBumpOffset
    }
}

external open class MaterialExpressionCameraPositionWS : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionCameraPositionWS
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionCameraPositionWS
        fun GetDefaultObject(): MaterialExpressionCameraPositionWS
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionCameraPositionWS
        fun C(Other: UObject): MaterialExpressionCameraPositionWS
        fun C(Other: Any): MaterialExpressionCameraPositionWS
    }
}

external open class MaterialExpressionCameraVectorWS : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionCameraVectorWS
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionCameraVectorWS
        fun GetDefaultObject(): MaterialExpressionCameraVectorWS
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionCameraVectorWS
        fun C(Other: UObject): MaterialExpressionCameraVectorWS
        fun C(Other: Any): MaterialExpressionCameraVectorWS
    }
}

external open class MaterialExpressionCeil : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionCeil
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionCeil
        fun GetDefaultObject(): MaterialExpressionCeil
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionCeil
        fun C(Other: UObject): MaterialExpressionCeil
        fun C(Other: Any): MaterialExpressionCeil
    }
}

external open class MaterialExpressionParameter : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var ParameterName: String
    open var ExpressionGUID: Guid
    open var Group: String
    open var SortPriority: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionParameter
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionParameter
        fun GetDefaultObject(): MaterialExpressionParameter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionParameter
        fun C(Other: UObject): MaterialExpressionParameter
        fun C(Other: Any): MaterialExpressionParameter
    }
}

external open class MaterialExpressionVectorParameter : MaterialExpressionParameter {
    constructor()
    constructor(Outer: UObject)
    open var DefaultValue: LinearColor
    open var bUseCustomPrimitiveData: Boolean
    open var PrimitiveDataIndex: Number
    open var ChannelNames: ParameterChannelNames

    companion object {
        fun Load(ResourceName: String): MaterialExpressionVectorParameter
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionVectorParameter
        fun GetDefaultObject(): MaterialExpressionVectorParameter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionVectorParameter
        fun C(Other: UObject): MaterialExpressionVectorParameter
        fun C(Other: Any): MaterialExpressionVectorParameter
    }
}

external object EChannelMaskParameterColor {
    var Red: String /* "Red" */
    var Green: String /* "Green" */
    var Blue: String /* "Blue" */
    var Alpha: String /* "Alpha" */
    var EChannelMaskParameterColor_MAX: String /* "EChannelMaskParameterColor_MAX" */
}

external open class MaterialExpressionChannelMaskParameter : MaterialExpressionVectorParameter {
    constructor()
    constructor(Outer: UObject)
    open var MaskChannel: String /* "Red" | "Green" | "Blue" | "Alpha" | "EChannelMaskParameterColor_MAX" */
    open var Input: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionChannelMaskParameter
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionChannelMaskParameter
        fun GetDefaultObject(): MaterialExpressionChannelMaskParameter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionChannelMaskParameter
        fun C(Other: UObject): MaterialExpressionChannelMaskParameter
        fun C(Other: Any): MaterialExpressionChannelMaskParameter
    }
}

external object EClampMode {
    var CMODE_Clamp: String /* "CMODE_Clamp" */
    var CMODE_ClampMin: String /* "CMODE_ClampMin" */
    var CMODE_ClampMax: String /* "CMODE_ClampMax" */
    var CMODE_MAX: String /* "CMODE_MAX" */
}

external open class MaterialExpressionClamp : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput
    open var Min: ExpressionInput
    open var Max: ExpressionInput
    open var ClampMode: String /* "CMODE_Clamp" | "CMODE_ClampMin" | "CMODE_ClampMax" | "CMODE_MAX" */
    open var MinDefault: Number
    open var MaxDefault: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionClamp
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionClamp
        fun GetDefaultObject(): MaterialExpressionClamp
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionClamp
        fun C(Other: UObject): MaterialExpressionClamp
        fun C(Other: Any): MaterialExpressionClamp
    }
}

external open class MaterialExpressionClearCoatNormalCustomOutput : MaterialExpressionCustomOutput {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionClearCoatNormalCustomOutput
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionClearCoatNormalCustomOutput
        fun GetDefaultObject(): MaterialExpressionClearCoatNormalCustomOutput
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionClearCoatNormalCustomOutput
        fun C(Other: UObject): MaterialExpressionClearCoatNormalCustomOutput
        fun C(Other: Any): MaterialExpressionClearCoatNormalCustomOutput
    }
}

external open class MaterialExpressionCloudSampleAttribute : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionCloudSampleAttribute
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionCloudSampleAttribute
        fun GetDefaultObject(): MaterialExpressionCloudSampleAttribute
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionCloudSampleAttribute
        fun C(Other: UObject): MaterialExpressionCloudSampleAttribute
        fun C(Other: Any): MaterialExpressionCloudSampleAttribute
    }
}

external open class MaterialExpressionCollectionParameter : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Collection: MaterialParameterCollection
    open var ParameterName: String
    open var ParameterId: Guid

    companion object {
        fun Load(ResourceName: String): MaterialExpressionCollectionParameter
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionCollectionParameter
        fun GetDefaultObject(): MaterialExpressionCollectionParameter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionCollectionParameter
        fun C(Other: UObject): MaterialExpressionCollectionParameter
        fun C(Other: Any): MaterialExpressionCollectionParameter
    }
}

external open class MaterialExpressionComponentMask : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput
    open var R: Boolean
    open var G: Boolean
    open var B: Boolean
    open var A: Boolean

    companion object {
        fun Load(ResourceName: String): MaterialExpressionComponentMask
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionComponentMask
        fun GetDefaultObject(): MaterialExpressionComponentMask
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionComponentMask
        fun C(Other: UObject): MaterialExpressionComponentMask
        fun C(Other: Any): MaterialExpressionComponentMask
    }
}

external open class MaterialExpressionRerouteBase : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionRerouteBase
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionRerouteBase
        fun GetDefaultObject(): MaterialExpressionRerouteBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionRerouteBase
        fun C(Other: UObject): MaterialExpressionRerouteBase
        fun C(Other: Any): MaterialExpressionRerouteBase
    }
}

external open class MaterialExpressionReroute : MaterialExpressionRerouteBase {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionReroute
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionReroute
        fun GetDefaultObject(): MaterialExpressionReroute
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionReroute
        fun C(Other: UObject): MaterialExpressionReroute
        fun C(Other: Any): MaterialExpressionReroute
    }
}

external open class CompositeReroute {
    open var Name: String
    open var Expression: MaterialExpressionReroute
    open fun clone(): CompositeReroute

    companion object {
        fun C(Other: UObject): CompositeReroute
        fun C(Other: Any): CompositeReroute
    }
}

external open class MaterialExpressionPinBase : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var ReroutePins: Array<CompositeReroute>
    open var PinDirection: String /* "EGPD_Input" | "EGPD_Output" | "EGPD_MAX" */

    companion object {
        fun Load(ResourceName: String): MaterialExpressionPinBase
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionPinBase
        fun GetDefaultObject(): MaterialExpressionPinBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionPinBase
        fun C(Other: UObject): MaterialExpressionPinBase
        fun C(Other: Any): MaterialExpressionPinBase
    }
}

external open class MaterialExpressionComposite : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var SubgraphName: String
    open var InputExpressions: MaterialExpressionPinBase
    open var OutputExpressions: MaterialExpressionPinBase

    companion object {
        fun Load(ResourceName: String): MaterialExpressionComposite
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionComposite
        fun GetDefaultObject(): MaterialExpressionComposite
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionComposite
        fun C(Other: UObject): MaterialExpressionComposite
        fun C(Other: Any): MaterialExpressionComposite
    }
}

external open class MaterialExpressionConstant : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var R: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionConstant
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionConstant
        fun GetDefaultObject(): MaterialExpressionConstant
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionConstant
        fun C(Other: UObject): MaterialExpressionConstant
        fun C(Other: Any): MaterialExpressionConstant
    }
}

external open class MaterialExpressionConstant2Vector : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var R: Number
    open var G: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionConstant2Vector
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionConstant2Vector
        fun GetDefaultObject(): MaterialExpressionConstant2Vector
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionConstant2Vector
        fun C(Other: UObject): MaterialExpressionConstant2Vector
        fun C(Other: Any): MaterialExpressionConstant2Vector
    }
}

external open class MaterialExpressionConstant3Vector : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Constant: LinearColor

    companion object {
        fun Load(ResourceName: String): MaterialExpressionConstant3Vector
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionConstant3Vector
        fun GetDefaultObject(): MaterialExpressionConstant3Vector
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionConstant3Vector
        fun C(Other: UObject): MaterialExpressionConstant3Vector
        fun C(Other: Any): MaterialExpressionConstant3Vector
    }
}

external open class MaterialExpressionConstant4Vector : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Constant: LinearColor

    companion object {
        fun Load(ResourceName: String): MaterialExpressionConstant4Vector
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionConstant4Vector
        fun GetDefaultObject(): MaterialExpressionConstant4Vector
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionConstant4Vector
        fun C(Other: UObject): MaterialExpressionConstant4Vector
        fun C(Other: Any): MaterialExpressionConstant4Vector
    }
}

external open class MaterialExpressionConstantBiasScale : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput
    open var Bias: Number
    open var Scale: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionConstantBiasScale
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionConstantBiasScale
        fun GetDefaultObject(): MaterialExpressionConstantBiasScale
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionConstantBiasScale
        fun C(Other: UObject): MaterialExpressionConstantBiasScale
        fun C(Other: Any): MaterialExpressionConstantBiasScale
    }
}

external open class MaterialExpressionCosine : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput
    open var Period: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionCosine
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionCosine
        fun GetDefaultObject(): MaterialExpressionCosine
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionCosine
        fun C(Other: UObject): MaterialExpressionCosine
        fun C(Other: Any): MaterialExpressionCosine
    }
}

external open class MaterialExpressionCrossProduct : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var A: ExpressionInput
    open var B: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionCrossProduct
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionCrossProduct
        fun GetDefaultObject(): MaterialExpressionCrossProduct
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionCrossProduct
        fun C(Other: UObject): MaterialExpressionCrossProduct
        fun C(Other: Any): MaterialExpressionCrossProduct
    }
}

external open class MaterialExpressionScalarParameter : MaterialExpressionParameter {
    constructor()
    constructor(Outer: UObject)
    open var DefaultValue: Number
    open var bUseCustomPrimitiveData: Boolean
    open var PrimitiveDataIndex: Number
    open var SliderMin: Number
    open var SliderMax: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionScalarParameter
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionScalarParameter
        fun GetDefaultObject(): MaterialExpressionScalarParameter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionScalarParameter
        fun C(Other: UObject): MaterialExpressionScalarParameter
        fun C(Other: Any): MaterialExpressionScalarParameter
    }
}

external open class MaterialExpressionCurveAtlasRowParameter : MaterialExpressionScalarParameter {
    constructor()
    constructor(Outer: UObject)
    open var Curve: CurveLinearColor
    open var Atlas: CurveLinearColorAtlas
    open var InputTime: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionCurveAtlasRowParameter
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionCurveAtlasRowParameter
        fun GetDefaultObject(): MaterialExpressionCurveAtlasRowParameter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionCurveAtlasRowParameter
        fun C(Other: UObject): MaterialExpressionCurveAtlasRowParameter
        fun C(Other: Any): MaterialExpressionCurveAtlasRowParameter
    }
}

external object ECustomMaterialOutputType {
    var CMOT_Float1: String /* "CMOT_Float1" */
    var CMOT_Float2: String /* "CMOT_Float2" */
    var CMOT_Float3: String /* "CMOT_Float3" */
    var CMOT_Float4: String /* "CMOT_Float4" */
    var CMOT_MaterialAttributes: String /* "CMOT_MaterialAttributes" */
    var CMOT_MAX: String /* "CMOT_MAX" */
}

external open class CustomInput {
    open var InputName: String
    open var Input: ExpressionInput
    open fun clone(): CustomInput

    companion object {
        fun C(Other: UObject): CustomInput
        fun C(Other: Any): CustomInput
    }
}

external open class CustomOutput {
    open var OutputName: String
    open var OutputType: String /* "CMOT_Float1" | "CMOT_Float2" | "CMOT_Float3" | "CMOT_Float4" | "CMOT_MaterialAttributes" | "CMOT_MAX" */
    open fun clone(): CustomOutput

    companion object {
        fun C(Other: UObject): CustomOutput
        fun C(Other: Any): CustomOutput
    }
}

external open class CustomDefine {
    open var DefineName: String
    open var DefineValue: String
    open fun clone(): CustomDefine

    companion object {
        fun C(Other: UObject): CustomDefine
        fun C(Other: Any): CustomDefine
    }
}

external open class MaterialExpressionCustom : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Code: String
    open var OutputType: String /* "CMOT_Float1" | "CMOT_Float2" | "CMOT_Float3" | "CMOT_Float4" | "CMOT_MaterialAttributes" | "CMOT_MAX" */
    open var Description: String
    open var Inputs: Array<CustomInput>
    open var AdditionalOutputs: Array<CustomOutput>
    open var AdditionalDefines: Array<CustomDefine>
    open var IncludeFilePaths: Array<String>

    companion object {
        fun Load(ResourceName: String): MaterialExpressionCustom
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionCustom
        fun GetDefaultObject(): MaterialExpressionCustom
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionCustom
        fun C(Other: UObject): MaterialExpressionCustom
        fun C(Other: Any): MaterialExpressionCustom
    }
}

external object EDBufferTextureId {
    var DBT_A: String /* "DBT_A" */
    var DBT_B: String /* "DBT_B" */
    var DBT_C: String /* "DBT_C" */
    var DBT_MAX: String /* "DBT_MAX" */
}

external open class MaterialExpressionDBufferTexture : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Coordinates: ExpressionInput
    open var DBufferTextureId: String /* "DBT_A" | "DBT_B" | "DBT_C" | "DBT_MAX" */

    companion object {
        fun Load(ResourceName: String): MaterialExpressionDBufferTexture
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionDBufferTexture
        fun GetDefaultObject(): MaterialExpressionDBufferTexture
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionDBufferTexture
        fun C(Other: UObject): MaterialExpressionDBufferTexture
        fun C(Other: Any): MaterialExpressionDBufferTexture
    }
}

external open class MaterialExpressionDDX : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Value: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionDDX
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionDDX
        fun GetDefaultObject(): MaterialExpressionDDX
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionDDX
        fun C(Other: UObject): MaterialExpressionDDX
        fun C(Other: Any): MaterialExpressionDDX
    }
}

external open class MaterialExpressionDDY : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Value: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionDDY
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionDDY
        fun GetDefaultObject(): MaterialExpressionDDY
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionDDY
        fun C(Other: UObject): MaterialExpressionDDY
        fun C(Other: Any): MaterialExpressionDDY
    }
}

external open class MaterialExpressionDecalDerivative : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionDecalDerivative
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionDecalDerivative
        fun GetDefaultObject(): MaterialExpressionDecalDerivative
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionDecalDerivative
        fun C(Other: UObject): MaterialExpressionDecalDerivative
        fun C(Other: Any): MaterialExpressionDecalDerivative
    }
}

external open class MaterialExpressionDecalLifetimeOpacity : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionDecalLifetimeOpacity
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionDecalLifetimeOpacity
        fun GetDefaultObject(): MaterialExpressionDecalLifetimeOpacity
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionDecalLifetimeOpacity
        fun C(Other: UObject): MaterialExpressionDecalLifetimeOpacity
        fun C(Other: Any): MaterialExpressionDecalLifetimeOpacity
    }
}

external open class MaterialExpressionDecalMipmapLevel : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var TextureSize: ExpressionInput
    open var ConstWidth: Number
    open var ConstHeight: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionDecalMipmapLevel
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionDecalMipmapLevel
        fun GetDefaultObject(): MaterialExpressionDecalMipmapLevel
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionDecalMipmapLevel
        fun C(Other: UObject): MaterialExpressionDecalMipmapLevel
        fun C(Other: Any): MaterialExpressionDecalMipmapLevel
    }
}

external open class MaterialExpressionDeltaTime : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionDeltaTime
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionDeltaTime
        fun GetDefaultObject(): MaterialExpressionDeltaTime
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionDeltaTime
        fun C(Other: UObject): MaterialExpressionDeltaTime
        fun C(Other: Any): MaterialExpressionDeltaTime
    }
}

external open class MaterialExpressionDepthFade : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var InOpacity: ExpressionInput
    open var FadeDistance: ExpressionInput
    open var OpacityDefault: Number
    open var FadeDistanceDefault: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionDepthFade
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionDepthFade
        fun GetDefaultObject(): MaterialExpressionDepthFade
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionDepthFade
        fun C(Other: UObject): MaterialExpressionDepthFade
        fun C(Other: Any): MaterialExpressionDepthFade
    }
}

external object EDepthOfFieldFunctionValue {
    var TDOF_NearAndFarMask: String /* "TDOF_NearAndFarMask" */
    var TDOF_NearMask: String /* "TDOF_NearMask" */
    var TDOF_FarMask: String /* "TDOF_FarMask" */
    var TDOF_CircleOfConfusionRadius: String /* "TDOF_CircleOfConfusionRadius" */
    var TDOF_MAX: String /* "TDOF_MAX" */
}

external open class MaterialExpressionDepthOfFieldFunction : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var FunctionValue: String /* "TDOF_NearAndFarMask" | "TDOF_NearMask" | "TDOF_FarMask" | "TDOF_CircleOfConfusionRadius" | "TDOF_MAX" */
    open var Depth: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionDepthOfFieldFunction
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionDepthOfFieldFunction
        fun GetDefaultObject(): MaterialExpressionDepthOfFieldFunction
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionDepthOfFieldFunction
        fun C(Other: UObject): MaterialExpressionDepthOfFieldFunction
        fun C(Other: Any): MaterialExpressionDepthOfFieldFunction
    }
}

external open class MaterialExpressionDeriveNormalZ : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var InXY: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionDeriveNormalZ
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionDeriveNormalZ
        fun GetDefaultObject(): MaterialExpressionDeriveNormalZ
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionDeriveNormalZ
        fun C(Other: UObject): MaterialExpressionDeriveNormalZ
        fun C(Other: Any): MaterialExpressionDeriveNormalZ
    }
}

external open class MaterialExpressionDesaturation : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput
    open var Fraction: ExpressionInput
    open var LuminanceFactors: LinearColor

    companion object {
        fun Load(ResourceName: String): MaterialExpressionDesaturation
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionDesaturation
        fun GetDefaultObject(): MaterialExpressionDesaturation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionDesaturation
        fun C(Other: UObject): MaterialExpressionDesaturation
        fun C(Other: Any): MaterialExpressionDesaturation
    }
}

external open class MaterialExpressionDistance : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var A: ExpressionInput
    open var B: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionDistance
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionDistance
        fun GetDefaultObject(): MaterialExpressionDistance
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionDistance
        fun C(Other: UObject): MaterialExpressionDistance
        fun C(Other: Any): MaterialExpressionDistance
    }
}

external open class MaterialExpressionDistanceCullFade : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionDistanceCullFade
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionDistanceCullFade
        fun GetDefaultObject(): MaterialExpressionDistanceCullFade
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionDistanceCullFade
        fun C(Other: UObject): MaterialExpressionDistanceCullFade
        fun C(Other: Any): MaterialExpressionDistanceCullFade
    }
}

external open class MaterialExpressionDistanceFieldGradient : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var position: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionDistanceFieldGradient
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionDistanceFieldGradient
        fun GetDefaultObject(): MaterialExpressionDistanceFieldGradient
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionDistanceFieldGradient
        fun C(Other: UObject): MaterialExpressionDistanceFieldGradient
        fun C(Other: Any): MaterialExpressionDistanceFieldGradient
    }
}

external open class MaterialExpressionDistanceFieldsRenderingSwitch : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var No: ExpressionInput
    open var Yes: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionDistanceFieldsRenderingSwitch
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionDistanceFieldsRenderingSwitch
        fun GetDefaultObject(): MaterialExpressionDistanceFieldsRenderingSwitch
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionDistanceFieldsRenderingSwitch
        fun C(Other: UObject): MaterialExpressionDistanceFieldsRenderingSwitch
        fun C(Other: Any): MaterialExpressionDistanceFieldsRenderingSwitch
    }
}

external open class MaterialExpressionDistanceToNearestSurface : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var position: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionDistanceToNearestSurface
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionDistanceToNearestSurface
        fun GetDefaultObject(): MaterialExpressionDistanceToNearestSurface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionDistanceToNearestSurface
        fun C(Other: UObject): MaterialExpressionDistanceToNearestSurface
        fun C(Other: Any): MaterialExpressionDistanceToNearestSurface
    }
}

external open class MaterialExpressionDivide : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var A: ExpressionInput
    open var B: ExpressionInput
    open var ConstA: Number
    open var ConstB: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionDivide
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionDivide
        fun GetDefaultObject(): MaterialExpressionDivide
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionDivide
        fun C(Other: UObject): MaterialExpressionDivide
        fun C(Other: Any): MaterialExpressionDivide
    }
}

external open class MaterialExpressionDotProduct : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var A: ExpressionInput
    open var B: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionDotProduct
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionDotProduct
        fun GetDefaultObject(): MaterialExpressionDotProduct
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionDotProduct
        fun C(Other: UObject): MaterialExpressionDotProduct
        fun C(Other: Any): MaterialExpressionDotProduct
    }
}

external open class MaterialExpressionDoubleVectorParameter : MaterialExpressionParameter {
    constructor()
    constructor(Outer: UObject)
    open var DefaultValue: Vector4d

    companion object {
        fun Load(ResourceName: String): MaterialExpressionDoubleVectorParameter
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionDoubleVectorParameter
        fun GetDefaultObject(): MaterialExpressionDoubleVectorParameter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionDoubleVectorParameter
        fun C(Other: UObject): MaterialExpressionDoubleVectorParameter
        fun C(Other: Any): MaterialExpressionDoubleVectorParameter
    }
}

external open class MaterialExpressionDynamicParameter : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var ParamNames: Array<String>
    open var DefaultValue: LinearColor
    open var ParameterIndex: Any

    companion object {
        fun Load(ResourceName: String): MaterialExpressionDynamicParameter
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionDynamicParameter
        fun GetDefaultObject(): MaterialExpressionDynamicParameter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionDynamicParameter
        fun C(Other: UObject): MaterialExpressionDynamicParameter
        fun C(Other: Any): MaterialExpressionDynamicParameter
    }
}

external open class MaterialExpressionEyeAdaptation : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionEyeAdaptation
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionEyeAdaptation
        fun GetDefaultObject(): MaterialExpressionEyeAdaptation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionEyeAdaptation
        fun C(Other: UObject): MaterialExpressionEyeAdaptation
        fun C(Other: Any): MaterialExpressionEyeAdaptation
    }
}

external open class MaterialExpressionEyeAdaptationInverse : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var LightValueInput: ExpressionInput
    open var AlphaInput: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionEyeAdaptationInverse
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionEyeAdaptationInverse
        fun GetDefaultObject(): MaterialExpressionEyeAdaptationInverse
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionEyeAdaptationInverse
        fun C(Other: UObject): MaterialExpressionEyeAdaptationInverse
        fun C(Other: Any): MaterialExpressionEyeAdaptationInverse
    }
}

external open class MaterialExpressionFeatureLevelSwitch : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Default: ExpressionInput
    open var Inputs: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionFeatureLevelSwitch
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionFeatureLevelSwitch
        fun GetDefaultObject(): MaterialExpressionFeatureLevelSwitch
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionFeatureLevelSwitch
        fun C(Other: UObject): MaterialExpressionFeatureLevelSwitch
        fun C(Other: Any): MaterialExpressionFeatureLevelSwitch
    }
}

external open class MaterialExpressionFloor : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionFloor
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionFloor
        fun GetDefaultObject(): MaterialExpressionFloor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionFloor
        fun C(Other: UObject): MaterialExpressionFloor
        fun C(Other: Any): MaterialExpressionFloor
    }
}

external open class MaterialExpressionFmod : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var A: ExpressionInput
    open var B: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionFmod
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionFmod
        fun GetDefaultObject(): MaterialExpressionFmod
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionFmod
        fun C(Other: UObject): MaterialExpressionFmod
        fun C(Other: Any): MaterialExpressionFmod
    }
}

external open class MaterialExpressionFontSample : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Font: Font
    open var FontTexturePage: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionFontSample
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionFontSample
        fun GetDefaultObject(): MaterialExpressionFontSample
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionFontSample
        fun C(Other: UObject): MaterialExpressionFontSample
        fun C(Other: Any): MaterialExpressionFontSample
    }
}

external open class MaterialExpressionFontSampleParameter : MaterialExpressionFontSample {
    constructor()
    constructor(Outer: UObject)
    open var ParameterName: String
    open var ExpressionGUID: Guid
    open var Group: String
    open var SortPriority: Number

    companion object {
        fun Load(ResourceName: String): MaterialExpressionFontSampleParameter
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionFontSampleParameter
        fun GetDefaultObject(): MaterialExpressionFontSampleParameter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionFontSampleParameter
        fun C(Other: UObject): MaterialExpressionFontSampleParameter
        fun C(Other: Any): MaterialExpressionFontSampleParameter
    }
}

external open class MaterialExpressionForLoop : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var LoopBody: ExpressionExecOutput
    open var Completed: ExpressionExecOutput
    open var StartIndex: ExpressionInput
    open var EndIndex: ExpressionInput
    open var IndexStep: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionForLoop
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionForLoop
        fun GetDefaultObject(): MaterialExpressionForLoop
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionForLoop
        fun C(Other: UObject): MaterialExpressionForLoop
        fun C(Other: Any): MaterialExpressionForLoop
    }
}

external open class MaterialExpressionFrac : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var Input: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionFrac
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionFrac
        fun GetDefaultObject(): MaterialExpressionFrac
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionFrac
        fun C(Other: UObject): MaterialExpressionFrac
        fun C(Other: Any): MaterialExpressionFrac
    }
}

external open class MaterialExpressionFresnel : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var ExponentIn: ExpressionInput
    open var Exponent: Number
    open var BaseReflectFractionIn: ExpressionInput
    open var BaseReflectFraction: Number
    open var Normal: ExpressionInput

    companion object {
        fun Load(ResourceName: String): MaterialExpressionFresnel
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionFresnel
        fun GetDefaultObject(): MaterialExpressionFresnel
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionFresnel
        fun C(Other: UObject): MaterialExpressionFresnel
        fun C(Other: Any): MaterialExpressionFresnel
    }
}

external open class MaterialExpressionGenericConstant : MaterialExpression {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialExpressionGenericConstant
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionGenericConstant
        fun GetDefaultObject(): MaterialExpressionGenericConstant
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionGenericConstant
        fun C(Other: UObject): MaterialExpressionGenericConstant
        fun C(Other: Any): MaterialExpressionGenericConstant
    }
}

external open class MaterialExpressionConstantDouble : MaterialExpressionGenericConstant {
    constructor()
    constructor(Outer: UObject)
    open var Value: Any

    companion object {
        fun Load(ResourceName: String): MaterialExpressionConstantDouble
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionConstantDouble
        fun GetDefaultObject(): MaterialExpressionConstantDouble
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionConstantDouble
        fun C(Other: UObject): MaterialExpressionConstantDouble
        fun C(Other: Any): MaterialExpressionConstantDouble
    }
}

external open class MaterialExpressionGetLocal : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var LocalName: String

    companion object {
        fun Load(ResourceName: String): MaterialExpressionGetLocal
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionGetLocal
        fun GetDefaultObject(): MaterialExpressionGetLocal
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionGetLocal
        fun C(Other: UObject): MaterialExpressionGetLocal
        fun C(Other: Any): MaterialExpressionGetLocal
    }
}

external open class MaterialExpressionGetMaterialAttributes : MaterialExpression {
    constructor()
    constructor(Outer: UObject)
    open var MaterialAttributes: MaterialAttributesInput
    open var AttributeGetTypes: Array<Guid>

    companion object {
        fun Load(ResourceName: String): MaterialExpressionGetMaterialAttributes
        fun Find(Outer: UObject, ResourceName: String): MaterialExpressionGetMaterialAttributes
        fun GetDefaultObject(): MaterialExpressionGetMaterialAttributes
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialExpressionGetMaterialAttributes
        fun C(Other: UObject): MaterialExpressionGetMaterialAttributes
        fun C(Other: Any): MaterialExpressionGetMaterialAttributes
    }
}
