@file:Suppress("INTERFACE_WITH_SUPERCLASS", "OVERRIDING_FINAL_MEMBER", "RETURN_TYPE_MISMATCH_ON_OVERRIDE", "CONFLICTING_OVERLOADS")
package ue


import kotlin.js.*
import org.khronos.webgl.*
import org.w3c.dom.*
import org.w3c.dom.events.*
import org.w3c.dom.parsing.*
import org.w3c.dom.svg.*
import org.w3c.dom.url.*
import org.w3c.fetch.*
import org.w3c.files.*
import org.w3c.notifications.*
import org.w3c.performance.*
import org.w3c.workers.*
import org.w3c.xhr.*

external open class BrushBuilder : UObject {
    constructor()
    constructor(Outer: UObject)
    open var BitmapFilename: String
    open var Tooltip: String
    open var NotifyBadParams: Boolean
    open var Vertices: Array<Vector>
    open var Polys: Array<BuilderPoly>
    open var Layer: String
    open var MergeCoplanars: Boolean
    open fun Build(InWorld: World, InBrush: Brush): Boolean

    companion object {
        fun Load(ResourceName: String): BrushBuilder
        fun Find(Outer: UObject, ResourceName: String): BrushBuilder
        fun GetDefaultObject(): BrushBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BrushBuilder
        fun C(Other: UObject): BrushBuilder
        fun C(Other: Any): BrushBuilder
        fun Build(Builder: BrushBuilder, InWorld: World, InBrush: Brush): Boolean
    }
}

external open class GeomSelection {
    open var Type: Number
    open var index: Number
    open var SelectionIndex: Number
    open fun clone(): GeomSelection

    companion object {
        fun C(Other: UObject): GeomSelection
        fun C(Other: Any): GeomSelection
    }
}

external interface `T$476` {
    var Surfaces: Array<Number>
}

external interface `T$477` {
    var Surfaces: Array<Number>
}

external open class Brush(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var BrushType: String /* "Brush_Default" | "Brush_Add" | "Brush_Subtract" | "Brush_MAX" */
    open var BrushColor: Color
    open var PolyFlags: Number
    open var bColored: Boolean
    open var bSolidWhenSelected: Boolean
    open var bPlaceableFromClassBrowser: Boolean
    open var bNotForClientOrServer: Boolean
    open var Brush: Model
    open var BrushComponent: BrushComponent
    open var BrushBuilder: BrushBuilder
    open var bDisplayShadedVolume: Boolean
    open var ShadedVolumeOpacityValue: Number
    open var bInManipulation: Boolean
    open var SavedSelections: Array<GeomSelection>
    open fun csgAdd(PolyFlags: Number, BrushType: String /* "Brush_Default" | "Brush_Add" | "Brush_Subtract" | "Brush_MAX" */): Brush
    open fun GetSurfaces(Surfaces: Array<Number> = definedExternally): `T$476`

    companion object {
        fun GetDefaultObject(): Brush
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Brush
        fun C(Other: UObject): Brush
        fun C(Other: Any): Brush
        fun csgAdd(DefaultBrush: Brush, PolyFlags: Number, BrushType: String /* "Brush_Default" | "Brush_Add" | "Brush_Subtract" | "Brush_MAX" */): Brush
        fun GetSurfaces(Brush: Brush, Surfaces: Array<Number> = definedExternally): `T$477`
    }
}

external open class Volume(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Brush {
    open fun CreateBrushForVolumeActor(BrushBuilder: BrushBuilder)

    companion object {
        fun GetDefaultObject(): Volume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Volume
        fun C(Other: UObject): Volume
        fun C(Other: Any): Volume
        fun CreateBrushForVolumeActor(NewActor: Volume, BrushBuilder: BrushBuilder)
    }
}

external open class PhysicsVolume(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Volume {
    open var TerminalVelocity: Number
    open var Priority: Number
    open var FluidFriction: Number
    open var bWaterVolume: Boolean
    open var bPhysicsOnContact: Boolean

    companion object {
        fun GetDefaultObject(): PhysicsVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PhysicsVolume
        fun C(Other: UObject): PhysicsVolume
        fun C(Other: Any): PhysicsVolume
    }
}

external object EDetachmentRule {
    var KeepRelative: String /* "KeepRelative" */
    var KeepWorld: String /* "KeepWorld" */
    var EDetachmentRule_MAX: String /* "EDetachmentRule_MAX" */
}

external object EMoveComponentAction {
    var Move: String /* "Move" */
    var Stop: String /* "Stop" */
    var Return: String /* "Return" */
    var EMoveComponentAction_MAX: String /* "EMoveComponentAction_MAX" */
}

external open class ARPin : UObject {
    constructor()
    constructor(Outer: UObject)
    open var TrackedGeometry: ARTrackedGeometry
    open var PinnedComponent: SceneComponent
    open var LocalToTrackingTransform: Transform
    open var LocalToAlignedTrackingTransform: Transform
    open var TrackingState: String /* "Unknown" | "Tracking" | "NotTracking" | "StoppedTracking" | "EARTrackingState_MAX" */
    open var OnARTrackingStateChanged: UnrealEngineMulticastDelegate<(NewTrackingState: String /* "Unknown" | "Tracking" | "NotTracking" | "StoppedTracking" | "EARTrackingState_MAX" */) -> Unit>
    open var OnARTransformUpdated: UnrealEngineMulticastDelegate<(OldToNewTransform: Transform) -> Unit>
    open fun GetTrackingState(): String /* "Unknown" | "Tracking" | "NotTracking" | "StoppedTracking" | "EARTrackingState_MAX" */
    open fun GetTrackedGeometry(): ARTrackedGeometry
    open fun GetPinnedComponent(): SceneComponent
    open fun GetLocalToWorldTransform(): Transform
    open fun GetLocalToTrackingTransform(): Transform
    open fun GetDebugName(): String
    open fun DebugDraw(World: World, Color: LinearColor, Scale: Number, PersistForSeconds: Number)
    open fun DebugDrawPin(WorldContextObject: UObject, Color: LinearColor, Scale: Number, PersistForSeconds: Number)
    open fun RemovePin()

    companion object {
        fun Load(ResourceName: String): ARPin
        fun Find(Outer: UObject, ResourceName: String): ARPin
        fun GetDefaultObject(): ARPin
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARPin
        fun C(Other: UObject): ARPin
        fun C(Other: Any): ARPin
        fun DebugDrawPin(ARPin: ARPin, WorldContextObject: UObject, Color: LinearColor, Scale: Number, PersistForSeconds: Number)
        fun RemovePin(PinToRemove: ARPin)
    }
}

external interface `T$478` {
    var SweepHitResult: HitResult
}

external interface `T$479` {
    var Parents: Array<SceneComponent>
}

external interface `T$480` {
    var Children: Array<SceneComponent>
}

external open class SceneComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var PhysicsVolume: Any
    open var AttachParent: SceneComponent
    open var AttachSocketName: String
    open var AttachChildren: Array<SceneComponent>
    open var ClientAttachedChildren: Array<SceneComponent>
    open var RelativeLocation: Vector
    open var RelativeRotation: Rotator
    open var RelativeScale3D: Vector
    open var ComponentVelocity: Vector
    open var bComponentToWorldUpdated: Boolean
    open var bAbsoluteLocation: Boolean
    open var bAbsoluteRotation: Boolean
    open var bAbsoluteScale: Boolean
    open var bVisible: Boolean
    open var bShouldBeAttached: Boolean
    open var bShouldSnapLocationWhenAttached: Boolean
    open var bShouldSnapRotationWhenAttached: Boolean
    open var bShouldUpdatePhysicsVolume: Boolean
    open var bHiddenInGame: Boolean
    open var bBoundsChangeTriggersStreamingDataRebuild: Boolean
    open var bUseAttachParentBound: Boolean
    open var bComputeFastLocalBounds: Boolean
    open var bComputeBoundsOnceForGame: Boolean
    open var bComputedBoundsOnceForGame: Boolean
    open var bVisualizeComponent: Boolean
    open var Mobility: String /* "Static" | "Stationary" | "Movable" | "EComponentMobility_MAX" */
    open var DetailMode: String /* "DM_Low" | "DM_Medium" | "DM_High" | "DM_MAX" */
    open var PhysicsVolumeChangedDelegate: UnrealEngineMulticastDelegate<(NewVolume: PhysicsVolume) -> Unit>
    open var ReplacementSceneComponent: SceneComponent
    open fun ToggleVisibility(bPropagateToChildren: Boolean)
    open fun SetWorldScale3D(NewScale: Vector)
    open fun SetVisibility(bNewVisibility: Boolean, bPropagateToChildren: Boolean)
    open fun SetShouldUpdatePhysicsVolume(bInShouldUpdatePhysicsVolume: Boolean)
    open fun SetRelativeScale3D(NewScale3D: Vector)
    open fun SetMobility(NewMobility: String /* "Static" | "Stationary" | "Movable" | "EComponentMobility_MAX" */)
    open fun SetHiddenInGame(NewHidden: Boolean, bPropagateToChildren: Boolean)
    open fun SetAbsolute(bNewAbsoluteLocation: Boolean, bNewAbsoluteRotation: Boolean, bNewAbsoluteScale: Boolean)
    open fun ResetRelativeTransform()
    open fun OnRep_Visibility(OldValue: Boolean)
    open fun OnRep_Transform()
    open fun OnRep_AttachSocketName()
    open fun OnRep_AttachParent()
    open fun OnRep_AttachChildren()
    open fun SetWorldTransform(NewTransform: Transform, bSweep: Boolean, SweepHitResult: HitResult = definedExternally, bTeleport: Boolean = definedExternally): `T$478`
    open fun SetWorldRotation(NewRotation: Rotator, bSweep: Boolean, SweepHitResult: HitResult = definedExternally, bTeleport: Boolean = definedExternally): `T$478`
    open fun SetWorldLocationAndRotation(NewLocation: Vector, NewRotation: Rotator, bSweep: Boolean, SweepHitResult: HitResult = definedExternally, bTeleport: Boolean = definedExternally): `T$478`
    open fun SetWorldLocation(NewLocation: Vector, bSweep: Boolean, SweepHitResult: HitResult = definedExternally, bTeleport: Boolean = definedExternally): `T$478`
    open fun SetRelativeTransform(NewTransform: Transform, bSweep: Boolean, SweepHitResult: HitResult = definedExternally, bTeleport: Boolean = definedExternally): `T$478`
    open fun SetRelativeRotation(NewRotation: Rotator, bSweep: Boolean, SweepHitResult: HitResult = definedExternally, bTeleport: Boolean = definedExternally): `T$478`
    open fun SetRelativeLocationAndRotation(NewLocation: Vector, NewRotation: Rotator, bSweep: Boolean, SweepHitResult: HitResult = definedExternally, bTeleport: Boolean = definedExternally): `T$478`
    open fun SetRelativeLocation(NewLocation: Vector, bSweep: Boolean, SweepHitResult: HitResult = definedExternally, bTeleport: Boolean = definedExternally): `T$478`
    open fun GetWorldTransform(): Transform
    open fun GetWorldScale(): Vector
    open fun GetWorldRotation(): Rotator
    open fun GetWorldLocation(): Vector
    open fun DetachFromComponent(LocationRule: String /* "KeepRelative" | "KeepWorld" | "EDetachmentRule_MAX" */, RotationRule: String /* "KeepRelative" | "KeepWorld" | "EDetachmentRule_MAX" */, ScaleRule: String /* "KeepRelative" | "KeepWorld" | "EDetachmentRule_MAX" */, bCallModify: Boolean)
    open fun AttachActorToComponent(Parent: SceneComponent, SocketName: String, LocationRule: String /* "KeepRelative" | "KeepWorld" | "SnapToTarget" | "EAttachmentRule_MAX" */, RotationRule: String /* "KeepRelative" | "KeepWorld" | "SnapToTarget" | "EAttachmentRule_MAX" */, ScaleRule: String /* "KeepRelative" | "KeepWorld" | "SnapToTarget" | "EAttachmentRule_MAX" */, bWeldSimulatedBodies: Boolean): Boolean
    open fun AttachTo(InParent: SceneComponent, InSocketName: String, AttachType: String /* "KeepRelativeOffset" | "KeepWorldPosition" | "SnapToTarget" | "SnapToTargetIncludingScale" | "EAttachLocation_MAX" */, bWeldSimulatedBodies: Boolean): Boolean
    open fun AddWorldTransformKeepScale(DeltaTransform: Transform, bSweep: Boolean, SweepHitResult: HitResult = definedExternally, bTeleport: Boolean = definedExternally): `T$478`
    open fun AddWorldTransform(DeltaTransform: Transform, bSweep: Boolean, SweepHitResult: HitResult = definedExternally, bTeleport: Boolean = definedExternally): `T$478`
    open fun AddWorldRotation(DeltaRotation: Rotator, bSweep: Boolean, SweepHitResult: HitResult = definedExternally, bTeleport: Boolean = definedExternally): `T$478`
    open fun AddWorldOffset(DeltaLocation: Vector, bSweep: Boolean, SweepHitResult: HitResult = definedExternally, bTeleport: Boolean = definedExternally): `T$478`
    open fun AddRelativeRotation(DeltaRotation: Rotator, bSweep: Boolean, SweepHitResult: HitResult = definedExternally, bTeleport: Boolean = definedExternally): `T$478`
    open fun AddRelativeLocation(DeltaLocation: Vector, bSweep: Boolean, SweepHitResult: HitResult = definedExternally, bTeleport: Boolean = definedExternally): `T$478`
    open fun AddLocalTransform(DeltaTransform: Transform, bSweep: Boolean, SweepHitResult: HitResult = definedExternally, bTeleport: Boolean = definedExternally): `T$478`
    open fun AddLocalRotation(DeltaRotation: Rotator, bSweep: Boolean, SweepHitResult: HitResult = definedExternally, bTeleport: Boolean = definedExternally): `T$478`
    open fun AddLocalOffset(DeltaLocation: Vector, bSweep: Boolean, SweepHitResult: HitResult = definedExternally, bTeleport: Boolean = definedExternally): `T$478`
    open fun IsVisible(): Boolean
    open fun IsSimulatingPhysics(BoneName: String): Boolean
    open fun IsAnySimulatingPhysics(): Boolean
    open fun GetUpVector(): Vector
    open fun GetSocketTransform(InSocketName: String, TransformSpace: String /* "RTS_World" | "RTS_Actor" | "RTS_Component" | "RTS_ParentBoneSpace" | "RTS_MAX" */): Transform
    open fun GetSocketRotation(InSocketName: String): Rotator
    open fun GetSocketQuaternion(InSocketName: String): Quat
    open fun GetSocketLocation(InSocketName: String): Vector
    open fun GetShouldUpdatePhysicsVolume(): Boolean
    open fun GetRightVector(): Vector
    open fun GetRelativeTransform(): Transform
    open fun GetPhysicsVolume(): PhysicsVolume
    open fun GetParentComponents(Parents: Array<SceneComponent> = definedExternally): `T$479`
    open fun GetNumChildrenComponents(): Number
    open fun GetForwardVector(): Vector
    open fun GetComponentVelocity(): Vector
    open fun GetChildrenComponents(bIncludeAllDescendants: Boolean, Children: Array<SceneComponent> = definedExternally): `T$480`
    open fun GetChildComponent(ChildIndex: Number): SceneComponent
    open fun GetAttachSocketName(): String
    open fun GetAttachParent(): SceneComponent
    open fun GetAllSocketNames(): Array<String>
    open fun DoesSocketExist(InSocketName: String): Boolean
    open fun DetachFromParent(bMaintainWorldPosition: Boolean, bCallModify: Boolean)
    open fun SetMobile()
    open fun GetComponentBounds(Origin: Vector = definedExternally, BoxExtent: Vector = definedExternally, SphereRadius: Number = definedExternally): `T$153`
    open fun MoveComponentTo(TargetRelativeLocation: Vector, TargetRelativeRotation: Rotator, bEaseOut: Boolean, bEaseIn: Boolean, OverTime: Number, bForceShortestRotationPath: Boolean, MoveAction: String /* "Move" | "Stop" | "Return" | "EMoveComponentAction_MAX" */, LatentInfo: LatentActionInfo)
    open fun PinComponent(PinToWorldTransform: Transform, TrackedGeometry: ARTrackedGeometry, DebugName: String): ARPin
    open fun PinComponentToARPin(Pin: ARPin): Boolean
    open fun PinComponentToTraceResult(TraceResult: ARTraceResult, DebugName: String): ARPin
    open fun UnpinComponent()

    companion object {
        fun Load(ResourceName: String): SceneComponent
        fun Find(Outer: UObject, ResourceName: String): SceneComponent
        fun GetDefaultObject(): SceneComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SceneComponent
        fun C(Other: UObject): SceneComponent
        fun C(Other: Any): SceneComponent
        fun SetMobile(SceneComponent: SceneComponent)
        fun SetMobility(SceneComponent: SceneComponent, Type: String /* "Static" | "Stationary" | "Movable" | "EComponentMobility_MAX" */)
        fun GetComponentBounds(Component: SceneComponent, Origin: Vector = definedExternally, BoxExtent: Vector = definedExternally, SphereRadius: Number = definedExternally): `T$153`
        fun MoveComponentTo(Component: SceneComponent, TargetRelativeLocation: Vector, TargetRelativeRotation: Rotator, bEaseOut: Boolean, bEaseIn: Boolean, OverTime: Number, bForceShortestRotationPath: Boolean, MoveAction: String /* "Move" | "Stop" | "Return" | "EMoveComponentAction_MAX" */, LatentInfo: LatentActionInfo)
        fun PinComponent(ComponentToPin: SceneComponent, PinToWorldTransform: Transform, TrackedGeometry: ARTrackedGeometry, DebugName: String): ARPin
        fun PinComponentToARPin(ComponentToPin: SceneComponent, Pin: ARPin): Boolean
        fun PinComponentToTraceResult(ComponentToPin: SceneComponent, TraceResult: ARTraceResult, DebugName: String): ARPin
        fun UnpinComponent(ComponentToUnpin: SceneComponent)
    }
}

external object ESceneDepthPriorityGroup {
    var SDPG_World: String /* "SDPG_World" */
    var SDPG_Foreground: String /* "SDPG_Foreground" */
    var SDPG_MAX: String /* "SDPG_MAX" */
}

external object EIndirectLightingCacheQuality {
    var ILCQ_Off: String /* "ILCQ_Off" */
    var ILCQ_Point: String /* "ILCQ_Point" */
    var ILCQ_Volume: String /* "ILCQ_Volume" */
    var ILCQ_MAX: String /* "ILCQ_MAX" */
}

external object ELightmapType {
    var Default: String /* "Default" */
    var ForceSurface: String /* "ForceSurface" */
    var ForceVolumetric: String /* "ForceVolumetric" */
    var ELightmapType_MAX: String /* "ELightmapType_MAX" */
}

external object EHLODBatchingPolicy {
    var None: String /* "None" */
    var MeshSection: String /* "MeshSection" */
    var Instancing: String /* "Instancing" */
    var EHLODBatchingPolicy_MAX: String /* "EHLODBatchingPolicy_MAX" */
}

external object EHasCustomNavigableGeometry {
    var No: String /* "No" */
    var Yes: String /* "Yes" */
    var EvenIfNotCollidable: String /* "EvenIfNotCollidable" */
    var DontExport: String /* "DontExport" */
    var EHasCustomNavigableGeometry_MAX: String /* "EHasCustomNavigableGeometry_MAX" */
}

external object EHitProxyPriority {
    var HPP_World: String /* "HPP_World" */
    var HPP_Wireframe: String /* "HPP_Wireframe" */
    var HPP_Foreground: String /* "HPP_Foreground" */
    var HPP_UI: String /* "HPP_UI" */
    var HPP_MAX: String /* "HPP_MAX" */
}

external object ECanBeCharacterBase {
    var ECB_No: String /* "ECB_No" */
    var ECB_Yes: String /* "ECB_Yes" */
    var ECB_Owner: String /* "ECB_Owner" */
    var ECB_MAX: String /* "ECB_MAX" */
}

external open class LightingChannels {
    open var bChannel0: Boolean
    open var bChannel1: Boolean
    open var bChannel2: Boolean
    open fun clone(): LightingChannels

    companion object {
        fun C(Other: UObject): LightingChannels
        fun C(Other: Any): LightingChannels
    }
}

external open class CustomPrimitiveData {
    open var Data: Array<Number>
    open fun clone(): CustomPrimitiveData

    companion object {
        fun C(Other: UObject): CustomPrimitiveData
        fun C(Other: Any): CustomPrimitiveData
    }
}

external object ERuntimeVirtualTextureMainPassType {
    var Never: String /* "Never" */
    var Exclusive: String /* "Exclusive" */
    var Always: String /* "Always" */
    var ERuntimeVirtualTextureMainPassType_MAX: String /* "ERuntimeVirtualTextureMainPassType_MAX" */
}

external object ERayTracingGroupCullingPriority {
    var CP_0_NEVER_CULL: String /* "CP_0_NEVER_CULL" */
    var CP_1: String /* "CP_1" */
    var CP_2: String /* "CP_2" */
    var CP_3: String /* "CP_3" */
    var CP_4_DEFAULT: String /* "CP_4_DEFAULT" */
    var CP_5: String /* "CP_5" */
    var CP_6: String /* "CP_6" */
    var CP_7: String /* "CP_7" */
    var CP_8_QUICKLY_CULL: String /* "CP_8_QUICKLY_CULL" */
    var CP_MAX: String /* "CP_MAX" */
}

external object ERadialImpulseFalloff {
    var RIF_Constant: String /* "RIF_Constant" */
    var RIF_Linear: String /* "RIF_Linear" */
    var RIF_MAX: String /* "RIF_MAX" */
}

external interface `T$481` {
    var HitLocation: Vector
    var HitNormal: Vector
    var BoneName: String
    var OutHit: HitResult
    var `$`: Boolean
}

external interface `T$482` {
    var OutOverlappingComponents: Array<PrimitiveComponent>
}

external interface `T$483` {
    var OverlappingActors: Array<Actor>
}

external interface `T$484` {
    var SectionIndex: Number
    var `$`: MaterialInterface
}

external interface `T$485` {
    var OutPointOnBody: Vector
    var `$`: Number
}

external interface `T$486` {
    var OutActors: Array<Actor>
    var `$`: Boolean
}

external interface `T$487` {
    var OutComponents: Array<PrimitiveComponent>
    var `$`: Boolean
}

external interface `T$488` {
    var OutActors: Array<Actor>
    var `$`: Boolean
}

external interface `T$489` {
    var OutComponents: Array<PrimitiveComponent>
    var `$`: Boolean
}

external open class PrimitiveComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var MinDrawDistance: Number
    open var LDMaxDrawDistance: Number
    open var CachedMaxDrawDistance: Number
    open var DepthPriorityGroup: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */
    open var ViewOwnerDepthPriorityGroup: String /* "SDPG_World" | "SDPG_Foreground" | "SDPG_MAX" */
    open var IndirectLightingCacheQuality: String /* "ILCQ_Off" | "ILCQ_Point" | "ILCQ_Volume" | "ILCQ_MAX" */
    open var LightmapType: String /* "Default" | "ForceSurface" | "ForceVolumetric" | "ELightmapType_MAX" */
    open var bEnableAutoLODGeneration: Boolean
    open var ExcludeForSpecificHLODLevels: Array<Number>
    open var HLODBatchingPolicy: String /* "None" | "MeshSection" | "Instancing" | "EHLODBatchingPolicy_MAX" */
    open var bIsActorTextureStreamingBuiltData: Boolean
    open var bIsValidTextureStreamingBuiltData: Boolean
    open var bNeverDistanceCull: Boolean
    open var bAlwaysCreatePhysicsState: Boolean
    open var bGenerateOverlapEvents: Boolean
    open var bMultiBodyOverlap: Boolean
    open var bTraceComplexOnMove: Boolean
    open var bReturnMaterialOnMove: Boolean
    open var bUseViewOwnerDepthPriorityGroup: Boolean
    open var bAllowCullDistanceVolume: Boolean
    open var bHasMotionBlurVelocityMeshes: Boolean
    open var bVisibleInReflectionCaptures: Boolean
    open var bVisibleInRealTimeSkyCaptures: Boolean
    open var bVisibleInRayTracing: Boolean
    open var bRenderInMainPass: Boolean
    open var bRenderInDepthPass: Boolean
    open var bReceivesDecals: Boolean
    open var bOwnerNoSee: Boolean
    open var bOnlyOwnerSee: Boolean
    open var bTreatAsBackgroundForOcclusion: Boolean
    open var bUseAsOccluder: Boolean
    open var bSelectable: Boolean
    open var bConsiderForActorPlacementWhenHidden: Boolean
    open var bForceMipStreaming: Boolean
    open var bHasPerInstanceHitProxies: Boolean
    open var CastShadow: Boolean
    open var bEmissiveLightSource: Boolean
    open var bAffectDynamicIndirectLighting: Boolean
    open var bAffectDistanceFieldLighting: Boolean
    open var bCastDynamicShadow: Boolean
    open var bCastStaticShadow: Boolean
    open var bCastVolumetricTranslucentShadow: Boolean
    open var bCastContactShadow: Boolean
    open var bSelfShadowOnly: Boolean
    open var bCastFarShadow: Boolean
    open var bCastInsetShadow: Boolean
    open var bCastCinematicShadow: Boolean
    open var bCastHiddenShadow: Boolean
    open var bCastShadowAsTwoSided: Boolean
    open var bLightAsIfStatic: Boolean
    open var bLightAttachmentsAsGroup: Boolean
    open var bExcludeFromLightAttachmentGroup: Boolean
    open var bReceiveMobileCSMShadows: Boolean
    open var bSingleSampleShadowFromStationaryLights: Boolean
    open var bIgnoreRadialImpulse: Boolean
    open var bIgnoreRadialForce: Boolean
    open var bApplyImpulseOnDamage: Boolean
    open var bReplicatePhysicsToAutonomousProxy: Boolean
    open var bFillCollisionUnderneathForNavmesh: Boolean
    open var AlwaysLoadOnClient: Boolean
    open var AlwaysLoadOnServer: Boolean
    open var bUseEditorCompositing: Boolean
    open var bIsBeingMovedByEditor: Boolean
    open var bRenderCustomDepth: Boolean
    open var bVisibleInSceneCaptureOnly: Boolean
    open var bHiddenInSceneCapture: Boolean
    open var bRayTracingFarField: Boolean
    open var bHasNoStreamableTextures: Boolean
    open var bHasCustomNavigableGeometry: String /* "No" | "Yes" | "EvenIfNotCollidable" | "DontExport" | "EHasCustomNavigableGeometry_MAX" */
    open var HitProxyPriority: String /* "HPP_World" | "HPP_Wireframe" | "HPP_Foreground" | "HPP_UI" | "HPP_MAX" */
    open var CanBeCharacterBase: String /* "ECB_No" | "ECB_Yes" | "ECB_Owner" | "ECB_MAX" */
    open var bUseMaxLODAsImposter: Boolean
    open var bBatchImpostersAsInstances: Boolean
    open var CanCharacterStepUpOn: String /* "ECB_No" | "ECB_Yes" | "ECB_Owner" | "ECB_MAX" */
    open var LightingChannels: LightingChannels
    open var RayTracingGroupId: Number
    open var VisibilityId: Number
    open var CustomDepthStencilValue: Number
    open var CustomPrimitiveData: CustomPrimitiveData
    open var CustomPrimitiveDataInternal: CustomPrimitiveData
    open var TranslucencySortPriority: Number
    open var TranslucencySortDistanceOffset: Number
    open var RuntimeVirtualTextures: Array<RuntimeVirtualTexture>
    open var VirtualTextureLodBias: Any
    open var VirtualTextureCullMips: Any
    open var VirtualTextureMinCoverage: Any
    open var VirtualTextureRenderPassType: String /* "Never" | "Exclusive" | "Always" | "ERuntimeVirtualTextureMainPassType_MAX" */
    open var BoundsScale: Number
    open var MoveIgnoreActors: Array<Actor>
    open var MoveIgnoreComponents: Array<PrimitiveComponent>
    open var BodyInstance: BodyInstance
    open var OnComponentHit: UnrealEngineMulticastDelegate<(HitComponent: PrimitiveComponent, OtherActor: Actor, OtherComp: PrimitiveComponent, NormalImpulse: Vector, Hit: HitResult) -> Unit>
    open var OnComponentBeginOverlap: UnrealEngineMulticastDelegate<(OverlappedComponent: PrimitiveComponent, OtherActor: Actor, OtherComp: PrimitiveComponent, OtherBodyIndex: Number, bFromSweep: Boolean, SweepResult: HitResult) -> Unit>
    open var OnComponentEndOverlap: UnrealEngineMulticastDelegate<(OverlappedComponent: PrimitiveComponent, OtherActor: Actor, OtherComp: PrimitiveComponent, OtherBodyIndex: Number) -> Unit>
    open var OnComponentWake: UnrealEngineMulticastDelegate<(WakingComponent: PrimitiveComponent, BoneName: String) -> Unit>
    open var OnComponentSleep: UnrealEngineMulticastDelegate<(SleepingComponent: PrimitiveComponent, BoneName: String) -> Unit>
    open var OnBeginCursorOver: UnrealEngineMulticastDelegate<(TouchedComponent: PrimitiveComponent) -> Unit>
    open var OnEndCursorOver: UnrealEngineMulticastDelegate<(TouchedComponent: PrimitiveComponent) -> Unit>
    open var OnClicked: UnrealEngineMulticastDelegate<(TouchedComponent: PrimitiveComponent, ButtonPressed: Key) -> Unit>
    open var OnReleased: UnrealEngineMulticastDelegate<(TouchedComponent: PrimitiveComponent, ButtonReleased: Key) -> Unit>
    open var OnInputTouchBegin: UnrealEngineMulticastDelegate<(FingerIndex: String /* "Touch1" | "Touch2" | "Touch3" | "Touch4" | "Touch5" | "Touch6" | "Touch7" | "Touch8" | "Touch9" | "Touch10" | "CursorPointerIndex" | "MAX_TOUCHES" | "ETouchIndex_MAX" */, TouchedComponent: PrimitiveComponent) -> Unit>
    open var OnInputTouchEnd: UnrealEngineMulticastDelegate<(FingerIndex: String /* "Touch1" | "Touch2" | "Touch3" | "Touch4" | "Touch5" | "Touch6" | "Touch7" | "Touch8" | "Touch9" | "Touch10" | "CursorPointerIndex" | "MAX_TOUCHES" | "ETouchIndex_MAX" */, TouchedComponent: PrimitiveComponent) -> Unit>
    open var OnInputTouchEnter: UnrealEngineMulticastDelegate<(FingerIndex: String /* "Touch1" | "Touch2" | "Touch3" | "Touch4" | "Touch5" | "Touch6" | "Touch7" | "Touch8" | "Touch9" | "Touch10" | "CursorPointerIndex" | "MAX_TOUCHES" | "ETouchIndex_MAX" */, TouchedComponent: PrimitiveComponent) -> Unit>
    open var OnInputTouchLeave: UnrealEngineMulticastDelegate<(FingerIndex: String /* "Touch1" | "Touch2" | "Touch3" | "Touch4" | "Touch5" | "Touch6" | "Touch7" | "Touch8" | "Touch9" | "Touch10" | "CursorPointerIndex" | "MAX_TOUCHES" | "ETouchIndex_MAX" */, TouchedComponent: PrimitiveComponent) -> Unit>
    open var RayTracingGroupCullingPriority: String /* "CP_0_NEVER_CULL" | "CP_1" | "CP_2" | "CP_3" | "CP_4_DEFAULT" | "CP_5" | "CP_6" | "CP_7" | "CP_8_QUICKLY_CULL" | "CP_MAX" */
    open var CustomDepthStencilWriteMask: String /* "ERSM_Default" | "ERSM_255" | "ERSM_1" | "ERSM_2" | "ERSM_4" | "ERSM_8" | "ERSM_16" | "ERSM_32" | "ERSM_64" | "ERSM_128" | "ERSM_MAX" */
    open var LODParentPrimitive: PrimitiveComponent
    open fun WasActorRecentlyRendered(Tolerance: Number): Boolean
    open fun WakeRigidBody(BoneName: String)
    open fun WakeAllRigidBodies()
    open fun SetWalkableSlopeOverride(NewOverride: WalkableSlopeOverride)
    open fun SetVisibleInSceneCaptureOnly(bValue: Boolean)
    open fun SetVisibleInRayTracing(bNewVisibleInRayTracing: Boolean)
    open fun SetVectorParameterForDefaultCustomPrimitiveData(ParameterName: String, Value: Vector4)
    open fun SetVectorParameterForCustomPrimitiveData(ParameterName: String, Value: Vector4)
    open fun SetUseCCD(InUseCCD: Boolean, BoneName: String)
    open fun SetTranslucentSortPriority(NewTranslucentSortPriority: Number)
    open fun SetTranslucencySortDistanceOffset(NewTranslucencySortDistanceOffset: Number)
    open fun SetSingleSampleShadowFromStationaryLights(bNewSingleSampleShadowFromStationaryLights: Boolean)
    open fun SetSimulatePhysics(bSimulate: Boolean)
    open fun SetScalarParameterForDefaultCustomPrimitiveData(ParameterName: String, Value: Number)
    open fun SetScalarParameterForCustomPrimitiveData(ParameterName: String, Value: Number)
    open fun SetRenderInMainPass(bValue: Boolean)
    open fun SetRenderInDepthPass(bValue: Boolean)
    open fun SetRenderCustomDepth(bValue: Boolean)
    open fun SetReceivesDecals(bNewReceivesDecals: Boolean)
    open fun SetPhysicalMaterialOverride(NewPhysMaterial: PhysicalMaterial)
    open fun SetPhysicsMaxAngularVelocityInRadians(NewMaxAngVel: Number, bAddToCurrent: Boolean, BoneName: String)
    open fun SetPhysicsMaxAngularVelocityInDegrees(NewMaxAngVel: Number, bAddToCurrent: Boolean, BoneName: String)
    open fun SetPhysicsLinearVelocity(NewVel: Vector, bAddToCurrent: Boolean, BoneName: String)
    open fun SetPhysicsAngularVelocityInRadians(NewAngVel: Vector, bAddToCurrent: Boolean, BoneName: String)
    open fun SetPhysicsAngularVelocityInDegrees(NewAngVel: Vector, bAddToCurrent: Boolean, BoneName: String)
    open fun SetOwnerNoSee(bNewOwnerNoSee: Boolean)
    open fun SetOnlyOwnerSee(bNewOnlyOwnerSee: Boolean)
    open fun SetNotifyRigidBodyCollision(bNewNotifyRigidBodyCollision: Boolean)
    open fun SetMaterialByName(MaterialSlotName: String, Material: MaterialInterface)
    open fun SetMaterial(ElementIndex: Number, Material: MaterialInterface)
    open fun SetMassScale(BoneName: String, InMassScale: Number)
    open fun SetMassOverrideInKg(BoneName: String, MassInKg: Number, bOverrideMass: Boolean)
    open fun SetLinearDamping(InDamping: Number)
    open fun SetLightingChannels(bChannel0: Boolean, bChannel1: Boolean, bChannel2: Boolean)
    open fun SetLightAttachmentsAsGroup(bInLightAttachmentsAsGroup: Boolean)
    open fun SetHiddenInSceneCapture(bValue: Boolean)
    open fun SetGenerateOverlapEvents(bInGenerateOverlapEvents: Boolean)
    open fun SetExcludeFromLightAttachmentGroup(bInExcludeFromLightAttachmentGroup: Boolean)
    open fun SetEnableGravity(bGravityEnabled: Boolean)
    open fun SetEmissiveLightSource(NewEmissiveLightSource: Boolean)
    open fun SetDefaultCustomPrimitiveDataVector4(DataIndex: Number, Value: Vector4)
    open fun SetDefaultCustomPrimitiveDataVector3(DataIndex: Number, Value: Vector)
    open fun SetDefaultCustomPrimitiveDataVector2(DataIndex: Number, Value: Vector2D)
    open fun SetDefaultCustomPrimitiveDataFloat(DataIndex: Number, Value: Number)
    open fun SetCustomPrimitiveDataVector4(DataIndex: Number, Value: Vector4)
    open fun SetCustomPrimitiveDataVector3(DataIndex: Number, Value: Vector)
    open fun SetCustomPrimitiveDataVector2(DataIndex: Number, Value: Vector2D)
    open fun SetCustomPrimitiveDataFloat(DataIndex: Number, Value: Number)
    open fun SetCustomDepthStencilWriteMask(WriteMaskBit: String /* "ERSM_Default" | "ERSM_255" | "ERSM_1" | "ERSM_2" | "ERSM_4" | "ERSM_8" | "ERSM_16" | "ERSM_32" | "ERSM_64" | "ERSM_128" | "ERSM_MAX" */)
    open fun SetCustomDepthStencilValue(Value: Number)
    open fun SetMaxDrawDistance(NewCullDistance: Number)
    open fun SetConstraintMode(ConstraintMode: String /* "Default" | "SixDOF" | "YZPlane" | "XZPlane" | "XYPlane" | "CustomPlane" | "None" | "EDOFMode_MAX" */)
    open fun SetCollisionResponseToChannel(Channel: String /* "ECC_WorldStatic" | "ECC_WorldDynamic" | "ECC_Pawn" | "ECC_Visibility" | "ECC_Camera" | "ECC_PhysicsBody" | "ECC_Vehicle" | "ECC_Destructible" | "ECC_EngineTraceChannel1" | "ECC_EngineTraceChannel2" | "ECC_EngineTraceChannel3" | "ECC_EngineTraceChannel4" | "ECC_EngineTraceChannel5" | "ECC_EngineTraceChannel6" | "ECC_GameTraceChannel1" | "ECC_GameTraceChannel2" | "ECC_GameTraceChannel3" | "ECC_GameTraceChannel4" | "ECC_GameTraceChannel5" | "ECC_GameTraceChannel6" | "ECC_GameTraceChannel7" | "ECC_GameTraceChannel8" | "ECC_GameTraceChannel9" | "ECC_GameTraceChannel10" | "ECC_GameTraceChannel11" | "ECC_GameTraceChannel12" | "ECC_GameTraceChannel13" | "ECC_GameTraceChannel14" | "ECC_GameTraceChannel15" | "ECC_GameTraceChannel16" | "ECC_GameTraceChannel17" | "ECC_GameTraceChannel18" | "ECC_OverlapAll_Deprecated" | "ECC_MAX" */, NewResponse: String /* "ECR_Ignore" | "ECR_Overlap" | "ECR_Block" | "ECR_MAX" */)
    open fun SetCollisionResponseToAllChannels(NewResponse: String /* "ECR_Ignore" | "ECR_Overlap" | "ECR_Block" | "ECR_MAX" */)
    open fun SetCollisionProfileName(InCollisionProfileName: String, bUpdateOverlaps: Boolean)
    open fun SetCollisionObjectType(Channel: String /* "ECC_WorldStatic" | "ECC_WorldDynamic" | "ECC_Pawn" | "ECC_Visibility" | "ECC_Camera" | "ECC_PhysicsBody" | "ECC_Vehicle" | "ECC_Destructible" | "ECC_EngineTraceChannel1" | "ECC_EngineTraceChannel2" | "ECC_EngineTraceChannel3" | "ECC_EngineTraceChannel4" | "ECC_EngineTraceChannel5" | "ECC_EngineTraceChannel6" | "ECC_GameTraceChannel1" | "ECC_GameTraceChannel2" | "ECC_GameTraceChannel3" | "ECC_GameTraceChannel4" | "ECC_GameTraceChannel5" | "ECC_GameTraceChannel6" | "ECC_GameTraceChannel7" | "ECC_GameTraceChannel8" | "ECC_GameTraceChannel9" | "ECC_GameTraceChannel10" | "ECC_GameTraceChannel11" | "ECC_GameTraceChannel12" | "ECC_GameTraceChannel13" | "ECC_GameTraceChannel14" | "ECC_GameTraceChannel15" | "ECC_GameTraceChannel16" | "ECC_GameTraceChannel17" | "ECC_GameTraceChannel18" | "ECC_OverlapAll_Deprecated" | "ECC_MAX" */)
    open fun SetCollisionEnabled(NewType: String /* "NoCollision" | "QueryOnly" | "PhysicsOnly" | "QueryAndPhysics" | "ECollisionEnabled_MAX" */)
    open fun SetCenterOfMass(CenterOfMassOffset: Vector, BoneName: String)
    open fun SetCastShadow(NewCastShadow: Boolean)
    open fun SetCastInsetShadow(bInCastInsetShadow: Boolean)
    open fun SetCastHiddenShadow(NewCastHiddenShadow: Boolean)
    open fun SetCastContactShadow(bInCastContactShadow: Boolean)
    open fun SetBoundsScale(NewBoundsScale: Number)
    open fun SetAngularDamping(InDamping: Number)
    open fun SetAllUseCCD(InUseCCD: Boolean)
    open fun SetAllPhysicsLinearVelocity(NewVel: Vector, bAddToCurrent: Boolean)
    open fun SetAllPhysicsAngularVelocityInRadians(NewAngVel: Vector, bAddToCurrent: Boolean)
    open fun SetAllPhysicsAngularVelocityInDegrees(NewAngVel: Vector, bAddToCurrent: Boolean)
    open fun SetAllMassScale(InMassScale: Number)
    open fun ScaleByMomentOfInertia(InputVector: Vector, BoneName: String): Vector
    open fun PutRigidBodyToSleep(BoneName: String)
    open fun SphereTraceComponent(TraceStart: Vector, TraceEnd: Vector, SphereRadius: Number, bTraceComplex: Boolean, bShowTrace: Boolean, bPersistentShowTrace: Boolean, HitLocation: Vector = definedExternally, HitNormal: Vector = definedExternally, BoneName: String = definedExternally, OutHit: HitResult = definedExternally): `T$481`
    open fun SphereOverlapComponent(InSphereCentre: Vector, InSphereRadius: Number, bTraceComplex: Boolean, bShowTrace: Boolean, bPersistentShowTrace: Boolean, HitLocation: Vector = definedExternally, HitNormal: Vector = definedExternally, BoneName: String = definedExternally, OutHit: HitResult = definedExternally): `T$481`
    open fun LineTraceComponent(TraceStart: Vector, TraceEnd: Vector, bTraceComplex: Boolean, bShowTrace: Boolean, bPersistentShowTrace: Boolean, HitLocation: Vector = definedExternally, HitNormal: Vector = definedExternally, BoneName: String = definedExternally, OutHit: HitResult = definedExternally): `T$481`
    open fun IsQueryCollisionEnabled(): Boolean
    open fun IsPhysicsCollisionEnabled(): Boolean
    open fun IsCollisionEnabled(): Boolean
    open fun BoxOverlapComponent(InBoxCentre: Vector, InBox: Box, bTraceComplex: Boolean, bShowTrace: Boolean, bPersistentShowTrace: Boolean, HitLocation: Vector = definedExternally, HitNormal: Vector = definedExternally, BoneName: String = definedExternally, OutHit: HitResult = definedExternally): `T$481`
    open fun IsOverlappingComponent(OtherComp: PrimitiveComponent): Boolean
    open fun IsOverlappingActor(Other: Actor): Boolean
    open fun IsGravityEnabled(): Boolean
    open fun IsAnyRigidBodyAwake(): Boolean
    open fun IgnoreComponentWhenMoving(Component: PrimitiveComponent, bShouldIgnore: Boolean)
    open fun IgnoreActorWhenMoving(Actor: Actor, bShouldIgnore: Boolean)
    open fun GetWalkableSlopeOverride(): WalkableSlopeOverride
    open fun GetPhysicsLinearVelocityAtPoint(Point: Vector, BoneName: String): Vector
    open fun GetPhysicsLinearVelocity(BoneName: String): Vector
    open fun GetPhysicsAngularVelocityInRadians(BoneName: String): Vector
    open fun GetPhysicsAngularVelocityInDegrees(BoneName: String): Vector
    open fun GetOverlappingComponents(OutOverlappingComponents: Array<PrimitiveComponent> = definedExternally): `T$482`
    open fun GetOverlappingActors(OverlappingActors: Array<Actor> = definedExternally, ClassFilter: UnrealEngineClass = definedExternally): `T$483`
    open fun GetNumMaterials(): Number
    open fun GetMaterialFromCollisionFaceIndex(FaceIndex: Number, SectionIndex: Number = definedExternally): `T$484`
    open fun GetMaterial(ElementIndex: Number): MaterialInterface
    open fun GetMassScale(BoneName: String): Number
    open fun GetMass(): Number
    open fun GetLinearDamping(): Number
    open fun GetInertiaTensor(BoneName: String): Vector
    open fun GetGenerateOverlapEvents(): Boolean
    open fun GetCustomPrimitiveDataIndexForVectorParameter(ParameterName: String): Number
    open fun GetCustomPrimitiveDataIndexForScalarParameter(ParameterName: String): Number
    open fun GetCollisionResponseToChannel(Channel: String /* "ECC_WorldStatic" | "ECC_WorldDynamic" | "ECC_Pawn" | "ECC_Visibility" | "ECC_Camera" | "ECC_PhysicsBody" | "ECC_Vehicle" | "ECC_Destructible" | "ECC_EngineTraceChannel1" | "ECC_EngineTraceChannel2" | "ECC_EngineTraceChannel3" | "ECC_EngineTraceChannel4" | "ECC_EngineTraceChannel5" | "ECC_EngineTraceChannel6" | "ECC_GameTraceChannel1" | "ECC_GameTraceChannel2" | "ECC_GameTraceChannel3" | "ECC_GameTraceChannel4" | "ECC_GameTraceChannel5" | "ECC_GameTraceChannel6" | "ECC_GameTraceChannel7" | "ECC_GameTraceChannel8" | "ECC_GameTraceChannel9" | "ECC_GameTraceChannel10" | "ECC_GameTraceChannel11" | "ECC_GameTraceChannel12" | "ECC_GameTraceChannel13" | "ECC_GameTraceChannel14" | "ECC_GameTraceChannel15" | "ECC_GameTraceChannel16" | "ECC_GameTraceChannel17" | "ECC_GameTraceChannel18" | "ECC_OverlapAll_Deprecated" | "ECC_MAX" */): String /* "ECR_Ignore" | "ECR_Overlap" | "ECR_Block" | "ECR_MAX" */
    open fun GetCollisionProfileName(): String
    open fun GetCollisionObjectType(): String /* "ECC_WorldStatic" | "ECC_WorldDynamic" | "ECC_Pawn" | "ECC_Visibility" | "ECC_Camera" | "ECC_PhysicsBody" | "ECC_Vehicle" | "ECC_Destructible" | "ECC_EngineTraceChannel1" | "ECC_EngineTraceChannel2" | "ECC_EngineTraceChannel3" | "ECC_EngineTraceChannel4" | "ECC_EngineTraceChannel5" | "ECC_EngineTraceChannel6" | "ECC_GameTraceChannel1" | "ECC_GameTraceChannel2" | "ECC_GameTraceChannel3" | "ECC_GameTraceChannel4" | "ECC_GameTraceChannel5" | "ECC_GameTraceChannel6" | "ECC_GameTraceChannel7" | "ECC_GameTraceChannel8" | "ECC_GameTraceChannel9" | "ECC_GameTraceChannel10" | "ECC_GameTraceChannel11" | "ECC_GameTraceChannel12" | "ECC_GameTraceChannel13" | "ECC_GameTraceChannel14" | "ECC_GameTraceChannel15" | "ECC_GameTraceChannel16" | "ECC_GameTraceChannel17" | "ECC_GameTraceChannel18" | "ECC_OverlapAll_Deprecated" | "ECC_MAX" */
    open fun GetCollisionEnabled(): String /* "NoCollision" | "QueryOnly" | "PhysicsOnly" | "QueryAndPhysics" | "ECollisionEnabled_MAX" */
    open fun GetClosestPointOnCollision(Point: Vector, OutPointOnBody: Vector = definedExternally, BoneName: String = definedExternally): `T$485`
    open fun GetCenterOfMass(BoneName: String): Vector
    open fun GetAngularDamping(): Number
    open fun CreateDynamicMaterialInstance(ElementIndex: Number, SourceMaterial: MaterialInterface, OptionalName: String): MaterialInstanceDynamic
    open fun CreateMIDForElementFromMaterial(ElementIndex: Number, Parent: MaterialInterface): MaterialInstanceDynamic
    open fun CreateMIDForElement(ElementIndex: Number): MaterialInstanceDynamic
    open fun GetMoveIgnoreComponents(): Array<PrimitiveComponent>
    open fun GetMoveIgnoreActors(): Array<Actor>
    open fun ClearMoveIgnoreComponents()
    open fun ClearMoveIgnoreActors()
    open fun CanCharacterStepUp(Pawn: Pawn): Boolean
    open fun AddVelocityChangeImpulseAtLocation(Impulse: Vector, Location: Vector, BoneName: String)
    open fun AddTorqueInRadians(Torque: Vector, BoneName: String, bAccelChange: Boolean)
    open fun AddTorqueInDegrees(Torque: Vector, BoneName: String, bAccelChange: Boolean)
    open fun AddRadialImpulse(Origin: Vector, Radius: Number, Strength: Number, Falloff: String /* "RIF_Constant" | "RIF_Linear" | "RIF_MAX" */, bVelChange: Boolean)
    open fun AddRadialForce(Origin: Vector, Radius: Number, Strength: Number, Falloff: String /* "RIF_Constant" | "RIF_Linear" | "RIF_MAX" */, bAccelChange: Boolean)
    open fun AddImpulseAtLocation(Impulse: Vector, Location: Vector, BoneName: String)
    open fun AddImpulse(Impulse: Vector, BoneName: String, bVelChange: Boolean)
    open fun AddForceAtLocationLocal(Force: Vector, Location: Vector, BoneName: String)
    open fun AddForceAtLocation(Force: Vector, Location: Vector, BoneName: String)
    open fun AddForce(Force: Vector, BoneName: String, bAccelChange: Boolean)
    open fun AddAngularImpulseInRadians(Impulse: Vector, BoneName: String, bVelChange: Boolean)
    open fun AddAngularImpulseInDegrees(Impulse: Vector, BoneName: String, bVelChange: Boolean)
    open fun ComponentOverlapActors(ComponentTransform: Transform, ObjectTypes: Array<String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */>, ActorClassFilter: UnrealEngineClass, ActorsToIgnore: Array<Actor>, OutActors: Array<Actor> = definedExternally): `T$486`
    open fun ComponentOverlapComponents(ComponentTransform: Transform, ObjectTypes: Array<String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */>, ComponentClassFilter: UnrealEngineClass, ActorsToIgnore: Array<Actor>, OutComponents: Array<PrimitiveComponent> = definedExternally): `T$487`
    open fun SetCastInsetShadowForAllAttachments(bCastInsetShadow: Boolean, bLightAttachmentsAsGroup: Boolean)

    companion object {
        fun Load(ResourceName: String): PrimitiveComponent
        fun Find(Outer: UObject, ResourceName: String): PrimitiveComponent
        fun GetDefaultObject(): PrimitiveComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PrimitiveComponent
        fun C(Other: UObject): PrimitiveComponent
        fun C(Other: Any): PrimitiveComponent
        fun ComponentOverlapActors(Component: PrimitiveComponent, ComponentTransform: Transform, ObjectTypes: Array<String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */>, ActorClassFilter: UnrealEngineClass, ActorsToIgnore: Array<Actor>, OutActors: Array<Actor> = definedExternally): `T$488`
        fun ComponentOverlapComponents(Component: PrimitiveComponent, ComponentTransform: Transform, ObjectTypes: Array<String /* "ObjectTypeQuery1" | "ObjectTypeQuery2" | "ObjectTypeQuery3" | "ObjectTypeQuery4" | "ObjectTypeQuery5" | "ObjectTypeQuery6" | "ObjectTypeQuery7" | "ObjectTypeQuery8" | "ObjectTypeQuery9" | "ObjectTypeQuery10" | "ObjectTypeQuery11" | "ObjectTypeQuery12" | "ObjectTypeQuery13" | "ObjectTypeQuery14" | "ObjectTypeQuery15" | "ObjectTypeQuery16" | "ObjectTypeQuery17" | "ObjectTypeQuery18" | "ObjectTypeQuery19" | "ObjectTypeQuery20" | "ObjectTypeQuery21" | "ObjectTypeQuery22" | "ObjectTypeQuery23" | "ObjectTypeQuery24" | "ObjectTypeQuery25" | "ObjectTypeQuery26" | "ObjectTypeQuery27" | "ObjectTypeQuery28" | "ObjectTypeQuery29" | "ObjectTypeQuery30" | "ObjectTypeQuery31" | "ObjectTypeQuery32" | "ObjectTypeQuery_MAX" | "EObjectTypeQuery_MAX" */>, ComponentClassFilter: UnrealEngineClass, ActorsToIgnore: Array<Actor>, OutComponents: Array<PrimitiveComponent> = definedExternally): `T$489`
        fun SetCastInsetShadowForAllAttachments(PrimitiveComponent: PrimitiveComponent, bCastInsetShadow: Boolean, bLightAttachmentsAsGroup: Boolean)
    }
}

external open class MRMeshBodyHolder : UObject {
    constructor()
    constructor(Outer: UObject)
    open var BodySetup: BodySetup
    open var BodyInstance: BodyInstance

    companion object {
        fun Load(ResourceName: String): MRMeshBodyHolder
        fun Find(Outer: UObject, ResourceName: String): MRMeshBodyHolder
        fun GetDefaultObject(): MRMeshBodyHolder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MRMeshBodyHolder
        fun C(Other: UObject): MRMeshBodyHolder
        fun C(Other: Any): MRMeshBodyHolder
    }
}

external open class MRMeshComponent : PrimitiveComponent {
    constructor()
    constructor(Outer: UObject)
    open var Material: MaterialInterface
    open var WireframeMaterial: MaterialInterface
    open var bCreateMeshProxySections: Boolean
    open var bUpdateNavMeshOnMeshUpdate: Boolean
    open var bNeverCreateCollisionMesh: Boolean
    open var BodyHolders: Array<MRMeshBodyHolder>
    open fun SetWireframeMaterial(InMaterial: MaterialInterface)
    open fun SetWireframeColor(InColor: LinearColor)
    open fun SetUseWireframe(bUseWireframe: Boolean)
    open fun SetEnableMeshOcclusion(bEnable: Boolean)
    open fun RequestNavMeshUpdate()
    open fun IsConnected(): Boolean
    open fun GetWireframeColor(): LinearColor
    open fun GetUseWireframe(): Boolean
    open fun GetEnableMeshOcclusion(): Boolean
    open fun ForceNavMeshUpdate()
    open fun Clear()

    companion object {
        fun Load(ResourceName: String): MRMeshComponent
        fun Find(Outer: UObject, ResourceName: String): MRMeshComponent
        fun GetDefaultObject(): MRMeshComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MRMeshComponent
        fun C(Other: UObject): MRMeshComponent
        fun C(Other: Any): MRMeshComponent
    }
}

external object EARObjectClassification {
    var NotApplicable: String /* "NotApplicable" */
    var Unknown: String /* "Unknown" */
    var Wall: String /* "Wall" */
    var Ceiling: String /* "Ceiling" */
    var Floor: String /* "Floor" */
    var Table: String /* "Table" */
    var Seat: String /* "Seat" */
    var Face: String /* "Face" */
    var Image: String /* "Image" */
    var World: String /* "World" */
    var SceneObject: String /* "SceneObject" */
    var HandMesh: String /* "HandMesh" */
    var Door: String /* "Door" */
    var Window: String /* "Window" */
    var EARObjectClassification_MAX: String /* "EARObjectClassification_MAX" */
}

external object EARSpatialMeshUsageFlags {
    var NotApplicable: String /* "NotApplicable" */
    var Visible: String /* "Visible" */
    var Collision: String /* "Collision" */
    var EARSpatialMeshUsageFlags_MAX: String /* "EARSpatialMeshUsageFlags_MAX" */
}

external open class ARTrackedGeometry : UObject {
    constructor()
    constructor(Outer: UObject)
    open var UniqueId: Guid
    open var LocalToTrackingTransform: Transform
    open var LocalToAlignedTrackingTransform: Transform
    open var TrackingState: String /* "Unknown" | "Tracking" | "NotTracking" | "StoppedTracking" | "EARTrackingState_MAX" */
    open var UnderlyingMesh: MRMeshComponent
    open var ObjectClassification: String /* "NotApplicable" | "Unknown" | "Wall" | "Ceiling" | "Floor" | "Table" | "Seat" | "Face" | "Image" | "World" | "SceneObject" | "HandMesh" | "Door" | "Window" | "EARObjectClassification_MAX" */
    open var SpatialMeshUsageFlags: String /* "NotApplicable" | "Visible" | "Collision" | "EARSpatialMeshUsageFlags_MAX" */
    open var LastUpdateFrameNumber: Number
    open var DebugName: String
    open fun IsTracked(): Boolean
    open fun HasSpatialMeshUsageFlag(InFlag: String /* "NotApplicable" | "Visible" | "Collision" | "EARSpatialMeshUsageFlags_MAX" */): Boolean
    open fun GetUnderlyingMesh(): MRMeshComponent
    open fun GetTrackingState(): String /* "Unknown" | "Tracking" | "NotTracking" | "StoppedTracking" | "EARTrackingState_MAX" */
    open fun GetObjectClassification(): String /* "NotApplicable" | "Unknown" | "Wall" | "Ceiling" | "Floor" | "Table" | "Seat" | "Face" | "Image" | "World" | "SceneObject" | "HandMesh" | "Door" | "Window" | "EARObjectClassification_MAX" */
    override fun GetName(): String
    open fun GetLocalToWorldTransform(): Transform
    open fun GetLocalToTrackingTransform(): Transform
    open fun GetLastUpdateTimestamp(): Number
    open fun GetLastUpdateFrameNumber(): Number
    open fun GetDebugName(): String
    open fun DebugDrawTrackedGeometry(WorldContextObject: UObject, Color: LinearColor, OutlineThickness: Number, PersistForSeconds: Number)

    companion object {
        fun Load(ResourceName: String): ARTrackedGeometry
        fun Find(Outer: UObject, ResourceName: String): ARTrackedGeometry
        fun GetDefaultObject(): ARTrackedGeometry
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARTrackedGeometry
        fun C(Other: UObject): ARTrackedGeometry
        fun C(Other: Any): ARTrackedGeometry
        fun DebugDrawTrackedGeometry(TrackedGeometry: ARTrackedGeometry, WorldContextObject: UObject, Color: LinearColor, OutlineThickness: Number, PersistForSeconds: Number)
    }
}

external open class ARTraceResult {
    open var DistanceFromCamera: Number
    open var TraceChannel: String /* "None" | "FeaturePoint" | "GroundPlane" | "PlaneUsingExtent" | "PlaneUsingBoundaryPolygon" | "EARLineTraceChannels_MAX" */
    open var LocalTransform: Transform
    open var TrackedGeometry: ARTrackedGeometry
    open fun clone(): ARTraceResult
    open fun GetDistanceFromCamera(): Number
    open fun GetLocalToTrackingTransform(): Transform
    open fun GetLocalToWorldTransform(): Transform
    open fun GetLocalTransform(): Transform
    open fun GetTraceChannel(): String /* "None" | "FeaturePoint" | "GroundPlane" | "PlaneUsingExtent" | "PlaneUsingBoundaryPolygon" | "EARLineTraceChannels_MAX" */
    open fun GetTrackedGeometry(): ARTrackedGeometry

    companion object {
        fun C(Other: UObject): ARTraceResult
        fun C(Other: Any): ARTraceResult
        fun GetDistanceFromCamera(TraceResult: ARTraceResult): Number
        fun GetLocalToTrackingTransform(TraceResult: ARTraceResult): Transform
        fun GetLocalToWorldTransform(TraceResult: ARTraceResult): Transform
        fun GetLocalTransform(TraceResult: ARTraceResult): Transform
        fun GetTraceChannel(TraceResult: ARTraceResult): String /* "None" | "FeaturePoint" | "GroundPlane" | "PlaneUsingExtent" | "PlaneUsingBoundaryPolygon" | "EARLineTraceChannels_MAX" */
        fun GetTrackedGeometry(TraceResult: ARTraceResult): ARTrackedGeometry
    }
}

external object EHMDTrackingOrigin {
    var Floor: String /* "Floor" */
    var Eye: String /* "Eye" */
    var Stage: String /* "Stage" */
    var EHMDTrackingOrigin_MAX: String /* "EHMDTrackingOrigin_MAX" */
}

external interface `T$490` {
    var X: Number
    var Y: Number
}

external interface `T$491` {
    var A: Vector2D
}

external interface `T$492` {
    var OutDir: Vector2D
    var OutLength: Any
}

external open class Vector2D {
    open var X: Number
    open var Y: Number
    open fun clone(): Vector2D
    open fun ToText(): String
    open fun ToString(): String
    open fun Add_Vector2DFloat(B: Any): Vector2D
    open fun Add_Vector2DVector2D(B: Vector2D): Vector2D
    open fun BreakVector2D(X: Any = definedExternally, Y: Any = definedExternally): `T$490`
    open fun ClampAxes2D(MinAxisVal: Any, MaxAxisVal: Any): Vector2D
    open fun ToIntPoint(): IntPoint
    open fun ToVector(Z: Number): Vector
    open fun CrossProduct(B: Vector2D): Any
    open fun Distance2D(v2: Vector2D): Any
    open fun DistanceSquared2D(v2: Vector2D): Any
    open fun Divide_Vector2DFloat(B: Any): Vector2D
    open fun Divide_Vector2DVector2D(B: Vector2D): Vector2D
    open fun DotProduct(B: Vector2D): Any
    open fun Equal(B: Vector2D, ErrorTolerance: Number): Boolean
    open fun EqualExactly(B: Vector2D): Boolean
    open fun GetAbs2D(): Vector2D
    open fun GetAbsMax2D(): Any
    open fun GetMax2D(): Any
    open fun GetMin2D(): Any
    open fun GetRotated2D(AngleDeg: Number): Vector2D
    open fun IsNearlyZero2D(Tolerance: Number): Boolean
    open fun IsZero2D(): Boolean
    open fun MakeBox2D(Max: Vector2D): Box2D
    open fun Multiply_Vector2DFloat(B: Any): Vector2D
    open fun Multiply_Vector2DVector2D(B: Vector2D): Vector2D
    open fun Negated2D(): Vector2D
    open fun Normalize2D(): Vector2D
    open fun NormalizeInPlace(Tolerance: Number = definedExternally): `T$491`
    open fun NormalSafe(Tolerance: Number): Vector2D
    open fun NotEqual(B: Vector2D, ErrorTolerance: Number): Boolean
    open fun NotEqualExactly(B: Vector2D): Boolean
    open fun Set2D(X: Any = definedExternally, Y: Any = definedExternally): `T$491`
    open fun Spherical2DToUnitCartesian(): Vector
    open fun Subtract_Vector2DFloat(B: Any): Vector2D
    open fun Subtract_Vector2DVector2D(B: Vector2D): Vector2D
    open fun ToDirectionAndLength(OutDir: Vector2D = definedExternally, OutLength: Any = definedExternally): `T$492`
    open fun ToRounded(): Vector2D
    open fun ToSign(): Vector2D
    open fun Vector2DInterpTo(Target: Vector2D, DeltaTime: Number, InterpSpeed: Number): Vector2D
    open fun Vector2DInterpTo_Constant(Target: Vector2D, DeltaTime: Number, InterpSpeed: Number): Vector2D
    open fun Vector2DLength(): Any
    open fun Vector2DLengthSquared(): Any
    open fun SetSpectatorScreenModeTexturePlusEyeLayout(EyeRectMax: Vector2D, TextureRectMin: Vector2D, TextureRectMax: Vector2D, bDrawEyeFirst: Boolean, bClearBlack: Boolean, bUseAlpha: Boolean)
    open fun LineTraceTrackedObjects(bTestFeaturePoints: Boolean, bTestGroundPlane: Boolean, bTestPlaneExtents: Boolean, bTestPlaneBoundaryPolygon: Boolean): Array<ARTraceResult>

    companion object {
        fun C(Other: UObject): Vector2D
        fun C(Other: Any): Vector2D
        fun ToText(InVec: Vector2D): String
        fun ToString(InVec: Vector2D): String
        fun Add_Vector2DFloat(A: Vector2D, B: Any): Vector2D
        fun Add_Vector2DVector2D(A: Vector2D, B: Vector2D): Vector2D
        fun BreakVector2D(InVec: Vector2D, X: Any = definedExternally, Y: Any = definedExternally): `T$490`
        fun ClampAxes2D(A: Vector2D, MinAxisVal: Any, MaxAxisVal: Any): Vector2D
        fun ToIntPoint(InVector2D: Vector2D): IntPoint
        fun ToVector(InVector2D: Vector2D, Z: Number): Vector
        fun CrossProduct(A: Vector2D, B: Vector2D): Any
        fun Distance2D(v1: Vector2D, v2: Vector2D): Any
        fun DistanceSquared2D(v1: Vector2D, v2: Vector2D): Any
        fun Divide_Vector2DFloat(A: Vector2D, B: Any): Vector2D
        fun Divide_Vector2DVector2D(A: Vector2D, B: Vector2D): Vector2D
        fun DotProduct(A: Vector2D, B: Vector2D): Any
        fun Equal(A: Vector2D, B: Vector2D, ErrorTolerance: Number): Boolean
        fun EqualExactly(A: Vector2D, B: Vector2D): Boolean
        fun GetAbs2D(A: Vector2D): Vector2D
        fun GetAbsMax2D(A: Vector2D): Any
        fun GetMax2D(A: Vector2D): Any
        fun GetMin2D(A: Vector2D): Any
        fun GetRotated2D(A: Vector2D, AngleDeg: Number): Vector2D
        fun IsNearlyZero2D(A: Vector2D, Tolerance: Number): Boolean
        fun IsZero2D(A: Vector2D): Boolean
        fun MakeBox2D(Min: Vector2D, Max: Vector2D): Box2D
        fun Multiply_Vector2DFloat(A: Vector2D, B: Any): Vector2D
        fun Multiply_Vector2DVector2D(A: Vector2D, B: Vector2D): Vector2D
        fun Negated2D(A: Vector2D): Vector2D
        fun Normalize2D(A: Vector2D): Vector2D
        fun NormalizeInPlace(A: Vector2D = definedExternally, Tolerance: Number = definedExternally): `T$491`
        fun NormalSafe(A: Vector2D, Tolerance: Number): Vector2D
        fun NotEqual(A: Vector2D, B: Vector2D, ErrorTolerance: Number): Boolean
        fun NotEqualExactly(A: Vector2D, B: Vector2D): Boolean
        fun Set2D(A: Vector2D = definedExternally, X: Any = definedExternally, Y: Any = definedExternally): `T$491`
        fun Spherical2DToUnitCartesian(A: Vector2D): Vector
        fun Subtract_Vector2DFloat(A: Vector2D, B: Any): Vector2D
        fun Subtract_Vector2DVector2D(A: Vector2D, B: Vector2D): Vector2D
        fun ToDirectionAndLength(A: Vector2D, OutDir: Vector2D = definedExternally, OutLength: Any = definedExternally): `T$492`
        fun ToRounded(A: Vector2D): Vector2D
        fun ToSign(A: Vector2D): Vector2D
        fun Vector2DInterpTo(Current: Vector2D, Target: Vector2D, DeltaTime: Number, InterpSpeed: Number): Vector2D
        fun Vector2DInterpTo_Constant(Current: Vector2D, Target: Vector2D, DeltaTime: Number, InterpSpeed: Number): Vector2D
        fun Vector2DLength(A: Vector2D): Any
        fun Vector2DLengthSquared(A: Vector2D): Any
        fun SetSpectatorScreenModeTexturePlusEyeLayout(EyeRectMin: Vector2D, EyeRectMax: Vector2D, TextureRectMin: Vector2D, TextureRectMax: Vector2D, bDrawEyeFirst: Boolean, bClearBlack: Boolean, bUseAlpha: Boolean)
        fun LineTraceTrackedObjects(ScreenCoord: Vector2D, bTestFeaturePoints: Boolean, bTestGroundPlane: Boolean, bTestPlaneExtents: Boolean, bTestPlaneBoundaryPolygon: Boolean): Array<ARTraceResult>
        fun GenerateDynamicImageResource(InDynamicBrushName: String): Vector2D
        fun MakeVector2D(X: Any, Y: Any): Vector2D
        fun Vector2D_One(): Vector2D
        fun Vector2D_Unit45Deg(): Vector2D
        fun Vector2D_Zero(): Vector2D
        fun NextSobolCell2D(index: Number, NumCells: Number, PreviousValue: Vector2D): Vector2D
        fun RandomSobolCell2D(index: Number, NumCells: Number, Cell: Vector2D, Seed: Vector2D): Vector2D
        fun GetMousePositionOnPlatform(): Vector2D
        fun GetPlayAreaBounds(Origin: String /* "Floor" | "Eye" | "Stage" | "EHMDTrackingOrigin_MAX" */): Vector2D
    }
}

external interface `T$493` {
    var SpringState: VectorSpringState
}

external open class VectorSpringState {
    open fun clone(): VectorSpringState
    open fun ResetVectorSpringState(): `T$493`
    open fun SetVectorSpringStateVelocity(Velocity: Vector = definedExternally): `T$493`

    companion object {
        fun C(Other: UObject): VectorSpringState
        fun C(Other: Any): VectorSpringState
        fun ResetVectorSpringState(SpringState: VectorSpringState = definedExternally): `T$493`
        fun SetVectorSpringStateVelocity(SpringState: VectorSpringState = definedExternally, Velocity: Vector = definedExternally): `T$493`
    }
}

external interface `T$494` {
    var Vertices: Array<Vector>
    var Triangles: Array<Number>
    var Normals: Array<Vector>
    var UVs: Array<Vector2D>
    var Tangents: Array<ProcMeshTangent>
}

external interface `T$495` {
    var Segment1Point: Vector
    var Segment2Point: Vector
}

external interface `T$496` {
    var Azimuth: Number
    var Elevation: Number
}

external interface `T$497` {
    var OutSlopePitchDegreeAngle: Number
    var OutSlopeRollDegreeAngle: Number
}

external interface `T$498` {
    var Yaw: Number
    var Pitch: Number
}

external interface `T$499` {
    var T: Number
    var Intersection: Vector
    var `$`: Boolean
}

external interface `T$500` {
    var A: Vector
}

external interface `T$501` {
    var SpringState: VectorSpringState
    var `$`: Vector
}

external interface `T$502` {
    var Distance: Number
    var `$`: Actor
}

external interface `T$503` {
    var OutJointPos: Vector
    var OutEndPos: Vector
}

external interface `T$504` {
    var CameraOrigin: Vector
    var CameraRotation: Rotator
    var HFOV: Number
    var VFOV: Number
    var CameraDistance: Number
    var NearPlane: Number
    var FarPlane: Number
}

external interface `T$505` {
    var Origin: Vector
    var Rotation: Rotator
    var LeftFOV: Number
    var RightFOV: Number
    var TopFOV: Number
    var BottomFOV: Number
    var Distance: Number
    var NearPlane: Number
    var FarPlane: Number
    var IsActive: Boolean
}

external interface `T$506` {
    var OutClassification: String /* "NotApplicable" | "Unknown" | "Wall" | "Ceiling" | "Floor" | "Table" | "Seat" | "Face" | "Image" | "World" | "SceneObject" | "HandMesh" | "Door" | "Window" | "EARObjectClassification_MAX" */
    var OutClassificationLocation: Vector
    var `$`: Boolean
}

external interface `T$507` {
    var Vertices: Array<Vector>
    var Triangles: Array<Number>
    var Normals: Array<Vector>
    var UVs: Array<Vector2D>
    var Tangents: Array<ProcMeshTangent>
}

external open class Vector {
    open var X: Number
    open var Y: Number
    open var Z: Number
    open fun clone(): Vector
    open fun GenerateBoxMesh(Vertices: Array<Vector> = definedExternally, Triangles: Array<Number> = definedExternally, Normals: Array<Vector> = definedExternally, UVs: Array<Vector2D> = definedExternally, Tangents: Array<ProcMeshTangent> = definedExternally): `T$494`
    open fun GetLevelViewportCameraInfo(CameraRotation: Rotator = definedExternally): `T$432`
    open fun SetLevelViewportCameraInfo(CameraRotation: Rotator)
    open fun SegmentIntersection2D(SegmentEndA: Vector, SegmentStartB: Vector, SegmentEndB: Vector, IntersectionPoint: Vector = definedExternally): `T$447`
    open fun GetSelectionBounds(BoxExtent: Vector = definedExternally, SphereRadius: Number = definedExternally): `T$153`
    open fun ToText(): String
    open fun ToString(): String
    open fun Add_VectorFloat(B: Any): Vector
    open fun Add_VectorInt(B: Number): Vector
    open fun Add_VectorVector(B: Vector): Vector
    open fun BreakVector(X: Any = definedExternally, Y: Any = definedExternally, Z: Any = definedExternally): `T$50`
    open fun ClampVectorSize(Min: Any, Max: Any): Vector
    open fun ToLinearColor(): LinearColor
    open fun ToQuaternion(): Quat
    open fun RotationFromXVector(): Rotator
    open fun ToTransform(): Transform
    open fun ToVector2D(): Vector2D
    open fun CrossProduct(B: Vector): Vector
    open fun Divide_VectorFloat(B: Any): Vector
    open fun Divide_VectorInt(B: Number): Vector
    open fun Divide_VectorVector(B: Vector): Vector
    open fun DotProduct(B: Vector): Any
    open fun DynamicWeightedMovingAverageVector(PreviousSample: Vector, MaxDistance: Number, MinWeight: Number, MaxWeight: Number): Vector
    open fun Equal(B: Vector, ErrorTolerance: Number): Boolean
    open fun EqualExactly(B: Vector): Boolean
    open fun FindClosestPointOnLine(LineOrigin: Vector, LineDirection: Vector): Vector
    open fun FindClosestPointOnSegment(SegmentStart: Vector, SegmentEnd: Vector): Vector
    open fun FindLookAtRotation(Target: Vector): Rotator
    open fun FindNearestPointsOnLineSegments(Segment1End: Vector, Segment2Start: Vector, Segment2End: Vector, Segment1Point: Vector = definedExternally, Segment2Point: Vector = definedExternally): `T$495`
    open fun Truncate(): IntVector
    open fun GetAzimuthAndElevation(ReferenceFrame: Transform, Azimuth: Number = definedExternally, Elevation: Number = definedExternally): `T$496`
    open fun GetUnitDirection(To: Vector): Vector
    open fun GetMaxElement(): Any
    open fun GetMinElement(): Any
    open fun GetPointDistanceToLine(LineOrigin: Vector, LineDirection: Vector): Number
    open fun GetPointDistanceToSegment(SegmentStart: Vector, SegmentEnd: Vector): Number
    open fun GetReflectionVector(SurfaceNormal: Vector): Vector
    open fun GetSlopeDegreeAngles(FloorNormal: Vector, UpVector: Vector, OutSlopePitchDegreeAngle: Number = definedExternally, OutSlopeRollDegreeAngle: Number = definedExternally): `T$497`
    open fun GetYawPitchFromVector(Yaw: Number = definedExternally, Pitch: Number = definedExternally): `T$498`
    open fun RotateVector(B: Rotator): Vector
    open fun IsPointInBox(BoxOrigin: Vector, BoxExtent: Vector): Boolean
    open fun IsPointInBoxWithTransform(BoxWorldTransform: Transform, BoxExtent: Vector): Boolean
    open fun UnrotateVector(B: Rotator): Vector
    open fun LinePlaneIntersection(LineEnd: Vector, APlane: Plane, T: Number = definedExternally, Intersection: Vector = definedExternally): `T$499`
    open fun LinePlaneIntersection(LineEnd: Vector, PlaneOrigin: Vector, PlaneNormal: Vector, T: Number = definedExternally, Intersection: Vector = definedExternally): `T$499`
    open fun MakeBox(Max: Vector): Box
    open fun MakeBoxSphereBounds(BoxExtent: Vector, SphereRadius: Number): BoxSphereBounds
    open fun MakePlaneFromPointAndNormal(Normal: Vector): Plane
    open fun MakeRotationFromAxes(Right: Vector, Up: Vector): Rotator
    open fun MakeRotFromX(): Rotator
    open fun MakeRotFromXY(Y: Vector): Rotator
    open fun MakeRotFromXZ(Z: Vector): Rotator
    open fun MakeRotFromY(): Rotator
    open fun MakeRotFromYX(X: Vector): Rotator
    open fun MakeRotFromYZ(Z: Vector): Rotator
    open fun MakeRotFromZ(): Rotator
    open fun MakeRotFromZX(X: Vector): Rotator
    open fun MakeRotFromZY(Y: Vector): Rotator
    open fun MakeTransform(Rotation: Rotator, Scale: Vector): Transform
    open fun MirrorVectorByNormal(InNormal: Vector): Vector
    open fun Multiply_VectorFloat(B: Any): Vector
    open fun Multiply_VectorInt(B: Number): Vector
    open fun Multiply_VectorVector(B: Vector): Vector
    open fun NegateVector(): Vector
    open fun Normalize(Tolerance: Number): Vector
    open fun NotEqual(B: Vector, ErrorTolerance: Number): Boolean
    open fun NotEqualExactly(B: Vector): Boolean
    open fun ProjectPointOnToPlane(PlaneBase: Vector, PlaneNormal: Vector): Vector
    open fun ProjectVectorOnToPlane(PlaneNormal: Vector): Vector
    open fun ProjectVectorOnToVector(Target: Vector): Vector
    open fun MakefromEuler(): Quat
    open fun RandomPointInBoundingBox(HalfSize: Vector): Vector
    open fun RandomPointInBoundingBoxFromStream(HalfSize: Vector, Stream: RandomStream): Vector
    open fun RandomUnitVectorInConeInDegrees(ConeHalfAngleInDegrees: Number): Vector
    open fun RandomUnitVectorInConeInDegreesFromStream(ConeHalfAngleInDegrees: Number, Stream: RandomStream): Vector
    open fun RandomUnitVectorInConeInRadians(ConeHalfAngleInRadians: Number): Vector
    open fun RandomUnitVectorInConeInRadiansFromStream(ConeHalfAngleInRadians: Number, Stream: RandomStream): Vector
    open fun RandomUnitVectorInEllipticalConeInDegrees(MaxYawInDegrees: Number, MaxPitchInDegrees: Number): Vector
    open fun RandomUnitVectorInEllipticalConeInDegreesFromStream(MaxYawInDegrees: Number, MaxPitchInDegrees: Number, Stream: RandomStream): Vector
    open fun RandomUnitVectorInEllipticalConeInRadians(MaxYawInRadians: Number, MaxPitchInRadians: Number): Vector
    open fun RandomUnitVectorInEllipticalConeInRadiansFromStream(MaxYawInRadians: Number, MaxPitchInRadians: Number, Stream: RandomStream): Vector
    open fun RotateVectorAroundAxis(AngleDeg: Number, Axis: Vector): Vector
    open fun RotatorFromAxisAndAngle(Angle: Number): Rotator
    open fun SelectVector(B: Vector, bPickA: Boolean): Vector
    open fun Subtract_VectorFloat(B: Any): Vector
    open fun Subtract_VectorInt(B: Number): Vector
    open fun Subtract_VectorVector(B: Vector): Vector
    open fun Ease(B: Vector, Alpha: Number, EasingFunc: String /* "Linear" | "Step" | "SinusoidalIn" | "SinusoidalOut" | "SinusoidalInOut" | "EaseIn" | "EaseOut" | "EaseInOut" | "ExpoIn" | "ExpoOut" | "ExpoInOut" | "CircularIn" | "CircularOut" | "CircularInOut" | "EEasingFunc_MAX" */, BlendExp: Number, Steps: Number): Vector
    open fun Vector_AddBounded(InAddVect: Vector = definedExternally, InRadius: Number = definedExternally): `T$500`
    open fun Vector_Assign(InVector: Vector = definedExternally): `T$500`
    open fun Vector_BoundedToBox(InBoxMin: Vector, InBoxMax: Vector): Vector
    open fun Vector_BoundedToCube(InRadius: Number): Vector
    open fun Vector_ClampSize2D(Min: Any, Max: Any): Vector
    open fun Vector_ClampSizeMax(Max: Any): Vector
    open fun Vector_ClampSizeMax2D(Max: Any): Vector
    open fun Vector_ComponentMax(B: Vector): Vector
    open fun Vector_ComponentMin(B: Vector): Vector
    open fun Vector_CosineAngle2D(B: Vector): Any
    open fun Distance(v2: Vector): Any
    open fun Distance2D(v2: Vector): Any
    open fun Distance2DSquared(v2: Vector): Any
    open fun DistanceSquared(v2: Vector): Any
    open fun Vector_GetAbs(): Vector
    open fun Vector_GetAbsMax(): Any
    open fun Vector_GetAbsMin(): Any
    open fun Vector_GetProjection(): Vector
    open fun Vector_GetSignVector(): Vector
    open fun Vector_HeadingAngle(): Any
    open fun Vector_IsNAN(): Boolean
    open fun Vector_IsNearlyZero(Tolerance: Number): Boolean
    open fun IsNormal(): Boolean
    open fun IsUniform(Tolerance: Number): Boolean
    open fun IsUnit(SquaredLenthTolerance: Number): Boolean
    open fun Vector_IsZero(): Boolean
    open fun Vector_MirrorByPlane(InPlane: Plane): Vector
    open fun Normalize2D(Tolerance: Number): Vector
    open fun NormalizeInPlace(Tolerance: Number = definedExternally): `T$500`
    open fun NormalUnsafe(): Vector
    open fun Vector_ProjectOnToNormal(InNormal: Vector): Vector
    open fun Reciprocal(): Vector
    open fun Vector_Set(X: Any = definedExternally, Y: Any = definedExternally, Z: Any = definedExternally): `T$500`
    open fun Vector_SnappedToGrid(InGridSize: Number): Vector
    open fun Vector_ToDegrees(): Vector
    open fun Vector_ToRadians(): Vector
    open fun Vector_UnitCartesianToSpherical(): Vector2D
    open fun Vector_UnwindEuler(): `T$500`
    open fun VectorSpringInterp(Target: Vector, SpringState: VectorSpringState = definedExternally, Stiffness: Number = definedExternally, CriticalDampingFactor: Number = definedExternally, DeltaTime: Number = definedExternally, Mass: Number = definedExternally, TargetVelocityAmount: Number = definedExternally, bClamp: Boolean = definedExternally, MinValue: Vector = definedExternally, MaxValue: Vector = definedExternally, bInitializeFromTarget: Boolean = definedExternally): `T$501`
    open fun VInterpTo(Target: Vector, DeltaTime: Number, InterpSpeed: Number): Vector
    open fun VInterpTo_Constant(Target: Vector, DeltaTime: Number, InterpSpeed: Number): Vector
    open fun Lerp(B: Vector, Alpha: Number): Vector
    open fun VectorLength(): Any
    open fun VectorLengthSquared(): Any
    open fun VectorLengthXY(): Any
    open fun VectorLengthXYSquared(): Any
    open fun WeightedMovingAverageVector(PreviousSample: Vector, Weight: Number): Vector
    open fun FindNearestActor(ActorsToCheck: Array<Actor>, Distance: Number = definedExternally): `T$502`
    open fun CalculateDirection(BaseRotation: Rotator): Number
    open fun TwoBoneIKFunction(JointPos: Vector, EndPos: Vector, JointTarget: Vector, Effector: Vector, OutJointPos: Vector = definedExternally, OutEndPos: Vector = definedExternally, bAllowStretching: Boolean = definedExternally, StartStretchRatio: Number = definedExternally, MaxStretchScale: Number = definedExternally): `T$503`
    open fun IsValidAIDirection(): Boolean
    open fun IsValidAILocation(): Boolean
    open fun GetPositionalTrackingCameraParameters(CameraRotation: Rotator = definedExternally, HFOV: Number = definedExternally, VFOV: Number = definedExternally, CameraDistance: Number = definedExternally, NearPlane: Number = definedExternally, FarPlane: Number = definedExternally): `T$504`
    open fun GetTrackingSensorParameters(Rotation: Rotator = definedExternally, LeftFOV: Number = definedExternally, RightFOV: Number = definedExternally, TopFOV: Number = definedExternally, BottomFOV: Number = definedExternally, Distance: Number = definedExternally, NearPlane: Number = definedExternally, FarPlane: Number = definedExternally, IsActive: Boolean = definedExternally, index: Number = definedExternally): `T$505`
    open fun AddAREnvironmentProbe(Extent: Vector): Boolean
    open fun GetObjectClassificationAtLocation(OutClassification: String /* "NotApplicable" | "Unknown" | "Wall" | "Ceiling" | "Floor" | "Table" | "Seat" | "Face" | "Image" | "World" | "SceneObject" | "HandMesh" | "Door" | "Window" | "EARObjectClassification_MAX" */ = definedExternally, OutClassificationLocation: Vector = definedExternally, MaxLocationDiff: Number = definedExternally): `T$506`
    open fun LineTraceTrackedObjects3D(End: Vector, bTestFeaturePoints: Boolean, bTestGroundPlane: Boolean, bTestPlaneExtents: Boolean, bTestPlaneBoundaryPolygon: Boolean): Array<ARTraceResult>
    open fun SetARWorldOriginLocationAndRotation(OriginRotation: Rotator, bIsTransformInWorldSpace: Boolean, bMaintainUpDirection: Boolean)

    companion object {
        fun C(Other: UObject): Vector
        fun C(Other: Any): Vector
        fun GenerateBoxMesh(BoxRadius: Vector, Vertices: Array<Vector> = definedExternally, Triangles: Array<Number> = definedExternally, Normals: Array<Vector> = definedExternally, UVs: Array<Vector2D> = definedExternally, Tangents: Array<ProcMeshTangent> = definedExternally): `T$507`
        fun GetLevelViewportCameraInfo(CameraLocation: Vector = definedExternally, CameraRotation: Rotator = definedExternally): `T$432`
        fun SetLevelViewportCameraInfo(CameraLocation: Vector, CameraRotation: Rotator)
        fun SegmentIntersection2D(SegmentStartA: Vector, SegmentEndA: Vector, SegmentStartB: Vector, SegmentEndB: Vector, IntersectionPoint: Vector = definedExternally): `T$447`
        fun GetSelectionBounds(Origin: Vector = definedExternally, BoxExtent: Vector = definedExternally, SphereRadius: Number = definedExternally): `T$153`
        fun ToText(InVec: Vector): String
        fun ToString(InVec: Vector): String
        fun Add_VectorFloat(A: Vector, B: Any): Vector
        fun Add_VectorInt(A: Vector, B: Number): Vector
        fun Add_VectorVector(A: Vector, B: Vector): Vector
        fun BreakVector(InVec: Vector, X: Any = definedExternally, Y: Any = definedExternally, Z: Any = definedExternally): `T$50`
        fun ClampVectorSize(A: Vector, Min: Any, Max: Any): Vector
        fun ToLinearColor(InVec: Vector): LinearColor
        fun ToQuaternion(InVec: Vector): Quat
        fun RotationFromXVector(InVec: Vector): Rotator
        fun ToTransform(InLocation: Vector): Transform
        fun ToVector2D(InVector: Vector): Vector2D
        fun CrossProduct(A: Vector, B: Vector): Vector
        fun Divide_VectorFloat(A: Vector, B: Any): Vector
        fun Divide_VectorInt(A: Vector, B: Number): Vector
        fun Divide_VectorVector(A: Vector, B: Vector): Vector
        fun DotProduct(A: Vector, B: Vector): Any
        fun DynamicWeightedMovingAverageVector(CurrentSample: Vector, PreviousSample: Vector, MaxDistance: Number, MinWeight: Number, MaxWeight: Number): Vector
        fun Equal(A: Vector, B: Vector, ErrorTolerance: Number): Boolean
        fun EqualExactly(A: Vector, B: Vector): Boolean
        fun FindClosestPointOnLine(Point: Vector, LineOrigin: Vector, LineDirection: Vector): Vector
        fun FindClosestPointOnSegment(Point: Vector, SegmentStart: Vector, SegmentEnd: Vector): Vector
        fun FindLookAtRotation(Start: Vector, Target: Vector): Rotator
        fun FindNearestPointsOnLineSegments(Segment1Start: Vector, Segment1End: Vector, Segment2Start: Vector, Segment2End: Vector, Segment1Point: Vector = definedExternally, Segment2Point: Vector = definedExternally): `T$495`
        fun Truncate(InVector: Vector): IntVector
        fun GetAzimuthAndElevation(InDirection: Vector, ReferenceFrame: Transform, Azimuth: Number = definedExternally, Elevation: Number = definedExternally): `T$496`
        fun GetUnitDirection(From: Vector, To: Vector): Vector
        fun GetMaxElement(A: Vector): Any
        fun GetMinElement(A: Vector): Any
        fun GetPointDistanceToLine(Point: Vector, LineOrigin: Vector, LineDirection: Vector): Number
        fun GetPointDistanceToSegment(Point: Vector, SegmentStart: Vector, SegmentEnd: Vector): Number
        fun GetReflectionVector(Direction: Vector, SurfaceNormal: Vector): Vector
        fun GetSlopeDegreeAngles(MyRightYAxis: Vector, FloorNormal: Vector, UpVector: Vector, OutSlopePitchDegreeAngle: Number = definedExternally, OutSlopeRollDegreeAngle: Number = definedExternally): `T$497`
        fun GetYawPitchFromVector(InVec: Vector, Yaw: Number = definedExternally, Pitch: Number = definedExternally): `T$498`
        fun RotateVector(A: Vector, B: Rotator): Vector
        fun IsPointInBox(Point: Vector, BoxOrigin: Vector, BoxExtent: Vector): Boolean
        fun IsPointInBoxWithTransform(Point: Vector, BoxWorldTransform: Transform, BoxExtent: Vector): Boolean
        fun UnrotateVector(A: Vector, B: Rotator): Vector
        fun LinePlaneIntersection(LineStart: Vector, LineEnd: Vector, APlane: Plane, T: Number = definedExternally, Intersection: Vector = definedExternally): `T$499`
        fun LinePlaneIntersection(LineStart: Vector, LineEnd: Vector, PlaneOrigin: Vector, PlaneNormal: Vector, T: Number = definedExternally, Intersection: Vector = definedExternally): `T$499`
        fun MakeBox(Min: Vector, Max: Vector): Box
        fun MakeBoxSphereBounds(Origin: Vector, BoxExtent: Vector, SphereRadius: Number): BoxSphereBounds
        fun MakePlaneFromPointAndNormal(Point: Vector, Normal: Vector): Plane
        fun MakeRotationFromAxes(Forward: Vector, Right: Vector, Up: Vector): Rotator
        fun MakeRotFromX(X: Vector): Rotator
        fun MakeRotFromXY(X: Vector, Y: Vector): Rotator
        fun MakeRotFromXZ(X: Vector, Z: Vector): Rotator
        fun MakeRotFromY(Y: Vector): Rotator
        fun MakeRotFromYX(Y: Vector, X: Vector): Rotator
        fun MakeRotFromYZ(Y: Vector, Z: Vector): Rotator
        fun MakeRotFromZ(Z: Vector): Rotator
        fun MakeRotFromZX(Z: Vector, X: Vector): Rotator
        fun MakeRotFromZY(Z: Vector, Y: Vector): Rotator
        fun MakeTransform(Location: Vector, Rotation: Rotator, Scale: Vector): Transform
        fun MirrorVectorByNormal(InVect: Vector, InNormal: Vector): Vector
        fun Multiply_VectorFloat(A: Vector, B: Any): Vector
        fun Multiply_VectorInt(A: Vector, B: Number): Vector
        fun Multiply_VectorVector(A: Vector, B: Vector): Vector
        fun NegateVector(A: Vector): Vector
        fun Normalize(A: Vector, Tolerance: Number): Vector
        fun NotEqual(A: Vector, B: Vector, ErrorTolerance: Number): Boolean
        fun NotEqualExactly(A: Vector, B: Vector): Boolean
        fun ProjectPointOnToPlane(Point: Vector, PlaneBase: Vector, PlaneNormal: Vector): Vector
        fun ProjectVectorOnToPlane(V: Vector, PlaneNormal: Vector): Vector
        fun ProjectVectorOnToVector(V: Vector, Target: Vector): Vector
        fun MakefromEuler(Euler: Vector): Quat
        fun RandomPointInBoundingBox(Center: Vector, HalfSize: Vector): Vector
        fun RandomPointInBoundingBoxFromStream(Center: Vector, HalfSize: Vector, Stream: RandomStream): Vector
        fun RandomUnitVectorInConeInDegrees(ConeDir: Vector, ConeHalfAngleInDegrees: Number): Vector
        fun RandomUnitVectorInConeInDegreesFromStream(ConeDir: Vector, ConeHalfAngleInDegrees: Number, Stream: RandomStream): Vector
        fun RandomUnitVectorInConeInRadians(ConeDir: Vector, ConeHalfAngleInRadians: Number): Vector
        fun RandomUnitVectorInConeInRadiansFromStream(ConeDir: Vector, ConeHalfAngleInRadians: Number, Stream: RandomStream): Vector
        fun RandomUnitVectorInEllipticalConeInDegrees(ConeDir: Vector, MaxYawInDegrees: Number, MaxPitchInDegrees: Number): Vector
        fun RandomUnitVectorInEllipticalConeInDegreesFromStream(ConeDir: Vector, MaxYawInDegrees: Number, MaxPitchInDegrees: Number, Stream: RandomStream): Vector
        fun RandomUnitVectorInEllipticalConeInRadians(ConeDir: Vector, MaxYawInRadians: Number, MaxPitchInRadians: Number): Vector
        fun RandomUnitVectorInEllipticalConeInRadiansFromStream(ConeDir: Vector, MaxYawInRadians: Number, MaxPitchInRadians: Number, Stream: RandomStream): Vector
        fun RotateVectorAroundAxis(InVect: Vector, AngleDeg: Number, Axis: Vector): Vector
        fun RotatorFromAxisAndAngle(Axis: Vector, Angle: Number): Rotator
        fun SelectVector(A: Vector, B: Vector, bPickA: Boolean): Vector
        fun Subtract_VectorFloat(A: Vector, B: Any): Vector
        fun Subtract_VectorInt(A: Vector, B: Number): Vector
        fun Subtract_VectorVector(A: Vector, B: Vector): Vector
        fun Ease(A: Vector, B: Vector, Alpha: Number, EasingFunc: String /* "Linear" | "Step" | "SinusoidalIn" | "SinusoidalOut" | "SinusoidalInOut" | "EaseIn" | "EaseOut" | "EaseInOut" | "ExpoIn" | "ExpoOut" | "ExpoInOut" | "CircularIn" | "CircularOut" | "CircularInOut" | "EEasingFunc_MAX" */, BlendExp: Number, Steps: Number): Vector
        fun Vector_AddBounded(A: Vector = definedExternally, InAddVect: Vector = definedExternally, InRadius: Number = definedExternally): `T$500`
        fun Vector_Assign(A: Vector = definedExternally, InVector: Vector = definedExternally): `T$500`
        fun Vector_BoundedToBox(InVect: Vector, InBoxMin: Vector, InBoxMax: Vector): Vector
        fun Vector_BoundedToCube(InVect: Vector, InRadius: Number): Vector
        fun Vector_ClampSize2D(A: Vector, Min: Any, Max: Any): Vector
        fun Vector_ClampSizeMax(A: Vector, Max: Any): Vector
        fun Vector_ClampSizeMax2D(A: Vector, Max: Any): Vector
        fun Vector_ComponentMax(A: Vector, B: Vector): Vector
        fun Vector_ComponentMin(A: Vector, B: Vector): Vector
        fun Vector_CosineAngle2D(A: Vector, B: Vector): Any
        fun Distance(v1: Vector, v2: Vector): Any
        fun Distance2D(v1: Vector, v2: Vector): Any
        fun Distance2DSquared(v1: Vector, v2: Vector): Any
        fun DistanceSquared(v1: Vector, v2: Vector): Any
        fun Vector_GetAbs(A: Vector): Vector
        fun Vector_GetAbsMax(A: Vector): Any
        fun Vector_GetAbsMin(A: Vector): Any
        fun Vector_GetProjection(A: Vector): Vector
        fun Vector_GetSignVector(A: Vector): Vector
        fun Vector_HeadingAngle(A: Vector): Any
        fun Vector_IsNAN(A: Vector): Boolean
        fun Vector_IsNearlyZero(A: Vector, Tolerance: Number): Boolean
        fun IsNormal(A: Vector): Boolean
        fun IsUniform(A: Vector, Tolerance: Number): Boolean
        fun IsUnit(A: Vector, SquaredLenthTolerance: Number): Boolean
        fun Vector_IsZero(A: Vector): Boolean
        fun Vector_MirrorByPlane(A: Vector, InPlane: Plane): Vector
        fun Normalize2D(A: Vector, Tolerance: Number): Vector
        fun NormalizeInPlace(A: Vector = definedExternally, Tolerance: Number = definedExternally): `T$500`
        fun NormalUnsafe(A: Vector): Vector
        fun Vector_ProjectOnToNormal(V: Vector, InNormal: Vector): Vector
        fun Reciprocal(A: Vector): Vector
        fun Vector_Set(A: Vector = definedExternally, X: Any = definedExternally, Y: Any = definedExternally, Z: Any = definedExternally): `T$500`
        fun Vector_SnappedToGrid(InVect: Vector, InGridSize: Number): Vector
        fun Vector_ToDegrees(A: Vector): Vector
        fun Vector_ToRadians(A: Vector): Vector
        fun Vector_UnitCartesianToSpherical(A: Vector): Vector2D
        fun Vector_UnwindEuler(A: Vector = definedExternally): `T$500`
        fun VectorSpringInterp(Current: Vector, Target: Vector, SpringState: VectorSpringState = definedExternally, Stiffness: Number = definedExternally, CriticalDampingFactor: Number = definedExternally, DeltaTime: Number = definedExternally, Mass: Number = definedExternally, TargetVelocityAmount: Number = definedExternally, bClamp: Boolean = definedExternally, MinValue: Vector = definedExternally, MaxValue: Vector = definedExternally, bInitializeFromTarget: Boolean = definedExternally): `T$501`
        fun VInterpTo(Current: Vector, Target: Vector, DeltaTime: Number, InterpSpeed: Number): Vector
        fun VInterpTo_Constant(Current: Vector, Target: Vector, DeltaTime: Number, InterpSpeed: Number): Vector
        fun Lerp(A: Vector, B: Vector, Alpha: Number): Vector
        fun VectorLength(A: Vector): Any
        fun VectorLengthSquared(A: Vector): Any
        fun VectorLengthXY(A: Vector): Any
        fun VectorLengthXYSquared(A: Vector): Any
        fun WeightedMovingAverageVector(CurrentSample: Vector, PreviousSample: Vector, Weight: Number): Vector
        fun FindNearestActor(Origin: Vector, ActorsToCheck: Array<Actor>, Distance: Number = definedExternally): `T$502`
        fun CalculateDirection(Velocity: Vector, BaseRotation: Rotator): Number
        fun TwoBoneIKFunction(RootPos: Vector, JointPos: Vector, EndPos: Vector, JointTarget: Vector, Effector: Vector, OutJointPos: Vector = definedExternally, OutEndPos: Vector = definedExternally, bAllowStretching: Boolean = definedExternally, StartStretchRatio: Number = definedExternally, MaxStretchScale: Number = definedExternally): `T$503`
        fun IsValidAIDirection(DirectionVector: Vector): Boolean
        fun IsValidAILocation(Location: Vector): Boolean
        fun GetPositionalTrackingCameraParameters(CameraOrigin: Vector = definedExternally, CameraRotation: Rotator = definedExternally, HFOV: Number = definedExternally, VFOV: Number = definedExternally, CameraDistance: Number = definedExternally, NearPlane: Number = definedExternally, FarPlane: Number = definedExternally): `T$504`
        fun GetTrackingSensorParameters(Origin: Vector = definedExternally, Rotation: Rotator = definedExternally, LeftFOV: Number = definedExternally, RightFOV: Number = definedExternally, TopFOV: Number = definedExternally, BottomFOV: Number = definedExternally, Distance: Number = definedExternally, NearPlane: Number = definedExternally, FarPlane: Number = definedExternally, IsActive: Boolean = definedExternally, index: Number = definedExternally): `T$505`
        fun AddAREnvironmentProbe(Location: Vector, Extent: Vector): Boolean
        fun GetObjectClassificationAtLocation(InWorldLocation: Vector, OutClassification: String /* "NotApplicable" | "Unknown" | "Wall" | "Ceiling" | "Floor" | "Table" | "Seat" | "Face" | "Image" | "World" | "SceneObject" | "HandMesh" | "Door" | "Window" | "EARObjectClassification_MAX" */ = definedExternally, OutClassificationLocation: Vector = definedExternally, MaxLocationDiff: Number = definedExternally): `T$506`
        fun LineTraceTrackedObjects3D(Start: Vector, End: Vector, bTestFeaturePoints: Boolean, bTestGroundPlane: Boolean, bTestPlaneExtents: Boolean, bTestPlaneBoundaryPolygon: Boolean): Array<ARTraceResult>
        fun SetARWorldOriginLocationAndRotation(OriginLocation: Vector, OriginRotation: Rotator, bIsTransformInWorldSpace: Boolean, bMaintainUpDirection: Boolean)
        fun ToVector(InDouble: Any): Vector
        fun ToVector(InFloat: Number): Vector
        fun ToVector(inInt: Number): Vector
        fun CreateVectorFromYawPitch(Yaw: Number, Pitch: Number, Length: Number): Vector
        fun GetVectorArrayAverage(Vectors: Array<Vector>): Vector
        fun MakeVector(X: Any, Y: Any, Z: Any): Vector
        fun RandomUnitVector(): Vector
        fun Vector_Backward(): Vector
        fun Vector_Down(): Vector
        fun Vector_Forward(): Vector
        fun Vector_Left(): Vector
        fun Vector_One(): Vector
        fun Vector_Right(): Vector
        fun Vector_Up(): Vector
        fun Vector_Zero(): Vector
        fun NextSobolCell3D(index: Number, NumCells: Number, PreviousValue: Vector): Vector
        fun RandomSobolCell3D(index: Number, NumCells: Number, Cell: Vector, Seed: Vector): Vector
        fun GetActorArrayAverageLocation(Actors: Array<Actor>): Vector
        fun MakePerlinNoiseVectorandRemap(X: Number, Y: Number, Z: Number, RangeOutMinX: Number, RangeOutMaxX: Number, RangeOutMinY: Number, RangeOutMaxY: Number, RangeOutMinZ: Number, RangeOutMaxZ: Number): Vector
    }
}

external object EVectorQuantization {
    var RoundWholeNumber: String /* "RoundWholeNumber" */
    var RoundOneDecimal: String /* "RoundOneDecimal" */
    var RoundTwoDecimals: String /* "RoundTwoDecimals" */
    var EVectorQuantization_MAX: String /* "EVectorQuantization_MAX" */
}

external object ERotatorQuantization {
    var ByteComponents: String /* "ByteComponents" */
    var ShortComponents: String /* "ShortComponents" */
    var ERotatorQuantization_MAX: String /* "ERotatorQuantization_MAX" */
}

external open class RepMovement {
    open var LinearVelocity: Vector
    open var AngularVelocity: Vector
    open var Location: Vector
    open var Rotation: Rotator
    open var bSimulatedPhysicSleep: Boolean
    open var bRepPhysics: Boolean
    open var LocationQuantizationLevel: String /* "RoundWholeNumber" | "RoundOneDecimal" | "RoundTwoDecimals" | "EVectorQuantization_MAX" */
    open var VelocityQuantizationLevel: String /* "RoundWholeNumber" | "RoundOneDecimal" | "RoundTwoDecimals" | "EVectorQuantization_MAX" */
    open var RotationQuantizationLevel: String /* "ByteComponents" | "ShortComponents" | "ERotatorQuantization_MAX" */
    open fun clone(): RepMovement

    companion object {
        fun C(Other: UObject): RepMovement
        fun C(Other: Any): RepMovement
    }
}

external object EActorGridPlacement {
    var Bounds: String /* "Bounds" */
    var Location: String /* "Location" */
    var AlwaysLoaded: String /* "AlwaysLoaded" */
    var None: String /* "None" */
    var EActorGridPlacement_MAX: String /* "EActorGridPlacement_MAX" */
}

external open class RepAttachment {
    open var AttachParent: Actor
    open var LocationOffset: Vector_NetQuantize100
    open var RelativeScale3D: Vector_NetQuantize100
    open var RotationOffset: Rotator
    open var AttachSocket: String
    open var AttachComponent: SceneComponent
    open fun clone(): RepAttachment

    companion object {
        fun C(Other: UObject): RepAttachment
        fun C(Other: Any): RepAttachment
    }
}

external object ENetDormancy {
    var DORM_Never: String /* "DORM_Never" */
    var DORM_Awake: String /* "DORM_Awake" */
    var DORM_DormantAll: String /* "DORM_DormantAll" */
    var DORM_DormantPartial: String /* "DORM_DormantPartial" */
    var DORM_Initial: String /* "DORM_Initial" */
    var DORM_MAX: String /* "DORM_MAX" */
}

external object EChildActorComponentTreeViewVisualizationMode {
    var UseDefault: String /* "UseDefault" */
    var ComponentOnly: String /* "ComponentOnly" */
    var ComponentWithChildActor: String /* "ComponentWithChildActor" */
    var ChildActorOnly: String /* "ChildActorOnly" */
    var EChildActorComponentTreeViewVisualizationMode_MAX: String /* "EChildActorComponentTreeViewVisualizationMode_MAX" */
}

external open class ChildActorComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var ChildActorClass: UnrealEngineClass
    open var ChildActor: Actor
    open var ChildActorTemplate: Actor
    open var EditorTreeViewVisualizationMode: String /* "UseDefault" | "ComponentOnly" | "ComponentWithChildActor" | "ChildActorOnly" | "EChildActorComponentTreeViewVisualizationMode_MAX" */
    open fun SetChildActorClass(InClass: UnrealEngineClass)

    companion object {
        fun Load(ResourceName: String): ChildActorComponent
        fun Find(Outer: UObject, ResourceName: String): ChildActorComponent
        fun GetDefaultObject(): ChildActorComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ChildActorComponent
        fun C(Other: UObject): ChildActorComponent
        fun C(Other: Any): ChildActorComponent
    }
}

external open class ScriptTypedElementHandle {
    open fun clone(): ScriptTypedElementHandle

    companion object {
        fun C(Other: UObject): ScriptTypedElementHandle
        fun C(Other: Any): ScriptTypedElementHandle
    }
}

external interface `T$508` {
    var SweepHitResult: HitResult
    var `$`: Boolean
}

external interface `T$509` {
    var OverlappingComponents: Array<PrimitiveComponent>
}

external interface `T$510` {
    var OverlappingActors: Array<Actor>
}

external interface `T$511` {
    var OutActors: Array<Actor>
}

external interface `T$512` {
    var ChildActors: Array<Actor>
}

external interface `T$513` {
    var OutLocation: Vector
    var OutRotation: Rotator
}

external interface `T$514` {
    var Origin: Vector
    var BoxExtent: Vector
}

external interface `T$515` {
    var XRDeviceId: XRDeviceId
    var `$`: PrimitiveComponent
}

external open class Actor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : UObject {
    open var PrimaryActorTick: ActorTickFunction
    open var bNetTemporary: Boolean
    open var bNetStartup: Boolean
    open var bOnlyRelevantToOwner: Boolean
    open var bAlwaysRelevant: Boolean
    open var bReplicateMovement: Boolean
    open var bCallPreReplication: Boolean
    open var bCallPreReplicationForReplay: Boolean
    open var bHidden: Boolean
    open var bTearOff: Boolean
    open var bForceNetAddressable: Boolean
    open var bIsInEditingLevelInstance: Boolean
    open var bExchangedRoles: Boolean
    open var bNetLoadOnClient: Boolean
    open var bNetUseOwnerRelevancy: Boolean
    open var bRelevantForNetworkReplays: Boolean
    open var bRelevantForLevelBounds: Boolean
    open var bReplayRewindable: Boolean
    open var bAllowTickBeforeBeginPlay: Boolean
    open var bAutoDestroyWhenFinished: Boolean
    open var bCanBeDamaged: Boolean
    open var bBlockInput: Boolean
    open var bCollideWhenPlacing: Boolean
    open var bFindCameraComponentWhenViewTarget: Boolean
    open var bGenerateOverlapEventsDuringLevelStreaming: Boolean
    open var bIgnoresOriginShifting: Boolean
    open var bEnableAutoLODGeneration: Boolean
    open var bIsEditorOnlyActor: Boolean
    open var bActorSeamlessTraveled: Boolean
    open var bReplicates: Boolean
    open var bCanBeInCluster: Boolean
    open var bAllowReceiveTickEventOnDedicatedServer: Boolean
    open var bActorEnableCollision: Boolean
    open var bActorIsBeingDestroyed: Boolean
    open var UpdateOverlapsMethodDuringLevelStreaming: String /* "UseConfigDefault" | "AlwaysUpdate" | "OnlyUpdateMovable" | "NeverUpdate" | "EActorUpdateOverlapsMethod_MAX" */
    open var DefaultUpdateOverlapsMethodDuringLevelStreaming: String /* "UseConfigDefault" | "AlwaysUpdate" | "OnlyUpdateMovable" | "NeverUpdate" | "EActorUpdateOverlapsMethod_MAX" */
    open var RemoteRole: String /* "ROLE_None" | "ROLE_SimulatedProxy" | "ROLE_AutonomousProxy" | "ROLE_Authority" | "ROLE_MAX" */
    open var ReplicatedMovement: RepMovement
    open var InitialLifeSpan: Number
    open var CustomTimeDilation: Number
    open var GridPlacement: String /* "Bounds" | "Location" | "AlwaysLoaded" | "None" | "EActorGridPlacement_MAX" */
    open var RuntimeGrid: String
    open var AttachmentReplication: RepAttachment
    open var Owner: Actor
    open var NetDriverName: String
    open var Role: String /* "ROLE_None" | "ROLE_SimulatedProxy" | "ROLE_AutonomousProxy" | "ROLE_Authority" | "ROLE_MAX" */
    open var NetDormancy: String /* "DORM_Never" | "DORM_Awake" | "DORM_DormantAll" | "DORM_DormantPartial" | "DORM_Initial" | "DORM_MAX" */
    open var SpawnCollisionHandlingMethod: String /* "Undefined" | "AlwaysSpawn" | "AdjustIfPossibleButAlwaysSpawn" | "AdjustIfPossibleButDontSpawnIfColliding" | "DontSpawnIfColliding" | "ESpawnActorCollisionHandlingMethod_MAX" */
    open var AutoReceiveInput: String /* "Disabled" | "Player0" | "Player1" | "Player2" | "Player3" | "Player4" | "Player5" | "Player6" | "Player7" | "EAutoReceiveInput_MAX" */
    open var InputPriority: Number
    open var InputComponent: InputComponent
    open var NetCullDistanceSquared: Number
    open var NetTag: Number
    open var NetUpdateFrequency: Number
    open var MinNetUpdateFrequency: Number
    open var NetPriority: Number
    open var Instigator: Pawn
    open var Children: Array<Actor>
    open var RootComponent: SceneComponent
    open var PivotOffset: Vector
    open var HLODLayer: HLODLayer
    open var RayTracingGroupId: Number
    open var Layers: Array<String>
    open var ParentComponentActor: Actor
    open var ParentComponent: Any
    open var ActorGuid: Guid
    open var DataLayers: Array<ActorDataLayer>
    open var GroupActor: Actor
    open var SpriteScale: Number
    open var HiddenEditorViews: Any
    open var ActorLabel: String
    open var FolderPath: String
    open var FolderGuid: Guid
    open var bHiddenEd: Boolean
    open var bIsEditorPreviewActor: Boolean
    open var bHiddenEdLayer: Boolean
    open var bHiddenEdLevel: Boolean
    open var bLockLocation: Boolean
    open var bActorLabelEditable: Boolean
    open var bEditable: Boolean
    open var bListedInSceneOutliner: Boolean
    open var bOptimizeBPComponentData: Boolean
    open var bCanPlayFromHere: Boolean
    open var bIsSpatiallyLoaded: Boolean
    open var bHiddenEdTemporary: Boolean
    open var bForceExternalActorLevelReferenceForPIE: Boolean
    open var Tags: Array<String>
    open var OnTakeAnyDamage: UnrealEngineMulticastDelegate<(DamagedActor: Actor, Damage: Number, DamageType: DamageType, InstigatedBy: Controller, DamageCauser: Actor) -> Unit>
    open var OnTakePointDamage: UnrealEngineMulticastDelegate<(DamagedActor: Actor, Damage: Number, InstigatedBy: Controller, HitLocation: Vector, FHitComponent: PrimitiveComponent, BoneName: String, ShotFromDirection: Vector, DamageType: DamageType, DamageCauser: Actor) -> Unit>
    open var OnTakeRadialDamage: UnrealEngineMulticastDelegate<(DamagedActor: Actor, Damage: Number, DamageType: DamageType, Origin: Vector, HitInfo: HitResult, InstigatedBy: Controller, DamageCauser: Actor) -> Unit>
    open var OnActorBeginOverlap: UnrealEngineMulticastDelegate<(OverlappedActor: Actor, OtherActor: Actor) -> Unit>
    open var OnActorEndOverlap: UnrealEngineMulticastDelegate<(OverlappedActor: Actor, OtherActor: Actor) -> Unit>
    open var OnBeginCursorOver: UnrealEngineMulticastDelegate<(TouchedActor: Actor) -> Unit>
    open var OnEndCursorOver: UnrealEngineMulticastDelegate<(TouchedActor: Actor) -> Unit>
    open var OnClicked: UnrealEngineMulticastDelegate<(TouchedActor: Actor, ButtonPressed: Key) -> Unit>
    open var OnReleased: UnrealEngineMulticastDelegate<(TouchedActor: Actor, ButtonReleased: Key) -> Unit>
    open var OnInputTouchBegin: UnrealEngineMulticastDelegate<(FingerIndex: String /* "Touch1" | "Touch2" | "Touch3" | "Touch4" | "Touch5" | "Touch6" | "Touch7" | "Touch8" | "Touch9" | "Touch10" | "CursorPointerIndex" | "MAX_TOUCHES" | "ETouchIndex_MAX" */, TouchedActor: Actor) -> Unit>
    open var OnInputTouchEnd: UnrealEngineMulticastDelegate<(FingerIndex: String /* "Touch1" | "Touch2" | "Touch3" | "Touch4" | "Touch5" | "Touch6" | "Touch7" | "Touch8" | "Touch9" | "Touch10" | "CursorPointerIndex" | "MAX_TOUCHES" | "ETouchIndex_MAX" */, TouchedActor: Actor) -> Unit>
    open var OnInputTouchEnter: UnrealEngineMulticastDelegate<(FingerIndex: String /* "Touch1" | "Touch2" | "Touch3" | "Touch4" | "Touch5" | "Touch6" | "Touch7" | "Touch8" | "Touch9" | "Touch10" | "CursorPointerIndex" | "MAX_TOUCHES" | "ETouchIndex_MAX" */, TouchedActor: Actor) -> Unit>
    open var OnInputTouchLeave: UnrealEngineMulticastDelegate<(FingerIndex: String /* "Touch1" | "Touch2" | "Touch3" | "Touch4" | "Touch5" | "Touch6" | "Touch7" | "Touch8" | "Touch9" | "Touch10" | "CursorPointerIndex" | "MAX_TOUCHES" | "ETouchIndex_MAX" */, TouchedActor: Actor) -> Unit>
    open var OnActorHit: UnrealEngineMulticastDelegate<(SelfActor: Actor, OtherActor: Actor, NormalImpulse: Vector, Hit: HitResult) -> Unit>
    open var OnDestroyed: UnrealEngineMulticastDelegate<(DestroyedActor: Actor) -> Unit>
    open var OnEndPlay: UnrealEngineMulticastDelegate<(Actor: Actor, EndPlayReason: String /* "Destroyed" | "LevelTransition" | "EndPlayInEditor" | "RemovedFromWorld" | "Quit" | "EEndPlayReason_MAX" */) -> Unit>
    open var InstanceComponents: Array<ActorComponent>
    open var BlueprintCreatedComponents: Array<ActorComponent>
    open fun WasComponentRecentlyRendered(Tolerance: Number): Boolean
    open fun ConstructionScript()
    open fun TearOff()
    open fun SetTickGroup(NewTickGroup: String /* "TG_PrePhysics" | "TG_StartPhysics" | "TG_DuringPhysics" | "TG_EndPhysics" | "TG_PostPhysics" | "TG_PostUpdateWork" | "TG_LastDemotable" | "TG_NewlySpawned" | "TG_MAX" */)
    open fun SetTickableWhenPaused(bTickableWhenPaused: Boolean)
    open fun SetReplicates(bInReplicates: Boolean)
    open fun SetReplicateMovement(bInReplicateMovement: Boolean)
    open fun SetRayTracingGroupId(InRaytracingGroupId: Number)
    open fun SetOwner(NewOwner: Actor)
    open fun SetNetDormancy(NewDormancy: String /* "DORM_Never" | "DORM_Awake" | "DORM_DormantAll" | "DORM_DormantPartial" | "DORM_Initial" | "DORM_MAX" */)
    open fun SetLifeSpan(InLifespan: Number)
    open fun SetIsTemporarilyHiddenInEditor(bIsHidden: Boolean)
    open fun SetFolderPath(NewFolderPath: String)
    open fun SetAutoDestroyWhenFinished(bVal: Boolean)
    open fun SetActorTickInterval(TickInterval: Number)
    open fun SetActorTickEnabled(bEnabled: Boolean)
    open fun SetActorScale3D(NewScale3D: Vector)
    open fun SetActorRelativeScale3D(NewRelativeScale: Vector)
    open fun SetActorLabel(NewActorLabel: String, bMarkDirty: Boolean)
    open fun SetActorHiddenInGame(bNewHidden: Boolean)
    open fun SetActorEnableCollision(bNewActorEnableCollision: Boolean)
    open fun RemoveTickPrerequisiteComponent(PrerequisiteComponent: ActorComponent)
    open fun RemoveTickPrerequisiteActor(PrerequisiteActor: Actor)
    open fun Tick(DeltaSeconds: Number)
    open fun RadialDamage(DamageReceived: Number, DamageType: DamageType, Origin: Vector, HitInfo: HitResult, InstigatedBy: Controller, DamageCauser: Actor)
    open fun PointDamage(Damage: Number, DamageType: DamageType, HitLocation: Vector, HitNormal: Vector, HitComponent: PrimitiveComponent, BoneName: String, ShotFromDirection: Vector, InstigatedBy: Controller, DamageCauser: Actor, HitInfo: HitResult)
    open fun Hit(MyComp: PrimitiveComponent, Other: Actor, OtherComp: PrimitiveComponent, bSelfMoved: Boolean, HitLocation: Vector, HitNormal: Vector, NormalImpulse: Vector, Hit: HitResult)
    open fun EndPlay(EndPlayReason: String /* "Destroyed" | "LevelTransition" | "EndPlayInEditor" | "RemovedFromWorld" | "Quit" | "EEndPlayReason_MAX" */)
    open fun Destroyed()
    open fun BeginPlay()
    open fun AnyDamage(Damage: Number, DamageType: DamageType, InstigatedBy: Controller, DamageCauser: Actor)
    open fun ActorOnReleased(ButtonReleased: Key)
    open fun TouchLeave(FingerIndex: String /* "Touch1" | "Touch2" | "Touch3" | "Touch4" | "Touch5" | "Touch6" | "Touch7" | "Touch8" | "Touch9" | "Touch10" | "CursorPointerIndex" | "MAX_TOUCHES" | "ETouchIndex_MAX" */)
    open fun TouchEnter(FingerIndex: String /* "Touch1" | "Touch2" | "Touch3" | "Touch4" | "Touch5" | "Touch6" | "Touch7" | "Touch8" | "Touch9" | "Touch10" | "CursorPointerIndex" | "MAX_TOUCHES" | "ETouchIndex_MAX" */)
    open fun EndInputTouch(FingerIndex: String /* "Touch1" | "Touch2" | "Touch3" | "Touch4" | "Touch5" | "Touch6" | "Touch7" | "Touch8" | "Touch9" | "Touch10" | "CursorPointerIndex" | "MAX_TOUCHES" | "ETouchIndex_MAX" */)
    open fun BeginInputTouch(FingerIndex: String /* "Touch1" | "Touch2" | "Touch3" | "Touch4" | "Touch5" | "Touch6" | "Touch7" | "Touch8" | "Touch9" | "Touch10" | "CursorPointerIndex" | "MAX_TOUCHES" | "ETouchIndex_MAX" */)
    open fun ActorOnClicked(ButtonPressed: Key)
    open fun ActorEndOverlap(OtherActor: Actor)
    open fun ActorEndCursorOver()
    open fun ActorBeginOverlap(OtherActor: Actor)
    open fun ActorBeginCursorOver()
    open fun PrestreamTextures(Seconds: Number, bEnableStreaming: Boolean, CinematicTextureGroups: Number)
    open fun OnRep_ReplicateMovement()
    open fun OnRep_ReplicatedMovement()
    open fun OnRep_Owner()
    open fun OnRep_Instigator()
    open fun OnRep_AttachmentReplication()
    open fun MakeNoise(Loudness: Number, NoiseInstigator: Pawn, NoiseLocation: Vector, MaxRange: Number, Tag: String)
    open fun Teleport(DestLocation: Vector, DestRotation: Rotator): Boolean
    open fun SetActorTransform(NewTransform: Transform, bSweep: Boolean, SweepHitResult: HitResult = definedExternally, bTeleport: Boolean = definedExternally): `T$508`
    open fun SetActorRotation(NewRotation: Rotator, bTeleportPhysics: Boolean): Boolean
    open fun SetActorRelativeTransform(NewRelativeTransform: Transform, bSweep: Boolean, SweepHitResult: HitResult = definedExternally, bTeleport: Boolean = definedExternally): `T$478`
    open fun SetActorRelativeRotation(NewRelativeRotation: Rotator, bSweep: Boolean, SweepHitResult: HitResult = definedExternally, bTeleport: Boolean = definedExternally): `T$478`
    open fun SetActorRelativeLocation(NewRelativeLocation: Vector, bSweep: Boolean, SweepHitResult: HitResult = definedExternally, bTeleport: Boolean = definedExternally): `T$478`
    open fun SetActorLocationAndRotation(NewLocation: Vector, NewRotation: Rotator, bSweep: Boolean, SweepHitResult: HitResult = definedExternally, bTeleport: Boolean = definedExternally): `T$508`
    open fun SetActorLocation(NewLocation: Vector, bSweep: Boolean, SweepHitResult: HitResult = definedExternally, bTeleport: Boolean = definedExternally): `T$508`
    open fun OnReset()
    open fun OnEndViewTarget(PC: PlayerController)
    open fun OnBecomeViewTarget(PC: PlayerController)
    open fun K2_GetRootComponent(): SceneComponent
    open fun GetComponentsByClass(ComponentClass: UnrealEngineClass): Array<ActorComponent>
    open fun GetActorRotation(): Rotator
    open fun GetActorLocation(): Vector
    open fun DetachFromActor(LocationRule: String /* "KeepRelative" | "KeepWorld" | "EDetachmentRule_MAX" */, RotationRule: String /* "KeepRelative" | "KeepWorld" | "EDetachmentRule_MAX" */, ScaleRule: String /* "KeepRelative" | "KeepWorld" | "EDetachmentRule_MAX" */)
    open fun AttachComponentToComponent(Parent: SceneComponent, SocketName: String, LocationRule: String /* "KeepRelative" | "KeepWorld" | "SnapToTarget" | "EAttachmentRule_MAX" */, RotationRule: String /* "KeepRelative" | "KeepWorld" | "SnapToTarget" | "EAttachmentRule_MAX" */, ScaleRule: String /* "KeepRelative" | "KeepWorld" | "SnapToTarget" | "EAttachmentRule_MAX" */, bWeldSimulatedBodies: Boolean)
    open fun AttachActorToActor(ParentActor: Actor, SocketName: String, LocationRule: String /* "KeepRelative" | "KeepWorld" | "SnapToTarget" | "EAttachmentRule_MAX" */, RotationRule: String /* "KeepRelative" | "KeepWorld" | "SnapToTarget" | "EAttachmentRule_MAX" */, ScaleRule: String /* "KeepRelative" | "KeepWorld" | "SnapToTarget" | "EAttachmentRule_MAX" */, bWeldSimulatedBodies: Boolean)
    open fun AttachRootComponentToActor(InParentActor: Actor, InSocketName: String, AttachLocationType: String /* "KeepRelativeOffset" | "KeepWorldPosition" | "SnapToTarget" | "SnapToTargetIncludingScale" | "EAttachLocation_MAX" */, bWeldSimulatedBodies: Boolean)
    open fun AttachRootComponentTo(InParent: SceneComponent, InSocketName: String, AttachLocationType: String /* "KeepRelativeOffset" | "KeepWorldPosition" | "SnapToTarget" | "SnapToTargetIncludingScale" | "EAttachLocation_MAX" */, bWeldSimulatedBodies: Boolean)
    open fun AddActorWorldTransformKeepScale(DeltaTransform: Transform, bSweep: Boolean, SweepHitResult: HitResult = definedExternally, bTeleport: Boolean = definedExternally): `T$478`
    open fun AddActorWorldTransform(DeltaTransform: Transform, bSweep: Boolean, SweepHitResult: HitResult = definedExternally, bTeleport: Boolean = definedExternally): `T$478`
    open fun AddActorWorldRotation(DeltaRotation: Rotator, bSweep: Boolean, SweepHitResult: HitResult = definedExternally, bTeleport: Boolean = definedExternally): `T$478`
    open fun AddActorWorldOffset(DeltaLocation: Vector, bSweep: Boolean, SweepHitResult: HitResult = definedExternally, bTeleport: Boolean = definedExternally): `T$478`
    open fun AddActorLocalTransform(NewTransform: Transform, bSweep: Boolean, SweepHitResult: HitResult = definedExternally, bTeleport: Boolean = definedExternally): `T$478`
    open fun AddActorLocalRotation(DeltaRotation: Rotator, bSweep: Boolean, SweepHitResult: HitResult = definedExternally, bTeleport: Boolean = definedExternally): `T$478`
    open fun AddActorLocalOffset(DeltaLocation: Vector, bSweep: Boolean, SweepHitResult: HitResult = definedExternally, bTeleport: Boolean = definedExternally): `T$478`
    open fun IsTemporarilyHiddenInEditor(bIncludeParent: Boolean): Boolean
    open fun IsSelectable(): Boolean
    open fun IsOverlappingActor(Other: Actor): Boolean
    open fun IsHiddenEdAtStartup(): Boolean
    open fun IsHiddenEd(): Boolean
    open fun IsEditable(): Boolean
    open fun IsChildActor(): Boolean
    open fun IsActorTickEnabled(): Boolean
    open fun IsActorBeingDestroyed(): Boolean
    open fun HasAuthority(): Boolean
    open fun GetVerticalDistanceTo(OtherActor: Actor): Number
    open fun GetVelocity(): Vector
    open fun GetActorTransform(): Transform
    open fun GetTickableWhenPaused(): Boolean
    open fun GetSquaredHorizontalDistanceTo(OtherActor: Actor): Number
    open fun GetSquaredDistanceTo(OtherActor: Actor): Number
    open fun GetRemoteRole(): String /* "ROLE_None" | "ROLE_SimulatedProxy" | "ROLE_AutonomousProxy" | "ROLE_Authority" | "ROLE_MAX" */
    open fun GetRayTracingGroupId(): Number
    open fun GetParentComponent(): ChildActorComponent
    open fun GetParentActor(): Actor
    open fun GetOwner(): Actor
    open fun GetOverlappingComponents(OverlappingComponents: Array<PrimitiveComponent> = definedExternally): `T$509`
    open fun GetOverlappingActors(OverlappingActors: Array<Actor> = definedExternally, ClassFilter: UnrealEngineClass = definedExternally): `T$510`
    open fun GetLocalRole(): String /* "ROLE_None" | "ROLE_SimulatedProxy" | "ROLE_AutonomousProxy" | "ROLE_Authority" | "ROLE_MAX" */
    open fun GetLifeSpan(): Number
    open fun GetLevelTransform(): Transform
    open fun GetLevel(): Level
    open fun GetInstigatorController(): Controller
    open fun GetInstigator(): Pawn
    open fun GetInputVectorAxisValue(InputAxisKey: Key): Vector
    open fun GetInputAxisValue(InputAxisName: String): Number
    open fun GetInputAxisKeyValue(InputAxisKey: Key): Number
    open fun GetHorizontalDotProductTo(OtherActor: Actor): Number
    open fun GetHorizontalDistanceTo(OtherActor: Actor): Number
    open fun GetGameTimeSinceCreation(): Number
    open fun GetFolderPath(): String
    open fun GetDotProductTo(OtherActor: Actor): Number
    open fun GetDistanceTo(OtherActor: Actor): Number
    open fun GetDefaultActorLabel(): String
    open fun GetComponentsByTag(ComponentClass: UnrealEngineClass, Tag: String): Array<ActorComponent>
    open fun GetComponentsByInterface(Interface: UnrealEngineClass): Array<ActorComponent>
    open fun GetComponentByClass(ComponentClass: UnrealEngineClass): ActorComponent
    open fun GetAttachParentSocketName(): String
    open fun GetAttachParentActor(): Actor
    open fun GetAttachedActors(OutActors: Array<Actor> = definedExternally, bResetArray: Boolean = definedExternally, bRecursivelyIncludeAttachedActors: Boolean = definedExternally): `T$511`
    open fun GetAllChildActors(ChildActors: Array<Actor> = definedExternally, bIncludeDescendants: Boolean = definedExternally): `T$512`
    open fun GetActorUpVector(): Vector
    open fun GetActorTimeDilation(): Number
    open fun GetActorTickInterval(): Number
    open fun GetActorScale3D(): Vector
    open fun GetActorRightVector(): Vector
    open fun GetActorRelativeScale3D(): Vector
    open fun GetActorLabel(bCreateIfNone: Boolean): String
    open fun GetActorForwardVector(): Vector
    open fun GetActorEyesViewPoint(OutLocation: Vector = definedExternally, OutRotation: Rotator = definedExternally): `T$513`
    open fun GetActorEnableCollision(): Boolean
    open fun GetActorBounds(bOnlyCollidingComponents: Boolean, Origin: Vector = definedExternally, BoxExtent: Vector = definedExternally, bIncludeFromChildActors: Boolean = definedExternally): `T$514`
    open fun GetActorBounds(bOnlyCollidingComponents: Boolean): `T$514`
    open fun GetActorBounds(bOnlyCollidingComponents: Boolean, Origin: Vector = definedExternally): `T$514`
    open fun GetActorBounds(bOnlyCollidingComponents: Boolean, Origin: Vector = definedExternally, BoxExtent: Vector = definedExternally): `T$514`
    open fun ForceNetUpdate()
    open fun FlushNetDormancy()
    open fun FinishAddComponent(Component: ActorComponent, bManualAttachment: Boolean, RelativeTransform: Transform)
    open fun EnableInput(PlayerController: PlayerController)
    open fun DisableInput(PlayerController: PlayerController)
    open fun DetachActorFromActor(bMaintainWorldPosition: Boolean)
    open fun AddTickPrerequisiteComponent(PrerequisiteComponent: ActorComponent)
    open fun AddTickPrerequisiteActor(PrerequisiteActor: Actor)
    open fun AddComponentByClass(Class: UnrealEngineClass, bManualAttachment: Boolean, RelativeTransform: Transform, bDeferredFinish: Boolean): ActorComponent
    open fun AddComponent(TemplateName: String, bManualAttachment: Boolean, RelativeTransform: Transform, ComponentTemplateContext: UObject, bDeferredFinish: Boolean): ActorComponent
    open fun ActorHasTag(Tag: String): Boolean
    open fun ClearActorLabel()
    open fun GetActorLabel(): String
    open fun IsActorLabelEditable(): Boolean
    open fun SetActorLabelUnique(NewActorLabel: String, InExistingActorLabels: Array<String>)
    open fun SetFolderPath_Recursively(NewFolderPath: String)
    open fun AddActorToLayer(Layer: ActorLayer)
    open fun RemoveActorFromLayer(Layer: ActorLayer)
    open fun DestroyActor(): Boolean
    open fun PilotLevelActor()
    open fun SetActorSelectionState(bShouldBeSelected: Boolean)
    open fun Actor_GetWorld(): World
    open fun GetLastRenderTime(): Number
    open fun IsPendingKill(): Boolean
    open fun ReregisterAllComponents()
    open fun SetActorFlags(Flags: Number)
    open fun SetRootComponent(Component: SceneComponent)
    open fun ConvertActorToLightWeightInstance(): ActorInstanceHandle
    open fun GetActorBounds(Origin: Vector = definedExternally, BoxExtent: Vector = definedExternally): `T$514`
    open fun GetActorBounds(): `T$514`
    open fun GetActorBounds(Origin: Vector = definedExternally): `T$514`
    open fun ApplyDamage(BaseDamage: Number, EventInstigator: Controller, DamageCauser: Actor, DamageTypeClass: UnrealEngineClass): Number
    open fun ApplyPointDamage(BaseDamage: Number, HitFromDirection: Vector, HitInfo: HitResult, EventInstigator: Controller, DamageCauser: Actor, DamageTypeClass: UnrealEngineClass): Number
    open fun FinishSpawningActor(SpawnTransform: Transform): Actor
    open fun AcquireEditorActorElementHandle(bAllowCreate: Boolean): ScriptTypedElementHandle
    open fun GetAIController(): AIController
    open fun GetBlackboard(): BlackboardComponent
    open fun AddDeviceVisualizationComponentBlocking(XRDeviceId: XRDeviceId, bManualAttachment: Boolean, RelativeTransform: Transform): PrimitiveComponent
    open fun AddNamedDeviceVisualizationComponentBlocking(SystemName: String, DeviceName: String, bManualAttachment: Boolean, RelativeTransform: Transform, XRDeviceId: XRDeviceId = definedExternally): `T$515`

    companion object {
        fun GetDefaultObject(): Actor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Actor
        fun C(Other: UObject): Actor
        fun C(Other: Any): Actor
        fun ClearActorLabel(Actor: Actor)
        fun GetActorLabel(Actor: Actor): String
        fun GetActorLocation(Actor: Actor): Vector
        fun GetActorRotation(Actor: Actor): Rotator
        fun GetFolderPath(Actor: Actor): String
        fun IsActorLabelEditable(Actor: Actor): Boolean
        fun SetActorLabel(Actor: Actor, NewActorLabel: String, bMarkDirty: Boolean)
        fun SetActorLabelUnique(Actor: Actor, NewActorLabel: String, InExistingActorLabels: Array<String>)
        fun SetActorLocation(Actor: Actor, NewLocation: Vector, bSweep: Boolean, SweepHitResult: HitResult = definedExternally, bTeleport: Boolean = definedExternally): `T$508`
        fun SetFolderPath(Actor: Actor, NewFolderPath: String)
        fun SetFolderPath_Recursively(Actor: Actor, NewFolderPath: String)
        fun SetIsTemporarilyHiddenInEditor(Actor: Actor, bIsHidden: Boolean)
        fun AddActorToLayer(InActor: Actor, Layer: ActorLayer)
        fun RemoveActorFromLayer(InActor: Actor, Layer: ActorLayer)
        fun DestroyActor(ActorToDestroy: Actor): Boolean
        fun PilotLevelActor(ActorToPilot: Actor)
        fun SetActorSelectionState(Actor: Actor, bShouldBeSelected: Boolean)
        fun Actor_GetWorld(Actor: Actor): World
        fun GetComponentsByClass(Actor: Actor, ComponentClass: UnrealEngineClass): Array<ActorComponent>
        fun GetLastRenderTime(Actor: Actor): Number
        fun GetLevel(Actor: Actor): Level
        fun IsPendingKill(InActor: Actor): Boolean
        fun ReregisterAllComponents(Actor: Actor)
        fun SetActorFlags(Actor: Actor, Flags: Number)
        fun SetRootComponent(Actor: Actor, Component: SceneComponent)
        fun ConvertActorToLightWeightInstance(Actor: Actor): ActorInstanceHandle
        fun GetActorBounds(Actor: Actor, Origin: Vector = definedExternally, BoxExtent: Vector = definedExternally): `T$514`
        fun ApplyDamage(DamagedActor: Actor, BaseDamage: Number, EventInstigator: Controller, DamageCauser: Actor, DamageTypeClass: UnrealEngineClass): Number
        fun ApplyPointDamage(DamagedActor: Actor, BaseDamage: Number, HitFromDirection: Vector, HitInfo: HitResult, EventInstigator: Controller, DamageCauser: Actor, DamageTypeClass: UnrealEngineClass): Number
        fun FinishSpawningActor(Actor: Actor, SpawnTransform: Transform): Actor
        fun AcquireEditorActorElementHandle(Actor: Actor, bAllowCreate: Boolean): ScriptTypedElementHandle
        fun GetAIController(ControlledActor: Actor): AIController
        fun GetBlackboard(Target: Actor): BlackboardComponent
        fun AddDeviceVisualizationComponentBlocking(Target: Actor, XRDeviceId: XRDeviceId, bManualAttachment: Boolean, RelativeTransform: Transform): PrimitiveComponent
        fun AddNamedDeviceVisualizationComponentBlocking(Target: Actor, SystemName: String, DeviceName: String, bManualAttachment: Boolean, RelativeTransform: Transform, XRDeviceId: XRDeviceId = definedExternally): `T$515`
    }
}

external open class ActorComponent : UObject {
    constructor()
    constructor(Outer: UObject)
    open var PrimaryComponentTick: ActorComponentTickFunction
    open var ComponentTags: Array<String>
    open var AssetUserData: Array<AssetUserData>
    open var UCSSerializationIndex: Number
    open var bNetAddressable: Boolean
    open var bReplicates: Boolean
    open var bCreatedByConstructionScript: Boolean
    open var bInstanceComponent: Boolean
    open var bAutoActivate: Boolean
    open var bIsActive: Boolean
    open var bEditableWhenInherited: Boolean
    open var bCanEverAffectNavigation: Boolean
    open var bIsEditorOnly: Boolean
    open var bIsVisualizationComponent: Boolean
    open var bNeedsUCSSerializationIndexEvaluted: Boolean
    open var CreationMethod: String /* "Native" | "SimpleConstructionScript" | "UserConstructionScript" | "Instance" | "EComponentCreationMethod_MAX" */
    open var OnComponentActivated: UnrealEngineMulticastDelegate<(Component: ActorComponent, bReset: Boolean) -> Unit>
    open var OnComponentDeactivated: UnrealEngineMulticastDelegate<(Component: ActorComponent) -> Unit>
    open var UCSModifiedProperties: Array<SimpleMemberReference>
    open fun ToggleActive()
    open fun SetTickGroup(NewTickGroup: String /* "TG_PrePhysics" | "TG_StartPhysics" | "TG_DuringPhysics" | "TG_EndPhysics" | "TG_PostPhysics" | "TG_PostUpdateWork" | "TG_LastDemotable" | "TG_NewlySpawned" | "TG_MAX" */)
    open fun SetTickableWhenPaused(bTickableWhenPaused: Boolean)
    open fun SetIsReplicated(ShouldReplicate: Boolean)
    open fun SetComponentTickIntervalAndCooldown(TickInterval: Number)
    open fun SetComponentTickInterval(TickInterval: Number)
    open fun SetComponentTickEnabled(bEnabled: Boolean)
    open fun SetAutoActivate(bNewAutoActivate: Boolean)
    open fun SetActive(bNewActive: Boolean, bReset: Boolean)
    open fun RemoveTickPrerequisiteComponent(PrerequisiteComponent: ActorComponent)
    open fun RemoveTickPrerequisiteActor(PrerequisiteActor: Actor)
    open fun Tick(DeltaSeconds: Number)
    open fun Shutdown(EndPlayReason: String /* "Destroyed" | "LevelTransition" | "EndPlayInEditor" | "RemovedFromWorld" | "Quit" | "EEndPlayReason_MAX" */)
    open fun BeginPlay()
    open fun OnRep_IsActive()
    open fun DestroyComponent(UObject: UObject)
    open fun IsComponentTickEnabled(): Boolean
    open fun IsComponentBeingDestroyed(): Boolean
    open fun IsActive(): Boolean
    open fun GetOwner(): Actor
    open fun GetComponentTickInterval(): Number
    open fun Deactivate()
    open fun ComponentHasTag(Tag: String): Boolean
    open fun AddTickPrerequisiteComponent(PrerequisiteComponent: ActorComponent)
    open fun AddTickPrerequisiteActor(PrerequisiteActor: Actor)
    open fun Activate(bReset: Boolean)
    open fun IsRegistered(): Boolean
    open fun MarkRenderStateDirty()
    open fun RegisterComponent()
    open fun ReregisterComponent()
    open fun UnregisterComponent()
    open fun AcquireEditorComponentElementHandle(bAllowCreate: Boolean): ScriptTypedElementHandle

    companion object {
        fun Load(ResourceName: String): ActorComponent
        fun Find(Outer: UObject, ResourceName: String): ActorComponent
        fun GetDefaultObject(): ActorComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorComponent
        fun C(Other: UObject): ActorComponent
        fun C(Other: Any): ActorComponent
        fun IsRegistered(ActorComponent: ActorComponent): Boolean
        fun MarkRenderStateDirty(Component: ActorComponent)
        fun RegisterComponent(ActorComponent: ActorComponent)
        fun ReregisterComponent(ActorComponent: ActorComponent)
        fun UnregisterComponent(ActorComponent: ActorComponent)
        fun AcquireEditorComponentElementHandle(Component: ActorComponent, bAllowCreate: Boolean): ScriptTypedElementHandle
    }
}

external open class BlueprintComponentChangedPropertyInfo {
    open var PropertyName: String
    open var ArrayIndex: Number
    open var PropertyScope: Struct
    open fun clone(): BlueprintComponentChangedPropertyInfo

    companion object {
        fun C(Other: UObject): BlueprintComponentChangedPropertyInfo
        fun C(Other: Any): BlueprintComponentChangedPropertyInfo
    }
}

external open class BlueprintCookedComponentInstancingData {
    open var ChangedPropertyList: Array<BlueprintComponentChangedPropertyInfo>
    open var bHasValidCookedData: Boolean
    open fun clone(): BlueprintCookedComponentInstancingData

    companion object {
        fun C(Other: UObject): BlueprintCookedComponentInstancingData
        fun C(Other: Any): BlueprintCookedComponentInstancingData
    }
}

external open class BPVariableMetaDataEntry {
    open var DataKey: String
    open var DataValue: String
    open fun clone(): BPVariableMetaDataEntry

    companion object {
        fun C(Other: UObject): BPVariableMetaDataEntry
        fun C(Other: Any): BPVariableMetaDataEntry
    }
}

external open class SCS_Node : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ComponentClass: UnrealEngineClass
    open var ComponentTemplate: ActorComponent
    open var CookedComponentInstancingData: BlueprintCookedComponentInstancingData
    open var CategoryName: String
    open var AttachToName: String
    open var ParentComponentOrVariableName: String
    open var ParentComponentOwnerClassName: String
    open var bIsParentComponentNative: Boolean
    open var ChildNodes: Array<SCS_Node>
    open var MetaDataArray: Array<BPVariableMetaDataEntry>
    open var VariableGuid: Guid
    open var bIsNative: Boolean
    open var NativeComponentName: String
    open var bVariableNameAutoGenerated: Boolean
    open var InternalVariableName: String

    companion object {
        fun Load(ResourceName: String): SCS_Node
        fun Find(Outer: UObject, ResourceName: String): SCS_Node
        fun GetDefaultObject(): SCS_Node
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SCS_Node
        fun C(Other: UObject): SCS_Node
        fun C(Other: Any): SCS_Node
    }
}

external open class SimpleConstructionScript : UObject {
    constructor()
    constructor(Outer: UObject)
    open var RootNodes: Array<SCS_Node>
    open var AllNodes: Array<SCS_Node>
    open var DefaultSceneRootNode: SCS_Node
    open var RootNode: SCS_Node
    open var ActorComponentNodes: Array<SCS_Node>

    companion object {
        fun Load(ResourceName: String): SimpleConstructionScript
        fun Find(Outer: UObject, ResourceName: String): SimpleConstructionScript
        fun GetDefaultObject(): SimpleConstructionScript
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SimpleConstructionScript
        fun C(Other: UObject): SimpleConstructionScript
        fun C(Other: Any): SimpleConstructionScript
    }
}

external object ETimelineLengthMode {
    var TL_TimelineLength: String /* "TL_TimelineLength" */
    var TL_LastKeyFrame: String /* "TL_LastKeyFrame" */
    var TL_MAX: String /* "TL_MAX" */
}

external open class TTTrackBase {
    open var TrackName: String
    open var bIsExternalCurve: Boolean
    open var bIsExpanded: Boolean
    open var bIsCurveViewSynchronized: Boolean
    open fun clone(): TTTrackBase

    companion object {
        fun C(Other: UObject): TTTrackBase
        fun C(Other: Any): TTTrackBase
    }
}

external open class TTEventTrack : TTTrackBase {
    open var FunctionName: String
    open var CurveKeys: CurveFloat
    override fun clone(): TTEventTrack

    companion object {
        fun C(Other: UObject): TTEventTrack
        fun C(Other: Any): TTEventTrack
    }
}

external open class TTPropertyTrack : TTTrackBase {
    open var PropertyName: String
    override fun clone(): TTPropertyTrack

    companion object {
        fun C(Other: UObject): TTPropertyTrack
        fun C(Other: Any): TTPropertyTrack
    }
}

external open class TTFloatTrack : TTPropertyTrack {
    open var CurveFloat: CurveFloat
    override fun clone(): TTFloatTrack

    companion object {
        fun C(Other: UObject): TTFloatTrack
        fun C(Other: Any): TTFloatTrack
    }
}

external open class CurveVector : CurveBase {
    constructor()
    constructor(Outer: UObject)
    open var FloatCurves: RichCurve
    open fun GetVectorValue(InTime: Number): Vector

    companion object {
        fun Load(ResourceName: String): CurveVector
        fun Find(Outer: UObject, ResourceName: String): CurveVector
        fun GetDefaultObject(): CurveVector
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CurveVector
        fun C(Other: UObject): CurveVector
        fun C(Other: Any): CurveVector
    }
}

external open class TTVectorTrack : TTPropertyTrack {
    open var CurveVector: CurveVector
    override fun clone(): TTVectorTrack

    companion object {
        fun C(Other: UObject): TTVectorTrack
        fun C(Other: Any): TTVectorTrack
    }
}

external open class TTLinearColorTrack : TTPropertyTrack {
    open var CurveLinearColor: CurveLinearColor
    override fun clone(): TTLinearColorTrack

    companion object {
        fun C(Other: UObject): TTLinearColorTrack
        fun C(Other: Any): TTLinearColorTrack
    }
}

external open class TTTrackId {
    open var TrackType: Number
    open var TrackIndex: Number
    open fun clone(): TTTrackId

    companion object {
        fun C(Other: UObject): TTTrackId
        fun C(Other: Any): TTTrackId
    }
}

external open class TimelineTemplate : UObject {
    constructor()
    constructor(Outer: UObject)
    open var TimeLineLength: Number
    open var LengthMode: String /* "TL_TimelineLength" | "TL_LastKeyFrame" | "TL_MAX" */
    open var bAutoPlay: Boolean
    open var bLoop: Boolean
    open var bReplicated: Boolean
    open var bIgnoreTimeDilation: Boolean
    open var EventTracks: Array<TTEventTrack>
    open var FloatTracks: Array<TTFloatTrack>
    open var VectorTracks: Array<TTVectorTrack>
    open var LinearColorTracks: Array<TTLinearColorTrack>
    open var MetaDataArray: Array<BPVariableMetaDataEntry>
    open var TimelineGuid: Guid
    open var TimelineTickGroup: String /* "TG_PrePhysics" | "TG_StartPhysics" | "TG_DuringPhysics" | "TG_EndPhysics" | "TG_PostPhysics" | "TG_PostUpdateWork" | "TG_LastDemotable" | "TG_NewlySpawned" | "TG_MAX" */
    open var VariableName: String
    open var DirectionPropertyName: String
    open var UpdateFunctionName: String
    open var FinishedFunctionName: String
    open var TrackDisplayOrder: Array<TTTrackId>

    companion object {
        fun Load(ResourceName: String): TimelineTemplate
        fun Find(Outer: UObject, ResourceName: String): TimelineTemplate
        fun GetDefaultObject(): TimelineTemplate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TimelineTemplate
        fun C(Other: UObject): TimelineTemplate
        fun C(Other: Any): TimelineTemplate
    }
}

external open class BPComponentClassOverride {
    open var ComponentName: String
    open var ComponentClass: UnrealEngineClass
    open fun clone(): BPComponentClassOverride

    companion object {
        fun C(Other: UObject): BPComponentClassOverride
        fun C(Other: Any): BPComponentClassOverride
    }
}

external open class ComponentKey {
    open var OwnerClass: UnrealEngineClass
    open var SCSVariableName: String
    open var AssociatedGuid: Guid
    open fun clone(): ComponentKey

    companion object {
        fun C(Other: UObject): ComponentKey
        fun C(Other: Any): ComponentKey
    }
}

external open class ComponentOverrideRecord {
    open var ComponentClass: UnrealEngineClass
    open var ComponentTemplate: ActorComponent
    open var ComponentKey: ComponentKey
    open var CookedComponentInstancingData: BlueprintCookedComponentInstancingData
    open fun clone(): ComponentOverrideRecord

    companion object {
        fun C(Other: UObject): ComponentOverrideRecord
        fun C(Other: Any): ComponentOverrideRecord
    }
}

external open class InheritableComponentHandler : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Records: Array<ComponentOverrideRecord>
    open var UnnecessaryComponents: Array<ActorComponent>

    companion object {
        fun Load(ResourceName: String): InheritableComponentHandler
        fun Find(Outer: UObject, ResourceName: String): InheritableComponentHandler
        fun GetDefaultObject(): InheritableComponentHandler
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InheritableComponentHandler
        fun C(Other: UObject): InheritableComponentHandler
        fun C(Other: Any): InheritableComponentHandler
    }
}

external object ELifetimeCondition {
    var COND_None: String /* "COND_None" */
    var COND_InitialOnly: String /* "COND_InitialOnly" */
    var COND_OwnerOnly: String /* "COND_OwnerOnly" */
    var COND_SkipOwner: String /* "COND_SkipOwner" */
    var COND_SimulatedOnly: String /* "COND_SimulatedOnly" */
    var COND_AutonomousOnly: String /* "COND_AutonomousOnly" */
    var COND_SimulatedOrPhysics: String /* "COND_SimulatedOrPhysics" */
    var COND_InitialOrOwner: String /* "COND_InitialOrOwner" */
    var COND_Custom: String /* "COND_Custom" */
    var COND_ReplayOrOwner: String /* "COND_ReplayOrOwner" */
    var COND_ReplayOnly: String /* "COND_ReplayOnly" */
    var COND_SimulatedOnlyNoReplay: String /* "COND_SimulatedOnlyNoReplay" */
    var COND_SimulatedOrPhysicsNoReplay: String /* "COND_SimulatedOrPhysicsNoReplay" */
    var COND_SkipReplay: String /* "COND_SkipReplay" */
    var COND_Never: String /* "COND_Never" */
    var COND_Max: String /* "COND_Max" */
}

external open class BPVariableDescription {
    open var VarName: String
    open var VarGuid: Guid
    open var VarType: EdGraphPinType
    open var FriendlyName: String
    open var Category: String
    open var PropertyFlags: Any
    open var RepNotifyFunc: String
    open var ReplicationCondition: String /* "COND_None" | "COND_InitialOnly" | "COND_OwnerOnly" | "COND_SkipOwner" | "COND_SimulatedOnly" | "COND_AutonomousOnly" | "COND_SimulatedOrPhysics" | "COND_InitialOrOwner" | "COND_Custom" | "COND_ReplayOrOwner" | "COND_ReplayOnly" | "COND_SimulatedOnlyNoReplay" | "COND_SimulatedOrPhysicsNoReplay" | "COND_SkipReplay" | "COND_Never" | "COND_Max" */
    open var MetaDataArray: Array<BPVariableMetaDataEntry>
    open var DefaultValue: String
    open fun clone(): BPVariableDescription

    companion object {
        fun C(Other: UObject): BPVariableDescription
        fun C(Other: Any): BPVariableDescription
    }
}

external open class BPInterfaceDescription {
    open var Interface: UnrealEngineClass
    open var Graphs: Array<EdGraph>
    open fun clone(): BPInterfaceDescription

    companion object {
        fun C(Other: UObject): BPInterfaceDescription
        fun C(Other: Any): BPInterfaceDescription
    }
}

external open class BPEditorBookmarkNode {
    open var NodeGuid: Guid
    open var ParentGuid: Guid
    open var DisplayName: String
    open fun clone(): BPEditorBookmarkNode

    companion object {
        fun C(Other: UObject): BPEditorBookmarkNode
        fun C(Other: Any): BPEditorBookmarkNode
    }
}

external open class Breakpoint : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): Breakpoint
        fun Find(Outer: UObject, ResourceName: String): Breakpoint
        fun GetDefaultObject(): Breakpoint
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Breakpoint
        fun C(Other: UObject): Breakpoint
        fun C(Other: Any): Breakpoint
    }
}

external open class EdGraphPinReference {
    open var OwningNode: Any
    open var PinId: Guid
    open fun clone(): EdGraphPinReference

    companion object {
        fun C(Other: UObject): EdGraphPinReference
        fun C(Other: Any): EdGraphPinReference
    }
}

external open class BlueprintExtension : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlueprintExtension
        fun Find(Outer: UObject, ResourceName: String): BlueprintExtension
        fun GetDefaultObject(): BlueprintExtension
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintExtension
        fun C(Other: UObject): BlueprintExtension
        fun C(Other: Any): BlueprintExtension
    }
}

external open class Blueprint : BlueprintCore {
    constructor()
    constructor(Outer: UObject)
    open var ParentClass: UnrealEngineClass
    open var BlueprintType: String /* "BPTYPE_Normal" | "BPTYPE_Const" | "BPTYPE_MacroLibrary" | "BPTYPE_Interface" | "BPTYPE_LevelScript" | "BPTYPE_FunctionLibrary" | "BPTYPE_MAX" */
    open var bRecompileOnLoad: Boolean
    open var bHasBeenRegenerated: Boolean
    open var bIsRegeneratingOnLoad: Boolean
    open var bBeingCompiled: Boolean
    open var bIsNewlyCreated: Boolean
    open var bForceFullEditor: Boolean
    open var bQueuedForCompilation: Boolean
    open var bRunConstructionScriptOnDrag: Boolean
    open var bRunConstructionScriptInSequencer: Boolean
    open var bGenerateConstClass: Boolean
    open var bGenerateAbstractClass: Boolean
    open var bDisplayCompilePIEWarning: Boolean
    open var bDeprecate: Boolean
    open var bDuplicatingReadOnly: Boolean
    open var NativizationFlag: String /* "Disabled" | "Dependency" | "ExplicitlyEnabled" | "EBlueprintNativizationFlag_MAX" */
    open var CompileMode: String /* "Default" | "Development" | "FinalRelease" | "EBlueprintCompileMode_MAX" */
    open var Status: String /* "BS_Unknown" | "BS_Dirty" | "BS_Error" | "BS_UpToDate" | "BS_BeingCreated" | "BS_UpToDateWithWarnings" | "BS_MAX" */
    open var BlueprintDisplayName: String
    open var BlueprintDescription: String
    open var BlueprintNamespace: String
    open var BlueprintCategory: String
    open var HideCategories: Array<String>
    open var BlueprintSystemVersion: Number
    open var SimpleConstructionScript: SimpleConstructionScript
    open var UbergraphPages: Array<EdGraph>
    open var FunctionGraphs: Array<EdGraph>
    open var DelegateSignatureGraphs: Array<EdGraph>
    open var MacroGraphs: Array<EdGraph>
    open var IntermediateGeneratedGraphs: Array<EdGraph>
    open var EventGraphs: Array<EdGraph>
    open var PRIVATE_CachedMacroInfo: Any
    open var ComponentTemplates: Array<ActorComponent>
    open var Timelines: Array<TimelineTemplate>
    open var ComponentClassOverrides: Array<BPComponentClassOverride>
    open var InheritableComponentHandler: InheritableComponentHandler
    open var NewVariables: Array<BPVariableDescription>
    open var CategorySorting: Array<String>
    open var ImportedNamespaces: Any
    open var ImplementedInterfaces: Array<BPInterfaceDescription>
    open var LastEditedDocuments: Array<EditedDocumentInfo>
    open var Bookmarks: Any
    open var BookmarkNodes: Array<BPEditorBookmarkNode>
    open var Breakpoints: Array<Breakpoint>
    open var WatchedPins: Array<EdGraphPinReference>
    open var DeprecatedPinWatches: Array<EdGraphPin_Deprecated>
    open var ComponentTemplateNameIndex: Any
    open var OldToNewComponentTemplateNames: Any
    open var Extensions: Array<BlueprintExtension>
    open var ThumbnailInfo: ThumbnailInfo
    open var CrcLastCompiledCDO: Any
    open var CrcLastCompiledSignature: Any
    open var bCachedDependenciesUpToDate: Boolean
    open var CachedDependencies: Any
    open var CachedDependents: Any
    open var CachedUDSDependencies: Any
    open var OriginalClass: UnrealEngineClass
    open fun AddComponentsToBlueprint(Components: Array<ActorComponent>, bHarvesting: Boolean, OptionalNewRootComponent: ActorComponent, bKeepMobility: Boolean)
    open fun CompileBlueprint()
    open fun GetParentClassOfBlueprint(): UnrealEngineClass
    open fun RemoveComponentFromBlueprint(RemoveComponent: ActorComponent, bPromoteChildren: Boolean)
    open fun GetBlueprintGeneratedClass(): UnrealEngineClass
    open fun AddFunctionGraph(FuncName: String): EdGraph
    open fun FindEventGraph(): EdGraph
    open fun FindGraph(GraphName: String): EdGraph
    open fun RemoveFunctionGraph(FuncName: String)
    open fun RemoveGraph(Graph: EdGraph)
    open fun RemoveUnusedNodes()
    open fun RemoveUnusedVariables(): Number
    open fun ReparentBlueprint(NewParentClass: UnrealEngineClass)
    open fun ReplaceVariableReferences(OldVarName: String, NewVarName: String)
    open fun UpgradeOperatorNodes()

    companion object {
        fun Load(ResourceName: String): Blueprint
        fun Find(Outer: UObject, ResourceName: String): Blueprint
        fun GetDefaultObject(): Blueprint
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Blueprint
        fun C(Other: UObject): Blueprint
        fun C(Other: Any): Blueprint
        fun AddComponentsToBlueprint(Blueprint: Blueprint, Components: Array<ActorComponent>, bHarvesting: Boolean, OptionalNewRootComponent: ActorComponent, bKeepMobility: Boolean)
        fun CompileBlueprint(Blueprint: Blueprint)
        fun GetParentClassOfBlueprint(Blueprint: Blueprint): UnrealEngineClass
        fun RemoveComponentFromBlueprint(Blueprint: Blueprint, RemoveComponent: ActorComponent, bPromoteChildren: Boolean)
        fun GetBlueprintGeneratedClass(Blueprint: Blueprint): UnrealEngineClass
        fun AddFunctionGraph(Blueprint: Blueprint, FuncName: String): EdGraph
        fun FindEventGraph(Blueprint: Blueprint): EdGraph
        fun FindGraph(Blueprint: Blueprint, GraphName: String): EdGraph
        fun RemoveFunctionGraph(Blueprint: Blueprint, FuncName: String)
        fun RemoveGraph(Blueprint: Blueprint, Graph: EdGraph)
        fun RemoveUnusedNodes(Blueprint: Blueprint)
        fun RemoveUnusedVariables(Blueprint: Blueprint): Number
        fun ReparentBlueprint(Blueprint: Blueprint, NewParentClass: UnrealEngineClass)
        fun ReplaceVariableReferences(Blueprint: Blueprint, OldVarName: String, NewVarName: String)
        fun UpgradeOperatorNodes(Blueprint: Blueprint)
    }
}

external object ERigVMGraphNotifType {
    var GraphChanged: String /* "GraphChanged" */
    var NodeAdded: String /* "NodeAdded" */
    var NodeRemoved: String /* "NodeRemoved" */
    var NodeSelected: String /* "NodeSelected" */
    var NodeDeselected: String /* "NodeDeselected" */
    var NodeSelectionChanged: String /* "NodeSelectionChanged" */
    var NodePositionChanged: String /* "NodePositionChanged" */
    var NodeSizeChanged: String /* "NodeSizeChanged" */
    var NodeColorChanged: String /* "NodeColorChanged" */
    var PinAdded: String /* "PinAdded" */
    var PinRemoved: String /* "PinRemoved" */
    var PinRenamed: String /* "PinRenamed" */
    var PinExpansionChanged: String /* "PinExpansionChanged" */
    var PinWatchedChanged: String /* "PinWatchedChanged" */
    var PinArraySizeChanged: String /* "PinArraySizeChanged" */
    var PinDefaultValueChanged: String /* "PinDefaultValueChanged" */
    var PinDirectionChanged: String /* "PinDirectionChanged" */
    var PinTypeChanged: String /* "PinTypeChanged" */
    var PinIndexChanged: String /* "PinIndexChanged" */
    var LinkAdded: String /* "LinkAdded" */
    var LinkRemoved: String /* "LinkRemoved" */
    var CommentTextChanged: String /* "CommentTextChanged" */
    var RerouteCompactnessChanged: String /* "RerouteCompactnessChanged" */
    var VariableAdded: String /* "VariableAdded" */
    var VariableRemoved: String /* "VariableRemoved" */
    var VariableRenamed: String /* "VariableRenamed" */
    var ParameterAdded: String /* "ParameterAdded" */
    var ParameterRemoved: String /* "ParameterRemoved" */
    var ParameterRenamed: String /* "ParameterRenamed" */
    var InteractionBracketOpened: String /* "InteractionBracketOpened" */
    var InteractionBracketClosed: String /* "InteractionBracketClosed" */
    var InteractionBracketCanceled: String /* "InteractionBracketCanceled" */
    var PinBoundVariableChanged: String /* "PinBoundVariableChanged" */
    var NodeRenamed: String /* "NodeRenamed" */
    var NodeReferenceChanged: String /* "NodeReferenceChanged" */
    var NodeCategoryChanged: String /* "NodeCategoryChanged" */
    var NodeKeywordsChanged: String /* "NodeKeywordsChanged" */
    var NodeDescriptionChanged: String /* "NodeDescriptionChanged" */
    var VariableRemappingChanged: String /* "VariableRemappingChanged" */
    var Invalid: String /* "Invalid" */
    var ERigVMGraphNotifType_MAX: String /* "ERigVMGraphNotifType_MAX" */
}

external object ERigVMPinDirection {
    var Input: String /* "Input" */
    var Output: String /* "Output" */
    var IO: String /* "IO" */
    var Visible: String /* "Visible" */
    var Hidden: String /* "Hidden" */
    var Invalid: String /* "Invalid" */
    var ERigVMPinDirection_MAX: String /* "ERigVMPinDirection_MAX" */
}

external open class RigVMLink : UObject {
    constructor()
    constructor(Outer: UObject)
    open var SourcePinPath: String
    open var TargetPinPath: String
    open fun GetTargetPin(): RigVMPin
    open fun GetSourcePin(): RigVMPin
    open fun GetPinPathRepresentation(): String
    open fun GetLinkIndex(): Number
    open fun GetGraph(): RigVMGraph

    companion object {
        fun Load(ResourceName: String): RigVMLink
        fun Find(Outer: UObject, ResourceName: String): RigVMLink
        fun GetDefaultObject(): RigVMLink
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RigVMLink
        fun C(Other: UObject): RigVMLink
        fun C(Other: Any): RigVMLink
    }
}

external open class RigVMUnitNode : RigVMNode {
    constructor()
    constructor(Outer: UObject)
    open var ScriptStruct: ScriptStruct
    open var MethodName: String
    open fun GetStructDefaultValue(): String
    open fun GetScriptStruct(): ScriptStruct
    open fun GetMethodName(): String

    companion object {
        fun Load(ResourceName: String): RigVMUnitNode
        fun Find(Outer: UObject, ResourceName: String): RigVMUnitNode
        fun GetDefaultObject(): RigVMUnitNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RigVMUnitNode
        fun C(Other: UObject): RigVMUnitNode
        fun C(Other: Any): RigVMUnitNode
    }
}

external open class RigVMInjectionInfo : UObject {
    constructor()
    constructor(Outer: UObject)
    open var UnitNode: RigVMUnitNode
    open var UNode: RigVMNode
    open var bInjectedAsInput: Boolean
    open var InputPin: RigVMPin
    open var OutputPin: RigVMPin
    open fun GetPin(): RigVMPin
    open fun GetGraph(): RigVMGraph

    companion object {
        fun Load(ResourceName: String): RigVMInjectionInfo
        fun Find(Outer: UObject, ResourceName: String): RigVMInjectionInfo
        fun GetDefaultObject(): RigVMInjectionInfo
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RigVMInjectionInfo
        fun C(Other: UObject): RigVMInjectionInfo
        fun C(Other: Any): RigVMInjectionInfo
    }
}

external open class RigVMPin : UObject {
    constructor()
    constructor(Outer: UObject)
    open var DisplayName: String
    open var Direction: String /* "Input" | "Output" | "IO" | "Visible" | "Hidden" | "Invalid" | "ERigVMPinDirection_MAX" */
    open var bIsExpanded: Boolean
    open var bIsConstant: Boolean
    open var bRequiresWatch: Boolean
    open var bIsDynamicArray: Boolean
    open var CPPType: String
    open var CPPTypeObject: UObject
    open var CPPTypeObjectPath: String
    open var DefaultValue: String
    open var CustomWidgetName: String
    open var SubPins: Array<RigVMPin>
    open var Links: Array<RigVMLink>
    open var InjectionInfos: Array<RigVMInjectionInfo>
    open var BoundVariablePath: String
    open fun RequiresWatch(bCheckExposedPinChain: Boolean): Boolean
    open fun IsUObject(): Boolean
    open fun IsUnknownType(): Boolean
    open fun IsStructMember(): Boolean
    open fun IsStruct(): Boolean
    open fun IsStringType(): Boolean
    open fun IsRootPin(): Boolean
    open fun IsReferenceCountedContainer(): Boolean
    open fun IsLinkedTo(InPin: RigVMPin): Boolean
    open fun IsExpanded(): Boolean
    open fun IsExecuteContext(): Boolean
    open fun IsDynamicArray(): Boolean
    open fun IsDefinedAsConstant(): Boolean
    open fun IsArrayElement(): Boolean
    open fun IsArray(): Boolean
    open fun GetToolTipText(): String
    open fun GetTargetLinks(bRecursive: Boolean): Array<RigVMLink>
    open fun GetSubPins(): Array<RigVMPin>
    open fun GetSourceLinks(bRecursive: Boolean): Array<RigVMLink>
    open fun GetSegmentPath(bIncludeRootPin: Boolean): String
    open fun GetScriptStruct(): ScriptStruct
    open fun GetRootPin(): RigVMPin
    open fun GetPinPath(bUseNodePath: Boolean): String
    open fun GetPinIndex(): Number
    open fun GetPinForLink(): RigVMPin
    open fun GetParentPin(): RigVMPin
    open fun GetOriginalPinFromInjectedNode(): RigVMPin
    open fun GetNode(): RigVMNode
    open fun GetLinks(): Array<RigVMLink>
    open fun GetLinkedTargetPins(bRecursive: Boolean): Array<RigVMPin>
    open fun GetLinkedSourcePins(bRecursive: Boolean): Array<RigVMPin>
    open fun GetGraph(): RigVMGraph
    open fun GetEnum(): Enum
    override fun GetDisplayName(): String
    open fun GetDirection(): String /* "Input" | "Output" | "IO" | "Visible" | "Hidden" | "Invalid" | "ERigVMPinDirection_MAX" */
    open fun GetDefaultValue(): String
    open fun GetCustomWidgetName(): String
    open fun GetCPPTypeObject(): UObject
    open fun GetCPPType(): String
    open fun GetArraySize(): Number
    open fun GetArrayElementCppType(): String
    open fun FindSubPin(InPinPath: String): RigVMPin

    companion object {
        fun Load(ResourceName: String): RigVMPin
        fun Find(Outer: UObject, ResourceName: String): RigVMPin
        fun GetDefaultObject(): RigVMPin
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RigVMPin
        fun C(Other: UObject): RigVMPin
        fun C(Other: Any): RigVMPin
    }
}

external open class RigVMNode : UObject {
    constructor()
    constructor(Outer: UObject)
    open var NodeTitle: String
    open var position: Vector2D
    open var Size: Vector2D
    open var NodeColor: LinearColor
    open var PreviousName: String
    open var bHasBreakpoint: Boolean
    open var bHaltedAtThisNode: Boolean
    open var Pins: Array<RigVMPin>
    open var OrphanedPins: Array<RigVMPin>
    open fun SetHasBreakpoint(bValue: Boolean)
    open fun SetExecutionIsHaltedAtThisNode(bValue: Boolean)
    open fun IsVisibleInUI(): Boolean
    open fun IsSelected(): Boolean
    open fun IsPure(): Boolean
    open fun IsMutable(): Boolean
    open fun IsLinkedTo(InNode: RigVMNode): Boolean
    open fun IsInjected(): Boolean
    open fun IsEvent(): Boolean
    open fun IsDefinedAsVarying(): Boolean
    open fun IsDefinedAsConstant(): Boolean
    open fun HasPinOfDirection(InDirection: String /* "Input" | "Output" | "IO" | "Visible" | "Hidden" | "Invalid" | "ERigVMPinDirection_MAX" */): Boolean
    open fun HasOutputPin(bIncludeIO: Boolean): Boolean
    open fun HasOrphanedPins(): Boolean
    open fun HasIOPin(): Boolean
    open fun HasInputPin(bIncludeIO: Boolean): Boolean
    open fun HasBreakpoint(): Boolean
    open fun GetToolTipText(): String
    open fun GetSize(): Vector2D
    open fun GetRootGraph(): RigVMGraph
    open fun GetPreviousFName(): String
    open fun GetPosition(): Vector2D
    open fun GetPins(): Array<RigVMPin>
    open fun GetOrphanedPins(): Array<RigVMPin>
    open fun GetNodeTitle(): String
    open fun GetNodePath(bRecursive: Boolean): String
    open fun GetNodeIndex(): Number
    open fun GetNodeColor(): LinearColor
    open fun GetLinks(): Array<RigVMLink>
    open fun GetLinkedTargetNodes(): Array<RigVMNode>
    open fun GetLinkedSourceNodes(): Array<RigVMNode>
    open fun GetInjectionInfo(): RigVMInjectionInfo
    open fun GetGraph(): RigVMGraph
    open fun GetEventName(): String
    open fun GetAllPinsRecursively(): Array<RigVMPin>
    open fun FindPin(InPinPath: String): RigVMPin
    open fun ExecutionIsHaltedAtThisNode(): Boolean

    companion object {
        fun Load(ResourceName: String): RigVMNode
        fun Find(Outer: UObject, ResourceName: String): RigVMNode
        fun GetDefaultObject(): RigVMNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RigVMNode
        fun C(Other: UObject): RigVMNode
        fun C(Other: Any): RigVMNode
    }
}

external open class RigVMGraphVariableDescription {
    open var Name: String
    open var CPPType: String
    open var CPPTypeObject: UObject
    open var DefaultValue: String
    open fun clone(): RigVMGraphVariableDescription

    companion object {
        fun C(Other: UObject): RigVMGraphVariableDescription
        fun C(Other: Any): RigVMGraphVariableDescription
    }
}

external open class RigVMLibraryNode : RigVMNode {
    constructor()
    constructor(Outer: UObject)
    open fun GetLibrary(): RigVMFunctionLibrary
    open fun GetContainedGraph(): RigVMGraph

    companion object {
        fun Load(ResourceName: String): RigVMLibraryNode
        fun Find(Outer: UObject, ResourceName: String): RigVMLibraryNode
        fun GetDefaultObject(): RigVMLibraryNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RigVMLibraryNode
        fun C(Other: UObject): RigVMLibraryNode
        fun C(Other: Any): RigVMLibraryNode
    }
}

external open class RigVMFunctionReferenceNode : RigVMLibraryNode {
    constructor()
    constructor(Outer: UObject)
    open var ReferencedNodePtr: RigVMLibraryNode
    open var VariableMap: Any

    companion object {
        fun Load(ResourceName: String): RigVMFunctionReferenceNode
        fun Find(Outer: UObject, ResourceName: String): RigVMFunctionReferenceNode
        fun GetDefaultObject(): RigVMFunctionReferenceNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RigVMFunctionReferenceNode
        fun C(Other: UObject): RigVMFunctionReferenceNode
        fun C(Other: Any): RigVMFunctionReferenceNode
    }
}

external open class RigVMBuildData : UObject {
    constructor()
    constructor(Outer: UObject)
    open var FunctionReferences: Any

    companion object {
        fun Load(ResourceName: String): RigVMBuildData
        fun Find(Outer: UObject, ResourceName: String): RigVMBuildData
        fun GetDefaultObject(): RigVMBuildData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RigVMBuildData
        fun C(Other: UObject): RigVMBuildData
        fun C(Other: Any): RigVMBuildData
    }
}

external open class RigVMFunctionLibrary : RigVMGraph {
    constructor()
    constructor(Outer: UObject)
    open var FunctionReferences: Any
    open var LocalizedFunctions: Any
    open fun GetReferencesForFunction(InFunctionName: String): Array<RigVMFunctionReferenceNode>
    open fun GetReferencePathsForFunction(InFunctionName: String): Array<String>
    open fun GetFunctions(): Array<RigVMLibraryNode>
    open fun GetBuildData(): RigVMBuildData
    open fun FindFunctionForNode(InNode: RigVMNode): RigVMLibraryNode
    open fun FindFunction(InFunctionName: String): RigVMLibraryNode

    companion object {
        fun Load(ResourceName: String): RigVMFunctionLibrary
        fun Find(Outer: UObject, ResourceName: String): RigVMFunctionLibrary
        fun GetDefaultObject(): RigVMFunctionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RigVMFunctionLibrary
        fun C(Other: UObject): RigVMFunctionLibrary
        fun C(Other: Any): RigVMFunctionLibrary
    }
}

external open class RigVMFunctionReturnNode : RigVMNode {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): RigVMFunctionReturnNode
        fun Find(Outer: UObject, ResourceName: String): RigVMFunctionReturnNode
        fun GetDefaultObject(): RigVMFunctionReturnNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RigVMFunctionReturnNode
        fun C(Other: UObject): RigVMFunctionReturnNode
        fun C(Other: Any): RigVMFunctionReturnNode
    }
}

external open class RigVMGraphParameterDescription {
    open var Name: String
    open var bIsInput: Boolean
    open var CPPType: String
    open var CPPTypeObject: UObject
    open var DefaultValue: String
    open fun clone(): RigVMGraphParameterDescription

    companion object {
        fun C(Other: UObject): RigVMGraphParameterDescription
        fun C(Other: Any): RigVMGraphParameterDescription
    }
}

external open class RigVMFunctionEntryNode : RigVMNode {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): RigVMFunctionEntryNode
        fun Find(Outer: UObject, ResourceName: String): RigVMFunctionEntryNode
        fun GetDefaultObject(): RigVMFunctionEntryNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RigVMFunctionEntryNode
        fun C(Other: UObject): RigVMFunctionEntryNode
        fun C(Other: Any): RigVMFunctionEntryNode
    }
}

external open class RigVMGraph : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Nodes: Array<RigVMNode>
    open var Links: Array<RigVMLink>
    open var SelectedNodes: Array<String>
    open var DefaultFunctionLibraryPtr: Any
    open var LocalVariables: Array<RigVMGraphVariableDescription>
    open fun SetDefaultFunctionLibrary(InFunctionLibrary: RigVMFunctionLibrary)
    open fun IsTopLevelGraph(): Boolean
    open fun IsRootGraph(): Boolean
    open fun IsNodeSelected(InNodeName: String): Boolean
    open fun GetVariableDescriptions(): Array<RigVMGraphVariableDescription>
    open fun GetSelectNodes(): Array<String>
    open fun GetRootGraph(): RigVMGraph
    open fun GetReturnNode(): RigVMFunctionReturnNode
    open fun GetParentGraph(): RigVMGraph
    open fun GetParameterDescriptions(): Array<RigVMGraphParameterDescription>
    open fun GetOutputArguments(): Array<RigVMGraphVariableDescription>
    open fun GetNodes(): Array<RigVMNode>
    open fun GetNodePath(): String
    open fun GetLocalVariables(bIncludeInputArguments: Boolean): Array<RigVMGraphVariableDescription>
    open fun GetLinks(): Array<RigVMLink>
    open fun GetInputArguments(): Array<RigVMGraphVariableDescription>
    open fun GetGraphName(): String
    open fun GetEntryNode(): RigVMFunctionEntryNode
    open fun GetDefaultFunctionLibrary(): RigVMFunctionLibrary
    open fun GetContainedGraphs(bRecursive: Boolean): Array<RigVMGraph>
    open fun FindPin(InPinPath: String): RigVMPin
    open fun FindNodeByName(InNodeName: String): RigVMNode
    open fun FindNode(InNodePath: String): RigVMNode
    open fun FindLink(InLinkPinPathRepresentation: String): RigVMLink

    companion object {
        fun Load(ResourceName: String): RigVMGraph
        fun Find(Outer: UObject, ResourceName: String): RigVMGraph
        fun GetDefaultObject(): RigVMGraph
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RigVMGraph
        fun C(Other: UObject): RigVMGraph
        fun C(Other: Any): RigVMGraph
    }
}

external open class RigVMActionKey {
    open var ScriptStructPath: String
    open var ExportedText: String
    open fun clone(): RigVMActionKey

    companion object {
        fun C(Other: UObject): RigVMActionKey
        fun C(Other: Any): RigVMActionKey
    }
}

external open class RigVMActionStack : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ActionIndex: Number
    open var UndoActions: Array<RigVMActionKey>
    open var RedoActions: Array<RigVMActionKey>
    open fun Undo(InController: RigVMController): Boolean
    open fun Redo(InController: RigVMController): Boolean
    open fun OpenUndoBracket(InTitle: String): Boolean
    open fun CloseUndoBracket(): Boolean
    open fun CancelUndoBracket(): Boolean

    companion object {
        fun Load(ResourceName: String): RigVMActionStack
        fun Find(Outer: UObject, ResourceName: String): RigVMActionStack
        fun GetDefaultObject(): RigVMActionStack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RigVMActionStack
        fun C(Other: UObject): RigVMActionStack
        fun C(Other: Any): RigVMActionStack
    }
}

external open class RigVMCollapseNode : RigVMLibraryNode {
    constructor()
    constructor(Outer: UObject)
    open var ContainedGraph: RigVMGraph
    open var NodeCategory: String
    open var NodeKeywords: String
    open var NodeDescription: String

    companion object {
        fun Load(ResourceName: String): RigVMCollapseNode
        fun Find(Outer: UObject, ResourceName: String): RigVMCollapseNode
        fun GetDefaultObject(): RigVMCollapseNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RigVMCollapseNode
        fun C(Other: UObject): RigVMCollapseNode
        fun C(Other: Any): RigVMCollapseNode
    }
}

external open class RigVMVariableNode : RigVMNode {
    constructor()
    constructor(Outer: UObject)
    open fun IsLocalVariable(): Boolean
    open fun IsInputArgument(): Boolean
    open fun IsGetter(): Boolean
    open fun GetVariableName(): String
    open fun GetVariableDescription(): RigVMGraphVariableDescription
    open fun GetDefaultValue(): String
    open fun GetCPPTypeObject(): UObject
    open fun GetCPPType(): String

    companion object {
        fun Load(ResourceName: String): RigVMVariableNode
        fun Find(Outer: UObject, ResourceName: String): RigVMVariableNode
        fun GetDefaultObject(): RigVMVariableNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RigVMVariableNode
        fun C(Other: UObject): RigVMVariableNode
        fun C(Other: Any): RigVMVariableNode
    }
}

external open class RigVMSelectNode : RigVMNode {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): RigVMSelectNode
        fun Find(Outer: UObject, ResourceName: String): RigVMSelectNode
        fun GetDefaultObject(): RigVMSelectNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RigVMSelectNode
        fun C(Other: UObject): RigVMSelectNode
        fun C(Other: Any): RigVMSelectNode
    }
}

external open class RigVMRerouteNode : RigVMNode {
    constructor()
    constructor(Outer: UObject)
    open var bShowAsFullNode: Boolean
    open fun GetShowsAsFullNode(): Boolean

    companion object {
        fun Load(ResourceName: String): RigVMRerouteNode
        fun Find(Outer: UObject, ResourceName: String): RigVMRerouteNode
        fun GetDefaultObject(): RigVMRerouteNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RigVMRerouteNode
        fun C(Other: UObject): RigVMRerouteNode
        fun C(Other: Any): RigVMRerouteNode
    }
}

external open class RigVMPrototypeNode : RigVMNode {
    constructor()
    constructor(Outer: UObject)
    open var PrototypeNotation: String
    open var SupportedTypesCache: Any
    open fun GetNotation(): String

    companion object {
        fun Load(ResourceName: String): RigVMPrototypeNode
        fun Find(Outer: UObject, ResourceName: String): RigVMPrototypeNode
        fun GetDefaultObject(): RigVMPrototypeNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RigVMPrototypeNode
        fun C(Other: UObject): RigVMPrototypeNode
        fun C(Other: Any): RigVMPrototypeNode
    }
}

external open class RigVMParameterNode : RigVMNode {
    constructor()
    constructor(Outer: UObject)
    open fun IsInput(): Boolean
    open fun GetParameterName(): String
    open fun GetParameterDescription(): RigVMGraphParameterDescription
    open fun GetDefaultValue(): String
    open fun GetCPPTypeObject(): UObject
    open fun GetCPPType(): String

    companion object {
        fun Load(ResourceName: String): RigVMParameterNode
        fun Find(Outer: UObject, ResourceName: String): RigVMParameterNode
        fun GetDefaultObject(): RigVMParameterNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RigVMParameterNode
        fun C(Other: UObject): RigVMParameterNode
        fun C(Other: Any): RigVMParameterNode
    }
}

external open class RigVMIfNode : RigVMNode {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): RigVMIfNode
        fun Find(Outer: UObject, ResourceName: String): RigVMIfNode
        fun GetDefaultObject(): RigVMIfNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RigVMIfNode
        fun C(Other: UObject): RigVMIfNode
        fun C(Other: Any): RigVMIfNode
    }
}

external open class RigVMEnumNode : RigVMNode {
    constructor()
    constructor(Outer: UObject)
    open fun GetEnum(): Enum
    open fun GetCPPTypeObject(): UObject
    open fun GetCPPType(): String

    companion object {
        fun Load(ResourceName: String): RigVMEnumNode
        fun Find(Outer: UObject, ResourceName: String): RigVMEnumNode
        fun GetDefaultObject(): RigVMEnumNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RigVMEnumNode
        fun C(Other: UObject): RigVMEnumNode
        fun C(Other: Any): RigVMEnumNode
    }
}

external open class RigVMCommentNode : RigVMNode {
    constructor()
    constructor(Outer: UObject)
    open var CommentText: String
    open var FontSize: Number
    open var bBubbleVisible: Boolean
    open var bColorBubble: Boolean
    open fun GetCommentText(): String
    open fun GetCommentFontSize(): Number
    open fun GetCommentColorBubble(): Boolean
    open fun GetCommentBubbleVisible(): Boolean

    companion object {
        fun Load(ResourceName: String): RigVMCommentNode
        fun Find(Outer: UObject, ResourceName: String): RigVMCommentNode
        fun GetDefaultObject(): RigVMCommentNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RigVMCommentNode
        fun C(Other: UObject): RigVMCommentNode
        fun C(Other: Any): RigVMCommentNode
    }
}

external open class RigVMBranchNode : RigVMNode {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): RigVMBranchNode
        fun Find(Outer: UObject, ResourceName: String): RigVMBranchNode
        fun GetDefaultObject(): RigVMBranchNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RigVMBranchNode
        fun C(Other: UObject): RigVMBranchNode
        fun C(Other: Any): RigVMBranchNode
    }
}

external open class RigVMArrayNode : RigVMNode {
    constructor()
    constructor(Outer: UObject)
    open var OpCode: String /* "Execute_0_Operands" | "Execute_1_Operands" | "Execute_2_Operands" | "Execute_3_Operands" | "Execute_4_Operands" | "Execute_5_Operands" | "Execute_6_Operands" | "Execute_7_Operands" | "Execute_8_Operands" | "Execute_9_Operands" | "Execute_10_Operands" | "Execute_11_Operands" | "Execute_12_Operands" | "Execute_13_Operands" | "Execute_14_Operands" | "Execute_15_Operands" | "Execute_16_Operands" | "Execute_17_Operands" | "Execute_18_Operands" | "Execute_19_Operands" | "Execute_20_Operands" | "Execute_21_Operands" | "Execute_22_Operands" | "Execute_23_Operands" | "Execute_24_Operands" | "Execute_25_Operands" | "Execute_26_Operands" | "Execute_27_Operands" | "Execute_28_Operands" | "Execute_29_Operands" | "Execute_30_Operands" | "Execute_31_Operands" | "Execute_32_Operands" | "Execute_33_Operands" | "Execute_34_Operands" | "Execute_35_Operands" | "Execute_36_Operands" | "Execute_37_Operands" | "Execute_38_Operands" | "Execute_39_Operands" | "Execute_40_Operands" | "Execute_41_Operands" | "Execute_42_Operands" | "Execute_43_Operands" | "Execute_44_Operands" | "Execute_45_Operands" | "Execute_46_Operands" | "Execute_47_Operands" | "Execute_48_Operands" | "Execute_49_Operands" | "Execute_50_Operands" | "Execute_51_Operands" | "Execute_52_Operands" | "Execute_53_Operands" | "Execute_54_Operands" | "Execute_55_Operands" | "Execute_56_Operands" | "Execute_57_Operands" | "Execute_58_Operands" | "Execute_59_Operands" | "Execute_60_Operands" | "Execute_61_Operands" | "Execute_62_Operands" | "Execute_63_Operands" | "Execute_64_Operands" | "Zero" | "BoolFalse" | "BoolTrue" | "Copy" | "Increment" | "Decrement" | "Equals" | "NotEquals" | "JumpAbsolute" | "JumpForward" | "JumpBackward" | "JumpAbsoluteIf" | "JumpForwardIf" | "JumpBackwardIf" | "ChangeType" | "Exit" | "BeginBlock" | "EndBlock" | "ArrayReset" | "ArrayGetNum" | "ArraySetNum" | "ArrayGetAtIndex" | "ArraySetAtIndex" | "ArrayAdd" | "ArrayInsert" | "ArrayRemove" | "ArrayFind" | "ArrayAppend" | "ArrayClone" | "ArrayIterator" | "ArrayUnion" | "ArrayDifference" | "ArrayIntersection" | "ArrayReverse" | "Invalid" | "FirstArrayOpCode" | "LastArrayOpCode" | "ERigVMOpCode_MAX" */
    open fun GetOpCode(): String /* "Execute_0_Operands" | "Execute_1_Operands" | "Execute_2_Operands" | "Execute_3_Operands" | "Execute_4_Operands" | "Execute_5_Operands" | "Execute_6_Operands" | "Execute_7_Operands" | "Execute_8_Operands" | "Execute_9_Operands" | "Execute_10_Operands" | "Execute_11_Operands" | "Execute_12_Operands" | "Execute_13_Operands" | "Execute_14_Operands" | "Execute_15_Operands" | "Execute_16_Operands" | "Execute_17_Operands" | "Execute_18_Operands" | "Execute_19_Operands" | "Execute_20_Operands" | "Execute_21_Operands" | "Execute_22_Operands" | "Execute_23_Operands" | "Execute_24_Operands" | "Execute_25_Operands" | "Execute_26_Operands" | "Execute_27_Operands" | "Execute_28_Operands" | "Execute_29_Operands" | "Execute_30_Operands" | "Execute_31_Operands" | "Execute_32_Operands" | "Execute_33_Operands" | "Execute_34_Operands" | "Execute_35_Operands" | "Execute_36_Operands" | "Execute_37_Operands" | "Execute_38_Operands" | "Execute_39_Operands" | "Execute_40_Operands" | "Execute_41_Operands" | "Execute_42_Operands" | "Execute_43_Operands" | "Execute_44_Operands" | "Execute_45_Operands" | "Execute_46_Operands" | "Execute_47_Operands" | "Execute_48_Operands" | "Execute_49_Operands" | "Execute_50_Operands" | "Execute_51_Operands" | "Execute_52_Operands" | "Execute_53_Operands" | "Execute_54_Operands" | "Execute_55_Operands" | "Execute_56_Operands" | "Execute_57_Operands" | "Execute_58_Operands" | "Execute_59_Operands" | "Execute_60_Operands" | "Execute_61_Operands" | "Execute_62_Operands" | "Execute_63_Operands" | "Execute_64_Operands" | "Zero" | "BoolFalse" | "BoolTrue" | "Copy" | "Increment" | "Decrement" | "Equals" | "NotEquals" | "JumpAbsolute" | "JumpForward" | "JumpBackward" | "JumpAbsoluteIf" | "JumpForwardIf" | "JumpBackwardIf" | "ChangeType" | "Exit" | "BeginBlock" | "EndBlock" | "ArrayReset" | "ArrayGetNum" | "ArraySetNum" | "ArrayGetAtIndex" | "ArraySetAtIndex" | "ArrayAdd" | "ArrayInsert" | "ArrayRemove" | "ArrayFind" | "ArrayAppend" | "ArrayClone" | "ArrayIterator" | "ArrayUnion" | "ArrayDifference" | "ArrayIntersection" | "ArrayReverse" | "Invalid" | "FirstArrayOpCode" | "LastArrayOpCode" | "ERigVMOpCode_MAX" */
    open fun GetCPPTypeObject(): UObject
    open fun GetCPPType(): String

    companion object {
        fun Load(ResourceName: String): RigVMArrayNode
        fun Find(Outer: UObject, ResourceName: String): RigVMArrayNode
        fun GetDefaultObject(): RigVMArrayNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RigVMArrayNode
        fun C(Other: UObject): RigVMArrayNode
        fun C(Other: Any): RigVMArrayNode
    }
}

external interface `T$516` {
    var bSetupUndoRedo: Boolean
    var `$`: Boolean
}

external open class RigVMController : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ModifiedEventDynamic: UnrealEngineMulticastDelegate<(NotifType: String /* "GraphChanged" | "NodeAdded" | "NodeRemoved" | "NodeSelected" | "NodeDeselected" | "NodeSelectionChanged" | "NodePositionChanged" | "NodeSizeChanged" | "NodeColorChanged" | "PinAdded" | "PinRemoved" | "PinRenamed" | "PinExpansionChanged" | "PinWatchedChanged" | "PinArraySizeChanged" | "PinDefaultValueChanged" | "PinDirectionChanged" | "PinTypeChanged" | "PinIndexChanged" | "LinkAdded" | "LinkRemoved" | "CommentTextChanged" | "RerouteCompactnessChanged" | "VariableAdded" | "VariableRemoved" | "VariableRenamed" | "ParameterAdded" | "ParameterRemoved" | "ParameterRenamed" | "InteractionBracketOpened" | "InteractionBracketClosed" | "InteractionBracketCanceled" | "PinBoundVariableChanged" | "NodeRenamed" | "NodeReferenceChanged" | "NodeCategoryChanged" | "NodeKeywordsChanged" | "NodeDescriptionChanged" | "VariableRemappingChanged" | "Invalid" | "ERigVMGraphNotifType_MAX" */, Graph: RigVMGraph, Subject: UObject) -> Unit>
    open var Graphs: Array<RigVMGraph>
    open var ExecuteContextStruct: Struct
    open var ActionStack: RigVMActionStack
    open fun Undo(): Boolean
    open fun UnbindPinFromVariable(InPinPath: String, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): Boolean
    open fun SetRerouteCompactnessByName(InNodeName: String, bShowAsFullNode: Boolean, bSetupUndoRedo: Boolean): Boolean
    open fun SetRerouteCompactness(InNode: RigVMNode, bShowAsFullNode: Boolean, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): Boolean
    open fun SetRemappedVariable(InFunctionRefNode: RigVMFunctionReferenceNode, InInnerVariableName: String, InOuterVariableName: String, bSetupUndoRedo: Boolean): Boolean
    open fun SetPinIsWatched(InPinPath: String, bIsWatched: Boolean, bSetupUndoRedo: Boolean): Boolean
    open fun SetPinExpansion(InPinPath: String, bIsExpanded: Boolean, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): Boolean
    open fun SetPinDefaultValue(InPinPath: String, InDefaultValue: String, bResizeArrays: Boolean, bSetupUndoRedo: Boolean, bMergeUndoAction: Boolean, bPrintPythonCommand: Boolean): Boolean
    open fun SetNodeSizeByName(InNodeName: String, InSize: Vector2D, bSetupUndoRedo: Boolean, bMergeUndoAction: Boolean, bPrintPythonCommand: Boolean): Boolean
    open fun SetNodeSize(InNode: RigVMNode, InSize: Vector2D, bSetupUndoRedo: Boolean, bMergeUndoAction: Boolean, bPrintPythonCommand: Boolean): Boolean
    open fun SetNodeSelection(InNodeNames: Array<String>, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): Boolean
    open fun SetNodePositionByName(InNodeName: String, InPosition: Vector2D, bSetupUndoRedo: Boolean, bMergeUndoAction: Boolean, bPrintPythonCommand: Boolean): Boolean
    open fun SetNodePosition(InNode: RigVMNode, InPosition: Vector2D, bSetupUndoRedo: Boolean, bMergeUndoAction: Boolean, bPrintPythonCommand: Boolean): Boolean
    open fun SetNodeKeywordsByName(InNodeName: String, InKeywords: String, bSetupUndoRedo: Boolean, bMergeUndoAction: Boolean): Boolean
    open fun SetNodeKeywords(InNode: RigVMCollapseNode, InKeywords: String, bSetupUndoRedo: Boolean, bMergeUndoAction: Boolean, bPrintPythonCommand: Boolean): Boolean
    open fun SetNodeDescriptionByName(InNodeName: String, InDescription: String, bSetupUndoRedo: Boolean, bMergeUndoAction: Boolean): Boolean
    open fun SetNodeDescription(InNode: RigVMCollapseNode, InDescription: String, bSetupUndoRedo: Boolean, bMergeUndoAction: Boolean, bPrintPythonCommand: Boolean): Boolean
    open fun SetNodeColorByName(InNodeName: String, InColor: LinearColor, bSetupUndoRedo: Boolean, bMergeUndoAction: Boolean): Boolean
    open fun SetNodeColor(InNode: RigVMNode, InColor: LinearColor, bSetupUndoRedo: Boolean, bMergeUndoAction: Boolean, bPrintPythonCommand: Boolean): Boolean
    open fun SetNodeCategoryByName(InNodeName: String, InCategory: String, bSetupUndoRedo: Boolean, bMergeUndoAction: Boolean): Boolean
    open fun SetNodeCategory(InNode: RigVMCollapseNode, InCategory: String, bSetupUndoRedo: Boolean, bMergeUndoAction: Boolean, bPrintPythonCommand: Boolean): Boolean
    open fun SetLocalVariableTypeFromObjectPath(InVariableName: String, InCPPType: String, InCPPTypeObjectPath: String, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): Boolean
    open fun SetLocalVariableType(InVariableName: String, InCPPType: String, InCPPTypeObject: UObject, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): Boolean
    open fun SetLocalVariableDefaultValue(InVariableName: String, InDefaultValue: String, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean, bNotify: Boolean): Boolean
    open fun SetIsRunningUnitTest(bIsRunning: Boolean)
    open fun SetGraph(InGraph: RigVMGraph)
    open fun SetExposedPinIndex(InPinName: String, InNewIndex: Number, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): Boolean
    open fun SetCommentTextByName(InNodeName: String, InCommentText: String, InCommentFontSize: Number, bInCommentBubbleVisible: Boolean, bInCommentColorBubble: Boolean, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): Boolean
    open fun SetCommentText(InNode: RigVMNode, InCommentText: String, InCommentFontSize: Number, bInCommentBubbleVisible: Boolean, bInCommentColorBubble: Boolean, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): Boolean
    open fun SetArrayPinSize(InArrayPinPath: String, InSize: Number, InDefaultValue: String, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): Boolean
    open fun SelectNodeByName(InNodeName: String, bSelect: Boolean, bSetupUndoRedo: Boolean): Boolean
    open fun SelectNode(InNode: RigVMNode, bSelect: Boolean, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): Boolean
    open fun ResetPinDefaultValue(InPinPath: String, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): Boolean
    open fun ReplaceParameterNodeWithVariable(InNodeName: String, InVariableName: String, InCPPType: String, InCPPTypeObject: UObject, bSetupUndoRedo: Boolean): RigVMVariableNode
    open fun RenameVariable(InOldName: String, InNewName: String, bSetupUndoRedo: Boolean): Boolean
    open fun RenameParameter(InOldName: String, InNewName: String, bSetupUndoRedo: Boolean): Boolean
    open fun RenameNode(InNode: RigVMNode, InNewName: String, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): Boolean
    open fun RenameLocalVariable(InVariableName: String, InNewVariableName: String, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): Boolean
    open fun RenameFunction(InOldFunctionName: String, InNewFunctionName: String, bSetupUndoRedo: Boolean): Boolean
    open fun RenameExposedPin(InOldPinName: String, InNewPinName: String, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): Boolean
    open fun RemoveNodeByName(InNodeName: String, bSetupUndoRedo: Boolean, bRecursive: Boolean, bPrintPythonCommand: Boolean, bRelinkPins: Boolean): Boolean
    open fun RemoveNode(InNode: RigVMNode, bSetupUndoRedo: Boolean, bRecursive: Boolean, bPrintPythonCommand: Boolean, bRelinkPins: Boolean): Boolean
    open fun RemoveLocalVariable(InVariableName: String, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): Boolean
    open fun RemoveInjectedNode(InPinPath: String, bAsInput: Boolean, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): Boolean
    open fun RemoveFunctionFromLibrary(InFunctionName: String, bSetupUndoRedo: Boolean): Boolean
    open fun RemoveExposedPin(InPinName: String, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): Boolean
    open fun RemoveArrayPin(InArrayElementPinPath: String, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): Boolean
    open fun RefreshVariableNode(InNodeName: String, InVariableName: String, InCPPType: String, InCPPTypeObject: UObject, bSetupUndoRedo: Boolean, bSetupOrphanPins: Boolean)
    open fun Redo(): Boolean
    open fun PushGraph(InGraph: RigVMGraph, bSetupUndoRedo: Boolean)
    open fun PromotePinToVariable(InPinPath: String, bCreateVariableNode: Boolean, InNodePosition: Vector2D, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): Boolean
    open fun PromoteFunctionReferenceNodeToCollapseNode(InNodeName: String, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean, bRemoveFunctionDefinition: Boolean): String
    open fun PromoteCollapseNodeToFunctionReferenceNode(InNodeName: String, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean, InExistingFunctionDefinitionPath: String): String
    open fun PopGraph(bSetupUndoRedo: Boolean): RigVMGraph
    open fun OpenUndoBracket(InTitle: String): Boolean
    open fun OnExternalVariableTypeChangedFromObjectPath(InVarName: String, InCPPType: String, InCPPTypeObjectPath: String, bSetupUndoRedo: Boolean)
    open fun OnExternalVariableTypeChanged(InVarName: String, InCPPType: String, InCPPTypeObject: UObject, bSetupUndoRedo: Boolean)
    open fun OnExternalVariableRenamed(InOldVarName: String, InNewVarName: String, bSetupUndoRedo: Boolean)
    open fun OnExternalVariableRemoved(InVarName: String, bSetupUndoRedo: Boolean)
    open fun MakeVariableNodeFromBinding(InPinPath: String, InNodePosition: Vector2D, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): Boolean
    open fun MakeBindingsFromVariableNode(InNodeName: String, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): Boolean
    open fun LocalizeFunctions(InFunctionDefinitions: Array<RigVMLibraryNode>, bLocalizeDependentPrivateFunctions: Boolean, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): Any
    open fun LocalizeFunction(InFunctionDefinition: RigVMLibraryNode, bLocalizeDependentPrivateFunctions: Boolean, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): RigVMLibraryNode
    open fun IsReportingEnabled(): Boolean
    open fun InsertArrayPin(InArrayPinPath: String, InIndex: Number, InDefaultValue: String, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): String
    open fun ImportNodesFromText(InText: String, bSetupUndoRedo: Boolean, bPrintPythonCommands: Boolean): Array<String>
    open fun GetTopLevelGraph(): RigVMGraph
    open fun GetPinDefaultValue(InPinPath: String): String
    open fun GetGraph(): RigVMGraph
    open fun GeneratePythonCommands(): Array<String>
    open fun ExportSelectedNodesToText(): String
    open fun ExportNodesToText(InNodeNames: Array<String>): String
    open fun ExpandLibraryNode(InNodeName: String, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): Array<RigVMNode>
    open fun EnableReporting(bEnabled: Boolean)
    open fun EjectNodeFromPin(InPinPath: String, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): RigVMNode
    open fun DuplicateArrayPin(InArrayElementPinPath: String, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): String
    open fun CollapseNodes(InNodeNames: Array<String>, InCollapseNodeName: String, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): RigVMCollapseNode
    open fun CloseUndoBracket(): Boolean
    open fun ClearNodeSelection(bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): Boolean
    open fun ClearArrayPin(InArrayPinPath: String, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): Boolean
    open fun ChangeExposedPinType(InPinName: String, InCPPType: String, InCPPTypeObjectPath: String, bSetupUndoRedo: Boolean = definedExternally, bSetupOrphanPins: Boolean = definedExternally, bPrintPythonCommand: Boolean = definedExternally): `T$516`
    open fun CanImportNodesFromText(InText: String): Boolean
    open fun CancelUndoBracket(): Boolean
    open fun BreakLink(InOutputPinPath: String, InInputPinPath: String, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): Boolean
    open fun BreakAllLinks(InPinPath: String, bAsInput: Boolean, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): Boolean
    open fun BindPinToVariable(InPinPath: String, InNewBoundVariablePath: String, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): Boolean
    open fun AddVariableNodeFromObjectPath(InVariableName: String, InCPPType: String, InCPPTypeObjectPath: String, bIsGetter: Boolean, InDefaultValue: String, InPosition: Vector2D, InNodeName: String, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): RigVMVariableNode
    open fun AddVariableNode(InVariableName: String, InCPPType: String, InCPPTypeObject: UObject, bIsGetter: Boolean, InDefaultValue: String, InPosition: Vector2D, InNodeName: String, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): RigVMVariableNode
    open fun AddUnitNodeFromStructPath(InScriptStructPath: String, InMethodName: String, InPosition: Vector2D, InNodeName: String, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): RigVMUnitNode
    open fun AddUnitNode(InScriptStruct: ScriptStruct, InMethodName: String, InPosition: Vector2D, InNodeName: String, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): RigVMUnitNode
    open fun AddSelectNodeFromStruct(InScriptStruct: ScriptStruct, InPosition: Vector2D, InNodeName: String, bSetupUndoRedo: Boolean): RigVMSelectNode
    open fun AddSelectNode(InCPPType: String, InCPPTypeObjectPath: String, InPosition: Vector2D, InNodeName: String, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): RigVMSelectNode
    open fun AddRerouteNodeOnPin(InPinPath: String, bAsInput: Boolean, bShowAsFullNode: Boolean, InPosition: Vector2D, InNodeName: String, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): RigVMRerouteNode
    open fun AddRerouteNodeOnLinkPath(InLinkPinPathRepresentation: String, bShowAsFullNode: Boolean, InPosition: Vector2D, InNodeName: String, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): RigVMRerouteNode
    open fun AddRerouteNodeOnLink(InLink: RigVMLink, bShowAsFullNode: Boolean, InPosition: Vector2D, InNodeName: String, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): RigVMRerouteNode
    open fun AddPrototypeNode(InNotation: String, InPosition: Vector2D, InNodeName: String, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): RigVMPrototypeNode
    open fun AddParameterNodeFromObjectPath(InParameterName: String, InCPPType: String, InCPPTypeObjectPath: String, bIsInput: Boolean, InDefaultValue: String, InPosition: Vector2D, InNodeName: String, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): RigVMParameterNode
    open fun AddParameterNode(InParameterName: String, InCPPType: String, InCPPTypeObject: UObject, bIsInput: Boolean, InDefaultValue: String, InPosition: Vector2D, InNodeName: String, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): RigVMParameterNode
    open fun AddLocalVariableFromObjectPath(InVariableName: String, InCPPType: String, InCPPTypeObjectPath: String, InDefaultValue: String, bSetupUndoRedo: Boolean): RigVMGraphVariableDescription
    open fun AddLocalVariable(InVariableName: String, InCPPType: String, InCPPTypeObject: UObject, InDefaultValue: String, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): RigVMGraphVariableDescription
    open fun AddLink(InOutputPinPath: String, InInputPinPath: String, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): Boolean
    open fun AddInjectedNodeFromStructPath(InPinPath: String, bAsInput: Boolean, InScriptStructPath: String, InMethodName: String, InInputPinName: String, InOutputPinName: String, InNodeName: String, bSetupUndoRedo: Boolean): RigVMInjectionInfo
    open fun AddInjectedNode(InPinPath: String, bAsInput: Boolean, InScriptStruct: ScriptStruct, InMethodName: String, InInputPinName: String, InOutputPinName: String, InNodeName: String, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): RigVMInjectionInfo
    open fun AddIfNodeFromStruct(InScriptStruct: ScriptStruct, InPosition: Vector2D, InNodeName: String, bSetupUndoRedo: Boolean): RigVMIfNode
    open fun AddIfNode(InCPPType: String, InCPPTypeObjectPath: String, InPosition: Vector2D, InNodeName: String, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): RigVMIfNode
    open fun AddFunctionToLibrary(InFunctionName: String, bMutable: Boolean, InNodePosition: Vector2D, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): RigVMLibraryNode
    open fun AddFunctionReferenceNode(InFunctionDefinition: RigVMLibraryNode, InNodePosition: Vector2D, InNodeName: String, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): RigVMFunctionReferenceNode
    open fun AddFreeRerouteNode(bShowAsFullNode: Boolean, InCPPType: String, InCPPTypeObjectPath: String, bIsConstant: Boolean, InCustomWidgetName: String, InDefaultValue: String, InPosition: Vector2D, InNodeName: String, bSetupUndoRedo: Boolean): RigVMRerouteNode
    open fun AddExposedPin(InPinName: String, InDirection: String /* "Input" | "Output" | "IO" | "Visible" | "Hidden" | "Invalid" | "ERigVMPinDirection_MAX" */, InCPPType: String, InCPPTypeObjectPath: String, InDefaultValue: String, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): String
    open fun AddEnumNode(InCPPTypeObjectPath: String, InPosition: Vector2D, InNodeName: String, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): RigVMEnumNode
    open fun AddCommentNode(InCommentText: String, InPosition: Vector2D, InSize: Vector2D, InColor: LinearColor, InNodeName: String, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): RigVMCommentNode
    open fun AddBranchNode(InPosition: Vector2D, InNodeName: String, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): RigVMBranchNode
    open fun AddArrayPin(InArrayPinPath: String, InDefaultValue: String, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): String
    open fun AddArrayNodeFromObjectPath(InOpCode: String /* "Execute_0_Operands" | "Execute_1_Operands" | "Execute_2_Operands" | "Execute_3_Operands" | "Execute_4_Operands" | "Execute_5_Operands" | "Execute_6_Operands" | "Execute_7_Operands" | "Execute_8_Operands" | "Execute_9_Operands" | "Execute_10_Operands" | "Execute_11_Operands" | "Execute_12_Operands" | "Execute_13_Operands" | "Execute_14_Operands" | "Execute_15_Operands" | "Execute_16_Operands" | "Execute_17_Operands" | "Execute_18_Operands" | "Execute_19_Operands" | "Execute_20_Operands" | "Execute_21_Operands" | "Execute_22_Operands" | "Execute_23_Operands" | "Execute_24_Operands" | "Execute_25_Operands" | "Execute_26_Operands" | "Execute_27_Operands" | "Execute_28_Operands" | "Execute_29_Operands" | "Execute_30_Operands" | "Execute_31_Operands" | "Execute_32_Operands" | "Execute_33_Operands" | "Execute_34_Operands" | "Execute_35_Operands" | "Execute_36_Operands" | "Execute_37_Operands" | "Execute_38_Operands" | "Execute_39_Operands" | "Execute_40_Operands" | "Execute_41_Operands" | "Execute_42_Operands" | "Execute_43_Operands" | "Execute_44_Operands" | "Execute_45_Operands" | "Execute_46_Operands" | "Execute_47_Operands" | "Execute_48_Operands" | "Execute_49_Operands" | "Execute_50_Operands" | "Execute_51_Operands" | "Execute_52_Operands" | "Execute_53_Operands" | "Execute_54_Operands" | "Execute_55_Operands" | "Execute_56_Operands" | "Execute_57_Operands" | "Execute_58_Operands" | "Execute_59_Operands" | "Execute_60_Operands" | "Execute_61_Operands" | "Execute_62_Operands" | "Execute_63_Operands" | "Execute_64_Operands" | "Zero" | "BoolFalse" | "BoolTrue" | "Copy" | "Increment" | "Decrement" | "Equals" | "NotEquals" | "JumpAbsolute" | "JumpForward" | "JumpBackward" | "JumpAbsoluteIf" | "JumpForwardIf" | "JumpBackwardIf" | "ChangeType" | "Exit" | "BeginBlock" | "EndBlock" | "ArrayReset" | "ArrayGetNum" | "ArraySetNum" | "ArrayGetAtIndex" | "ArraySetAtIndex" | "ArrayAdd" | "ArrayInsert" | "ArrayRemove" | "ArrayFind" | "ArrayAppend" | "ArrayClone" | "ArrayIterator" | "ArrayUnion" | "ArrayDifference" | "ArrayIntersection" | "ArrayReverse" | "Invalid" | "FirstArrayOpCode" | "LastArrayOpCode" | "ERigVMOpCode_MAX" */, InCPPType: String, InCPPTypeObjectPath: String, InPosition: Vector2D, InNodeName: String, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): RigVMArrayNode
    open fun AddArrayNode(InOpCode: String /* "Execute_0_Operands" | "Execute_1_Operands" | "Execute_2_Operands" | "Execute_3_Operands" | "Execute_4_Operands" | "Execute_5_Operands" | "Execute_6_Operands" | "Execute_7_Operands" | "Execute_8_Operands" | "Execute_9_Operands" | "Execute_10_Operands" | "Execute_11_Operands" | "Execute_12_Operands" | "Execute_13_Operands" | "Execute_14_Operands" | "Execute_15_Operands" | "Execute_16_Operands" | "Execute_17_Operands" | "Execute_18_Operands" | "Execute_19_Operands" | "Execute_20_Operands" | "Execute_21_Operands" | "Execute_22_Operands" | "Execute_23_Operands" | "Execute_24_Operands" | "Execute_25_Operands" | "Execute_26_Operands" | "Execute_27_Operands" | "Execute_28_Operands" | "Execute_29_Operands" | "Execute_30_Operands" | "Execute_31_Operands" | "Execute_32_Operands" | "Execute_33_Operands" | "Execute_34_Operands" | "Execute_35_Operands" | "Execute_36_Operands" | "Execute_37_Operands" | "Execute_38_Operands" | "Execute_39_Operands" | "Execute_40_Operands" | "Execute_41_Operands" | "Execute_42_Operands" | "Execute_43_Operands" | "Execute_44_Operands" | "Execute_45_Operands" | "Execute_46_Operands" | "Execute_47_Operands" | "Execute_48_Operands" | "Execute_49_Operands" | "Execute_50_Operands" | "Execute_51_Operands" | "Execute_52_Operands" | "Execute_53_Operands" | "Execute_54_Operands" | "Execute_55_Operands" | "Execute_56_Operands" | "Execute_57_Operands" | "Execute_58_Operands" | "Execute_59_Operands" | "Execute_60_Operands" | "Execute_61_Operands" | "Execute_62_Operands" | "Execute_63_Operands" | "Execute_64_Operands" | "Zero" | "BoolFalse" | "BoolTrue" | "Copy" | "Increment" | "Decrement" | "Equals" | "NotEquals" | "JumpAbsolute" | "JumpForward" | "JumpBackward" | "JumpAbsoluteIf" | "JumpForwardIf" | "JumpBackwardIf" | "ChangeType" | "Exit" | "BeginBlock" | "EndBlock" | "ArrayReset" | "ArrayGetNum" | "ArraySetNum" | "ArrayGetAtIndex" | "ArraySetAtIndex" | "ArrayAdd" | "ArrayInsert" | "ArrayRemove" | "ArrayFind" | "ArrayAppend" | "ArrayClone" | "ArrayIterator" | "ArrayUnion" | "ArrayDifference" | "ArrayIntersection" | "ArrayReverse" | "Invalid" | "FirstArrayOpCode" | "LastArrayOpCode" | "ERigVMOpCode_MAX" */, InCPPType: String, InCPPTypeObject: UObject, InPosition: Vector2D, InNodeName: String, bSetupUndoRedo: Boolean, bPrintPythonCommand: Boolean): RigVMArrayNode

    companion object {
        fun Load(ResourceName: String): RigVMController
        fun Find(Outer: UObject, ResourceName: String): RigVMController
        fun GetDefaultObject(): RigVMController
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RigVMController
        fun C(Other: UObject): RigVMController
        fun C(Other: Any): RigVMController
    }
}

external open class ControlRigGraph : EdGraph {
    constructor()
    constructor(Outer: UObject)
    open var ModelNodePath: String
    open var bIsFunctionDefinition: Boolean
    open var TemplateController: RigVMController

    companion object {
        fun Load(ResourceName: String): ControlRigGraph
        fun Find(Outer: UObject, ResourceName: String): ControlRigGraph
        fun GetDefaultObject(): ControlRigGraph
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ControlRigGraph
        fun C(Other: UObject): ControlRigGraph
        fun C(Other: Any): ControlRigGraph
    }
}

external open class RigGraphDisplaySettings {
    open var bShowNodeRunCounts: Boolean
    open var NodeRunLowerBound: Number
    open var NodeRunLimit: Number
    open var MinMicroSeconds: Any
    open var MaxMicroSeconds: Any
    open var TotalMicroSeconds: Any
    open var bAutoDetermineRange: Boolean
    open var LastMinMicroSeconds: Any
    open var LastMaxMicroSeconds: Any
    open var MinDurationColor: LinearColor
    open var MaxDurationColor: LinearColor
    open fun clone(): RigGraphDisplaySettings

    companion object {
        fun C(Other: UObject): RigGraphDisplaySettings
        fun C(Other: Any): RigGraphDisplaySettings
    }
}

external open class RigVMParserASTSettings {
    open var bFoldAssignments: Boolean
    open var bFoldLiterals: Boolean
    open var bFoldConstantBranches: Boolean
    open var LinksToSkip: Array<RigVMLink>
    open fun clone(): RigVMParserASTSettings

    companion object {
        fun C(Other: UObject): RigVMParserASTSettings
        fun C(Other: Any): RigVMParserASTSettings
    }
}

external open class RigVMCompileSettings {
    open var SurpressInfoMessages: Boolean
    open var SurpressWarnings: Boolean
    open var SurpressErrors: Boolean
    open var EnablePinWatches: Boolean
    open var IsPreprocessorPhase: Boolean
    open var ASTSettings: RigVMParserASTSettings
    open var SetupNodeInstructionIndex: Boolean
    open fun clone(): RigVMCompileSettings

    companion object {
        fun C(Other: UObject): RigVMCompileSettings
        fun C(Other: Any): RigVMCompileSettings
    }
}

external open class ControlRigPythonSettings {
    open fun clone(): ControlRigPythonSettings

    companion object {
        fun C(Other: UObject): ControlRigPythonSettings
        fun C(Other: Any): ControlRigPythonSettings
    }
}

external open class ControlRigPublicFunctionArg {
    open var Name: String
    open var CPPType: String
    open var CPPTypeObjectPath: String
    open var bIsArray: Boolean
    open var Direction: String /* "Input" | "Output" | "IO" | "Visible" | "Hidden" | "Invalid" | "ERigVMPinDirection_MAX" */
    open fun clone(): ControlRigPublicFunctionArg

    companion object {
        fun C(Other: UObject): ControlRigPublicFunctionArg
        fun C(Other: Any): ControlRigPublicFunctionArg
    }
}

external open class ControlRigPublicFunctionData {
    open var Name: String
    open var DisplayName: String
    open var Category: String
    open var Keywords: String
    open var ReturnValue: ControlRigPublicFunctionArg
    open var Arguments: Array<ControlRigPublicFunctionArg>
    open fun clone(): ControlRigPublicFunctionData

    companion object {
        fun C(Other: UObject): ControlRigPublicFunctionData
        fun C(Other: Any): ControlRigPublicFunctionData
    }
}

external open class RigVMReferenceNodeData {
    open var ReferenceNodePath: String
    open var ReferencedFunctionPath: String
    open fun clone(): RigVMReferenceNodeData

    companion object {
        fun C(Other: UObject): RigVMReferenceNodeData
        fun C(Other: Any): RigVMReferenceNodeData
    }
}

external open class RigElement {
    open var Name: String
    open var index: Number
    open fun clone(): RigElement

    companion object {
        fun C(Other: UObject): RigElement
        fun C(Other: Any): RigElement
    }
}

external open class RigBone : RigElement {
    open var ParentName: String
    open var ParentIndex: Number
    open var InitialTransform: Transform
    open var GlobalTransform: Transform
    open var LocalTransform: Transform
    open var Dependents: Array<Number>
    open var Type: String /* "Imported" | "User" | "ERigBoneType_MAX" */
    override fun clone(): RigBone

    companion object {
        fun C(Other: UObject): RigBone
        fun C(Other: Any): RigBone
    }
}

external open class RigBoneHierarchy {
    open var Bones: Array<RigBone>
    open fun clone(): RigBoneHierarchy

    companion object {
        fun C(Other: UObject): RigBoneHierarchy
        fun C(Other: Any): RigBoneHierarchy
    }
}

external object ERigSpaceType {
    var Global: String /* "Global" */
    var Bone: String /* "Bone" */
    var Control: String /* "Control" */
    var Space: String /* "Space" */
    var ERigSpaceType_MAX: String /* "ERigSpaceType_MAX" */
}

external open class RigSpace : RigElement {
    open var SpaceType: String /* "Global" | "Bone" | "Control" | "Space" | "ERigSpaceType_MAX" */
    open var ParentName: String
    open var ParentIndex: Number
    open var InitialTransform: Transform
    open var LocalTransform: Transform
    override fun clone(): RigSpace

    companion object {
        fun C(Other: UObject): RigSpace
        fun C(Other: Any): RigSpace
    }
}

external open class RigSpaceHierarchy {
    open var Spaces: Array<RigSpace>
    open fun clone(): RigSpaceHierarchy

    companion object {
        fun C(Other: UObject): RigSpaceHierarchy
        fun C(Other: Any): RigSpaceHierarchy
    }
}

external open class RigControl : RigElement {
    open var ControlType: String /* "Bool" | "Float" | "Integer" | "Vector2D" | "Position" | "Scale" | "Rotator" | "Transform" | "TransformNoScale" | "EulerTransform" | "ERigControlType_MAX" */
    open var DisplayName: String
    open var ParentName: String
    open var ParentIndex: Number
    open var SpaceName: String
    open var SpaceIndex: Number
    open var OffsetTransform: Transform
    open var InitialValue: RigControlValue
    open var Value: RigControlValue
    open var PrimaryAxis: String /* "X" | "Y" | "Z" | "ERigControlAxis_MAX" */
    open var bIsCurve: Boolean
    open var bAnimatable: Boolean
    open var bLimitTranslation: Boolean
    open var bLimitRotation: Boolean
    open var bLimitScale: Boolean
    open var bDrawLimits: Boolean
    open var MinimumValue: RigControlValue
    open var MaximumValue: RigControlValue
    open var bGizmoEnabled: Boolean
    open var bGizmoVisible: Boolean
    open var GizmoName: String
    open var GizmoTransform: Transform
    open var GizmoColor: LinearColor
    open var Dependents: Array<Number>
    open var bIsTransientControl: Boolean
    open var ControlEnum: Enum
    override fun clone(): RigControl

    companion object {
        fun C(Other: UObject): RigControl
        fun C(Other: Any): RigControl
    }
}

external open class RigControlHierarchy {
    open var Controls: Array<RigControl>
    open fun clone(): RigControlHierarchy

    companion object {
        fun C(Other: UObject): RigControlHierarchy
        fun C(Other: Any): RigControlHierarchy
    }
}

external open class RigCurve : RigElement {
    open var Value: Number
    override fun clone(): RigCurve

    companion object {
        fun C(Other: UObject): RigCurve
        fun C(Other: Any): RigCurve
    }
}

external open class RigCurveContainer {
    open var Curves: Array<RigCurve>
    open fun clone(): RigCurveContainer

    companion object {
        fun C(Other: UObject): RigCurveContainer
        fun C(Other: Any): RigCurveContainer
    }
}

external open class RigHierarchyContainer {
    open var BoneHierarchy: RigBoneHierarchy
    open var SpaceHierarchy: RigSpaceHierarchy
    open var ControlHierarchy: RigControlHierarchy
    open var CurveContainer: RigCurveContainer
    open fun clone(): RigHierarchyContainer

    companion object {
        fun C(Other: UObject): RigHierarchyContainer
        fun C(Other: Any): RigHierarchyContainer
    }
}

external open class ControlRigValidationPass : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ControlRigValidationPass
        fun Find(Outer: UObject, ResourceName: String): ControlRigValidationPass
        fun GetDefaultObject(): ControlRigValidationPass
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ControlRigValidationPass
        fun C(Other: UObject): ControlRigValidationPass
        fun C(Other: Any): ControlRigValidationPass
    }
}

external open class ControlRigValidator : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Passes: Array<ControlRigValidationPass>

    companion object {
        fun Load(ResourceName: String): ControlRigValidator
        fun Find(Outer: UObject, ResourceName: String): ControlRigValidator
        fun GetDefaultObject(): ControlRigValidator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ControlRigValidator
        fun C(Other: UObject): ControlRigValidator
        fun C(Other: Any): ControlRigValidator
    }
}

external open class ControlRigBlueprint : Blueprint {
    constructor()
    constructor(Outer: UObject)
    open var FunctionLibraryEdGraph: ControlRigGraph
    open var RigGraphDisplaySettings: RigGraphDisplaySettings
    open var VMRuntimeSettings: RigVMRuntimeSettings
    open var VMCompileSettings: RigVMCompileSettings
    open var PythonLogSettings: ControlRigPythonSettings
    open var Model: RigVMGraph
    open var FunctionLibrary: RigVMFunctionLibrary
    open var PublicFunctions: Array<ControlRigPublicFunctionData>
    open var FunctionReferenceNodeData: Array<RigVMReferenceNodeData>
    open var Controllers: Any
    open var TemplateModel: RigVMGraph
    open var TemplateController: RigVMController
    open var PinToOperandMap: Any
    open var GizmoLibrary: ControlRigShapeLibrary
    open var ShapeLibraries: Array<ControlRigShapeLibrary>
    open var Statistics: RigVMStatistics
    open var DrawContainer: ControlRigDrawContainer
    open var Influences: RigInfluenceMapPerEvent
    open var HierarchyContainer: RigHierarchyContainer
    open var Hierarchy: RigHierarchy
    open var bSupportsInversion: Boolean
    open var bSupportsControls: Boolean
    open var PreviewSkeletalMesh: SkeletalMesh
    open var SourceHierarchyImport: UObject
    open var SourceCurveImport: UObject
    open var SupportedEventNames: Array<String>
    open var bExposesAnimatableControls: Boolean
    open var bAutoRecompileVM: Boolean
    open var bVMRecompilationRequired: Boolean
    open var bIsCompiling: Boolean
    open var VMRecompilationBracket: Number
    open var Validator: ControlRigValidator
    open var DebugBoneRadius: Number
    open fun SuspendNotifications(bSuspendNotifs: Boolean)
    open fun SetPreviewMesh(PreviewMesh: SkeletalMesh, bMarkAsDirty: Boolean)
    open fun RequestControlRigInit()
    open fun RequestAutoVMRecompilation()
    open fun RenameMemberVariable(InOldName: String, InNewName: String): Boolean
    open fun RemoveMemberVariable(InName: String): Boolean
    open fun RecompileVMIfRequired()
    open fun RecompileVM()
    open fun GetPreviewMesh(): SkeletalMesh
    open fun GetOrCreateController(InGraph: RigVMGraph): RigVMController
    open fun GetModel(InEdGraph: EdGraph): RigVMGraph
    open fun GetLocalFunctionLibrary(): RigVMFunctionLibrary
    open fun GetHierarchyController(): RigHierarchyController
    open fun GetControlRigClass(): UnrealEngineClass
    open fun GetControllerByName(InGraphName: String): RigVMController
    open fun GetController(InGraph: RigVMGraph): RigVMController
    open fun GetAllModels(): Array<RigVMGraph>
    open fun GeneratePythonCommands(InNewBlueprintName: String): Array<String>
    open fun CreateControlRig(): ControlRig
    open fun ChangeMemberVariableType(InName: String, InCPPType: String, bIsPublic: Boolean, bIsReadOnly: Boolean, InDefaultValue: String): Boolean
    open fun AddMemberVariable(InName: String, InCPPType: String, bIsPublic: Boolean, bIsReadOnly: Boolean, InDefaultValue: String): String
    open fun GetController(): RigVMController
    open fun GetHierarchy(): RigHierarchy
    open fun GetModel(): RigVMGraph

    companion object {
        fun Load(ResourceName: String): ControlRigBlueprint
        fun Find(Outer: UObject, ResourceName: String): ControlRigBlueprint
        fun GetDefaultObject(): ControlRigBlueprint
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ControlRigBlueprint
        fun GetCurrentlyOpenRigBlueprints(): Array<ControlRigBlueprint>
        fun GetAvailableRigUnits(): Array<Struct>
        fun C(Other: UObject): ControlRigBlueprint
        fun C(Other: Any): ControlRigBlueprint
        fun GetController(InRigBlueprint: ControlRigBlueprint): RigVMController
        fun GetHierarchy(InRigBlueprint: ControlRigBlueprint): RigHierarchy
        fun GetHierarchyController(InRigBlueprint: ControlRigBlueprint): RigHierarchyController
        fun GetModel(InRigBlueprint: ControlRigBlueprint): RigVMGraph
        fun GetPreviewMesh(InRigBlueprint: ControlRigBlueprint): SkeletalMesh
        fun RecompileVM(InRigBlueprint: ControlRigBlueprint)
        fun RecompileVMIfRequired(InRigBlueprint: ControlRigBlueprint)
        fun RequestAutoVMRecompilation(InRigBlueprint: ControlRigBlueprint)
        fun RequestControlRigInit(InRigBlueprint: ControlRigBlueprint)
        fun SetPreviewMesh(InRigBlueprint: ControlRigBlueprint, PreviewMesh: SkeletalMesh, bMarkAsDirty: Boolean)
    }
}

external open class DirectoryItem {
    open var Name: String
    open var bIsDirectory: Boolean
    open fun clone(): DirectoryItem

    companion object {
        fun C(Other: UObject): DirectoryItem
        fun C(Other: Any): DirectoryItem
    }
}

external object EFileRead_JS {
    var FILEREAD_None: String /* "FILEREAD_None" */
    var FILEREAD_NoFail: String /* "FILEREAD_NoFail" */
    var FILEREAD_Silent: String /* "FILEREAD_Silent" */
    var FILEREAD_NotUsedDummy: String /* "FILEREAD_NotUsedDummy" */
    var FILEREAD_AllowWrite: String /* "FILEREAD_AllowWrite" */
    var FILEREAD_MAX: String /* "FILEREAD_MAX" */
}

external open class JavascriptStubStruct {
    open fun clone(): JavascriptStubStruct

    companion object {
        fun C(Other: UObject): JavascriptStubStruct
        fun C(Other: Any): JavascriptStubStruct
    }
}

external open class JavascriptFunction {
    open fun clone(): JavascriptFunction
    open fun CallJS(CustomStruct: JavascriptStubStruct)

    companion object {
        fun C(Other: UObject): JavascriptFunction
        fun C(Other: Any): JavascriptFunction
        fun CallJS(UFunction: JavascriptFunction, CustomStruct: JavascriptStubStruct)
    }
}

external open class ReadStringFromFileHandle {
    open fun clone(): ReadStringFromFileHandle

    companion object {
        fun C(Other: UObject): ReadStringFromFileHandle
        fun C(Other: Any): ReadStringFromFileHandle
    }
}

external object EJavascriptEncodingOptions {
    var AutoDetect: String /* "AutoDetect" */
    var ForceAnsi: String /* "ForceAnsi" */
    var ForceUnicode: String /* "ForceUnicode" */
    var ForceUTF8: String /* "ForceUTF8" */
    var ForceUTF8WithoutBOM: String /* "ForceUTF8WithoutBOM" */
    var EJavascriptEncodingOptions_MAX: String /* "EJavascriptEncodingOptions_MAX" */
}

external open class AudioEngineSubsystem : DynamicSubsystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AudioEngineSubsystem
        fun Find(Outer: UObject, ResourceName: String): AudioEngineSubsystem
        fun GetDefaultObject(): AudioEngineSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AudioEngineSubsystem
        fun C(Other: UObject): AudioEngineSubsystem
        fun C(Other: Any): AudioEngineSubsystem
    }
}

external open class GameInstanceSubsystem : Subsystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GameInstanceSubsystem
        fun Find(Outer: UObject, ResourceName: String): GameInstanceSubsystem
        fun GetDefaultObject(): GameInstanceSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameInstanceSubsystem
        fun C(Other: UObject): GameInstanceSubsystem
        fun C(Other: Any): GameInstanceSubsystem
    }
}

external open class WorldSubsystem : Subsystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): WorldSubsystem
        fun Find(Outer: UObject, ResourceName: String): WorldSubsystem
        fun GetDefaultObject(): WorldSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WorldSubsystem
        fun C(Other: UObject): WorldSubsystem
        fun C(Other: Any): WorldSubsystem
    }
}

external open class CollisionProfileName {
    open var Name: String
    open fun clone(): CollisionProfileName

    companion object {
        fun C(Other: UObject): CollisionProfileName
        fun C(Other: Any): CollisionProfileName
    }
}

external object EPropertyAccessChangeNotifyMode {
    var Default: String /* "Default" */
    var Never: String /* "Never" */
    var Always: String /* "Always" */
    var EPropertyAccessChangeNotifyMode_MAX: String /* "EPropertyAccessChangeNotifyMode_MAX" */
}

external open class GenericStruct {
    open var Data: Number
    open fun clone(): GenericStruct

    companion object {
        fun C(Other: UObject): GenericStruct
        fun C(Other: Any): GenericStruct
    }
}

external interface `T$517` {
    var Branches: String /* "CastSucceeded" | "CastFailed" | "ECastToControlRigBlueprintCases_MAX" */
    var AsControlRigBlueprint: ControlRigBlueprint
}

external interface `T$518` {
    var Results: Array<UObject>
}

external interface `T$519` {
    var OutItems: Array<DirectoryItem>
    var `$`: Boolean
}

external interface `T$520` {
    var OutKeys: Array<String>
    var OutValues: Array<String>
}

external interface `T$521` {
    var PropertyValue: Number
    var `$`: Boolean
}

external interface `T$522` {
    var Results: Array<UObject>
}

external interface `T$523` {
    var OutItems: Array<DirectoryItem>
    var `$`: Boolean
}

external interface `T$524` {
    var OutKeys: Array<String>
    var OutValues: Array<String>
}

external open class UObject {
    constructor()
    constructor(Outer: UObject)
    open fun ExecuteUbergraph(EntryPoint: Number)
    open fun AddWhitelistedObject()
    open fun BroadcastAssetCreated()
    open fun ConditionalBeginDestroybyUObject(): Boolean
    open fun GetUniqueID(): Number
    open fun MarkPackageDirty(): Boolean
    open fun ModifyObject(bAlwaysMarkDirty: Boolean)
    open fun OpenEditorForAsset(): Boolean
    open fun PostEditChange()
    open fun CastToControlRigBlueprint(Branches: String /* "CastSucceeded" | "CastFailed" | "ECastToControlRigBlueprintCases_MAX" */ = definedExternally, AsControlRigBlueprint: ControlRigBlueprint = definedExternally): `T$517`
    open fun SpawnActorFromObject(Location: Vector, Rotation: Rotator, bTransient: Boolean): Actor
    open fun CheckoutLoadedAsset(): Boolean
    open fun ConsolidateAssets(AssetsToConsolidate: Array<UObject>): Boolean
    open fun DeleteLoadedAsset(): Boolean
    open fun DuplicateLoadedAsset(DestinationAssetPath: String): UObject
    open fun GetMetadataTag(Tag: String): String
    open fun GetMetadataTagValues(): Any
    open fun GetPathNameForLoadedAsset(): String
    open fun RemoveMetadataTag(Tag: String)
    open fun RenameLoadedAsset(DestinationAssetPath: String): Boolean
    open fun SaveLoadedAsset(bOnlyIfIsDirty: Boolean): Boolean
    open fun SetMetadataTag(Tag: String, Value: String)
    open fun DestroyUObject()
    open fun ConvertRelativePathToFull(RelativePath: String): String
    open fun CreateEnum(Name: String, DisplayNames: Array<String>, Flags: Array<String>): Enum
    open fun CreatePackage(PackageName: String): Package
    open fun Duplicate(Outer: UObject, Name: String): UObject
    open fun FindObjectWithOuter(ClassToLookFor: UnrealEngineClass, NameToLookFor: String): UObject
    open fun FindPackage(PackageName: String): Package
    open fun GetArchetypePathName(): String
    open fun GetDir(WhichDir: String): String
    open fun GetFields(bIncludeSuper: Boolean): Array<Field>
    open fun GetFileSize(Filename: String): Number
    open fun GetName(): String
    open fun GetObjectsWithOuter(Results: Array<UObject> = definedExternally, bIncludeNestedObjects: Boolean = definedExternally, ExclusionFlags: Number = definedExternally, ExclusionInternalFlags: Number = definedExternally): `T$518`
    open fun GetOuter(): UObject
    open fun GetOutermost(): UObject
    open fun HasAnyFlags(Flags: Number): Boolean
    open fun ReadDirectory(Directory: String, OutItems: Array<DirectoryItem> = definedExternally): `T$519`
    open fun ReadFile(Filename: String): Boolean
    open fun ReadStringFromFile(Filename: String, ReadFlags: String /* "FILEREAD_None" | "FILEREAD_NoFail" | "FILEREAD_Silent" | "FILEREAD_NotUsedDummy" | "FILEREAD_AllowWrite" | "FILEREAD_MAX" */): String
    open fun ReadStringFromFileAsync(Filename: String, UFunction: JavascriptFunction): ReadStringFromFileHandle
    open fun SetObjectFlags(Flags: Number)
    open fun WriteFile(Filename: String): Boolean
    open fun WriteStringToFile(Filename: String, Data: String, EncodingOptions: String /* "AutoDetect" | "ForceAnsi" | "ForceUnicode" | "ForceUTF8" | "ForceUTF8WithoutBOM" | "EJavascriptEncodingOptions_MAX" */): Boolean
    open fun RenameAsset(NewName: String)
    open fun GetDatasmithUserData(): DatasmithAssetUserData
    open fun GetDatasmithUserDataKeysAndValuesForValue(StringToMatch: String, OutKeys: Array<String> = definedExternally, OutValues: Array<String> = definedExternally): `T$520`
    open fun GetDatasmithUserDataValueForKey(Key: String): String
    open fun RedirectVislog(DestinationOwner: UObject)
    open fun GetAudioEngineSubsystem(Class: UnrealEngineClass): AudioEngineSubsystem
    open fun GetGameInstanceSubsystem(Class: UnrealEngineClass): GameInstanceSubsystem
    open fun GetLocalPlayerSubsystem(Class: UnrealEngineClass): LocalPlayerSubsystem
    open fun GetWorldSubsystem(Class: UnrealEngineClass): WorldSubsystem
    open fun MarkPropertyDirty(PropertyName: String)
    open fun MarkPropertyDirtyFromRepIndex(RepIndex: Number, PropertyName: String)
    open fun ToText(): String
    open fun CastToClass(Class: UnrealEngineClass): UnrealEngineClass
    open fun Conv_ObjectToSoftObjectReference(): UObject
    open fun Conv_SoftObjectReferenceToObject(): UObject
    open fun ToString(): String
    open fun CreateCopyForUndoBuffer()
    open fun DoesImplementInterface(Interface: UnrealEngineClass): Boolean
    open fun Equal(B: UObject): Boolean
    open fun GetDisplayName(): String
    open fun GetEditorProperty(PropertyName: String, PropertyValue: Number = definedExternally): `T$521`
    open fun GetObjectName(): String
    open fun GetOuterObject(): UObject
    open fun GetPathName(): String
    open fun GetPrimaryAssetIdFromObject(): PrimaryAssetId
    open fun GetPrimaryAssetIdFromSoftObjectReference(): PrimaryAssetId
    open fun GetSystemPath(): String
    open fun IsValid(): Boolean
    open fun IsValidSoftObjectReference(): Boolean
    open fun ClearTimerbyFunctionName(FunctionName: String)
    open fun GetTimerElapsedTimebyFunctionName(FunctionName: String): Number
    open fun GetTimerRemainingTimebyFunctionName(FunctionName: String): Number
    open fun IsTimerActivebyFunctionName(FunctionName: String): Boolean
    open fun IsTimerPausedbyFunctionName(FunctionName: String): Boolean
    open fun PauseTimerbyFunctionName(FunctionName: String)
    open fun SetTimerbyFunctionName(FunctionName: String, Time: Number, bLooping: Boolean, InitialStartDelay: Number, InitialStartDelayVariance: Number): TimerHandle
    open fun SetTimerforNextTickbyFunctionName(FunctionName: String): TimerHandle
    open fun DoesTimerExistbyFunctionName(FunctionName: String): Boolean
    open fun UnpauseTimerbyFunctionName(FunctionName: String)
    open fun LoadAsset_Blocking(): UObject
    open fun NotEqual(B: UObject): Boolean
    open fun SetBoolPropertyByName(PropertyName: String, Value: Boolean)
    open fun SetBytePropertyByName(PropertyName: String, Value: Number)
    open fun SetClassPropertyByName(PropertyName: String, Value: UnrealEngineClass)
    open fun SetCollisionProfileNameProperty(PropertyName: String, Value: CollisionProfileName)
    open fun SetColorPropertyByName(PropertyName: String, Value: Color)
    open fun SetDoublePropertyByName(PropertyName: String, Value: Any)
    open fun SetEditorProperty(PropertyName: String, PropertyValue: Number, ChangeNotifyMode: String /* "Default" | "Never" | "Always" | "EPropertyAccessChangeNotifyMode_MAX" */): Boolean
    open fun SetFieldPathPropertyByName(PropertyName: String, Value: Any)
    open fun SetInt64PropertyByName(PropertyName: String, Value: Any)
    open fun SetInterfacePropertyByName(PropertyName: String, Value: Any)
    open fun SetIntPropertyByName(PropertyName: String, Value: Number)
    open fun SetLinearColorPropertyByName(PropertyName: String, Value: LinearColor)
    open fun SetNamePropertyByName(PropertyName: String, Value: String)
    open fun SetObjectPropertyByName(PropertyName: String, Value: UObject)
    open fun SetRotatorPropertyByName(PropertyName: String, Value: Rotator)
    open fun SetSoftClassPropertyByName(PropertyName: String, Value: Class)
    open fun SetSoftObjectPropertyByName(PropertyName: String, Value: UObject)
    open fun SetStringPropertyByName(PropertyName: String, Value: String)
    open fun SetStructurePropertyByName(PropertyName: String, Value: GenericStruct)
    open fun SetTextPropertyByName(PropertyName: String, Value: String)
    open fun SetTransformPropertyByName(PropertyName: String, Value: Transform)
    open fun SetVector3fPropertyByName(PropertyName: String, Value: Vector3f)
    open fun SetVectorPropertyByName(PropertyName: String, Value: Vector)
    open fun SnapshotObject()
    open fun TransactObject()
    open fun SelectObject(B: UObject, bSelectA: Boolean): UObject
    open fun SetArrayPropertyByName(PropertyName: String, Value: Array<Number>)
    open fun GetClass(): UnrealEngineClass
    open fun AcquireEditorObjectElementHandle(bAllowCreate: Boolean): ScriptTypedElementHandle
    open fun SetSetPropertyByName(PropertyName: String, Value: Any)
    open fun SetMapPropertyByName(PropertyName: String, Value: Any)
    open fun GetBlueprintAsset(): Blueprint

    companion object {
        fun Load(ResourceName: String): UObject
        fun Find(Outer: UObject, ResourceName: String): UObject
        var StaticClass: Any
        fun GetClassObject(): Class
        fun GetDefaultObject(): UObject
        fun GetDefaultSubobjectByName(Name: String): UObject
        fun SetDefaultSubobjectClass(Name: String)
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UObject
        fun C(Other: UObject): UObject
        fun C(Other: Any): UObject
        fun AddWhitelistedObject(InObject: UObject)
        fun BroadcastAssetCreated(NewAsset: UObject)
        fun ConditionalBeginDestroybyUObject(TargetObject: UObject): Boolean
        fun GetUniqueID(InObject: UObject): Number
        fun MarkPackageDirty(InObject: UObject): Boolean
        fun ModifyObject(UObject: UObject, bAlwaysMarkDirty: Boolean)
        fun OpenEditorForAsset(Asset: UObject): Boolean
        fun PostEditChange(InObject: UObject)
        fun CastToControlRigBlueprint(UObject: UObject, Branches: String /* "CastSucceeded" | "CastFailed" | "ECastToControlRigBlueprintCases_MAX" */ = definedExternally, AsControlRigBlueprint: ControlRigBlueprint = definedExternally): `T$517`
        fun SpawnActorFromObject(ObjectToUse: UObject, Location: Vector, Rotation: Rotator, bTransient: Boolean): Actor
        fun CheckoutLoadedAsset(AssetToCheckout: UObject): Boolean
        fun ConsolidateAssets(AssetToConsolidateTo: UObject, AssetsToConsolidate: Array<UObject>): Boolean
        fun DeleteLoadedAsset(AssetToDelete: UObject): Boolean
        fun DuplicateLoadedAsset(SourceAsset: UObject, DestinationAssetPath: String): UObject
        fun GetMetadataTag(UObject: UObject, Tag: String): String
        fun GetMetadataTagValues(UObject: UObject): Any
        fun GetPathNameForLoadedAsset(LoadedAsset: UObject): String
        fun RemoveMetadataTag(UObject: UObject, Tag: String)
        fun RenameLoadedAsset(SourceAsset: UObject, DestinationAssetPath: String): Boolean
        fun SaveLoadedAsset(AssetToSave: UObject, bOnlyIfIsDirty: Boolean): Boolean
        fun SetMetadataTag(UObject: UObject, Tag: String, Value: String)
        fun DestroyUObject(UObject: UObject)
        fun ConvertRelativePathToFull(UObject: UObject, RelativePath: String): String
        fun CreateEnum(Outer: UObject, Name: String, DisplayNames: Array<String>, Flags: Array<String>): Enum
        fun CreatePackage(Outer: UObject, PackageName: String): Package
        fun Duplicate(UObject: UObject, Outer: UObject, Name: String): UObject
        fun FindObjectWithOuter(Outer: UObject, ClassToLookFor: UnrealEngineClass, NameToLookFor: String): UObject
        fun FindPackage(InOuter: UObject, PackageName: String): Package
        fun GetArchetypePathName(UObject: UObject): String
        fun GetDir(UObject: UObject, WhichDir: String): String
        fun GetFields(UObject: UObject, bIncludeSuper: Boolean): Array<Field>
        fun GetFileSize(UObject: UObject, Filename: String): Number
        fun GetName(UObject: UObject): String
        fun GetObjectsWithOuter(Outer: UObject, Results: Array<UObject> = definedExternally, bIncludeNestedObjects: Boolean = definedExternally, ExclusionFlags: Number = definedExternally, ExclusionInternalFlags: Number = definedExternally): `T$522`
        fun GetOuter(UObject: UObject): UObject
        fun GetOutermost(UObject: UObject): UObject
        fun HasAnyFlags(UObject: UObject, Flags: Number): Boolean
        fun ReadDirectory(UObject: UObject, Directory: String, OutItems: Array<DirectoryItem> = definedExternally): `T$523`
        fun ReadFile(UObject: UObject, Filename: String): Boolean
        fun ReadStringFromFile(UObject: UObject, Filename: String, ReadFlags: String /* "FILEREAD_None" | "FILEREAD_NoFail" | "FILEREAD_Silent" | "FILEREAD_NotUsedDummy" | "FILEREAD_AllowWrite" | "FILEREAD_MAX" */): String
        fun ReadStringFromFileAsync(UObject: UObject, Filename: String, UFunction: JavascriptFunction): ReadStringFromFileHandle
        fun SetObjectFlags(Obj: UObject, Flags: Number)
        fun WriteFile(UObject: UObject, Filename: String): Boolean
        fun WriteStringToFile(UObject: UObject, Filename: String, Data: String, EncodingOptions: String /* "AutoDetect" | "ForceAnsi" | "ForceUnicode" | "ForceUTF8" | "ForceUTF8WithoutBOM" | "EJavascriptEncodingOptions_MAX" */): Boolean
        fun RenameAsset(Asset: UObject, NewName: String)
        fun GetDatasmithUserData(UObject: UObject): DatasmithAssetUserData
        fun GetDatasmithUserDataKeysAndValuesForValue(UObject: UObject, StringToMatch: String, OutKeys: Array<String> = definedExternally, OutValues: Array<String> = definedExternally): `T$524`
        fun GetDatasmithUserDataValueForKey(UObject: UObject, Key: String): String
        fun RedirectVislog(SourceOwner: UObject, DestinationOwner: UObject)
        fun GetAudioEngineSubsystem(ContextObject: UObject, Class: UnrealEngineClass): AudioEngineSubsystem
        fun GetGameInstanceSubsystem(ContextObject: UObject, Class: UnrealEngineClass): GameInstanceSubsystem
        fun GetLocalPlayerSubsystem(ContextObject: UObject, Class: UnrealEngineClass): LocalPlayerSubsystem
        fun GetWorldSubsystem(ContextObject: UObject, Class: UnrealEngineClass): WorldSubsystem
        fun MarkPropertyDirty(UObject: UObject, PropertyName: String)
        fun MarkPropertyDirtyFromRepIndex(UObject: UObject, RepIndex: Number, PropertyName: String)
        fun ToText(InObj: UObject): String
        fun CastToClass(UObject: UObject, Class: UnrealEngineClass): UnrealEngineClass
        fun Conv_ObjectToSoftObjectReference(UObject: UObject): UObject
        fun Conv_SoftObjectReferenceToObject(softobject: UObject): UObject
        fun ToString(SoftObjectReference: UObject): String
        fun CreateCopyForUndoBuffer(ObjectToModify: UObject)
        fun DoesImplementInterface(TestObject: UObject, Interface: UnrealEngineClass): Boolean
        fun Equal(A: UObject, B: UObject): Boolean
        fun GetDisplayName(UObject: UObject): String
        fun GetEditorProperty(UObject: UObject, PropertyName: String, PropertyValue: Number = definedExternally): `T$521`
        fun GetObjectName(UObject: UObject): String
        fun GetOuterObject(UObject: UObject): UObject
        fun GetPathName(UObject: UObject): String
        fun GetPrimaryAssetIdFromObject(UObject: UObject): PrimaryAssetId
        fun GetPrimaryAssetIdFromSoftObjectReference(SoftObjectReference: UObject): PrimaryAssetId
        fun GetSystemPath(UObject: UObject): String
        fun IsValid(UObject: UObject): Boolean
        fun IsValidSoftObjectReference(SoftObjectReference: UObject): Boolean
        fun ClearTimerbyFunctionName(UObject: UObject, FunctionName: String)
        fun GetTimerElapsedTimebyFunctionName(UObject: UObject, FunctionName: String): Number
        fun GetTimerRemainingTimebyFunctionName(UObject: UObject, FunctionName: String): Number
        fun IsTimerActivebyFunctionName(UObject: UObject, FunctionName: String): Boolean
        fun IsTimerPausedbyFunctionName(UObject: UObject, FunctionName: String): Boolean
        fun PauseTimerbyFunctionName(UObject: UObject, FunctionName: String)
        fun SetTimerbyFunctionName(UObject: UObject, FunctionName: String, Time: Number, bLooping: Boolean, InitialStartDelay: Number, InitialStartDelayVariance: Number): TimerHandle
        fun SetTimerforNextTickbyFunctionName(UObject: UObject, FunctionName: String): TimerHandle
        fun DoesTimerExistbyFunctionName(UObject: UObject, FunctionName: String): Boolean
        fun UnpauseTimerbyFunctionName(UObject: UObject, FunctionName: String)
        fun LoadAsset_Blocking(Asset: UObject): UObject
        fun NotEqual(A: UObject, B: UObject): Boolean
        fun SetBoolPropertyByName(UObject: UObject, PropertyName: String, Value: Boolean)
        fun SetBytePropertyByName(UObject: UObject, PropertyName: String, Value: Number)
        fun SetClassPropertyByName(UObject: UObject, PropertyName: String, Value: UnrealEngineClass)
        fun SetCollisionProfileNameProperty(UObject: UObject, PropertyName: String, Value: CollisionProfileName)
        fun SetColorPropertyByName(UObject: UObject, PropertyName: String, Value: Color)
        fun SetDoublePropertyByName(UObject: UObject, PropertyName: String, Value: Any)
        fun SetEditorProperty(UObject: UObject, PropertyName: String, PropertyValue: Number, ChangeNotifyMode: String /* "Default" | "Never" | "Always" | "EPropertyAccessChangeNotifyMode_MAX" */): Boolean
        fun SetFieldPathPropertyByName(UObject: UObject, PropertyName: String, Value: Any)
        fun SetInt64PropertyByName(UObject: UObject, PropertyName: String, Value: Any)
        fun SetInterfacePropertyByName(UObject: UObject, PropertyName: String, Value: Any)
        fun SetIntPropertyByName(UObject: UObject, PropertyName: String, Value: Number)
        fun SetLinearColorPropertyByName(UObject: UObject, PropertyName: String, Value: LinearColor)
        fun SetNamePropertyByName(UObject: UObject, PropertyName: String, Value: String)
        fun SetObjectPropertyByName(UObject: UObject, PropertyName: String, Value: UObject)
        fun SetRotatorPropertyByName(UObject: UObject, PropertyName: String, Value: Rotator)
        fun SetSoftClassPropertyByName(UObject: UObject, PropertyName: String, Value: Class)
        fun SetSoftObjectPropertyByName(UObject: UObject, PropertyName: String, Value: UObject)
        fun SetStringPropertyByName(UObject: UObject, PropertyName: String, Value: String)
        fun SetStructurePropertyByName(UObject: UObject, PropertyName: String, Value: GenericStruct)
        fun SetTextPropertyByName(UObject: UObject, PropertyName: String, Value: String)
        fun SetTransformPropertyByName(UObject: UObject, PropertyName: String, Value: Transform)
        fun SetVector3fPropertyByName(UObject: UObject, PropertyName: String, Value: Vector3f)
        fun SetVectorPropertyByName(UObject: UObject, PropertyName: String, Value: Vector)
        fun SnapshotObject(UObject: UObject)
        fun TransactObject(UObject: UObject)
        fun ToString(InObj: UObject): String
        fun SelectObject(A: UObject, B: UObject, bSelectA: Boolean): UObject
        fun SetArrayPropertyByName(UObject: UObject, PropertyName: String, Value: Array<Number>)
        fun GetClass(UObject: UObject): UnrealEngineClass
        fun AcquireEditorObjectElementHandle(UObject: UObject, bAllowCreate: Boolean): ScriptTypedElementHandle
        fun SetSetPropertyByName(UObject: UObject, PropertyName: String, Value: Any)
        fun SetMapPropertyByName(UObject: UObject, PropertyName: String, Value: Any)
        fun GetBlueprintAsset(UObject: UObject): Blueprint
    }
}

external open class GCObjectReferencer : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GCObjectReferencer
        fun Find(Outer: UObject, ResourceName: String): GCObjectReferencer
        fun GetDefaultObject(): GCObjectReferencer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GCObjectReferencer
        fun C(Other: UObject): GCObjectReferencer
        fun C(Other: Any): GCObjectReferencer
    }
}

external open class TextBuffer : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TextBuffer
        fun Find(Outer: UObject, ResourceName: String): TextBuffer
        fun GetDefaultObject(): TextBuffer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextBuffer
        fun C(Other: UObject): TextBuffer
        fun C(Other: Any): TextBuffer
    }
}

external open class DelegateFunction : UFunction {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DelegateFunction
        fun Find(Outer: UObject, ResourceName: String): DelegateFunction
        fun GetDefaultObject(): DelegateFunction
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DelegateFunction
        fun C(Other: UObject): DelegateFunction
        fun C(Other: Any): DelegateFunction
    }
}

external open class SparseDelegateFunction : DelegateFunction {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SparseDelegateFunction
        fun Find(Outer: UObject, ResourceName: String): SparseDelegateFunction
        fun GetDefaultObject(): SparseDelegateFunction
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SparseDelegateFunction
        fun C(Other: UObject): SparseDelegateFunction
        fun C(Other: Any): SparseDelegateFunction
    }
}

external open class DynamicClass : Class {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DynamicClass
        fun Find(Outer: UObject, ResourceName: String): DynamicClass
        fun GetDefaultObject(): DynamicClass
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DynamicClass
        fun C(Other: UObject): DynamicClass
        fun C(Other: Any): DynamicClass
    }
}

external open class LinkerPlaceholderClass : Class {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LinkerPlaceholderClass
        fun Find(Outer: UObject, ResourceName: String): LinkerPlaceholderClass
        fun GetDefaultObject(): LinkerPlaceholderClass
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LinkerPlaceholderClass
        fun C(Other: UObject): LinkerPlaceholderClass
        fun C(Other: Any): LinkerPlaceholderClass
    }
}

external open class LinkerPlaceholderExportObject : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LinkerPlaceholderExportObject
        fun Find(Outer: UObject, ResourceName: String): LinkerPlaceholderExportObject
        fun GetDefaultObject(): LinkerPlaceholderExportObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LinkerPlaceholderExportObject
        fun C(Other: UObject): LinkerPlaceholderExportObject
        fun C(Other: Any): LinkerPlaceholderExportObject
    }
}

external open class LinkerPlaceholderFunction : UFunction {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LinkerPlaceholderFunction
        fun Find(Outer: UObject, ResourceName: String): LinkerPlaceholderFunction
        fun GetDefaultObject(): LinkerPlaceholderFunction
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LinkerPlaceholderFunction
        fun C(Other: UObject): LinkerPlaceholderFunction
        fun C(Other: Any): LinkerPlaceholderFunction
    }
}

external open class MetaData : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MetaData
        fun Find(Outer: UObject, ResourceName: String): MetaData
        fun GetDefaultObject(): MetaData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MetaData
        fun C(Other: UObject): MetaData
        fun C(Other: Any): MetaData
    }
}

external open class ObjectRedirector : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ObjectRedirector
        fun Find(Outer: UObject, ResourceName: String): ObjectRedirector
        fun GetDefaultObject(): ObjectRedirector
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ObjectRedirector
        fun C(Other: UObject): ObjectRedirector
        fun C(Other: Any): ObjectRedirector
    }
}

external open class Property : Field {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): Property
        fun Find(Outer: UObject, ResourceName: String): Property
        fun GetDefaultObject(): Property
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Property
        fun C(Other: UObject): Property
        fun C(Other: Any): Property
    }
}

external open class EnumProperty : Property {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EnumProperty
        fun Find(Outer: UObject, ResourceName: String): EnumProperty
        fun GetDefaultObject(): EnumProperty
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnumProperty
        fun C(Other: UObject): EnumProperty
        fun C(Other: Any): EnumProperty
    }
}

external open class ArrayProperty : Property {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ArrayProperty
        fun Find(Outer: UObject, ResourceName: String): ArrayProperty
        fun GetDefaultObject(): ArrayProperty
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ArrayProperty
        fun C(Other: UObject): ArrayProperty
        fun C(Other: Any): ArrayProperty
    }
}

external open class ObjectPropertyBase : Property {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ObjectPropertyBase
        fun Find(Outer: UObject, ResourceName: String): ObjectPropertyBase
        fun GetDefaultObject(): ObjectPropertyBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ObjectPropertyBase
        fun C(Other: UObject): ObjectPropertyBase
        fun C(Other: Any): ObjectPropertyBase
    }
}

external open class BoolProperty : Property {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BoolProperty
        fun Find(Outer: UObject, ResourceName: String): BoolProperty
        fun GetDefaultObject(): BoolProperty
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BoolProperty
        fun C(Other: UObject): BoolProperty
        fun C(Other: Any): BoolProperty
    }
}

external open class NumericProperty : Property {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NumericProperty
        fun Find(Outer: UObject, ResourceName: String): NumericProperty
        fun GetDefaultObject(): NumericProperty
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NumericProperty
        fun C(Other: UObject): NumericProperty
        fun C(Other: Any): NumericProperty
    }
}

external open class ByteProperty : NumericProperty {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ByteProperty
        fun Find(Outer: UObject, ResourceName: String): ByteProperty
        fun GetDefaultObject(): ByteProperty
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ByteProperty
        fun C(Other: UObject): ByteProperty
        fun C(Other: Any): ByteProperty
    }
}

external open class ObjectProperty : ObjectPropertyBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ObjectProperty
        fun Find(Outer: UObject, ResourceName: String): ObjectProperty
        fun GetDefaultObject(): ObjectProperty
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ObjectProperty
        fun C(Other: UObject): ObjectProperty
        fun C(Other: Any): ObjectProperty
    }
}

external open class ClassProperty : ObjectProperty {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ClassProperty
        fun Find(Outer: UObject, ResourceName: String): ClassProperty
        fun GetDefaultObject(): ClassProperty
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClassProperty
        fun C(Other: UObject): ClassProperty
        fun C(Other: Any): ClassProperty
    }
}

external open class DelegateProperty : Property {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DelegateProperty
        fun Find(Outer: UObject, ResourceName: String): DelegateProperty
        fun GetDefaultObject(): DelegateProperty
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DelegateProperty
        fun C(Other: UObject): DelegateProperty
        fun C(Other: Any): DelegateProperty
    }
}

external open class DoubleProperty : NumericProperty {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DoubleProperty
        fun Find(Outer: UObject, ResourceName: String): DoubleProperty
        fun GetDefaultObject(): DoubleProperty
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DoubleProperty
        fun C(Other: UObject): DoubleProperty
        fun C(Other: Any): DoubleProperty
    }
}

external open class FloatProperty : NumericProperty {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): FloatProperty
        fun Find(Outer: UObject, ResourceName: String): FloatProperty
        fun GetDefaultObject(): FloatProperty
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FloatProperty
        fun C(Other: UObject): FloatProperty
        fun C(Other: Any): FloatProperty
    }
}

external open class IntProperty : NumericProperty {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): IntProperty
        fun Find(Outer: UObject, ResourceName: String): IntProperty
        fun GetDefaultObject(): IntProperty
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): IntProperty
        fun C(Other: UObject): IntProperty
        fun C(Other: Any): IntProperty
    }
}

external open class Int8Property : NumericProperty {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): Int8Property
        fun Find(Outer: UObject, ResourceName: String): Int8Property
        fun GetDefaultObject(): Int8Property
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Int8Property
        fun C(Other: UObject): Int8Property
        fun C(Other: Any): Int8Property
    }
}

external open class Int16Property : NumericProperty {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): Int16Property
        fun Find(Outer: UObject, ResourceName: String): Int16Property
        fun GetDefaultObject(): Int16Property
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Int16Property
        fun C(Other: UObject): Int16Property
        fun C(Other: Any): Int16Property
    }
}

external open class Int64Property : NumericProperty {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): Int64Property
        fun Find(Outer: UObject, ResourceName: String): Int64Property
        fun GetDefaultObject(): Int64Property
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Int64Property
        fun C(Other: UObject): Int64Property
        fun C(Other: Any): Int64Property
    }
}

external open class InterfaceProperty : Property {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InterfaceProperty
        fun Find(Outer: UObject, ResourceName: String): InterfaceProperty
        fun GetDefaultObject(): InterfaceProperty
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterfaceProperty
        fun C(Other: UObject): InterfaceProperty
        fun C(Other: Any): InterfaceProperty
    }
}

external open class LazyObjectProperty : ObjectPropertyBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LazyObjectProperty
        fun Find(Outer: UObject, ResourceName: String): LazyObjectProperty
        fun GetDefaultObject(): LazyObjectProperty
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LazyObjectProperty
        fun C(Other: UObject): LazyObjectProperty
        fun C(Other: Any): LazyObjectProperty
    }
}

external open class MapProperty : Property {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MapProperty
        fun Find(Outer: UObject, ResourceName: String): MapProperty
        fun GetDefaultObject(): MapProperty
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MapProperty
        fun C(Other: UObject): MapProperty
        fun C(Other: Any): MapProperty
    }
}

external open class MulticastDelegateProperty : Property {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MulticastDelegateProperty
        fun Find(Outer: UObject, ResourceName: String): MulticastDelegateProperty
        fun GetDefaultObject(): MulticastDelegateProperty
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MulticastDelegateProperty
        fun C(Other: UObject): MulticastDelegateProperty
        fun C(Other: Any): MulticastDelegateProperty
    }
}

external open class MulticastInlineDelegateProperty : MulticastDelegateProperty {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MulticastInlineDelegateProperty
        fun Find(Outer: UObject, ResourceName: String): MulticastInlineDelegateProperty
        fun GetDefaultObject(): MulticastInlineDelegateProperty
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MulticastInlineDelegateProperty
        fun C(Other: UObject): MulticastInlineDelegateProperty
        fun C(Other: Any): MulticastInlineDelegateProperty
    }
}

external open class MulticastSparseDelegateProperty : MulticastDelegateProperty {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MulticastSparseDelegateProperty
        fun Find(Outer: UObject, ResourceName: String): MulticastSparseDelegateProperty
        fun GetDefaultObject(): MulticastSparseDelegateProperty
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MulticastSparseDelegateProperty
        fun C(Other: UObject): MulticastSparseDelegateProperty
        fun C(Other: Any): MulticastSparseDelegateProperty
    }
}

external open class NameProperty : Property {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NameProperty
        fun Find(Outer: UObject, ResourceName: String): NameProperty
        fun GetDefaultObject(): NameProperty
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NameProperty
        fun C(Other: UObject): NameProperty
        fun C(Other: Any): NameProperty
    }
}

external open class SetProperty : Property {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SetProperty
        fun Find(Outer: UObject, ResourceName: String): SetProperty
        fun GetDefaultObject(): SetProperty
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SetProperty
        fun C(Other: UObject): SetProperty
        fun C(Other: Any): SetProperty
    }
}

external open class SoftObjectProperty : ObjectPropertyBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoftObjectProperty
        fun Find(Outer: UObject, ResourceName: String): SoftObjectProperty
        fun GetDefaultObject(): SoftObjectProperty
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoftObjectProperty
        fun C(Other: UObject): SoftObjectProperty
        fun C(Other: Any): SoftObjectProperty
    }
}

external open class SoftClassProperty : SoftObjectProperty {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoftClassProperty
        fun Find(Outer: UObject, ResourceName: String): SoftClassProperty
        fun GetDefaultObject(): SoftClassProperty
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoftClassProperty
        fun C(Other: UObject): SoftClassProperty
        fun C(Other: Any): SoftClassProperty
    }
}

external open class StrProperty : Property {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): StrProperty
        fun Find(Outer: UObject, ResourceName: String): StrProperty
        fun GetDefaultObject(): StrProperty
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): StrProperty
        fun C(Other: UObject): StrProperty
        fun C(Other: Any): StrProperty
    }
}

external open class StructProperty : Property {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): StructProperty
        fun Find(Outer: UObject, ResourceName: String): StructProperty
        fun GetDefaultObject(): StructProperty
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): StructProperty
        fun C(Other: UObject): StructProperty
        fun C(Other: Any): StructProperty
    }
}

external open class UInt16Property : NumericProperty {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): UInt16Property
        fun Find(Outer: UObject, ResourceName: String): UInt16Property
        fun GetDefaultObject(): UInt16Property
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UInt16Property
        fun C(Other: UObject): UInt16Property
        fun C(Other: Any): UInt16Property
    }
}

external open class UInt32Property : NumericProperty {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): UInt32Property
        fun Find(Outer: UObject, ResourceName: String): UInt32Property
        fun GetDefaultObject(): UInt32Property
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UInt32Property
        fun C(Other: UObject): UInt32Property
        fun C(Other: Any): UInt32Property
    }
}

external open class UInt64Property : NumericProperty {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): UInt64Property
        fun Find(Outer: UObject, ResourceName: String): UInt64Property
        fun GetDefaultObject(): UInt64Property
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UInt64Property
        fun C(Other: UObject): UInt64Property
        fun C(Other: Any): UInt64Property
    }
}

external open class WeakObjectProperty : ObjectPropertyBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): WeakObjectProperty
        fun Find(Outer: UObject, ResourceName: String): WeakObjectProperty
        fun GetDefaultObject(): WeakObjectProperty
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WeakObjectProperty
        fun C(Other: UObject): WeakObjectProperty
        fun C(Other: Any): WeakObjectProperty
    }
}

external open class TextProperty : Property {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TextProperty
        fun Find(Outer: UObject, ResourceName: String): TextProperty
        fun GetDefaultObject(): TextProperty
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextProperty
        fun C(Other: UObject): TextProperty
        fun C(Other: Any): TextProperty
    }
}

external open class PropertyWrapper : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PropertyWrapper
        fun Find(Outer: UObject, ResourceName: String): PropertyWrapper
        fun GetDefaultObject(): PropertyWrapper
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PropertyWrapper
        fun C(Other: UObject): PropertyWrapper
        fun C(Other: Any): PropertyWrapper
    }
}

external open class MulticastDelegatePropertyWrapper : PropertyWrapper {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MulticastDelegatePropertyWrapper
        fun Find(Outer: UObject, ResourceName: String): MulticastDelegatePropertyWrapper
        fun GetDefaultObject(): MulticastDelegatePropertyWrapper
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MulticastDelegatePropertyWrapper
        fun C(Other: UObject): MulticastDelegatePropertyWrapper
        fun C(Other: Any): MulticastDelegatePropertyWrapper
    }
}

external open class MulticastInlineDelegatePropertyWrapper : MulticastDelegatePropertyWrapper {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MulticastInlineDelegatePropertyWrapper
        fun Find(Outer: UObject, ResourceName: String): MulticastInlineDelegatePropertyWrapper
        fun GetDefaultObject(): MulticastInlineDelegatePropertyWrapper
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MulticastInlineDelegatePropertyWrapper
        fun C(Other: UObject): MulticastInlineDelegatePropertyWrapper
        fun C(Other: Any): MulticastInlineDelegatePropertyWrapper
    }
}

external open class InputCoreTypes : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InputCoreTypes
        fun Find(Outer: UObject, ResourceName: String): InputCoreTypes
        fun GetDefaultObject(): InputCoreTypes
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InputCoreTypes
        fun C(Other: UObject): InputCoreTypes
        fun C(Other: Any): InputCoreTypes
    }
}

external open class FontFaceInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): FontFaceInterface
        fun Find(Outer: UObject, ResourceName: String): FontFaceInterface
        fun GetDefaultObject(): FontFaceInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FontFaceInterface
        fun C(Other: UObject): FontFaceInterface
        fun C(Other: Any): FontFaceInterface
    }
}

external open class FontProviderInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): FontProviderInterface
        fun Find(Outer: UObject, ResourceName: String): FontProviderInterface
        fun GetDefaultObject(): FontProviderInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FontProviderInterface
        fun C(Other: UObject): FontProviderInterface
        fun C(Other: Any): FontProviderInterface
    }
}

external open class SlateTypes : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SlateTypes
        fun Find(Outer: UObject, ResourceName: String): SlateTypes
        fun GetDefaultObject(): SlateTypes
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SlateTypes
        fun C(Other: UObject): SlateTypes
        fun C(Other: Any): SlateTypes
    }
}

external open class SlateWidgetStyleContainerBase : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SlateWidgetStyleContainerBase
        fun Find(Outer: UObject, ResourceName: String): SlateWidgetStyleContainerBase
        fun GetDefaultObject(): SlateWidgetStyleContainerBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SlateWidgetStyleContainerBase
        fun C(Other: UObject): SlateWidgetStyleContainerBase
        fun C(Other: Any): SlateWidgetStyleContainerBase
    }
}

external open class SlateWidgetStyleAsset : UObject {
    constructor()
    constructor(Outer: UObject)
    open var CustomStyle: SlateWidgetStyleContainerBase

    companion object {
        fun Load(ResourceName: String): SlateWidgetStyleAsset
        fun Find(Outer: UObject, ResourceName: String): SlateWidgetStyleAsset
        fun GetDefaultObject(): SlateWidgetStyleAsset
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SlateWidgetStyleAsset
        fun C(Other: UObject): SlateWidgetStyleAsset
        fun C(Other: Any): SlateWidgetStyleAsset
    }
}

external open class SlateWidgetStyleContainerInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SlateWidgetStyleContainerInterface
        fun Find(Outer: UObject, ResourceName: String): SlateWidgetStyleContainerInterface
        fun GetDefaultObject(): SlateWidgetStyleContainerInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SlateWidgetStyleContainerInterface
        fun C(Other: UObject): SlateWidgetStyleContainerInterface
        fun C(Other: Any): SlateWidgetStyleContainerInterface
    }
}

external open class StyleColorList {
    open var StyleColors: LinearColor
    open fun clone(): StyleColorList

    companion object {
        fun C(Other: UObject): StyleColorList
        fun C(Other: Any): StyleColorList
    }
}

external open class SlateThemeManager : UObject {
    constructor()
    constructor(Outer: UObject)
    open var CurrentThemeId: Guid
    open var ActiveColors: StyleColorList

    companion object {
        fun Load(ResourceName: String): SlateThemeManager
        fun Find(Outer: UObject, ResourceName: String): SlateThemeManager
        fun GetDefaultObject(): SlateThemeManager
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SlateThemeManager
        fun C(Other: UObject): SlateThemeManager
        fun C(Other: Any): SlateThemeManager
    }
}

external open class SlateWidgetStyle {
    open fun clone(): SlateWidgetStyle

    companion object {
        fun C(Other: UObject): SlateWidgetStyle
        fun C(Other: Any): SlateWidgetStyle
    }
}

external open class SlateSound {
    open var ResourceObject: UObject
    open fun clone(): SlateSound

    companion object {
        fun C(Other: UObject): SlateSound
        fun C(Other: Any): SlateSound
    }
}

external open class ButtonStyle : SlateWidgetStyle {
    open var Normal: SlateBrush
    open var Hovered: SlateBrush
    open var Pressed: SlateBrush
    open var Disabled: SlateBrush
    open var NormalForeground: SlateColor
    open var HoveredForeground: SlateColor
    open var PressedForeground: SlateColor
    open var DisabledForeground: SlateColor
    open var NormalPadding: Margin
    open var PressedPadding: Margin
    open var PressedSlateSound: SlateSound
    open var HoveredSlateSound: SlateSound
    open var PressedSound: String
    open var HoveredSound: String
    override fun clone(): ButtonStyle

    companion object {
        fun C(Other: UObject): ButtonStyle
        fun C(Other: Any): ButtonStyle
    }
}

external open class ButtonWidgetStyle : SlateWidgetStyleContainerBase {
    constructor()
    constructor(Outer: UObject)
    open var ButtonStyle: ButtonStyle

    companion object {
        fun Load(ResourceName: String): ButtonWidgetStyle
        fun Find(Outer: UObject, ResourceName: String): ButtonWidgetStyle
        fun GetDefaultObject(): ButtonWidgetStyle
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ButtonWidgetStyle
        fun C(Other: UObject): ButtonWidgetStyle
        fun C(Other: Any): ButtonWidgetStyle
    }
}

external object ESlateCheckBoxType {
    var CheckBox: String /* "CheckBox" */
    var ToggleButton: String /* "ToggleButton" */
    var ESlateCheckBoxType_MAX: String /* "ESlateCheckBoxType_MAX" */
}

external open class CheckBoxStyle : SlateWidgetStyle {
    open var CheckBoxType: String /* "CheckBox" | "ToggleButton" | "ESlateCheckBoxType_MAX" */
    open var UncheckedImage: SlateBrush
    open var UncheckedHoveredImage: SlateBrush
    open var UncheckedPressedImage: SlateBrush
    open var CheckedImage: SlateBrush
    open var CheckedHoveredImage: SlateBrush
    open var CheckedPressedImage: SlateBrush
    open var UndeterminedImage: SlateBrush
    open var UndeterminedHoveredImage: SlateBrush
    open var UndeterminedPressedImage: SlateBrush
    open var Padding: Margin
    open var BackgroundImage: SlateBrush
    open var BackgroundHoveredImage: SlateBrush
    open var BackgroundPressedImage: SlateBrush
    open var ForegroundColor: SlateColor
    open var HoveredForeground: SlateColor
    open var PressedForeground: SlateColor
    open var CheckedForeground: SlateColor
    open var CheckedHoveredForeground: SlateColor
    open var CheckedPressedForeground: SlateColor
    open var UndeterminedForeground: SlateColor
    open var BorderBackgroundColor: SlateColor
    open var CheckedSlateSound: SlateSound
    open var UncheckedSlateSound: SlateSound
    open var HoveredSlateSound: SlateSound
    open var CheckedSound: String
    open var UncheckedSound: String
    open var HoveredSound: String
    override fun clone(): CheckBoxStyle

    companion object {
        fun C(Other: UObject): CheckBoxStyle
        fun C(Other: Any): CheckBoxStyle
    }
}

external open class CheckBoxWidgetStyle : SlateWidgetStyleContainerBase {
    constructor()
    constructor(Outer: UObject)
    open var CheckBoxStyle: CheckBoxStyle

    companion object {
        fun Load(ResourceName: String): CheckBoxWidgetStyle
        fun Find(Outer: UObject, ResourceName: String): CheckBoxWidgetStyle
        fun GetDefaultObject(): CheckBoxWidgetStyle
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CheckBoxWidgetStyle
        fun C(Other: UObject): CheckBoxWidgetStyle
        fun C(Other: Any): CheckBoxWidgetStyle
    }
}

external open class ComboButtonStyle : SlateWidgetStyle {
    open var ButtonStyle: ButtonStyle
    open var DownArrowImage: SlateBrush
    open var ShadowOffset: Vector2D
    open var ShadowColorAndOpacity: LinearColor
    open var MenuBorderBrush: SlateBrush
    open var MenuBorderPadding: Margin
    open var ContentPadding: Margin
    open var DownArrowPadding: Margin
    open var DownArrowAlign: String /* "VAlign_Fill" | "VAlign_Top" | "VAlign_Center" | "VAlign_Bottom" | "VAlign_MAX" */
    override fun clone(): ComboButtonStyle

    companion object {
        fun C(Other: UObject): ComboButtonStyle
        fun C(Other: Any): ComboButtonStyle
    }
}

external open class ComboBoxStyle : SlateWidgetStyle {
    open var ComboButtonStyle: ComboButtonStyle
    open var PressedSlateSound: SlateSound
    open var SelectionChangeSlateSound: SlateSound
    open var ContentPadding: Margin
    open var MenuRowPadding: Margin
    open var PressedSound: String
    open var SelectionChangeSound: String
    override fun clone(): ComboBoxStyle

    companion object {
        fun C(Other: UObject): ComboBoxStyle
        fun C(Other: Any): ComboBoxStyle
    }
}

external open class ComboBoxWidgetStyle : SlateWidgetStyleContainerBase {
    constructor()
    constructor(Outer: UObject)
    open var ComboBoxStyle: ComboBoxStyle

    companion object {
        fun Load(ResourceName: String): ComboBoxWidgetStyle
        fun Find(Outer: UObject, ResourceName: String): ComboBoxWidgetStyle
        fun GetDefaultObject(): ComboBoxWidgetStyle
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ComboBoxWidgetStyle
        fun C(Other: UObject): ComboBoxWidgetStyle
        fun C(Other: Any): ComboBoxWidgetStyle
    }
}

external open class ComboButtonWidgetStyle : SlateWidgetStyleContainerBase {
    constructor()
    constructor(Outer: UObject)
    open var ComboButtonStyle: ComboButtonStyle

    companion object {
        fun Load(ResourceName: String): ComboButtonWidgetStyle
        fun Find(Outer: UObject, ResourceName: String): ComboButtonWidgetStyle
        fun GetDefaultObject(): ComboButtonWidgetStyle
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ComboButtonWidgetStyle
        fun C(Other: UObject): ComboButtonWidgetStyle
        fun C(Other: Any): ComboButtonWidgetStyle
    }
}

external open class FontOutlineSettings {
    open var OutlineSize: Number
    open var bSeparateFillAlpha: Boolean
    open var bApplyOutlineToDropShadows: Boolean
    open var OutlineMaterial: UObject
    open var OutlineColor: LinearColor
    open fun clone(): FontOutlineSettings

    companion object {
        fun C(Other: UObject): FontOutlineSettings
        fun C(Other: Any): FontOutlineSettings
    }
}

external open class SlateFontInfo {
    open var FontObject: UObject
    open var FontMaterial: UObject
    open var OutlineSettings: FontOutlineSettings
    open var TypefaceFontName: String
    open var Size: Number
    open var LetterSpacing: Number
    open var FontName: String
    open var Hinting: String /* "Default" | "Auto" | "AutoLight" | "Monochrome" | "None" | "EFontHinting_MAX" */
    open fun clone(): SlateFontInfo

    companion object {
        fun C(Other: UObject): SlateFontInfo
        fun C(Other: Any): SlateFontInfo
    }
}

external open class ScrollBarStyle : SlateWidgetStyle {
    open var HorizontalBackgroundImage: SlateBrush
    open var VerticalBackgroundImage: SlateBrush
    open var VerticalTopSlotImage: SlateBrush
    open var HorizontalTopSlotImage: SlateBrush
    open var VerticalBottomSlotImage: SlateBrush
    open var HorizontalBottomSlotImage: SlateBrush
    open var NormalThumbImage: SlateBrush
    open var HoveredThumbImage: SlateBrush
    open var DraggedThumbImage: SlateBrush
    open var Thickness: Number
    override fun clone(): ScrollBarStyle

    companion object {
        fun C(Other: UObject): ScrollBarStyle
        fun C(Other: Any): ScrollBarStyle
    }
}

external open class EditableTextBoxStyle : SlateWidgetStyle {
    open var BackgroundImageNormal: SlateBrush
    open var BackgroundImageHovered: SlateBrush
    open var BackgroundImageFocused: SlateBrush
    open var BackgroundImageReadOnly: SlateBrush
    open var Padding: Margin
    open var Font: SlateFontInfo
    open var ForegroundColor: SlateColor
    open var BackgroundColor: SlateColor
    open var ReadOnlyForegroundColor: SlateColor
    open var FocusedForegroundColor: SlateColor
    open var HScrollBarPadding: Margin
    open var VScrollBarPadding: Margin
    open var ScrollBarStyle: ScrollBarStyle
    override fun clone(): EditableTextBoxStyle

    companion object {
        fun C(Other: UObject): EditableTextBoxStyle
        fun C(Other: Any): EditableTextBoxStyle
    }
}

external open class EditableTextBoxWidgetStyle : SlateWidgetStyleContainerBase {
    constructor()
    constructor(Outer: UObject)
    open var EditableTextBoxStyle: EditableTextBoxStyle

    companion object {
        fun Load(ResourceName: String): EditableTextBoxWidgetStyle
        fun Find(Outer: UObject, ResourceName: String): EditableTextBoxWidgetStyle
        fun GetDefaultObject(): EditableTextBoxWidgetStyle
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditableTextBoxWidgetStyle
        fun C(Other: UObject): EditableTextBoxWidgetStyle
        fun C(Other: Any): EditableTextBoxWidgetStyle
    }
}

external open class EditableTextStyle : SlateWidgetStyle {
    open var Font: SlateFontInfo
    open var ColorAndOpacity: SlateColor
    open var BackgroundImageSelected: SlateBrush
    open var BackgroundImageComposing: SlateBrush
    open var CaretImage: SlateBrush
    override fun clone(): EditableTextStyle

    companion object {
        fun C(Other: UObject): EditableTextStyle
        fun C(Other: Any): EditableTextStyle
    }
}

external open class EditableTextWidgetStyle : SlateWidgetStyleContainerBase {
    constructor()
    constructor(Outer: UObject)
    open var EditableTextStyle: EditableTextStyle

    companion object {
        fun Load(ResourceName: String): EditableTextWidgetStyle
        fun Find(Outer: UObject, ResourceName: String): EditableTextWidgetStyle
        fun GetDefaultObject(): EditableTextWidgetStyle
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditableTextWidgetStyle
        fun C(Other: UObject): EditableTextWidgetStyle
        fun C(Other: Any): EditableTextWidgetStyle
    }
}

external open class ProgressBarStyle : SlateWidgetStyle {
    open var BackgroundImage: SlateBrush
    open var FillImage: SlateBrush
    open var MarqueeImage: SlateBrush
    open var EnableFillAnimation: Boolean
    override fun clone(): ProgressBarStyle

    companion object {
        fun C(Other: UObject): ProgressBarStyle
        fun C(Other: Any): ProgressBarStyle
    }
}

external open class ProgressWidgetStyle : SlateWidgetStyleContainerBase {
    constructor()
    constructor(Outer: UObject)
    open var ProgressBarStyle: ProgressBarStyle

    companion object {
        fun Load(ResourceName: String): ProgressWidgetStyle
        fun Find(Outer: UObject, ResourceName: String): ProgressWidgetStyle
        fun GetDefaultObject(): ProgressWidgetStyle
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ProgressWidgetStyle
        fun C(Other: UObject): ProgressWidgetStyle
        fun C(Other: Any): ProgressWidgetStyle
    }
}

external open class ScrollBarWidgetStyle : SlateWidgetStyleContainerBase {
    constructor()
    constructor(Outer: UObject)
    open var ScrollBarStyle: ScrollBarStyle

    companion object {
        fun Load(ResourceName: String): ScrollBarWidgetStyle
        fun Find(Outer: UObject, ResourceName: String): ScrollBarWidgetStyle
        fun GetDefaultObject(): ScrollBarWidgetStyle
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ScrollBarWidgetStyle
        fun C(Other: UObject): ScrollBarWidgetStyle
        fun C(Other: Any): ScrollBarWidgetStyle
    }
}

external open class ScrollBoxStyle : SlateWidgetStyle {
    open var BarThickness: Number
    open var TopShadowBrush: SlateBrush
    open var BottomShadowBrush: SlateBrush
    open var LeftShadowBrush: SlateBrush
    open var RightShadowBrush: SlateBrush
    override fun clone(): ScrollBoxStyle

    companion object {
        fun C(Other: UObject): ScrollBoxStyle
        fun C(Other: Any): ScrollBoxStyle
    }
}

external open class ScrollBoxWidgetStyle : SlateWidgetStyleContainerBase {
    constructor()
    constructor(Outer: UObject)
    open var ScrollBoxStyle: ScrollBoxStyle

    companion object {
        fun Load(ResourceName: String): ScrollBoxWidgetStyle
        fun Find(Outer: UObject, ResourceName: String): ScrollBoxWidgetStyle
        fun GetDefaultObject(): ScrollBoxWidgetStyle
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ScrollBoxWidgetStyle
        fun C(Other: UObject): ScrollBoxWidgetStyle
        fun C(Other: Any): ScrollBoxWidgetStyle
    }
}

external open class SlateSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bExplicitCanvasChildZOrder: Boolean

    companion object {
        fun Load(ResourceName: String): SlateSettings
        fun Find(Outer: UObject, ResourceName: String): SlateSettings
        fun GetDefaultObject(): SlateSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SlateSettings
        fun C(Other: UObject): SlateSettings
        fun C(Other: Any): SlateSettings
    }
}

external open class SpinBoxStyle : SlateWidgetStyle {
    open var BackgroundBrush: SlateBrush
    open var ActiveBackgroundBrush: SlateBrush
    open var HoveredBackgroundBrush: SlateBrush
    open var ActiveFillBrush: SlateBrush
    open var HoveredFillBrush: SlateBrush
    open var InactiveFillBrush: SlateBrush
    open var ArrowsImage: SlateBrush
    open var ForegroundColor: SlateColor
    open var TextPadding: Margin
    open var InsetPadding: Margin
    override fun clone(): SpinBoxStyle

    companion object {
        fun C(Other: UObject): SpinBoxStyle
        fun C(Other: Any): SpinBoxStyle
    }
}

external open class SpinBoxWidgetStyle : SlateWidgetStyleContainerBase {
    constructor()
    constructor(Outer: UObject)
    open var SpinBoxStyle: SpinBoxStyle

    companion object {
        fun Load(ResourceName: String): SpinBoxWidgetStyle
        fun Find(Outer: UObject, ResourceName: String): SpinBoxWidgetStyle
        fun GetDefaultObject(): SpinBoxWidgetStyle
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SpinBoxWidgetStyle
        fun C(Other: UObject): SpinBoxWidgetStyle
        fun C(Other: Any): SpinBoxWidgetStyle
    }
}

external object ETextTransformPolicy {
    var None: String /* "None" */
    var ToLower: String /* "ToLower" */
    var ToUpper: String /* "ToUpper" */
    var ETextTransformPolicy_MAX: String /* "ETextTransformPolicy_MAX" */
}

external object ETextOverflowPolicy {
    var Clip: String /* "Clip" */
    var Ellipsis: String /* "Ellipsis" */
    var ETextOverflowPolicy_MAX: String /* "ETextOverflowPolicy_MAX" */
}

external open class TextBlockStyle : SlateWidgetStyle {
    open var Font: SlateFontInfo
    open var ColorAndOpacity: SlateColor
    open var ShadowOffset: Vector2D
    open var ShadowColorAndOpacity: LinearColor
    open var SelectedBackgroundColor: SlateColor
    open var HighlightColor: SlateColor
    open var HighlightShape: SlateBrush
    open var StrikeBrush: SlateBrush
    open var UnderlineBrush: SlateBrush
    open var TransformPolicy: String /* "None" | "ToLower" | "ToUpper" | "ETextTransformPolicy_MAX" */
    open var OverflowPolicy: String /* "Clip" | "Ellipsis" | "ETextOverflowPolicy_MAX" */
    override fun clone(): TextBlockStyle

    companion object {
        fun C(Other: UObject): TextBlockStyle
        fun C(Other: Any): TextBlockStyle
    }
}

external open class TextBlockWidgetStyle : SlateWidgetStyleContainerBase {
    constructor()
    constructor(Outer: UObject)
    open var TextBlockStyle: TextBlockStyle

    companion object {
        fun Load(ResourceName: String): TextBlockWidgetStyle
        fun Find(Outer: UObject, ResourceName: String): TextBlockWidgetStyle
        fun GetDefaultObject(): TextBlockWidgetStyle
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextBlockWidgetStyle
        fun C(Other: UObject): TextBlockWidgetStyle
        fun C(Other: Any): TextBlockWidgetStyle
    }
}

external open class ToolMenuBase : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ToolMenuBase
        fun Find(Outer: UObject, ResourceName: String): ToolMenuBase
        fun GetDefaultObject(): ToolMenuBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ToolMenuBase
        fun C(Other: UObject): ToolMenuBase
        fun C(Other: Any): ToolMenuBase
    }
}

external open class TypedElementCounterInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TypedElementCounterInterface
        fun Find(Outer: UObject, ResourceName: String): TypedElementCounterInterface
        fun GetDefaultObject(): TypedElementCounterInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TypedElementCounterInterface
        fun C(Other: UObject): TypedElementCounterInterface
        fun C(Other: Any): TypedElementCounterInterface
    }
}

external open class TestTypedElementInterfaceA : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun SetDisplayName(InElementHandle: ScriptTypedElementHandle, InNewName: String, bNotify: Boolean): Boolean
    open fun GetDisplayName(InElementHandle: ScriptTypedElementHandle): String

    companion object {
        fun Load(ResourceName: String): TestTypedElementInterfaceA
        fun Find(Outer: UObject, ResourceName: String): TestTypedElementInterfaceA
        fun GetDefaultObject(): TestTypedElementInterfaceA
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TestTypedElementInterfaceA
        fun C(Other: UObject): TestTypedElementInterfaceA
        fun C(Other: Any): TestTypedElementInterfaceA
    }
}

external open class TestTypedElementInterfaceB : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun MarkAsTested(InElementHandle: ScriptTypedElementHandle): Boolean

    companion object {
        fun Load(ResourceName: String): TestTypedElementInterfaceB
        fun Find(Outer: UObject, ResourceName: String): TestTypedElementInterfaceB
        fun GetDefaultObject(): TestTypedElementInterfaceB
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TestTypedElementInterfaceB
        fun C(Other: UObject): TestTypedElementInterfaceB
        fun C(Other: Any): TestTypedElementInterfaceB
    }
}

external open class TestTypedElementInterfaceC : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun GetIsTested(InElementHandle: ScriptTypedElementHandle): Boolean

    companion object {
        fun Load(ResourceName: String): TestTypedElementInterfaceC
        fun Find(Outer: UObject, ResourceName: String): TestTypedElementInterfaceC
        fun GetDefaultObject(): TestTypedElementInterfaceC
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TestTypedElementInterfaceC
        fun C(Other: UObject): TestTypedElementInterfaceC
        fun C(Other: Any): TestTypedElementInterfaceC
    }
}

external open class TestTypedElementInterfaceA_ImplTyped : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TestTypedElementInterfaceA_ImplTyped
        fun Find(Outer: UObject, ResourceName: String): TestTypedElementInterfaceA_ImplTyped
        fun GetDefaultObject(): TestTypedElementInterfaceA_ImplTyped
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TestTypedElementInterfaceA_ImplTyped
        fun C(Other: UObject): TestTypedElementInterfaceA_ImplTyped
        fun C(Other: Any): TestTypedElementInterfaceA_ImplTyped
    }
}

external open class TestTypedElementInterfaceA_ImplUntyped : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TestTypedElementInterfaceA_ImplUntyped
        fun Find(Outer: UObject, ResourceName: String): TestTypedElementInterfaceA_ImplUntyped
        fun GetDefaultObject(): TestTypedElementInterfaceA_ImplUntyped
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TestTypedElementInterfaceA_ImplUntyped
        fun C(Other: UObject): TestTypedElementInterfaceA_ImplUntyped
        fun C(Other: Any): TestTypedElementInterfaceA_ImplUntyped
    }
}

external open class TestTypedElementInterfaceBAndC_Typed : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TestTypedElementInterfaceBAndC_Typed
        fun Find(Outer: UObject, ResourceName: String): TestTypedElementInterfaceBAndC_Typed
        fun GetDefaultObject(): TestTypedElementInterfaceBAndC_Typed
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TestTypedElementInterfaceBAndC_Typed
        fun C(Other: UObject): TestTypedElementInterfaceBAndC_Typed
        fun C(Other: Any): TestTypedElementInterfaceBAndC_Typed
    }
}

external interface `T$525` {
    var ElementHandle: ScriptTypedElementHandle
}

external open class TypedElementHandleLibrary : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TypedElementHandleLibrary
        fun Find(Outer: UObject, ResourceName: String): TypedElementHandleLibrary
        fun GetDefaultObject(): TypedElementHandleLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TypedElementHandleLibrary
        fun Release(ElementHandle: ScriptTypedElementHandle = definedExternally): `T$525`
        fun NotEqual(LHS: ScriptTypedElementHandle, RHS: ScriptTypedElementHandle): Boolean
        fun IsSet(ElementHandle: ScriptTypedElementHandle): Boolean
        fun Equal(LHS: ScriptTypedElementHandle, RHS: ScriptTypedElementHandle): Boolean
        fun C(Other: UObject): TypedElementHandleLibrary
        fun C(Other: Any): TypedElementHandleLibrary
    }
}

external open class ScriptTypedElementListProxy {
    open fun clone(): ScriptTypedElementListProxy

    companion object {
        fun C(Other: UObject): ScriptTypedElementListProxy
        fun C(Other: Any): ScriptTypedElementListProxy
    }
}

external open class TypedElementRegistry : UObject {
    constructor()
    constructor(Outer: UObject)
    open fun GetElementInterface(InElementHandle: ScriptTypedElementHandle, InBaseInterfaceType: UnrealEngineClass): UObject

    companion object {
        fun Load(ResourceName: String): TypedElementRegistry
        fun Find(Outer: UObject, ResourceName: String): TypedElementRegistry
        fun GetDefaultObject(): TypedElementRegistry
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TypedElementRegistry
        fun GetDefaultTypedElementRegistry(): TypedElementRegistry
        fun C(Other: UObject): TypedElementRegistry
        fun C(Other: Any): TypedElementRegistry
    }
}

external open class TypedElementListLibrary : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TypedElementListLibrary
        fun Find(Outer: UObject, ResourceName: String): TypedElementListLibrary
        fun GetDefaultObject(): TypedElementListLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TypedElementListLibrary
        fun Shrink(ElementList: ScriptTypedElementListProxy)
        fun Reset(ElementList: ScriptTypedElementListProxy)
        fun Reserve(ElementList: ScriptTypedElementListProxy, Size: Number)
        fun Remove(ElementList: ScriptTypedElementListProxy, ElementHandle: ScriptTypedElementHandle): Boolean
        fun Num(ElementList: ScriptTypedElementListProxy): Number
        fun IsValidIndex(ElementList: ScriptTypedElementListProxy, index: Number): Boolean
        fun HasElementsOfType(ElementList: ScriptTypedElementListProxy, ElementTypeName: String): Boolean
        fun HasElements(ElementList: ScriptTypedElementListProxy, BaseInterfaceType: UnrealEngineClass): Boolean
        fun GetElementInterface(ElementList: ScriptTypedElementListProxy, ElementHandle: ScriptTypedElementHandle, BaseInterfaceType: UnrealEngineClass): UObject
        fun GetElementHandles(ElementList: ScriptTypedElementListProxy, BaseInterfaceType: UnrealEngineClass): Array<ScriptTypedElementHandle>
        fun GetElementHandleAt(ElementList: ScriptTypedElementListProxy, index: Number): ScriptTypedElementHandle
        fun Empty(ElementList: ScriptTypedElementListProxy, Slack: Number)
        fun CreateElementList(Registry: TypedElementRegistry): ScriptTypedElementListProxy
        fun CountElementsOfType(ElementList: ScriptTypedElementListProxy, ElementTypeName: String): Number
        fun CountElements(ElementList: ScriptTypedElementListProxy, BaseInterfaceType: UnrealEngineClass): Number
        fun Contains(ElementList: ScriptTypedElementListProxy, ElementHandle: ScriptTypedElementHandle): Boolean
        fun Clone(ElementList: ScriptTypedElementListProxy): ScriptTypedElementListProxy
        fun AppendList(ElementList: ScriptTypedElementListProxy, OtherElementList: ScriptTypedElementListProxy)
        fun Append(ElementList: ScriptTypedElementListProxy, ElementHandles: Array<ScriptTypedElementHandle>)
        fun Add(ElementList: ScriptTypedElementListProxy, ElementHandle: ScriptTypedElementHandle): Boolean
        fun C(Other: UObject): TypedElementListLibrary
        fun C(Other: Any): TypedElementListLibrary
    }
}

external open class TypedElementAssetDataInterface : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun GetAssetData(InElementHandle: ScriptTypedElementHandle): AssetData
    open fun GetAllReferencedAssetDatas(InElementHandle: ScriptTypedElementHandle): Array<AssetData>

    companion object {
        fun Load(ResourceName: String): TypedElementAssetDataInterface
        fun Find(Outer: UObject, ResourceName: String): TypedElementAssetDataInterface
        fun GetDefaultObject(): TypedElementAssetDataInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TypedElementAssetDataInterface
        fun C(Other: UObject): TypedElementAssetDataInterface
        fun C(Other: Any): TypedElementAssetDataInterface
    }
}

external interface `T$526` {
    var OutElementHandles: Array<ScriptTypedElementHandle>
}

external open class TypedElementHierarchyInterface : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun GetParentElement(InElementHandle: ScriptTypedElementHandle, bAllowCreate: Boolean): ScriptTypedElementHandle
    open fun GetChildElements(InElementHandle: ScriptTypedElementHandle, OutElementHandles: Array<ScriptTypedElementHandle> = definedExternally, bAllowCreate: Boolean = definedExternally): `T$526`

    companion object {
        fun Load(ResourceName: String): TypedElementHierarchyInterface
        fun Find(Outer: UObject, ResourceName: String): TypedElementHierarchyInterface
        fun GetDefaultObject(): TypedElementHierarchyInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TypedElementHierarchyInterface
        fun C(Other: UObject): TypedElementHierarchyInterface
        fun C(Other: Any): TypedElementHierarchyInterface
    }
}

external open class TypedElementObjectInterface : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun GetObjectClass(InElementHandle: ScriptTypedElementHandle): UnrealEngineClass
    open fun GetObject(InElementHandle: ScriptTypedElementHandle): UObject

    companion object {
        fun Load(ResourceName: String): TypedElementObjectInterface
        fun Find(Outer: UObject, ResourceName: String): TypedElementObjectInterface
        fun GetDefaultObject(): TypedElementObjectInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TypedElementObjectInterface
        fun C(Other: UObject): TypedElementObjectInterface
        fun C(Other: Any): TypedElementObjectInterface
    }
}

external object ETypedElementChildInclusionMethod {
    var None: String /* "None" */
    var Immediate: String /* "Immediate" */
    var Recursive: String /* "Recursive" */
    var ETypedElementChildInclusionMethod_MAX: String /* "ETypedElementChildInclusionMethod_MAX" */
}

external open class TypedElementSelectionOptions {
    open var bAllowHidden: Boolean
    open var bAllowGroups: Boolean
    open var bAllowLegacyNotifications: Boolean
    open var bWarnIfLocked: Boolean
    open var ChildElementInclusionMethod: String /* "None" | "Immediate" | "Recursive" | "ETypedElementChildInclusionMethod_MAX" */
    open fun clone(): TypedElementSelectionOptions

    companion object {
        fun C(Other: UObject): TypedElementSelectionOptions
        fun C(Other: Any): TypedElementSelectionOptions
    }
}

external open class TypedElementIsSelectedOptions {
    open var bAllowIndirect: Boolean
    open fun clone(): TypedElementIsSelectedOptions

    companion object {
        fun C(Other: UObject): TypedElementIsSelectedOptions
        fun C(Other: Any): TypedElementIsSelectedOptions
    }
}

external object ETypedElementSelectionMethod {
    var Primary: String /* "Primary" */
    var Secondary: String /* "Secondary" */
    var ETypedElementSelectionMethod_MAX: String /* "ETypedElementSelectionMethod_MAX" */
}

external open class TypedElementSelectionInterface : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun SelectElement(InElementHandle: ScriptTypedElementHandle, InSelectionSet: ScriptTypedElementListProxy, InSelectionOptions: TypedElementSelectionOptions): Boolean
    open fun IsElementSelected(InElementHandle: ScriptTypedElementHandle, InSelectionSet: ScriptTypedElementListProxy, InSelectionOptions: TypedElementIsSelectedOptions): Boolean
    open fun GetSelectionElement(InElementHandle: ScriptTypedElementHandle, InCurrentSelection: ScriptTypedElementListProxy, InSelectionMethod: String /* "Primary" | "Secondary" | "ETypedElementSelectionMethod_MAX" */): ScriptTypedElementHandle
    open fun DeselectElement(InElementHandle: ScriptTypedElementHandle, InSelectionSet: ScriptTypedElementListProxy, InSelectionOptions: TypedElementSelectionOptions): Boolean
    open fun CanSelectElement(InElementHandle: ScriptTypedElementHandle, InSelectionOptions: TypedElementSelectionOptions): Boolean
    open fun CanDeselectElement(InElementHandle: ScriptTypedElementHandle, InSelectionOptions: TypedElementSelectionOptions): Boolean
    open fun AllowSelectionModifiers(InElementHandle: ScriptTypedElementHandle, InSelectionSet: ScriptTypedElementListProxy): Boolean

    companion object {
        fun Load(ResourceName: String): TypedElementSelectionInterface
        fun Find(Outer: UObject, ResourceName: String): TypedElementSelectionInterface
        fun GetDefaultObject(): TypedElementSelectionInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TypedElementSelectionInterface
        fun C(Other: UObject): TypedElementSelectionInterface
        fun C(Other: Any): TypedElementSelectionInterface
    }
}

external open class TypedElementSelectionSetState {
    open var CreatedFromSelectionSet: Any
    open fun clone(): TypedElementSelectionSetState

    companion object {
        fun C(Other: UObject): TypedElementSelectionSetState
        fun C(Other: Any): TypedElementSelectionSetState
    }
}

external open class TypedElementSelectionSet : UObject {
    constructor()
    constructor(Outer: UObject)
    open var OnPreSelectionChange: UnrealEngineMulticastDelegate<(SelectionSet: TypedElementSelectionSet) -> Unit>
    open var OnSelectionChange: UnrealEngineMulticastDelegate<(SelectionSet: TypedElementSelectionSet) -> Unit>
    open fun SetSelection(InElementHandles: Array<ScriptTypedElementHandle>, InSelectionOptions: TypedElementSelectionOptions): Boolean
    open fun SelectElements(InElementHandles: Array<ScriptTypedElementHandle>, InSelectionOptions: TypedElementSelectionOptions): Boolean
    open fun SelectElement(InElementHandle: ScriptTypedElementHandle, InSelectionOptions: TypedElementSelectionOptions): Boolean
    open fun RestoreSelectionState(InSelectionState: TypedElementSelectionSetState)
    open fun GetSelectedElementHandles(InBaseInterfaceType: UnrealEngineClass): Array<ScriptTypedElementHandle>
    open fun IsElementSelected(InElementHandle: ScriptTypedElementHandle, InSelectionOptions: TypedElementIsSelectedOptions): Boolean
    open fun HasSelectedObjects(InRequiredClass: UnrealEngineClass): Boolean
    open fun HasSelectedElements(InBaseInterfaceType: UnrealEngineClass): Boolean
    open fun GetTopSelectedObject(InRequiredClass: UnrealEngineClass): UObject
    open fun GetSelectionElement(InElementHandle: ScriptTypedElementHandle, InSelectionMethod: String /* "Primary" | "Secondary" | "ETypedElementSelectionMethod_MAX" */): ScriptTypedElementHandle
    open fun GetSelectedObjects(InRequiredClass: UnrealEngineClass): Array<UObject>
    open fun GetNumSelectedElements(): Number
    open fun GetCurrentSelectionState(): TypedElementSelectionSetState
    open fun GetBottomSelectedObject(InRequiredClass: UnrealEngineClass): UObject
    open fun DeselectElements(InElementHandles: Array<ScriptTypedElementHandle>, InSelectionOptions: TypedElementSelectionOptions): Boolean
    open fun DeselectElement(InElementHandle: ScriptTypedElementHandle, InSelectionOptions: TypedElementSelectionOptions): Boolean
    open fun CountSelectedObjects(InRequiredClass: UnrealEngineClass): Number
    open fun CountSelectedElements(InBaseInterfaceType: UnrealEngineClass): Number
    open fun ClearSelection(InSelectionOptions: TypedElementSelectionOptions): Boolean
    open fun CanSelectElement(InElementHandle: ScriptTypedElementHandle, InSelectionOptions: TypedElementSelectionOptions): Boolean
    open fun CanDeselectElement(InElementHandle: ScriptTypedElementHandle, InSelectionOptions: TypedElementSelectionOptions): Boolean
    open fun AllowSelectionModifiers(InElementHandle: ScriptTypedElementHandle): Boolean

    companion object {
        fun Load(ResourceName: String): TypedElementSelectionSet
        fun Find(Outer: UObject, ResourceName: String): TypedElementSelectionSet
        fun GetDefaultObject(): TypedElementSelectionSet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TypedElementSelectionSet
        fun C(Other: UObject): TypedElementSelectionSet
        fun C(Other: Any): TypedElementSelectionSet
    }
}

external open class TypedElementSelectionNormalizationOptions {
    open var bExpandGroups: Boolean
    open var bFollowAttachment: Boolean
    open fun clone(): TypedElementSelectionNormalizationOptions

    companion object {
        fun C(Other: UObject): TypedElementSelectionNormalizationOptions
        fun C(Other: Any): TypedElementSelectionNormalizationOptions
    }
}

external open class TypedElementSelectionSetLibrary : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TypedElementSelectionSetLibrary
        fun Find(Outer: UObject, ResourceName: String): TypedElementSelectionSetLibrary
        fun GetDefaultObject(): TypedElementSelectionSetLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TypedElementSelectionSetLibrary
        fun SetSelectionFromList(SelectionSet: TypedElementSelectionSet, ElementList: ScriptTypedElementListProxy, SelectionOptions: TypedElementSelectionOptions): Boolean
        fun SelectElementsFromList(SelectionSet: TypedElementSelectionSet, ElementList: ScriptTypedElementListProxy, SelectionOptions: TypedElementSelectionOptions): Boolean
        fun GetNormalizedSelection(SelectionSet: TypedElementSelectionSet, NormalizationOptions: TypedElementSelectionNormalizationOptions): ScriptTypedElementListProxy
        fun GetNormalizedElementList(SelectionSet: TypedElementSelectionSet, ElementList: ScriptTypedElementListProxy, NormalizationOptions: TypedElementSelectionNormalizationOptions): ScriptTypedElementListProxy
        fun DeselectElementsFromList(SelectionSet: TypedElementSelectionSet, ElementList: ScriptTypedElementListProxy, SelectionOptions: TypedElementSelectionOptions): Boolean
        fun C(Other: UObject): TypedElementSelectionSetLibrary
        fun C(Other: Any): TypedElementSelectionSetLibrary
    }
}

external object EColorVisionDeficiency {
    var NormalVision: String /* "NormalVision" */
    var Deuteranope: String /* "Deuteranope" */
    var Protanope: String /* "Protanope" */
    var Tritanope: String /* "Tritanope" */
    var EColorVisionDeficiency_MAX: String /* "EColorVisionDeficiency_MAX" */
}

external object ELogTimes {
    var None: String /* "None" */
    var UTC: String /* "UTC" */
    var SinceGStartTime: String /* "SinceGStartTime" */
    var Local: String /* "Local" */
    var ELogTimes_MAX: String /* "ELogTimes_MAX" */
}

external object ELogCategoryColorizationMode {
    var None: String /* "None" */
    var ColorizeWholeLine: String /* "ColorizeWholeLine" */
    var ColorizeCategoryOnly: String /* "ColorizeCategoryOnly" */
    var ColorizeCategoryAsBadge: String /* "ColorizeCategoryAsBadge" */
    var ELogCategoryColorizationMode_MAX: String /* "ELogCategoryColorizationMode_MAX" */
}

external object EAssetEditorOpenLocation {
    var Default: String /* "Default" */
    var NewWindow: String /* "NewWindow" */
    var MainWindow: String /* "MainWindow" */
    var ContentBrowser: String /* "ContentBrowser" */
    var LastDockedWindowOrNewWindow: String /* "LastDockedWindowOrNewWindow" */
    var LastDockedWindowOrMainWindow: String /* "LastDockedWindowOrMainWindow" */
    var LastDockedWindowOrContentBrowser: String /* "LastDockedWindowOrContentBrowser" */
    var EAssetEditorOpenLocation_MAX: String /* "EAssetEditorOpenLocation_MAX" */
}

external open class EditorStyleSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bEnableHighDPIAwareness: Boolean
    open var bEnableUserEditorLayoutManagement: Boolean
    open var ColorVisionDeficiencyPreviewType: String /* "NormalVision" | "Deuteranope" | "Protanope" | "Tritanope" | "EColorVisionDeficiency_MAX" */
    open var ColorVisionDeficiencySeverity: Number
    open var bColorVisionDeficiencyCorrection: Boolean
    open var bColorVisionDeficiencyCorrectionPreviewWithDeficiency: Boolean
    open var SelectionColor: LinearColor
    open var bEnableEditorWindowBackgroundColor: Boolean
    open var EditorWindowBackgroundColor: LinearColor
    open var bUseSmallToolBarIcons: Boolean
    open var bUseGrid: Boolean
    open var RegularColor: LinearColor
    open var RuleColor: LinearColor
    open var CenterColor: LinearColor
    open var GridSnapSize: Any
    open var GraphBackgroundBrush: SlateBrush
    open var bShowFriendlyNames: Boolean
    open var bShowNativeComponentNames: Boolean
    open var bExpandConfigurationMenus: Boolean
    open var bShowProjectMenus: Boolean
    open var bShowLaunchMenus: Boolean
    open var bShowAllAdvancedDetails: Boolean
    open var bShowHiddenPropertiesWhilePlaying: Boolean
    open var LogFontSize: Number
    open var LogTimestampMode: String /* "None" | "UTC" | "SinceGStartTime" | "Local" | "ELogTimes_MAX" */
    open var bPromoteOutputLogWarningsDuringPIE: Boolean
    open var CategoryColorizationMode: String /* "None" | "ColorizeWholeLine" | "ColorizeCategoryOnly" | "ColorizeCategoryAsBadge" | "ELogCategoryColorizationMode_MAX" */
    open var bCycleToOutputLogDrawer: Boolean
    open var AssetEditorOpenLocation: String /* "Default" | "NewWindow" | "MainWindow" | "ContentBrowser" | "LastDockedWindowOrNewWindow" | "LastDockedWindowOrMainWindow" | "LastDockedWindowOrContentBrowser" | "EAssetEditorOpenLocation_MAX" */
    open var bEnableColorizedEditorTabs: Boolean

    companion object {
        fun Load(ResourceName: String): EditorStyleSettings
        fun Find(Outer: UObject, ResourceName: String): EditorStyleSettings
        fun GetDefaultObject(): EditorStyleSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorStyleSettings
        fun C(Other: UObject): EditorStyleSettings
        fun C(Other: Any): EditorStyleSettings
    }
}

external open class MaterialShaderQualitySettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ForwardSettingMap: Any

    companion object {
        fun Load(ResourceName: String): MaterialShaderQualitySettings
        fun Find(Outer: UObject, ResourceName: String): MaterialShaderQualitySettings
        fun GetDefaultObject(): MaterialShaderQualitySettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialShaderQualitySettings
        fun C(Other: UObject): MaterialShaderQualitySettings
        fun C(Other: Any): MaterialShaderQualitySettings
    }
}

external object EMobileShadowQuality {
    var NoFiltering: String /* "NoFiltering" */
    var PCF_1x1: String /* "PCF_1x1" */
    var PCF_3x3: String /* "PCF_3x3" */
    var PCF_5x5: String /* "PCF_5x5" */
    var EMobileShadowQuality_MAX: String /* "EMobileShadowQuality_MAX" */
}

external open class MaterialQualityOverrides {
    open var bDiscardQualityDuringCook: Boolean
    open var bEnableOverride: Boolean
    open var bForceFullyRough: Boolean
    open var bForceNonMetal: Boolean
    open var bForceDisableLMDirectionality: Boolean
    open var bForceLQReflections: Boolean
    open var bForceDisablePreintegratedGF: Boolean
    open var bDisableMaterialNormalCalculation: Boolean
    open var MobileShadowQuality: String /* "NoFiltering" | "PCF_1x1" | "PCF_3x3" | "PCF_5x5" | "EMobileShadowQuality_MAX" */
    open fun clone(): MaterialQualityOverrides

    companion object {
        fun C(Other: UObject): MaterialQualityOverrides
        fun C(Other: Any): MaterialQualityOverrides
    }
}

external open class ShaderPlatformQualitySettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var QualityOverrides: MaterialQualityOverrides

    companion object {
        fun Load(ResourceName: String): ShaderPlatformQualitySettings
        fun Find(Outer: UObject, ResourceName: String): ShaderPlatformQualitySettings
        fun GetDefaultObject(): ShaderPlatformQualitySettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ShaderPlatformQualitySettings
        fun C(Other: UObject): ShaderPlatformQualitySettings
        fun C(Other: Any): ShaderPlatformQualitySettings
    }
}

external open class DeveloperSettings : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DeveloperSettings
        fun Find(Outer: UObject, ResourceName: String): DeveloperSettings
        fun GetDefaultObject(): DeveloperSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DeveloperSettings
        fun C(Other: UObject): DeveloperSettings
        fun C(Other: Any): DeveloperSettings
    }
}

external open class DeveloperSettingsBackedByCVars : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DeveloperSettingsBackedByCVars
        fun Find(Outer: UObject, ResourceName: String): DeveloperSettingsBackedByCVars
        fun GetDefaultObject(): DeveloperSettingsBackedByCVars
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DeveloperSettingsBackedByCVars
        fun C(Other: UObject): DeveloperSettingsBackedByCVars
        fun C(Other: Any): DeveloperSettingsBackedByCVars
    }
}

external open class PlatformSettings : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PlatformSettings
        fun Find(Outer: UObject, ResourceName: String): PlatformSettings
        fun GetDefaultObject(): PlatformSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PlatformSettings
        fun C(Other: UObject): PlatformSettings
        fun C(Other: Any): PlatformSettings
    }
}

external open class PlatformSettingsManager : UObject {
    constructor()
    constructor(Outer: UObject)
    open var SettingsMap: Any

    companion object {
        fun Load(ResourceName: String): PlatformSettingsManager
        fun Find(Outer: UObject, ResourceName: String): PlatformSettingsManager
        fun GetDefaultObject(): PlatformSettingsManager
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PlatformSettingsManager
        fun C(Other: UObject): PlatformSettingsManager
        fun C(Other: Any): PlatformSettingsManager
    }
}

external object ECookProgressDisplayMode {
    var Nothing: String /* "Nothing" */
    var RemainingPackages: String /* "RemainingPackages" */
    var PackageNames: String /* "PackageNames" */
    var NamesAndRemainingPackages: String /* "NamesAndRemainingPackages" */
    var Instigators: String /* "Instigators" */
    var InstigatorsAndCount: String /* "InstigatorsAndCount" */
    var InstigatorsAndNames: String /* "InstigatorsAndNames" */
    var InstigatorsAndNamesAndCount: String /* "InstigatorsAndNamesAndCount" */
    var Max: String /* "Max" */
    var ECookProgressDisplayMode_MAX: String /* "ECookProgressDisplayMode_MAX" */
}

external object EBlueprintComponentDataCookingMethod {
    var Disabled: String /* "Disabled" */
    var AllBlueprints: String /* "AllBlueprints" */
    var EnabledBlueprintsOnly: String /* "EnabledBlueprintsOnly" */
    var EBlueprintComponentDataCookingMethod_MAX: String /* "EBlueprintComponentDataCookingMethod_MAX" */
}

external object ETextureFormatASTCCompressor {
    var IntelISPC: String /* "IntelISPC" */
    var Arm: String /* "Arm" */
    var Max: String /* "Max" */
    var ETextureFormatASTCCompressor_MAX: String /* "ETextureFormatASTCCompressor_MAX" */
}

external open class CookerSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var bEnableCookOnTheSide: Boolean
    open var bEnableBuildDDCInBackground: Boolean
    open var bIterativeCookingForLaunchOn: Boolean
    open var bIterativeCookingForFileCookContent: Boolean
    open var bCookOnTheFlyForLaunchOn: Boolean
    open var CookProgressDisplayMode: String /* "Nothing" | "RemainingPackages" | "PackageNames" | "NamesAndRemainingPackages" | "Instigators" | "InstigatorsAndCount" | "InstigatorsAndNames" | "InstigatorsAndNamesAndCount" | "Max" | "ECookProgressDisplayMode_MAX" */
    open var bIgnoreIniSettingsOutOfDateForIteration: Boolean
    open var bIgnoreScriptPackagesOutOfDateForIteration: Boolean
    open var bCompileBlueprintsInDevelopmentMode: Boolean
    open var BlueprintComponentDataCookingMethod: String /* "Disabled" | "AllBlueprints" | "EnabledBlueprintsOnly" | "EBlueprintComponentDataCookingMethod_MAX" */
    open var ClassesExcludedOnDedicatedServer: Array<String>
    open var ModulesExcludedOnDedicatedServer: Array<String>
    open var ClassesExcludedOnDedicatedClient: Array<String>
    open var ModulesExcludedOnDedicatedClient: Array<String>
    open var VersionedIntRValues: Array<String>
    open var DefaultASTCQualityBySpeed: Number
    open var DefaultASTCQualityBySize: Number
    open var DefaultASTCCompressor: String /* "IntelISPC" | "Arm" | "Max" | "ETextureFormatASTCCompressor_MAX" */
    open var bAllowASTCHDRProfile: Boolean
    open var bAllowCookedDataInEditorBuilds: Boolean
    open var bCookBlueprintComponentTemplateData: Boolean

    companion object {
        fun Load(ResourceName: String): CookerSettings
        fun Find(Outer: UObject, ResourceName: String): CookerSettings
        fun GetDefaultObject(): CookerSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CookerSettings
        fun C(Other: UObject): CookerSettings
        fun C(Other: Any): CookerSettings
    }
}

external object EProjectPackagingBuild {
    var Always: String /* "Always" */
    var Never: String /* "Never" */
    var IfProjectHasCode: String /* "IfProjectHasCode" */
    var IfEditorWasBuiltLocally: String /* "IfEditorWasBuiltLocally" */
    var EProjectPackagingBuild_MAX: String /* "EProjectPackagingBuild_MAX" */
}

external object EProjectPackagingBuildConfigurations {
    var PPBC_Debug: String /* "PPBC_Debug" */
    var PPBC_DebugGame: String /* "PPBC_DebugGame" */
    var PPBC_Development: String /* "PPBC_Development" */
    var PPBC_Test: String /* "PPBC_Test" */
    var PPBC_Shipping: String /* "PPBC_Shipping" */
    var PPBC_MAX: String /* "PPBC_MAX" */
}

external open class DirectoryPath {
    open var Path: String
    open fun clone(): DirectoryPath

    companion object {
        fun C(Other: UObject): DirectoryPath
        fun C(Other: Any): DirectoryPath
    }
}

external object EProjectPackagingBlueprintNativizationMethod {
    var Disabled: String /* "Disabled" */
    var Inclusive: String /* "Inclusive" */
    var Exclusive: String /* "Exclusive" */
    var EProjectPackagingBlueprintNativizationMethod_MAX: String /* "EProjectPackagingBlueprintNativizationMethod_MAX" */
}

external object EProjectPackagingInternationalizationPresets {
    var English: String /* "English" */
    var EFIGS: String /* "EFIGS" */
    var EFIGSCJK: String /* "EFIGSCJK" */
    var CJK: String /* "CJK" */
    var All: String /* "All" */
    var EProjectPackagingInternationalizationPresets_MAX: String /* "EProjectPackagingInternationalizationPresets_MAX" */
}

external open class ProjectBuildSettings {
    open var Name: String
    open var SpecificPlatforms: Array<String>
    open var BuildCookRunParams: String
    open fun clone(): ProjectBuildSettings

    companion object {
        fun C(Other: UObject): ProjectBuildSettings
        fun C(Other: Any): ProjectBuildSettings
    }
}

external open class ProjectPackagingSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Build: String /* "Always" | "Never" | "IfProjectHasCode" | "IfEditorWasBuiltLocally" | "EProjectPackagingBuild_MAX" */
    open var BuildConfiguration: String /* "PPBC_Debug" | "PPBC_DebugGame" | "PPBC_Development" | "PPBC_Test" | "PPBC_Shipping" | "PPBC_MAX" */
    open var BuildTarget: String
    open var LaunchOnTarget: String
    open var StagingDirectory: DirectoryPath
    open var FullRebuild: Boolean
    open var ForDistribution: Boolean
    open var IncludeDebugFiles: Boolean
    open var BlueprintNativizationMethod: String /* "Disabled" | "Inclusive" | "Exclusive" | "EProjectPackagingBlueprintNativizationMethod_MAX" */
    open var NativizeBlueprintAssets: Array<FilePath>
    open var bIncludeNativizedAssetsInProjectGeneration: Boolean
    open var bExcludeMonolithicEngineHeadersInNativizedCode: Boolean
    open var UsePakFile: Boolean
    open var bUseIoStore: Boolean
    open var bUseZenStore: Boolean
    open var bMakeBinaryConfig: Boolean
    open var bGenerateChunks: Boolean
    open var bGenerateNoChunks: Boolean
    open var bChunkHardReferencesOnly: Boolean
    open var bForceOneChunkPerFile: Boolean
    open var MaxChunkSize: Any
    open var bBuildHttpChunkInstallData: Boolean
    open var HttpChunkInstallDataDirectory: DirectoryPath
    open var bCompressed: Boolean
    open var PackageCompressionFormat: String
    open var bForceUseProjectCompressionFormatIgnoreHardwareOverride: Boolean
    open var PackageAdditionalCompressionOptions: String
    open var PackageCompressionMethod: String
    open var PackageCompressionLevel_DebugDevelopment: Number
    open var PackageCompressionLevel_TestShipping: Number
    open var PackageCompressionLevel_Distribution: Number
    open var PackageCompressionMinBytesSaved: Number
    open var PackageCompressionMinPercentSaved: Number
    open var bPackageCompressionEnableDDC: Boolean
    open var PackageCompressionMinSizeToConsiderDDC: Number
    open var HttpChunkInstallDataVersion: String
    open var IncludePrerequisites: Boolean
    open var IncludeAppLocalPrerequisites: Boolean
    open var bShareMaterialShaderCode: Boolean
    open var bDeterministicShaderCodeOrder: Boolean
    open var bSharedMaterialNativeLibraries: Boolean
    open var ApplocalPrerequisitesDirectory: DirectoryPath
    open var IncludeCrashReporter: Boolean
    open var InternationalizationPreset: String /* "English" | "EFIGS" | "EFIGSCJK" | "CJK" | "All" | "EProjectPackagingInternationalizationPresets_MAX" */
    open var CulturesToStage: Array<String>
    open var LocalizationTargetsToChunk: Array<String>
    open var LocalizationTargetCatchAllChunkId: Number
    open var bCookAll: Boolean
    open var bCookMapsOnly: Boolean
    open var bEncryptIniFiles: Boolean
    open var bEncryptPakIndex: Boolean
    open var GenerateEarlyDownloaderPakFile: Boolean
    open var bSkipEditorContent: Boolean
    open var bSkipMovies: Boolean
    open var UFSMovies: Array<String>
    open var NonUFSMovies: Array<String>
    open var CompressedChunkWildcard: Array<String>
    open var IniKeyBlacklist: Array<String>
    open var IniSectionBlacklist: Array<String>
    open var EarlyDownloaderPakFileFiles: Array<String>
    open var MapsToCook: Array<FilePath>
    open var DirectoriesToAlwaysCook: Array<DirectoryPath>
    open var DirectoriesToNeverCook: Array<DirectoryPath>
    open var TestDirectoriesToNotSearch: Array<DirectoryPath>
    open var DirectoriesToAlwaysStageAsUFS: Array<DirectoryPath>
    open var DirectoriesToAlwaysStageAsNonUFS: Array<DirectoryPath>
    open var DirectoriesToAlwaysStageAsUFSServer: Array<DirectoryPath>
    open var DirectoriesToAlwaysStageAsNonUFSServer: Array<DirectoryPath>
    open var ProjectCustomBuilds: Array<ProjectBuildSettings>
    open var EngineCustomBuilds: Array<ProjectBuildSettings>
    open var PerPlatformBuildConfig: Any
    open var PerPlatformTargetFlavorName: Any
    open var PerPlatformBuildTarget: Any

    companion object {
        fun Load(ResourceName: String): ProjectPackagingSettings
        fun Find(Outer: UObject, ResourceName: String): ProjectPackagingSettings
        fun GetDefaultObject(): ProjectPackagingSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ProjectPackagingSettings
        fun C(Other: UObject): ProjectPackagingSettings
        fun C(Other: Any): ProjectPackagingSettings
    }
}

external open class ClothingAssetFactoryBase : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ClothingAssetFactoryBase
        fun Find(Outer: UObject, ResourceName: String): ClothingAssetFactoryBase
        fun GetDefaultObject(): ClothingAssetFactoryBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClothingAssetFactoryBase
        fun C(Other: UObject): ClothingAssetFactoryBase
        fun C(Other: Any): ClothingAssetFactoryBase
    }
}

external open class StatePerObjectConfig : UObject {
    constructor()
    constructor(Outer: UObject)
    open var PerObjectConfigSection: String
    open var bEnabled: Boolean

    companion object {
        fun Load(ResourceName: String): StatePerObjectConfig
        fun Find(Outer: UObject, ResourceName: String): StatePerObjectConfig
        fun GetDefaultObject(): StatePerObjectConfig
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): StatePerObjectConfig
        fun C(Other: UObject): StatePerObjectConfig
        fun C(Other: Any): StatePerObjectConfig
    }
}

external open class EscalationManagerConfig : StatePerObjectConfig {
    constructor()
    constructor(Outer: UObject)
    open var EscalationSeverity: Array<String>

    companion object {
        fun Load(ResourceName: String): EscalationManagerConfig
        fun Find(Outer: UObject, ResourceName: String): EscalationManagerConfig
        fun GetDefaultObject(): EscalationManagerConfig
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EscalationManagerConfig
        fun C(Other: UObject): EscalationManagerConfig
        fun C(Other: Any): EscalationManagerConfig
    }
}

external open class NetAnalyticsDataConfig {
    open var DataName: String
    open var bEnabled: Boolean
    open fun clone(): NetAnalyticsDataConfig

    companion object {
        fun C(Other: UObject): NetAnalyticsDataConfig
        fun C(Other: Any): NetAnalyticsDataConfig
    }
}

external open class NetAnalyticsAggregatorConfig : UObject {
    constructor()
    constructor(Outer: UObject)
    open var NetAnalyticsData: Array<NetAnalyticsDataConfig>

    companion object {
        fun Load(ResourceName: String): NetAnalyticsAggregatorConfig
        fun Find(Outer: UObject, ResourceName: String): NetAnalyticsAggregatorConfig
        fun GetDefaultObject(): NetAnalyticsAggregatorConfig
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NetAnalyticsAggregatorConfig
        fun C(Other: UObject): NetAnalyticsAggregatorConfig
        fun C(Other: Any): NetAnalyticsAggregatorConfig
    }
}

external open class JsonUtilitiesDummyObject : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): JsonUtilitiesDummyObject
        fun Find(Outer: UObject, ResourceName: String): JsonUtilitiesDummyObject
        fun GetDefaultObject(): JsonUtilitiesDummyObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JsonUtilitiesDummyObject
        fun C(Other: UObject): JsonUtilitiesDummyObject
        fun C(Other: Any): JsonUtilitiesDummyObject
    }
}

external open class AssetRegistryImpl : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AssetRegistryImpl
        fun Find(Outer: UObject, ResourceName: String): AssetRegistryImpl
        fun GetDefaultObject(): AssetRegistryImpl
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AssetRegistryImpl
        fun C(Other: UObject): AssetRegistryImpl
        fun C(Other: Any): AssetRegistryImpl
    }
}

external open class ARFilter {
    open var PackageNames: Array<String>
    open var PackagePaths: Array<String>
    open var ObjectPaths: Array<String>
    open var ClassNames: Array<String>
    open var RecursiveClassesExclusionSet: Any
    open var bRecursivePaths: Boolean
    open var bRecursiveClasses: Boolean
    open var bIncludeOnlyOnDiskAssets: Boolean
    open fun clone(): ARFilter

    companion object {
        fun C(Other: UObject): ARFilter
        fun C(Other: Any): ARFilter
    }
}

external open class TagAndValue {
    open var Tag: String
    open var Value: String
    open fun clone(): TagAndValue

    companion object {
        fun C(Other: UObject): TagAndValue
        fun C(Other: Any): TagAndValue
    }
}

external interface `T$527` {
    var OutTagValue: String
    var `$`: Boolean
}

external open class AssetRegistryHelpers : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AssetRegistryHelpers
        fun Find(Outer: UObject, ResourceName: String): AssetRegistryHelpers
        fun GetDefaultObject(): AssetRegistryHelpers
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AssetRegistryHelpers
        fun ToSoftObjectPath(InAssetData: AssetData): SoftObjectPath
        fun SetFilterTagsAndValues(InFilter: ARFilter, InTagsAndValues: Array<TagAndValue>): ARFilter
        fun IsValid(InAssetData: AssetData): Boolean
        fun IsUAsset(InAssetData: AssetData): Boolean
        fun IsRedirector(InAssetData: AssetData): Boolean
        fun IsAssetLoaded(InAssetData: AssetData): Boolean
        fun GetTagValue(InAssetData: AssetData, InTagName: String, OutTagValue: String = definedExternally): `T$527`
        fun GetFullName(InAssetData: AssetData): String
        fun GetExportTextName(InAssetData: AssetData): String
        fun GetClass(InAssetData: AssetData): UnrealEngineClass
        fun GetAsset(InAssetData: AssetData): UObject
        fun CreateAssetData(InAsset: UObject, bAllowBlueprintClass: Boolean): AssetData
        fun C(Other: UObject): AssetRegistryHelpers
        fun C(Other: Any): AssetRegistryHelpers
    }
}

external open class AssetRegistryDependencyOptions {
    open var bIncludeSoftPackageReferences: Boolean
    open var bIncludeHardPackageReferences: Boolean
    open var bIncludeSearchableNames: Boolean
    open var bIncludeSoftManagementReferences: Boolean
    open var bIncludeHardManagementReferences: Boolean
    open fun clone(): AssetRegistryDependencyOptions

    companion object {
        fun C(Other: UObject): AssetRegistryDependencyOptions
        fun C(Other: Any): AssetRegistryDependencyOptions
    }
}

external interface `T$528` {
    var AssetDataList: Array<AssetData>
}

external interface `T$529` {
    var AssetDataList: Array<AssetData>
}

external interface `T$530` {
    var OutReferencers: Array<String>
    var `$`: Boolean
}

external interface `T$531` {
    var OutDependencies: Array<String>
    var `$`: Boolean
}

external interface `T$532` {
    var OutPathList: Array<String>
}

external interface `T$533` {
    var OutAssetData: Array<AssetData>
    var `$`: Boolean
}

external interface `T$534` {
    var OutAssetData: Array<AssetData>
    var `$`: Boolean
}

external interface `T$535` {
    var OutAssetData: Array<AssetData>
    var `$`: Boolean
}

external interface `T$536` {
    var OutAssetData: Array<AssetData>
    var `$`: Boolean
}

external interface `T$537` {
    var OutAssetData: Array<AssetData>
    var `$`: Boolean
}

external interface `T$538` {
    var OutPathList: Array<String>
}

external interface `T$539` {
    var OutAssetData: Array<AssetData>
    var `$`: Boolean
}

external open class AssetRegistry : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun WaitForPackage(PackageName: String)
    open fun WaitForCompletion()
    open fun UseFilterToExcludeAssets(AssetDataList: Array<AssetData> = definedExternally, Filter: ARFilter = definedExternally): `T$528`
    open fun SearchAllAssets(bSynchronousSearch: Boolean)
    open fun ScanPathsSynchronous(InPaths: Array<String>, bForceRescan: Boolean, bIgnoreDenyListScanFilters: Boolean)
    open fun ScanModifiedAssetFiles(InFilePaths: Array<String>)
    open fun ScanFilesSynchronous(InFilePaths: Array<String>, bForceRescan: Boolean)
    open fun RunAssetsThroughFilter(AssetDataList: Array<AssetData> = definedExternally, Filter: ARFilter = definedExternally): `T$529`
    open fun PrioritizeSearchPath(PathToPrioritize: String)
    open fun GetReferencers(PackageName: String, ReferenceOptions: AssetRegistryDependencyOptions, OutReferencers: Array<String> = definedExternally): `T$530`
    open fun GetDependencies(PackageName: String, DependencyOptions: AssetRegistryDependencyOptions, OutDependencies: Array<String> = definedExternally): `T$531`
    open fun IsSearchAsync(): Boolean
    open fun IsSearchAllAssets(): Boolean
    open fun IsLoadingAssets(): Boolean
    open fun HasAssets(PackagePath: String, bRecursive: Boolean): Boolean
    open fun GetSubPaths(InBasePath: String, OutPathList: Array<String> = definedExternally, bInRecurse: Boolean = definedExternally): `T$532`
    open fun GetAssetsByPaths(PackagePaths: Array<String>, OutAssetData: Array<AssetData> = definedExternally, bRecursive: Boolean = definedExternally, bIncludeOnlyOnDiskAssets: Boolean = definedExternally): `T$533`
    open fun GetAssetsByPath(PackagePath: String, OutAssetData: Array<AssetData> = definedExternally, bRecursive: Boolean = definedExternally, bIncludeOnlyOnDiskAssets: Boolean = definedExternally): `T$534`
    open fun GetAssetsByPackageName(PackageName: String, OutAssetData: Array<AssetData> = definedExternally, bIncludeOnlyOnDiskAssets: Boolean = definedExternally): `T$535`
    open fun GetAssetsByClass(ClassName: String, OutAssetData: Array<AssetData> = definedExternally, bSearchSubClasses: Boolean = definedExternally): `T$536`
    open fun GetAssets(Filter: ARFilter, OutAssetData: Array<AssetData> = definedExternally): `T$537`
    open fun GetAssetByObjectPath(ObjectPath: String, bIncludeOnlyOnDiskAssets: Boolean): AssetData
    open fun GetAllCachedPaths(OutPathList: Array<String> = definedExternally): `T$538`
    open fun GetAllAssets(OutAssetData: Array<AssetData> = definedExternally, bIncludeOnlyOnDiskAssets: Boolean = definedExternally): `T$539`

    companion object {
        fun Load(ResourceName: String): AssetRegistry
        fun Find(Outer: UObject, ResourceName: String): AssetRegistry
        fun GetDefaultObject(): AssetRegistry
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AssetRegistry
        fun C(Other: UObject): AssetRegistry
        fun C(Other: Any): AssetRegistry
    }
}

external open class AutoCompleteCommand {
    open var Command: String
    open var Desc: String
    open fun clone(): AutoCompleteCommand

    companion object {
        fun C(Other: UObject): AutoCompleteCommand
        fun C(Other: Any): AutoCompleteCommand
    }
}

external open class ConsoleSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var MaxScrollbackSize: Number
    open var ManualAutoCompleteList: Array<AutoCompleteCommand>
    open var AutoCompleteMapPaths: Array<String>
    open var BackgroundOpacityPercentage: Number
    open var bOrderTopToBottom: Boolean
    open var bDisplayHelpInAutoComplete: Boolean
    open var InputColor: Color
    open var HistoryColor: Color
    open var AutoCompleteCommandColor: Color
    open var AutoCompleteCVarColor: Color
    open var AutoCompleteFadedColor: Color

    companion object {
        fun Load(ResourceName: String): ConsoleSettings
        fun Find(Outer: UObject, ResourceName: String): ConsoleSettings
        fun GetDefaultObject(): ConsoleSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ConsoleSettings
        fun C(Other: UObject): ConsoleSettings
        fun C(Other: Any): ConsoleSettings
    }
}

external open class TemplateMapInfoOverride {
    open var Thumbnail: SoftObjectPath
    open var Map: SoftObjectPath
    open var DisplayName: String
    open fun clone(): TemplateMapInfoOverride

    companion object {
        fun C(Other: UObject): TemplateMapInfoOverride
        fun C(Other: Any): TemplateMapInfoOverride
    }
}

external object ETwoPlayerSplitScreenType {
    var Horizontal: String /* "Horizontal" */
    var Vertical: String /* "Vertical" */
    var ETwoPlayerSplitScreenType_MAX: String /* "ETwoPlayerSplitScreenType_MAX" */
}

external object EThreePlayerSplitScreenType {
    var FavorTop: String /* "FavorTop" */
    var FavorBottom: String /* "FavorBottom" */
    var Vertical: String /* "Vertical" */
    var Horizontal: String /* "Horizontal" */
    var EThreePlayerSplitScreenType_MAX: String /* "EThreePlayerSplitScreenType_MAX" */
}

external object EFourPlayerSplitScreenType {
    var Grid: String /* "Grid" */
    var Vertical: String /* "Vertical" */
    var Horizontal: String /* "Horizontal" */
    var EFourPlayerSplitScreenType_MAX: String /* "EFourPlayerSplitScreenType_MAX" */
}

external open class GameModeName {
    open var Name: String
    open var GameMode: SoftClassPath
    open fun clone(): GameModeName

    companion object {
        fun C(Other: UObject): GameModeName
        fun C(Other: Any): GameModeName
    }
}

external open class GameMapsSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var EditorStartupMap: SoftObjectPath
    open var EditorTemplateMapOverrides: Array<TemplateMapInfoOverride>
    open var LocalMapOptions: String
    open var TransitionMap: SoftObjectPath
    open var bUseSplitscreen: Boolean
    open var TwoPlayerSplitscreenLayout: String /* "Horizontal" | "Vertical" | "ETwoPlayerSplitScreenType_MAX" */
    open var ThreePlayerSplitscreenLayout: String /* "FavorTop" | "FavorBottom" | "Vertical" | "Horizontal" | "EThreePlayerSplitScreenType_MAX" */
    open var FourPlayerSplitscreenLayout: String /* "Grid" | "Vertical" | "Horizontal" | "EFourPlayerSplitScreenType_MAX" */
    open var bOffsetPlayerGamepadIds: Boolean
    open var GameInstanceClass: SoftClassPath
    open var GameDefaultMap: SoftObjectPath
    open var ServerDefaultMap: SoftObjectPath
    open var GlobalDefaultGameMode: SoftClassPath
    open var GlobalDefaultServerGameMode: SoftClassPath
    open var GameModeMapPrefixes: Array<GameModeName>
    open var GameModeClassAliases: Array<GameModeName>
    open fun SetSkipAssigningGamepadToPlayer1(bSkipFirstPlayer: Boolean)
    open fun GetSkipAssigningGamepadToPlayer1(): Boolean

    companion object {
        fun Load(ResourceName: String): GameMapsSettings
        fun Find(Outer: UObject, ResourceName: String): GameMapsSettings
        fun GetDefaultObject(): GameMapsSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameMapsSettings
        fun GetGameMapsandModesSettings(): GameMapsSettings
        fun C(Other: UObject): GameMapsSettings
        fun C(Other: Any): GameMapsSettings
    }
}

external open class GameNetworkManagerSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var MinDynamicBandwidth: Number
    open var MaxDynamicBandwidth: Number
    open var TotalNetBandwidth: Number
    open var BadPingThreshold: Number
    open var bIsStandbyCheckingEnabled: Boolean
    open var StandbyRxCheatTime: Number
    open var StandbyTxCheatTime: Number
    open var PercentMissingForRxStandby: Number
    open var PercentMissingForTxStandby: Number
    open var PercentForBadPing: Number
    open var JoinInProgressStandbyWaitTime: Number

    companion object {
        fun Load(ResourceName: String): GameNetworkManagerSettings
        fun Find(Outer: UObject, ResourceName: String): GameNetworkManagerSettings
        fun GetDefaultObject(): GameNetworkManagerSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameNetworkManagerSettings
        fun C(Other: UObject): GameNetworkManagerSettings
        fun C(Other: Any): GameNetworkManagerSettings
    }
}

external open class GameSessionSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var MaxSpectators: Number
    open var MaxPlayers: Number
    open var bRequiresPushToTalk: Boolean

    companion object {
        fun Load(ResourceName: String): GameSessionSettings
        fun Find(Outer: UObject, ResourceName: String): GameSessionSettings
        fun GetDefaultObject(): GameSessionSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameSessionSettings
        fun C(Other: UObject): GameSessionSettings
        fun C(Other: Any): GameSessionSettings
    }
}

external open class GeneralEngineSettings : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GeneralEngineSettings
        fun Find(Outer: UObject, ResourceName: String): GeneralEngineSettings
        fun GetDefaultObject(): GeneralEngineSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GeneralEngineSettings
        fun C(Other: UObject): GeneralEngineSettings
        fun C(Other: Any): GeneralEngineSettings
    }
}

external open class GeneralProjectSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var CompanyName: String
    open var CompanyDistinguishedName: String
    open var CopyrightNotice: String
    open var Description: String
    open var Homepage: String
    open var LicensingTerms: String
    open var PrivacyPolicy: String
    open var ProjectID: Guid
    open var ProjectName: String
    open var ProjectVersion: String
    open var SupportContact: String
    open var ProjectDisplayedTitle: String
    open var ProjectDebugTitleInfo: String
    open var bShouldWindowPreserveAspectRatio: Boolean
    open var bUseBorderlessWindow: Boolean
    open var bStartInVR: Boolean
    open var bAllowWindowResize: Boolean
    open var bAllowClose: Boolean
    open var bAllowMaximize: Boolean
    open var bAllowMinimize: Boolean

    companion object {
        fun Load(ResourceName: String): GeneralProjectSettings
        fun Find(Outer: UObject, ResourceName: String): GeneralProjectSettings
        fun GetDefaultObject(): GeneralProjectSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GeneralProjectSettings
        fun C(Other: UObject): GeneralProjectSettings
        fun C(Other: Any): GeneralProjectSettings
    }
}

external open class HudSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bShowHUD: Boolean
    open var DebugDisplay: Array<String>

    companion object {
        fun Load(ResourceName: String): HudSettings
        fun Find(Outer: UObject, ResourceName: String): HudSettings
        fun GetDefaultObject(): HudSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): HudSettings
        fun C(Other: UObject): HudSettings
        fun C(Other: Any): HudSettings
    }
}

external open class HandlerComponentFactory : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): HandlerComponentFactory
        fun Find(Outer: UObject, ResourceName: String): HandlerComponentFactory
        fun GetDefaultObject(): HandlerComponentFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): HandlerComponentFactory
        fun C(Other: UObject): HandlerComponentFactory
        fun C(Other: Any): HandlerComponentFactory
    }
}

external open class PacketHandlerProfileConfig : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Components: Array<String>

    companion object {
        fun Load(ResourceName: String): PacketHandlerProfileConfig
        fun Find(Outer: UObject, ResourceName: String): PacketHandlerProfileConfig
        fun GetDefaultObject(): PacketHandlerProfileConfig
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PacketHandlerProfileConfig
        fun C(Other: UObject): PacketHandlerProfileConfig
        fun C(Other: Any): PacketHandlerProfileConfig
    }
}

external open class ChaosPhysicalMaterial : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Friction: Number
    open var StaticFriction: Number
    open var Restitution: Number
    open var LinearEtherDrag: Number
    open var AngularEtherDrag: Number
    open var SleepingLinearVelocityThreshold: Number
    open var SleepingAngularVelocityThreshold: Number

    companion object {
        fun Load(ResourceName: String): ChaosPhysicalMaterial
        fun Find(Outer: UObject, ResourceName: String): ChaosPhysicalMaterial
        fun GetDefaultObject(): ChaosPhysicalMaterial
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ChaosPhysicalMaterial
        fun C(Other: UObject): ChaosPhysicalMaterial
        fun C(Other: Any): ChaosPhysicalMaterial
    }
}

external object EClusterUnionMethod {
    var PointImplicit: String /* "PointImplicit" */
    var DelaunayTriangulation: String /* "DelaunayTriangulation" */
    var MinimalSpanningSubsetDelaunayTriangulation: String /* "MinimalSpanningSubsetDelaunayTriangulation" */
    var PointImplicitAugmentedWithMinimalDelaunay: String /* "PointImplicitAugmentedWithMinimalDelaunay" */
    var None: String /* "None" */
    var EClusterUnionMethod_MAX: String /* "EClusterUnionMethod_MAX" */
}

external open class SolverCollisionFilterSettings {
    open var FilterEnabled: Boolean
    open var MinMass: Number
    open var MinSpeed: Number
    open var MinImpulse: Number
    open fun clone(): SolverCollisionFilterSettings

    companion object {
        fun C(Other: UObject): SolverCollisionFilterSettings
        fun C(Other: Any): SolverCollisionFilterSettings
    }
}

external open class SolverBreakingFilterSettings {
    open var FilterEnabled: Boolean
    open var MinMass: Number
    open var MinSpeed: Number
    open var MinVolume: Number
    open fun clone(): SolverBreakingFilterSettings

    companion object {
        fun C(Other: UObject): SolverBreakingFilterSettings
        fun C(Other: Any): SolverBreakingFilterSettings
    }
}

external open class SolverTrailingFilterSettings {
    open var FilterEnabled: Boolean
    open var MinMass: Number
    open var MinSpeed: Number
    open var MinVolume: Number
    open fun clone(): SolverTrailingFilterSettings

    companion object {
        fun C(Other: UObject): SolverTrailingFilterSettings
        fun C(Other: Any): SolverTrailingFilterSettings
    }
}

external open class ChaosSolverConfiguration {
    open var Iterations: Number
    open var CollisionPairIterations: Number
    open var PushOutIterations: Number
    open var CollisionPushOutPairIterations: Number
    open var CollisionMarginFraction: Number
    open var CollisionMarginMax: Number
    open var CollisionCullDistance: Number
    open var CollisionMaxPushOutVelocity: Number
    open var JointPairIterations: Number
    open var JointPushOutPairIterations: Number
    open var ClusterConnectionFactor: Number
    open var ClusterUnionConnectionType: String /* "PointImplicit" | "DelaunayTriangulation" | "MinimalSpanningSubsetDelaunayTriangulation" | "PointImplicitAugmentedWithMinimalDelaunay" | "None" | "EClusterUnionMethod_MAX" */
    open var bGenerateCollisionData: Boolean
    open var CollisionFilterSettings: SolverCollisionFilterSettings
    open var bGenerateBreakData: Boolean
    open var BreakingFilterSettings: SolverBreakingFilterSettings
    open var bGenerateTrailingData: Boolean
    open var TrailingFilterSettings: SolverTrailingFilterSettings
    open var bGenerateContactGraph: Boolean
    open fun clone(): ChaosSolverConfiguration

    companion object {
        fun C(Other: UObject): ChaosSolverConfiguration
        fun C(Other: Any): ChaosSolverConfiguration
    }
}

external open class PhysicsSettingsCore : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var DefaultGravityZ: Number
    open var DefaultTerminalVelocity: Number
    open var DefaultFluidFriction: Number
    open var SimulateScratchMemorySize: Number
    open var RagdollAggregateThreshold: Number
    open var TriangleMeshTriangleMinAreaThreshold: Number
    open var bEnableShapeSharing: Boolean
    open var bEnablePCM: Boolean
    open var bEnableStabilization: Boolean
    open var bWarnMissingLocks: Boolean
    open var bEnable2DPhysics: Boolean
    open var bDefaultHasComplexCollision: Boolean
    open var BounceThresholdVelocity: Number
    open var FrictionCombineMode: String /* "Average" | "Min" | "Multiply" | "Max" | "EFrictionCombineMode_MAX" */
    open var RestitutionCombineMode: String /* "Average" | "Min" | "Multiply" | "Max" | "EFrictionCombineMode_MAX" */
    open var MaxAngularVelocity: Number
    open var MaxDepenetrationVelocity: Number
    open var ContactOffsetMultiplier: Number
    open var MinContactOffset: Number
    open var MaxContactOffset: Number
    open var bSimulateSkeletalMeshOnDedicatedServer: Boolean
    open var DefaultShapeComplexity: String /* "CTF_UseDefault" | "CTF_UseSimpleAndComplex" | "CTF_UseSimpleAsComplex" | "CTF_UseComplexAsSimple" | "CTF_MAX" */
    open var SolverOptions: ChaosSolverConfiguration

    companion object {
        fun Load(ResourceName: String): PhysicsSettingsCore
        fun Find(Outer: UObject, ResourceName: String): PhysicsSettingsCore
        fun GetDefaultObject(): PhysicsSettingsCore
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PhysicsSettingsCore
        fun C(Other: UObject): PhysicsSettingsCore
        fun C(Other: Any): PhysicsSettingsCore
    }
}

external open class AudioParameterControllerInterface : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun ExecuteTriggerParameter(InName: String)
    open fun SetStringParameter(InName: String, InValue: String)
    open fun SetStringArrayParameter(InName: String, InValue: Array<String>)
    open fun SetParameters(InParameters: Array<AudioParameter>)
    open fun SetObjectParameter(InName: String, InValue: UObject)
    open fun SetObjectArrayParameter(InName: String, InValue: Array<UObject>)
    open fun SetIntParameter(InName: String, inInt: Number)
    open fun SetIntegerArrayParameter(InName: String, InValue: Array<Number>)
    open fun SetFloatParameter(InName: String, InFloat: Number)
    open fun SetFloatArrayParameter(InName: String, InValue: Array<Number>)
    open fun SetBoolParameter(InName: String, InBool: Boolean)
    open fun SetBooleanArrayParameter(InName: String, InValue: Array<Boolean>)
    open fun ResetParameters()

    companion object {
        fun Load(ResourceName: String): AudioParameterControllerInterface
        fun Find(Outer: UObject, ResourceName: String): AudioParameterControllerInterface
        fun GetDefaultObject(): AudioParameterControllerInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AudioParameterControllerInterface
        fun C(Other: UObject): AudioParameterControllerInterface
        fun C(Other: Any): AudioParameterControllerInterface
    }
}

external open class AudioCodecEncoderSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Version: Number

    companion object {
        fun Load(ResourceName: String): AudioCodecEncoderSettings
        fun Find(Outer: UObject, ResourceName: String): AudioCodecEncoderSettings
        fun GetDefaultObject(): AudioCodecEncoderSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AudioCodecEncoderSettings
        fun C(Other: UObject): AudioCodecEncoderSettings
        fun C(Other: Any): AudioCodecEncoderSettings
    }
}

external open class AudioEndpointSettingsBase : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AudioEndpointSettingsBase
        fun Find(Outer: UObject, ResourceName: String): AudioEndpointSettingsBase
        fun GetDefaultObject(): AudioEndpointSettingsBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AudioEndpointSettingsBase
        fun C(Other: UObject): AudioEndpointSettingsBase
        fun C(Other: Any): AudioEndpointSettingsBase
    }
}

external open class DummyEndpointSettings : AudioEndpointSettingsBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DummyEndpointSettings
        fun Find(Outer: UObject, ResourceName: String): DummyEndpointSettings
        fun GetDefaultObject(): DummyEndpointSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DummyEndpointSettings
        fun C(Other: UObject): DummyEndpointSettings
        fun C(Other: Any): DummyEndpointSettings
    }
}

external open class SoundfieldEndpointSettingsBase : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundfieldEndpointSettingsBase
        fun Find(Outer: UObject, ResourceName: String): SoundfieldEndpointSettingsBase
        fun GetDefaultObject(): SoundfieldEndpointSettingsBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundfieldEndpointSettingsBase
        fun C(Other: UObject): SoundfieldEndpointSettingsBase
        fun C(Other: Any): SoundfieldEndpointSettingsBase
    }
}

external open class SoundfieldEffectSettingsBase : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundfieldEffectSettingsBase
        fun Find(Outer: UObject, ResourceName: String): SoundfieldEffectSettingsBase
        fun GetDefaultObject(): SoundfieldEffectSettingsBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundfieldEffectSettingsBase
        fun C(Other: UObject): SoundfieldEffectSettingsBase
        fun C(Other: Any): SoundfieldEffectSettingsBase
    }
}

external open class SoundfieldEffectBase : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Settings: SoundfieldEffectSettingsBase

    companion object {
        fun Load(ResourceName: String): SoundfieldEffectBase
        fun Find(Outer: UObject, ResourceName: String): SoundfieldEffectBase
        fun GetDefaultObject(): SoundfieldEffectBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundfieldEffectBase
        fun C(Other: UObject): SoundfieldEffectBase
        fun C(Other: Any): SoundfieldEffectBase
    }
}

external object EPcmBitDepthConversion {
    var SameAsSource: String /* "SameAsSource" */
    var Int16: String /* "Int16" */
    var Float32: String /* "Float32" */
    var EPcmBitDepthConversion_MAX: String /* "EPcmBitDepthConversion_MAX" */
}

external open class AudioPcmEncoderSettings : AudioCodecEncoderSettings {
    constructor()
    constructor(Outer: UObject)
    open var BitDepthConversion: String /* "SameAsSource" | "Int16" | "Float32" | "EPcmBitDepthConversion_MAX" */

    companion object {
        fun Load(ResourceName: String): AudioPcmEncoderSettings
        fun Find(Outer: UObject, ResourceName: String): AudioPcmEncoderSettings
        fun GetDefaultObject(): AudioPcmEncoderSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AudioPcmEncoderSettings
        fun C(Other: UObject): AudioPcmEncoderSettings
        fun C(Other: Any): AudioPcmEncoderSettings
    }
}

external open class ClothConfigBase : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ClothConfigBase
        fun Find(Outer: UObject, ResourceName: String): ClothConfigBase
        fun GetDefaultObject(): ClothConfigBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClothConfigBase
        fun C(Other: UObject): ClothConfigBase
        fun C(Other: Any): ClothConfigBase
    }
}

external open class ClothSharedSimConfigBase : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ClothSharedSimConfigBase
        fun Find(Outer: UObject, ResourceName: String): ClothSharedSimConfigBase
        fun GetDefaultObject(): ClothSharedSimConfigBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClothSharedSimConfigBase
        fun C(Other: UObject): ClothSharedSimConfigBase
        fun C(Other: Any): ClothSharedSimConfigBase
    }
}

external open class ClothVertBoneData {
    open var NumInfluences: Number
    open var BoneIndices: Any
    open var BoneWeights: Number
    open fun clone(): ClothVertBoneData

    companion object {
        fun C(Other: UObject): ClothVertBoneData
        fun C(Other: Any): ClothVertBoneData
    }
}

external open class ClothPhysicalMeshDataBase_Legacy : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Vertices: Array<Vector3f>
    open var Normals: Array<Vector3f>
    open var VertexColors: Array<Color>
    open var Indices: Array<Any>
    open var InverseMasses: Array<Number>
    open var BoneData: Array<ClothVertBoneData>
    open var NumFixedVerts: Number
    open var MaxBoneWeights: Number
    open var SelfCollisionIndices: Array<Any>

    companion object {
        fun Load(ResourceName: String): ClothPhysicalMeshDataBase_Legacy
        fun Find(Outer: UObject, ResourceName: String): ClothPhysicalMeshDataBase_Legacy
        fun GetDefaultObject(): ClothPhysicalMeshDataBase_Legacy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClothPhysicalMeshDataBase_Legacy
        fun C(Other: UObject): ClothPhysicalMeshDataBase_Legacy
        fun C(Other: Any): ClothPhysicalMeshDataBase_Legacy
    }
}

external object EMultiBoxType {
    var MenuBar: String /* "MenuBar" */
    var ToolBar: String /* "ToolBar" */
    var VerticalToolBar: String /* "VerticalToolBar" */
    var SlimHorizontalToolBar: String /* "SlimHorizontalToolBar" */
    var UniformToolBar: String /* "UniformToolBar" */
    var Menu: String /* "Menu" */
    var ButtonRow: String /* "ButtonRow" */
    var EMultiBoxType_MAX: String /* "EMultiBoxType_MAX" */
}

external open class ToolMenuOwner {
    open fun clone(): ToolMenuOwner

    companion object {
        fun C(Other: UObject): ToolMenuOwner
        fun C(Other: Any): ToolMenuOwner
    }
}

external open class ToolMenuContext {
    open var ContextObjects: Array<UObject>
    open fun clone(): ToolMenuContext

    companion object {
        fun C(Other: UObject): ToolMenuContext
        fun C(Other: Any): ToolMenuContext
    }
}

external object EMultiBlockType {
    var None: String /* "None" */
    var ButtonRow: String /* "ButtonRow" */
    var EditableText: String /* "EditableText" */
    var Heading: String /* "Heading" */
    var MenuEntry: String /* "MenuEntry" */
    var Separator: String /* "Separator" */
    var ToolBarButton: String /* "ToolBarButton" */
    var ToolBarComboButton: String /* "ToolBarComboButton" */
    var Widget: String /* "Widget" */
    var EMultiBlockType_MAX: String /* "EMultiBlockType_MAX" */
}

external object EUserInterfaceActionType {
    var None: String /* "None" */
    var Button: String /* "Button" */
    var ToggleButton: String /* "ToggleButton" */
    var RadioButton: String /* "RadioButton" */
    var Check: String /* "Check" */
    var CollapsedButton: String /* "CollapsedButton" */
    var EUserInterfaceActionType_MAX: String /* "EUserInterfaceActionType_MAX" */
}

external object EToolMenuInsertType {
    var Default: String /* "Default" */
    var Before: String /* "Before" */
    var After: String /* "After" */
    var First: String /* "First" */
    var EToolMenuInsertType_MAX: String /* "EToolMenuInsertType_MAX" */
}

external open class ToolMenuInsert {
    open var Name: String
    open var position: String /* "Default" | "Before" | "After" | "First" | "EToolMenuInsertType_MAX" */
    open fun clone(): ToolMenuInsert

    companion object {
        fun C(Other: UObject): ToolMenuInsert
        fun C(Other: Any): ToolMenuInsert
    }
}

external open class ScriptSlateIcon {
    open var StyleSetName: String
    open var StyleName: String
    open var SmallStyleName: String
    open fun clone(): ScriptSlateIcon

    companion object {
        fun C(Other: UObject): ScriptSlateIcon
        fun C(Other: Any): ScriptSlateIcon
    }
}

external open class ToolMenuEntryScriptDataAdvanced {
    open var TutorialHighlight: String
    open var EntryType: String /* "None" | "ButtonRow" | "EditableText" | "Heading" | "MenuEntry" | "Separator" | "ToolBarButton" | "ToolBarComboButton" | "Widget" | "EMultiBlockType_MAX" */
    open var UserInterfaceActionType: String /* "None" | "Button" | "ToggleButton" | "RadioButton" | "Check" | "CollapsedButton" | "EUserInterfaceActionType_MAX" */
    open var StyleNameOverride: String
    open var bIsSubMenu: Boolean
    open var bOpenSubMenuOnClick: Boolean
    open var bShouldCloseWindowAfterMenuSelection: Boolean
    open var bSimpleComboBox: Boolean
    open fun clone(): ToolMenuEntryScriptDataAdvanced

    companion object {
        fun C(Other: UObject): ToolMenuEntryScriptDataAdvanced
        fun C(Other: Any): ToolMenuEntryScriptDataAdvanced
    }
}

external open class ToolMenuEntryScriptData {
    open var Menu: String
    open var Section: String
    open var Name: String
    open var Label: String
    open var Tooltip: String
    open var Icon: ScriptSlateIcon
    open var OwnerName: String
    open var InsertPosition: ToolMenuInsert
    open var Advanced: ToolMenuEntryScriptDataAdvanced
    open fun clone(): ToolMenuEntryScriptData

    companion object {
        fun C(Other: UObject): ToolMenuEntryScriptData
        fun C(Other: Any): ToolMenuEntryScriptData
    }
}

external object ECheckBoxState {
    var Unchecked: String /* "Unchecked" */
    var Checked: String /* "Checked" */
    var Undetermined: String /* "Undetermined" */
    var ECheckBoxState_MAX: String /* "ECheckBoxState_MAX" */
}

external open class ToolMenuEntryScript : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Data: ToolMenuEntryScriptData
    open fun RegisterMenuEntry()
    open fun IsVisible(Context: ToolMenuContext): Boolean
    open fun InitEntry(OwnerName: String, Menu: String, Section: String, Name: String, Label: String, Tooltip: String)
    open fun GetToolTip(Context: ToolMenuContext): String
    open fun GetLabel(Context: ToolMenuContext): String
    open fun GetIcon(Context: ToolMenuContext): ScriptSlateIcon
    open fun GetCheckState(Context: ToolMenuContext): String /* "Unchecked" | "Checked" | "Undetermined" | "ECheckBoxState_MAX" */
    open fun Execute(Context: ToolMenuContext)
    open fun ConstructMenuEntry(Menu: ToolMenu, SectionName: String, Context: ToolMenuContext)
    open fun CanExecute(Context: ToolMenuContext): Boolean

    companion object {
        fun Load(ResourceName: String): ToolMenuEntryScript
        fun Find(Outer: UObject, ResourceName: String): ToolMenuEntryScript
        fun GetDefaultObject(): ToolMenuEntryScript
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ToolMenuEntryScript
        fun C(Other: UObject): ToolMenuEntryScript
        fun C(Other: Any): ToolMenuEntryScript
    }
}

external open class ToolMenuEntry {
    open var Name: String
    open var Owner: ToolMenuOwner
    open var Type: String /* "None" | "ButtonRow" | "EditableText" | "Heading" | "MenuEntry" | "Separator" | "ToolBarButton" | "ToolBarComboButton" | "Widget" | "EMultiBlockType_MAX" */
    open var UserInterfaceActionType: String /* "None" | "Button" | "ToggleButton" | "RadioButton" | "Check" | "CollapsedButton" | "EUserInterfaceActionType_MAX" */
    open var TutorialHighlightName: String
    open var InsertPosition: ToolMenuInsert
    open var bShouldCloseWindowAfterMenuSelection: Boolean
    open var ScriptObject: ToolMenuEntryScript
    open var StyleNameOverride: String
    open var bCommandIsKeybindOnly: Boolean
    open fun clone(): ToolMenuEntry

    companion object {
        fun C(Other: UObject): ToolMenuEntry
        fun C(Other: Any): ToolMenuEntry
    }
}

external open class ToolMenuSectionDynamic : UObject {
    constructor()
    constructor(Outer: UObject)
    open fun ConstructSections(Menu: ToolMenu, Context: ToolMenuContext)

    companion object {
        fun Load(ResourceName: String): ToolMenuSectionDynamic
        fun Find(Outer: UObject, ResourceName: String): ToolMenuSectionDynamic
        fun GetDefaultObject(): ToolMenuSectionDynamic
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ToolMenuSectionDynamic
        fun C(Other: UObject): ToolMenuSectionDynamic
        fun C(Other: Any): ToolMenuSectionDynamic
    }
}

external open class ToolMenuSection {
    open var Name: String
    open var Owner: ToolMenuOwner
    open var Blocks: Array<ToolMenuEntry>
    open var InsertPosition: ToolMenuInsert
    open var Context: ToolMenuContext
    open var ToolMenuSectionDynamic: ToolMenuSectionDynamic
    open fun clone(): ToolMenuSection

    companion object {
        fun C(Other: UObject): ToolMenuSection
        fun C(Other: Any): ToolMenuSection
    }
}

external open class ToolMenu : ToolMenuBase {
    constructor()
    constructor(Outer: UObject)
    open var MenuName: String
    open var MenuParent: String
    open var StyleName: String
    open var TutorialHighlightName: String
    open var MenuType: String /* "MenuBar" | "ToolBar" | "VerticalToolBar" | "SlimHorizontalToolBar" | "UniformToolBar" | "Menu" | "ButtonRow" | "EMultiBoxType_MAX" */
    open var bShouldCleanupContextOnDestroy: Boolean
    open var bShouldCloseWindowAfterMenuSelection: Boolean
    open var bCloseSelfOnly: Boolean
    open var bSearchable: Boolean
    open var bToolBarIsFocusable: Boolean
    open var bToolBarForceSmallIcons: Boolean
    open var bPreventCustomization: Boolean
    open var MenuOwner: ToolMenuOwner
    open var Context: ToolMenuContext
    open var Sections: Array<ToolMenuSection>
    open var SubMenuParent: ToolMenu
    open var SubMenuSourceEntryName: String
    open fun InitMenu(Owner: ToolMenuOwner, Name: String, Parent: String, Type: String /* "MenuBar" | "ToolBar" | "VerticalToolBar" | "SlimHorizontalToolBar" | "UniformToolBar" | "Menu" | "ButtonRow" | "EMultiBoxType_MAX" */)
    open fun AddSubMenuScript(Owner: String, SectionName: String, Name: String, Label: String, Tooltip: String): ToolMenu
    open fun AddSection(SectionName: String, Label: String, InsertName: String, InsertType: String /* "Default" | "Before" | "After" | "First" | "EToolMenuInsertType_MAX" */)
    open fun AddMenuEntryObject(InObject: ToolMenuEntryScript)
    open fun AddMenuEntry(SectionName: String, Args: ToolMenuEntry)
    open fun AddDynamicSection(SectionName: String, UObject: ToolMenuSectionDynamic)

    companion object {
        fun Load(ResourceName: String): ToolMenu
        fun Find(Outer: UObject, ResourceName: String): ToolMenu
        fun GetDefaultObject(): ToolMenu
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ToolMenu
        fun C(Other: UObject): ToolMenu
        fun C(Other: Any): ToolMenu
    }
}

external open class ToolMenuContextBase : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ToolMenuContextBase
        fun Find(Outer: UObject, ResourceName: String): ToolMenuContextBase
        fun GetDefaultObject(): ToolMenuContextBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ToolMenuContextBase
        fun C(Other: UObject): ToolMenuContextBase
        fun C(Other: Any): ToolMenuContextBase
    }
}

external open class SlateTabManagerContext : ToolMenuContextBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SlateTabManagerContext
        fun Find(Outer: UObject, ResourceName: String): SlateTabManagerContext
        fun GetDefaultObject(): SlateTabManagerContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SlateTabManagerContext
        fun C(Other: UObject): SlateTabManagerContext
        fun C(Other: Any): SlateTabManagerContext
    }
}

external open class CustomizedToolMenu {
    open var Name: String
    open var Entries: Any
    open var Sections: Any
    open var EntryOrder: Any
    open var SectionOrder: Array<String>
    open fun clone(): CustomizedToolMenu

    companion object {
        fun C(Other: UObject): CustomizedToolMenu
        fun C(Other: Any): CustomizedToolMenu
    }
}

external open class ToolMenus : UObject {
    constructor()
    constructor(Outer: UObject)
    open var CustomizedMenus: Array<CustomizedToolMenu>
    open var MenuSubstitutionsDuringGenerate: Any
    open var Menus: Any
    open fun UnregisterOwnerByName(InOwnerName: String)
    open fun SetSectionPosition(MenuName: String, SectionName: String, OtherSectionName: String, PositionType: String /* "Default" | "Before" | "After" | "First" | "EToolMenuInsertType_MAX" */)
    open fun SetSectionLabel(MenuName: String, SectionName: String, Label: String)
    open fun RemoveSection(MenuName: String, Section: String)
    open fun RemoveMenu(MenuName: String)
    open fun RemoveEntry(MenuName: String, Section: String, Name: String)
    open fun RegisterMenu(Name: String, Parent: String, Type: String /* "MenuBar" | "ToolBar" | "VerticalToolBar" | "SlimHorizontalToolBar" | "UniformToolBar" | "Menu" | "ButtonRow" | "EMultiBoxType_MAX" */, bWarnIfAlreadyRegistered: Boolean): ToolMenu
    open fun RefreshMenuWidget(Name: String): Boolean
    open fun RefreshAllWidgets()
    open fun IsMenuRegistered(Name: String): Boolean
    open fun FindMenu(Name: String): ToolMenu
    open fun ExtendMenu(Name: String): ToolMenu

    companion object {
        fun Load(ResourceName: String): ToolMenus
        fun Find(Outer: UObject, ResourceName: String): ToolMenus
        fun GetDefaultObject(): ToolMenus
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ToolMenus
        fun GetActorGroupingUtils(): ToolMenus
        fun FindContext(InContext: ToolMenuContext, InClass: UnrealEngineClass): UObject
        fun AddMenuEntryObject(MenuEntryObject: ToolMenuEntryScript): Boolean
        fun C(Other: UObject): ToolMenus
        fun C(Other: Any): ToolMenus
    }
}

external open class ToolMenuContextExtensions : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ToolMenuContextExtensions
        fun Find(Outer: UObject, ResourceName: String): ToolMenuContextExtensions
        fun GetDefaultObject(): ToolMenuContextExtensions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ToolMenuContextExtensions
        fun FindByClass(Context: ToolMenuContext, InClass: UnrealEngineClass): UObject
        fun C(Other: UObject): ToolMenuContextExtensions
        fun C(Other: Any): ToolMenuContextExtensions
    }
}

external object EToolMenuStringCommandType {
    var Command: String /* "Command" */
    var Python: String /* "Python" */
    var Custom: String /* "Custom" */
    var EToolMenuStringCommandType_MAX: String /* "EToolMenuStringCommandType_MAX" */
}

external open class ToolMenuStringCommand {
    open var Type: String /* "Command" | "Python" | "Custom" | "EToolMenuStringCommandType_MAX" */
    open var CustomType: String
    open var string: String
    open fun clone(): ToolMenuStringCommand

    companion object {
        fun C(Other: UObject): ToolMenuStringCommand
        fun C(Other: Any): ToolMenuStringCommand
    }
}

external interface `T$540` {
    var Target: ToolMenuEntry
}

external interface `T$541` {
    var Name: String
}

external interface `T$542` {
    var Type: String /* "Command" | "Python" | "Custom" | "EToolMenuStringCommandType_MAX" */
    var CustomType: String
    var string: String
}

external interface `T$543` {
    var StyleSetName: String
    var StyleName: String
    var SmallStyleName: String
}

external open class ToolMenuEntryExtensions : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ToolMenuEntryExtensions
        fun Find(Outer: UObject, ResourceName: String): ToolMenuEntryExtensions
        fun GetDefaultObject(): ToolMenuEntryExtensions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ToolMenuEntryExtensions
        fun SetToolTip(Target: ToolMenuEntry = definedExternally, Tooltip: String = definedExternally): `T$540`
        fun SetStringCommand(Target: ToolMenuEntry = definedExternally, Type: String /* "Command" | "Python" | "Custom" | "EToolMenuStringCommandType_MAX" */ = definedExternally, CustomType: String = definedExternally, string: String = definedExternally): `T$540`
        fun SetLabel(Target: ToolMenuEntry = definedExternally, Label: String = definedExternally): `T$540`
        fun SetIcon(Target: ToolMenuEntry = definedExternally, StyleSetName: String = definedExternally, StyleName: String = definedExternally, SmallStyleName: String = definedExternally): `T$540`
        fun MakeToolMenuOwner(Name: String): ToolMenuOwner
        fun MakeStringCommand(Type: String /* "Command" | "Python" | "Custom" | "EToolMenuStringCommandType_MAX" */, CustomType: String, string: String): ToolMenuStringCommand
        fun MakeScriptSlateIcon(StyleSetName: String, StyleName: String, SmallStyleName: String): ScriptSlateIcon
        fun InitMenuEntry(InOwner: String, InName: String, InLabel: String, InToolTip: String, CommandType: String /* "Command" | "Python" | "Custom" | "EToolMenuStringCommandType_MAX" */, CustomCommandType: String, CommandString: String): ToolMenuEntry
        fun GetToolTip(Target: ToolMenuEntry): String
        fun GetLabel(Target: ToolMenuEntry): String
        fun BreakToolMenuOwner(InValue: ToolMenuOwner, Name: String = definedExternally): `T$541`
        fun BreakStringCommand(InValue: ToolMenuStringCommand, Type: String /* "Command" | "Python" | "Custom" | "EToolMenuStringCommandType_MAX" */ = definedExternally, CustomType: String = definedExternally, string: String = definedExternally): `T$542`
        fun BreakScriptSlateIcon(InValue: ScriptSlateIcon, StyleSetName: String = definedExternally, StyleName: String = definedExternally, SmallStyleName: String = definedExternally): `T$543`
        fun C(Other: UObject): ToolMenuEntryExtensions
        fun C(Other: Any): ToolMenuEntryExtensions
    }
}

external interface `T$544` {
    var Section: ToolMenuSection
}

external open class ToolMenuSectionExtensions : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ToolMenuSectionExtensions
        fun Find(Outer: UObject, ResourceName: String): ToolMenuSectionExtensions
        fun GetDefaultObject(): ToolMenuSectionExtensions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ToolMenuSectionExtensions
        fun SetLabel(Section: ToolMenuSection = definedExternally, Label: String = definedExternally): `T$544`
        fun GetLabel(Section: ToolMenuSection): String
        fun AddEntryObject(Section: ToolMenuSection = definedExternally, InObject: ToolMenuEntryScript = definedExternally): `T$544`
        fun AddEntry(Section: ToolMenuSection = definedExternally, Args: ToolMenuEntry = definedExternally): `T$544`
        fun C(Other: UObject): ToolMenuSectionExtensions
        fun C(Other: Any): ToolMenuSectionExtensions
    }
}

external open class PropertyConfigFileDisplayRow : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ConfigFileName: String
    open var ExternalProperty: Any
    open var bIsFileWritable: Boolean

    companion object {
        fun Load(ResourceName: String): PropertyConfigFileDisplayRow
        fun Find(Outer: UObject, ResourceName: String): PropertyConfigFileDisplayRow
        fun GetDefaultObject(): PropertyConfigFileDisplayRow
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PropertyConfigFileDisplayRow
        fun C(Other: UObject): PropertyConfigFileDisplayRow
        fun C(Other: Any): PropertyConfigFileDisplayRow
    }
}

external open class ConfigHierarchyPropertyView : UObject {
    constructor()
    constructor(Outer: UObject)
    open var EditProperty: Any
    open var ConfigFilePropertyObjects: Array<PropertyConfigFileDisplayRow>

    companion object {
        fun Load(ResourceName: String): ConfigHierarchyPropertyView
        fun Find(Outer: UObject, ResourceName: String): ConfigHierarchyPropertyView
        fun GetDefaultObject(): ConfigHierarchyPropertyView
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ConfigHierarchyPropertyView
        fun C(Other: UObject): ConfigHierarchyPropertyView
        fun C(Other: Any): ConfigHierarchyPropertyView
    }
}

external object EInterchangeNodeContainerType {
    var NodeContainerType_None: String /* "NodeContainerType_None" */
    var NodeContainerType_TranslatedScene: String /* "NodeContainerType_TranslatedScene" */
    var NodeContainerType_TranslatedAsset: String /* "NodeContainerType_TranslatedAsset" */
    var NodeContainerType_FactoryData: String /* "NodeContainerType_FactoryData" */
    var NodeContainerType_MAX: String /* "NodeContainerType_MAX" */
}

external interface `T$545` {
    var OutTargetAssets: Array<String>
}

external interface `T$546` {
    var OutDependency: String
}

external interface `T$547` {
    var OutDependencies: Array<String>
}

external interface `T$548` {
    var OutValue: Boolean
    var `$`: Boolean
}

external open class InterchangeBaseNode : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ReferenceObject: SoftObjectPath
    open fun SetParentUid(ParentUid: String): Boolean
    open fun SetEnabled(bIsEnabled: Boolean): Boolean
    open fun SetDisplayLabel(DisplayName: String): Boolean
    open fun SetAssetName(AssetName: String): Boolean
    open fun RemoveTargetNodeUid(AssetUid: String): Boolean
    open fun RemoveFactoryDependencyUid(DependencyUid: String): Boolean
    open fun RemoveAttribute(NodeAttributeKey: String): Boolean
    open fun IsEnabled(): Boolean
    open fun InitializeNode(UniqueId: String, DisplayLabel: String, NodeContainerType: String /* "NodeContainerType_None" | "NodeContainerType_TranslatedScene" | "NodeContainerType_TranslatedAsset" | "NodeContainerType_FactoryData" | "NodeContainerType_MAX" */)
    open fun GetTargetNodeUids(OutTargetAssets: Array<String> = definedExternally): `T$545`
    open fun GetTargetNodeCount(): Number
    open fun GetStringAttribute(NodeAttributeKey: String, OutValue: String = definedExternally): `T$187`
    open fun GetParentUid(): String
    open fun GetNodeContainerType(): String /* "NodeContainerType_None" | "NodeContainerType_TranslatedScene" | "NodeContainerType_TranslatedAsset" | "NodeContainerType_FactoryData" | "NodeContainerType_MAX" */
    open fun GetInt32Attribute(NodeAttributeKey: String, OutValue: Number = definedExternally): `T$189`
    open fun GetFloatAttribute(NodeAttributeKey: String, OutValue: Number = definedExternally): `T$189`
    open fun GetFactoryDependency(index: Number, OutDependency: String = definedExternally): `T$546`
    open fun GetFactoryDependenciesCount(): Number
    open fun GetFactoryDependencies(OutDependencies: Array<String> = definedExternally): `T$547`
    open fun GetDisplayLabel(): String
    open fun GetBooleanAttribute(NodeAttributeKey: String, OutValue: Boolean = definedExternally): `T$548`
    open fun GetAssetName(): String
    open fun AddTargetNodeUid(AssetUid: String): Boolean
    open fun AddStringAttribute(NodeAttributeKey: String, Value: String): Boolean
    open fun AddInt32Attribute(NodeAttributeKey: String, Value: Number): Boolean
    open fun AddFloatAttribute(NodeAttributeKey: String, Value: Number): Boolean
    open fun AddFactoryDependencyUid(DependencyUid: String): Boolean
    open fun AddBooleanAttribute(NodeAttributeKey: String, Value: Boolean): Boolean

    companion object {
        fun Load(ResourceName: String): InterchangeBaseNode
        fun Find(Outer: UObject, ResourceName: String): InterchangeBaseNode
        fun GetDefaultObject(): InterchangeBaseNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterchangeBaseNode
        fun C(Other: UObject): InterchangeBaseNode
        fun C(Other: Any): InterchangeBaseNode
    }
}

external interface `T$549` {
    var RootNodes: Array<String>
}

external interface `T$550` {
    var OutNodes: Array<String>
}

external open class InterchangeBaseNodeContainer : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Nodes: Any
    open fun SetNodeParentUid(NodeUniqueID: String, NewParentNodeUid: String): Boolean
    open fun SaveToFile(Filename: String)
    open fun LoadFromFile(Filename: String)
    open fun IsNodeUidValid(NodeUniqueID: String): Boolean
    open fun GetRoots(RootNodes: Array<String> = definedExternally): `T$549`
    open fun GetNodes(ClassNode: UnrealEngineClass, OutNodes: Array<String> = definedExternally): `T$550`
    open fun GetNodeChildrenUids(NodeUniqueID: String): Array<String>
    open fun GetNodeChildrenCount(NodeUniqueID: String): Number
    open fun GetNodeChildren(NodeUniqueID: String, ChildIndex: Number): InterchangeBaseNode
    open fun GetNode(NodeUniqueID: String): InterchangeBaseNode
    open fun AddNode(UNode: InterchangeBaseNode): String

    companion object {
        fun Load(ResourceName: String): InterchangeBaseNodeContainer
        fun Find(Outer: UObject, ResourceName: String): InterchangeBaseNodeContainer
        fun GetDefaultObject(): InterchangeBaseNodeContainer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterchangeBaseNodeContainer
        fun C(Other: UObject): InterchangeBaseNodeContainer
        fun C(Other: Any): InterchangeBaseNodeContainer
    }
}

external open class InterchangeResult : UObject {
    constructor()
    constructor(Outer: UObject)
    open var SourceAssetName: String
    open var DestinationAssetName: String
    open var AssetType: UnrealEngineClass
    open var InterchangeKey: String

    companion object {
        fun Load(ResourceName: String): InterchangeResult
        fun Find(Outer: UObject, ResourceName: String): InterchangeResult
        fun GetDefaultObject(): InterchangeResult
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterchangeResult
        fun C(Other: UObject): InterchangeResult
        fun C(Other: Any): InterchangeResult
    }
}

external open class InterchangeResultsContainer : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Results: Array<InterchangeResult>

    companion object {
        fun Load(ResourceName: String): InterchangeResultsContainer
        fun Find(Outer: UObject, ResourceName: String): InterchangeResultsContainer
        fun GetDefaultObject(): InterchangeResultsContainer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterchangeResultsContainer
        fun C(Other: UObject): InterchangeResultsContainer
        fun C(Other: Any): InterchangeResultsContainer
    }
}

external open class InterchangeFactoryBase : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Results: InterchangeResultsContainer
    open fun GetFactoryClass(): UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): InterchangeFactoryBase
        fun Find(Outer: UObject, ResourceName: String): InterchangeFactoryBase
        fun GetDefaultObject(): InterchangeFactoryBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterchangeFactoryBase
        fun C(Other: UObject): InterchangeFactoryBase
        fun C(Other: Any): InterchangeFactoryBase
    }
}

external open class InterchangeSourceData : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Filename: String
    open fun SetFilename(InFilename: String): Boolean
    open fun GetFilename(): String

    companion object {
        fun Load(ResourceName: String): InterchangeSourceData
        fun Find(Outer: UObject, ResourceName: String): InterchangeSourceData
        fun GetDefaultObject(): InterchangeSourceData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterchangeSourceData
        fun C(Other: UObject): InterchangeSourceData
        fun C(Other: Any): InterchangeSourceData
    }
}

external object EInterchangePipelineTask {
    var PreFactoryImport: String /* "PreFactoryImport" */
    var PostFactoryImport: String /* "PostFactoryImport" */
    var Export: String /* "Export" */
    var EInterchangePipelineTask_MAX: String /* "EInterchangePipelineTask_MAX" */
}

external open class InterchangePipelineBase : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Results: InterchangeResultsContainer
    open fun ScriptedExecutePreImportPipeline(BaseNodeContainer: InterchangeBaseNodeContainer, SourceDatas: Array<InterchangeSourceData>): Boolean
    open fun ScriptedExecutePostImportPipeline(BaseNodeContainer: InterchangeBaseNodeContainer, NodeKey: String, CreatedAsset: UObject, bIsAReimport: Boolean): Boolean
    open fun ScriptedExecuteExportPipeline(BaseNodeContainer: InterchangeBaseNodeContainer): Boolean
    open fun ScriptedCanExecuteOnAnyThread(PipelineTask: String /* "PreFactoryImport" | "PostFactoryImport" | "Export" | "EInterchangePipelineTask_MAX" */): Boolean

    companion object {
        fun Load(ResourceName: String): InterchangePipelineBase
        fun Find(Outer: UObject, ResourceName: String): InterchangePipelineBase
        fun GetDefaultObject(): InterchangePipelineBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterchangePipelineBase
        fun C(Other: UObject): InterchangePipelineBase
        fun C(Other: Any): InterchangePipelineBase
    }
}

external open class InterchangeResultSuccess : InterchangeResult {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InterchangeResultSuccess
        fun Find(Outer: UObject, ResourceName: String): InterchangeResultSuccess
        fun GetDefaultObject(): InterchangeResultSuccess
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterchangeResultSuccess
        fun C(Other: UObject): InterchangeResultSuccess
        fun C(Other: Any): InterchangeResultSuccess
    }
}

external open class InterchangeResultWarning : InterchangeResult {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InterchangeResultWarning
        fun Find(Outer: UObject, ResourceName: String): InterchangeResultWarning
        fun GetDefaultObject(): InterchangeResultWarning
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterchangeResultWarning
        fun C(Other: UObject): InterchangeResultWarning
        fun C(Other: Any): InterchangeResultWarning
    }
}

external open class InterchangeResultError : InterchangeResult {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InterchangeResultError
        fun Find(Outer: UObject, ResourceName: String): InterchangeResultError
        fun GetDefaultObject(): InterchangeResultError
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterchangeResultError
        fun C(Other: UObject): InterchangeResultError
        fun C(Other: Any): InterchangeResultError
    }
}

external open class InterchangeResultWarning_Generic : InterchangeResultWarning {
    constructor()
    constructor(Outer: UObject)
    open var text: String

    companion object {
        fun Load(ResourceName: String): InterchangeResultWarning_Generic
        fun Find(Outer: UObject, ResourceName: String): InterchangeResultWarning_Generic
        fun GetDefaultObject(): InterchangeResultWarning_Generic
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterchangeResultWarning_Generic
        fun C(Other: UObject): InterchangeResultWarning_Generic
        fun C(Other: Any): InterchangeResultWarning_Generic
    }
}

external open class InterchangeResultError_Generic : InterchangeResultError {
    constructor()
    constructor(Outer: UObject)
    open var text: String

    companion object {
        fun Load(ResourceName: String): InterchangeResultError_Generic
        fun Find(Outer: UObject, ResourceName: String): InterchangeResultError_Generic
        fun GetDefaultObject(): InterchangeResultError_Generic
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterchangeResultError_Generic
        fun C(Other: UObject): InterchangeResultError_Generic
        fun C(Other: Any): InterchangeResultError_Generic
    }
}

external open class InterchangeTranslatorBase : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Results: InterchangeResultsContainer
    open var SourceData: InterchangeSourceData

    companion object {
        fun Load(ResourceName: String): InterchangeTranslatorBase
        fun Find(Outer: UObject, ResourceName: String): InterchangeTranslatorBase
        fun GetDefaultObject(): InterchangeTranslatorBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterchangeTranslatorBase
        fun C(Other: UObject): InterchangeTranslatorBase
        fun C(Other: Any): InterchangeTranslatorBase
    }
}

external open class InterchangeWriterBase : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InterchangeWriterBase
        fun Find(Outer: UObject, ResourceName: String): InterchangeWriterBase
        fun GetDefaultObject(): InterchangeWriterBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterchangeWriterBase
        fun C(Other: UObject): InterchangeWriterBase
        fun C(Other: Any): InterchangeWriterBase
    }
}

external open class LiveLinkRole : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LiveLinkRole
        fun Find(Outer: UObject, ResourceName: String): LiveLinkRole
        fun GetDefaultObject(): LiveLinkRole
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkRole
        fun C(Other: UObject): LiveLinkRole
        fun C(Other: Any): LiveLinkRole
    }
}

external open class LiveLinkBasicRole : LiveLinkRole {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LiveLinkBasicRole
        fun Find(Outer: UObject, ResourceName: String): LiveLinkBasicRole
        fun GetDefaultObject(): LiveLinkBasicRole
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkBasicRole
        fun C(Other: UObject): LiveLinkBasicRole
        fun C(Other: Any): LiveLinkBasicRole
    }
}

external open class LiveLinkAnimationRole : LiveLinkBasicRole {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LiveLinkAnimationRole
        fun Find(Outer: UObject, ResourceName: String): LiveLinkAnimationRole
        fun GetDefaultObject(): LiveLinkAnimationRole
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkAnimationRole
        fun C(Other: UObject): LiveLinkAnimationRole
        fun C(Other: Any): LiveLinkAnimationRole
    }
}

external open class LiveLinkTransformRole : LiveLinkBasicRole {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LiveLinkTransformRole
        fun Find(Outer: UObject, ResourceName: String): LiveLinkTransformRole
        fun GetDefaultObject(): LiveLinkTransformRole
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkTransformRole
        fun C(Other: UObject): LiveLinkTransformRole
        fun C(Other: Any): LiveLinkTransformRole
    }
}

external open class LiveLinkCameraRole : LiveLinkTransformRole {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LiveLinkCameraRole
        fun Find(Outer: UObject, ResourceName: String): LiveLinkCameraRole
        fun GetDefaultObject(): LiveLinkCameraRole
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkCameraRole
        fun C(Other: UObject): LiveLinkCameraRole
        fun C(Other: Any): LiveLinkCameraRole
    }
}

external open class LiveLinkController : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LiveLinkController
        fun Find(Outer: UObject, ResourceName: String): LiveLinkController
        fun GetDefaultObject(): LiveLinkController
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkController
        fun C(Other: UObject): LiveLinkController
        fun C(Other: Any): LiveLinkController
    }
}

external object ELiveLinkSourceMode {
    var Latest: String /* "Latest" */
    var EngineTime: String /* "EngineTime" */
    var Timecode: String /* "Timecode" */
    var ELiveLinkSourceMode_MAX: String /* "ELiveLinkSourceMode_MAX" */
}

external open class LiveLinkSourceBufferManagementSettings {
    open var bValidEngineTimeEnabled: Boolean
    open var ValidEngineTime: Number
    open var EngineTimeOffset: Number
    open var EngineTimeClockOffset: Any
    open var SmoothEngineTimeOffset: Any
    open var TimecodeFrameRate: FrameRate
    open var bGenerateSubFrame: Boolean
    open var DetectedFrameRate: FrameRate
    open var bUseTimecodeSmoothLatest: Boolean
    open var SourceTimecodeFrameRate: FrameRate
    open var bValidTimecodeFrameEnabled: Boolean
    open var ValidTimecodeFrame: Number
    open var TimecodeFrameOffset: Number
    open var TimecodeClockOffset: Any
    open var LatestOffset: Number
    open var MaxNumberOfFrameToBuffered: Number
    open var bKeepAtLeastOneFrame: Boolean
    open fun clone(): LiveLinkSourceBufferManagementSettings

    companion object {
        fun C(Other: UObject): LiveLinkSourceBufferManagementSettings
        fun C(Other: Any): LiveLinkSourceBufferManagementSettings
    }
}

external open class LiveLinkSourceFactory : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LiveLinkSourceFactory
        fun Find(Outer: UObject, ResourceName: String): LiveLinkSourceFactory
        fun GetDefaultObject(): LiveLinkSourceFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkSourceFactory
        fun C(Other: UObject): LiveLinkSourceFactory
        fun C(Other: Any): LiveLinkSourceFactory
    }
}

external open class LiveLinkSubjectName {
    open var Name: String
    open fun clone(): LiveLinkSubjectName

    companion object {
        fun C(Other: UObject): LiveLinkSubjectName
        fun C(Other: Any): LiveLinkSubjectName
    }
}

external open class LiveLinkSourceDebugInfo {
    open var SubjectName: LiveLinkSubjectName
    open var SnapshotIndex: Number
    open var NumberOfBufferAtSnapshot: Number
    open fun clone(): LiveLinkSourceDebugInfo

    companion object {
        fun C(Other: UObject): LiveLinkSourceDebugInfo
        fun C(Other: Any): LiveLinkSourceDebugInfo
    }
}

external open class LiveLinkSourceSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Mode: String /* "Latest" | "EngineTime" | "Timecode" | "ELiveLinkSourceMode_MAX" */
    open var BufferSettings: LiveLinkSourceBufferManagementSettings
    open var ConnectionString: String
    open var Factory: UnrealEngineClass
    open var SourceDebugInfos: Array<LiveLinkSourceDebugInfo>

    companion object {
        fun Load(ResourceName: String): LiveLinkSourceSettings
        fun Find(Outer: UObject, ResourceName: String): LiveLinkSourceSettings
        fun GetDefaultObject(): LiveLinkSourceSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkSourceSettings
        fun C(Other: UObject): LiveLinkSourceSettings
        fun C(Other: Any): LiveLinkSourceSettings
    }
}

external open class LiveLinkCurveConversionSettings {
    open var CurveConversionAssetMap: Any
    open fun clone(): LiveLinkCurveConversionSettings

    companion object {
        fun C(Other: UObject): LiveLinkCurveConversionSettings
        fun C(Other: Any): LiveLinkCurveConversionSettings
    }
}

external open class LiveLinkCurveRemapSettings : LiveLinkSourceSettings {
    constructor()
    constructor(Outer: UObject)
    open var CurveConversionSettings: LiveLinkCurveConversionSettings

    companion object {
        fun Load(ResourceName: String): LiveLinkCurveRemapSettings
        fun Find(Outer: UObject, ResourceName: String): LiveLinkCurveRemapSettings
        fun GetDefaultObject(): LiveLinkCurveRemapSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkCurveRemapSettings
        fun C(Other: UObject): LiveLinkCurveRemapSettings
        fun C(Other: Any): LiveLinkCurveRemapSettings
    }
}

external open class LiveLinkFrameInterpolationProcessor : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LiveLinkFrameInterpolationProcessor
        fun Find(Outer: UObject, ResourceName: String): LiveLinkFrameInterpolationProcessor
        fun GetDefaultObject(): LiveLinkFrameInterpolationProcessor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkFrameInterpolationProcessor
        fun C(Other: UObject): LiveLinkFrameInterpolationProcessor
        fun C(Other: Any): LiveLinkFrameInterpolationProcessor
    }
}

external open class LiveLinkFramePreProcessor : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LiveLinkFramePreProcessor
        fun Find(Outer: UObject, ResourceName: String): LiveLinkFramePreProcessor
        fun GetDefaultObject(): LiveLinkFramePreProcessor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkFramePreProcessor
        fun C(Other: UObject): LiveLinkFramePreProcessor
        fun C(Other: Any): LiveLinkFramePreProcessor
    }
}

external open class LiveLinkFrameTranslator : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LiveLinkFrameTranslator
        fun Find(Outer: UObject, ResourceName: String): LiveLinkFrameTranslator
        fun GetDefaultObject(): LiveLinkFrameTranslator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkFrameTranslator
        fun C(Other: UObject): LiveLinkFrameTranslator
        fun C(Other: Any): LiveLinkFrameTranslator
    }
}

external open class LiveLinkLightRole : LiveLinkTransformRole {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LiveLinkLightRole
        fun Find(Outer: UObject, ResourceName: String): LiveLinkLightRole
        fun GetDefaultObject(): LiveLinkLightRole
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkLightRole
        fun C(Other: UObject): LiveLinkLightRole
        fun C(Other: Any): LiveLinkLightRole
    }
}

external open class LiveLinkSubjectSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var PreProcessors: Array<LiveLinkFramePreProcessor>
    open var InterpolationProcessor: LiveLinkFrameInterpolationProcessor
    open var Translators: Array<LiveLinkFrameTranslator>
    open var Role: UnrealEngineClass
    open var FrameRate: FrameRate
    open var bRebroadcastSubject: Boolean

    companion object {
        fun Load(ResourceName: String): LiveLinkSubjectSettings
        fun Find(Outer: UObject, ResourceName: String): LiveLinkSubjectSettings
        fun GetDefaultObject(): LiveLinkSubjectSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkSubjectSettings
        fun C(Other: UObject): LiveLinkSubjectSettings
        fun C(Other: Any): LiveLinkSubjectSettings
    }
}

external open class LiveLinkVirtualSubject : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Role: UnrealEngineClass
    open var Subjects: Array<LiveLinkSubjectName>
    open var FrameTranslators: Array<LiveLinkFrameTranslator>
    open var bRebroadcastSubject: Boolean

    companion object {
        fun Load(ResourceName: String): LiveLinkVirtualSubject
        fun Find(Outer: UObject, ResourceName: String): LiveLinkVirtualSubject
        fun GetDefaultObject(): LiveLinkVirtualSubject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkVirtualSubject
        fun C(Other: UObject): LiveLinkVirtualSubject
        fun C(Other: Any): LiveLinkVirtualSubject
    }
}

external object EPIEPreviewDeviceType {
    var Unset: String /* "Unset" */
    var Android: String /* "Android" */
    var IOS: String /* "IOS" */
    var TVOS: String /* "TVOS" */
    var Switch: String /* "Switch" */
    var MAX: String /* "MAX" */
}

external open class PIEPreviewDeviceSpecification : UObject {
    constructor()
    constructor(Outer: UObject)
    open var PreviewDeviceType: String /* "Unset" | "Android" | "IOS" | "TVOS" | "Switch" | "MAX" */
    open var GPUFamily: String
    open var GLVersion: String
    open var VulkanVersion: String
    open var AndroidVersion: String
    open var DeviceMake: String
    open var DeviceModel: String
    open var DeviceBuildNumber: String
    open var UsingHoudini: Boolean
    open var Hardware: String
    open var Chipset: String

    companion object {
        fun Load(ResourceName: String): PIEPreviewDeviceSpecification
        fun Find(Outer: UObject, ResourceName: String): PIEPreviewDeviceSpecification
        fun GetDefaultObject(): PIEPreviewDeviceSpecification
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PIEPreviewDeviceSpecification
        fun C(Other: UObject): PIEPreviewDeviceSpecification
        fun C(Other: Any): PIEPreviewDeviceSpecification
    }
}

external open class InputBehavior : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InputBehavior
        fun Find(Outer: UObject, ResourceName: String): InputBehavior
        fun GetDefaultObject(): InputBehavior
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InputBehavior
        fun C(Other: UObject): InputBehavior
        fun C(Other: Any): InputBehavior
    }
}

external open class AnyButtonInputBehavior : InputBehavior {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnyButtonInputBehavior
        fun Find(Outer: UObject, ResourceName: String): AnyButtonInputBehavior
        fun GetDefaultObject(): AnyButtonInputBehavior
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnyButtonInputBehavior
        fun C(Other: UObject): AnyButtonInputBehavior
        fun C(Other: Any): AnyButtonInputBehavior
    }
}

external open class AssetBackedTarget : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AssetBackedTarget
        fun Find(Outer: UObject, ResourceName: String): AssetBackedTarget
        fun GetDefaultObject(): AssetBackedTarget
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AssetBackedTarget
        fun C(Other: UObject): AssetBackedTarget
        fun C(Other: Any): AssetBackedTarget
    }
}

external open class InteractiveGizmoBuilder : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InteractiveGizmoBuilder
        fun Find(Outer: UObject, ResourceName: String): InteractiveGizmoBuilder
        fun GetDefaultObject(): InteractiveGizmoBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InteractiveGizmoBuilder
        fun C(Other: UObject): InteractiveGizmoBuilder
        fun C(Other: Any): InteractiveGizmoBuilder
    }
}

external open class AxisAngleGizmoBuilder : InteractiveGizmoBuilder {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AxisAngleGizmoBuilder
        fun Find(Outer: UObject, ResourceName: String): AxisAngleGizmoBuilder
        fun GetDefaultObject(): AxisAngleGizmoBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AxisAngleGizmoBuilder
        fun C(Other: UObject): AxisAngleGizmoBuilder
        fun C(Other: Any): AxisAngleGizmoBuilder
    }
}

external open class BehaviorInfo {
    open var Behavior: InputBehavior
    open fun clone(): BehaviorInfo

    companion object {
        fun C(Other: UObject): BehaviorInfo
        fun C(Other: Any): BehaviorInfo
    }
}

external open class InputBehaviorSet : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Behaviors: Array<BehaviorInfo>

    companion object {
        fun Load(ResourceName: String): InputBehaviorSet
        fun Find(Outer: UObject, ResourceName: String): InputBehaviorSet
        fun GetDefaultObject(): InputBehaviorSet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InputBehaviorSet
        fun C(Other: UObject): InputBehaviorSet
        fun C(Other: Any): InputBehaviorSet
    }
}

external open class InteractiveGizmo : UObject {
    constructor()
    constructor(Outer: UObject)
    open var InputBehaviors: InputBehaviorSet

    companion object {
        fun Load(ResourceName: String): InteractiveGizmo
        fun Find(Outer: UObject, ResourceName: String): InteractiveGizmo
        fun GetDefaultObject(): InteractiveGizmo
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InteractiveGizmo
        fun C(Other: UObject): InteractiveGizmo
        fun C(Other: Any): InteractiveGizmo
    }
}

external open class ClickDragInputBehavior : AnyButtonInputBehavior {
    constructor()
    constructor(Outer: UObject)
    open var bUpdateModifiersDuringDrag: Boolean

    companion object {
        fun Load(ResourceName: String): ClickDragInputBehavior
        fun Find(Outer: UObject, ResourceName: String): ClickDragInputBehavior
        fun GetDefaultObject(): ClickDragInputBehavior
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClickDragInputBehavior
        fun C(Other: UObject): ClickDragInputBehavior
        fun C(Other: Any): ClickDragInputBehavior
    }
}

external open class AxisAngleGizmo : InteractiveGizmo {
    constructor()
    constructor(Outer: UObject)
    open var AxisSource: Any
    open var AngleSource: Any
    open var HitTarget: Any
    open var StateTarget: Any
    open var MouseBehavior: ClickDragInputBehavior
    open var bInInteraction: Boolean
    open var RotationOrigin: Vector
    open var RotationAxis: Vector
    open var RotationPlaneX: Vector
    open var RotationPlaneY: Vector
    open var InteractionStartPoint: Vector
    open var InteractionCurPoint: Vector
    open var InteractionStartAngle: Number
    open var InteractionCurAngle: Number

    companion object {
        fun Load(ResourceName: String): AxisAngleGizmo
        fun Find(Outer: UObject, ResourceName: String): AxisAngleGizmo
        fun GetDefaultObject(): AxisAngleGizmo
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AxisAngleGizmo
        fun C(Other: UObject): AxisAngleGizmo
        fun C(Other: Any): AxisAngleGizmo
    }
}

external open class AxisPositionGizmoBuilder : InteractiveGizmoBuilder {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AxisPositionGizmoBuilder
        fun Find(Outer: UObject, ResourceName: String): AxisPositionGizmoBuilder
        fun GetDefaultObject(): AxisPositionGizmoBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AxisPositionGizmoBuilder
        fun C(Other: UObject): AxisPositionGizmoBuilder
        fun C(Other: Any): AxisPositionGizmoBuilder
    }
}

external open class GizmoViewContext : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GizmoViewContext
        fun Find(Outer: UObject, ResourceName: String): GizmoViewContext
        fun GetDefaultObject(): GizmoViewContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoViewContext
        fun C(Other: UObject): GizmoViewContext
        fun C(Other: Any): GizmoViewContext
    }
}

external open class AxisPositionGizmo : InteractiveGizmo {
    constructor()
    constructor(Outer: UObject)
    open var AxisSource: Any
    open var ParameterSource: Any
    open var GizmoViewContext: GizmoViewContext
    open var HitTarget: Any
    open var StateTarget: Any
    open var MouseBehavior: ClickDragInputBehavior
    open var bEnableSignedAxis: Boolean
    open var bInInteraction: Boolean
    open var InteractionOrigin: Vector
    open var InteractionAxis: Vector
    open var InteractionStartPoint: Vector
    open var InteractionCurPoint: Vector
    open var InteractionStartParameter: Number
    open var InteractionCurParameter: Number
    open var ParameterSign: Number

    companion object {
        fun Load(ResourceName: String): AxisPositionGizmo
        fun Find(Outer: UObject, ResourceName: String): AxisPositionGizmo
        fun GetDefaultObject(): AxisPositionGizmo
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AxisPositionGizmo
        fun C(Other: UObject): AxisPositionGizmo
        fun C(Other: Any): AxisPositionGizmo
    }
}

external open class GizmoConstantAxisSource : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Origin: Vector
    open var Direction: Vector

    companion object {
        fun Load(ResourceName: String): GizmoConstantAxisSource
        fun Find(Outer: UObject, ResourceName: String): GizmoConstantAxisSource
        fun GetDefaultObject(): GizmoConstantAxisSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoConstantAxisSource
        fun C(Other: UObject): GizmoConstantAxisSource
        fun C(Other: Any): GizmoConstantAxisSource
    }
}

external open class GizmoConstantFrameAxisSource : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Origin: Vector
    open var Direction: Vector
    open var TangentX: Vector
    open var TangentY: Vector

    companion object {
        fun Load(ResourceName: String): GizmoConstantFrameAxisSource
        fun Find(Outer: UObject, ResourceName: String): GizmoConstantFrameAxisSource
        fun GetDefaultObject(): GizmoConstantFrameAxisSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoConstantFrameAxisSource
        fun C(Other: UObject): GizmoConstantFrameAxisSource
        fun C(Other: Any): GizmoConstantFrameAxisSource
    }
}

external open class GizmoWorldAxisSource : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Origin: Vector
    open var AxisIndex: Number

    companion object {
        fun Load(ResourceName: String): GizmoWorldAxisSource
        fun Find(Outer: UObject, ResourceName: String): GizmoWorldAxisSource
        fun GetDefaultObject(): GizmoWorldAxisSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoWorldAxisSource
        fun C(Other: UObject): GizmoWorldAxisSource
        fun C(Other: Any): GizmoWorldAxisSource
    }
}

external open class GizmoComponentAxisSource : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Component: SceneComponent
    open var AxisIndex: Number
    open var bLocalAxes: Boolean

    companion object {
        fun Load(ResourceName: String): GizmoComponentAxisSource
        fun Find(Outer: UObject, ResourceName: String): GizmoComponentAxisSource
        fun GetDefaultObject(): GizmoComponentAxisSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoComponentAxisSource
        fun C(Other: UObject): GizmoComponentAxisSource
        fun C(Other: Any): GizmoComponentAxisSource
    }
}

external open class InteractiveToolPropertySet : UObject {
    constructor()
    constructor(Outer: UObject)
    open var CachedPropertiesMap: Any
    open var bIsPropertySetEnabled: Boolean

    companion object {
        fun Load(ResourceName: String): InteractiveToolPropertySet
        fun Find(Outer: UObject, ResourceName: String): InteractiveToolPropertySet
        fun GetDefaultObject(): InteractiveToolPropertySet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InteractiveToolPropertySet
        fun C(Other: UObject): InteractiveToolPropertySet
        fun C(Other: Any): InteractiveToolPropertySet
    }
}

external open class BrushBaseProperties : InteractiveToolPropertySet {
    constructor()
    constructor(Outer: UObject)
    open var BrushSize: Number
    open var bSpecifyRadius: Boolean
    open var BrushRadius: Number
    open var BrushStrength: Number
    open var BrushFalloffAmount: Number
    open var bShowStrength: Boolean
    open var bShowFalloff: Boolean

    companion object {
        fun Load(ResourceName: String): BrushBaseProperties
        fun Find(Outer: UObject, ResourceName: String): BrushBaseProperties
        fun GetDefaultObject(): BrushBaseProperties
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BrushBaseProperties
        fun C(Other: UObject): BrushBaseProperties
        fun C(Other: Any): BrushBaseProperties
    }
}

external open class InteractiveTool : UObject {
    constructor()
    constructor(Outer: UObject)
    open var InputBehaviors: InputBehaviorSet
    open var ToolPropertyObjects: Array<UObject>

    companion object {
        fun Load(ResourceName: String): InteractiveTool
        fun Find(Outer: UObject, ResourceName: String): InteractiveTool
        fun GetDefaultObject(): InteractiveTool
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InteractiveTool
        fun C(Other: UObject): InteractiveTool
        fun C(Other: Any): InteractiveTool
    }
}

external open class ToolTarget : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ToolTarget
        fun Find(Outer: UObject, ResourceName: String): ToolTarget
        fun GetDefaultObject(): ToolTarget
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ToolTarget
        fun C(Other: UObject): ToolTarget
        fun C(Other: Any): ToolTarget
    }
}

external open class SingleSelectionTool : InteractiveTool {
    constructor()
    constructor(Outer: UObject)
    open var Target: ToolTarget

    companion object {
        fun Load(ResourceName: String): SingleSelectionTool
        fun Find(Outer: UObject, ResourceName: String): SingleSelectionTool
        fun GetDefaultObject(): SingleSelectionTool
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SingleSelectionTool
        fun C(Other: UObject): SingleSelectionTool
        fun C(Other: Any): SingleSelectionTool
    }
}

external open class MeshSurfacePointTool : SingleSelectionTool {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MeshSurfacePointTool
        fun Find(Outer: UObject, ResourceName: String): MeshSurfacePointTool
        fun GetDefaultObject(): MeshSurfacePointTool
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MeshSurfacePointTool
        fun C(Other: UObject): MeshSurfacePointTool
        fun C(Other: Any): MeshSurfacePointTool
    }
}

external open class BrushStampData {
    open fun clone(): BrushStampData

    companion object {
        fun C(Other: UObject): BrushStampData
        fun C(Other: Any): BrushStampData
    }
}

external open class BrushStampIndicator : InteractiveGizmo {
    constructor()
    constructor(Outer: UObject)
    open var bVisible: Boolean
    open var BrushRadius: Number
    open var BrushFalloff: Number
    open var BrushPosition: Vector
    open var BrushNormal: Vector
    open var bDrawIndicatorLines: Boolean
    open var bDrawRadiusCircle: Boolean
    open var SampleStepCount: Number
    open var LineColor: LinearColor
    open var LineThickness: Number
    open var bDepthTested: Boolean
    open var bDrawSecondaryLines: Boolean
    open var SecondaryLineThickness: Number
    open var SecondaryLineColor: LinearColor
    open var AttachedComponent: PrimitiveComponent

    companion object {
        fun Load(ResourceName: String): BrushStampIndicator
        fun Find(Outer: UObject, ResourceName: String): BrushStampIndicator
        fun GetDefaultObject(): BrushStampIndicator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BrushStampIndicator
        fun C(Other: UObject): BrushStampIndicator
        fun C(Other: Any): BrushStampIndicator
    }
}

external open class BaseBrushTool : MeshSurfacePointTool {
    constructor()
    constructor(Outer: UObject)
    open var BrushProperties: BrushBaseProperties
    open var bInBrushStroke: Boolean
    open var WorldToLocalScale: Number
    open var LastBrushStamp: BrushStampData
    open var PropertyClass: Class
    open var BrushStampIndicator: BrushStampIndicator

    companion object {
        fun Load(ResourceName: String): BaseBrushTool
        fun Find(Outer: UObject, ResourceName: String): BaseBrushTool
        fun GetDefaultObject(): BaseBrushTool
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BaseBrushTool
        fun C(Other: UObject): BaseBrushTool
        fun C(Other: Any): BaseBrushTool
    }
}

external open class BrushStampIndicatorBuilder : InteractiveGizmoBuilder {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BrushStampIndicatorBuilder
        fun Find(Outer: UObject, ResourceName: String): BrushStampIndicatorBuilder
        fun GetDefaultObject(): BrushStampIndicatorBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BrushStampIndicatorBuilder
        fun C(Other: UObject): BrushStampIndicatorBuilder
        fun C(Other: Any): BrushStampIndicatorBuilder
    }
}

external open class LocalClickDragInputBehavior : ClickDragInputBehavior {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LocalClickDragInputBehavior
        fun Find(Outer: UObject, ResourceName: String): LocalClickDragInputBehavior
        fun GetDefaultObject(): LocalClickDragInputBehavior
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LocalClickDragInputBehavior
        fun C(Other: UObject): LocalClickDragInputBehavior
        fun C(Other: Any): LocalClickDragInputBehavior
    }
}

external open class InteractiveToolBuilder : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InteractiveToolBuilder
        fun Find(Outer: UObject, ResourceName: String): InteractiveToolBuilder
        fun GetDefaultObject(): InteractiveToolBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InteractiveToolBuilder
        fun C(Other: UObject): InteractiveToolBuilder
        fun C(Other: Any): InteractiveToolBuilder
    }
}

external open class ClickDragToolBuilder : InteractiveToolBuilder {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ClickDragToolBuilder
        fun Find(Outer: UObject, ResourceName: String): ClickDragToolBuilder
        fun GetDefaultObject(): ClickDragToolBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClickDragToolBuilder
        fun C(Other: UObject): ClickDragToolBuilder
        fun C(Other: Any): ClickDragToolBuilder
    }
}

external open class ClickDragTool : InteractiveTool {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ClickDragTool
        fun Find(Outer: UObject, ResourceName: String): ClickDragTool
        fun GetDefaultObject(): ClickDragTool
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClickDragTool
        fun C(Other: UObject): ClickDragTool
        fun C(Other: Any): ClickDragTool
    }
}

external open class InternalToolFrameworkActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var bIsSelectableInEditor: Boolean

    companion object {
        fun GetDefaultObject(): InternalToolFrameworkActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InternalToolFrameworkActor
        fun C(Other: UObject): InternalToolFrameworkActor
        fun C(Other: Any): InternalToolFrameworkActor
    }
}

external open class GizmoActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : InternalToolFrameworkActor {
    companion object {
        fun GetDefaultObject(): GizmoActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoActor
        fun C(Other: UObject): GizmoActor
        fun C(Other: Any): GizmoActor
    }
}

external open class CombinedTransformGizmoActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : GizmoActor {
    open var TranslateX: PrimitiveComponent
    open var TranslateY: PrimitiveComponent
    open var TranslateZ: PrimitiveComponent
    open var TranslateYZ: PrimitiveComponent
    open var TranslateXZ: PrimitiveComponent
    open var TranslateXY: PrimitiveComponent
    open var RotateX: PrimitiveComponent
    open var RotateY: PrimitiveComponent
    open var RotateZ: PrimitiveComponent
    open var UniformScale: PrimitiveComponent
    open var AxisScaleX: PrimitiveComponent
    open var AxisScaleY: PrimitiveComponent
    open var AxisScaleZ: PrimitiveComponent
    open var PlaneScaleYZ: PrimitiveComponent
    open var PlaneScaleXZ: PrimitiveComponent
    open var PlaneScaleXY: PrimitiveComponent

    companion object {
        fun GetDefaultObject(): CombinedTransformGizmoActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CombinedTransformGizmoActor
        fun C(Other: UObject): CombinedTransformGizmoActor
        fun C(Other: Any): CombinedTransformGizmoActor
    }
}

external open class CombinedTransformGizmoBuilder : InteractiveGizmoBuilder {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CombinedTransformGizmoBuilder
        fun Find(Outer: UObject, ResourceName: String): CombinedTransformGizmoBuilder
        fun GetDefaultObject(): CombinedTransformGizmoBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CombinedTransformGizmoBuilder
        fun C(Other: UObject): CombinedTransformGizmoBuilder
        fun C(Other: Any): CombinedTransformGizmoBuilder
    }
}

external open class TransformProxy : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bRotatePerObject: Boolean
    open var bSetPivotMode: Boolean
    open var SharedTransform: Transform
    open var InitialSharedTransform: Transform

    companion object {
        fun Load(ResourceName: String): TransformProxy
        fun Find(Outer: UObject, ResourceName: String): TransformProxy
        fun GetDefaultObject(): TransformProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TransformProxy
        fun C(Other: UObject): TransformProxy
        fun C(Other: Any): TransformProxy
    }
}

external object EToolContextCoordinateSystem {
    var World: String /* "World" */
    var Local: String /* "Local" */
    var EToolContextCoordinateSystem_MAX: String /* "EToolContextCoordinateSystem_MAX" */
}

external open class GizmoTransformChangeStateTarget : UObject {
    constructor()
    constructor(Outer: UObject)
    open var TransactionManager: Any

    companion object {
        fun Load(ResourceName: String): GizmoTransformChangeStateTarget
        fun Find(Outer: UObject, ResourceName: String): GizmoTransformChangeStateTarget
        fun GetDefaultObject(): GizmoTransformChangeStateTarget
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoTransformChangeStateTarget
        fun C(Other: UObject): GizmoTransformChangeStateTarget
        fun C(Other: Any): GizmoTransformChangeStateTarget
    }
}

external open class CombinedTransformGizmo : InteractiveGizmo {
    constructor()
    constructor(Outer: UObject)
    open var ActiveTarget: TransformProxy
    open var bSnapToWorldGrid: Boolean
    open var bGridSizeIsExplicit: Boolean
    open var ExplicitGridSize: Vector
    open var bRotationGridSizeIsExplicit: Boolean
    open var ExplicitRotationGridSize: Rotator
    open var bSnapToWorldRotGrid: Boolean
    open var bUseContextCoordinateSystem: Boolean
    open var CurrentCoordinateSystem: String /* "World" | "Local" | "EToolContextCoordinateSystem_MAX" */
    open var ActiveComponents: Array<PrimitiveComponent>
    open var NonuniformScaleComponents: Array<PrimitiveComponent>
    open var ActiveGizmos: Array<InteractiveGizmo>
    open var CameraAxisSource: GizmoConstantFrameAxisSource
    open var AxisXSource: GizmoComponentAxisSource
    open var AxisYSource: GizmoComponentAxisSource
    open var AxisZSource: GizmoComponentAxisSource
    open var UnitAxisXSource: GizmoComponentAxisSource
    open var UnitAxisYSource: GizmoComponentAxisSource
    open var UnitAxisZSource: GizmoComponentAxisSource
    open var StateTarget: GizmoTransformChangeStateTarget

    companion object {
        fun Load(ResourceName: String): CombinedTransformGizmo
        fun Find(Outer: UObject, ResourceName: String): CombinedTransformGizmo
        fun GetDefaultObject(): CombinedTransformGizmo
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CombinedTransformGizmo
        fun C(Other: UObject): CombinedTransformGizmo
        fun C(Other: Any): CombinedTransformGizmo
    }
}

external open class ContextObjectStore : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ContextObjects: Array<UObject>

    companion object {
        fun Load(ResourceName: String): ContextObjectStore
        fun Find(Outer: UObject, ResourceName: String): ContextObjectStore
        fun GetDefaultObject(): ContextObjectStore
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ContextObjectStore
        fun C(Other: UObject): ContextObjectStore
        fun C(Other: Any): ContextObjectStore
    }
}

external open class GizmoBaseComponent : PrimitiveComponent {
    constructor()
    constructor(Outer: UObject)
    open var Color: LinearColor
    open var HoverSizeMultiplier: Number
    open var PixelHitDistanceThreshold: Number
    open var GizmoViewContext: GizmoViewContext
    open fun UpdateWorldLocalState(bWorldIn: Boolean)
    open fun UpdateHoverState(bHoveringIn: Boolean)

    companion object {
        fun Load(ResourceName: String): GizmoBaseComponent
        fun Find(Outer: UObject, ResourceName: String): GizmoBaseComponent
        fun GetDefaultObject(): GizmoBaseComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoBaseComponent
        fun C(Other: UObject): GizmoBaseComponent
        fun C(Other: Any): GizmoBaseComponent
    }
}

external open class GizmoArrowComponent : GizmoBaseComponent {
    constructor()
    constructor(Outer: UObject)
    open var Direction: Vector
    open var Gap: Number
    open var Length: Number
    open var Thickness: Number

    companion object {
        fun Load(ResourceName: String): GizmoArrowComponent
        fun Find(Outer: UObject, ResourceName: String): GizmoArrowComponent
        fun GetDefaultObject(): GizmoArrowComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoArrowComponent
        fun C(Other: UObject): GizmoArrowComponent
        fun C(Other: Any): GizmoArrowComponent
    }
}

external open class GizmoBoxComponent : GizmoBaseComponent {
    constructor()
    constructor(Outer: UObject)
    open var Origin: Vector
    open var Rotation: Quat
    open var Dimensions: Vector
    open var LineThickness: Number
    open var bRemoveHiddenLines: Boolean
    open var bEnableAxisFlip: Boolean

    companion object {
        fun Load(ResourceName: String): GizmoBoxComponent
        fun Find(Outer: UObject, ResourceName: String): GizmoBoxComponent
        fun GetDefaultObject(): GizmoBoxComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoBoxComponent
        fun C(Other: UObject): GizmoBoxComponent
        fun C(Other: Any): GizmoBoxComponent
    }
}

external open class GizmoCircleComponent : GizmoBaseComponent {
    constructor()
    constructor(Outer: UObject)
    open var Normal: Vector
    open var Radius: Number
    open var Thickness: Number
    open var NumSides: Number
    open var bViewAligned: Boolean
    open var bDrawFullCircle: Boolean
    open var bOnlyAllowFrontFacingHits: Boolean

    companion object {
        fun Load(ResourceName: String): GizmoCircleComponent
        fun Find(Outer: UObject, ResourceName: String): GizmoCircleComponent
        fun GetDefaultObject(): GizmoCircleComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoCircleComponent
        fun C(Other: UObject): GizmoCircleComponent
        fun C(Other: Any): GizmoCircleComponent
    }
}

external open class GizmoTransformSource : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun SetTransform(NewTransform: Transform)
    open fun GetTransform(): Transform

    companion object {
        fun Load(ResourceName: String): GizmoTransformSource
        fun Find(Outer: UObject, ResourceName: String): GizmoTransformSource
        fun GetDefaultObject(): GizmoTransformSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoTransformSource
        fun C(Other: UObject): GizmoTransformSource
        fun C(Other: Any): GizmoTransformSource
    }
}

external interface `T$551` {
    var TangentXOut: Vector
    var TangentYOut: Vector
}

external open class GizmoAxisSource : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun HasTangentVectors(): Boolean
    open fun GetTangentVectors(TangentXOut: Vector = definedExternally, TangentYOut: Vector = definedExternally): `T$551`
    open fun GetOrigin(): Vector
    open fun GetDirection(): Vector

    companion object {
        fun Load(ResourceName: String): GizmoAxisSource
        fun Find(Outer: UObject, ResourceName: String): GizmoAxisSource
        fun GetDefaultObject(): GizmoAxisSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoAxisSource
        fun C(Other: UObject): GizmoAxisSource
        fun C(Other: Any): GizmoAxisSource
    }
}

external open class GizmoClickTarget : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun UpdateInteractingState(bInteracting: Boolean)
    open fun UpdateHoverState(bHovering: Boolean)

    companion object {
        fun Load(ResourceName: String): GizmoClickTarget
        fun Find(Outer: UObject, ResourceName: String): GizmoClickTarget
        fun GetDefaultObject(): GizmoClickTarget
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoClickTarget
        fun C(Other: UObject): GizmoClickTarget
        fun C(Other: Any): GizmoClickTarget
    }
}

external open class GizmoStateTarget : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun EndUpdate()
    open fun BeginUpdate()

    companion object {
        fun Load(ResourceName: String): GizmoStateTarget
        fun Find(Outer: UObject, ResourceName: String): GizmoStateTarget
        fun GetDefaultObject(): GizmoStateTarget
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoStateTarget
        fun C(Other: UObject): GizmoStateTarget
        fun C(Other: Any): GizmoStateTarget
    }
}

external open class GizmoFloatParameterSource : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun SetParameter(NewValue: Number)
    open fun GetParameter(): Number
    open fun EndModify()
    open fun BeginModify()

    companion object {
        fun Load(ResourceName: String): GizmoFloatParameterSource
        fun Find(Outer: UObject, ResourceName: String): GizmoFloatParameterSource
        fun GetDefaultObject(): GizmoFloatParameterSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoFloatParameterSource
        fun C(Other: UObject): GizmoFloatParameterSource
        fun C(Other: Any): GizmoFloatParameterSource
    }
}

external open class GizmoVec2ParameterSource : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun SetParameter(NewValue: Vector2D)
    open fun GetParameter(): Vector2D
    open fun EndModify()
    open fun BeginModify()

    companion object {
        fun Load(ResourceName: String): GizmoVec2ParameterSource
        fun Find(Outer: UObject, ResourceName: String): GizmoVec2ParameterSource
        fun GetDefaultObject(): GizmoVec2ParameterSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoVec2ParameterSource
        fun C(Other: UObject): GizmoVec2ParameterSource
        fun C(Other: Any): GizmoVec2ParameterSource
    }
}

external open class GizmoLineHandleComponent : GizmoBaseComponent {
    constructor()
    constructor(Outer: UObject)
    open var Normal: Vector
    open var HandleSize: Number
    open var Thickness: Number
    open var Direction: Vector
    open var Length: Number
    open var bImageScale: Boolean

    companion object {
        fun Load(ResourceName: String): GizmoLineHandleComponent
        fun Find(Outer: UObject, ResourceName: String): GizmoLineHandleComponent
        fun GetDefaultObject(): GizmoLineHandleComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoLineHandleComponent
        fun C(Other: UObject): GizmoLineHandleComponent
        fun C(Other: Any): GizmoLineHandleComponent
    }
}

external open class GizmoRectangleComponent : GizmoBaseComponent {
    constructor()
    constructor(Outer: UObject)
    open var DirectionX: Vector
    open var DirectionY: Vector
    open var bOrientYAccordingToCamera: Boolean
    open var OffsetX: Number
    open var OffsetY: Number
    open var LengthX: Number
    open var LengthY: Number
    open var Thickness: Number
    open var SegmentFlags: Number

    companion object {
        fun Load(ResourceName: String): GizmoRectangleComponent
        fun Find(Outer: UObject, ResourceName: String): GizmoRectangleComponent
        fun GetDefaultObject(): GizmoRectangleComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoRectangleComponent
        fun C(Other: UObject): GizmoRectangleComponent
        fun C(Other: Any): GizmoRectangleComponent
    }
}

external open class GizmoLambdaHitTarget : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GizmoLambdaHitTarget
        fun Find(Outer: UObject, ResourceName: String): GizmoLambdaHitTarget
        fun GetDefaultObject(): GizmoLambdaHitTarget
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoLambdaHitTarget
        fun C(Other: UObject): GizmoLambdaHitTarget
        fun C(Other: Any): GizmoLambdaHitTarget
    }
}

external open class GizmoComponentHitTarget : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Component: PrimitiveComponent

    companion object {
        fun Load(ResourceName: String): GizmoComponentHitTarget
        fun Find(Outer: UObject, ResourceName: String): GizmoComponentHitTarget
        fun GetDefaultObject(): GizmoComponentHitTarget
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoComponentHitTarget
        fun C(Other: UObject): GizmoComponentHitTarget
        fun C(Other: Any): GizmoComponentHitTarget
    }
}

external open class InputBehaviorSource : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InputBehaviorSource
        fun Find(Outer: UObject, ResourceName: String): InputBehaviorSource
        fun GetDefaultObject(): InputBehaviorSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InputBehaviorSource
        fun C(Other: UObject): InputBehaviorSource
        fun C(Other: Any): InputBehaviorSource
    }
}

external open class LocalInputBehaviorSource : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LocalInputBehaviorSource
        fun Find(Outer: UObject, ResourceName: String): LocalInputBehaviorSource
        fun GetDefaultObject(): LocalInputBehaviorSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LocalInputBehaviorSource
        fun C(Other: UObject): LocalInputBehaviorSource
        fun C(Other: Any): LocalInputBehaviorSource
    }
}

external open class InputRouter : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bAutoInvalidateOnHover: Boolean
    open var bAutoInvalidateOnCapture: Boolean
    open var ActiveInputBehaviors: InputBehaviorSet

    companion object {
        fun Load(ResourceName: String): InputRouter
        fun Find(Outer: UObject, ResourceName: String): InputRouter
        fun GetDefaultObject(): InputRouter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InputRouter
        fun C(Other: UObject): InputRouter
        fun C(Other: Any): InputRouter
    }
}

external open class InteractionMechanic : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InteractionMechanic
        fun Find(Outer: UObject, ResourceName: String): InteractionMechanic
        fun GetDefaultObject(): InteractionMechanic
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InteractionMechanic
        fun C(Other: UObject): InteractionMechanic
        fun C(Other: Any): InteractionMechanic
    }
}

external open class ActiveGizmo {
    open var Gizmo: InteractiveGizmo
    open fun clone(): ActiveGizmo

    companion object {
        fun C(Other: UObject): ActiveGizmo
        fun C(Other: Any): ActiveGizmo
    }
}

external open class InteractiveGizmoManager : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ActiveGizmos: Array<ActiveGizmo>
    open var GizmoBuilders: Any

    companion object {
        fun Load(ResourceName: String): InteractiveGizmoManager
        fun Find(Outer: UObject, ResourceName: String): InteractiveGizmoManager
        fun GetDefaultObject(): InteractiveGizmoManager
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InteractiveGizmoManager
        fun C(Other: UObject): InteractiveGizmoManager
        fun C(Other: Any): InteractiveGizmoManager
    }
}

external open class InteractiveToolWithToolTargetsBuilder : InteractiveToolBuilder {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InteractiveToolWithToolTargetsBuilder
        fun Find(Outer: UObject, ResourceName: String): InteractiveToolWithToolTargetsBuilder
        fun GetDefaultObject(): InteractiveToolWithToolTargetsBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InteractiveToolWithToolTargetsBuilder
        fun C(Other: UObject): InteractiveToolWithToolTargetsBuilder
        fun C(Other: Any): InteractiveToolWithToolTargetsBuilder
    }
}

external open class ToolContextTransactionProvider : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ToolContextTransactionProvider
        fun Find(Outer: UObject, ResourceName: String): ToolContextTransactionProvider
        fun GetDefaultObject(): ToolContextTransactionProvider
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ToolContextTransactionProvider
        fun C(Other: UObject): ToolContextTransactionProvider
        fun C(Other: Any): ToolContextTransactionProvider
    }
}

external open class InteractiveToolManager : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ActiveLeftTool: InteractiveTool
    open var ActiveRightTool: InteractiveTool
    open var ToolBuilders: Any

    companion object {
        fun Load(ResourceName: String): InteractiveToolManager
        fun Find(Outer: UObject, ResourceName: String): InteractiveToolManager
        fun GetDefaultObject(): InteractiveToolManager
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InteractiveToolManager
        fun C(Other: UObject): InteractiveToolManager
        fun C(Other: Any): InteractiveToolManager
    }
}

external open class ToolFrameworkComponent : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ToolFrameworkComponent
        fun Find(Outer: UObject, ResourceName: String): ToolFrameworkComponent
        fun GetDefaultObject(): ToolFrameworkComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ToolFrameworkComponent
        fun C(Other: UObject): ToolFrameworkComponent
        fun C(Other: Any): ToolFrameworkComponent
    }
}

external open class InteractiveToolCameraFocusAPI : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InteractiveToolCameraFocusAPI
        fun Find(Outer: UObject, ResourceName: String): InteractiveToolCameraFocusAPI
        fun GetDefaultObject(): InteractiveToolCameraFocusAPI
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InteractiveToolCameraFocusAPI
        fun C(Other: UObject): InteractiveToolCameraFocusAPI
        fun C(Other: Any): InteractiveToolCameraFocusAPI
    }
}

external open class InteractiveToolNestedAcceptCancelAPI : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InteractiveToolNestedAcceptCancelAPI
        fun Find(Outer: UObject, ResourceName: String): InteractiveToolNestedAcceptCancelAPI
        fun GetDefaultObject(): InteractiveToolNestedAcceptCancelAPI
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InteractiveToolNestedAcceptCancelAPI
        fun C(Other: UObject): InteractiveToolNestedAcceptCancelAPI
        fun C(Other: Any): InteractiveToolNestedAcceptCancelAPI
    }
}

external open class InteractiveToolExclusiveToolAPI : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InteractiveToolExclusiveToolAPI
        fun Find(Outer: UObject, ResourceName: String): InteractiveToolExclusiveToolAPI
        fun GetDefaultObject(): InteractiveToolExclusiveToolAPI
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InteractiveToolExclusiveToolAPI
        fun C(Other: UObject): InteractiveToolExclusiveToolAPI
        fun C(Other: Any): InteractiveToolExclusiveToolAPI
    }
}

external open class ToolTargetFactory : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ToolTargetFactory
        fun Find(Outer: UObject, ResourceName: String): ToolTargetFactory
        fun GetDefaultObject(): ToolTargetFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ToolTargetFactory
        fun C(Other: UObject): ToolTargetFactory
        fun C(Other: Any): ToolTargetFactory
    }
}

external open class ToolTargetManager : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Factories: Array<ToolTargetFactory>

    companion object {
        fun Load(ResourceName: String): ToolTargetManager
        fun Find(Outer: UObject, ResourceName: String): ToolTargetManager
        fun GetDefaultObject(): ToolTargetManager
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ToolTargetManager
        fun C(Other: UObject): ToolTargetManager
        fun C(Other: Any): ToolTargetManager
    }
}

external open class InteractiveToolsContext : UObject {
    constructor()
    constructor(Outer: UObject)
    open var InputRouter: InputRouter
    open var TargetManager: ToolTargetManager
    open var ToolManager: InteractiveToolManager
    open var GizmoManager: InteractiveGizmoManager
    open var ContextObjectStore: ContextObjectStore
    open var ToolManagerClass: Class

    companion object {
        fun Load(ResourceName: String): InteractiveToolsContext
        fun Find(Outer: UObject, ResourceName: String): InteractiveToolsContext
        fun GetDefaultObject(): InteractiveToolsContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InteractiveToolsContext
        fun C(Other: UObject): InteractiveToolsContext
        fun C(Other: Any): InteractiveToolsContext
    }
}

external open class IntervalGizmoActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : GizmoActor {
    open var UpIntervalComponent: GizmoLineHandleComponent
    open var DownIntervalComponent: GizmoLineHandleComponent
    open var ForwardIntervalComponent: GizmoLineHandleComponent

    companion object {
        fun GetDefaultObject(): IntervalGizmoActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): IntervalGizmoActor
        fun C(Other: UObject): IntervalGizmoActor
        fun C(Other: Any): IntervalGizmoActor
    }
}

external open class IntervalGizmoBuilder : InteractiveGizmoBuilder {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): IntervalGizmoBuilder
        fun Find(Outer: UObject, ResourceName: String): IntervalGizmoBuilder
        fun GetDefaultObject(): IntervalGizmoBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): IntervalGizmoBuilder
        fun C(Other: UObject): IntervalGizmoBuilder
        fun C(Other: Any): IntervalGizmoBuilder
    }
}

external open class IntervalGizmo : InteractiveGizmo {
    constructor()
    constructor(Outer: UObject)
    open var StateTarget: GizmoTransformChangeStateTarget
    open var TransformProxy: TransformProxy
    open var ActiveComponents: Array<PrimitiveComponent>
    open var ActiveGizmos: Array<InteractiveGizmo>
    open var AxisYSource: GizmoComponentAxisSource
    open var AxisZSource: GizmoComponentAxisSource

    companion object {
        fun Load(ResourceName: String): IntervalGizmo
        fun Find(Outer: UObject, ResourceName: String): IntervalGizmo
        fun GetDefaultObject(): IntervalGizmo
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): IntervalGizmo
        fun C(Other: UObject): IntervalGizmo
        fun C(Other: Any): IntervalGizmo
    }
}

external open class GizmoBaseFloatParameterSource : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GizmoBaseFloatParameterSource
        fun Find(Outer: UObject, ResourceName: String): GizmoBaseFloatParameterSource
        fun GetDefaultObject(): GizmoBaseFloatParameterSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoBaseFloatParameterSource
        fun C(Other: UObject): GizmoBaseFloatParameterSource
        fun C(Other: Any): GizmoBaseFloatParameterSource
    }
}

external open class GizmoAxisIntervalParameterSource : GizmoBaseFloatParameterSource {
    constructor()
    constructor(Outer: UObject)
    open var FloatParameterSource: Any
    open var MinParameter: Number
    open var MaxParameter: Number

    companion object {
        fun Load(ResourceName: String): GizmoAxisIntervalParameterSource
        fun Find(Outer: UObject, ResourceName: String): GizmoAxisIntervalParameterSource
        fun GetDefaultObject(): GizmoAxisIntervalParameterSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoAxisIntervalParameterSource
        fun C(Other: UObject): GizmoAxisIntervalParameterSource
        fun C(Other: Any): GizmoAxisIntervalParameterSource
    }
}

external open class KeyAsModifierInputBehavior : InputBehavior {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): KeyAsModifierInputBehavior
        fun Find(Outer: UObject, ResourceName: String): KeyAsModifierInputBehavior
        fun GetDefaultObject(): KeyAsModifierInputBehavior
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): KeyAsModifierInputBehavior
        fun C(Other: UObject): KeyAsModifierInputBehavior
        fun C(Other: Any): KeyAsModifierInputBehavior
    }
}

external open class MaterialProvider : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialProvider
        fun Find(Outer: UObject, ResourceName: String): MaterialProvider
        fun GetDefaultObject(): MaterialProvider
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialProvider
        fun C(Other: UObject): MaterialProvider
        fun C(Other: Any): MaterialProvider
    }
}

external open class MeshDescriptionCommitter : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MeshDescriptionCommitter
        fun Find(Outer: UObject, ResourceName: String): MeshDescriptionCommitter
        fun GetDefaultObject(): MeshDescriptionCommitter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MeshDescriptionCommitter
        fun C(Other: UObject): MeshDescriptionCommitter
        fun C(Other: Any): MeshDescriptionCommitter
    }
}

external open class MeshDescriptionProvider : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MeshDescriptionProvider
        fun Find(Outer: UObject, ResourceName: String): MeshDescriptionProvider
        fun GetDefaultObject(): MeshDescriptionProvider
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MeshDescriptionProvider
        fun C(Other: UObject): MeshDescriptionProvider
        fun C(Other: Any): MeshDescriptionProvider
    }
}

external open class MeshSurfacePointToolBuilder : InteractiveToolWithToolTargetsBuilder {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MeshSurfacePointToolBuilder
        fun Find(Outer: UObject, ResourceName: String): MeshSurfacePointToolBuilder
        fun GetDefaultObject(): MeshSurfacePointToolBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MeshSurfacePointToolBuilder
        fun C(Other: UObject): MeshSurfacePointToolBuilder
        fun C(Other: Any): MeshSurfacePointToolBuilder
    }
}

external open class MouseHoverBehavior : InputBehavior {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MouseHoverBehavior
        fun Find(Outer: UObject, ResourceName: String): MouseHoverBehavior
        fun GetDefaultObject(): MouseHoverBehavior
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MouseHoverBehavior
        fun C(Other: UObject): MouseHoverBehavior
        fun C(Other: Any): MouseHoverBehavior
    }
}

external open class LocalMouseHoverBehavior : MouseHoverBehavior {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LocalMouseHoverBehavior
        fun Find(Outer: UObject, ResourceName: String): LocalMouseHoverBehavior
        fun GetDefaultObject(): LocalMouseHoverBehavior
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LocalMouseHoverBehavior
        fun C(Other: UObject): LocalMouseHoverBehavior
        fun C(Other: Any): LocalMouseHoverBehavior
    }
}

external open class MouseWheelInputBehavior : AnyButtonInputBehavior {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MouseWheelInputBehavior
        fun Find(Outer: UObject, ResourceName: String): MouseWheelInputBehavior
        fun GetDefaultObject(): MouseWheelInputBehavior
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MouseWheelInputBehavior
        fun C(Other: UObject): MouseWheelInputBehavior
        fun C(Other: Any): MouseWheelInputBehavior
    }
}

external open class MultiClickSequenceInputBehavior : AnyButtonInputBehavior {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MultiClickSequenceInputBehavior
        fun Find(Outer: UObject, ResourceName: String): MultiClickSequenceInputBehavior
        fun GetDefaultObject(): MultiClickSequenceInputBehavior
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MultiClickSequenceInputBehavior
        fun C(Other: UObject): MultiClickSequenceInputBehavior
        fun C(Other: Any): MultiClickSequenceInputBehavior
    }
}

external open class MultiSelectionTool : InteractiveTool {
    constructor()
    constructor(Outer: UObject)
    open var Targets: Array<ToolTarget>

    companion object {
        fun Load(ResourceName: String): MultiSelectionTool
        fun Find(Outer: UObject, ResourceName: String): MultiSelectionTool
        fun GetDefaultObject(): MultiSelectionTool
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MultiSelectionTool
        fun C(Other: UObject): MultiSelectionTool
        fun C(Other: Any): MultiSelectionTool
    }
}

external open class GizmoFloatParameterChange {
    open var InitialValue: Number
    open var CurrentValue: Number
    open fun clone(): GizmoFloatParameterChange

    companion object {
        fun C(Other: UObject): GizmoFloatParameterChange
        fun C(Other: Any): GizmoFloatParameterChange
    }
}

external open class GizmoLocalFloatParameterSource : GizmoBaseFloatParameterSource {
    constructor()
    constructor(Outer: UObject)
    open var Value: Number
    open var LastChange: GizmoFloatParameterChange

    companion object {
        fun Load(ResourceName: String): GizmoLocalFloatParameterSource
        fun Find(Outer: UObject, ResourceName: String): GizmoLocalFloatParameterSource
        fun GetDefaultObject(): GizmoLocalFloatParameterSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoLocalFloatParameterSource
        fun C(Other: UObject): GizmoLocalFloatParameterSource
        fun C(Other: Any): GizmoLocalFloatParameterSource
    }
}

external open class GizmoBaseVec2ParameterSource : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GizmoBaseVec2ParameterSource
        fun Find(Outer: UObject, ResourceName: String): GizmoBaseVec2ParameterSource
        fun GetDefaultObject(): GizmoBaseVec2ParameterSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoBaseVec2ParameterSource
        fun C(Other: UObject): GizmoBaseVec2ParameterSource
        fun C(Other: Any): GizmoBaseVec2ParameterSource
    }
}

external open class GizmoVec2ParameterChange {
    open var InitialValue: Vector2D
    open var CurrentValue: Vector2D
    open fun clone(): GizmoVec2ParameterChange

    companion object {
        fun C(Other: UObject): GizmoVec2ParameterChange
        fun C(Other: Any): GizmoVec2ParameterChange
    }
}

external open class GizmoLocalVec2ParameterSource : GizmoBaseVec2ParameterSource {
    constructor()
    constructor(Outer: UObject)
    open var Value: Vector2D
    open var LastChange: GizmoVec2ParameterChange

    companion object {
        fun Load(ResourceName: String): GizmoLocalVec2ParameterSource
        fun Find(Outer: UObject, ResourceName: String): GizmoLocalVec2ParameterSource
        fun GetDefaultObject(): GizmoLocalVec2ParameterSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoLocalVec2ParameterSource
        fun C(Other: UObject): GizmoLocalVec2ParameterSource
        fun C(Other: Any): GizmoLocalVec2ParameterSource
    }
}

external open class GizmoAxisTranslationParameterSource : GizmoBaseFloatParameterSource {
    constructor()
    constructor(Outer: UObject)
    open var AxisSource: Any
    open var TransformSource: Any
    open var Parameter: Number
    open var LastChange: GizmoFloatParameterChange
    open var CurTranslationAxis: Vector
    open var CurTranslationOrigin: Vector
    open var InitialTransform: Transform

    companion object {
        fun Load(ResourceName: String): GizmoAxisTranslationParameterSource
        fun Find(Outer: UObject, ResourceName: String): GizmoAxisTranslationParameterSource
        fun GetDefaultObject(): GizmoAxisTranslationParameterSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoAxisTranslationParameterSource
        fun C(Other: UObject): GizmoAxisTranslationParameterSource
        fun C(Other: Any): GizmoAxisTranslationParameterSource
    }
}

external open class GizmoPlaneTranslationParameterSource : GizmoBaseVec2ParameterSource {
    constructor()
    constructor(Outer: UObject)
    open var AxisSource: Any
    open var TransformSource: Any
    open var Parameter: Vector2D
    open var LastChange: GizmoVec2ParameterChange
    open var CurTranslationOrigin: Vector
    open var CurTranslationNormal: Vector
    open var CurTranslationAxisX: Vector
    open var CurTranslationAxisY: Vector
    open var InitialTransform: Transform

    companion object {
        fun Load(ResourceName: String): GizmoPlaneTranslationParameterSource
        fun Find(Outer: UObject, ResourceName: String): GizmoPlaneTranslationParameterSource
        fun GetDefaultObject(): GizmoPlaneTranslationParameterSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoPlaneTranslationParameterSource
        fun C(Other: UObject): GizmoPlaneTranslationParameterSource
        fun C(Other: Any): GizmoPlaneTranslationParameterSource
    }
}

external open class GizmoAxisRotationParameterSource : GizmoBaseFloatParameterSource {
    constructor()
    constructor(Outer: UObject)
    open var AxisSource: Any
    open var TransformSource: Any
    open var Angle: Number
    open var LastChange: GizmoFloatParameterChange
    open var CurRotationAxis: Vector
    open var CurRotationOrigin: Vector
    open var InitialTransform: Transform

    companion object {
        fun Load(ResourceName: String): GizmoAxisRotationParameterSource
        fun Find(Outer: UObject, ResourceName: String): GizmoAxisRotationParameterSource
        fun GetDefaultObject(): GizmoAxisRotationParameterSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoAxisRotationParameterSource
        fun C(Other: UObject): GizmoAxisRotationParameterSource
        fun C(Other: Any): GizmoAxisRotationParameterSource
    }
}

external open class GizmoUniformScaleParameterSource : GizmoBaseVec2ParameterSource {
    constructor()
    constructor(Outer: UObject)
    open var AxisSource: Any
    open var TransformSource: Any
    open var ScaleMultiplier: Number
    open var Parameter: Vector2D
    open var LastChange: GizmoVec2ParameterChange
    open var CurScaleOrigin: Vector
    open var CurScaleNormal: Vector
    open var CurScaleAxisX: Vector
    open var CurScaleAxisY: Vector
    open var InitialTransform: Transform

    companion object {
        fun Load(ResourceName: String): GizmoUniformScaleParameterSource
        fun Find(Outer: UObject, ResourceName: String): GizmoUniformScaleParameterSource
        fun GetDefaultObject(): GizmoUniformScaleParameterSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoUniformScaleParameterSource
        fun C(Other: UObject): GizmoUniformScaleParameterSource
        fun C(Other: Any): GizmoUniformScaleParameterSource
    }
}

external open class GizmoAxisScaleParameterSource : GizmoBaseFloatParameterSource {
    constructor()
    constructor(Outer: UObject)
    open var AxisSource: Any
    open var TransformSource: Any
    open var ScaleMultiplier: Number
    open var bClampToZero: Boolean
    open var Parameter: Number
    open var LastChange: GizmoFloatParameterChange
    open var CurScaleAxis: Vector
    open var CurScaleOrigin: Vector
    open var InitialTransform: Transform

    companion object {
        fun Load(ResourceName: String): GizmoAxisScaleParameterSource
        fun Find(Outer: UObject, ResourceName: String): GizmoAxisScaleParameterSource
        fun GetDefaultObject(): GizmoAxisScaleParameterSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoAxisScaleParameterSource
        fun C(Other: UObject): GizmoAxisScaleParameterSource
        fun C(Other: Any): GizmoAxisScaleParameterSource
    }
}

external open class GizmoPlaneScaleParameterSource : GizmoBaseVec2ParameterSource {
    constructor()
    constructor(Outer: UObject)
    open var AxisSource: Any
    open var TransformSource: Any
    open var ScaleMultiplier: Number
    open var bUseEqualScaling: Boolean
    open var bClampToZero: Boolean
    open var Parameter: Vector2D
    open var LastChange: GizmoVec2ParameterChange
    open var CurScaleOrigin: Vector
    open var CurScaleNormal: Vector
    open var CurScaleAxisX: Vector
    open var CurScaleAxisY: Vector
    open var InitialTransform: Transform

    companion object {
        fun Load(ResourceName: String): GizmoPlaneScaleParameterSource
        fun Find(Outer: UObject, ResourceName: String): GizmoPlaneScaleParameterSource
        fun GetDefaultObject(): GizmoPlaneScaleParameterSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoPlaneScaleParameterSource
        fun C(Other: UObject): GizmoPlaneScaleParameterSource
        fun C(Other: Any): GizmoPlaneScaleParameterSource
    }
}

external open class PhysicsDataSource : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PhysicsDataSource
        fun Find(Outer: UObject, ResourceName: String): PhysicsDataSource
        fun GetDefaultObject(): PhysicsDataSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PhysicsDataSource
        fun C(Other: UObject): PhysicsDataSource
        fun C(Other: Any): PhysicsDataSource
    }
}

external open class PlanePositionGizmoBuilder : InteractiveGizmoBuilder {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PlanePositionGizmoBuilder
        fun Find(Outer: UObject, ResourceName: String): PlanePositionGizmoBuilder
        fun GetDefaultObject(): PlanePositionGizmoBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PlanePositionGizmoBuilder
        fun C(Other: UObject): PlanePositionGizmoBuilder
        fun C(Other: Any): PlanePositionGizmoBuilder
    }
}

external open class PlanePositionGizmo : InteractiveGizmo {
    constructor()
    constructor(Outer: UObject)
    open var AxisSource: Any
    open var ParameterSource: Any
    open var HitTarget: Any
    open var StateTarget: Any
    open var MouseBehavior: ClickDragInputBehavior
    open var bEnableSignedAxis: Boolean
    open var bFlipX: Boolean
    open var bFlipY: Boolean
    open var bInInteraction: Boolean
    open var InteractionOrigin: Vector
    open var InteractionNormal: Vector
    open var InteractionAxisX: Vector
    open var InteractionAxisY: Vector
    open var InteractionStartPoint: Vector
    open var InteractionCurPoint: Vector
    open var InteractionStartParameter: Vector2D
    open var InteractionCurParameter: Vector2D
    open var ParameterSigns: Vector2D

    companion object {
        fun Load(ResourceName: String): PlanePositionGizmo
        fun Find(Outer: UObject, ResourceName: String): PlanePositionGizmo
        fun GetDefaultObject(): PlanePositionGizmo
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PlanePositionGizmo
        fun C(Other: UObject): PlanePositionGizmo
        fun C(Other: Any): PlanePositionGizmo
    }
}

external open class PrimitiveComponentBackedTarget : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PrimitiveComponentBackedTarget
        fun Find(Outer: UObject, ResourceName: String): PrimitiveComponentBackedTarget
        fun GetDefaultObject(): PrimitiveComponentBackedTarget
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PrimitiveComponentBackedTarget
        fun C(Other: UObject): PrimitiveComponentBackedTarget
        fun C(Other: Any): PrimitiveComponentBackedTarget
    }
}

external open class PrimitiveComponentToolTarget : ToolTarget {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PrimitiveComponentToolTarget
        fun Find(Outer: UObject, ResourceName: String): PrimitiveComponentToolTarget
        fun GetDefaultObject(): PrimitiveComponentToolTarget
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PrimitiveComponentToolTarget
        fun C(Other: UObject): PrimitiveComponentToolTarget
        fun C(Other: Any): PrimitiveComponentToolTarget
    }
}

external open class PrimitiveComponentToolTargetFactory : ToolTargetFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PrimitiveComponentToolTargetFactory
        fun Find(Outer: UObject, ResourceName: String): PrimitiveComponentToolTargetFactory
        fun GetDefaultObject(): PrimitiveComponentToolTargetFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PrimitiveComponentToolTargetFactory
        fun C(Other: UObject): PrimitiveComponentToolTargetFactory
        fun C(Other: Any): PrimitiveComponentToolTargetFactory
    }
}

external open class RepositionableTransformGizmoBuilder : CombinedTransformGizmoBuilder {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): RepositionableTransformGizmoBuilder
        fun Find(Outer: UObject, ResourceName: String): RepositionableTransformGizmoBuilder
        fun GetDefaultObject(): RepositionableTransformGizmoBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RepositionableTransformGizmoBuilder
        fun C(Other: UObject): RepositionableTransformGizmoBuilder
        fun C(Other: Any): RepositionableTransformGizmoBuilder
    }
}

external open class RepositionableTransformGizmo : CombinedTransformGizmo {
    constructor()
    constructor(Outer: UObject)
    open var RepositionStateTarget: GizmoTransformChangeStateTarget

    companion object {
        fun Load(ResourceName: String): RepositionableTransformGizmo
        fun Find(Outer: UObject, ResourceName: String): RepositionableTransformGizmo
        fun GetDefaultObject(): RepositionableTransformGizmo
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RepositionableTransformGizmo
        fun C(Other: UObject): RepositionableTransformGizmo
        fun C(Other: Any): RepositionableTransformGizmo
    }
}

external open class ScalableSphereGizmoBuilder : InteractiveGizmoBuilder {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ScalableSphereGizmoBuilder
        fun Find(Outer: UObject, ResourceName: String): ScalableSphereGizmoBuilder
        fun GetDefaultObject(): ScalableSphereGizmoBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ScalableSphereGizmoBuilder
        fun C(Other: UObject): ScalableSphereGizmoBuilder
        fun C(Other: Any): ScalableSphereGizmoBuilder
    }
}

external open class ScalableSphereGizmo : InteractiveGizmo {
    constructor()
    constructor(Outer: UObject)
    open var HitErrorThreshold: Number
    open var TransactionDescription: String
    open var Radius: Number
    open var bIsHovering: Boolean
    open var bIsDragging: Boolean
    open var ActiveTarget: TransformProxy
    open var ActiveAxis: Vector
    open var DragStartWorldPosition: Vector
    open var DragCurrentPositionProjected: Vector
    open var InteractionStartParameter: Number

    companion object {
        fun Load(ResourceName: String): ScalableSphereGizmo
        fun Find(Outer: UObject, ResourceName: String): ScalableSphereGizmo
        fun GetDefaultObject(): ScalableSphereGizmo
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ScalableSphereGizmo
        fun C(Other: UObject): ScalableSphereGizmo
        fun C(Other: Any): ScalableSphereGizmo
    }
}

external open class ScalableSphereGizmoInputBehavior : AnyButtonInputBehavior {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ScalableSphereGizmoInputBehavior
        fun Find(Outer: UObject, ResourceName: String): ScalableSphereGizmoInputBehavior
        fun GetDefaultObject(): ScalableSphereGizmoInputBehavior
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ScalableSphereGizmoInputBehavior
        fun C(Other: UObject): ScalableSphereGizmoInputBehavior
        fun C(Other: Any): ScalableSphereGizmoInputBehavior
    }
}

external open class SceneSnappingManager : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SceneSnappingManager
        fun Find(Outer: UObject, ResourceName: String): SceneSnappingManager
        fun GetDefaultObject(): SceneSnappingManager
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SceneSnappingManager
        fun C(Other: UObject): SceneSnappingManager
        fun C(Other: Any): SceneSnappingManager
    }
}

external open class SelectionSet : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SelectionSet
        fun Find(Outer: UObject, ResourceName: String): SelectionSet
        fun GetDefaultObject(): SelectionSet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SelectionSet
        fun C(Other: UObject): SelectionSet
        fun C(Other: Any): SelectionSet
    }
}

external open class MeshSelectionSet : SelectionSet {
    constructor()
    constructor(Outer: UObject)
    open var Vertices: Array<Number>
    open var Edges: Array<Number>
    open var Faces: Array<Number>
    open var Groups: Array<Number>

    companion object {
        fun Load(ResourceName: String): MeshSelectionSet
        fun Find(Outer: UObject, ResourceName: String): MeshSelectionSet
        fun GetDefaultObject(): MeshSelectionSet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MeshSelectionSet
        fun C(Other: UObject): MeshSelectionSet
        fun C(Other: Any): MeshSelectionSet
    }
}

external open class SingleClickInputBehavior : AnyButtonInputBehavior {
    constructor()
    constructor(Outer: UObject)
    open var HitTestOnRelease: Boolean

    companion object {
        fun Load(ResourceName: String): SingleClickInputBehavior
        fun Find(Outer: UObject, ResourceName: String): SingleClickInputBehavior
        fun GetDefaultObject(): SingleClickInputBehavior
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SingleClickInputBehavior
        fun C(Other: UObject): SingleClickInputBehavior
        fun C(Other: Any): SingleClickInputBehavior
    }
}

external open class LocalSingleClickInputBehavior : SingleClickInputBehavior {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LocalSingleClickInputBehavior
        fun Find(Outer: UObject, ResourceName: String): LocalSingleClickInputBehavior
        fun GetDefaultObject(): LocalSingleClickInputBehavior
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LocalSingleClickInputBehavior
        fun C(Other: UObject): LocalSingleClickInputBehavior
        fun C(Other: Any): LocalSingleClickInputBehavior
    }
}

external open class SingleClickOrDragInputBehavior : AnyButtonInputBehavior {
    constructor()
    constructor(Outer: UObject)
    open var bBeginDragIfClickTargetNotHit: Boolean
    open var ClickDistanceThreshold: Number

    companion object {
        fun Load(ResourceName: String): SingleClickOrDragInputBehavior
        fun Find(Outer: UObject, ResourceName: String): SingleClickOrDragInputBehavior
        fun GetDefaultObject(): SingleClickOrDragInputBehavior
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SingleClickOrDragInputBehavior
        fun C(Other: UObject): SingleClickOrDragInputBehavior
        fun C(Other: Any): SingleClickOrDragInputBehavior
    }
}

external open class SingleClickToolBuilder : InteractiveToolBuilder {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SingleClickToolBuilder
        fun Find(Outer: UObject, ResourceName: String): SingleClickToolBuilder
        fun GetDefaultObject(): SingleClickToolBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SingleClickToolBuilder
        fun C(Other: UObject): SingleClickToolBuilder
        fun C(Other: Any): SingleClickToolBuilder
    }
}

external open class SingleClickTool : InteractiveTool {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SingleClickTool
        fun Find(Outer: UObject, ResourceName: String): SingleClickTool
        fun GetDefaultObject(): SingleClickTool
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SingleClickTool
        fun C(Other: UObject): SingleClickTool
        fun C(Other: Any): SingleClickTool
    }
}

external open class SingleKeyCaptureBehavior : InputBehavior {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SingleKeyCaptureBehavior
        fun Find(Outer: UObject, ResourceName: String): SingleKeyCaptureBehavior
        fun GetDefaultObject(): SingleKeyCaptureBehavior
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SingleKeyCaptureBehavior
        fun C(Other: UObject): SingleKeyCaptureBehavior
        fun C(Other: Any): SingleKeyCaptureBehavior
    }
}

external open class SkeletalMeshBackedTarget : AssetBackedTarget {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SkeletalMeshBackedTarget
        fun Find(Outer: UObject, ResourceName: String): SkeletalMeshBackedTarget
        fun GetDefaultObject(): SkeletalMeshBackedTarget
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SkeletalMeshBackedTarget
        fun C(Other: UObject): SkeletalMeshBackedTarget
        fun C(Other: Any): SkeletalMeshBackedTarget
    }
}

external open class GizmoNilStateTarget : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GizmoNilStateTarget
        fun Find(Outer: UObject, ResourceName: String): GizmoNilStateTarget
        fun GetDefaultObject(): GizmoNilStateTarget
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoNilStateTarget
        fun C(Other: UObject): GizmoNilStateTarget
        fun C(Other: Any): GizmoNilStateTarget
    }
}

external open class GizmoLambdaStateTarget : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GizmoLambdaStateTarget
        fun Find(Outer: UObject, ResourceName: String): GizmoLambdaStateTarget
        fun GetDefaultObject(): GizmoLambdaStateTarget
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoLambdaStateTarget
        fun C(Other: UObject): GizmoLambdaStateTarget
        fun C(Other: Any): GizmoLambdaStateTarget
    }
}

external open class GizmoObjectModifyStateTarget : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GizmoObjectModifyStateTarget
        fun Find(Outer: UObject, ResourceName: String): GizmoObjectModifyStateTarget
        fun GetDefaultObject(): GizmoObjectModifyStateTarget
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoObjectModifyStateTarget
        fun C(Other: UObject): GizmoObjectModifyStateTarget
        fun C(Other: Any): GizmoObjectModifyStateTarget
    }
}

external open class StaticMeshBackedTarget : AssetBackedTarget {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): StaticMeshBackedTarget
        fun Find(Outer: UObject, ResourceName: String): StaticMeshBackedTarget
        fun GetDefaultObject(): StaticMeshBackedTarget
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): StaticMeshBackedTarget
        fun C(Other: UObject): StaticMeshBackedTarget
        fun C(Other: Any): StaticMeshBackedTarget
    }
}

external open class CombinedTransformGizmoContextObject : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CombinedTransformGizmoContextObject
        fun Find(Outer: UObject, ResourceName: String): CombinedTransformGizmoContextObject
        fun GetDefaultObject(): CombinedTransformGizmoContextObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CombinedTransformGizmoContextObject
        fun C(Other: UObject): CombinedTransformGizmoContextObject
        fun C(Other: Any): CombinedTransformGizmoContextObject
    }
}

external open class GizmoBaseTransformSource : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GizmoBaseTransformSource
        fun Find(Outer: UObject, ResourceName: String): GizmoBaseTransformSource
        fun GetDefaultObject(): GizmoBaseTransformSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoBaseTransformSource
        fun C(Other: UObject): GizmoBaseTransformSource
        fun C(Other: Any): GizmoBaseTransformSource
    }
}

external open class GizmoComponentWorldTransformSource : GizmoBaseTransformSource {
    constructor()
    constructor(Outer: UObject)
    open var Component: SceneComponent
    open var bModifyComponentOnTransform: Boolean

    companion object {
        fun Load(ResourceName: String): GizmoComponentWorldTransformSource
        fun Find(Outer: UObject, ResourceName: String): GizmoComponentWorldTransformSource
        fun GetDefaultObject(): GizmoComponentWorldTransformSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoComponentWorldTransformSource
        fun C(Other: UObject): GizmoComponentWorldTransformSource
        fun C(Other: Any): GizmoComponentWorldTransformSource
    }
}

external open class GizmoScaledTransformSource : GizmoBaseTransformSource {
    constructor()
    constructor(Outer: UObject)
    open var ChildTransformSource: Any

    companion object {
        fun Load(ResourceName: String): GizmoScaledTransformSource
        fun Find(Outer: UObject, ResourceName: String): GizmoScaledTransformSource
        fun GetDefaultObject(): GizmoScaledTransformSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoScaledTransformSource
        fun C(Other: UObject): GizmoScaledTransformSource
        fun C(Other: Any): GizmoScaledTransformSource
    }
}

external open class GizmoTransformProxyTransformSource : GizmoBaseTransformSource {
    constructor()
    constructor(Outer: UObject)
    open var Proxy: TransformProxy

    companion object {
        fun Load(ResourceName: String): GizmoTransformProxyTransformSource
        fun Find(Outer: UObject, ResourceName: String): GizmoTransformProxyTransformSource
        fun GetDefaultObject(): GizmoTransformProxyTransformSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoTransformProxyTransformSource
        fun C(Other: UObject): GizmoTransformProxyTransformSource
        fun C(Other: Any): GizmoTransformProxyTransformSource
    }
}

external open class GizmoScaledAndUnscaledTransformSources : GizmoBaseTransformSource {
    constructor()
    constructor(Outer: UObject)
    open var ScaledTransformSource: Any
    open var UnscaledTransformSource: Any

    companion object {
        fun Load(ResourceName: String): GizmoScaledAndUnscaledTransformSources
        fun Find(Outer: UObject, ResourceName: String): GizmoScaledAndUnscaledTransformSources
        fun GetDefaultObject(): GizmoScaledAndUnscaledTransformSources
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoScaledAndUnscaledTransformSources
        fun C(Other: UObject): GizmoScaledAndUnscaledTransformSources
        fun C(Other: Any): GizmoScaledAndUnscaledTransformSources
    }
}

external open class GizmoEditorAxisSource : UObject {
    constructor()
    constructor(Outer: UObject)
    open var AxisIndex: Number
    open var bLocalAxes: Boolean

    companion object {
        fun Load(ResourceName: String): GizmoEditorAxisSource
        fun Find(Outer: UObject, ResourceName: String): GizmoEditorAxisSource
        fun GetDefaultObject(): GizmoEditorAxisSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoEditorAxisSource
        fun C(Other: UObject): GizmoEditorAxisSource
        fun C(Other: Any): GizmoEditorAxisSource
    }
}

external open class EditorInteractiveGizmoConditionalBuilder : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EditorInteractiveGizmoConditionalBuilder
        fun Find(Outer: UObject, ResourceName: String): EditorInteractiveGizmoConditionalBuilder
        fun GetDefaultObject(): EditorInteractiveGizmoConditionalBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorInteractiveGizmoConditionalBuilder
        fun C(Other: UObject): EditorInteractiveGizmoConditionalBuilder
        fun C(Other: Any): EditorInteractiveGizmoConditionalBuilder
    }
}

external open class EditorInteractiveGizmoRegistry : UObject {
    constructor()
    constructor(Outer: UObject)
    open var GizmoCategoryMap: Any

    companion object {
        fun Load(ResourceName: String): EditorInteractiveGizmoRegistry
        fun Find(Outer: UObject, ResourceName: String): EditorInteractiveGizmoRegistry
        fun GetDefaultObject(): EditorInteractiveGizmoRegistry
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorInteractiveGizmoRegistry
        fun C(Other: UObject): EditorInteractiveGizmoRegistry
        fun C(Other: Any): EditorInteractiveGizmoRegistry
    }
}

external open class ActiveEditorGizmo {
    open var Gizmo: InteractiveGizmo
    open fun clone(): ActiveEditorGizmo

    companion object {
        fun C(Other: UObject): ActiveEditorGizmo
        fun C(Other: Any): ActiveEditorGizmo
    }
}

external open class EditorInteractiveGizmoManager : InteractiveGizmoManager {
    constructor()
    constructor(Outer: UObject)
    open var Registry: EditorInteractiveGizmoRegistry
    open var ActiveEditorGizmos: Array<ActiveEditorGizmo>
    open var CachedGizmoMap: Any

    companion object {
        fun Load(ResourceName: String): EditorInteractiveGizmoManager
        fun Find(Outer: UObject, ResourceName: String): EditorInteractiveGizmoManager
        fun GetDefaultObject(): EditorInteractiveGizmoManager
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorInteractiveGizmoManager
        fun C(Other: UObject): EditorInteractiveGizmoManager
        fun C(Other: Any): EditorInteractiveGizmoManager
    }
}

external open class EditorGizmoRegistryCategoryEntry : UObject {
    constructor()
    constructor(Outer: UObject)
    open var GizmoTypes: Array<InteractiveGizmoBuilder>
    open var CategoryName: String

    companion object {
        fun Load(ResourceName: String): EditorGizmoRegistryCategoryEntry
        fun Find(Outer: UObject, ResourceName: String): EditorGizmoRegistryCategoryEntry
        fun GetDefaultObject(): EditorGizmoRegistryCategoryEntry
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorGizmoRegistryCategoryEntry
        fun C(Other: UObject): EditorGizmoRegistryCategoryEntry
        fun C(Other: Any): EditorGizmoRegistryCategoryEntry
    }
}

external open class EditorGizmoRegistryCategoryEntry_ConditionalSelection : EditorGizmoRegistryCategoryEntry {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EditorGizmoRegistryCategoryEntry_ConditionalSelection
        fun Find(Outer: UObject, ResourceName: String): EditorGizmoRegistryCategoryEntry_ConditionalSelection
        fun GetDefaultObject(): EditorGizmoRegistryCategoryEntry_ConditionalSelection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorGizmoRegistryCategoryEntry_ConditionalSelection
        fun C(Other: UObject): EditorGizmoRegistryCategoryEntry_ConditionalSelection
        fun C(Other: Any): EditorGizmoRegistryCategoryEntry_ConditionalSelection
    }
}

external open class EditorGizmoRegistryCategoryEntry_Primary : EditorGizmoRegistryCategoryEntry_ConditionalSelection {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EditorGizmoRegistryCategoryEntry_Primary
        fun Find(Outer: UObject, ResourceName: String): EditorGizmoRegistryCategoryEntry_Primary
        fun GetDefaultObject(): EditorGizmoRegistryCategoryEntry_Primary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorGizmoRegistryCategoryEntry_Primary
        fun C(Other: UObject): EditorGizmoRegistryCategoryEntry_Primary
        fun C(Other: Any): EditorGizmoRegistryCategoryEntry_Primary
    }
}

external open class EditorGizmoRegistryCategoryEntry_Accessory : EditorGizmoRegistryCategoryEntry_ConditionalSelection {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EditorGizmoRegistryCategoryEntry_Accessory
        fun Find(Outer: UObject, ResourceName: String): EditorGizmoRegistryCategoryEntry_Accessory
        fun GetDefaultObject(): EditorGizmoRegistryCategoryEntry_Accessory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorGizmoRegistryCategoryEntry_Accessory
        fun C(Other: UObject): EditorGizmoRegistryCategoryEntry_Accessory
        fun C(Other: Any): EditorGizmoRegistryCategoryEntry_Accessory
    }
}

external open class EditorInteractiveGizmoSelectionBuilder : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EditorInteractiveGizmoSelectionBuilder
        fun Find(Outer: UObject, ResourceName: String): EditorInteractiveGizmoSelectionBuilder
        fun GetDefaultObject(): EditorInteractiveGizmoSelectionBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorInteractiveGizmoSelectionBuilder
        fun C(Other: UObject): EditorInteractiveGizmoSelectionBuilder
        fun C(Other: Any): EditorInteractiveGizmoSelectionBuilder
    }
}

external open class EditorInteractiveGizmoSubsystem : EditorSubsystem {
    constructor()
    constructor(Outer: UObject)
    open var TransformGizmoBuilder: InteractiveGizmoBuilder
    open var Registry: EditorInteractiveGizmoRegistry

    companion object {
        fun Load(ResourceName: String): EditorInteractiveGizmoSubsystem
        fun Find(Outer: UObject, ResourceName: String): EditorInteractiveGizmoSubsystem
        fun GetDefaultObject(): EditorInteractiveGizmoSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorInteractiveGizmoSubsystem
        fun C(Other: UObject): EditorInteractiveGizmoSubsystem
        fun C(Other: Any): EditorInteractiveGizmoSubsystem
    }
}

external open class GizmoEditorAxisTranslationParameterSource : GizmoBaseFloatParameterSource {
    constructor()
    constructor(Outer: UObject)
    open var AxisSource: Any
    open var Parameter: Number
    open var LastChange: GizmoFloatParameterChange
    open var CurTranslationAxis: Vector
    open var CurTranslationOrigin: Vector
    open var LastPivotLocation: Vector
    open var LastSnappedLocation: Vector

    companion object {
        fun Load(ResourceName: String): GizmoEditorAxisTranslationParameterSource
        fun Find(Outer: UObject, ResourceName: String): GizmoEditorAxisTranslationParameterSource
        fun GetDefaultObject(): GizmoEditorAxisTranslationParameterSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoEditorAxisTranslationParameterSource
        fun C(Other: UObject): GizmoEditorAxisTranslationParameterSource
        fun C(Other: Any): GizmoEditorAxisTranslationParameterSource
    }
}

external open class EditorTransformGizmoBuilder : InteractiveGizmoBuilder {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EditorTransformGizmoBuilder
        fun Find(Outer: UObject, ResourceName: String): EditorTransformGizmoBuilder
        fun GetDefaultObject(): EditorTransformGizmoBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorTransformGizmoBuilder
        fun C(Other: UObject): EditorTransformGizmoBuilder
        fun C(Other: Any): EditorTransformGizmoBuilder
    }
}

external open class GizmoBaseObject : UObject {
    constructor()
    constructor(Outer: UObject)
    open var LocalToWorldTransform: Transform
    open var Material: MaterialInterface
    open var CurrentMaterial: MaterialInterface
    open var GizmoScale: Number
    open var PixelHitDistanceThreshold: Number
    open fun SetWorldLocalState(bWorldIn: Boolean)
    open fun SetVisibility(bVisibleIn: Boolean)
    open fun SetMaterial(InMaterial: MaterialInterface)
    open fun SetLocalToWorldTransform(LocalToWorldTransformIn: Transform)
    open fun SetInteractingState(bInteractingIn: Boolean)
    open fun SetHoverState(bHoveringIn: Boolean)
    open fun SetGizmoScale(InGizmoScale: Number)
    open fun SetCurrentMaterial(InCurrentMaterial: MaterialInterface)
    open fun GetWorldLocalState(): Boolean
    open fun GetVisibility(): Boolean
    open fun GetMaterial(): MaterialInterface
    open fun GetLocalToWorldTransform(): Transform
    open fun GetInteractingState(): Boolean
    open fun GetHoverState(): Boolean
    open fun GetGizmoScale(): Number
    open fun GetCurrentMaterial(): MaterialInterface

    companion object {
        fun Load(ResourceName: String): GizmoBaseObject
        fun Find(Outer: UObject, ResourceName: String): GizmoBaseObject
        fun GetDefaultObject(): GizmoBaseObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoBaseObject
        fun C(Other: UObject): GizmoBaseObject
        fun C(Other: Any): GizmoBaseObject
    }
}

external open class GizmoGroupObject : GizmoBaseObject {
    constructor()
    constructor(Outer: UObject)
    open var Objects: Array<GizmoBaseObject>

    companion object {
        fun Load(ResourceName: String): GizmoGroupObject
        fun Find(Outer: UObject, ResourceName: String): GizmoGroupObject
        fun GetDefaultObject(): GizmoGroupObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoGroupObject
        fun C(Other: UObject): GizmoGroupObject
        fun C(Other: Any): GizmoGroupObject
    }
}

external open class GizmoCylinderObject : GizmoBaseObject {
    constructor()
    constructor(Outer: UObject)
    open var Direction: Vector
    open var Length: Number
    open var Offset: Number
    open var Radius: Number
    open var NumSides: Number

    companion object {
        fun Load(ResourceName: String): GizmoCylinderObject
        fun Find(Outer: UObject, ResourceName: String): GizmoCylinderObject
        fun GetDefaultObject(): GizmoCylinderObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoCylinderObject
        fun C(Other: UObject): GizmoCylinderObject
        fun C(Other: Any): GizmoCylinderObject
    }
}

external open class GizmoConeObject : GizmoBaseObject {
    constructor()
    constructor(Outer: UObject)
    open var Direction: Vector
    open var Height: Number
    open var Offset: Number
    open var Angle: Number
    open var NumSides: Number

    companion object {
        fun Load(ResourceName: String): GizmoConeObject
        fun Find(Outer: UObject, ResourceName: String): GizmoConeObject
        fun GetDefaultObject(): GizmoConeObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoConeObject
        fun C(Other: UObject): GizmoConeObject
        fun C(Other: Any): GizmoConeObject
    }
}

external open class GizmoBoxObject : GizmoBaseObject {
    constructor()
    constructor(Outer: UObject)
    open var Dimensions: Vector
    open var UpDirection: Vector
    open var SideDirection: Vector
    open var Offset: Number

    companion object {
        fun Load(ResourceName: String): GizmoBoxObject
        fun Find(Outer: UObject, ResourceName: String): GizmoBoxObject
        fun GetDefaultObject(): GizmoBoxObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoBoxObject
        fun C(Other: UObject): GizmoBoxObject
        fun C(Other: Any): GizmoBoxObject
    }
}

external open class GizmoArrowObject : GizmoBaseObject {
    constructor()
    constructor(Outer: UObject)
    open var bHasConeHead: Number
    open var Direction: Vector
    open var Offset: Number
    open var CylinderObject: GizmoCylinderObject
    open var ConeObject: GizmoConeObject
    open var BoxObject: GizmoBoxObject

    companion object {
        fun Load(ResourceName: String): GizmoArrowObject
        fun Find(Outer: UObject, ResourceName: String): GizmoArrowObject
        fun GetDefaultObject(): GizmoArrowObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoArrowObject
        fun C(Other: UObject): GizmoArrowObject
        fun C(Other: Any): GizmoArrowObject
    }
}

external open class GizmoObjectTransformChangeStateTarget : UObject {
    constructor()
    constructor(Outer: UObject)
    open var TransactionManager: Any

    companion object {
        fun Load(ResourceName: String): GizmoObjectTransformChangeStateTarget
        fun Find(Outer: UObject, ResourceName: String): GizmoObjectTransformChangeStateTarget
        fun GetDefaultObject(): GizmoObjectTransformChangeStateTarget
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoObjectTransformChangeStateTarget
        fun C(Other: UObject): GizmoObjectTransformChangeStateTarget
        fun C(Other: Any): GizmoObjectTransformChangeStateTarget
    }
}

external open class EditorTransformGizmo : InteractiveGizmo {
    constructor()
    constructor(Outer: UObject)
    open var ActiveTarget: TransformProxy
    open var bSnapToWorldGrid: Boolean
    open var bGridSizeIsExplicit: Boolean
    open var ExplicitGridSize: Vector
    open var bRotationGridSizeIsExplicit: Boolean
    open var ExplicitRotationGridSize: Rotator
    open var bSnapToWorldRotGrid: Boolean
    open var bUseContextCoordinateSystem: Boolean
    open var CurrentCoordinateSystem: String /* "World" | "Local" | "EToolContextCoordinateSystem_MAX" */
    open var ActiveObjects: Array<GizmoBaseObject>
    open var NonuniformScaleObjects: Array<GizmoBaseObject>
    open var ActiveGizmos: Array<InteractiveGizmo>
    open var CameraAxisSource: GizmoConstantFrameAxisSource
    open var GizmoGroupObject: GizmoGroupObject
    open var AxisXSource: GizmoEditorAxisSource
    open var AxisYSource: GizmoEditorAxisSource
    open var AxisZSource: GizmoEditorAxisSource
    open var AxisXObject: GizmoArrowObject
    open var AxisYObject: GizmoArrowObject
    open var AxisZObject: GizmoArrowObject
    open var UnitAxisXSource: GizmoEditorAxisSource
    open var UnitAxisYSource: GizmoEditorAxisSource
    open var UnitAxisZSource: GizmoEditorAxisSource
    open var StateTarget: GizmoObjectTransformChangeStateTarget

    companion object {
        fun Load(ResourceName: String): EditorTransformGizmo
        fun Find(Outer: UObject, ResourceName: String): EditorTransformGizmo
        fun GetDefaultObject(): EditorTransformGizmo
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorTransformGizmo
        fun C(Other: UObject): EditorTransformGizmo
        fun C(Other: Any): EditorTransformGizmo
    }
}

external open class EditorInteractiveToolsContext : InteractiveToolsContext {
    constructor()
    constructor(Outer: UObject)
    open var StandardVertexColorMaterial: MaterialInterface

    companion object {
        fun Load(ResourceName: String): EditorInteractiveToolsContext
        fun Find(Outer: UObject, ResourceName: String): EditorInteractiveToolsContext
        fun GetDefaultObject(): EditorInteractiveToolsContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorInteractiveToolsContext
        fun C(Other: UObject): EditorInteractiveToolsContext
        fun C(Other: Any): EditorInteractiveToolsContext
    }
}

external open class EdModeInteractiveToolsContext : EditorInteractiveToolsContext {
    constructor()
    constructor(Outer: UObject)
    open var ParentModeManagerToolsContext: ModeManagerInteractiveToolsContext

    companion object {
        fun Load(ResourceName: String): EdModeInteractiveToolsContext
        fun Find(Outer: UObject, ResourceName: String): EdModeInteractiveToolsContext
        fun GetDefaultObject(): EdModeInteractiveToolsContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EdModeInteractiveToolsContext
        fun C(Other: UObject): EdModeInteractiveToolsContext
        fun C(Other: Any): EdModeInteractiveToolsContext
    }
}

external open class ModeManagerInteractiveToolsContext : EditorInteractiveToolsContext {
    constructor()
    constructor(Outer: UObject)
    open var EdModeToolsContexts: Array<EdModeInteractiveToolsContext>

    companion object {
        fun Load(ResourceName: String): ModeManagerInteractiveToolsContext
        fun Find(Outer: UObject, ResourceName: String): ModeManagerInteractiveToolsContext
        fun GetDefaultObject(): ModeManagerInteractiveToolsContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ModeManagerInteractiveToolsContext
        fun C(Other: UObject): ModeManagerInteractiveToolsContext
        fun C(Other: Any): ModeManagerInteractiveToolsContext
    }
}

external open class GizmoObjectHitTarget : UObject {
    constructor()
    constructor(Outer: UObject)
    open var GizmoObject: GizmoBaseObject

    companion object {
        fun Load(ResourceName: String): GizmoObjectHitTarget
        fun Find(Outer: UObject, ResourceName: String): GizmoObjectHitTarget
        fun GetDefaultObject(): GizmoObjectHitTarget
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoObjectHitTarget
        fun C(Other: UObject): GizmoObjectHitTarget
        fun C(Other: Any): GizmoObjectHitTarget
    }
}

external open class GizmoObjectWorldTransformSource : GizmoBaseTransformSource {
    constructor()
    constructor(Outer: UObject)
    open var UObject: GizmoBaseObject
    open var bModifyObjectOnTransform: Boolean

    companion object {
        fun Load(ResourceName: String): GizmoObjectWorldTransformSource
        fun Find(Outer: UObject, ResourceName: String): GizmoObjectWorldTransformSource
        fun GetDefaultObject(): GizmoObjectWorldTransformSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoObjectWorldTransformSource
        fun C(Other: UObject): GizmoObjectWorldTransformSource
        fun C(Other: Any): GizmoObjectWorldTransformSource
    }
}

external open class PIEPreviewSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var WindowPosX: Number
    open var WindowPosY: Number
    open var WindowScalingFactor: Number

    companion object {
        fun Load(ResourceName: String): PIEPreviewSettings
        fun Find(Outer: UObject, ResourceName: String): PIEPreviewSettings
        fun GetDefaultObject(): PIEPreviewSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PIEPreviewSettings
        fun C(Other: UObject): PIEPreviewSettings
        fun C(Other: Any): PIEPreviewSettings
    }
}

external object EMovieSceneCaptureProtocolState {
    var Idle: String /* "Idle" */
    var Initialized: String /* "Initialized" */
    var Capturing: String /* "Capturing" */
    var Finalizing: String /* "Finalizing" */
    var EMovieSceneCaptureProtocolState_MAX: String /* "EMovieSceneCaptureProtocolState_MAX" */
}

external open class MovieSceneCaptureProtocolBase : UObject {
    constructor()
    constructor(Outer: UObject)
    open var State: String /* "Idle" | "Initialized" | "Capturing" | "Finalizing" | "EMovieSceneCaptureProtocolState_MAX" */
    open fun IsCapturing(): Boolean
    open fun GetState(): String /* "Idle" | "Initialized" | "Capturing" | "Finalizing" | "EMovieSceneCaptureProtocolState_MAX" */

    companion object {
        fun Load(ResourceName: String): MovieSceneCaptureProtocolBase
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCaptureProtocolBase
        fun GetDefaultObject(): MovieSceneCaptureProtocolBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCaptureProtocolBase
        fun C(Other: UObject): MovieSceneCaptureProtocolBase
        fun C(Other: Any): MovieSceneCaptureProtocolBase
    }
}

external open class MovieSceneAudioCaptureProtocolBase : MovieSceneCaptureProtocolBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneAudioCaptureProtocolBase
        fun Find(Outer: UObject, ResourceName: String): MovieSceneAudioCaptureProtocolBase
        fun GetDefaultObject(): MovieSceneAudioCaptureProtocolBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneAudioCaptureProtocolBase
        fun C(Other: UObject): MovieSceneAudioCaptureProtocolBase
        fun C(Other: Any): MovieSceneAudioCaptureProtocolBase
    }
}

external open class NullAudioCaptureProtocol : MovieSceneAudioCaptureProtocolBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NullAudioCaptureProtocol
        fun Find(Outer: UObject, ResourceName: String): NullAudioCaptureProtocol
        fun GetDefaultObject(): NullAudioCaptureProtocol
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NullAudioCaptureProtocol
        fun C(Other: UObject): NullAudioCaptureProtocol
        fun C(Other: Any): NullAudioCaptureProtocol
    }
}

external open class MasterAudioSubmixCaptureProtocol : MovieSceneAudioCaptureProtocolBase {
    constructor()
    constructor(Outer: UObject)
    open var Filename: String

    companion object {
        fun Load(ResourceName: String): MasterAudioSubmixCaptureProtocol
        fun Find(Outer: UObject, ResourceName: String): MasterAudioSubmixCaptureProtocol
        fun GetDefaultObject(): MasterAudioSubmixCaptureProtocol
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MasterAudioSubmixCaptureProtocol
        fun C(Other: UObject): MasterAudioSubmixCaptureProtocol
        fun C(Other: Any): MasterAudioSubmixCaptureProtocol
    }
}

external open class MovieSceneImageCaptureProtocolBase : MovieSceneCaptureProtocolBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneImageCaptureProtocolBase
        fun Find(Outer: UObject, ResourceName: String): MovieSceneImageCaptureProtocolBase
        fun GetDefaultObject(): MovieSceneImageCaptureProtocolBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneImageCaptureProtocolBase
        fun C(Other: UObject): MovieSceneImageCaptureProtocolBase
        fun C(Other: Any): MovieSceneImageCaptureProtocolBase
    }
}

external open class CompositionGraphCapturePasses {
    open var Value: Array<String>
    open fun clone(): CompositionGraphCapturePasses

    companion object {
        fun C(Other: UObject): CompositionGraphCapturePasses
        fun C(Other: Any): CompositionGraphCapturePasses
    }
}

external object EHDRCaptureGamut {
    var HCGM_Rec709: String /* "HCGM_Rec709" */
    var HCGM_P3DCI: String /* "HCGM_P3DCI" */
    var HCGM_Rec2020: String /* "HCGM_Rec2020" */
    var HCGM_ACES: String /* "HCGM_ACES" */
    var HCGM_ACEScg: String /* "HCGM_ACEScg" */
    var HCGM_Linear: String /* "HCGM_Linear" */
    var HCGM_MAX: String /* "HCGM_MAX" */
}

external open class CompositionGraphCaptureProtocol : MovieSceneImageCaptureProtocolBase {
    constructor()
    constructor(Outer: UObject)
    open var IncludeRenderPasses: CompositionGraphCapturePasses
    open var bCaptureFramesInHDR: Boolean
    open var HDRCompressionQuality: Number
    open var CaptureGamut: String /* "HCGM_Rec709" | "HCGM_P3DCI" | "HCGM_Rec2020" | "HCGM_ACES" | "HCGM_ACEScg" | "HCGM_Linear" | "HCGM_MAX" */
    open var PostProcessingMaterial: SoftObjectPath
    open var bDisableScreenPercentage: Boolean
    open var PostProcessingMaterialPtr: MaterialInterface

    companion object {
        fun Load(ResourceName: String): CompositionGraphCaptureProtocol
        fun Find(Outer: UObject, ResourceName: String): CompositionGraphCaptureProtocol
        fun GetDefaultObject(): CompositionGraphCaptureProtocol
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CompositionGraphCaptureProtocol
        fun C(Other: UObject): CompositionGraphCaptureProtocol
        fun C(Other: Any): CompositionGraphCaptureProtocol
    }
}

external open class FrameGrabberProtocol : MovieSceneImageCaptureProtocolBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): FrameGrabberProtocol
        fun Find(Outer: UObject, ResourceName: String): FrameGrabberProtocol
        fun GetDefaultObject(): FrameGrabberProtocol
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FrameGrabberProtocol
        fun C(Other: UObject): FrameGrabberProtocol
        fun C(Other: Any): FrameGrabberProtocol
    }
}

external open class ImageSequenceProtocol : FrameGrabberProtocol {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ImageSequenceProtocol
        fun Find(Outer: UObject, ResourceName: String): ImageSequenceProtocol
        fun GetDefaultObject(): ImageSequenceProtocol
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ImageSequenceProtocol
        fun C(Other: UObject): ImageSequenceProtocol
        fun C(Other: Any): ImageSequenceProtocol
    }
}

external open class CompressedImageSequenceProtocol : ImageSequenceProtocol {
    constructor()
    constructor(Outer: UObject)
    open var CompressionQuality: Number

    companion object {
        fun Load(ResourceName: String): CompressedImageSequenceProtocol
        fun Find(Outer: UObject, ResourceName: String): CompressedImageSequenceProtocol
        fun GetDefaultObject(): CompressedImageSequenceProtocol
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CompressedImageSequenceProtocol
        fun C(Other: UObject): CompressedImageSequenceProtocol
        fun C(Other: Any): CompressedImageSequenceProtocol
    }
}

external open class ImageSequenceProtocol_BMP : ImageSequenceProtocol {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ImageSequenceProtocol_BMP
        fun Find(Outer: UObject, ResourceName: String): ImageSequenceProtocol_BMP
        fun GetDefaultObject(): ImageSequenceProtocol_BMP
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ImageSequenceProtocol_BMP
        fun C(Other: UObject): ImageSequenceProtocol_BMP
        fun C(Other: Any): ImageSequenceProtocol_BMP
    }
}

external open class ImageSequenceProtocol_PNG : CompressedImageSequenceProtocol {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ImageSequenceProtocol_PNG
        fun Find(Outer: UObject, ResourceName: String): ImageSequenceProtocol_PNG
        fun GetDefaultObject(): ImageSequenceProtocol_PNG
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ImageSequenceProtocol_PNG
        fun C(Other: UObject): ImageSequenceProtocol_PNG
        fun C(Other: Any): ImageSequenceProtocol_PNG
    }
}

external open class ImageSequenceProtocol_JPG : CompressedImageSequenceProtocol {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ImageSequenceProtocol_JPG
        fun Find(Outer: UObject, ResourceName: String): ImageSequenceProtocol_JPG
        fun GetDefaultObject(): ImageSequenceProtocol_JPG
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ImageSequenceProtocol_JPG
        fun C(Other: UObject): ImageSequenceProtocol_JPG
        fun C(Other: Any): ImageSequenceProtocol_JPG
    }
}

external open class ImageSequenceProtocol_EXR : ImageSequenceProtocol {
    constructor()
    constructor(Outer: UObject)
    open var bCompressed: Boolean
    open var CaptureGamut: String /* "HCGM_Rec709" | "HCGM_P3DCI" | "HCGM_Rec2020" | "HCGM_ACES" | "HCGM_ACEScg" | "HCGM_Linear" | "HCGM_MAX" */

    companion object {
        fun Load(ResourceName: String): ImageSequenceProtocol_EXR
        fun Find(Outer: UObject, ResourceName: String): ImageSequenceProtocol_EXR
        fun GetDefaultObject(): ImageSequenceProtocol_EXR
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ImageSequenceProtocol_EXR
        fun C(Other: UObject): ImageSequenceProtocol_EXR
        fun C(Other: Any): ImageSequenceProtocol_EXR
    }
}

external open class MovieSceneCaptureInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneCaptureInterface
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCaptureInterface
        fun GetDefaultObject(): MovieSceneCaptureInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCaptureInterface
        fun C(Other: UObject): MovieSceneCaptureInterface
        fun C(Other: Any): MovieSceneCaptureInterface
    }
}

external open class CaptureResolution {
    open var ResX: Number
    open var ResY: Number
    open fun clone(): CaptureResolution

    companion object {
        fun C(Other: UObject): CaptureResolution
        fun C(Other: Any): CaptureResolution
    }
}

external open class MovieSceneCaptureSettings {
    open var OutputDirectory: DirectoryPath
    open var GameModeOverride: UnrealEngineClass
    open var OutputFormat: String
    open var bOverwriteExisting: Boolean
    open var bUseRelativeFrameNumbers: Boolean
    open var HandleFrames: Number
    open var MovieExtension: String
    open var ZeroPadFrameNumbers: Number
    open var FrameRate: FrameRate
    open var bUseCustomFrameRate: Boolean
    open var CustomFrameRate: FrameRate
    open var Resolution: CaptureResolution
    open var bEnableTextureStreaming: Boolean
    open var bCinematicEngineScalability: Boolean
    open var bCinematicMode: Boolean
    open var bAllowMovement: Boolean
    open var bAllowTurning: Boolean
    open var bShowPlayer: Boolean
    open var bShowHUD: Boolean
    open var bUsePathTracer: Boolean
    open var PathTracerSamplePerPixel: Number
    open fun clone(): MovieSceneCaptureSettings

    companion object {
        fun C(Other: UObject): MovieSceneCaptureSettings
        fun C(Other: Any): MovieSceneCaptureSettings
    }
}

external open class MovieSceneCapture : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ImageCaptureProtocolType: SoftClassPath
    open var AudioCaptureProtocolType: SoftClassPath
    open var ImageCaptureProtocol: MovieSceneImageCaptureProtocolBase
    open var AudioCaptureProtocol: MovieSceneAudioCaptureProtocolBase
    open var Settings: MovieSceneCaptureSettings
    open var bUseSeparateProcess: Boolean
    open var bCloseEditorWhenCaptureStarts: Boolean
    open var AdditionalCommandLineArguments: String
    open var InheritedCommandLineArguments: String
    open fun SetImageCaptureProtocolType(ProtocolType: UnrealEngineClass)
    open fun SetAudioCaptureProtocolType(ProtocolType: UnrealEngineClass)
    open fun GetImageCaptureProtocol(): MovieSceneCaptureProtocolBase
    open fun GetAudioCaptureProtocol(): MovieSceneCaptureProtocolBase
    open fun RenderMovie(OnFinishedCallback: UnrealEngineDelegate<(bSuccess: Boolean) -> Unit>): Boolean

    companion object {
        fun Load(ResourceName: String): MovieSceneCapture
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCapture
        fun GetDefaultObject(): MovieSceneCapture
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCapture
        fun C(Other: UObject): MovieSceneCapture
        fun C(Other: Any): MovieSceneCapture
        fun RenderMovie(InCaptureSettings: MovieSceneCapture, OnFinishedCallback: UnrealEngineDelegate<(bSuccess: Boolean) -> Unit>): Boolean
    }
}

external open class LevelCapture : MovieSceneCapture {
    constructor()
    constructor(Outer: UObject)
    open var bAutoStartCapture: Boolean
    open var PrerequisiteActorId: Guid

    companion object {
        fun Load(ResourceName: String): LevelCapture
        fun Find(Outer: UObject, ResourceName: String): LevelCapture
        fun GetDefaultObject(): LevelCapture
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelCapture
        fun C(Other: UObject): LevelCapture
        fun C(Other: Any): LevelCapture
    }
}

external open class MovieSceneCaptureEnvironment : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneCaptureEnvironment
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCaptureEnvironment
        fun GetDefaultObject(): MovieSceneCaptureEnvironment
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCaptureEnvironment
        fun IsCaptureInProgress(): Boolean
        fun GetCaptureFrameNumber(): Number
        fun GetCaptureElapsedTime(): Number
        fun FindImageCaptureProtocol(): MovieSceneImageCaptureProtocolBase
        fun FindAudioCaptureProtocol(): MovieSceneAudioCaptureProtocolBase
        fun C(Other: UObject): MovieSceneCaptureEnvironment
        fun C(Other: Any): MovieSceneCaptureEnvironment
    }
}

external open class CapturedPixelsID {
    open var Identifiers: Any
    open fun clone(): CapturedPixelsID

    companion object {
        fun C(Other: UObject): CapturedPixelsID
        fun C(Other: Any): CapturedPixelsID
    }
}

external open class CapturedPixels {
    open fun clone(): CapturedPixels

    companion object {
        fun C(Other: UObject): CapturedPixels
        fun C(Other: Any): CapturedPixels
    }
}

external open class FrameMetrics {
    open var TotalElapsedTime: Number
    open var FrameDelta: Number
    open var FrameNumber: Number
    open var NumDroppedFrames: Number
    open fun clone(): FrameMetrics

    companion object {
        fun C(Other: UObject): FrameMetrics
        fun C(Other: Any): FrameMetrics
    }
}

external open class UserDefinedCaptureProtocol : MovieSceneImageCaptureProtocolBase {
    constructor()
    constructor(Outer: UObject)
    open var World: World
    open fun StopCapturingFinalPixels()
    open fun StartCapturingFinalPixels(StreamID: CapturedPixelsID)
    open fun ResolveBuffer(Buffer: Texture, BufferID: CapturedPixelsID)
    open fun OnWarmUp()
    open fun OnTick()
    open fun OnStartCapture()
    open fun OnSetup(): Boolean
    open fun OnPreTick()
    open fun OnPixelsReceived(Pixels: CapturedPixels, ID: CapturedPixelsID, FrameMetrics: FrameMetrics)
    open fun OnPauseCapture()
    open fun OnFinalize()
    open fun OnCaptureFrame()
    open fun OnCanFinalize(): Boolean
    open fun OnBeginFinalize()
    open fun GetCurrentFrameMetrics(): FrameMetrics
    open fun GenerateFilename(InFrameMetrics: FrameMetrics): String

    companion object {
        fun Load(ResourceName: String): UserDefinedCaptureProtocol
        fun Find(Outer: UObject, ResourceName: String): UserDefinedCaptureProtocol
        fun GetDefaultObject(): UserDefinedCaptureProtocol
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UserDefinedCaptureProtocol
        fun C(Other: UObject): UserDefinedCaptureProtocol
        fun C(Other: Any): UserDefinedCaptureProtocol
    }
}

external open class UserDefinedImageCaptureProtocol : UserDefinedCaptureProtocol {
    constructor()
    constructor(Outer: UObject)
    open var Format: String /* "PNG" | "JPG" | "BMP" | "EXR" | "EDesiredImageFormat_MAX" */
    open var bEnableCompression: Boolean
    open var CompressionQuality: Number
    open fun WriteImageToDisk(PixelData: CapturedPixels, StreamID: CapturedPixelsID, FrameMetrics: FrameMetrics, bCopyImageData: Boolean)
    open fun GenerateFilenameForCurrentFrame(): String
    open fun GenerateFilenameForBuffer(Buffer: Texture, StreamID: CapturedPixelsID): String

    companion object {
        fun Load(ResourceName: String): UserDefinedImageCaptureProtocol
        fun Find(Outer: UObject, ResourceName: String): UserDefinedImageCaptureProtocol
        fun GetDefaultObject(): UserDefinedImageCaptureProtocol
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UserDefinedImageCaptureProtocol
        fun C(Other: UObject): UserDefinedImageCaptureProtocol
        fun C(Other: Any): UserDefinedImageCaptureProtocol
    }
}

external open class VideoCaptureProtocol : FrameGrabberProtocol {
    constructor()
    constructor(Outer: UObject)
    open var bUseCompression: Boolean
    open var CompressionQuality: Number

    companion object {
        fun Load(ResourceName: String): VideoCaptureProtocol
        fun Find(Outer: UObject, ResourceName: String): VideoCaptureProtocol
        fun GetDefaultObject(): VideoCaptureProtocol
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VideoCaptureProtocol
        fun C(Other: UObject): VideoCaptureProtocol
        fun C(Other: Any): VideoCaptureProtocol
    }
}

external open class SequenceRecordingBase : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SequenceRecordingBase
        fun Find(Outer: UObject, ResourceName: String): SequenceRecordingBase
        fun GetDefaultObject(): SequenceRecordingBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SequenceRecordingBase
        fun C(Other: UObject): SequenceRecordingBase
        fun C(Other: Any): SequenceRecordingBase
    }
}

external open class ActorRecordingSettings {
    open var Settings: Array<UObject>
    open fun clone(): ActorRecordingSettings

    companion object {
        fun C(Other: UObject): ActorRecordingSettings
        fun C(Other: Any): ActorRecordingSettings
    }
}

external open class AnimationRecordingSettings {
    open var bRecordInWorldSpace: Boolean
    open var bRemoveRootAnimation: Boolean
    open var bAutoSaveAsset: Boolean
    open var SampleFrameRate: FrameRate
    open var Length: Number
    open var InterpMode: String /* "RCIM_Linear" | "RCIM_Constant" | "RCIM_Cubic" | "RCIM_None" | "RCIM_MAX" */
    open var TangentMode: String /* "RCTM_Auto" | "RCTM_User" | "RCTM_Break" | "RCTM_None" | "RCTM_MAX" */
    open var bRecordTransforms: Boolean
    open var bRecordMorphTargets: Boolean
    open var bRecordAttributeCurves: Boolean
    open var bRecordMaterialCurves: Boolean
    open fun clone(): AnimationRecordingSettings

    companion object {
        fun C(Other: UObject): AnimationRecordingSettings
        fun C(Other: Any): AnimationRecordingSettings
    }
}

external open class ActorRecording : SequenceRecordingBase {
    constructor()
    constructor(Outer: UObject)
    open var ActorSettings: ActorRecordingSettings
    open var bActive: Boolean
    open var bCreateLevelSequence: Boolean
    open var TargetLevelSequence: LevelSequence
    open var TargetName: String
    open var TakeNumber: Any
    open var bSpecifyTargetAnimation: Boolean
    open var TargetAnimation: AnimSequence
    open var AnimationSettings: AnimationRecordingSettings
    open var bRecordToPossessable: Boolean
    open var ActorToRecord: Actor

    companion object {
        fun Load(ResourceName: String): ActorRecording
        fun Find(Outer: UObject, ResourceName: String): ActorRecording
        fun GetDefaultObject(): ActorRecording
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorRecording
        fun C(Other: UObject): ActorRecording
        fun C(Other: Any): ActorRecording
    }
}

external open class AnimationRecordingParameters : UObject {
    constructor()
    constructor(Outer: UObject)
    open var SampleFrameRate: FrameRate
    open var bEndAfterDuration: Boolean
    open var MaximumDurationSeconds: Number
    open var SampleRate: Number

    companion object {
        fun Load(ResourceName: String): AnimationRecordingParameters
        fun Find(Outer: UObject, ResourceName: String): AnimationRecordingParameters
        fun GetDefaultObject(): AnimationRecordingParameters
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationRecordingParameters
        fun C(Other: UObject): AnimationRecordingParameters
        fun C(Other: Any): AnimationRecordingParameters
    }
}

external open class MovieScene3DTransformSectionRecorderSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bRecordTransforms: Boolean

    companion object {
        fun Load(ResourceName: String): MovieScene3DTransformSectionRecorderSettings
        fun Find(Outer: UObject, ResourceName: String): MovieScene3DTransformSectionRecorderSettings
        fun GetDefaultObject(): MovieScene3DTransformSectionRecorderSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScene3DTransformSectionRecorderSettings
        fun C(Other: UObject): MovieScene3DTransformSectionRecorderSettings
        fun C(Other: Any): MovieScene3DTransformSectionRecorderSettings
    }
}

external open class SequenceRecorderActorGroup : UObject {
    constructor()
    constructor(Outer: UObject)
    open var GroupName: String
    open var SequenceName: String
    open var SequenceRecordingBasePath: DirectoryPath
    open var bSpecifyTargetLevelSequence: Boolean
    open var TargetLevelSequence: LevelSequence
    open var bDuplicateTargetLevelSequence: Boolean
    open var bRecordTargetLevelSequenceLength: Boolean
    open var RecordedActors: Array<ActorRecording>

    companion object {
        fun Load(ResourceName: String): SequenceRecorderActorGroup
        fun Find(Outer: UObject, ResourceName: String): SequenceRecorderActorGroup
        fun GetDefaultObject(): SequenceRecorderActorGroup
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SequenceRecorderActorGroup
        fun C(Other: UObject): SequenceRecorderActorGroup
        fun C(Other: Any): SequenceRecorderActorGroup
    }
}

external open class SequenceRecorderGroup(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var ActorGroups: Array<SequenceRecorderActorGroup>

    companion object {
        fun GetDefaultObject(): SequenceRecorderGroup
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SequenceRecorderGroup
        fun C(Other: UObject): SequenceRecorderGroup
        fun C(Other: Any): SequenceRecorderGroup
    }
}

external open class BlueprintFunctionLibrary : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlueprintFunctionLibrary
        fun Find(Outer: UObject, ResourceName: String): BlueprintFunctionLibrary
        fun GetDefaultObject(): BlueprintFunctionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintFunctionLibrary
        fun C(Other: UObject): BlueprintFunctionLibrary
        fun C(Other: Any): BlueprintFunctionLibrary
    }
}

external open class SequenceRecorderBlueprintLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SequenceRecorderBlueprintLibrary
        fun Find(Outer: UObject, ResourceName: String): SequenceRecorderBlueprintLibrary
        fun GetDefaultObject(): SequenceRecorderBlueprintLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SequenceRecorderBlueprintLibrary
        fun StopRecordingSequence()
        fun StartRecordingSequence(ActorsToRecord: Array<Actor>)
        fun IsRecordingSequence(): Boolean
        fun C(Other: UObject): SequenceRecorderBlueprintLibrary
        fun C(Other: Any): SequenceRecorderBlueprintLibrary
    }
}

external object EAudioRecordingMode {
    var None: String /* "None" */
    var AudioTrack: String /* "AudioTrack" */
    var EAudioRecordingMode_MAX: String /* "EAudioRecordingMode_MAX" */
}

external open class SequenceRecorderActorFilter {
    open var ActorClassesToRecord: Array<UnrealEngineClass>
    open fun clone(): SequenceRecorderActorFilter

    companion object {
        fun C(Other: UObject): SequenceRecorderActorFilter
        fun C(Other: Any): SequenceRecorderActorFilter
    }
}

external open class PropertiesToRecordForClass {
    open var Class: UnrealEngineClass
    open var Properties: Array<String>
    open fun clone(): PropertiesToRecordForClass

    companion object {
        fun C(Other: UObject): PropertiesToRecordForClass
        fun C(Other: Any): PropertiesToRecordForClass
    }
}

external open class PropertiesToRecordForActorClass {
    open var Class: UnrealEngineClass
    open var Properties: Array<String>
    open fun clone(): PropertiesToRecordForActorClass

    companion object {
        fun C(Other: UObject): PropertiesToRecordForActorClass
        fun C(Other: Any): PropertiesToRecordForActorClass
    }
}

external open class SettingsForActorClass {
    open var Class: UnrealEngineClass
    open var bRecordToPossessable: Boolean
    open fun clone(): SettingsForActorClass

    companion object {
        fun C(Other: UObject): SettingsForActorClass
        fun C(Other: Any): SettingsForActorClass
    }
}

external open class SequenceRecorderSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bCreateLevelSequence: Boolean
    open var bImmersiveMode: Boolean
    open var SequenceLength: Number
    open var RecordingDelay: Number
    open var bAllowLooping: Boolean
    open var GlobalTimeDilation: Number
    open var bIgnoreTimeDilation: Boolean
    open var AnimationSubDirectory: String
    open var RecordAudio: String /* "None" | "AudioTrack" | "EAudioRecordingMode_MAX" */
    open var AudioGain: Number
    open var bSplitAudioChannelsIntoSeparateTracks: Boolean
    open var bReplaceRecordedAudio: Boolean
    open var AudioTrackName: String
    open var AudioSubDirectory: String
    open var bRecordNearbySpawnedActors: Boolean
    open var NearbyActorRecordingProximity: Number
    open var bRecordWorldSettingsActor: Boolean
    open var bReduceKeys: Boolean
    open var bAutoSaveAsset: Boolean
    open var ActorFilter: SequenceRecorderActorFilter
    open var LevelSequenceActorsToTrigger: Array<Any>
    open var DefaultAnimationSettings: AnimationRecordingSettings
    open var bRecordSequencerSpawnedActors: Boolean
    open var ClassesAndPropertiesToRecord: Array<PropertiesToRecordForClass>
    open var ActorsAndPropertiesToRecord: Array<PropertiesToRecordForActorClass>
    open var PerActorSettings: Array<SettingsForActorClass>

    companion object {
        fun Load(ResourceName: String): SequenceRecorderSettings
        fun Find(Outer: UObject, ResourceName: String): SequenceRecorderSettings
        fun GetDefaultObject(): SequenceRecorderSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SequenceRecorderSettings
        fun C(Other: UObject): SequenceRecorderSettings
        fun C(Other: Any): SequenceRecorderSettings
    }
}

external open class LevelSequenceBurnInInitSettings : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LevelSequenceBurnInInitSettings
        fun Find(Outer: UObject, ResourceName: String): LevelSequenceBurnInInitSettings
        fun GetDefaultObject(): LevelSequenceBurnInInitSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelSequenceBurnInInitSettings
        fun C(Other: UObject): LevelSequenceBurnInInitSettings
        fun C(Other: Any): LevelSequenceBurnInInitSettings
    }
}

external open class LevelSequenceBurnInOptions : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bUseBurnIn: Boolean
    open var BurnInClass: SoftClassPath
    open var Settings: LevelSequenceBurnInInitSettings
    open fun SetBurnIn(InBurnInClass: SoftClassPath)

    companion object {
        fun Load(ResourceName: String): LevelSequenceBurnInOptions
        fun Find(Outer: UObject, ResourceName: String): LevelSequenceBurnInOptions
        fun GetDefaultObject(): LevelSequenceBurnInOptions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelSequenceBurnInOptions
        fun C(Other: UObject): LevelSequenceBurnInOptions
        fun C(Other: Any): LevelSequenceBurnInOptions
    }
}

external open class AutomatedLevelSequenceCapture : MovieSceneCapture {
    constructor()
    constructor(Outer: UObject)
    open var LevelSequenceAsset: SoftObjectPath
    open var ShotName: String
    open var bUseCustomStartFrame: Boolean
    open var CustomStartFrame: FrameNumber
    open var bUseCustomEndFrame: Boolean
    open var CustomEndFrame: FrameNumber
    open var WarmUpFrameCount: Number
    open var DelayBeforeWarmUp: Number
    open var DelayBeforeShotWarmUp: Number
    open var DelayEveryFrame: Number
    open var BurnInOptions: LevelSequenceBurnInOptions
    open var bWriteEditDecisionList: Boolean
    open var bWriteFinalCutProXML: Boolean
    open var LevelSequenceActor: Actor

    companion object {
        fun Load(ResourceName: String): AutomatedLevelSequenceCapture
        fun Find(Outer: UObject, ResourceName: String): AutomatedLevelSequenceCapture
        fun GetDefaultObject(): AutomatedLevelSequenceCapture
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AutomatedLevelSequenceCapture
        fun C(Other: UObject): AutomatedLevelSequenceCapture
        fun C(Other: Any): AutomatedLevelSequenceCapture
    }
}

external open class BoolChannelKeyProxy : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Time: FrameNumber
    open var bValue: Boolean

    companion object {
        fun Load(ResourceName: String): BoolChannelKeyProxy
        fun Find(Outer: UObject, ResourceName: String): BoolChannelKeyProxy
        fun GetDefaultObject(): BoolChannelKeyProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BoolChannelKeyProxy
        fun C(Other: UObject): BoolChannelKeyProxy
        fun C(Other: Any): BoolChannelKeyProxy
    }
}

external open class MovieSceneDoubleValue {
    open var Value: Any
    open var Tangent: MovieSceneTangentData
    open var InterpMode: String /* "RCIM_Linear" | "RCIM_Constant" | "RCIM_Cubic" | "RCIM_None" | "RCIM_MAX" */
    open var TangentMode: String /* "RCTM_Auto" | "RCTM_User" | "RCTM_Break" | "RCTM_None" | "RCTM_MAX" */
    open var PaddingByte: Number
    open fun clone(): MovieSceneDoubleValue

    companion object {
        fun C(Other: UObject): MovieSceneDoubleValue
        fun C(Other: Any): MovieSceneDoubleValue
    }
}

external open class DoubleChannelKeyProxy : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Time: FrameNumber
    open var Value: MovieSceneDoubleValue

    companion object {
        fun Load(ResourceName: String): DoubleChannelKeyProxy
        fun Find(Outer: UObject, ResourceName: String): DoubleChannelKeyProxy
        fun GetDefaultObject(): DoubleChannelKeyProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DoubleChannelKeyProxy
        fun C(Other: UObject): DoubleChannelKeyProxy
        fun C(Other: Any): DoubleChannelKeyProxy
    }
}

external open class FloatChannelKeyProxy : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Time: FrameNumber
    open var Value: MovieSceneFloatValue

    companion object {
        fun Load(ResourceName: String): FloatChannelKeyProxy
        fun Find(Outer: UObject, ResourceName: String): FloatChannelKeyProxy
        fun GetDefaultObject(): FloatChannelKeyProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FloatChannelKeyProxy
        fun C(Other: UObject): FloatChannelKeyProxy
        fun C(Other: Any): FloatChannelKeyProxy
    }
}

external open class IntegerChannelKeyProxy : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Time: FrameNumber
    open var Value: Number

    companion object {
        fun Load(ResourceName: String): IntegerChannelKeyProxy
        fun Find(Outer: UObject, ResourceName: String): IntegerChannelKeyProxy
        fun GetDefaultObject(): IntegerChannelKeyProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): IntegerChannelKeyProxy
        fun C(Other: UObject): IntegerChannelKeyProxy
        fun C(Other: Any): IntegerChannelKeyProxy
    }
}

external open class K2Node_GetSequenceBinding : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var SourceSequence: SoftObjectPath
    open var Binding: MovieSceneObjectBindingID

    companion object {
        fun Load(ResourceName: String): K2Node_GetSequenceBinding
        fun Find(Outer: UObject, ResourceName: String): K2Node_GetSequenceBinding
        fun GetDefaultObject(): K2Node_GetSequenceBinding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_GetSequenceBinding
        fun C(Other: UObject): K2Node_GetSequenceBinding
        fun C(Other: Any): K2Node_GetSequenceBinding
    }
}

external open class MovieSceneEventBlueprintExtension : BlueprintExtension {
    constructor()
    constructor(Outer: UObject)
    open var EventSections: Array<Any>

    companion object {
        fun Load(ResourceName: String): MovieSceneEventBlueprintExtension
        fun Find(Outer: UObject, ResourceName: String): MovieSceneEventBlueprintExtension
        fun GetDefaultObject(): MovieSceneEventBlueprintExtension
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneEventBlueprintExtension
        fun C(Other: UObject): MovieSceneEventBlueprintExtension
        fun C(Other: Any): MovieSceneEventBlueprintExtension
    }
}

external open class MovieSceneToolsPropertyTrackSettings {
    open var ComponentName: String
    open var PropertyName: String
    open fun clone(): MovieSceneToolsPropertyTrackSettings

    companion object {
        fun C(Other: UObject): MovieSceneToolsPropertyTrackSettings
        fun C(Other: Any): MovieSceneToolsPropertyTrackSettings
    }
}

external object EMovieSceneToolsPropertyTrackType {
    var FloatTrack: String /* "FloatTrack" */
    var DoubleTrack: String /* "DoubleTrack" */
    var EMovieSceneToolsPropertyTrackType_MAX: String /* "EMovieSceneToolsPropertyTrackType_MAX" */
}

external open class MovieSceneToolsFbxSettings {
    open var FbxPropertyName: String
    open var PropertyPath: MovieSceneToolsPropertyTrackSettings
    open var PropertyType: String /* "FloatTrack" | "DoubleTrack" | "EMovieSceneToolsPropertyTrackType_MAX" */
    open fun clone(): MovieSceneToolsFbxSettings

    companion object {
        fun C(Other: UObject): MovieSceneToolsFbxSettings
        fun C(Other: Any): MovieSceneToolsFbxSettings
    }
}

external open class MovieSceneToolsProjectSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var DefaultStartTime: Number
    open var DefaultDuration: Number
    open var ShotDirectory: String
    open var ShotPrefix: String
    open var FirstShotNumber: Any
    open var ShotIncrement: Any
    open var ShotNumDigits: Any
    open var TakeNumDigits: Any
    open var FirstTakeNumber: Any
    open var TakeSeparator: String
    open var SubSequenceSeparator: String
    open var FbxSettings: Array<MovieSceneToolsFbxSettings>

    companion object {
        fun Load(ResourceName: String): MovieSceneToolsProjectSettings
        fun Find(Outer: UObject, ResourceName: String): MovieSceneToolsProjectSettings
        fun GetDefaultObject(): MovieSceneToolsProjectSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneToolsProjectSettings
        fun C(Other: UObject): MovieSceneToolsProjectSettings
        fun C(Other: Any): MovieSceneToolsProjectSettings
    }
}

external object EThumbnailQuality {
    var Draft: String /* "Draft" */
    var Normal: String /* "Normal" */
    var Best: String /* "Best" */
    var EThumbnailQuality_MAX: String /* "EThumbnailQuality_MAX" */
}

external open class MovieSceneUserThumbnailSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bDrawThumbnails: Boolean
    open var bDrawSingleThumbnails: Boolean
    open var ThumbnailSize: IntPoint
    open var Quality: String /* "Draft" | "Normal" | "Best" | "EThumbnailQuality_MAX" */

    companion object {
        fun Load(ResourceName: String): MovieSceneUserThumbnailSettings
        fun Find(Outer: UObject, ResourceName: String): MovieSceneUserThumbnailSettings
        fun GetDefaultObject(): MovieSceneUserThumbnailSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneUserThumbnailSettings
        fun C(Other: UObject): MovieSceneUserThumbnailSettings
        fun C(Other: Any): MovieSceneUserThumbnailSettings
    }
}

external open class InterchangeAssetImportData : AssetImportData {
    constructor()
    constructor(Outer: UObject)
    open var NodeContainer: InterchangeBaseNodeContainer
    open var NodeUniqueID: String
    open var Pipelines: Array<InterchangePipelineBase>
    open fun ScriptGetFirstFilename(): String
    open fun ScriptExtractFilenames(): Array<String>
    open fun ScriptExtractDisplayLabels(): Array<String>

    companion object {
        fun Load(ResourceName: String): InterchangeAssetImportData
        fun Find(Outer: UObject, ResourceName: String): InterchangeAssetImportData
        fun GetDefaultObject(): InterchangeAssetImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterchangeAssetImportData
        fun C(Other: UObject): InterchangeAssetImportData
        fun C(Other: Any): InterchangeAssetImportData
    }
}

external open class ImportAssetParameters {
    open var ReimportAsset: UObject
    open var bIsAutomated: Boolean
    open var OverridePipelines: Array<InterchangePipelineBase>
    open var OnAssetDone: UnrealEngineDelegate<(UObject: UObject) -> Unit>
    open var OnAssetsImportDone: UnrealEngineDelegate<(Objects: Array<UObject>) -> Unit>
    open var OnSceneObjectDone: UnrealEngineDelegate<(UObject: UObject) -> Unit>
    open var OnSceneImportDone: UnrealEngineDelegate<(Objects: Array<UObject>) -> Unit>
    open fun clone(): ImportAssetParameters

    companion object {
        fun C(Other: UObject): ImportAssetParameters
        fun C(Other: Any): ImportAssetParameters
    }
}

external open class InterchangeManager : UObject {
    constructor()
    constructor(Outer: UObject)
    open var RegisteredTranslatorsClass: Any
    open var RegisteredFactoryClasses: Any
    open var RegisteredWriters: Any
    open var TextureOnlyTranslatorClass: Any
    open fun ImportScene(ContentPath: String, SourceData: InterchangeSourceData, ImportAssetParameters: ImportAssetParameters): Boolean
    open fun ImportAsset(ContentPath: String, SourceData: InterchangeSourceData, ImportAssetParameters: ImportAssetParameters): Boolean
    open fun GetRegisteredFactoryClass(ClassToMake: UnrealEngineClass): UnrealEngineClass
    open fun ExportScene(World: UObject, bIsAutomated: Boolean): Boolean
    open fun ExportAsset(Asset: UObject, bIsAutomated: Boolean): Boolean

    companion object {
        fun Load(ResourceName: String): InterchangeManager
        fun Find(Outer: UObject, ResourceName: String): InterchangeManager
        fun GetDefaultObject(): InterchangeManager
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterchangeManager
        fun GetInterchangeManagerScripted(): InterchangeManager
        fun CreateSourceData(InFilename: String): InterchangeSourceData
        fun C(Other: UObject): InterchangeManager
        fun C(Other: Any): InterchangeManager
    }
}

external object EInterchangePipelineConfigurationDialogResult {
    var Cancel: String /* "Cancel" */
    var Import: String /* "Import" */
    var ImportAll: String /* "ImportAll" */
    var EInterchangePipelineConfigurationDialogResult_MAX: String /* "EInterchangePipelineConfigurationDialogResult_MAX" */
}

external open class InterchangePipelineConfigurationBase : UObject {
    constructor()
    constructor(Outer: UObject)
    open fun ScriptedShowPipelineConfigurationDialog(): String /* "Cancel" | "Import" | "ImportAll" | "EInterchangePipelineConfigurationDialogResult_MAX" */

    companion object {
        fun Load(ResourceName: String): InterchangePipelineConfigurationBase
        fun Find(Outer: UObject, ResourceName: String): InterchangePipelineConfigurationBase
        fun GetDefaultObject(): InterchangePipelineConfigurationBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterchangePipelineConfigurationBase
        fun C(Other: UObject): InterchangePipelineConfigurationBase
        fun C(Other: Any): InterchangePipelineConfigurationBase
    }
}

external open class InterchangeProjectSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var PipelineStacks: Any
    open var DefaultPipelineStack: String
    open var PipelineConfigurationDialogClass: Class
    open var bShowPipelineStacksConfigurationDialog: Boolean
    open var bUseInterchangeWhenImportingIntoLevel: Boolean
    open var DefaultScenePipelineStack: String

    companion object {
        fun Load(ResourceName: String): InterchangeProjectSettings
        fun Find(Outer: UObject, ResourceName: String): InterchangeProjectSettings
        fun GetDefaultObject(): InterchangeProjectSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterchangeProjectSettings
        fun C(Other: UObject): InterchangeProjectSettings
        fun C(Other: Any): InterchangeProjectSettings
    }
}

external open class AdvancedCopyCustomization : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AdvancedCopyCustomization
        fun Find(Outer: UObject, ResourceName: String): AdvancedCopyCustomization
        fun GetDefaultObject(): AdvancedCopyCustomization
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AdvancedCopyCustomization
        fun C(Other: UObject): AdvancedCopyCustomization
        fun C(Other: Any): AdvancedCopyCustomization
    }
}

external open class AssetToolsImpl : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AssetToolsImpl
        fun Find(Outer: UObject, ResourceName: String): AssetToolsImpl
        fun GetDefaultObject(): AssetToolsImpl
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AssetToolsImpl
        fun C(Other: UObject): AssetToolsImpl
        fun C(Other: Any): AssetToolsImpl
    }
}

external open class AdvancedCopyMap {
    open var ClassToCopy: SoftClassPath
    open var AdvancedCopyCustomization: SoftClassPath
    open fun clone(): AdvancedCopyMap

    companion object {
        fun C(Other: UObject): AdvancedCopyMap
        fun C(Other: Any): AdvancedCopyMap
    }
}

external open class AssetToolsSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var AdvancedCopyCustomizations: Array<AdvancedCopyMap>

    companion object {
        fun Load(ResourceName: String): AssetToolsSettings
        fun Find(Outer: UObject, ResourceName: String): AssetToolsSettings
        fun GetDefaultObject(): AssetToolsSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AssetToolsSettings
        fun C(Other: UObject): AssetToolsSettings
        fun C(Other: Any): AssetToolsSettings
    }
}

external open class AssetRenameData {
    open var Asset: Any
    open var NewPackagePath: String
    open var NewName: String
    open var OldObjectPath: SoftObjectPath
    open var NewObjectPath: SoftObjectPath
    open var bOnlyFixSoftReferences: Boolean
    open fun clone(): AssetRenameData

    companion object {
        fun C(Other: UObject): AssetRenameData
        fun C(Other: Any): AssetRenameData
    }
}

external object EAssetRenameResult {
    var Failure: String /* "Failure" */
    var Success: String /* "Success" */
    var Pending: String /* "Pending" */
    var EAssetRenameResult_MAX: String /* "EAssetRenameResult_MAX" */
}

external open class AutomatedAssetImportData : UObject {
    constructor()
    constructor(Outer: UObject)
    open var GroupName: String
    open var Filenames: Array<String>
    open var DestinationPath: String
    open var FactoryName: String
    open var bReplaceExisting: Boolean
    open var bSkipReadOnly: Boolean
    open var Factory: Factory
    open var LevelToLoad: String

    companion object {
        fun Load(ResourceName: String): AutomatedAssetImportData
        fun Find(Outer: UObject, ResourceName: String): AutomatedAssetImportData
        fun GetDefaultObject(): AutomatedAssetImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AutomatedAssetImportData
        fun C(Other: UObject): AutomatedAssetImportData
        fun C(Other: Any): AutomatedAssetImportData
    }
}

external open class Factory : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bCreateNew: Boolean
    open var SupportedClass: UnrealEngineClass
    open var ContextClass: UnrealEngineClass
    open var Formats: Array<String>
    open var bEditAfterNew: Boolean
    open var bEditorImport: Boolean
    open var bText: Boolean
    open var ImportPriority: Number
    open var AutomatedImportData: AutomatedAssetImportData
    open var AssetImportTask: AssetImportTask
    open var OverwriteYesOrNoToAllState: Number
    open fun ScriptFactoryCreateFile(InTask: AssetImportTask): Boolean
    open fun ScriptFactoryCanImport(Filename: String): Boolean

    companion object {
        fun Load(ResourceName: String): Factory
        fun Find(Outer: UObject, ResourceName: String): Factory
        fun GetDefaultObject(): Factory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Factory
        fun C(Other: UObject): Factory
        fun C(Other: Any): Factory
    }
}

external open class AssetImportTask : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Filename: String
    open var DestinationPath: String
    open var DestinationName: String
    open var bReplaceExisting: Boolean
    open var bReplaceExistingSettings: Boolean
    open var bAutomated: Boolean
    open var bSave: Boolean
    open var Factory: Factory
    open var Options: UObject
    open var ImportedObjectPaths: Array<String>
    open var Result: Array<UObject>

    companion object {
        fun Load(ResourceName: String): AssetImportTask
        fun Find(Outer: UObject, ResourceName: String): AssetImportTask
        fun GetDefaultObject(): AssetImportTask
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AssetImportTask
        fun C(Other: UObject): AssetImportTask
        fun C(Other: Any): AssetImportTask
    }
}

external interface `T$552` {
    var ReferencingObjects: Array<UObject>
}

external interface `T$553` {
    var OutPackageName: String
    var OutAssetName: String
}

external open class AssetTools : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun RenameReferencingSoftObjectPaths(PackagesToCheck: Array<Package>, AssetRedirectorMap: Any)
    open fun RenameAssetsWithDialog(AssetsAndNames: Array<AssetRenameData>, bAutoCheckout: Boolean): String /* "Failure" | "Success" | "Pending" | "EAssetRenameResult_MAX" */
    open fun RenameAssets(AssetsAndNames: Array<AssetRenameData>): Boolean
    open fun OpenEditorForAssets(Assets: Array<UObject>)
    open fun ImportAssetTasks(ImportTasks: Array<AssetImportTask>)
    open fun ImportAssetsWithDialog(DestinationPath: String): Array<UObject>
    open fun ImportAssetsAutomated(ImportData: AutomatedAssetImportData): Array<UObject>
    open fun FindSoftReferencesToObject(TargetObject: SoftObjectPath, ReferencingObjects: Array<UObject> = definedExternally): `T$552`
    open fun ExportAssetsWithDialog(AssetsToExport: Array<String>, bPromptForIndividualFilenames: Boolean)
    open fun ExportAssets(AssetsToExport: Array<String>, ExportPath: String)
    open fun DuplicateAssetWithDialogAndTitle(AssetName: String, PackagePath: String, OriginalObject: UObject, DialogTitle: String): UObject
    open fun DuplicateAssetWithDialog(AssetName: String, PackagePath: String, OriginalObject: UObject): UObject
    open fun DuplicateAsset(AssetName: String, PackagePath: String, OriginalObject: UObject): UObject
    open fun CreateUniqueAssetName(InBasePackageName: String, InSuffix: String, OutPackageName: String = definedExternally, OutAssetName: String = definedExternally): `T$553`
    open fun CreateAssetWithDialog(AssetName: String, PackagePath: String, AssetClass: UnrealEngineClass, Factory: Factory, CallingContext: String, bCallConfigureProperties: Boolean): UObject
    open fun CreateAsset(AssetName: String, PackagePath: String, AssetClass: UnrealEngineClass, Factory: Factory, CallingContext: String): UObject

    companion object {
        fun Load(ResourceName: String): AssetTools
        fun Find(Outer: UObject, ResourceName: String): AssetTools
        fun GetDefaultObject(): AssetTools
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AssetTools
        fun C(Other: UObject): AssetTools
        fun C(Other: Any): AssetTools
    }
}

external open class AssetToolsHelpers : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AssetToolsHelpers
        fun Find(Outer: UObject, ResourceName: String): AssetToolsHelpers
        fun GetDefaultObject(): AssetToolsHelpers
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AssetToolsHelpers
        fun C(Other: UObject): AssetToolsHelpers
        fun C(Other: Any): AssetToolsHelpers
    }
}

external open class ContentBrowserFrontEndFilterExtension : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ContentBrowserFrontEndFilterExtension
        fun Find(Outer: UObject, ResourceName: String): ContentBrowserFrontEndFilterExtension
        fun GetDefaultObject(): ContentBrowserFrontEndFilterExtension
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ContentBrowserFrontEndFilterExtension
        fun C(Other: UObject): ContentBrowserFrontEndFilterExtension
        fun C(Other: Any): ContentBrowserFrontEndFilterExtension
    }
}

external open class ContentBrowserAssetContextMenuContext : UObject {
    constructor()
    constructor(Outer: UObject)
    open var SelectedObjects: Array<Any>
    open var CommonClass: UnrealEngineClass
    open var bCanBeModified: Boolean
    open fun GetSelectedObjects(): Array<UObject>

    companion object {
        fun Load(ResourceName: String): ContentBrowserAssetContextMenuContext
        fun Find(Outer: UObject, ResourceName: String): ContentBrowserAssetContextMenuContext
        fun GetDefaultObject(): ContentBrowserAssetContextMenuContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ContentBrowserAssetContextMenuContext
        fun C(Other: UObject): ContentBrowserAssetContextMenuContext
        fun C(Other: Any): ContentBrowserAssetContextMenuContext
    }
}

external open class ContentBrowserAssetViewContextMenuContext : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ContentBrowserAssetViewContextMenuContext
        fun Find(Outer: UObject, ResourceName: String): ContentBrowserAssetViewContextMenuContext
        fun GetDefaultObject(): ContentBrowserAssetViewContextMenuContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ContentBrowserAssetViewContextMenuContext
        fun C(Other: UObject): ContentBrowserAssetViewContextMenuContext
        fun C(Other: Any): ContentBrowserAssetViewContextMenuContext
    }
}

external open class ContentBrowserMenuContext : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ContentBrowserMenuContext
        fun Find(Outer: UObject, ResourceName: String): ContentBrowserMenuContext
        fun GetDefaultObject(): ContentBrowserMenuContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ContentBrowserMenuContext
        fun C(Other: UObject): ContentBrowserMenuContext
        fun C(Other: Any): ContentBrowserMenuContext
    }
}

external open class ContentBrowserFolderContext : ContentBrowserMenuContext {
    constructor()
    constructor(Outer: UObject)
    open var bCanBeModified: Boolean
    open var bNoFolderOnDisk: Boolean
    open var NumAssetPaths: Number
    open var NumClassPaths: Number

    companion object {
        fun Load(ResourceName: String): ContentBrowserFolderContext
        fun Find(Outer: UObject, ResourceName: String): ContentBrowserFolderContext
        fun GetDefaultObject(): ContentBrowserFolderContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ContentBrowserFolderContext
        fun C(Other: UObject): ContentBrowserFolderContext
        fun C(Other: Any): ContentBrowserFolderContext
    }
}

external open class ContentBrowserFilterListContext : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ContentBrowserFilterListContext
        fun Find(Outer: UObject, ResourceName: String): ContentBrowserFilterListContext
        fun GetDefaultObject(): ContentBrowserFilterListContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ContentBrowserFilterListContext
        fun C(Other: UObject): ContentBrowserFilterListContext
        fun C(Other: Any): ContentBrowserFilterListContext
    }
}

external open class ContentBrowserAddNewContextMenuContext : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ContentBrowserAddNewContextMenuContext
        fun Find(Outer: UObject, ResourceName: String): ContentBrowserAddNewContextMenuContext
        fun GetDefaultObject(): ContentBrowserAddNewContextMenuContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ContentBrowserAddNewContextMenuContext
        fun C(Other: UObject): ContentBrowserAddNewContextMenuContext
        fun C(Other: Any): ContentBrowserAddNewContextMenuContext
    }
}

external open class ContentBrowserToolbarMenuContext : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ContentBrowserToolbarMenuContext
        fun Find(Outer: UObject, ResourceName: String): ContentBrowserToolbarMenuContext
        fun GetDefaultObject(): ContentBrowserToolbarMenuContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ContentBrowserToolbarMenuContext
        fun C(Other: UObject): ContentBrowserToolbarMenuContext
        fun C(Other: Any): ContentBrowserToolbarMenuContext
    }
}

external open class TextFilterKeyValueHandler : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TextFilterKeyValueHandler
        fun Find(Outer: UObject, ResourceName: String): TextFilterKeyValueHandler
        fun GetDefaultObject(): TextFilterKeyValueHandler
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextFilterKeyValueHandler
        fun C(Other: UObject): TextFilterKeyValueHandler
        fun C(Other: Any): TextFilterKeyValueHandler
    }
}

external open class TextFilterKeyValueHandlerEntry {
    open var Key: String
    open var HandlerClass: Class
    open fun clone(): TextFilterKeyValueHandlerEntry

    companion object {
        fun C(Other: UObject): TextFilterKeyValueHandlerEntry
        fun C(Other: Any): TextFilterKeyValueHandlerEntry
    }
}

external open class TextFilterKeyValueHandlers : UObject {
    constructor()
    constructor(Outer: UObject)
    open var TextFilterKeyValueHandlers: Array<TextFilterKeyValueHandlerEntry>

    companion object {
        fun Load(ResourceName: String): TextFilterKeyValueHandlers
        fun Find(Outer: UObject, ResourceName: String): TextFilterKeyValueHandlers
        fun GetDefaultObject(): TextFilterKeyValueHandlers
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextFilterKeyValueHandlers
        fun C(Other: UObject): TextFilterKeyValueHandlers
        fun C(Other: Any): TextFilterKeyValueHandlers
    }
}

external open class TextFilterValueHandler : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TextFilterValueHandler
        fun Find(Outer: UObject, ResourceName: String): TextFilterValueHandler
        fun GetDefaultObject(): TextFilterValueHandler
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextFilterValueHandler
        fun C(Other: UObject): TextFilterValueHandler
        fun C(Other: Any): TextFilterValueHandler
    }
}

external open class TextFilterValueHandlers : UObject {
    constructor()
    constructor(Outer: UObject)
    open var TextFilterValueHandlers: Array<Class>

    companion object {
        fun Load(ResourceName: String): TextFilterValueHandlers
        fun Find(Outer: UObject, ResourceName: String): TextFilterValueHandlers
        fun GetDefaultObject(): TextFilterValueHandlers
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextFilterValueHandlers
        fun C(Other: UObject): TextFilterValueHandlers
        fun C(Other: Any): TextFilterValueHandlers
    }
}

external open class MotionTrailToolOptions : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bShowTrails: Boolean
    open var TrailColor: LinearColor
    open var bShowFullTrail: Boolean
    open var TrailThickness: Number
    open var FramesBefore: Number
    open var FramesAfter: Number
    open var EvalsPerFrame: Number
    open var bShowKeys: Boolean
    open var bShowFrameNumber: Boolean
    open var KeyColor: LinearColor
    open var KeySize: Any
    open var bShowMarks: Boolean
    open var MarkColor: LinearColor
    open var MarkSize: Any
    open var bLockMarksToFrames: Boolean
    open var SecondsPerMark: Any

    companion object {
        fun Load(ResourceName: String): MotionTrailToolOptions
        fun Find(Outer: UObject, ResourceName: String): MotionTrailToolOptions
        fun GetDefaultObject(): MotionTrailToolOptions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MotionTrailToolOptions
        fun C(Other: UObject): MotionTrailToolOptions
        fun C(Other: Any): MotionTrailToolOptions
    }
}

external open class MovieSceneCopyableBinding : UObject {
    constructor()
    constructor(Outer: UObject)
    open var SpawnableObjectTemplate: UObject
    open var Tracks: Array<MovieSceneTrack>
    open var Binding: MovieSceneBinding
    open var Spawnable: MovieSceneSpawnable
    open var Possessable: MovieScenePossessable
    open var FolderPath: Array<String>

    companion object {
        fun Load(ResourceName: String): MovieSceneCopyableBinding
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCopyableBinding
        fun GetDefaultObject(): MovieSceneCopyableBinding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCopyableBinding
        fun C(Other: UObject): MovieSceneCopyableBinding
        fun C(Other: Any): MovieSceneCopyableBinding
    }
}

external open class MovieSceneCopyableTrack : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Track: MovieSceneTrack
    open var bIsAMasterTrack: Boolean
    open var bIsACameraCutTrack: Boolean
    open var FolderPath: Array<String>

    companion object {
        fun Load(ResourceName: String): MovieSceneCopyableTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCopyableTrack
        fun GetDefaultObject(): MovieSceneCopyableTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCopyableTrack
        fun C(Other: UObject): MovieSceneCopyableTrack
        fun C(Other: Any): MovieSceneCopyableTrack
    }
}

external open class Exporter : UObject {
    constructor()
    constructor(Outer: UObject)
    open var SupportedClass: UnrealEngineClass
    open var ExportRootScope: UObject
    open var FormatExtension: Array<String>
    open var FormatDescription: Array<String>
    open var PreferredFormatIndex: Number
    open var TextIndent: Number
    open var bText: Boolean
    open var bSelectedOnly: Boolean
    open var bForceFileOperations: Boolean
    open var ExportTask: AssetExportTask
    open fun ScriptRunAssetExportTask(Task: AssetExportTask): Boolean

    companion object {
        fun Load(ResourceName: String): Exporter
        fun Find(Outer: UObject, ResourceName: String): Exporter
        fun GetDefaultObject(): Exporter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Exporter
        fun RunAssetExportTasks(ExportTasks: Array<AssetExportTask>): Boolean
        fun RunAssetExportTask(Task: AssetExportTask): Boolean
        fun C(Other: UObject): Exporter
        fun C(Other: Any): Exporter
    }
}

external open class AssetExportTask : UObject {
    constructor()
    constructor(Outer: UObject)
    open var UObject: UObject
    open var Exporter: Exporter
    open var Filename: String
    open var bSelected: Boolean
    open var bReplaceIdentical: Boolean
    open var bPrompt: Boolean
    open var bAutomated: Boolean
    open var bUseFileArchive: Boolean
    open var bWriteEmptyFiles: Boolean
    open var IgnoreObjectList: Array<UObject>
    open var Options: UObject
    open var Errors: Array<String>

    companion object {
        fun Load(ResourceName: String): AssetExportTask
        fun Find(Outer: UObject, ResourceName: String): AssetExportTask
        fun GetDefaultObject(): AssetExportTask
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AssetExportTask
        fun C(Other: UObject): AssetExportTask
        fun C(Other: Any): AssetExportTask
    }
}

external open class SequencerExportTask : AssetExportTask {
    constructor()
    constructor(Outer: UObject)
    open var SequencerContext: UObject

    companion object {
        fun Load(ResourceName: String): SequencerExportTask
        fun Find(Outer: UObject, ResourceName: String): SequencerExportTask
        fun GetDefaultObject(): SequencerExportTask
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SequencerExportTask
        fun C(Other: UObject): SequencerExportTask
        fun C(Other: Any): SequencerExportTask
    }
}

external open class MovieSceneDoubleChannel : MovieSceneChannel {
    open var PreInfinityExtrap: String /* "RCCE_Cycle" | "RCCE_CycleWithOffset" | "RCCE_Oscillate" | "RCCE_Linear" | "RCCE_Constant" | "RCCE_None" | "RCCE_MAX" */
    open var PostInfinityExtrap: String /* "RCCE_Cycle" | "RCCE_CycleWithOffset" | "RCCE_Oscillate" | "RCCE_Linear" | "RCCE_Constant" | "RCCE_None" | "RCCE_MAX" */
    open var Times: Array<FrameNumber>
    open var Values: Array<MovieSceneDoubleValue>
    open var DefaultValue: Any
    open var bHasDefaultValue: Boolean
    open var KeyHandles: MovieSceneKeyHandleMap
    open var TickResolution: FrameRate
    open var bShowCurve: Boolean
    override fun clone(): MovieSceneDoubleChannel

    companion object {
        fun C(Other: UObject): MovieSceneDoubleChannel
        fun C(Other: Any): MovieSceneDoubleChannel
    }
}

external object EShow3DTrajectory {
    var EST_OnlyWhenSelected: String /* "EST_OnlyWhenSelected" */
    var EST_Always: String /* "EST_Always" */
    var EST_Never: String /* "EST_Never" */
    var EST_MAX: String /* "EST_MAX" */
}

external open class MovieScene3DTransformSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var TransformMask: MovieSceneTransformMask
    open var Translation: MovieSceneDoubleChannel
    open var Rotation: MovieSceneDoubleChannel
    open var Scale: MovieSceneDoubleChannel
    open var ManualWeight: MovieSceneFloatChannel
    open var bUseQuaternionInterpolation: Boolean
    open var Show3DTrajectory: String /* "EST_OnlyWhenSelected" | "EST_Always" | "EST_Never" | "EST_MAX" */

    companion object {
        fun Load(ResourceName: String): MovieScene3DTransformSection
        fun Find(Outer: UObject, ResourceName: String): MovieScene3DTransformSection
        fun GetDefaultObject(): MovieScene3DTransformSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScene3DTransformSection
        fun C(Other: UObject): MovieScene3DTransformSection
        fun C(Other: Any): MovieScene3DTransformSection
    }
}

external open class SequencerKeyActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var KeyMeshComponent: StaticMeshComponent
    open var AssociatedActor: Actor
    open var TrackSection: MovieScene3DTransformSection
    open var KeyTime: Number

    companion object {
        fun GetDefaultObject(): SequencerKeyActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SequencerKeyActor
        fun C(Other: UObject): SequencerKeyActor
        fun C(Other: Any): SequencerKeyActor
    }
}

external open class MovieSceneKeyStructType : ScriptStruct {
    constructor()
    constructor(Outer: UObject)
    open var SourceTimesProperty: Any
    open var SourceValuesProperty: Any
    open var DestTimeProperty: Any
    open var DestValueProperty: Any

    companion object {
        fun Load(ResourceName: String): MovieSceneKeyStructType
        fun Find(Outer: UObject, ResourceName: String): MovieSceneKeyStructType
        fun GetDefaultObject(): MovieSceneKeyStructType
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneKeyStructType
        fun C(Other: UObject): MovieSceneKeyStructType
        fun C(Other: Any): MovieSceneKeyStructType
    }
}

external open class SequencerMeshTrail(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    companion object {
        fun GetDefaultObject(): SequencerMeshTrail
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SequencerMeshTrail
        fun C(Other: UObject): SequencerMeshTrail
        fun C(Other: Any): SequencerMeshTrail
    }
}

external open class SequencerSettingsContainer : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SequencerSettingsContainer
        fun Find(Outer: UObject, ResourceName: String): SequencerSettingsContainer
        fun GetDefaultObject(): SequencerSettingsContainer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SequencerSettingsContainer
        fun C(Other: UObject): SequencerSettingsContainer
        fun C(Other: Any): SequencerSettingsContainer
    }
}

external object EAutoChangeMode {
    var AutoKey: String /* "AutoKey" */
    var AutoTrack: String /* "AutoTrack" */
    var All: String /* "All" */
    var None: String /* "None" */
    var EAutoChangeMode_MAX: String /* "EAutoChangeMode_MAX" */
}

external object EAllowEditsMode {
    var AllEdits: String /* "AllEdits" */
    var AllowSequencerEditsOnly: String /* "AllowSequencerEditsOnly" */
    var AllowLevelEditsOnly: String /* "AllowLevelEditsOnly" */
    var EAllowEditsMode_MAX: String /* "EAllowEditsMode_MAX" */
}

external object EKeyGroupMode {
    var KeyChanged: String /* "KeyChanged" */
    var KeyGroup: String /* "KeyGroup" */
    var KeyAll: String /* "KeyAll" */
    var EKeyGroupMode_MAX: String /* "EKeyGroupMode_MAX" */
}

external object EMovieSceneKeyInterpolation {
    var Auto: String /* "Auto" */
    var User: String /* "User" */
    var Break: String /* "Break" */
    var Linear: String /* "Linear" */
    var Constant: String /* "Constant" */
    var EMovieSceneKeyInterpolation_MAX: String /* "EMovieSceneKeyInterpolation_MAX" */
}

external object ESequencerSpawnPosition {
    var SSP_Origin: String /* "SSP_Origin" */
    var SSP_PlaceInFrontOfCamera: String /* "SSP_PlaceInFrontOfCamera" */
    var SSP_MAX: String /* "SSP_MAX" */
}

external object ESequencerZoomPosition {
    var SZP_CurrentTime: String /* "SZP_CurrentTime" */
    var SZP_MousePosition: String /* "SZP_MousePosition" */
    var SZP_MAX: String /* "SZP_MAX" */
}

external object ESequencerLoopMode {
    var SLM_NoLoop: String /* "SLM_NoLoop" */
    var SLM_Loop: String /* "SLM_Loop" */
    var SLM_LoopSelectionRange: String /* "SLM_LoopSelectionRange" */
    var SLM_MAX: String /* "SLM_MAX" */
}

external object EFrameNumberDisplayFormats {
    var NonDropFrameTimecode: String /* "NonDropFrameTimecode" */
    var DropFrameTimecode: String /* "DropFrameTimecode" */
    var Seconds: String /* "Seconds" */
    var Frames: String /* "Frames" */
    var MAX_Count: String /* "MAX_Count" */
    var EFrameNumberDisplayFormats_MAX: String /* "EFrameNumberDisplayFormats_MAX" */
}

external open class SequencerSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var AutoChangeMode: String /* "AutoKey" | "AutoTrack" | "All" | "None" | "EAutoChangeMode_MAX" */
    open var AllowEditsMode: String /* "AllEdits" | "AllowSequencerEditsOnly" | "AllowLevelEditsOnly" | "EAllowEditsMode_MAX" */
    open var KeyGroupMode: String /* "KeyChanged" | "KeyGroup" | "KeyAll" | "EKeyGroupMode_MAX" */
    open var KeyInterpolation: String /* "Auto" | "User" | "Break" | "Linear" | "Constant" | "EMovieSceneKeyInterpolation_MAX" */
    open var bAutoSetTrackDefaults: Boolean
    open var SpawnPosition: String /* "SSP_Origin" | "SSP_PlaceInFrontOfCamera" | "SSP_MAX" */
    open var bCreateSpawnableCameras: Boolean
    open var bShowRangeSlider: Boolean
    open var bIsSnapEnabled: Boolean
    open var bSnapKeyTimesToInterval: Boolean
    open var bSnapKeyTimesToKeys: Boolean
    open var bSnapSectionTimesToInterval: Boolean
    open var bSnapSectionTimesToSections: Boolean
    open var bSnapKeysAndSectionsToPlayRange: Boolean
    open var bSnapPlayTimeToKeys: Boolean
    open var bSnapPlayTimeToSections: Boolean
    open var bSnapPlayTimeToMarkers: Boolean
    open var bSnapPlayTimeToInterval: Boolean
    open var bSnapPlayTimeToPressedKey: Boolean
    open var bSnapPlayTimeToDraggedKey: Boolean
    open var bSnapCurveValueToInterval: Boolean
    open var bShowSelectedNodesOnly: Boolean
    open var bRewindOnRecord: Boolean
    open var ZoomPosition: String /* "SZP_CurrentTime" | "SZP_MousePosition" | "SZP_MAX" */
    open var bAutoScrollEnabled: Boolean
    open var bLinkCurveEditorTimeRange: Boolean
    open var bSynchronizeCurveEditorSelection: Boolean
    open var bIsolateCurveEditorToSelection: Boolean
    open var LoopMode: String /* "SLM_NoLoop" | "SLM_Loop" | "SLM_LoopSelectionRange" | "SLM_MAX" */
    open var bKeepCursorInPlayRangeWhileScrubbing: Boolean
    open var bKeepPlayRangeInSectionBounds: Boolean
    open var ZeroPadFrames: Number
    open var JumpFrameIncrement: FrameNumber
    open var bShowCombinedKeyframes: Boolean
    open var bInfiniteKeyAreas: Boolean
    open var bShowChannelColors: Boolean
    open var KeyAreaCurveExtents: String
    open var KeyAreaHeightWithCurves: Number
    open var ReduceKeysTolerance: Number
    open var bDeleteKeysWhenTrimming: Boolean
    open var bDisableSectionsAfterBaking: Boolean
    open var bCleanPlaybackMode: Boolean
    open var bActivateRealtimeViewports: Boolean
    open var bEvaluateSubSequencesInIsolation: Boolean
    open var bRerunConstructionScripts: Boolean
    open var bShowDebugVisualization: Boolean
    open var bVisualizePreAndPostRoll: Boolean
    open var bCompileDirectorOnEvaluate: Boolean
    open var TrajectoryPathCap: Any
    open var FrameNumberDisplayFormat: String /* "NonDropFrameTimecode" | "DropFrameTimecode" | "Seconds" | "Frames" | "MAX_Count" | "EFrameNumberDisplayFormats_MAX" */
    open var MovieRendererName: String

    companion object {
        fun Load(ResourceName: String): SequencerSettings
        fun Find(Outer: UObject, ResourceName: String): SequencerSettings
        fun GetDefaultObject(): SequencerSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SequencerSettings
        fun C(Other: UObject): SequencerSettings
        fun C(Other: Any): SequencerSettings
    }
}

external open class SequencerTrackFilterExtension : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SequencerTrackFilterExtension
        fun Find(Outer: UObject, ResourceName: String): SequencerTrackFilterExtension
        fun GetDefaultObject(): SequencerTrackFilterExtension
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SequencerTrackFilterExtension
        fun C(Other: UObject): SequencerTrackFilterExtension
        fun C(Other: Any): SequencerTrackFilterExtension
    }
}

external open class SoundNode : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ChildNodes: Array<SoundNode>
    open var GraphNode: EdGraphNode

    companion object {
        fun Load(ResourceName: String): SoundNode
        fun Find(Outer: UObject, ResourceName: String): SoundNode
        fun GetDefaultObject(): SoundNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNode
        fun C(Other: UObject): SoundNode
        fun C(Other: Any): SoundNode
    }
}

external open class SoundCue : SoundBase {
    constructor()
    constructor(Outer: UObject)
    open var bPrimeOnLoad: Boolean
    open var FirstNode: SoundNode
    open var VolumeMultiplier: Number
    open var PitchMultiplier: Number
    open var AttenuationOverrides: SoundAttenuationSettings
    open var AllNodes: Array<SoundNode>
    open var SoundCueGraph: EdGraph
    open var SubtitlePriority: Number
    open var bOverrideAttenuation: Boolean
    open var bExcludeFromRandomNodeBranchCulling: Boolean
    open var CookedQualityIndex: Number
    open var bHasPlayWhenSilent: Boolean
    open fun PrimeSoundCueForPlayback()

    companion object {
        fun Load(ResourceName: String): SoundCue
        fun Find(Outer: UObject, ResourceName: String): SoundCue
        fun GetDefaultObject(): SoundCue
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundCue
        fun C(Other: UObject): SoundCue
        fun C(Other: Any): SoundCue
        fun PrimeSoundCueForPlayback(SoundCue: SoundCue)
    }
}

external open class VREditorAssetContainer : DataAsset {
    constructor()
    constructor(Outer: UObject)
    open var DockableWindowCloseSound: SoundBase
    open var DockableWindowOpenSound: SoundBase
    open var DockableWindowDropSound: SoundBase
    open var DockableWindowDragSound: SoundBase
    open var DropFromContentBrowserSound: SoundBase
    open var RadialMenuOpenSound: SoundBase
    open var RadialMenuCloseSound: SoundBase
    open var TeleportSound: SoundBase
    open var ButtonPressSound: SoundCue
    open var AutoScaleSound: SoundBase
    open var GenericHMDMesh: StaticMesh
    open var PlaneMesh: StaticMesh
    open var CylinderMesh: StaticMesh
    open var LaserPointerStartMesh: StaticMesh
    open var LaserPointerMesh: StaticMesh
    open var LaserPointerEndMesh: StaticMesh
    open var LaserPointerHoverMesh: StaticMesh
    open var VivePreControllerMesh: StaticMesh
    open var OculusControllerMesh: StaticMesh
    open var GenericControllerMesh: StaticMesh
    open var TeleportRootMesh: StaticMesh
    open var WindowMesh: StaticMesh
    open var WindowSelectionBarMesh: StaticMesh
    open var WindowCloseButtonMesh: StaticMesh
    open var RadialMenuMainMesh: StaticMesh
    open var RadialMenuPointerMesh: StaticMesh
    open var PointerCursorMesh: StaticMesh
    open var LineSegmentCylinderMesh: StaticMesh
    open var JointSphereMesh: StaticMesh
    open var DockingButtonMesh: StaticMesh
    open var GridMaterial: MaterialInterface
    open var LaserPointerMaterial: MaterialInterface
    open var LaserPointerTranslucentMaterial: MaterialInterface
    open var WorldMovementPostProcessMaterial: Material
    open var TextMaterial: MaterialInterface
    open var VivePreControllerMaterial: MaterialInterface
    open var OculusControllerMaterial: MaterialInterface
    open var TeleportMaterial: MaterialInterface
    open var WindowMaterial: MaterialInterface
    open var WindowTranslucentMaterial: MaterialInterface
    open var LineMaterial: Material
    open var TranslucentTextMaterial: MaterialInterface
    open var TextFont: Font

    companion object {
        fun Load(ResourceName: String): VREditorAssetContainer
        fun Find(Outer: UObject, ResourceName: String): VREditorAssetContainer
        fun GetDefaultObject(): VREditorAssetContainer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VREditorAssetContainer
        fun C(Other: UObject): VREditorAssetContainer
        fun C(Other: Any): VREditorAssetContainer
    }
}

external open class EditorWorldExtensionActorData {
    open var Actor: Actor
    open var bValidForPIE: Boolean
    open fun clone(): EditorWorldExtensionActorData

    companion object {
        fun C(Other: UObject): EditorWorldExtensionActorData
        fun C(Other: Any): EditorWorldExtensionActorData
    }
}

external open class EditorWorldExtension : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ExtensionActors: Array<EditorWorldExtensionActorData>

    companion object {
        fun Load(ResourceName: String): EditorWorldExtension
        fun Find(Outer: UObject, ResourceName: String): EditorWorldExtension
        fun GetDefaultObject(): EditorWorldExtension
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorWorldExtension
        fun C(Other: UObject): EditorWorldExtension
        fun C(Other: Any): EditorWorldExtension
    }
}

external open class PostProcessComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var Settings: PostProcessSettings
    open var Priority: Number
    open var BlendRadius: Number
    open var BlendWeight: Number
    open var bEnabled: Boolean
    open var bUnbound: Boolean

    companion object {
        fun Load(ResourceName: String): PostProcessComponent
        fun Find(Outer: UObject, ResourceName: String): PostProcessComponent
        fun GetDefaultObject(): PostProcessComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PostProcessComponent
        fun C(Other: UObject): PostProcessComponent
        fun C(Other: Any): PostProcessComponent
    }
}

external open class VREditorAvatarActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var HeadMeshComponent: StaticMeshComponent
    open var WorldMovementGridMeshComponent: StaticMeshComponent
    open var WorldMovementGridMID: MaterialInstanceDynamic
    open var WorldMovementGridOpacity: Number
    open var bIsDrawingWorldMovementPostProcess: Boolean
    open var WorldMovementPostProcessMaterial: MaterialInstanceDynamic
    open var ScaleProgressMeshComponent: StaticMeshComponent
    open var CurrentScaleProgressMeshComponent: StaticMeshComponent
    open var UserScaleIndicatorText: TextRenderComponent
    open var FixedUserScaleMID: MaterialInstanceDynamic
    open var TranslucentFixedUserScaleMID: MaterialInstanceDynamic
    open var CurrentUserScaleMID: MaterialInstanceDynamic
    open var TranslucentCurrentUserScaleMID: MaterialInstanceDynamic
    open var PostProcessComponent: PostProcessComponent
    open var VRMode: VREditorMode

    companion object {
        fun GetDefaultObject(): VREditorAvatarActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VREditorAvatarActor
        fun C(Other: UObject): VREditorAvatarActor
        fun C(Other: Any): VREditorAvatarActor
    }
}

external open class VREditorBaseActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var VRMode: VREditorMode

    companion object {
        fun GetDefaultObject(): VREditorBaseActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VREditorBaseActor
        fun C(Other: UObject): VREditorBaseActor
        fun C(Other: Any): VREditorBaseActor
    }
}

external open class VREditorFloatingUICreationContext {
    open var WidgetClass: UnrealEngineClass
    open var PanelID: String
    open var ParentActor: Actor
    open var PanelSpawnOffset: Transform
    open var PanelSize: Vector2D
    open var PanelMesh: StaticMesh
    open var EditorUISize: Number
    open var bHideWindowHandles: Boolean
    open var bMaskOutWidgetBackground: Boolean
    open var bNoCloseButton: Boolean
    open fun clone(): VREditorFloatingUICreationContext

    companion object {
        fun C(Other: UObject): VREditorFloatingUICreationContext
        fun C(Other: Any): VREditorFloatingUICreationContext
    }
}

external object EWidgetSpace {
    var World: String /* "World" */
    var Screen: String /* "Screen" */
    var EWidgetSpace_MAX: String /* "EWidgetSpace_MAX" */
}

external object EWidgetTimingPolicy {
    var RealTime: String /* "RealTime" */
    var GameTime: String /* "GameTime" */
    var EWidgetTimingPolicy_MAX: String /* "EWidgetTimingPolicy_MAX" */
}

external object EWindowVisibility {
    var Visible: String /* "Visible" */
    var SelfHitTestInvisible: String /* "SelfHitTestInvisible" */
    var EWindowVisibility_MAX: String /* "EWindowVisibility_MAX" */
}

external object EWidgetBlendMode {
    var Opaque: String /* "Opaque" */
    var Masked: String /* "Masked" */
    var Transparent: String /* "Transparent" */
    var EWidgetBlendMode_MAX: String /* "EWidgetBlendMode_MAX" */
}

external object EWidgetGeometryMode {
    var Plane: String /* "Plane" */
    var Cylinder: String /* "Cylinder" */
    var EWidgetGeometryMode_MAX: String /* "EWidgetGeometryMode_MAX" */
}

external object ETickMode {
    var Disabled: String /* "Disabled" */
    var Enabled: String /* "Enabled" */
    var Automatic: String /* "Automatic" */
    var ETickMode_MAX: String /* "ETickMode_MAX" */
}

external open class WidgetComponent : MeshComponent {
    constructor()
    constructor(Outer: UObject)
    open var Space: String /* "World" | "Screen" | "EWidgetSpace_MAX" */
    open var TimingPolicy: String /* "RealTime" | "GameTime" | "EWidgetTimingPolicy_MAX" */
    open var WidgetClass: UnrealEngineClass
    open var DrawSize: IntPoint
    open var bManuallyRedraw: Boolean
    open var bRedrawRequested: Boolean
    open var RedrawTime: Number
    open var CurrentDrawSize: IntPoint
    open var bDrawAtDesiredSize: Boolean
    open var Pivot: Vector2D
    open var bReceiveHardwareInput: Boolean
    open var bWindowFocusable: Boolean
    open var WindowVisibility: String /* "Visible" | "SelfHitTestInvisible" | "EWindowVisibility_MAX" */
    open var bApplyGammaCorrection: Boolean
    open var OwnerPlayer: LocalPlayer
    open var BackgroundColor: LinearColor
    open var TintColorAndOpacity: LinearColor
    open var OpacityFromTexture: Number
    open var BlendMode: String /* "Opaque" | "Masked" | "Transparent" | "EWidgetBlendMode_MAX" */
    open var bIsTwoSided: Boolean
    open var TickWhenOffscreen: Boolean
    open var BodySetup: BodySetup
    open var TranslucentMaterial: MaterialInterface
    open var TranslucentMaterial_OneSided: MaterialInterface
    open var OpaqueMaterial: MaterialInterface
    open var OpaqueMaterial_OneSided: MaterialInterface
    open var MaskedMaterial: MaterialInterface
    open var MaskedMaterial_OneSided: MaterialInterface
    open var RenderTarget: TextureRenderTarget2D
    open var MaterialInstance: MaterialInstanceDynamic
    open var bAddedToScreen: Boolean
    open var bEditTimeUsable: Boolean
    open var SharedLayerName: String
    open var LayerZOrder: Number
    open var GeometryMode: String /* "Plane" | "Cylinder" | "EWidgetGeometryMode_MAX" */
    open var CylinderArcAngle: Number
    open var TickMode: String /* "Disabled" | "Enabled" | "Automatic" | "ETickMode_MAX" */
    open var Widget: UserWidget
    open fun SetWindowVisibility(InVisibility: String /* "Visible" | "SelfHitTestInvisible" | "EWindowVisibility_MAX" */)
    open fun SetWindowFocusable(bInWindowFocusable: Boolean)
    open fun SetWidgetSpace(NewSpace: String /* "World" | "Screen" | "EWidgetSpace_MAX" */)
    open fun SetWidget(Widget: UserWidget)
    open fun SetTwoSided(bWantTwoSided: Boolean)
    open fun SetTintColorAndOpacity(NewTintColorAndOpacity: LinearColor)
    open fun SetTickWhenOffscreen(bWantTickWhenOffscreen: Boolean)
    open fun SetTickMode(InTickMode: String /* "Disabled" | "Enabled" | "Automatic" | "ETickMode_MAX" */)
    open fun SetRedrawTime(InRedrawTime: Number)
    open fun SetPivot(InPivot: Vector2D)
    open fun SetOwnerPlayer(LocalPlayer: LocalPlayer)
    open fun SetManuallyRedraw(bUseManualRedraw: Boolean)
    open fun SetGeometryMode(InGeometryMode: String /* "Plane" | "Cylinder" | "EWidgetGeometryMode_MAX" */)
    open fun SetDrawSize(Size: Vector2D)
    open fun SetDrawAtDesiredSize(bInDrawAtDesiredSize: Boolean)
    open fun SetCylinderArcAngle(InCylinderArcAngle: Number)
    open fun SetBackgroundColor(NewBackgroundColor: LinearColor)
    open fun RequestRenderUpdate()
    open fun RequestRedraw()
    open fun IsWidgetVisible(): Boolean
    open fun GetWindowVisiblility(): String /* "Visible" | "SelfHitTestInvisible" | "EWindowVisibility_MAX" */
    open fun GetWindowFocusable(): Boolean
    open fun GetWidgetSpace(): String /* "World" | "Screen" | "EWidgetSpace_MAX" */
    open fun GetWidget(): UserWidget
    open fun GetUserWidgetObject(): UserWidget
    open fun GetTwoSided(): Boolean
    open fun GetTickWhenOffscreen(): Boolean
    open fun GetRenderTarget(): TextureRenderTarget2D
    open fun GetRedrawTime(): Number
    open fun GetPivot(): Vector2D
    open fun GetOwnerPlayer(): LocalPlayer
    open fun GetMaterialInstance(): MaterialInstanceDynamic
    open fun GetManuallyRedraw(): Boolean
    open fun GetGeometryMode(): String /* "Plane" | "Cylinder" | "EWidgetGeometryMode_MAX" */
    open fun GetDrawSize(): Vector2D
    open fun GetDrawAtDesiredSize(): Boolean
    open fun GetCylinderArcAngle(): Number
    open fun GetCurrentDrawSize(): Vector2D

    companion object {
        fun Load(ResourceName: String): WidgetComponent
        fun Find(Outer: UObject, ResourceName: String): WidgetComponent
        fun GetDefaultObject(): WidgetComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WidgetComponent
        fun C(Other: UObject): WidgetComponent
        fun C(Other: Any): WidgetComponent
    }
}

external object EVREditorWidgetDrawingPolicy {
    var Always: String /* "Always" */
    var Hovering: String /* "Hovering" */
    var EVREditorWidgetDrawingPolicy_MAX: String /* "EVREditorWidgetDrawingPolicy_MAX" */
}

external open class VREditorWidgetComponent : WidgetComponent {
    constructor()
    constructor(Outer: UObject)
    open var DrawingPolicy: String /* "Always" | "Hovering" | "EVREditorWidgetDrawingPolicy_MAX" */
    open var bIsHovering: Boolean
    open var bHasEverDrawn: Boolean

    companion object {
        fun Load(ResourceName: String): VREditorWidgetComponent
        fun Find(Outer: UObject, ResourceName: String): VREditorWidgetComponent
        fun GetDefaultObject(): VREditorWidgetComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VREditorWidgetComponent
        fun C(Other: UObject): VREditorWidgetComponent
        fun C(Other: Any): VREditorWidgetComponent
    }
}

external open class VREditorFloatingUI(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : VREditorBaseActor {
    open var CreationContext: VREditorFloatingUICreationContext
    open var UserWidget: UserWidget
    open var WidgetComponent: VREditorWidgetComponent
    open var WindowMeshComponent: StaticMeshComponent
    open var UserWidgetClass: UnrealEngineClass

    companion object {
        fun GetDefaultObject(): VREditorFloatingUI
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VREditorFloatingUI
        fun C(Other: UObject): VREditorFloatingUI
        fun C(Other: Any): VREditorFloatingUI
    }
}

external open class VREditorRadialFloatingUI(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : VREditorBaseActor {
    open var WidgetComponents: Array<VREditorWidgetComponent>
    open var WindowMeshComponent: StaticMeshComponent
    open var ArrowMeshComponent: StaticMeshComponent
    open var CentralWidgetComponent: VREditorWidgetComponent

    companion object {
        fun GetDefaultObject(): VREditorRadialFloatingUI
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VREditorRadialFloatingUI
        fun C(Other: UObject): VREditorRadialFloatingUI
        fun C(Other: Any): VREditorRadialFloatingUI
    }
}

external open class ViewportDragOperation : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ViewportDragOperation
        fun Find(Outer: UObject, ResourceName: String): ViewportDragOperation
        fun GetDefaultObject(): ViewportDragOperation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ViewportDragOperation
        fun C(Other: UObject): ViewportDragOperation
        fun C(Other: Any): ViewportDragOperation
    }
}

external open class ViewportDragOperationComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var DragOperation: ViewportDragOperation
    open var DragOperationSubclass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): ViewportDragOperationComponent
        fun Find(Outer: UObject, ResourceName: String): ViewportDragOperationComponent
        fun GetDefaultObject(): ViewportDragOperationComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ViewportDragOperationComponent
        fun C(Other: UObject): ViewportDragOperationComponent
        fun C(Other: Any): ViewportDragOperationComponent
    }
}

external open class VREditorDockableWindow(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : VREditorFloatingUI {
    open var DockButtonMeshComponent: StaticMeshComponent
    open var SelectionBarMeshComponent: StaticMeshComponent
    open var CloseButtonMeshComponent: StaticMeshComponent
    open var DockButtonMID: MaterialInstanceDynamic
    open var SelectionBarMID: MaterialInstanceDynamic
    open var SelectionBarTranslucentMID: MaterialInstanceDynamic
    open var CloseButtonMID: MaterialInstanceDynamic
    open var CloseButtonTranslucentMID: MaterialInstanceDynamic
    open var DragOperationComponent: ViewportDragOperationComponent

    companion object {
        fun GetDefaultObject(): VREditorDockableWindow
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VREditorDockableWindow
        fun C(Other: UObject): VREditorDockableWindow
        fun C(Other: Any): VREditorDockableWindow
    }
}

external open class ViewportTransformer : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ViewportWorldInteraction: ViewportWorldInteraction
    open fun Shutdown()
    open fun ShouldCenterTransformGizmoPivot(): Boolean
    open fun OnStopDragging(Interactor: ViewportInteractor)
    open fun OnStartDragging(Interactor: ViewportInteractor)
    open fun Init(InitViewportWorldInteraction: ViewportWorldInteraction)
    open fun CanAlignToActors(): Boolean

    companion object {
        fun Load(ResourceName: String): ViewportTransformer
        fun Find(Outer: UObject, ResourceName: String): ViewportTransformer
        fun GetDefaultObject(): ViewportTransformer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ViewportTransformer
        fun C(Other: UObject): ViewportTransformer
        fun C(Other: Any): ViewportTransformer
    }
}

external open class GizmoHandle {
    open fun clone(): GizmoHandle

    companion object {
        fun C(Other: UObject): GizmoHandle
        fun C(Other: Any): GizmoHandle
    }
}

external open class GizmoHandleGroup : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var GizmoMaterial: MaterialInterface
    open var TranslucentGizmoMaterial: MaterialInterface
    open var Handles: Array<GizmoHandle>
    open var OwningTransformGizmoActor: BaseTransformGizmo
    open var DragOperationComponent: ViewportDragOperationComponent

    companion object {
        fun Load(ResourceName: String): GizmoHandleGroup
        fun Find(Outer: UObject, ResourceName: String): GizmoHandleGroup
        fun GetDefaultObject(): GizmoHandleGroup
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoHandleGroup
        fun C(Other: UObject): GizmoHandleGroup
        fun C(Other: Any): GizmoHandleGroup
    }
}

external open class BaseTransformGizmo(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var SceneComponent: SceneComponent
    open var AllHandleGroups: Array<GizmoHandleGroup>
    open var WorldInteraction: ViewportWorldInteraction

    companion object {
        fun GetDefaultObject(): BaseTransformGizmo
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BaseTransformGizmo
        fun C(Other: UObject): BaseTransformGizmo
        fun C(Other: Any): BaseTransformGizmo
    }
}

external open class MouseCursorInteractor : ViewportInteractor {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MouseCursorInteractor
        fun Find(Outer: UObject, ResourceName: String): MouseCursorInteractor
        fun GetDefaultObject(): MouseCursorInteractor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MouseCursorInteractor
        fun C(Other: UObject): MouseCursorInteractor
        fun C(Other: Any): MouseCursorInteractor
    }
}

external open class ViewportInteractionAssetContainer : DataAsset {
    constructor()
    constructor(Outer: UObject)
    open var GizmoHandleSelectedSound: SoundBase
    open var GizmoHandleDropSound: SoundBase
    open var SelectionChangeSound: SoundBase
    open var SelectionDropSound: SoundBase
    open var SelectionStartDragSound: SoundBase
    open var GridSnapSound: SoundBase
    open var ActorSnapSound: SoundBase
    open var UndoSound: SoundBase
    open var RedoSound: SoundBase
    open var GridMesh: StaticMesh
    open var TranslationHandleMesh: StaticMesh
    open var UniformScaleHandleMesh: StaticMesh
    open var ScaleHandleMesh: StaticMesh
    open var PlaneTranslationHandleMesh: StaticMesh
    open var RotationHandleMesh: StaticMesh
    open var RotationHandleSelectedMesh: StaticMesh
    open var StartRotationIndicatorMesh: StaticMesh
    open var CurrentRotationIndicatorMesh: StaticMesh
    open var FreeRotationHandleMesh: StaticMesh
    open var GridMaterial: MaterialInterface
    open var TransformGizmoMaterial: MaterialInterface
    open var TranslucentTransformGizmoMaterial: MaterialInterface

    companion object {
        fun Load(ResourceName: String): ViewportInteractionAssetContainer
        fun Find(Outer: UObject, ResourceName: String): ViewportInteractionAssetContainer
        fun GetDefaultObject(): ViewportInteractionAssetContainer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ViewportInteractionAssetContainer
        fun C(Other: UObject): ViewportInteractionAssetContainer
        fun C(Other: Any): ViewportInteractionAssetContainer
    }
}

external open class ViewportWorldInteraction : EditorWorldExtension {
    constructor()
    constructor(Outer: UObject)
    open var Interactors: Array<ViewportInteractor>
    open var ViewportTransformer: ViewportTransformer
    open var TransformGizmoActor: BaseTransformGizmo
    open var SnapGridActor: Actor
    open var SnapGridMeshComponent: StaticMeshComponent
    open var SnapGridMID: MaterialInstanceDynamic
    open var DefaultMouseCursorInteractor: MouseCursorInteractor
    open var ActorsToExcludeFromHitTest: Array<Any>
    open var AssetContainer: ViewportInteractionAssetContainer
    open fun SetWorldToMetersScale(NewWorldToMetersScale: Number, bCompensateRoomWorldScale: Boolean)
    open fun SetRoomTransformForNextFrame(NewRoomTransform: Transform)
    open fun SetHeadTransform(NewHeadTransform: Transform)
    open fun RemoveInteractor(Interactor: ViewportInteractor)
    open fun GetWorldScaleFactor(): Number
    open fun GetTransformGizmoActor(): BaseTransformGizmo
    open fun GetRoomTransform(): Transform
    open fun GetRoomSpaceHeadTransform(): Transform
    open fun GetInteractors(): Array<ViewportInteractor>
    open fun GetHeadTransform(): Transform
    open fun AddInteractor(Interactor: ViewportInteractor)
    open fun AddActorToExcludeFromHitTests(ActorToExcludeFromHitTests: Actor)

    companion object {
        fun Load(ResourceName: String): ViewportWorldInteraction
        fun Find(Outer: UObject, ResourceName: String): ViewportWorldInteraction
        fun GetDefaultObject(): ViewportWorldInteraction
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ViewportWorldInteraction
        fun C(Other: UObject): ViewportWorldInteraction
        fun C(Other: Any): ViewportWorldInteraction
    }
}

external object EHitResultGizmoFilterMode {
    var All: String /* "All" */
    var NoGizmos: String /* "NoGizmos" */
    var GizmosOnly: String /* "GizmosOnly" */
    var EHitResultGizmoFilterMode_MAX: String /* "EHitResultGizmoFilterMode_MAX" */
}

external object EViewportInteractionDraggingMode {
    var Nothing: String /* "Nothing" */
    var TransformablesWithGizmo: String /* "TransformablesWithGizmo" */
    var TransformablesAtLaserImpact: String /* "TransformablesAtLaserImpact" */
    var AssistingDrag: String /* "AssistingDrag" */
    var TransformablesFreely: String /* "TransformablesFreely" */
    var World: String /* "World" */
    var Interactable: String /* "Interactable" */
    var Material: String /* "Material" */
    var EViewportInteractionDraggingMode_MAX: String /* "EViewportInteractionDraggingMode_MAX" */
}

external open class ViewportActionKeyInput {
    open var ActionType: String
    open var Event: String /* "IE_Pressed" | "IE_Released" | "IE_Repeat" | "IE_DoubleClick" | "IE_Axis" | "IE_MAX" */
    open var bIsInputCaptured: Boolean
    open fun clone(): ViewportActionKeyInput

    companion object {
        fun C(Other: UObject): ViewportActionKeyInput
        fun C(Other: Any): ViewportActionKeyInput
    }
}

external interface `T$554` {
    var bOutWasHandled: Boolean
}

external interface `T$555` {
    var OutHandTransform: Transform
    var OutForwardVector: Vector
    var `$`: Boolean
}

external interface `T$556` {
    var LaserPointerStart: Vector
    var LaserPointerEnd: Vector
    var `$`: Boolean
}

external open class ViewportInteractor : UObject {
    constructor()
    constructor(Outer: UObject)
    open var KeyToActionMap: Any
    open var WorldInteraction: ViewportWorldInteraction
    open var OtherInteractor: ViewportInteractor
    open fun Tick(DeltaTime: Number)
    open fun Shutdown()
    open fun SetHitResultGizmoFilterMode(newFilter: String /* "All" | "NoGizmos" | "GizmosOnly" | "EHitResultGizmoFilterMode_MAX" */)
    open fun SetDraggingMode(NewDraggingMode: String /* "Nothing" | "TransformablesWithGizmo" | "TransformablesAtLaserImpact" | "AssistingDrag" | "TransformablesFreely" | "World" | "Interactable" | "Material" | "EViewportInteractionDraggingMode_MAX" */)
    open fun SetCanCarry(bInCanCarry: Boolean)
    open fun IsHoveringOverGizmo(): Boolean
    open fun HandleInputKey(Action: ViewportActionKeyInput, Key: Key, Event: String /* "IE_Pressed" | "IE_Released" | "IE_Repeat" | "IE_DoubleClick" | "IE_Axis" | "IE_MAX" */, bOutWasHandled: Boolean = definedExternally): `T$554`
    open fun HandleInputAxis(Action: ViewportActionKeyInput, Key: Key, Delta: Number, DeltaTime: Number, bOutWasHandled: Boolean = definedExternally): `T$554`
    open fun GetWorldInteraction(): ViewportWorldInteraction
    open fun GetTransformAndForwardVector(OutHandTransform: Transform = definedExternally, OutForwardVector: Vector = definedExternally): `T$555`
    open fun GetTransform(): Transform
    open fun GetRoomSpaceTransform(): Transform
    open fun GetOtherInteractor(): ViewportInteractor
    open fun GetLastTransform(): Transform
    open fun GetLastRoomSpaceTransform(): Transform
    open fun GetLaserPointer(LaserPointerStart: Vector = definedExternally, LaserPointerEnd: Vector = definedExternally, bEvenIfBlocked: Boolean = definedExternally, LaserLengthOverride: Number = definedExternally): `T$556`
    open fun GetHoverLocation(): Vector
    open fun GetHitResultGizmoFilterMode(): String /* "All" | "NoGizmos" | "GizmosOnly" | "EHitResultGizmoFilterMode_MAX" */
    open fun GetDraggingMode(): String /* "Nothing" | "TransformablesWithGizmo" | "TransformablesAtLaserImpact" | "AssistingDrag" | "TransformablesFreely" | "World" | "Interactable" | "Material" | "EViewportInteractionDraggingMode_MAX" */
    open fun CanCarry(): Boolean

    companion object {
        fun Load(ResourceName: String): ViewportInteractor
        fun Find(Outer: UObject, ResourceName: String): ViewportInteractor
        fun GetDefaultObject(): ViewportInteractor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ViewportInteractor
        fun C(Other: UObject): ViewportInteractor
        fun C(Other: Any): ViewportInteractor
    }
}

external interface `T$557` {
    var bValueFound: Boolean
    var `$`: Number
}

external interface `T$558` {
    var bValueFound: Boolean
    var `$`: Vector
}

external open class MotionControllerComponent : PrimitiveComponent {
    constructor()
    constructor(Outer: UObject)
    open var PlayerIndex: Number
    open var Hand: String /* "Left" | "Right" | "AnyHand" | "Pad" | "ExternalCamera" | "Gun" | "HMD" | "Special_1" | "Special_2" | "Special_3" | "Special_4" | "Special_5" | "Special_6" | "Special_7" | "Special_8" | "Special_9" | "Special_10" | "Special_11" | "ControllerHand_Count" | "EControllerHand_MAX" */
    open var MotionSource: String
    open var bDisableLowLatencyUpdate: Boolean
    open var CurrentTrackingStatus: String /* "NotTracked" | "InertialOnly" | "Tracked" | "ETrackingStatus_MAX" */
    open var bDisplayDeviceModel: Boolean
    open var DisplayModelSource: String
    open var CustomDisplayMesh: StaticMesh
    open var DisplayMeshMaterialOverrides: Array<MaterialInterface>
    open var DisplayComponent: PrimitiveComponent
    open fun SetTrackingSource(NewSource: String /* "Left" | "Right" | "AnyHand" | "Pad" | "ExternalCamera" | "Gun" | "HMD" | "Special_1" | "Special_2" | "Special_3" | "Special_4" | "Special_5" | "Special_6" | "Special_7" | "Special_8" | "Special_9" | "Special_10" | "Special_11" | "ControllerHand_Count" | "EControllerHand_MAX" */)
    open fun SetTrackingMotionSource(NewSource: String)
    open fun SetShowDeviceModel(bShowControllerModel: Boolean)
    open fun SetDisplayModelSource(NewDisplayModelSource: String)
    open fun SetCustomDisplayMesh(NewDisplayMesh: StaticMesh)
    open fun SetAssociatedPlayerIndex(NewPlayer: Number)
    open fun OnMotionControllerUpdated()
    open fun IsTracked(): Boolean
    open fun GetTrackingSource(): String /* "Left" | "Right" | "AnyHand" | "Pad" | "ExternalCamera" | "Gun" | "HMD" | "Special_1" | "Special_2" | "Special_3" | "Special_4" | "Special_5" | "Special_6" | "Special_7" | "Special_8" | "Special_9" | "Special_10" | "Special_11" | "ControllerHand_Count" | "EControllerHand_MAX" */
    open fun GetParameterValue(InName: String, bValueFound: Boolean = definedExternally): `T$557`
    open fun GetHandJointPosition(jointIndex: Number, bValueFound: Boolean = definedExternally): `T$558`
    open fun DisableMotionTrackingForComponent()
    open fun EnableMotionTrackingForComponent(): Boolean
    open fun IsMotionTrackingEnabledForComponent(): Boolean

    companion object {
        fun Load(ResourceName: String): MotionControllerComponent
        fun Find(Outer: UObject, ResourceName: String): MotionControllerComponent
        fun GetDefaultObject(): MotionControllerComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MotionControllerComponent
        fun C(Other: UObject): MotionControllerComponent
        fun C(Other: Any): MotionControllerComponent
        fun DisableMotionTrackingForComponent(MotionControllerComponent: MotionControllerComponent)
        fun EnableMotionTrackingForComponent(MotionControllerComponent: MotionControllerComponent): Boolean
        fun IsMotionTrackingEnabledForComponent(MotionControllerComponent: MotionControllerComponent): Boolean
    }
}

external open class InterpCurvePointQuat {
    open var InVal: Number
    open var OutVal: Quat
    open var ArriveTangent: Quat
    open var LeaveTangent: Quat
    open var InterpMode: String /* "CIM_Linear" | "CIM_CurveAuto" | "CIM_Constant" | "CIM_CurveUser" | "CIM_CurveBreak" | "CIM_CurveAutoClamped" | "CIM_MAX" */
    open fun clone(): InterpCurvePointQuat

    companion object {
        fun C(Other: UObject): InterpCurvePointQuat
        fun C(Other: Any): InterpCurvePointQuat
    }
}

external open class InterpCurveQuat {
    open var Points: Array<InterpCurvePointQuat>
    open var bIsLooped: Boolean
    open var LoopKeyOffset: Number
    open fun clone(): InterpCurveQuat

    companion object {
        fun C(Other: UObject): InterpCurveQuat
        fun C(Other: Any): InterpCurveQuat
    }
}

external open class InterpCurvePointFloat {
    open var InVal: Number
    open var OutVal: Number
    open var ArriveTangent: Number
    open var LeaveTangent: Number
    open var InterpMode: String /* "CIM_Linear" | "CIM_CurveAuto" | "CIM_Constant" | "CIM_CurveUser" | "CIM_CurveBreak" | "CIM_CurveAutoClamped" | "CIM_MAX" */
    open fun clone(): InterpCurvePointFloat

    companion object {
        fun C(Other: UObject): InterpCurvePointFloat
        fun C(Other: Any): InterpCurvePointFloat
    }
}

external open class InterpCurveFloat {
    open var Points: Array<InterpCurvePointFloat>
    open var bIsLooped: Boolean
    open var LoopKeyOffset: Number
    open fun clone(): InterpCurveFloat

    companion object {
        fun C(Other: UObject): InterpCurveFloat
        fun C(Other: Any): InterpCurveFloat
    }
}

external open class SplineMetadata : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SplineMetadata
        fun Find(Outer: UObject, ResourceName: String): SplineMetadata
        fun GetDefaultObject(): SplineMetadata
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SplineMetadata
        fun C(Other: UObject): SplineMetadata
        fun C(Other: Any): SplineMetadata
    }
}

external open class SplineCurves {
    open var position: InterpCurveVector
    open var Rotation: InterpCurveQuat
    open var Scale: InterpCurveVector
    open var ReparamTable: InterpCurveFloat
    open var MetaData: SplineMetadata
    open var Version: Any
    open fun clone(): SplineCurves

    companion object {
        fun C(Other: UObject): SplineCurves
        fun C(Other: Any): SplineCurves
    }
}

external object ESplineCoordinateSpace {
    var Local: String /* "Local" */
    var World: String /* "World" */
    var ESplineCoordinateSpace_MAX: String /* "ESplineCoordinateSpace_MAX" */
}

external object ESplinePointType {
    var Linear: String /* "Linear" */
    var Curve: String /* "Curve" */
    var Constant: String /* "Constant" */
    var CurveClamped: String /* "CurveClamped" */
    var CurveCustomTangent: String /* "CurveCustomTangent" */
    var ESplinePointType_MAX: String /* "ESplinePointType_MAX" */
}

external open class SplinePoint {
    open var InputKey: Number
    open var position: Vector
    open var ArriveTangent: Vector
    open var LeaveTangent: Vector
    open var Rotation: Rotator
    open var Scale: Vector
    open var Type: String /* "Linear" | "Curve" | "Constant" | "CurveClamped" | "CurveCustomTangent" | "ESplinePointType_MAX" */
    open fun clone(): SplinePoint

    companion object {
        fun C(Other: UObject): SplinePoint
        fun C(Other: Any): SplinePoint
    }
}

external interface `T$559` {
    var Location: Vector
    var Tangent: Vector
}

external interface `T$560` {
    var LocalLocation: Vector
    var LocalTangent: Vector
}

external interface `T$561` {
    var OutPoints: Array<Vector>
    var `$`: Boolean
}

external interface `T$562` {
    var OutPoints: Array<Vector>
    var `$`: Boolean
}

external interface `T$563` {
    var OutPoints: Array<Vector>
    var `$`: Boolean
}

external open class SplineComponent : PrimitiveComponent {
    constructor()
    constructor(Outer: UObject)
    open var SplineCurves: SplineCurves
    open var SplineInfo: InterpCurveVector
    open var SplineRotInfo: InterpCurveQuat
    open var SplineScaleInfo: InterpCurveVector
    open var SplineReparamTable: InterpCurveFloat
    open var bAllowSplineEditingPerInstance: Boolean
    open var ReparamStepsPerSegment: Number
    open var Duration: Number
    open var bStationaryEndpoints: Boolean
    open var bSplineHasBeenEdited: Boolean
    open var bModifiedByConstructionScript: Boolean
    open var bInputSplinePointsToConstructionScript: Boolean
    open var bDrawDebug: Boolean
    open var bClosedLoop: Boolean
    open var bLoopPositionOverride: Boolean
    open var LoopPosition: Number
    open var DefaultUpVector: Vector
    open var EditorUnselectedSplineSegmentColor: LinearColor
    open var EditorSelectedSplineSegmentColor: LinearColor
    open var EditorTangentColor: LinearColor
    open var bAllowDiscontinuousSpline: Boolean
    open var bShouldVisualizeScale: Boolean
    open var ScaleVisualizationWidth: Number
    open fun UpdateSpline()
    open fun SetWorldLocationAtSplinePoint(PointIndex: Number, InLocation: Vector)
    open fun SetUpVectorAtSplinePoint(PointIndex: Number, InUpVector: Vector, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */, bUpdateSpline: Boolean)
    open fun SetUnselectedSplineSegmentColor(SegmentColor: LinearColor)
    open fun SetTangentsAtSplinePoint(PointIndex: Number, InArriveTangent: Vector, InLeaveTangent: Vector, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */, bUpdateSpline: Boolean)
    open fun SetTangentColor(TangentColor: LinearColor)
    open fun SetTangentAtSplinePoint(PointIndex: Number, InTangent: Vector, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */, bUpdateSpline: Boolean)
    open fun SetSplineWorldPoints(Points: Array<Vector>)
    open fun SetSplinePointType(PointIndex: Number, Type: String /* "Linear" | "Curve" | "Constant" | "CurveClamped" | "CurveCustomTangent" | "ESplinePointType_MAX" */, bUpdateSpline: Boolean)
    open fun SetSplinePoints(Points: Array<Vector>, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */, bUpdateSpline: Boolean)
    open fun SetSplineLocalPoints(Points: Array<Vector>)
    open fun SetSelectedSplineSegmentColor(SegmentColor: LinearColor)
    open fun SetScaleAtSplinePoint(PointIndex: Number, InScaleVector: Vector, bUpdateSpline: Boolean)
    open fun SetRotationAtSplinePoint(PointIndex: Number, InRotation: Rotator, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */, bUpdateSpline: Boolean)
    open fun SetLocationAtSplinePoint(PointIndex: Number, InLocation: Vector, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */, bUpdateSpline: Boolean)
    open fun SetDrawDebug(bShow: Boolean)
    open fun SetDefaultUpVector(UpVector: Vector, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */)
    open fun SetClosedLoopAtPosition(bInClosedLoop: Boolean, Key: Number, bUpdateSpline: Boolean)
    open fun SetClosedLoop(bInClosedLoop: Boolean, bUpdateSpline: Boolean)
    open fun RemoveSplinePoint(index: Number, bUpdateSpline: Boolean)
    open fun IsClosedLoop(): Boolean
    open fun GetWorldTangentAtDistanceAlongSpline(Distance: Number): Vector
    open fun GetWorldRotationAtTime(Time: Number, bUseConstantVelocity: Boolean): Rotator
    open fun GetWorldRotationAtDistanceAlongSpline(Distance: Number): Rotator
    open fun GetWorldLocationAtTime(Time: Number, bUseConstantVelocity: Boolean): Vector
    open fun GetWorldLocationAtSplinePoint(PointIndex: Number): Vector
    open fun GetWorldLocationAtDistanceAlongSpline(Distance: Number): Vector
    open fun GetWorldDirectionAtTime(Time: Number, bUseConstantVelocity: Boolean): Vector
    open fun GetWorldDirectionAtDistanceAlongSpline(Distance: Number): Vector
    open fun GetVectorPropertyAtSplinePoint(index: Number, PropertyName: String): Vector
    open fun GetVectorPropertyAtSplineInputKey(InKey: Number, PropertyName: String): Vector
    open fun GetUpVectorAtTime(Time: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */, bUseConstantVelocity: Boolean): Vector
    open fun GetUpVectorAtSplinePoint(PointIndex: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Vector
    open fun GetUpVectorAtSplineInputKey(InKey: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Vector
    open fun GetUpVectorAtDistanceAlongSpline(Distance: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Vector
    open fun GetTransformAtTime(Time: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */, bUseConstantVelocity: Boolean, bUseScale: Boolean): Transform
    open fun GetTransformAtSplinePoint(PointIndex: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */, bUseScale: Boolean): Transform
    open fun GetTransformAtSplineInputKey(InKey: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */, bUseScale: Boolean): Transform
    open fun GetTransformAtDistanceAlongSpline(Distance: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */, bUseScale: Boolean): Transform
    open fun GetTangentAtTime(Time: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */, bUseConstantVelocity: Boolean): Vector
    open fun GetTangentAtSplinePoint(PointIndex: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Vector
    open fun GetTangentAtSplineInputKey(InKey: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Vector
    open fun GetTangentAtDistanceAlongSpline(Distance: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Vector
    open fun GetSplinePointType(PointIndex: Number): String /* "Linear" | "Curve" | "Constant" | "CurveClamped" | "CurveCustomTangent" | "ESplinePointType_MAX" */
    open fun GetSplineLength(): Number
    open fun GetScaleAtTime(Time: Number, bUseConstantVelocity: Boolean): Vector
    open fun GetScaleAtSplinePoint(PointIndex: Number): Vector
    open fun GetScaleAtSplineInputKey(InKey: Number): Vector
    open fun GetScaleAtDistanceAlongSpline(Distance: Number): Vector
    open fun GetRotationAtTime(Time: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */, bUseConstantVelocity: Boolean): Rotator
    open fun GetRotationAtSplinePoint(PointIndex: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Rotator
    open fun GetRotationAtSplineInputKey(InKey: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Rotator
    open fun GetRotationAtDistanceAlongSpline(Distance: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Rotator
    open fun GetRollAtTime(Time: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */, bUseConstantVelocity: Boolean): Number
    open fun GetRollAtSplinePoint(PointIndex: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Number
    open fun GetRollAtSplineInputKey(InKey: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Number
    open fun GetRollAtDistanceAlongSpline(Distance: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Number
    open fun GetRightVectorAtTime(Time: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */, bUseConstantVelocity: Boolean): Vector
    open fun GetRightVectorAtSplinePoint(PointIndex: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Vector
    open fun GetRightVectorAtSplineInputKey(InKey: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Vector
    open fun GetRightVectorAtDistanceAlongSpline(Distance: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Vector
    open fun GetNumberOfSplineSegments(): Number
    open fun GetNumberOfSplinePoints(): Number
    open fun GetLocationAtTime(Time: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */, bUseConstantVelocity: Boolean): Vector
    open fun GetLocationAtSplinePoint(PointIndex: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Vector
    open fun GetLocationAtSplineInputKey(InKey: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Vector
    open fun GetLocationAtDistanceAlongSpline(Distance: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Vector
    open fun GetLocationAndTangentAtSplinePoint(PointIndex: Number, Location: Vector = definedExternally, Tangent: Vector = definedExternally, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */ = definedExternally): `T$559`
    open fun GetLocalLocationAndTangentAtSplinePoint(PointIndex: Number, LocalLocation: Vector = definedExternally, LocalTangent: Vector = definedExternally): `T$560`
    open fun GetLeaveTangentAtSplinePoint(PointIndex: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Vector
    open fun GetInputKeyAtDistanceAlongSpline(Distance: Number): Number
    open fun GetFloatPropertyAtSplinePoint(index: Number, PropertyName: String): Number
    open fun GetFloatPropertyAtSplineInputKey(InKey: Number, PropertyName: String): Number
    open fun GetDistanceAlongSplineAtSplinePoint(PointIndex: Number): Number
    open fun GetDistanceAlongSplineAtSplineInputKey(InKey: Number): Number
    open fun GetDirectionAtTime(Time: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */, bUseConstantVelocity: Boolean): Vector
    open fun GetDirectionAtSplinePoint(PointIndex: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Vector
    open fun GetDirectionAtSplineInputKey(InKey: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Vector
    open fun GetDirectionAtDistanceAlongSpline(Distance: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Vector
    open fun GetDefaultUpVector(CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Vector
    open fun GetArriveTangentAtSplinePoint(PointIndex: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Vector
    open fun FindUpVectorClosestToWorldLocation(WorldLocation: Vector, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Vector
    open fun FindTransformClosestToWorldLocation(WorldLocation: Vector, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */, bUseScale: Boolean): Transform
    open fun FindTangentClosestToWorldLocation(WorldLocation: Vector, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Vector
    open fun FindScaleClosestToWorldLocation(WorldLocation: Vector): Vector
    open fun FindRotationClosestToWorldLocation(WorldLocation: Vector, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Rotator
    open fun FindRollClosestToWorldLocation(WorldLocation: Vector, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Number
    open fun FindRightVectorClosestToWorldLocation(WorldLocation: Vector, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Vector
    open fun FindLocationClosestToWorldLocation(WorldLocation: Vector, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Vector
    open fun FindInputKeyClosestToWorldLocation(WorldLocation: Vector): Number
    open fun FindDirectionClosestToWorldLocation(WorldLocation: Vector, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Vector
    open fun DivideSplineIntoPolylineRecursive(StartDistanceAlongSpline: Number, EndDistanceAlongSpline: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */, MaxSquareDistanceFromSpline: Number, OutPoints: Array<Vector> = definedExternally): `T$561`
    open fun ConvertSplineToPolyLine(CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */, MaxSquareDistanceFromSpline: Number, OutPoints: Array<Vector> = definedExternally): `T$562`
    open fun ConvertSplineSegmentToPolyLine(SplinePointStartIndex: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */, MaxSquareDistanceFromSpline: Number, OutPoints: Array<Vector> = definedExternally): `T$563`
    open fun ClearSplinePoints(bUpdateSpline: Boolean)
    open fun AddSplineWorldPoint(position: Vector)
    open fun AddSplinePointAtIndex(position: Vector, index: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */, bUpdateSpline: Boolean)
    open fun AddSplinePoint(position: Vector, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */, bUpdateSpline: Boolean)
    open fun AddSplineLocalPoint(position: Vector)
    open fun AddPoints(Points: Array<SplinePoint>, bUpdateSpline: Boolean)
    open fun AddPoint(Point: SplinePoint, bUpdateSpline: Boolean)

    companion object {
        fun Load(ResourceName: String): SplineComponent
        fun Find(Outer: UObject, ResourceName: String): SplineComponent
        fun GetDefaultObject(): SplineComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SplineComponent
        fun C(Other: UObject): SplineComponent
        fun C(Other: Any): SplineComponent
    }
}

external open class SplineMeshParams {
    open var StartPos: Vector
    open var StartTangent: Vector
    open var StartScale: Vector2D
    open var StartRoll: Number
    open var StartOffset: Vector2D
    open var EndPos: Vector
    open var EndScale: Vector2D
    open var EndTangent: Vector
    open var EndRoll: Number
    open var EndOffset: Vector2D
    open fun clone(): SplineMeshParams

    companion object {
        fun C(Other: UObject): SplineMeshParams
        fun C(Other: Any): SplineMeshParams
    }
}

external object ESplineMeshAxis {
    var X: String /* "X" */
    var Y: String /* "Y" */
    var Z: String /* "Z" */
    var ESplineMeshAxis_MAX: String /* "ESplineMeshAxis_MAX" */
}

external open class SplineMeshComponent : StaticMeshComponent {
    constructor()
    constructor(Outer: UObject)
    open var SplineParams: SplineMeshParams
    open var SplineUpDir: Vector
    open var SplineBoundaryMin: Number
    open var CachedMeshBodySetupGuid: Guid
    open var BodySetup: BodySetup
    open var SplineBoundaryMax: Number
    open var bAllowSplineEditingPerInstance: Boolean
    open var bSmoothInterpRollScale: Boolean
    open var bMeshDirty: Boolean
    open var ForwardAxis: String /* "X" | "Y" | "Z" | "ESplineMeshAxis_MAX" */
    open var VirtualTextureMainPassMaxDrawDistance: Number
    open var bSelected: Boolean
    open fun UpdateMesh()
    open fun SetStartTangent(StartTangent: Vector, bUpdateMesh: Boolean)
    open fun SetStartScale(StartScale: Vector2D, bUpdateMesh: Boolean)
    open fun SetStartRoll(StartRoll: Number, bUpdateMesh: Boolean)
    open fun SetStartPosition(StartPos: Vector, bUpdateMesh: Boolean)
    open fun SetStartOffset(StartOffset: Vector2D, bUpdateMesh: Boolean)
    open fun SetStartAndEnd(StartPos: Vector, StartTangent: Vector, EndPos: Vector, EndTangent: Vector, bUpdateMesh: Boolean)
    open fun SetSplineUpDir(InSplineUpDir: Vector, bUpdateMesh: Boolean)
    open fun SetForwardAxis(InForwardAxis: String /* "X" | "Y" | "Z" | "ESplineMeshAxis_MAX" */, bUpdateMesh: Boolean)
    open fun SetEndTangent(EndTangent: Vector, bUpdateMesh: Boolean)
    open fun SetEndScale(EndScale: Vector2D, bUpdateMesh: Boolean)
    open fun SetEndRoll(EndRoll: Number, bUpdateMesh: Boolean)
    open fun SetEndPosition(EndPos: Vector, bUpdateMesh: Boolean)
    open fun SetEndOffset(EndOffset: Vector2D, bUpdateMesh: Boolean)
    open fun SetBoundaryMin(InBoundaryMin: Number, bUpdateMesh: Boolean)
    open fun SetBoundaryMax(InBoundaryMax: Number, bUpdateMesh: Boolean)
    open fun GetStartTangent(): Vector
    open fun GetStartScale(): Vector2D
    open fun GetStartRoll(): Number
    open fun GetStartPosition(): Vector
    open fun GetStartOffset(): Vector2D
    open fun GetSplineUpDir(): Vector
    open fun GetForwardAxis(): String /* "X" | "Y" | "Z" | "ESplineMeshAxis_MAX" */
    open fun GetEndTangent(): Vector
    open fun GetEndScale(): Vector2D
    open fun GetEndRoll(): Number
    open fun GetEndPosition(): Vector
    open fun GetEndOffset(): Vector2D
    open fun GetBoundaryMin(): Number
    open fun GetBoundaryMax(): Number

    companion object {
        fun Load(ResourceName: String): SplineMeshComponent
        fun Find(Outer: UObject, ResourceName: String): SplineMeshComponent
        fun GetDefaultObject(): SplineMeshComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SplineMeshComponent
        fun C(Other: UObject): SplineMeshComponent
        fun C(Other: Any): SplineMeshComponent
    }
}

external object ECastRayTracedShadow {
    var Disabled: String /* "Disabled" */
    var UseProjectSetting: String /* "UseProjectSetting" */
    var Enabled: String /* "Enabled" */
    var ECastRayTracedShadow_MAX: String /* "ECastRayTracedShadow_MAX" */
}

external open class LightComponentBase : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var LightGuid: Guid
    open var Brightness: Number
    open var Intensity: Number
    open var LightColor: Color
    open var bAffectsWorld: Boolean
    open var CastShadows: Boolean
    open var CastStaticShadows: Boolean
    open var CastDynamicShadows: Boolean
    open var bAffectTranslucentLighting: Boolean
    open var bTransmission: Boolean
    open var bCastVolumetricShadow: Boolean
    open var bCastDeepShadow: Boolean
    open var bCastRaytracedShadow: Boolean
    open var CastRaytracedShadow: String /* "Disabled" | "UseProjectSetting" | "Enabled" | "ECastRayTracedShadow_MAX" */
    open var bAffectReflection: Boolean
    open var bAffectGlobalIllumination: Boolean
    open var DeepShadowLayerDistribution: Number
    open var IndirectLightingIntensity: Number
    open var VolumetricScatteringIntensity: Number
    open var SamplesPerPixel: Number
    open var StaticEditorTexture: Texture2D
    open var StaticEditorTextureScale: Number
    open var DynamicEditorTexture: Texture2D
    open var DynamicEditorTextureScale: Number
    open fun SetSamplesPerPixel(NewValue: Number)
    open fun SetCastVolumetricShadow(bNewValue: Boolean)
    open fun SetCastShadows(bNewValue: Boolean)
    open fun SetCastRaytracedShadows(bNewValue: String /* "Disabled" | "UseProjectSetting" | "Enabled" | "ECastRayTracedShadow_MAX" */)
    open fun SetCastRaytracedShadow(bNewValue: Boolean)
    open fun SetCastDeepShadow(bNewValue: Boolean)
    open fun SetAffectReflection(bNewValue: Boolean)
    open fun SetAffectGlobalIllumination(bNewValue: Boolean)
    open fun GetLightColor(): LinearColor

    companion object {
        fun Load(ResourceName: String): LightComponentBase
        fun Find(Outer: UObject, ResourceName: String): LightComponentBase
        fun GetDefaultObject(): LightComponentBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LightComponentBase
        fun C(Other: UObject): LightComponentBase
        fun C(Other: Any): LightComponentBase
    }
}

external open class TextureLightProfile : Texture2D {
    constructor()
    constructor(Outer: UObject)
    open var Brightness: Number
    open var TextureMultiplier: Number

    companion object {
        fun Load(ResourceName: String): TextureLightProfile
        fun Find(Outer: UObject, ResourceName: String): TextureLightProfile
        fun GetDefaultObject(): TextureLightProfile
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextureLightProfile
        fun C(Other: UObject): TextureLightProfile
        fun C(Other: Any): TextureLightProfile
    }
}

external open class LightComponent : LightComponentBase {
    constructor()
    constructor(Outer: UObject)
    open var Temperature: Number
    open var MaxDrawDistance: Number
    open var MaxDistanceFadeRange: Number
    open var bUseTemperature: Boolean
    open var ShadowMapChannel: Number
    open var MinRoughness: Number
    open var SpecularScale: Number
    open var ShadowResolutionScale: Number
    open var ShadowBias: Number
    open var ShadowSlopeBias: Number
    open var ShadowSharpen: Number
    open var ContactShadowLength: Number
    open var ContactShadowLengthInWS: Boolean
    open var InverseSquaredFalloff: Boolean
    open var CastTranslucentShadows: Boolean
    open var bCastShadowsFromCinematicObjectsOnly: Boolean
    open var bAffectDynamicIndirectLighting: Boolean
    open var bForceCachedShadowsForMovablePrimitives: Boolean
    open var LightingChannels: LightingChannels
    open var LightFunctionMaterial: MaterialInterface
    open var LightFunctionScale: Vector
    open var IESTexture: TextureLightProfile
    open var bUseIESBrightness: Boolean
    open var IESBrightnessScale: Number
    open var LightFunctionFadeDistance: Number
    open var DisabledBrightness: Number
    open var bEnableLightShaftBloom: Boolean
    open var BloomScale: Number
    open var BloomThreshold: Number
    open var BloomMaxBrightness: Number
    open var BloomTint: Color
    open var bUseRayTracedDistanceFieldShadows: Boolean
    open var RayStartOffsetDepthScale: Number
    open fun SetVolumetricScatteringIntensity(NewIntensity: Number)
    open fun SetUseTemperature(bNewValue: Boolean)
    open fun SetUseIESIntensity(bNewValue: Boolean)
    open fun SetTransmission(bNewValue: Boolean)
    open fun SetTemperature(NewTemperature: Number)
    open fun SetSpecularScale(NewValue: Number)
    open fun SetShadowSlopeBias(NewValue: Number)
    open fun SetShadowBias(NewValue: Number)
    open fun SetLightingChannels(bChannel0: Boolean, bChannel1: Boolean, bChannel2: Boolean)
    open fun SetLightFunctionScale(NewLightFunctionScale: Vector)
    open fun SetLightFunctionMaterial(NewLightFunctionMaterial: MaterialInterface)
    open fun SetLightFunctionFadeDistance(NewLightFunctionFadeDistance: Number)
    open fun SetLightFunctionDisabledBrightness(NewValue: Number)
    open fun SetLightColor(NewLightColor: LinearColor, bSRGB: Boolean)
    open fun SetIntensity(NewIntensity: Number)
    open fun SetIndirectLightingIntensity(NewIntensity: Number)
    open fun SetIESTexture(NewValue: TextureLightProfile)
    open fun SetIESIntensityScale(NewValue: Number)
    open fun SetForceCachedShadowsForMovablePrimitives(bNewValue: Boolean)
    open fun SetEnableLightShaftBloom(bNewValue: Boolean)
    open fun SetBloomTint(NewValue: Color)
    open fun SetBloomThreshold(NewValue: Number)
    open fun SetBloomScale(NewValue: Number)
    open fun SetBloomMaxBrightness(NewValue: Number)
    open fun SetAffectTranslucentLighting(bNewValue: Boolean)
    open fun SetAffectDynamicIndirectLighting(bNewValue: Boolean)

    companion object {
        fun Load(ResourceName: String): LightComponent
        fun Find(Outer: UObject, ResourceName: String): LightComponent
        fun GetDefaultObject(): LightComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LightComponent
        fun C(Other: UObject): LightComponent
        fun C(Other: Any): LightComponent
    }
}

external object ELightUnits {
    var Unitless: String /* "Unitless" */
    var Candelas: String /* "Candelas" */
    var Lumens: String /* "Lumens" */
    var ELightUnits_MAX: String /* "ELightUnits_MAX" */
}

external open class LightmassLightSettings {
    open var IndirectLightingSaturation: Number
    open var ShadowExponent: Number
    open var bUseAreaShadowsForStationaryLight: Boolean
    open fun clone(): LightmassLightSettings

    companion object {
        fun C(Other: UObject): LightmassLightSettings
        fun C(Other: Any): LightmassLightSettings
    }
}

external open class LightmassPointLightSettings : LightmassLightSettings {
    override fun clone(): LightmassPointLightSettings

    companion object {
        fun C(Other: UObject): LightmassPointLightSettings
        fun C(Other: Any): LightmassPointLightSettings
    }
}

external open class LocalLightComponent : LightComponent {
    constructor()
    constructor(Outer: UObject)
    open var IntensityUnits: String /* "Unitless" | "Candelas" | "Lumens" | "ELightUnits_MAX" */
    open var Radius: Number
    open var AttenuationRadius: Number
    open var LightmassSettings: LightmassPointLightSettings
    open fun SetIntensityUnits(NewIntensityUnits: String /* "Unitless" | "Candelas" | "Lumens" | "ELightUnits_MAX" */)
    open fun SetAttenuationRadius(NewRadius: Number)

    companion object {
        fun Load(ResourceName: String): LocalLightComponent
        fun Find(Outer: UObject, ResourceName: String): LocalLightComponent
        fun GetDefaultObject(): LocalLightComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LocalLightComponent
        fun GetUnitsConversionFactor(SrcUnits: String /* "Unitless" | "Candelas" | "Lumens" | "ELightUnits_MAX" */, TargetUnits: String /* "Unitless" | "Candelas" | "Lumens" | "ELightUnits_MAX" */, CosHalfConeAngle: Number): Number
        fun C(Other: UObject): LocalLightComponent
        fun C(Other: Any): LocalLightComponent
    }
}

external open class PointLightComponent : LocalLightComponent {
    constructor()
    constructor(Outer: UObject)
    open var bUseInverseSquaredFalloff: Boolean
    open var LightFalloffExponent: Number
    open var SourceRadius: Number
    open var SoftSourceRadius: Number
    open var SourceLength: Number
    open fun SetSourceRadius(bNewValue: Number)
    open fun SetSourceLength(NewValue: Number)
    open fun SetSoftSourceRadius(bNewValue: Number)
    open fun SetLightFalloffExponent(NewLightFalloffExponent: Number)

    companion object {
        fun Load(ResourceName: String): PointLightComponent
        fun Find(Outer: UObject, ResourceName: String): PointLightComponent
        fun GetDefaultObject(): PointLightComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PointLightComponent
        fun C(Other: UObject): PointLightComponent
        fun C(Other: Any): PointLightComponent
    }
}

external object EControllerType {
    var Laser: String /* "Laser" */
    var AssistingLaser: String /* "AssistingLaser" */
    var UI: String /* "UI" */
    var Navigation: String /* "Navigation" */
    var Unknown: String /* "Unknown" */
    var EControllerType_MAX: String /* "EControllerType_MAX" */
}

external open class VREditorTeleporter(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var VRMode: VREditorMode
    open var TeleportDirectionMeshComponent: StaticMeshComponent
    open var HMDMeshComponent: StaticMeshComponent
    open var LeftMotionControllerMeshComponent: StaticMeshComponent
    open var RightMotionControllerMeshComponent: StaticMeshComponent
    open var TeleportMID: MaterialInstanceDynamic
    open var InteractorTryingTeleport: ViewportInteractor
    open fun TeleportDone()
    open fun StopAiming()
    open fun StartTeleport()
    open fun StartAiming(Interactor: ViewportInteractor)
    open fun Shutdown()
    open fun SetVisibility(bVisible: Boolean)
    open fun SetColor(Color: LinearColor)
    open fun IsTeleporting(): Boolean
    open fun IsAiming(): Boolean
    open fun Init(InMode: VREditorMode)
    open fun GetVRMode(): VREditorMode
    open fun GetSlideDelta(Interactor: VREditorInteractor, Axis: Boolean): Number
    open fun GetInteractorTryingTeleport(): ViewportInteractor
    open fun DoTeleport()

    companion object {
        fun GetDefaultObject(): VREditorTeleporter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VREditorTeleporter
        fun C(Other: UObject): VREditorTeleporter
        fun C(Other: Any): VREditorTeleporter
    }
}

external open class VREditorInteractor : ViewportInteractor {
    constructor()
    constructor(Outer: UObject)
    open var bIsUndoRedoSwipeEnabled: Boolean
    open var MotionControllerComponent: MotionControllerComponent
    open var HandMeshComponent: StaticMeshComponent
    open var LaserSplineComponent: SplineComponent
    open var LaserSplineMeshComponents: Array<SplineMeshComponent>
    open var LaserPointerMID: MaterialInstanceDynamic
    open var TranslucentLaserPointerMID: MaterialInstanceDynamic
    open var HoverMeshComponent: StaticMeshComponent
    open var HoverPointLightComponent: PointLightComponent
    open var HandMeshMID: MaterialInstanceDynamic
    open var OwningAvatar: Actor
    open var ControllerType: String /* "Laser" | "AssistingLaser" | "UI" | "Navigation" | "Unknown" | "EControllerType_MAX" */
    open var OverrideControllerType: String /* "Laser" | "AssistingLaser" | "UI" | "Navigation" | "Unknown" | "EControllerType_MAX" */
    open var ControllerMotionSource: String
    open var VRMode: VREditorMode
    open fun TryOverrideControllerType(InControllerType: String /* "Laser" | "AssistingLaser" | "UI" | "Navigation" | "Unknown" | "EControllerType_MAX" */): Boolean
    open fun SetupComponent(OwningActor: Actor)
    open fun SetForceShowLaser(bInForceShow: Boolean)
    open fun SetForceLaserColor(InColor: LinearColor)
    open fun SetControllerType(InControllerType: String /* "Laser" | "AssistingLaser" | "UI" | "Navigation" | "Unknown" | "EControllerType_MAX" */)
    open fun SetControllerHandSide(InControllerHandSide: String)
    open fun ReplaceHandMeshComponent(NewMesh: StaticMesh)
    open fun IsTouchingTrackpad(): Boolean
    open fun IsHoveringOverUI(): Boolean
    open fun IsClickingOnUI(): Boolean
    open fun Init(InVRMode: VREditorMode)
    open fun GetTrackpadPosition(): Vector2D
    open fun GetTeleportActor(): VREditorTeleporter
    open fun GetSlideDelta(): Number
    open fun GetSelectAndMoveTriggerValue(): Number
    open fun GetMotionControllerComponent(): MotionControllerComponent
    open fun GetLastTrackpadPosition(): Vector2D
    open fun GetLaserStart(): Vector
    open fun GetLaserEnd(): Vector
    open fun GetHMDDeviceType(): String
    open fun GetControllerType(): String /* "Laser" | "AssistingLaser" | "UI" | "Navigation" | "Unknown" | "EControllerType_MAX" */
    open fun GetControllerSide(): String /* "Left" | "Right" | "AnyHand" | "Pad" | "ExternalCamera" | "Gun" | "HMD" | "Special_1" | "Special_2" | "Special_3" | "Special_4" | "Special_5" | "Special_6" | "Special_7" | "Special_8" | "Special_9" | "Special_10" | "Special_11" | "ControllerHand_Count" | "EControllerHand_MAX" */
    open fun GetControllerHandSide(): String

    companion object {
        fun Load(ResourceName: String): VREditorInteractor
        fun Find(Outer: UObject, ResourceName: String): VREditorInteractor
        fun GetDefaultObject(): VREditorInteractor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VREditorInteractor
        fun C(Other: UObject): VREditorInteractor
        fun C(Other: Any): VREditorInteractor
    }
}

external open class VRButton {
    open var ButtonWidget: VREditorWidgetComponent
    open fun clone(): VRButton

    companion object {
        fun C(Other: UObject): VRButton
        fun C(Other: Any): VRButton
    }
}

external open class VRRadialMenuHandler : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): VRRadialMenuHandler
        fun Find(Outer: UObject, ResourceName: String): VRRadialMenuHandler
        fun GetDefaultObject(): VRRadialMenuHandler
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VRRadialMenuHandler
        fun C(Other: UObject): VRRadialMenuHandler
        fun C(Other: Any): VRRadialMenuHandler
    }
}

external open class VREditorUISystem : UObject {
    constructor()
    constructor(Outer: UObject)
    open var VRMode: VREditorMode
    open var FloatingUIs: Any
    open var PreviewWindowInfo: Any
    open var InfoDisplayPanel: VREditorFloatingUI
    open var QuickRadialMenu: VREditorRadialFloatingUI
    open var DraggingUI: VREditorDockableWindow
    open var ColorPickerUI: VREditorDockableWindow
    open var LaserInteractor: VREditorInteractor
    open var UIInteractor: VREditorInteractor
    open var VRButtons: Array<VRButton>
    open var RadialMenuHandler: VRRadialMenuHandler

    companion object {
        fun Load(ResourceName: String): VREditorUISystem
        fun Find(Outer: UObject, ResourceName: String): VREditorUISystem
        fun GetDefaultObject(): VREditorUISystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VREditorUISystem
        fun C(Other: UObject): VREditorUISystem
        fun C(Other: Any): VREditorUISystem
    }
}

external open class VREditorPlacement : UObject {
    constructor()
    constructor(Outer: UObject)
    open var VRMode: VREditorMode
    open var ViewportWorldInteraction: ViewportWorldInteraction
    open var FloatingUIAssetDraggedFrom: WidgetComponent
    open var PlacingMaterialOrTextureAsset: UObject

    companion object {
        fun Load(ResourceName: String): VREditorPlacement
        fun Find(Outer: UObject, ResourceName: String): VREditorPlacement
        fun GetDefaultObject(): VREditorPlacement
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VREditorPlacement
        fun C(Other: UObject): VREditorPlacement
        fun C(Other: Any): VREditorPlacement
    }
}

external open class VREditorMode : EditorWorldExtension {
    constructor()
    constructor(Outer: UObject)
    open var AvatarActor: VREditorAvatarActor
    open var UISystem: VREditorUISystem
    open var TeleportActor: VREditorTeleporter
    open var AutoScalerSystem: VREditorAutoScaler
    open var WorldInteraction: ViewportWorldInteraction
    open var PlacementSystem: VREditorPlacement
    open var Interactors: Array<VREditorInteractor>
    open var AssetContainer: VREditorAssetContainer
    open fun GetWorldScaleFactor(): Number

    companion object {
        fun Load(ResourceName: String): VREditorMode
        fun Find(Outer: UObject, ResourceName: String): VREditorMode
        fun GetDefaultObject(): VREditorMode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VREditorMode
        fun C(Other: UObject): VREditorMode
        fun C(Other: Any): VREditorMode
    }
}

external open class VREditorAutoScaler : UObject {
    constructor()
    constructor(Outer: UObject)
    open var VRMode: VREditorMode

    companion object {
        fun Load(ResourceName: String): VREditorAutoScaler
        fun Find(Outer: UObject, ResourceName: String): VREditorAutoScaler
        fun GetDefaultObject(): VREditorAutoScaler
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VREditorAutoScaler
        fun C(Other: UObject): VREditorAutoScaler
        fun C(Other: Any): VREditorAutoScaler
    }
}

external open class VREditorBaseUserWidget : UserWidget {
    constructor()
    constructor(Outer: UObject)
    open var Owner: Any

    companion object {
        fun Load(ResourceName: String): VREditorBaseUserWidget
        fun Find(Outer: UObject, ResourceName: String): VREditorBaseUserWidget
        fun GetDefaultObject(): VREditorBaseUserWidget
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VREditorBaseUserWidget
        fun C(Other: UObject): VREditorBaseUserWidget
        fun C(Other: Any): VREditorBaseUserWidget
    }
}

external open class VREditorCameraWidgetComponent : VREditorWidgetComponent {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): VREditorCameraWidgetComponent
        fun Find(Outer: UObject, ResourceName: String): VREditorCameraWidgetComponent
        fun GetDefaultObject(): VREditorCameraWidgetComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VREditorCameraWidgetComponent
        fun C(Other: UObject): VREditorCameraWidgetComponent
        fun C(Other: Any): VREditorCameraWidgetComponent
    }
}

external open class VREditorDockableCameraWindow(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : VREditorDockableWindow {
    companion object {
        fun GetDefaultObject(): VREditorDockableCameraWindow
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VREditorDockableCameraWindow
        fun C(Other: UObject): VREditorDockableCameraWindow
        fun C(Other: Any): VREditorDockableCameraWindow
    }
}

external open class DockableWindowDragOperation : ViewportDragOperation {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DockableWindowDragOperation
        fun Find(Outer: UObject, ResourceName: String): DockableWindowDragOperation
        fun GetDefaultObject(): DockableWindowDragOperation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DockableWindowDragOperation
        fun C(Other: UObject): DockableWindowDragOperation
        fun C(Other: Any): DockableWindowDragOperation
    }
}

external open class VREditorFloatingCameraUI(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : VREditorFloatingUI {
    open var OffsetFromCamera: Vector
    open var LinkedActor: Actor

    companion object {
        fun GetDefaultObject(): VREditorFloatingCameraUI
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VREditorFloatingCameraUI
        fun C(Other: UObject): VREditorFloatingCameraUI
        fun C(Other: Any): VREditorFloatingCameraUI
    }
}

external open class FloatingText(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var SceneComponent: SceneComponent
    open var FirstLineComponent: StaticMeshComponent
    open var JointSphereComponent: StaticMeshComponent
    open var SecondLineComponent: StaticMeshComponent
    open var TextComponent: TextRenderComponent
    open var MaskedTextMaterial: MaterialInterface
    open var TranslucentTextMaterial: MaterialInterface
    open var LineMaterial: MaterialInterface
    open var LineMaterialMID: MaterialInstanceDynamic

    companion object {
        fun GetDefaultObject(): FloatingText
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FloatingText
        fun C(Other: UObject): FloatingText
        fun C(Other: Any): FloatingText
    }
}

external open class VISettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bScaleWorldFromFloor: Boolean
    open var bScaleWorldWithDynamicPivot: Boolean
    open var bAllowSimultaneousWorldScalingAndRotation: Boolean

    companion object {
        fun Load(ResourceName: String): VISettings
        fun Find(Outer: UObject, ResourceName: String): VISettings
        fun GetDefaultObject(): VISettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VISettings
        fun C(Other: UObject): VISettings
        fun C(Other: Any): VISettings
    }
}

external object EInteractorHand {
    var Right: String /* "Right" */
    var Left: String /* "Left" */
    var EInteractorHand_MAX: String /* "EInteractorHand_MAX" */
}

external open class VRModeSettings : VISettings {
    constructor()
    constructor(Outer: UObject)
    open var bEnableAutoVREditMode: Boolean
    open var bAutokeySequences: Boolean
    open var InteractorHand: String /* "Right" | "Left" | "EInteractorHand_MAX" */
    open var bShowWorldMovementGrid: Boolean
    open var bShowWorldMovementPostProcess: Boolean
    open var bShowWorldScaleProgressBar: Boolean
    open var UIBrightness: Number
    open var GizmoScale: Number
    open var DoubleClickTime: Number
    open var TriggerPressedThreshold_Vive: Number
    open var TriggerPressedThreshold_Rift: Number
    open var InteractorClass: Class
    open var TeleporterClass: Class

    companion object {
        fun Load(ResourceName: String): VRModeSettings
        fun Find(Outer: UObject, ResourceName: String): VRModeSettings
        fun GetDefaultObject(): VRModeSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VRModeSettings
        fun C(Other: UObject): VRModeSettings
        fun C(Other: Any): VRModeSettings
    }
}

external object EGizmoHandleTypes {
    var All: String /* "All" */
    var Translate: String /* "Translate" */
    var Rotate: String /* "Rotate" */
    var Scale: String /* "Scale" */
    var EGizmoHandleTypes_MAX: String /* "EGizmoHandleTypes_MAX" */
}

external open class VRScoutingInteractor : VREditorInteractor {
    constructor()
    constructor(Outer: UObject)
    open var FlyingIndicatorComponent: StaticMeshComponent
    open fun SetGizmoMode(InGizmoMode: String /* "All" | "Translate" | "Rotate" | "Scale" | "EGizmoHandleTypes_MAX" */)
    open fun GetGizmoMode(): String /* "All" | "Translate" | "Rotate" | "Scale" | "EGizmoHandleTypes_MAX" */

    companion object {
        fun Load(ResourceName: String): VRScoutingInteractor
        fun Find(Outer: UObject, ResourceName: String): VRScoutingInteractor
        fun GetDefaultObject(): VRScoutingInteractor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VRScoutingInteractor
        fun GetSelectedActors(): Array<Actor>
        fun C(Other: UObject): VRScoutingInteractor
        fun C(Other: Any): VRScoutingInteractor
    }
}

external open class RuntimeVirtualTextureFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): RuntimeVirtualTextureFactory
        fun Find(Outer: UObject, ResourceName: String): RuntimeVirtualTextureFactory
        fun GetDefaultObject(): RuntimeVirtualTextureFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RuntimeVirtualTextureFactory
        fun C(Other: UObject): RuntimeVirtualTextureFactory
        fun C(Other: Any): RuntimeVirtualTextureFactory
    }
}

external open class ThumbnailRenderer : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): ThumbnailRenderer
        fun GetDefaultObject(): ThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ThumbnailRenderer
        fun C(Other: UObject): ThumbnailRenderer
        fun C(Other: Any): ThumbnailRenderer
    }
}

external open class DefaultSizedThumbnailRenderer : ThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)
    open var DefaultSizeX: Number
    open var DefaultSizeY: Number

    companion object {
        fun Load(ResourceName: String): DefaultSizedThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): DefaultSizedThumbnailRenderer
        fun GetDefaultObject(): DefaultSizedThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DefaultSizedThumbnailRenderer
        fun C(Other: UObject): DefaultSizedThumbnailRenderer
        fun C(Other: Any): DefaultSizedThumbnailRenderer
    }
}

external open class RuntimeVirtualTextureThumbnailRenderer : DefaultSizedThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): RuntimeVirtualTextureThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): RuntimeVirtualTextureThumbnailRenderer
        fun GetDefaultObject(): RuntimeVirtualTextureThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RuntimeVirtualTextureThumbnailRenderer
        fun C(Other: UObject): RuntimeVirtualTextureThumbnailRenderer
        fun C(Other: Any): RuntimeVirtualTextureThumbnailRenderer
    }
}

external open class VirtualTextureBuilderFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): VirtualTextureBuilderFactory
        fun Find(Outer: UObject, ResourceName: String): VirtualTextureBuilderFactory
        fun GetDefaultObject(): VirtualTextureBuilderFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VirtualTextureBuilderFactory
        fun C(Other: UObject): VirtualTextureBuilderFactory
        fun C(Other: Any): VirtualTextureBuilderFactory
    }
}

external open class TextureThumbnailRenderer : ThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TextureThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): TextureThumbnailRenderer
        fun GetDefaultObject(): TextureThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextureThumbnailRenderer
        fun C(Other: UObject): TextureThumbnailRenderer
        fun C(Other: Any): TextureThumbnailRenderer
    }
}

external open class VirtualTextureBuilderThumbnailRenderer : TextureThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): VirtualTextureBuilderThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): VirtualTextureBuilderThumbnailRenderer
        fun GetDefaultObject(): VirtualTextureBuilderThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VirtualTextureBuilderThumbnailRenderer
        fun C(Other: UObject): VirtualTextureBuilderThumbnailRenderer
        fun C(Other: Any): VirtualTextureBuilderThumbnailRenderer
    }
}

external open class MeshReconstructorBase : UObject {
    constructor()
    constructor(Outer: UObject)
    open fun StopReconstruction()
    open fun StartReconstruction()
    open fun PauseReconstruction()
    open fun IsReconstructionStarted(): Boolean
    open fun IsReconstructionPaused(): Boolean
    open fun DisconnectMRMesh()
    open fun ConnectMRMesh(Mesh: MRMeshComponent)

    companion object {
        fun Load(ResourceName: String): MeshReconstructorBase
        fun Find(Outer: UObject, ResourceName: String): MeshReconstructorBase
        fun GetDefaultObject(): MeshReconstructorBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MeshReconstructorBase
        fun C(Other: UObject): MeshReconstructorBase
        fun C(Other: Any): MeshReconstructorBase
    }
}

external object EMeshTrackerVertexColorMode {
    var None: String /* "None" */
    var Confidence: String /* "Confidence" */
    var Block: String /* "Block" */
    var EMeshTrackerVertexColorMode_MAX: String /* "EMeshTrackerVertexColorMode_MAX" */
}

external open class MockDataMeshTrackerComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var OnMeshTrackerUpdated: UnrealEngineMulticastDelegate<(index: Number, Vertices: Array<Vector>, Triangles: Array<Number>, Normals: Array<Vector>, Confidence: Array<Number>) -> Unit>
    open var ScanWorld: Boolean
    open var RequestNormals: Boolean
    open var RequestVertexConfidence: Boolean
    open var VertexColorMode: String /* "None" | "Confidence" | "Block" | "EMeshTrackerVertexColorMode_MAX" */
    open var BlockVertexColors: Array<Color>
    open var VertexColorFromConfidenceZero: LinearColor
    open var VertexColorFromConfidenceOne: LinearColor
    open var UpdateInterval: Number
    open var MRMesh: MRMeshComponent
    open fun DisconnectMRMesh(InMRMeshPtr: MRMeshComponent)
    open fun ConnectMRMesh(InMRMeshPtr: MRMeshComponent)

    companion object {
        fun Load(ResourceName: String): MockDataMeshTrackerComponent
        fun Find(Outer: UObject, ResourceName: String): MockDataMeshTrackerComponent
        fun GetDefaultObject(): MockDataMeshTrackerComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MockDataMeshTrackerComponent
        fun C(Other: UObject): MockDataMeshTrackerComponent
        fun C(Other: Any): MockDataMeshTrackerComponent
    }
}

external open class ARComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var NativeID: Guid
    open var bUseDefaultReplication: Boolean
    open var DefaultMeshMaterial: MaterialInterface
    open var DefaultWireframeMeshMaterial: MaterialInterface
    open var MRMeshComponent: MRMeshComponent
    open var MyTrackedGeometry: ARTrackedGeometry
    open fun UpdateVisualization()
    open fun SetNativeID(NativeID: Guid)
    open fun Remove()
    open fun OnRep_Payload()
    open fun GetMRMesh(): MRMeshComponent

    companion object {
        fun Load(ResourceName: String): ARComponent
        fun Find(Outer: UObject, ResourceName: String): ARComponent
        fun GetDefaultObject(): ARComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARComponent
        fun C(Other: UObject): ARComponent
        fun C(Other: Any): ARComponent
    }
}

external open class ARActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open fun AddARComponent(InComponentClass: UnrealEngineClass, NativeID: Guid): ARComponent

    companion object {
        fun GetDefaultObject(): ARActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARActor
        fun C(Other: UObject): ARActor
        fun C(Other: Any): ARActor
    }
}

external object EARCaptureType {
    var Camera: String /* "Camera" */
    var QRCode: String /* "QRCode" */
    var SpatialMapping: String /* "SpatialMapping" */
    var SceneUnderstanding: String /* "SceneUnderstanding" */
    var HandMesh: String /* "HandMesh" */
    var EARCaptureType_MAX: String /* "EARCaptureType_MAX" */
}

external object EARWorldAlignment {
    var Gravity: String /* "Gravity" */
    var GravityAndHeading: String /* "GravityAndHeading" */
    var Camera: String /* "Camera" */
    var EARWorldAlignment_MAX: String /* "EARWorldAlignment_MAX" */
}

external object EARSessionType {
    var None: String /* "None" */
    var Orientation: String /* "Orientation" */
    var World: String /* "World" */
    var Face: String /* "Face" */
    var Image: String /* "Image" */
    var ObjectScanning: String /* "ObjectScanning" */
    var PoseTracking: String /* "PoseTracking" */
    var GeoTracking: String /* "GeoTracking" */
    var EARSessionType_MAX: String /* "EARSessionType_MAX" */
}

external object EARPlaneDetectionMode {
    var None: String /* "None" */
    var HorizontalPlaneDetection: String /* "HorizontalPlaneDetection" */
    var VerticalPlaneDetection: String /* "VerticalPlaneDetection" */
    var EARPlaneDetectionMode_MAX: String /* "EARPlaneDetectionMode_MAX" */
}

external object EARLightEstimationMode {
    var None: String /* "None" */
    var AmbientLightEstimate: String /* "AmbientLightEstimate" */
    var DirectionalLightEstimate: String /* "DirectionalLightEstimate" */
    var EARLightEstimationMode_MAX: String /* "EARLightEstimationMode_MAX" */
}

external object EARFrameSyncMode {
    var SyncTickWithCameraImage: String /* "SyncTickWithCameraImage" */
    var SyncTickWithoutCameraImage: String /* "SyncTickWithoutCameraImage" */
    var EARFrameSyncMode_MAX: String /* "EARFrameSyncMode_MAX" */
}

external object EARCandidateImageOrientation {
    var Landscape: String /* "Landscape" */
    var Portrait: String /* "Portrait" */
    var EARCandidateImageOrientation_MAX: String /* "EARCandidateImageOrientation_MAX" */
}

external open class ARCandidateImage : DataAsset {
    constructor()
    constructor(Outer: UObject)
    open var CandidateTexture: Texture2D
    open var FriendlyName: String
    open var Width: Number
    open var Height: Number
    open var Orientation: String /* "Landscape" | "Portrait" | "EARCandidateImageOrientation_MAX" */
    open fun GetPhysicalWidth(): Number
    open fun GetPhysicalHeight(): Number
    open fun GetOrientation(): String /* "Landscape" | "Portrait" | "EARCandidateImageOrientation_MAX" */
    open fun GetFriendlyName(): String
    open fun GetCandidateTexture(): Texture2D

    companion object {
        fun Load(ResourceName: String): ARCandidateImage
        fun Find(Outer: UObject, ResourceName: String): ARCandidateImage
        fun GetDefaultObject(): ARCandidateImage
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARCandidateImage
        fun C(Other: UObject): ARCandidateImage
        fun C(Other: Any): ARCandidateImage
    }
}

external object EAREnvironmentCaptureProbeType {
    var None: String /* "None" */
    var Manual: String /* "Manual" */
    var Automatic: String /* "Automatic" */
    var EAREnvironmentCaptureProbeType_MAX: String /* "EAREnvironmentCaptureProbeType_MAX" */
}

external open class ARCandidateObject : DataAsset {
    constructor()
    constructor(Outer: UObject)
    open var CandidateObjectData: Array<Number>
    open var FriendlyName: String
    open var BoundingBox: Box
    open fun SetFriendlyName(NewName: String)
    open fun SetCandidateObjectData(InCandidateObject: Array<Number>)
    open fun SetBoundingBox(InBoundingBox: Box)
    open fun GetFriendlyName(): String
    open fun GetCandidateObjectData(): Array<Number>
    open fun GetBoundingBox(): Box

    companion object {
        fun Load(ResourceName: String): ARCandidateObject
        fun Find(Outer: UObject, ResourceName: String): ARCandidateObject
        fun GetDefaultObject(): ARCandidateObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARCandidateObject
        fun C(Other: UObject): ARCandidateObject
        fun C(Other: Any): ARCandidateObject
    }
}

external open class ARVideoFormat {
    open var FPS: Number
    open var Width: Number
    open var Height: Number
    open fun clone(): ARVideoFormat

    companion object {
        fun C(Other: UObject): ARVideoFormat
        fun C(Other: Any): ARVideoFormat
    }
}

external object EARFaceTrackingDirection {
    var FaceRelative: String /* "FaceRelative" */
    var FaceMirrored: String /* "FaceMirrored" */
    var EARFaceTrackingDirection_MAX: String /* "EARFaceTrackingDirection_MAX" */
}

external object EARFaceTrackingUpdate {
    var CurvesAndGeo: String /* "CurvesAndGeo" */
    var CurvesOnly: String /* "CurvesOnly" */
    var EARFaceTrackingUpdate_MAX: String /* "EARFaceTrackingUpdate_MAX" */
}

external object EARSessionTrackingFeature {
    var None: String /* "None" */
    var PoseDetection2D: String /* "PoseDetection2D" */
    var PersonSegmentation: String /* "PersonSegmentation" */
    var PersonSegmentationWithDepth: String /* "PersonSegmentationWithDepth" */
    var SceneDepth: String /* "SceneDepth" */
    var SmoothedSceneDepth: String /* "SmoothedSceneDepth" */
    var EARSessionTrackingFeature_MAX: String /* "EARSessionTrackingFeature_MAX" */
}

external object EARSceneReconstruction {
    var None: String /* "None" */
    var MeshOnly: String /* "MeshOnly" */
    var MeshWithClassification: String /* "MeshWithClassification" */
    var EARSceneReconstruction_MAX: String /* "EARSceneReconstruction_MAX" */
}

external open class ARSessionPayload {
    open var ConfigFlags: Number
    open var DefaultMeshMaterial: MaterialInterface
    open var DefaultWireframeMeshMaterial: MaterialInterface
    open fun clone(): ARSessionPayload

    companion object {
        fun C(Other: UObject): ARSessionPayload
        fun C(Other: Any): ARSessionPayload
    }
}

external open class ARPlaneUpdatePayload {
    open var SessionPayload: ARSessionPayload
    open var WorldTransform: Transform
    open var Center: Vector
    open var Extents: Vector
    open var BoundaryVertices: Array<Vector>
    open var ObjectClassification: String /* "NotApplicable" | "Unknown" | "Wall" | "Ceiling" | "Floor" | "Table" | "Seat" | "Face" | "Image" | "World" | "SceneObject" | "HandMesh" | "Door" | "Window" | "EARObjectClassification_MAX" */
    open fun clone(): ARPlaneUpdatePayload

    companion object {
        fun C(Other: UObject): ARPlaneUpdatePayload
        fun C(Other: Any): ARPlaneUpdatePayload
    }
}

external object EPlaneComponentDebugMode {
    var None: String /* "None" */
    var ShowNetworkRole: String /* "ShowNetworkRole" */
    var ShowClassification: String /* "ShowClassification" */
    var EPlaneComponentDebugMode_MAX: String /* "EPlaneComponentDebugMode_MAX" */
}

external open class ARPlaneComponent : ARComponent {
    constructor()
    constructor(Outer: UObject)
    open var ReplicatedPayload: ARPlaneUpdatePayload
    open fun ServerUpdatePayload(NewPayload: ARPlaneUpdatePayload)
    open fun Update(Payload: ARPlaneUpdatePayload)
    open fun Add(Payload: ARPlaneUpdatePayload)

    companion object {
        fun Load(ResourceName: String): ARPlaneComponent
        fun Find(Outer: UObject, ResourceName: String): ARPlaneComponent
        fun GetDefaultObject(): ARPlaneComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARPlaneComponent
        fun SetPlaneComponentDebugMode(NewDebugMode: String /* "None" | "ShowNetworkRole" | "ShowClassification" | "EPlaneComponentDebugMode_MAX" */)
        fun SetObjectClassificationDebugColors(InColors: Any)
        fun GetObjectClassificationDebugColors(): Any
        fun C(Other: UObject): ARPlaneComponent
        fun C(Other: Any): ARPlaneComponent
    }
}

external open class ARPointUpdatePayload {
    open fun clone(): ARPointUpdatePayload

    companion object {
        fun C(Other: UObject): ARPointUpdatePayload
        fun C(Other: Any): ARPointUpdatePayload
    }
}

external open class ARPointComponent : ARComponent {
    constructor()
    constructor(Outer: UObject)
    open var ReplicatedPayload: ARPointUpdatePayload
    open fun ServerUpdatePayload(NewPayload: ARPointUpdatePayload)
    open fun Update(Payload: ARPointUpdatePayload)
    open fun Add(Payload: ARPointUpdatePayload)

    companion object {
        fun Load(ResourceName: String): ARPointComponent
        fun Find(Outer: UObject, ResourceName: String): ARPointComponent
        fun GetDefaultObject(): ARPointComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARPointComponent
        fun C(Other: UObject): ARPointComponent
        fun C(Other: Any): ARPointComponent
    }
}

external object EARFaceTransformMixing {
    var ComponentOnly: String /* "ComponentOnly" */
    var ComponentLocationTrackedRotation: String /* "ComponentLocationTrackedRotation" */
    var ComponentWithTracked: String /* "ComponentWithTracked" */
    var TrackingOnly: String /* "TrackingOnly" */
    var EARFaceTransformMixing_MAX: String /* "EARFaceTransformMixing_MAX" */
}

external open class ARFaceUpdatePayload {
    open var SessionPayload: ARSessionPayload
    open var LeftEyePosition: Vector
    open var RightEyePosition: Vector
    open var LookAtTarget: Vector
    open fun clone(): ARFaceUpdatePayload

    companion object {
        fun C(Other: UObject): ARFaceUpdatePayload
        fun C(Other: Any): ARFaceUpdatePayload
    }
}

external object EFaceComponentDebugMode {
    var None: String /* "None" */
    var ShowEyeVectors: String /* "ShowEyeVectors" */
    var ShowFaceMesh: String /* "ShowFaceMesh" */
    var EFaceComponentDebugMode_MAX: String /* "EFaceComponentDebugMode_MAX" */
}

external open class ARFaceComponent : ARComponent {
    constructor()
    constructor(Outer: UObject)
    open var TransformSetting: String /* "ComponentOnly" | "ComponentLocationTrackedRotation" | "ComponentWithTracked" | "TrackingOnly" | "EARFaceTransformMixing_MAX" */
    open var bUpdateVertexNormal: Boolean
    open var bFaceOutOfScreen: Boolean
    open var ReplicatedPayload: ARFaceUpdatePayload
    open fun ServerUpdatePayload(NewPayload: ARFaceUpdatePayload)
    open fun Update(Payload: ARFaceUpdatePayload)
    open fun Add(Payload: ARFaceUpdatePayload)

    companion object {
        fun Load(ResourceName: String): ARFaceComponent
        fun Find(Outer: UObject, ResourceName: String): ARFaceComponent
        fun GetDefaultObject(): ARFaceComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARFaceComponent
        fun SetFaceComponentDebugMode(NewDebugMode: String /* "None" | "ShowEyeVectors" | "ShowFaceMesh" | "EFaceComponentDebugMode_MAX" */)
        fun C(Other: UObject): ARFaceComponent
        fun C(Other: Any): ARFaceComponent
    }
}

external open class ARImageUpdatePayload {
    open var SessionPayload: ARSessionPayload
    open var WorldTransform: Transform
    open var DetectedImage: ARCandidateImage
    open var EstimatedSize: Vector2D
    open fun clone(): ARImageUpdatePayload

    companion object {
        fun C(Other: UObject): ARImageUpdatePayload
        fun C(Other: Any): ARImageUpdatePayload
    }
}

external object EImageComponentDebugMode {
    var None: String /* "None" */
    var ShowDetectedImage: String /* "ShowDetectedImage" */
    var EImageComponentDebugMode_MAX: String /* "EImageComponentDebugMode_MAX" */
}

external open class ARImageComponent : ARComponent {
    constructor()
    constructor(Outer: UObject)
    open var ReplicatedPayload: ARImageUpdatePayload
    open fun ServerUpdatePayload(NewPayload: ARImageUpdatePayload)
    open fun Update(Payload: ARImageUpdatePayload)
    open fun Add(Payload: ARImageUpdatePayload)

    companion object {
        fun Load(ResourceName: String): ARImageComponent
        fun Find(Outer: UObject, ResourceName: String): ARImageComponent
        fun GetDefaultObject(): ARImageComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARImageComponent
        fun SetImageComponentDebugMode(NewDebugMode: String /* "None" | "ShowDetectedImage" | "EImageComponentDebugMode_MAX" */)
        fun C(Other: UObject): ARImageComponent
        fun C(Other: Any): ARImageComponent
    }
}

external open class ARQRCodeUpdatePayload {
    open var SessionPayload: ARSessionPayload
    open var WorldTransform: Transform
    open var Extents: Vector
    open var QRCode: String
    open fun clone(): ARQRCodeUpdatePayload

    companion object {
        fun C(Other: UObject): ARQRCodeUpdatePayload
        fun C(Other: Any): ARQRCodeUpdatePayload
    }
}

external object EQRCodeComponentDebugMode {
    var None: String /* "None" */
    var ShowQRCode: String /* "ShowQRCode" */
    var EQRCodeComponentDebugMode_MAX: String /* "EQRCodeComponentDebugMode_MAX" */
}

external open class ARQRCodeComponent : ARComponent {
    constructor()
    constructor(Outer: UObject)
    open var ReplicatedPayload: ARQRCodeUpdatePayload
    open fun ServerUpdatePayload(NewPayload: ARQRCodeUpdatePayload)
    open fun Update(Payload: ARQRCodeUpdatePayload)
    open fun Add(Payload: ARQRCodeUpdatePayload)

    companion object {
        fun Load(ResourceName: String): ARQRCodeComponent
        fun Find(Outer: UObject, ResourceName: String): ARQRCodeComponent
        fun GetDefaultObject(): ARQRCodeComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARQRCodeComponent
        fun SetQRCodeComponentDebugMode(NewDebugMode: String /* "None" | "ShowQRCode" | "EQRCodeComponentDebugMode_MAX" */)
        fun C(Other: UObject): ARQRCodeComponent
        fun C(Other: Any): ARQRCodeComponent
    }
}

external open class ARPoseUpdatePayload {
    open var WorldTransform: Transform
    open var JointTransforms: Array<Transform>
    open fun clone(): ARPoseUpdatePayload

    companion object {
        fun C(Other: UObject): ARPoseUpdatePayload
        fun C(Other: Any): ARPoseUpdatePayload
    }
}

external object EPoseComponentDebugMode {
    var None: String /* "None" */
    var ShowSkeleton: String /* "ShowSkeleton" */
    var EPoseComponentDebugMode_MAX: String /* "EPoseComponentDebugMode_MAX" */
}

external open class ARPoseComponent : ARComponent {
    constructor()
    constructor(Outer: UObject)
    open var ReplicatedPayload: ARPoseUpdatePayload
    open fun ServerUpdatePayload(NewPayload: ARPoseUpdatePayload)
    open fun Update(Payload: ARPoseUpdatePayload)
    open fun Add(Payload: ARPoseUpdatePayload)

    companion object {
        fun Load(ResourceName: String): ARPoseComponent
        fun Find(Outer: UObject, ResourceName: String): ARPoseComponent
        fun GetDefaultObject(): ARPoseComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARPoseComponent
        fun SetPoseComponentDebugMode(NewDebugMode: String /* "None" | "ShowSkeleton" | "EPoseComponentDebugMode_MAX" */)
        fun C(Other: UObject): ARPoseComponent
        fun C(Other: Any): ARPoseComponent
    }
}

external open class AREnvironmentProbeUpdatePayload {
    open var WorldTransform: Transform
    open fun clone(): AREnvironmentProbeUpdatePayload

    companion object {
        fun C(Other: UObject): AREnvironmentProbeUpdatePayload
        fun C(Other: Any): AREnvironmentProbeUpdatePayload
    }
}

external open class AREnvironmentProbeComponent : ARComponent {
    constructor()
    constructor(Outer: UObject)
    open var ReplicatedPayload: AREnvironmentProbeUpdatePayload
    open fun ServerUpdatePayload(NewPayload: AREnvironmentProbeUpdatePayload)
    open fun Update(Payload: AREnvironmentProbeUpdatePayload)
    open fun Add(Payload: AREnvironmentProbeUpdatePayload)

    companion object {
        fun Load(ResourceName: String): AREnvironmentProbeComponent
        fun Find(Outer: UObject, ResourceName: String): AREnvironmentProbeComponent
        fun GetDefaultObject(): AREnvironmentProbeComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AREnvironmentProbeComponent
        fun C(Other: UObject): AREnvironmentProbeComponent
        fun C(Other: Any): AREnvironmentProbeComponent
    }
}

external open class ARObjectUpdatePayload {
    open var WorldTransform: Transform
    open fun clone(): ARObjectUpdatePayload

    companion object {
        fun C(Other: UObject): ARObjectUpdatePayload
        fun C(Other: Any): ARObjectUpdatePayload
    }
}

external open class ARObjectComponent : ARComponent {
    constructor()
    constructor(Outer: UObject)
    open var ReplicatedPayload: ARObjectUpdatePayload
    open fun ServerUpdatePayload(NewPayload: ARObjectUpdatePayload)
    open fun Update(Payload: ARObjectUpdatePayload)
    open fun Add(Payload: ARObjectUpdatePayload)

    companion object {
        fun Load(ResourceName: String): ARObjectComponent
        fun Find(Outer: UObject, ResourceName: String): ARObjectComponent
        fun GetDefaultObject(): ARObjectComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARObjectComponent
        fun C(Other: UObject): ARObjectComponent
        fun C(Other: Any): ARObjectComponent
    }
}

external open class ARMeshUpdatePayload {
    open var SessionPayload: ARSessionPayload
    open var WorldTransform: Transform
    open var ObjectClassification: String /* "NotApplicable" | "Unknown" | "Wall" | "Ceiling" | "Floor" | "Table" | "Seat" | "Face" | "Image" | "World" | "SceneObject" | "HandMesh" | "Door" | "Window" | "EARObjectClassification_MAX" */
    open fun clone(): ARMeshUpdatePayload

    companion object {
        fun C(Other: UObject): ARMeshUpdatePayload
        fun C(Other: Any): ARMeshUpdatePayload
    }
}

external open class ARMeshComponent : ARComponent {
    constructor()
    constructor(Outer: UObject)
    open var ReplicatedPayload: ARMeshUpdatePayload
    open fun ServerUpdatePayload(NewPayload: ARMeshUpdatePayload)
    open fun Update(Payload: ARMeshUpdatePayload)
    open fun Add(Payload: ARMeshUpdatePayload)

    companion object {
        fun Load(ResourceName: String): ARMeshComponent
        fun Find(Outer: UObject, ResourceName: String): ARMeshComponent
        fun GetDefaultObject(): ARMeshComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARMeshComponent
        fun C(Other: UObject): ARMeshComponent
        fun C(Other: Any): ARMeshComponent
    }
}

external object EARAltitudeSource {
    var Precise: String /* "Precise" */
    var Coarse: String /* "Coarse" */
    var UserDefined: String /* "UserDefined" */
    var Unknown: String /* "Unknown" */
    var EARAltitudeSource_MAX: String /* "EARAltitudeSource_MAX" */
}

external open class ARGeoAnchorUpdatePayload {
    open var SessionPayload: ARSessionPayload
    open var WorldTransform: Transform
    open var Longitude: Number
    open var Latitude: Number
    open var AltitudeMeters: Number
    open var AltitudeSource: String /* "Precise" | "Coarse" | "UserDefined" | "Unknown" | "EARAltitudeSource_MAX" */
    open var AnchorName: String
    open fun clone(): ARGeoAnchorUpdatePayload

    companion object {
        fun C(Other: UObject): ARGeoAnchorUpdatePayload
        fun C(Other: Any): ARGeoAnchorUpdatePayload
    }
}

external object EGeoAnchorComponentDebugMode {
    var None: String /* "None" */
    var ShowGeoData: String /* "ShowGeoData" */
    var EGeoAnchorComponentDebugMode_MAX: String /* "EGeoAnchorComponentDebugMode_MAX" */
}

external open class ARGeoAnchorComponent : ARComponent {
    constructor()
    constructor(Outer: UObject)
    open var ReplicatedPayload: ARGeoAnchorUpdatePayload
    open fun ServerUpdatePayload(NewPayload: ARGeoAnchorUpdatePayload)
    open fun Update(Payload: ARGeoAnchorUpdatePayload)
    open fun Add(Payload: ARGeoAnchorUpdatePayload)

    companion object {
        fun Load(ResourceName: String): ARGeoAnchorComponent
        fun Find(Outer: UObject, ResourceName: String): ARGeoAnchorComponent
        fun GetDefaultObject(): ARGeoAnchorComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARGeoAnchorComponent
        fun SetGeoAnchorComponentDebugMode(NewDebugMode: String /* "None" | "ShowGeoData" | "EGeoAnchorComponentDebugMode_MAX" */)
        fun C(Other: UObject): ARGeoAnchorComponent
        fun C(Other: Any): ARGeoAnchorComponent
    }
}

external open class ARSessionConfig : DataAsset {
    constructor()
    constructor(Outer: UObject)
    open var bGenerateMeshDataFromTrackedGeometry: Boolean
    open var bGenerateCollisionForMeshData: Boolean
    open var bGenerateNavMeshForMeshData: Boolean
    open var bUseMeshDataForOcclusion: Boolean
    open var bRenderMeshDataInWireframe: Boolean
    open var bTrackSceneObjects: Boolean
    open var bUsePersonSegmentationForOcclusion: Boolean
    open var bUseSceneDepthForOcclusion: Boolean
    open var bUseAutomaticImageScaleEstimation: Boolean
    open var bUseStandardOnboardingUX: Boolean
    open var WorldAlignment: String /* "Gravity" | "GravityAndHeading" | "Camera" | "EARWorldAlignment_MAX" */
    open var SessionType: String /* "None" | "Orientation" | "World" | "Face" | "Image" | "ObjectScanning" | "PoseTracking" | "GeoTracking" | "EARSessionType_MAX" */
    open var PlaneDetectionMode: String /* "None" | "HorizontalPlaneDetection" | "VerticalPlaneDetection" | "EARPlaneDetectionMode_MAX" */
    open var bHorizontalPlaneDetection: Boolean
    open var bVerticalPlaneDetection: Boolean
    open var bEnableAutoFocus: Boolean
    open var LightEstimationMode: String /* "None" | "AmbientLightEstimate" | "DirectionalLightEstimate" | "EARLightEstimationMode_MAX" */
    open var FrameSyncMode: String /* "SyncTickWithCameraImage" | "SyncTickWithoutCameraImage" | "EARFrameSyncMode_MAX" */
    open var bEnableAutomaticCameraOverlay: Boolean
    open var bEnableAutomaticCameraTracking: Boolean
    open var bResetCameraTracking: Boolean
    open var bResetTrackedObjects: Boolean
    open var CandidateImages: Array<ARCandidateImage>
    open var MaxNumSimultaneousImagesTracked: Number
    open var EnvironmentCaptureProbeType: String /* "None" | "Manual" | "Automatic" | "EAREnvironmentCaptureProbeType_MAX" */
    open var WorldMapData: Array<Number>
    open var CandidateObjects: Array<ARCandidateObject>
    open var DesiredVideoFormat: ARVideoFormat
    open var bUseOptimalVideoFormat: Boolean
    open var FaceTrackingDirection: String /* "FaceRelative" | "FaceMirrored" | "EARFaceTrackingDirection_MAX" */
    open var FaceTrackingUpdate: String /* "CurvesAndGeo" | "CurvesOnly" | "EARFaceTrackingUpdate_MAX" */
    open var MaxNumberOfTrackedFaces: Number
    open var SerializedARCandidateImageDatabase: Array<Number>
    open var EnabledSessionTrackingFeature: String /* "None" | "PoseDetection2D" | "PersonSegmentation" | "PersonSegmentationWithDepth" | "SceneDepth" | "SmoothedSceneDepth" | "EARSessionTrackingFeature_MAX" */
    open var SceneReconstructionMethod: String /* "None" | "MeshOnly" | "MeshWithClassification" | "EARSceneReconstruction_MAX" */
    open var PlaneComponentClass: UnrealEngineClass
    open var PointComponentClass: UnrealEngineClass
    open var FaceComponentClass: UnrealEngineClass
    open var ImageComponentClass: UnrealEngineClass
    open var QRCodeComponentClass: UnrealEngineClass
    open var PoseComponentClass: UnrealEngineClass
    open var EnvironmentProbeComponentClass: UnrealEngineClass
    open var ObjectComponentClass: UnrealEngineClass
    open var MeshComponentClass: UnrealEngineClass
    open var GeoAnchorComponentClass: UnrealEngineClass
    open var DefaultMeshMaterial: MaterialInterface
    open var DefaultWireframeMeshMaterial: MaterialInterface
    open fun ShouldResetTrackedObjects(): Boolean
    open fun ShouldResetCameraTracking(): Boolean
    open fun ShouldRenderCameraOverlay(): Boolean
    open fun ShouldEnableCameraTracking(): Boolean
    open fun ShouldEnableAutoFocus(): Boolean
    open fun SetWorldMapData(WorldMapData: Array<Number>)
    open fun SetSessionTrackingFeatureToEnable(InSessionTrackingFeature: String /* "None" | "PoseDetection2D" | "PersonSegmentation" | "PersonSegmentationWithDepth" | "SceneDepth" | "SmoothedSceneDepth" | "EARSessionTrackingFeature_MAX" */)
    open fun SetSceneReconstructionMethod(InSceneReconstructionMethod: String /* "None" | "MeshOnly" | "MeshWithClassification" | "EARSceneReconstruction_MAX" */)
    open fun SetResetTrackedObjects(bNewValue: Boolean)
    open fun SetResetCameraTracking(bNewValue: Boolean)
    open fun SetFaceTrackingUpdate(InUpdate: String /* "CurvesAndGeo" | "CurvesOnly" | "EARFaceTrackingUpdate_MAX" */)
    open fun SetFaceTrackingDirection(InDirection: String /* "FaceRelative" | "FaceMirrored" | "EARFaceTrackingDirection_MAX" */)
    open fun SetEnableAutoFocus(bNewValue: Boolean)
    open fun SetDesiredVideoFormat(NewFormat: ARVideoFormat)
    open fun SetCandidateObjectList(InCandidateObjects: Array<ARCandidateObject>)
    open fun GetWorldMapData(): Array<Number>
    open fun GetWorldAlignment(): String /* "Gravity" | "GravityAndHeading" | "Camera" | "EARWorldAlignment_MAX" */
    open fun GetSessionType(): String /* "None" | "Orientation" | "World" | "Face" | "Image" | "ObjectScanning" | "PoseTracking" | "GeoTracking" | "EARSessionType_MAX" */
    open fun GetSceneReconstructionMethod(): String /* "None" | "MeshOnly" | "MeshWithClassification" | "EARSceneReconstruction_MAX" */
    open fun GetPlaneDetectionMode(): String /* "None" | "HorizontalPlaneDetection" | "VerticalPlaneDetection" | "EARPlaneDetectionMode_MAX" */
    open fun GetMaxNumSimultaneousImagesTracked(): Number
    open fun GetLightEstimationMode(): String /* "None" | "AmbientLightEstimate" | "DirectionalLightEstimate" | "EARLightEstimationMode_MAX" */
    open fun GetFrameSyncMode(): String /* "SyncTickWithCameraImage" | "SyncTickWithoutCameraImage" | "EARFrameSyncMode_MAX" */
    open fun GetFaceTrackingUpdate(): String /* "CurvesAndGeo" | "CurvesOnly" | "EARFaceTrackingUpdate_MAX" */
    open fun GetFaceTrackingDirection(): String /* "FaceRelative" | "FaceMirrored" | "EARFaceTrackingDirection_MAX" */
    open fun GetEnvironmentCaptureProbeType(): String /* "None" | "Manual" | "Automatic" | "EAREnvironmentCaptureProbeType_MAX" */
    open fun GetEnabledSessionTrackingFeature(): String /* "None" | "PoseDetection2D" | "PersonSegmentation" | "PersonSegmentationWithDepth" | "SceneDepth" | "SmoothedSceneDepth" | "EARSessionTrackingFeature_MAX" */
    open fun GetDesiredVideoFormat(): ARVideoFormat
    open fun GetCandidateObjectList(): Array<ARCandidateObject>
    open fun GetCandidateImageList(): Array<ARCandidateImage>
    open fun AddCandidateObject(CandidateObject: ARCandidateObject)
    open fun AddCandidateImage(NewCandidateImage: ARCandidateImage)
    open fun AddRuntimeCandidateImage(CandidateTexture: Texture2D, FriendlyName: String, PhysicalWidth: Number): ARCandidateImage
    open fun StartARSession()

    companion object {
        fun Load(ResourceName: String): ARSessionConfig
        fun Find(Outer: UObject, ResourceName: String): ARSessionConfig
        fun GetDefaultObject(): ARSessionConfig
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARSessionConfig
        fun C(Other: UObject): ARSessionConfig
        fun C(Other: Any): ARSessionConfig
        fun AddRuntimeCandidateImage(SessionConfig: ARSessionConfig, CandidateTexture: Texture2D, FriendlyName: String, PhysicalWidth: Number): ARCandidateImage
        fun StartARSession(SessionConfig: ARSessionConfig)
    }
}

external object EARWorldMappingState {
    var NotAvailable: String /* "NotAvailable" */
    var StillMappingNotRelocalizable: String /* "StillMappingNotRelocalizable" */
    var StillMappingRelocalizable: String /* "StillMappingRelocalizable" */
    var Mapped: String /* "Mapped" */
    var EARWorldMappingState_MAX: String /* "EARWorldMappingState_MAX" */
}

external object EARTrackingQualityReason {
    var None: String /* "None" */
    var Initializing: String /* "Initializing" */
    var Relocalizing: String /* "Relocalizing" */
    var ExcessiveMotion: String /* "ExcessiveMotion" */
    var InsufficientFeatures: String /* "InsufficientFeatures" */
    var InsufficientLight: String /* "InsufficientLight" */
    var BadState: String /* "BadState" */
    var EARTrackingQualityReason_MAX: String /* "EARTrackingQualityReason_MAX" */
}

external object EARTrackingQuality {
    var NotTracking: String /* "NotTracking" */
    var OrientationOnly: String /* "OrientationOnly" */
    var OrientationAndPosition: String /* "OrientationAndPosition" */
    var EARTrackingQuality_MAX: String /* "EARTrackingQuality_MAX" */
}

external object EARTextureType {
    var Unknown: String /* "Unknown" */
    var CameraImage: String /* "CameraImage" */
    var CameraDepth: String /* "CameraDepth" */
    var EnvironmentCapture: String /* "EnvironmentCapture" */
    var PersonSegmentationImage: String /* "PersonSegmentationImage" */
    var PersonSegmentationDepth: String /* "PersonSegmentationDepth" */
    var SceneDepthMap: String /* "SceneDepthMap" */
    var SceneDepthConfidenceMap: String /* "SceneDepthConfidenceMap" */
    var EARTextureType_MAX: String /* "EARTextureType_MAX" */
}

external open class ARTexture : Texture {
    constructor()
    constructor(Outer: UObject)
    open var TextureType: String /* "Unknown" | "CameraImage" | "CameraDepth" | "EnvironmentCapture" | "PersonSegmentationImage" | "PersonSegmentationDepth" | "SceneDepthMap" | "SceneDepthConfidenceMap" | "EARTextureType_MAX" */
    open var Timestamp: Number
    open var ExternalTextureGuid: Guid
    open var Size: Vector2D

    companion object {
        fun Load(ResourceName: String): ARTexture
        fun Find(Outer: UObject, ResourceName: String): ARTexture
        fun GetDefaultObject(): ARTexture
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARTexture
        fun C(Other: UObject): ARTexture
        fun C(Other: Any): ARTexture
    }
}

external open class ARLightEstimate : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ARLightEstimate
        fun Find(Outer: UObject, ResourceName: String): ARLightEstimate
        fun GetDefaultObject(): ARLightEstimate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARLightEstimate
        fun C(Other: UObject): ARLightEstimate
        fun C(Other: Any): ARLightEstimate
    }
}

external interface `T$564` {
    var OutCameraIntrinsics: ARCameraIntrinsics
    var `$`: Boolean
}

external open class ARCameraIntrinsics {
    open var ImageResolution: IntPoint
    open var FocalLength: Vector2D
    open var PrincipalPoint: Vector2D
    open fun clone(): ARCameraIntrinsics
    open fun GetCameraIntrinsics(): `T$564`

    companion object {
        fun C(Other: UObject): ARCameraIntrinsics
        fun C(Other: Any): ARCameraIntrinsics
        fun GetCameraIntrinsics(OutCameraIntrinsics: ARCameraIntrinsics = definedExternally): `T$564`
    }
}

external open class ARTextureCameraImage : ARTexture {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ARTextureCameraImage
        fun Find(Outer: UObject, ResourceName: String): ARTextureCameraImage
        fun GetDefaultObject(): ARTextureCameraImage
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARTextureCameraImage
        fun C(Other: UObject): ARTextureCameraImage
        fun C(Other: Any): ARTextureCameraImage
    }
}

external object EARDepthQuality {
    var Unkown: String /* "Unkown" */
    var Low: String /* "Low" */
    var High: String /* "High" */
    var EARDepthQuality_MAX: String /* "EARDepthQuality_MAX" */
}

external object EARDepthAccuracy {
    var Unkown: String /* "Unkown" */
    var Approximate: String /* "Approximate" */
    var Accurate: String /* "Accurate" */
    var EARDepthAccuracy_MAX: String /* "EARDepthAccuracy_MAX" */
}

external open class ARTextureCameraDepth : ARTexture {
    constructor()
    constructor(Outer: UObject)
    open var DepthQuality: String /* "Unkown" | "Low" | "High" | "EARDepthQuality_MAX" */
    open var DepthAccuracy: String /* "Unkown" | "Approximate" | "Accurate" | "EARDepthAccuracy_MAX" */
    open var bIsTemporallySmoothed: Boolean

    companion object {
        fun Load(ResourceName: String): ARTextureCameraDepth
        fun Find(Outer: UObject, ResourceName: String): ARTextureCameraDepth
        fun GetDefaultObject(): ARTextureCameraDepth
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARTextureCameraDepth
        fun C(Other: UObject): ARTextureCameraDepth
        fun C(Other: Any): ARTextureCameraDepth
    }
}

external object EARSessionStatus {
    var NotStarted: String /* "NotStarted" */
    var Running: String /* "Running" */
    var NotSupported: String /* "NotSupported" */
    var FatalError: String /* "FatalError" */
    var PermissionNotGranted: String /* "PermissionNotGranted" */
    var UnsupportedConfiguration: String /* "UnsupportedConfiguration" */
    var Other: String /* "Other" */
    var EARSessionStatus_MAX: String /* "EARSessionStatus_MAX" */
}

external open class ARSessionStatus {
    open var AdditionalInfo: String
    open var Status: String /* "NotStarted" | "Running" | "NotSupported" | "FatalError" | "PermissionNotGranted" | "UnsupportedConfiguration" | "Other" | "EARSessionStatus_MAX" */
    open fun clone(): ARSessionStatus

    companion object {
        fun C(Other: UObject): ARSessionStatus
        fun C(Other: Any): ARSessionStatus
        fun GetARSessionStatus(): ARSessionStatus
    }
}

external open class ARSkeletonDefinition {
    open var NumJoints: Number
    open var JointNames: Array<String>
    open var ParentIndices: Array<Number>
    open fun clone(): ARSkeletonDefinition

    companion object {
        fun C(Other: UObject): ARSkeletonDefinition
        fun C(Other: Any): ARSkeletonDefinition
    }
}

external object EARJointTransformSpace {
    var Model: String /* "Model" */
    var ParentJoint: String /* "ParentJoint" */
    var EARJointTransformSpace_MAX: String /* "EARJointTransformSpace_MAX" */
}

external open class ARPose3D {
    open var SkeletonDefinition: ARSkeletonDefinition
    open var JointTransforms: Array<Transform>
    open var IsJointTracked: Array<Boolean>
    open var JointTransformSpace: String /* "Model" | "ParentJoint" | "EARJointTransformSpace_MAX" */
    open fun clone(): ARPose3D

    companion object {
        fun C(Other: UObject): ARPose3D
        fun C(Other: Any): ARPose3D
    }
}

external open class ARTrackedPose : ARTrackedGeometry {
    constructor()
    constructor(Outer: UObject)
    open var TrackedPose: ARPose3D
    open fun GetTrackedPoseData(): ARPose3D

    companion object {
        fun Load(ResourceName: String): ARTrackedPose
        fun Find(Outer: UObject, ResourceName: String): ARTrackedPose
        fun GetDefaultObject(): ARTrackedPose
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARTrackedPose
        fun C(Other: UObject): ARTrackedPose
        fun C(Other: Any): ARTrackedPose
    }
}

external open class ARTrackedPoint : ARTrackedGeometry {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ARTrackedPoint
        fun Find(Outer: UObject, ResourceName: String): ARTrackedPoint
        fun GetDefaultObject(): ARTrackedPoint
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARTrackedPoint
        fun C(Other: UObject): ARTrackedPoint
        fun C(Other: Any): ARTrackedPoint
    }
}

external object EARPlaneOrientation {
    var Horizontal: String /* "Horizontal" */
    var Vertical: String /* "Vertical" */
    var Diagonal: String /* "Diagonal" */
    var EARPlaneOrientation_MAX: String /* "EARPlaneOrientation_MAX" */
}

external open class ARPlaneGeometry : ARTrackedGeometry {
    constructor()
    constructor(Outer: UObject)
    open var Orientation: String /* "Horizontal" | "Vertical" | "Diagonal" | "EARPlaneOrientation_MAX" */
    open var Center: Vector
    open var Extent: Vector
    open var BoundaryPolygon: Array<Vector>
    open var SubsumedBy: ARPlaneGeometry
    open fun GetSubsumedBy(): ARPlaneGeometry
    open fun GetOrientation(): String /* "Horizontal" | "Vertical" | "Diagonal" | "EARPlaneOrientation_MAX" */
    open fun GetExtent(): Vector
    open fun GetCenter(): Vector
    open fun GetBoundaryPolygonInLocalSpace(): Array<Vector>

    companion object {
        fun Load(ResourceName: String): ARPlaneGeometry
        fun Find(Outer: UObject, ResourceName: String): ARPlaneGeometry
        fun GetDefaultObject(): ARPlaneGeometry
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARPlaneGeometry
        fun C(Other: UObject): ARPlaneGeometry
        fun C(Other: Any): ARPlaneGeometry
    }
}

external open class ARTrackedImage : ARTrackedGeometry {
    constructor()
    constructor(Outer: UObject)
    open var DetectedImage: ARCandidateImage
    open var EstimatedSize: Vector2D
    open fun GetEstimateSize(): Vector2D
    open fun GetDetectedImage(): ARCandidateImage

    companion object {
        fun Load(ResourceName: String): ARTrackedImage
        fun Find(Outer: UObject, ResourceName: String): ARTrackedImage
        fun GetDefaultObject(): ARTrackedImage
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARTrackedImage
        fun C(Other: UObject): ARTrackedImage
        fun C(Other: Any): ARTrackedImage
    }
}

external open class AREnvironmentCaptureProbeTexture : TextureCube {
    constructor()
    constructor(Outer: UObject)
    open var TextureType: String /* "Unknown" | "CameraImage" | "CameraDepth" | "EnvironmentCapture" | "PersonSegmentationImage" | "PersonSegmentationDepth" | "SceneDepthMap" | "SceneDepthConfidenceMap" | "EARTextureType_MAX" */
    open var Timestamp: Number
    open var ExternalTextureGuid: Guid
    open var Size: Vector2D

    companion object {
        fun Load(ResourceName: String): AREnvironmentCaptureProbeTexture
        fun Find(Outer: UObject, ResourceName: String): AREnvironmentCaptureProbeTexture
        fun GetDefaultObject(): AREnvironmentCaptureProbeTexture
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AREnvironmentCaptureProbeTexture
        fun C(Other: UObject): AREnvironmentCaptureProbeTexture
        fun C(Other: Any): AREnvironmentCaptureProbeTexture
    }
}

external open class AREnvironmentCaptureProbe : ARTrackedGeometry {
    constructor()
    constructor(Outer: UObject)
    open var Extent: Vector
    open var EnvironmentCaptureTexture: AREnvironmentCaptureProbeTexture
    open fun GetExtent(): Vector
    open fun GetEnvironmentCaptureTexture(): AREnvironmentCaptureProbeTexture

    companion object {
        fun Load(ResourceName: String): AREnvironmentCaptureProbe
        fun Find(Outer: UObject, ResourceName: String): AREnvironmentCaptureProbe
        fun GetDefaultObject(): AREnvironmentCaptureProbe
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AREnvironmentCaptureProbe
        fun C(Other: UObject): AREnvironmentCaptureProbe
        fun C(Other: Any): AREnvironmentCaptureProbe
    }
}

external open class ARPose2D {
    open var SkeletonDefinition: ARSkeletonDefinition
    open var JointLocations: Array<Vector2D>
    open var IsJointTracked: Array<Boolean>
    open fun clone(): ARPose2D

    companion object {
        fun C(Other: UObject): ARPose2D
        fun C(Other: Any): ARPose2D
    }
}

external interface `T$565` {
    var ClosestIntersection: Vector
}

external open class ARBlueprintLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ARBlueprintLibrary
        fun Find(Outer: UObject, ResourceName: String): ARBlueprintLibrary
        fun GetDefaultObject(): ARBlueprintLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARBlueprintLibrary
        fun UnpinComponent(ComponentToUnpin: SceneComponent)
        fun ToggleARCapture(bOnOff: Boolean, CaptureType: String /* "Camera" | "QRCode" | "SpatialMapping" | "SceneUnderstanding" | "HandMesh" | "EARCaptureType_MAX" */): Boolean
        fun StopARSession()
        fun StartARSession(SessionConfig: ARSessionConfig)
        fun SetEnabledXRCamera(bOnOff: Boolean)
        fun SetARWorldScale(InWorldScale: Number)
        fun SetARWorldOriginLocationAndRotation(OriginLocation: Vector, OriginRotation: Rotator, bIsTransformInWorldSpace: Boolean, bMaintainUpDirection: Boolean)
        fun SetAlignmentTransform(InAlignmentTransform: Transform)
        fun SaveARPinToLocalStore(InSaveName: String, InPin: ARPin): Boolean
        fun ResizeXRCamera(InSize: IntPoint): IntPoint
        fun RemovePin(PinToRemove: ARPin)
        fun RemoveARPinFromLocalStore(InSaveName: String)
        fun RemoveAllARPinsFromLocalStore()
        fun PinComponentToTraceResult(ComponentToPin: SceneComponent, TraceResult: ARTraceResult, DebugName: String): ARPin
        fun PinComponentToARPin(ComponentToPin: SceneComponent, Pin: ARPin): Boolean
        fun PinComponent(ComponentToPin: SceneComponent, PinToWorldTransform: Transform, TrackedGeometry: ARTrackedGeometry, DebugName: String): ARPin
        fun PauseARSession()
        fun LoadARPinsFromLocalStore(): Any
        fun LineTraceTrackedObjects3D(Start: Vector, End: Vector, bTestFeaturePoints: Boolean, bTestGroundPlane: Boolean, bTestPlaneExtents: Boolean, bTestPlaneBoundaryPolygon: Boolean): Array<ARTraceResult>
        fun LineTraceTrackedObjects(ScreenCoord: Vector2D, bTestFeaturePoints: Boolean, bTestGroundPlane: Boolean, bTestPlaneExtents: Boolean, bTestPlaneBoundaryPolygon: Boolean): Array<ARTraceResult>
        fun IsARSessionTypeSupported(SessionType: String /* "None" | "Orientation" | "World" | "Face" | "Image" | "ObjectScanning" | "PoseTracking" | "GeoTracking" | "EARSessionType_MAX" */): Boolean
        fun IsARSessionTrackingFeatureSupported(SessionType: String /* "None" | "Orientation" | "World" | "Face" | "Image" | "ObjectScanning" | "PoseTracking" | "GeoTracking" | "EARSessionType_MAX" */, SessionTrackingFeature: String /* "None" | "PoseDetection2D" | "PersonSegmentation" | "PersonSegmentationWithDepth" | "SceneDepth" | "SmoothedSceneDepth" | "EARSessionTrackingFeature_MAX" */): Boolean
        fun IsARSceneReconstructionSupported(SessionType: String /* "None" | "Orientation" | "World" | "Face" | "Image" | "ObjectScanning" | "PoseTracking" | "GeoTracking" | "EARSessionType_MAX" */, SceneReconstructionMethod: String /* "None" | "MeshOnly" | "MeshWithClassification" | "EARSceneReconstruction_MAX" */): Boolean
        fun IsARSupported(): Boolean
        fun IsARPinLocalStoreSupported(): Boolean
        fun IsARPinLocalStoreReady(): Boolean
        fun GetARWorldMappingStatus(): String /* "NotAvailable" | "StillMappingNotRelocalizable" | "StillMappingRelocalizable" | "Mapped" | "EARWorldMappingState_MAX" */
        fun GetARTrackingQualityReason(): String /* "None" | "Initializing" | "Relocalizing" | "ExcessiveMotion" | "InsufficientFeatures" | "InsufficientLight" | "BadState" | "EARTrackingQualityReason_MAX" */
        fun GetARTrackingQuality(): String /* "NotTracking" | "OrientationOnly" | "OrientationAndPosition" | "EARTrackingQuality_MAX" */
        fun GetSupportedARVideoFormats(SessionType: String /* "None" | "Orientation" | "World" | "Face" | "Image" | "ObjectScanning" | "PoseTracking" | "GeoTracking" | "EARSessionType_MAX" */): Array<ARVideoFormat>
        fun GetARSessionConfig(): ARSessionConfig
        fun GetARPointCloud(): Array<Vector>
        fun GetARPersonSegmentationImage(): ARTexture
        fun GetARPersonSegmentationDepthImage(): ARTexture
        fun GetObjectClassificationAtLocation(InWorldLocation: Vector, OutClassification: String /* "NotApplicable" | "Unknown" | "Wall" | "Ceiling" | "Floor" | "Table" | "Seat" | "Face" | "Image" | "World" | "SceneObject" | "HandMesh" | "Door" | "Window" | "EARObjectClassification_MAX" */ = definedExternally, OutClassificationLocation: Vector = definedExternally, MaxLocationDiff: Number = definedExternally): `T$506`
        fun GetNumberOfTrackedFacesSupported(): Number
        fun GetCurrentLightEstimate(): ARLightEstimate
        fun GetCameraIntrinsics(OutCameraIntrinsics: ARCameraIntrinsics = definedExternally): `T$564`
        fun GetARCameraImage(): ARTextureCameraImage
        fun GetARCameraDepth(): ARTextureCameraDepth
        fun GetARWorldScale(): Number
        fun GetARTexture(TextureType: String /* "Unknown" | "CameraImage" | "CameraDepth" | "EnvironmentCapture" | "PersonSegmentationImage" | "PersonSegmentationDepth" | "SceneDepthMap" | "SceneDepthConfidenceMap" | "EARTextureType_MAX" */): ARTexture
        fun GetARSessionStatus(): ARSessionStatus
        fun GetAllARTracked3DPoses(): Array<ARTrackedPose>
        fun GetAllTrackedPoints(): Array<ARTrackedPoint>
        fun GetAllARTrackedPlanes(): Array<ARPlaneGeometry>
        fun GetAllARTrackedImages(): Array<ARTrackedImage>
        fun GetAllARTrackedEnvironmentProbes(): Array<AREnvironmentCaptureProbe>
        fun GetAllARTracked2DPoses(): Array<ARPose2D>
        fun GetAllPins(): Array<ARPin>
        fun GetAllGeometriesByClass(GeometryClass: UnrealEngineClass): Array<ARTrackedGeometry>
        fun GetAllARGeometries(): Array<ARTrackedGeometry>
        fun GetAlignmentTransform(): Transform
        fun FindTrackedPointsByName(PointName: String): Array<ARTrackedPoint>
        fun DebugDrawTrackedGeometry(TrackedGeometry: ARTrackedGeometry, WorldContextObject: UObject, Color: LinearColor, OutlineThickness: Number, PersistForSeconds: Number)
        fun DebugDrawPin(ARPin: ARPin, WorldContextObject: UObject, Color: LinearColor, Scale: Number, PersistForSeconds: Number)
        fun CalculateClosestIntersection(StartPoints: Array<Vector>, EndPoints: Array<Vector>, ClosestIntersection: Vector = definedExternally): `T$565`
        fun CalculateAlignmentTransform(TransformInFirstCoordinateSystem: Transform, TransformInSecondCoordinateSystem: Transform, AlignmentTransform: Transform = definedExternally): `T$16`
        fun AddTrackedPointWithName(WorldTransform: Transform, PointName: String, bDeletePointsWithSameName: Boolean): Boolean
        fun AddRuntimeCandidateImage(SessionConfig: ARSessionConfig, CandidateTexture: Texture2D, FriendlyName: String, PhysicalWidth: Number): ARCandidateImage
        fun AddManualEnvironmentCaptureProbe(Location: Vector, Extent: Vector): Boolean
        fun C(Other: UObject): ARBlueprintLibrary
        fun C(Other: Any): ARBlueprintLibrary
    }
}

external open class ARTraceResultLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ARTraceResultLibrary
        fun Find(Outer: UObject, ResourceName: String): ARTraceResultLibrary
        fun GetDefaultObject(): ARTraceResultLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARTraceResultLibrary
        fun GetTrackedGeometry(TraceResult: ARTraceResult): ARTrackedGeometry
        fun GetTraceChannel(TraceResult: ARTraceResult): String /* "None" | "FeaturePoint" | "GroundPlane" | "PlaneUsingExtent" | "PlaneUsingBoundaryPolygon" | "EARLineTraceChannels_MAX" */
        fun GetLocalTransform(TraceResult: ARTraceResult): Transform
        fun GetLocalToWorldTransform(TraceResult: ARTraceResult): Transform
        fun GetLocalToTrackingTransform(TraceResult: ARTraceResult): Transform
        fun GetDistanceFromCamera(TraceResult: ARTraceResult): Number
        fun C(Other: UObject): ARTraceResultLibrary
        fun C(Other: Any): ARTraceResultLibrary
    }
}

external open class BlueprintAsyncActionBase : UObject {
    constructor()
    constructor(Outer: UObject)
    open fun Activate()

    companion object {
        fun Load(ResourceName: String): BlueprintAsyncActionBase
        fun Find(Outer: UObject, ResourceName: String): BlueprintAsyncActionBase
        fun GetDefaultObject(): BlueprintAsyncActionBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintAsyncActionBase
        fun C(Other: UObject): BlueprintAsyncActionBase
        fun C(Other: Any): BlueprintAsyncActionBase
    }
}

external open class ARBaseAsyncTaskBlueprintProxy : BlueprintAsyncActionBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ARBaseAsyncTaskBlueprintProxy
        fun Find(Outer: UObject, ResourceName: String): ARBaseAsyncTaskBlueprintProxy
        fun GetDefaultObject(): ARBaseAsyncTaskBlueprintProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARBaseAsyncTaskBlueprintProxy
        fun C(Other: UObject): ARBaseAsyncTaskBlueprintProxy
        fun C(Other: Any): ARBaseAsyncTaskBlueprintProxy
    }
}

external open class ARSaveWorldAsyncTaskBlueprintProxy : ARBaseAsyncTaskBlueprintProxy {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<(SavedWorld: Array<Number>) -> Unit>
    open var OnFailed: UnrealEngineMulticastDelegate<(SavedWorld: Array<Number>) -> Unit>

    companion object {
        fun Load(ResourceName: String): ARSaveWorldAsyncTaskBlueprintProxy
        fun Find(Outer: UObject, ResourceName: String): ARSaveWorldAsyncTaskBlueprintProxy
        fun GetDefaultObject(): ARSaveWorldAsyncTaskBlueprintProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARSaveWorldAsyncTaskBlueprintProxy
        fun SaveARWorld(WorldContextObject: UObject): ARSaveWorldAsyncTaskBlueprintProxy
        fun C(Other: UObject): ARSaveWorldAsyncTaskBlueprintProxy
        fun C(Other: Any): ARSaveWorldAsyncTaskBlueprintProxy
    }
}

external open class ARGetCandidateObjectAsyncTaskBlueprintProxy : ARBaseAsyncTaskBlueprintProxy {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<(SavedObject: ARCandidateObject) -> Unit>
    open var OnFailed: UnrealEngineMulticastDelegate<(SavedObject: ARCandidateObject) -> Unit>

    companion object {
        fun Load(ResourceName: String): ARGetCandidateObjectAsyncTaskBlueprintProxy
        fun Find(Outer: UObject, ResourceName: String): ARGetCandidateObjectAsyncTaskBlueprintProxy
        fun GetDefaultObject(): ARGetCandidateObjectAsyncTaskBlueprintProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARGetCandidateObjectAsyncTaskBlueprintProxy
        fun GetARCandidateObject(WorldContextObject: UObject, Location: Vector, Extent: Vector): ARGetCandidateObjectAsyncTaskBlueprintProxy
        fun C(Other: UObject): ARGetCandidateObjectAsyncTaskBlueprintProxy
        fun C(Other: Any): ARGetCandidateObjectAsyncTaskBlueprintProxy
    }
}

external object EARServicePermissionRequestResult {
    var Granted: String /* "Granted" */
    var Denied: String /* "Denied" */
    var EARServicePermissionRequestResult_MAX: String /* "EARServicePermissionRequestResult_MAX" */
}

external object EARServiceInstallRequestResult {
    var Installed: String /* "Installed" */
    var DeviceNotCompatible: String /* "DeviceNotCompatible" */
    var UserDeclinedInstallation: String /* "UserDeclinedInstallation" */
    var FatalError: String /* "FatalError" */
    var EARServiceInstallRequestResult_MAX: String /* "EARServiceInstallRequestResult_MAX" */
}

external object EARServiceAvailability {
    var UnknownError: String /* "UnknownError" */
    var UnknownChecking: String /* "UnknownChecking" */
    var UnknownTimedOut: String /* "UnknownTimedOut" */
    var UnsupportedDeviceNotCapable: String /* "UnsupportedDeviceNotCapable" */
    var SupportedNotInstalled: String /* "SupportedNotInstalled" */
    var SupportedVersionTooOld: String /* "SupportedVersionTooOld" */
    var SupportedInstalled: String /* "SupportedInstalled" */
    var EARServiceAvailability_MAX: String /* "EARServiceAvailability_MAX" */
}

external interface `T$566` {
    var OutPermissionResult: String /* "Granted" | "Denied" | "EARServicePermissionRequestResult_MAX" */
}

external interface `T$567` {
    var OutInstallResult: String /* "Installed" | "DeviceNotCompatible" | "UserDeclinedInstallation" | "FatalError" | "EARServiceInstallRequestResult_MAX" */
}

external interface `T$568` {
    var OutAvailability: String /* "UnknownError" | "UnknownChecking" | "UnknownTimedOut" | "UnsupportedDeviceNotCapable" | "SupportedNotInstalled" | "SupportedVersionTooOld" | "SupportedInstalled" | "EARServiceAvailability_MAX" */
}

external open class ARDependencyHandler : UObject {
    constructor()
    constructor(Outer: UObject)
    open fun StartARSessionLatent(WorldContextObject: UObject, SessionConfig: ARSessionConfig, LatentInfo: LatentActionInfo)
    open fun RequestARSessionPermission(WorldContextObject: UObject, SessionConfig: ARSessionConfig, LatentInfo: LatentActionInfo, OutPermissionResult: String /* "Granted" | "Denied" | "EARServicePermissionRequestResult_MAX" */ = definedExternally): `T$566`
    open fun InstallARService(WorldContextObject: UObject, LatentInfo: LatentActionInfo, OutInstallResult: String /* "Installed" | "DeviceNotCompatible" | "UserDeclinedInstallation" | "FatalError" | "EARServiceInstallRequestResult_MAX" */ = definedExternally): `T$567`
    open fun CheckARServiceAvailability(WorldContextObject: UObject, LatentInfo: LatentActionInfo, OutAvailability: String /* "UnknownError" | "UnknownChecking" | "UnknownTimedOut" | "UnsupportedDeviceNotCapable" | "SupportedNotInstalled" | "SupportedVersionTooOld" | "SupportedInstalled" | "EARServiceAvailability_MAX" */ = definedExternally): `T$568`

    companion object {
        fun Load(ResourceName: String): ARDependencyHandler
        fun Find(Outer: UObject, ResourceName: String): ARDependencyHandler
        fun GetDefaultObject(): ARDependencyHandler
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARDependencyHandler
        fun GetARDependencyHandler(): ARDependencyHandler
        fun C(Other: UObject): ARDependencyHandler
        fun C(Other: Any): ARDependencyHandler
    }
}

external object EARGeoTrackingStateReason {
    var None: String /* "None" */
    var NotAvailableAtLocation: String /* "NotAvailableAtLocation" */
    var NeedLocationPermissions: String /* "NeedLocationPermissions" */
    var DevicePointedTooLow: String /* "DevicePointedTooLow" */
    var WorldTrackingUnstable: String /* "WorldTrackingUnstable" */
    var WaitingForLocation: String /* "WaitingForLocation" */
    var GeoDataNotLoaded: String /* "GeoDataNotLoaded" */
    var VisualLocalizationFailed: String /* "VisualLocalizationFailed" */
    var WaitingForAvailabilityCheck: String /* "WaitingForAvailabilityCheck" */
    var EARGeoTrackingStateReason_MAX: String /* "EARGeoTrackingStateReason_MAX" */
}

external object EARGeoTrackingState {
    var Initializing: String /* "Initializing" */
    var Localized: String /* "Localized" */
    var Localizing: String /* "Localizing" */
    var NotAvailable: String /* "NotAvailable" */
    var EARGeoTrackingState_MAX: String /* "EARGeoTrackingState_MAX" */
}

external object EARGeoTrackingAccuracy {
    var Undetermined: String /* "Undetermined" */
    var Low: String /* "Low" */
    var Medium: String /* "Medium" */
    var High: String /* "High" */
    var EARGeoTrackingAccuracy_MAX: String /* "EARGeoTrackingAccuracy_MAX" */
}

external open class ARGeoTrackingSupport : UObject {
    constructor()
    constructor(Outer: UObject)
    open fun GetGeoTrackingStateReason(): String /* "None" | "NotAvailableAtLocation" | "NeedLocationPermissions" | "DevicePointedTooLow" | "WorldTrackingUnstable" | "WaitingForLocation" | "GeoDataNotLoaded" | "VisualLocalizationFailed" | "WaitingForAvailabilityCheck" | "EARGeoTrackingStateReason_MAX" */
    open fun GetGeoTrackingState(): String /* "Initializing" | "Localized" | "Localizing" | "NotAvailable" | "EARGeoTrackingState_MAX" */
    open fun GetGeoTrackingAccuracy(): String /* "Undetermined" | "Low" | "Medium" | "High" | "EARGeoTrackingAccuracy_MAX" */
    open fun AddGeoAnchorAtLocationWithAltitude(Longitude: Number, Latitude: Number, AltitudeMeters: Number, OptionalAnchorName: String): Boolean
    open fun AddGeoAnchorAtLocation(Longitude: Number, Latitude: Number, OptionalAnchorName: String): Boolean

    companion object {
        fun Load(ResourceName: String): ARGeoTrackingSupport
        fun Find(Outer: UObject, ResourceName: String): ARGeoTrackingSupport
        fun GetDefaultObject(): ARGeoTrackingSupport
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARGeoTrackingSupport
        fun GetGeoTrackingSupport(): ARGeoTrackingSupport
        fun C(Other: UObject): ARGeoTrackingSupport
        fun C(Other: Any): ARGeoTrackingSupport
    }
}

external open class CheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy : ARBaseAsyncTaskBlueprintProxy {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<(bIsAvailable: Boolean, Error: String) -> Unit>
    open var OnFailed: UnrealEngineMulticastDelegate<(bIsAvailable: Boolean, Error: String) -> Unit>

    companion object {
        fun Load(ResourceName: String): CheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy
        fun Find(Outer: UObject, ResourceName: String): CheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy
        fun GetDefaultObject(): CheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy
        fun CheckGeoTrackingAvailabilityAtLocation(WorldContextObject: UObject, Longitude: Number, Latitude: Number): CheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy
        fun CheckGeoTrackingAvailability(WorldContextObject: UObject): CheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy
        fun C(Other: UObject): CheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy
        fun C(Other: Any): CheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy
    }
}

external open class GetGeoLocationAsyncTaskBlueprintProxy : ARBaseAsyncTaskBlueprintProxy {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<(Longitude: Number, Latitude: Number, Altitude: Number, Error: String) -> Unit>
    open var OnFailed: UnrealEngineMulticastDelegate<(Longitude: Number, Latitude: Number, Altitude: Number, Error: String) -> Unit>

    companion object {
        fun Load(ResourceName: String): GetGeoLocationAsyncTaskBlueprintProxy
        fun Find(Outer: UObject, ResourceName: String): GetGeoLocationAsyncTaskBlueprintProxy
        fun GetDefaultObject(): GetGeoLocationAsyncTaskBlueprintProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GetGeoLocationAsyncTaskBlueprintProxy
        fun GetGeoLocationAtWorldPosition(WorldContextObject: UObject, WorldPosition: Vector): GetGeoLocationAsyncTaskBlueprintProxy
        fun C(Other: UObject): GetGeoLocationAsyncTaskBlueprintProxy
        fun C(Other: Any): GetGeoLocationAsyncTaskBlueprintProxy
    }
}

external open class ARLifeCycleComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var OnARActorSpawnedDelegate: UnrealEngineMulticastDelegate<(ComponentClass: UnrealEngineClass, NativeID: Guid, SpawnedActor: ARActor) -> Unit>
    open var OnARActorToBeDestroyedDelegate: UnrealEngineMulticastDelegate<(Actor: ARActor) -> Unit>
    open fun ServerSpawnARActor(ComponentClass: UnrealEngineClass, NativeID: Guid)
    open fun ServerDestroyARActor(Actor: ARActor)

    companion object {
        fun Load(ResourceName: String): ARLifeCycleComponent
        fun Find(Outer: UObject, ResourceName: String): ARLifeCycleComponent
        fun GetDefaultObject(): ARLifeCycleComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARLifeCycleComponent
        fun C(Other: UObject): ARLifeCycleComponent
        fun C(Other: Any): ARLifeCycleComponent
    }
}

external open class ARBasicLightEstimate : ARLightEstimate {
    constructor()
    constructor(Outer: UObject)
    open var AmbientIntensityLumens: Number
    open var AmbientColorTemperatureKelvin: Number
    open var AmbientColor: LinearColor
    open fun GetAmbientIntensityLumens(): Number
    open fun GetAmbientColorTemperatureKelvin(): Number
    open fun GetAmbientColor(): LinearColor

    companion object {
        fun Load(ResourceName: String): ARBasicLightEstimate
        fun Find(Outer: UObject, ResourceName: String): ARBasicLightEstimate
        fun GetDefaultObject(): ARBasicLightEstimate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARBasicLightEstimate
        fun C(Other: UObject): ARBasicLightEstimate
        fun C(Other: Any): ARBasicLightEstimate
    }
}

external open class AROriginActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    companion object {
        fun GetDefaultObject(): AROriginActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AROriginActor
        fun C(Other: UObject): AROriginActor
        fun C(Other: Any): AROriginActor
    }
}

external open class GameMode(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : GameModeBase {
    open var MatchState: String
    open var bDelayedStart: Boolean
    open var NumSpectators: Number
    open var NumPlayers: Number
    open var NumBots: Number
    open var MinRespawnDelay: Number
    open var NumTravellingPlayers: Number
    open var EngineMessageClass: UnrealEngineClass
    open var InactivePlayerArray: Array<PlayerState>
    open var InactivePlayerStateLifeSpan: Number
    open var MaxInactivePlayers: Number
    open var bHandleDedicatedServerReplays: Boolean
    open fun StartMatch()
    open fun Say(Msg: String)
    open fun RestartGame()
    open fun ReadyToStartMatch(): Boolean
    open fun ReadyToEndMatch(): Boolean
    open fun OnSetMatchState(NewState: String)
    open fun IsMatchInProgress(): Boolean
    open fun GetMatchState(): String
    open fun EndMatch()
    open fun AbortMatch()

    companion object {
        fun GetDefaultObject(): GameMode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameMode
        fun C(Other: UObject): GameMode
        fun C(Other: Any): GameMode
    }
}

external open class GameState(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : GameStateBase {
    open var MatchState: String
    open var PreviousMatchState: String
    open var ElapsedTime: Number
    open fun OnRep_MatchState()
    open fun OnRep_ElapsedTime()

    companion object {
        fun GetDefaultObject(): GameState
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameState
        fun C(Other: UObject): GameState
        fun C(Other: Any): GameState
    }
}

external open class ARSharedWorldGameState(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : GameState {
    open var PreviewImageData: Array<Number>
    open var ARWorldData: Array<Number>
    open var PreviewImageBytesTotal: Number
    open var ARWorldBytesTotal: Number
    open var PreviewImageBytesDelivered: Number
    open var ARWorldBytesDelivered: Number
    open fun OnARWorldMapIsReady()

    companion object {
        fun GetDefaultObject(): ARSharedWorldGameState
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARSharedWorldGameState
        fun C(Other: UObject): ARSharedWorldGameState
        fun C(Other: Any): ARSharedWorldGameState
    }
}

external open class ARSharedWorldGameMode(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : GameMode {
    open var BufferSizePerChunk: Number
    open fun SetARPreviewImageData(ImageData: Array<Number>)
    open fun SetARWorldSharingIsReady()
    open fun SetARSharedWorldData(ARWorldData: Array<Number>)
    open fun GetARSharedWorldGameState(): ARSharedWorldGameState

    companion object {
        fun GetDefaultObject(): ARSharedWorldGameMode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARSharedWorldGameMode
        fun C(Other: UObject): ARSharedWorldGameMode
        fun C(Other: Any): ARSharedWorldGameMode
    }
}

external open class ARSharedWorldPlayerController(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : PlayerController {
    open fun ServerMarkReadyForReceiving()
    open fun ClientUpdatePreviewImageData(Offset: Number, Buffer: Array<Number>)
    open fun ClientUpdateARWorldData(Offset: Number, Buffer: Array<Number>)
    open fun ClientInitSharedWorld(PreviewImageSize: Number, ARWorldDataSize: Number)

    companion object {
        fun GetDefaultObject(): ARSharedWorldPlayerController
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARSharedWorldPlayerController
        fun C(Other: UObject): ARSharedWorldPlayerController
        fun C(Other: Any): ARSharedWorldPlayerController
    }
}

external object ESkyLightSourceType {
    var SLS_CapturedScene: String /* "SLS_CapturedScene" */
    var SLS_SpecifiedCubemap: String /* "SLS_SpecifiedCubemap" */
    var SLS_MAX: String /* "SLS_MAX" */
}

external object EOcclusionCombineMode {
    var OCM_Minimum: String /* "OCM_Minimum" */
    var OCM_Multiply: String /* "OCM_Multiply" */
    var OCM_MAX: String /* "OCM_MAX" */
}

external open class SkyLightComponent : LightComponentBase {
    constructor()
    constructor(Outer: UObject)
    open var bRealTimeCapture: Boolean
    open var SourceType: String /* "SLS_CapturedScene" | "SLS_SpecifiedCubemap" | "SLS_MAX" */
    open var Cubemap: TextureCube
    open var SourceCubemapAngle: Number
    open var CubemapResolution: Number
    open var SkyDistanceThreshold: Number
    open var bCaptureEmissiveOnly: Boolean
    open var bLowerHemisphereIsBlack: Boolean
    open var LowerHemisphereColor: LinearColor
    open var OcclusionMaxDistance: Number
    open var Contrast: Number
    open var OcclusionExponent: Number
    open var MinOcclusion: Number
    open var OcclusionTint: Color
    open var bCloudAmbientOcclusion: Boolean
    open var CloudAmbientOcclusionStrength: Number
    open var CloudAmbientOcclusionExtent: Number
    open var CloudAmbientOcclusionMapResolutionScale: Number
    open var CloudAmbientOcclusionApertureScale: Number
    open var OcclusionCombineMode: String /* "OCM_Minimum" | "OCM_Multiply" | "OCM_MAX" */
    open var BlendDestinationCubemap: TextureCube
    open fun SetVolumetricScatteringIntensity(NewIntensity: Number)
    open fun SetOcclusionTint(InTint: Color)
    open fun SetOcclusionExponent(InOcclusionExponent: Number)
    open fun SetOcclusionContrast(InOcclusionContrast: Number)
    open fun SetMinOcclusion(InMinOcclusion: Number)
    open fun SetLowerHemisphereColor(InLowerHemisphereColor: LinearColor)
    open fun SetLightColor(NewLightColor: LinearColor)
    open fun SetIntensity(NewIntensity: Number)
    open fun SetIndirectLightingIntensity(NewIntensity: Number)
    open fun SetCubemapBlend(SourceCubemap: TextureCube, DestinationCubemap: TextureCube, InBlendFraction: Number)
    open fun SetCubemap(NewCubemap: TextureCube)
    open fun RecaptureSky()

    companion object {
        fun Load(ResourceName: String): SkyLightComponent
        fun Find(Outer: UObject, ResourceName: String): SkyLightComponent
        fun GetDefaultObject(): SkyLightComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SkyLightComponent
        fun C(Other: UObject): SkyLightComponent
        fun C(Other: Any): SkyLightComponent
    }
}

external open class SkyLight(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Info {
    open var LightComponent: SkyLightComponent
    open var bEnabled: Boolean
    open fun OnRep_bEnabled()

    companion object {
        fun GetDefaultObject(): SkyLight
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SkyLight
        fun C(Other: UObject): SkyLight
        fun C(Other: Any): SkyLight
    }
}

external open class ARSkyLight(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : SkyLight {
    open var CaptureProbe: AREnvironmentCaptureProbe
    open fun SetEnvironmentCaptureProbe(InCaptureProbe: AREnvironmentCaptureProbe)

    companion object {
        fun GetDefaultObject(): ARSkyLight
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARSkyLight
        fun C(Other: UObject): ARSkyLight
        fun C(Other: Any): ARSkyLight
    }
}

external open class ARTraceResultDummy : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ARTraceResultDummy
        fun Find(Outer: UObject, ResourceName: String): ARTraceResultDummy
        fun GetDefaultObject(): ARTraceResultDummy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARTraceResultDummy
        fun C(Other: UObject): ARTraceResultDummy
        fun C(Other: Any): ARTraceResultDummy
    }
}

external open class ARTrackedQRCode : ARTrackedImage {
    constructor()
    constructor(Outer: UObject)
    open var QRCode: String
    open var Version: Number

    companion object {
        fun Load(ResourceName: String): ARTrackedQRCode
        fun Find(Outer: UObject, ResourceName: String): ARTrackedQRCode
        fun GetDefaultObject(): ARTrackedQRCode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARTrackedQRCode
        fun C(Other: UObject): ARTrackedQRCode
        fun C(Other: Any): ARTrackedQRCode
    }
}

external object EAREye {
    var LeftEye: String /* "LeftEye" */
    var RightEye: String /* "RightEye" */
    var EAREye_MAX: String /* "EAREye_MAX" */
}

external object EARFaceBlendShape {
    var EyeBlinkLeft: String /* "EyeBlinkLeft" */
    var EyeLookDownLeft: String /* "EyeLookDownLeft" */
    var EyeLookInLeft: String /* "EyeLookInLeft" */
    var EyeLookOutLeft: String /* "EyeLookOutLeft" */
    var EyeLookUpLeft: String /* "EyeLookUpLeft" */
    var EyeSquintLeft: String /* "EyeSquintLeft" */
    var EyeWideLeft: String /* "EyeWideLeft" */
    var EyeBlinkRight: String /* "EyeBlinkRight" */
    var EyeLookDownRight: String /* "EyeLookDownRight" */
    var EyeLookInRight: String /* "EyeLookInRight" */
    var EyeLookOutRight: String /* "EyeLookOutRight" */
    var EyeLookUpRight: String /* "EyeLookUpRight" */
    var EyeSquintRight: String /* "EyeSquintRight" */
    var EyeWideRight: String /* "EyeWideRight" */
    var JawForward: String /* "JawForward" */
    var JawLeft: String /* "JawLeft" */
    var JawRight: String /* "JawRight" */
    var JawOpen: String /* "JawOpen" */
    var MouthClose: String /* "MouthClose" */
    var MouthFunnel: String /* "MouthFunnel" */
    var MouthPucker: String /* "MouthPucker" */
    var MouthLeft: String /* "MouthLeft" */
    var MouthRight: String /* "MouthRight" */
    var MouthSmileLeft: String /* "MouthSmileLeft" */
    var MouthSmileRight: String /* "MouthSmileRight" */
    var MouthFrownLeft: String /* "MouthFrownLeft" */
    var MouthFrownRight: String /* "MouthFrownRight" */
    var MouthDimpleLeft: String /* "MouthDimpleLeft" */
    var MouthDimpleRight: String /* "MouthDimpleRight" */
    var MouthStretchLeft: String /* "MouthStretchLeft" */
    var MouthStretchRight: String /* "MouthStretchRight" */
    var MouthRollLower: String /* "MouthRollLower" */
    var MouthRollUpper: String /* "MouthRollUpper" */
    var MouthShrugLower: String /* "MouthShrugLower" */
    var MouthShrugUpper: String /* "MouthShrugUpper" */
    var MouthPressLeft: String /* "MouthPressLeft" */
    var MouthPressRight: String /* "MouthPressRight" */
    var MouthLowerDownLeft: String /* "MouthLowerDownLeft" */
    var MouthLowerDownRight: String /* "MouthLowerDownRight" */
    var MouthUpperUpLeft: String /* "MouthUpperUpLeft" */
    var MouthUpperUpRight: String /* "MouthUpperUpRight" */
    var BrowDownLeft: String /* "BrowDownLeft" */
    var BrowDownRight: String /* "BrowDownRight" */
    var BrowInnerUp: String /* "BrowInnerUp" */
    var BrowOuterUpLeft: String /* "BrowOuterUpLeft" */
    var BrowOuterUpRight: String /* "BrowOuterUpRight" */
    var CheekPuff: String /* "CheekPuff" */
    var CheekSquintLeft: String /* "CheekSquintLeft" */
    var CheekSquintRight: String /* "CheekSquintRight" */
    var NoseSneerLeft: String /* "NoseSneerLeft" */
    var NoseSneerRight: String /* "NoseSneerRight" */
    var TongueOut: String /* "TongueOut" */
    var HeadYaw: String /* "HeadYaw" */
    var HeadPitch: String /* "HeadPitch" */
    var HeadRoll: String /* "HeadRoll" */
    var LeftEyeYaw: String /* "LeftEyeYaw" */
    var LeftEyePitch: String /* "LeftEyePitch" */
    var LeftEyeRoll: String /* "LeftEyeRoll" */
    var RightEyeYaw: String /* "RightEyeYaw" */
    var RightEyePitch: String /* "RightEyePitch" */
    var RightEyeRoll: String /* "RightEyeRoll" */
    var MAX: String /* "MAX" */
}

external open class ARFaceGeometry : ARTrackedGeometry {
    constructor()
    constructor(Outer: UObject)
    open var LookAtTarget: Vector
    open var bIsTracked: Boolean
    open var BlendShapes: Any
    open var LeftEyeTransform: Transform
    open var RightEyeTransform: Transform
    open fun GetWorldSpaceEyeTransform(Eye: String /* "LeftEye" | "RightEye" | "EAREye_MAX" */): Transform
    open fun GetLocalSpaceEyeTransform(Eye: String /* "LeftEye" | "RightEye" | "EAREye_MAX" */): Transform
    open fun GetBlendShapeValue(BlendShape: String /* "EyeBlinkLeft" | "EyeLookDownLeft" | "EyeLookInLeft" | "EyeLookOutLeft" | "EyeLookUpLeft" | "EyeSquintLeft" | "EyeWideLeft" | "EyeBlinkRight" | "EyeLookDownRight" | "EyeLookInRight" | "EyeLookOutRight" | "EyeLookUpRight" | "EyeSquintRight" | "EyeWideRight" | "JawForward" | "JawLeft" | "JawRight" | "JawOpen" | "MouthClose" | "MouthFunnel" | "MouthPucker" | "MouthLeft" | "MouthRight" | "MouthSmileLeft" | "MouthSmileRight" | "MouthFrownLeft" | "MouthFrownRight" | "MouthDimpleLeft" | "MouthDimpleRight" | "MouthStretchLeft" | "MouthStretchRight" | "MouthRollLower" | "MouthRollUpper" | "MouthShrugLower" | "MouthShrugUpper" | "MouthPressLeft" | "MouthPressRight" | "MouthLowerDownLeft" | "MouthLowerDownRight" | "MouthUpperUpLeft" | "MouthUpperUpRight" | "BrowDownLeft" | "BrowDownRight" | "BrowInnerUp" | "BrowOuterUpLeft" | "BrowOuterUpRight" | "CheekPuff" | "CheekSquintLeft" | "CheekSquintRight" | "NoseSneerLeft" | "NoseSneerRight" | "TongueOut" | "HeadYaw" | "HeadPitch" | "HeadRoll" | "LeftEyeYaw" | "LeftEyePitch" | "LeftEyeRoll" | "RightEyeYaw" | "RightEyePitch" | "RightEyeRoll" | "MAX" */): Number
    open fun GetBlendShapes(): Any

    companion object {
        fun Load(ResourceName: String): ARFaceGeometry
        fun Find(Outer: UObject, ResourceName: String): ARFaceGeometry
        fun GetDefaultObject(): ARFaceGeometry
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARFaceGeometry
        fun C(Other: UObject): ARFaceGeometry
        fun C(Other: Any): ARFaceGeometry
    }
}

external open class ARTrackedObject : ARTrackedGeometry {
    constructor()
    constructor(Outer: UObject)
    open var DetectedObject: ARCandidateObject
    open fun GetDetectedObject(): ARCandidateObject

    companion object {
        fun Load(ResourceName: String): ARTrackedObject
        fun Find(Outer: UObject, ResourceName: String): ARTrackedObject
        fun GetDefaultObject(): ARTrackedObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARTrackedObject
        fun C(Other: UObject): ARTrackedObject
        fun C(Other: Any): ARTrackedObject
    }
}

external open class ARMeshGeometry : ARTrackedGeometry {
    constructor()
    constructor(Outer: UObject)
    open fun GetObjectClassificationAtLocation(InWorldLocation: Vector, OutClassification: String /* "NotApplicable" | "Unknown" | "Wall" | "Ceiling" | "Floor" | "Table" | "Seat" | "Face" | "Image" | "World" | "SceneObject" | "HandMesh" | "Door" | "Window" | "EARObjectClassification_MAX" */ = definedExternally, OutClassificationLocation: Vector = definedExternally, MaxLocationDiff: Number = definedExternally): `T$506`

    companion object {
        fun Load(ResourceName: String): ARMeshGeometry
        fun Find(Outer: UObject, ResourceName: String): ARMeshGeometry
        fun GetDefaultObject(): ARMeshGeometry
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARMeshGeometry
        fun C(Other: UObject): ARMeshGeometry
        fun C(Other: Any): ARMeshGeometry
    }
}

external open class ARGeoAnchor : ARTrackedGeometry {
    constructor()
    constructor(Outer: UObject)
    open fun GetLongitude(): Number
    open fun GetLatitude(): Number
    open fun GetAltitudeSource(): String /* "Precise" | "Coarse" | "UserDefined" | "Unknown" | "EARAltitudeSource_MAX" */
    open fun GetAltitudeMeters(): Number

    companion object {
        fun Load(ResourceName: String): ARGeoAnchor
        fun Find(Outer: UObject, ResourceName: String): ARGeoAnchor
        fun GetDefaultObject(): ARGeoAnchor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARGeoAnchor
        fun C(Other: UObject): ARGeoAnchor
        fun C(Other: Any): ARGeoAnchor
    }
}

external open class ARTrackableNotifyComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var OnAddTrackedGeometry: UnrealEngineMulticastDelegate<(TrackedGeometry: ARTrackedGeometry) -> Unit>
    open var OnUpdateTrackedGeometry: UnrealEngineMulticastDelegate<(TrackedGeometry: ARTrackedGeometry) -> Unit>
    open var OnRemoveTrackedGeometry: UnrealEngineMulticastDelegate<(TrackedGeometry: ARTrackedGeometry) -> Unit>
    open var OnAddTrackedPlane: UnrealEngineMulticastDelegate<(TrackedPlane: ARPlaneGeometry) -> Unit>
    open var OnUpdateTrackedPlane: UnrealEngineMulticastDelegate<(TrackedPlane: ARPlaneGeometry) -> Unit>
    open var OnRemoveTrackedPlane: UnrealEngineMulticastDelegate<(TrackedPlane: ARPlaneGeometry) -> Unit>
    open var OnAddTrackedPoint: UnrealEngineMulticastDelegate<(TrackedPoint: ARTrackedPoint) -> Unit>
    open var OnUpdateTrackedPoint: UnrealEngineMulticastDelegate<(TrackedPoint: ARTrackedPoint) -> Unit>
    open var OnRemoveTrackedPoint: UnrealEngineMulticastDelegate<(TrackedPoint: ARTrackedPoint) -> Unit>
    open var OnAddTrackedImage: UnrealEngineMulticastDelegate<(TrackedImage: ARTrackedImage) -> Unit>
    open var OnUpdateTrackedImage: UnrealEngineMulticastDelegate<(TrackedImage: ARTrackedImage) -> Unit>
    open var OnRemoveTrackedImage: UnrealEngineMulticastDelegate<(TrackedImage: ARTrackedImage) -> Unit>
    open var OnAddTrackedFace: UnrealEngineMulticastDelegate<(TrackedFace: ARFaceGeometry) -> Unit>
    open var OnUpdateTrackedFace: UnrealEngineMulticastDelegate<(TrackedFace: ARFaceGeometry) -> Unit>
    open var OnRemoveTrackedFace: UnrealEngineMulticastDelegate<(TrackedFace: ARFaceGeometry) -> Unit>
    open var OnAddTrackedEnvProbe: UnrealEngineMulticastDelegate<(TrackedEnvProbe: AREnvironmentCaptureProbe) -> Unit>
    open var OnUpdateTrackedEnvProbe: UnrealEngineMulticastDelegate<(TrackedEnvProbe: AREnvironmentCaptureProbe) -> Unit>
    open var OnRemoveTrackedEnvProbe: UnrealEngineMulticastDelegate<(TrackedEnvProbe: AREnvironmentCaptureProbe) -> Unit>
    open var OnAddTrackedObject: UnrealEngineMulticastDelegate<(TrackedObject: ARTrackedObject) -> Unit>
    open var OnUpdateTrackedObject: UnrealEngineMulticastDelegate<(TrackedObject: ARTrackedObject) -> Unit>
    open var OnRemoveTrackedObject: UnrealEngineMulticastDelegate<(TrackedObject: ARTrackedObject) -> Unit>

    companion object {
        fun Load(ResourceName: String): ARTrackableNotifyComponent
        fun Find(Outer: UObject, ResourceName: String): ARTrackableNotifyComponent
        fun GetDefaultObject(): ARTrackableNotifyComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARTrackableNotifyComponent
        fun C(Other: UObject): ARTrackableNotifyComponent
        fun C(Other: Any): ARTrackableNotifyComponent
    }
}

external open class ARTypesDummyClass : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ARTypesDummyClass
        fun Find(Outer: UObject, ResourceName: String): ARTypesDummyClass
        fun GetDefaultObject(): ARTypesDummyClass
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARTypesDummyClass
        fun C(Other: UObject): ARTypesDummyClass
        fun C(Other: Any): ARTypesDummyClass
    }
}

external object ESpectatorScreenMode {
    var Disabled: String /* "Disabled" */
    var SingleEyeLetterboxed: String /* "SingleEyeLetterboxed" */
    var Undistorted: String /* "Undistorted" */
    var Distorted: String /* "Distorted" */
    var SingleEye: String /* "SingleEye" */
    var SingleEyeCroppedToFill: String /* "SingleEyeCroppedToFill" */
    var Texture: String /* "Texture" */
    var TexturePlusEye: String /* "TexturePlusEye" */
    var ESpectatorScreenMode_MAX: String /* "ESpectatorScreenMode_MAX" */
}

external object EOrientPositionSelector {
    var Orientation: String /* "Orientation" */
    var Position: String /* "Position" */
    var OrientationAndPosition: String /* "OrientationAndPosition" */
    var EOrientPositionSelector_MAX: String /* "EOrientPositionSelector_MAX" */
}

external object EHMDWornState {
    var Unknown: String /* "Unknown" */
    var Worn: String /* "Worn" */
    var NotWorn: String /* "NotWorn" */
    var EHMDWornState_MAX: String /* "EHMDWornState_MAX" */
}

external object EXRTrackedDeviceType {
    var HeadMountedDisplay: String /* "HeadMountedDisplay" */
    var Controller: String /* "Controller" */
    var TrackingReference: String /* "TrackingReference" */
    var Other: String /* "Other" */
    var Invalid: String /* "Invalid" */
    var Any: String /* "Any" */
    var EXRTrackedDeviceType_MAX: String /* "EXRTrackedDeviceType_MAX" */
}

external object EXRDeviceConnectionResult {
    var NoTrackingSystem: String /* "NoTrackingSystem" */
    var FeatureNotSupported: String /* "FeatureNotSupported" */
    var NoValidViewport: String /* "NoValidViewport" */
    var MiscFailure: String /* "MiscFailure" */
    var Success: String /* "Success" */
    var EXRDeviceConnectionResult_MAX: String /* "EXRDeviceConnectionResult_MAX" */
}

external object ESpatialInputGestureAxis {
    var None: String /* "None" */
    var Manipulation: String /* "Manipulation" */
    var Navigation: String /* "Navigation" */
    var NavigationRails: String /* "NavigationRails" */
    var ESpatialInputGestureAxis_MAX: String /* "ESpatialInputGestureAxis_MAX" */
}

external open class XRGestureConfig {
    open var bTap: Boolean
    open var bHold: Boolean
    open var AxisGesture: String /* "None" | "Manipulation" | "Navigation" | "NavigationRails" | "ESpatialInputGestureAxis_MAX" */
    open var bNavigationAxisX: Boolean
    open var bNavigationAxisY: Boolean
    open var bNavigationAxisZ: Boolean
    open fun clone(): XRGestureConfig
    open fun ConfigureGestures(): Boolean

    companion object {
        fun C(Other: UObject): XRGestureConfig
        fun C(Other: Any): XRGestureConfig
        fun ConfigureGestures(GestureConfig: XRGestureConfig): Boolean
    }
}

external interface `T$569` {
    var bUseFocus: Boolean
    var bHasFocus: Boolean
}

external open class HeadMountedDisplayFunctionLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): HeadMountedDisplayFunctionLibrary
        fun Find(Outer: UObject, ResourceName: String): HeadMountedDisplayFunctionLibrary
        fun GetDefaultObject(): HeadMountedDisplayFunctionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): HeadMountedDisplayFunctionLibrary
        fun UpdateExternalTrackingHMDPosition(ExternalTrackingTransform: Transform)
        fun SetWorldToMetersScale(WorldContext: UObject, NewScale: Number)
        fun SetTrackingOrigin(Origin: String /* "Floor" | "Eye" | "Stage" | "EHMDTrackingOrigin_MAX" */)
        fun SetSpectatorScreenTexture(InTexture: Texture)
        fun SetSpectatorScreenModeTexturePlusEyeLayout(EyeRectMin: Vector2D, EyeRectMax: Vector2D, TextureRectMin: Vector2D, TextureRectMax: Vector2D, bDrawEyeFirst: Boolean, bClearBlack: Boolean, bUseAlpha: Boolean)
        fun SetSpectatorScreenMode(Mode: String /* "Disabled" | "SingleEyeLetterboxed" | "Undistorted" | "Distorted" | "SingleEye" | "SingleEyeCroppedToFill" | "Texture" | "TexturePlusEye" | "ESpectatorScreenMode_MAX" */)
        fun SetClippingPlanes(Near: Number, Far: Number)
        fun ResetOrientationAndPosition(Yaw: Number, Options: String /* "Orientation" | "Position" | "OrientationAndPosition" | "EOrientPositionSelector_MAX" */)
        fun IsSpectatorScreenModeControllable(): Boolean
        fun IsInLowPersistenceMode(): Boolean
        fun IsHeadMountedDisplayEnabled(): Boolean
        fun IsHeadMountedDisplayConnected(): Boolean
        fun IsDeviceTracking(XRDeviceId: XRDeviceId): Boolean
        fun HasValidTrackingPosition(): Boolean
        fun GetXRSystemFlags(): Number
        fun GetWorldToMetersScale(WorldContext: UObject): Number
        fun GetVRFocusState(bUseFocus: Boolean = definedExternally, bHasFocus: Boolean = definedExternally): `T$569`
        fun GetVersionString(): String
        fun GetTrackingToWorldTransform(WorldContext: UObject): Transform
        fun GetTrackingSensorParameters(Origin: Vector = definedExternally, Rotation: Rotator = definedExternally, LeftFOV: Number = definedExternally, RightFOV: Number = definedExternally, TopFOV: Number = definedExternally, BottomFOV: Number = definedExternally, Distance: Number = definedExternally, NearPlane: Number = definedExternally, FarPlane: Number = definedExternally, IsActive: Boolean = definedExternally, index: Number = definedExternally): `T$505`
        fun GetTrackingOrigin(): String /* "Floor" | "Eye" | "Stage" | "EHMDTrackingOrigin_MAX" */
        fun GetScreenPercentage(): Number
        fun GetPositionalTrackingCameraParameters(CameraOrigin: Vector = definedExternally, CameraRotation: Rotator = definedExternally, HFOV: Number = definedExternally, VFOV: Number = definedExternally, CameraDistance: Number = definedExternally, NearPlane: Number = definedExternally, FarPlane: Number = definedExternally): `T$504`
        fun GetPlayAreaBounds(Origin: String /* "Floor" | "Eye" | "Stage" | "EHMDTrackingOrigin_MAX" */): Vector2D
        fun GetPixelDensity(): Number
        fun GetOrientationAndPosition(DeviceRotation: Rotator = definedExternally, DevicePosition: Vector = definedExternally): `T$5`
        fun GetNumOfTrackingSensors(): Number
        fun GetMotionControllerData(WorldContext: UObject, Hand: String /* "Left" | "Right" | "AnyHand" | "Pad" | "ExternalCamera" | "Gun" | "HMD" | "Special_1" | "Special_2" | "Special_3" | "Special_4" | "Special_5" | "Special_6" | "Special_7" | "Special_8" | "Special_9" | "Special_10" | "Special_11" | "ControllerHand_Count" | "EControllerHand_MAX" */, MotionControllerData: XRMotionControllerData = definedExternally): `T$367`
        fun GetHMDWornState(): String /* "Unknown" | "Worn" | "NotWorn" | "EHMDWornState_MAX" */
        fun GetHMDDeviceName(): String
        fun GetHMDData(WorldContext: UObject, HMDData: XRHMDData = definedExternally): `T$366`
        fun GetDeviceWorldPose(WorldContext: UObject, XRDeviceId: XRDeviceId, bIsTracked: Boolean = definedExternally, Orientation: Rotator = definedExternally, bHasPositionalTracking: Boolean = definedExternally, position: Vector = definedExternally): `T$312`
        fun GetDevicePose(XRDeviceId: XRDeviceId, bIsTracked: Boolean = definedExternally, Orientation: Rotator = definedExternally, bHasPositionalTracking: Boolean = definedExternally, position: Vector = definedExternally): `T$312`
        fun GetControllerTransformForTime(WorldContext: UObject, ControllerIndex: Number, MotionSource: String, Time: Timespan, bTimeWasUsed: Boolean = definedExternally, Orientation: Rotator = definedExternally, position: Vector = definedExternally, bProvidedLinearVelocity: Boolean = definedExternally, LinearVelocity: Vector = definedExternally, bProvidedAngularVelocity: Boolean = definedExternally, AngularVelocityRadPerSec: Vector = definedExternally, bProvidedLinearAcceleration: Boolean = definedExternally, LinearAcceleration: Vector = definedExternally): `T$365`
        fun EnumerateTrackedDevices(SystemId: String, DeviceType: String /* "HeadMountedDisplay" | "Controller" | "TrackingReference" | "Other" | "Invalid" | "Any" | "EXRTrackedDeviceType_MAX" */): Array<XRDeviceId>
        fun EnableLowPersistenceMode(bEnable: Boolean)
        fun EnableHMD(bEnable: Boolean): Boolean
        fun DisconnectRemoteXRDevice()
        fun ConnectRemoteXRDevice(IpAddress: String, BitRate: Number): String /* "NoTrackingSystem" | "FeatureNotSupported" | "NoValidViewport" | "MiscFailure" | "Success" | "EXRDeviceConnectionResult_MAX" */
        fun ConfigureGestures(GestureConfig: XRGestureConfig): Boolean
        fun ClearXRTimedInputActionDelegate(ActionPath: String)
        fun CalibrateExternalTrackingToHMD(ExternalTrackingTransform: Transform)
        fun BreakKey(InKey: Key, InteractionProfile: String = definedExternally, Hand: String /* "Left" | "Right" | "AnyHand" | "Pad" | "ExternalCamera" | "Gun" | "HMD" | "Special_1" | "Special_2" | "Special_3" | "Special_4" | "Special_5" | "Special_6" | "Special_7" | "Special_8" | "Special_9" | "Special_10" | "Special_11" | "ControllerHand_Count" | "EControllerHand_MAX" */ = definedExternally, MotionSource: String = definedExternally, Indentifier: String = definedExternally, Component: String = definedExternally): `T$253`
        fun C(Other: UObject): HeadMountedDisplayFunctionLibrary
        fun C(Other: Any): HeadMountedDisplayFunctionLibrary
    }
}

external object EHandKeypoint {
    var Palm: String /* "Palm" */
    var Wrist: String /* "Wrist" */
    var ThumbMetacarpal: String /* "ThumbMetacarpal" */
    var ThumbProximal: String /* "ThumbProximal" */
    var ThumbDistal: String /* "ThumbDistal" */
    var ThumbTip: String /* "ThumbTip" */
    var IndexMetacarpal: String /* "IndexMetacarpal" */
    var IndexProximal: String /* "IndexProximal" */
    var IndexIntermediate: String /* "IndexIntermediate" */
    var IndexDistal: String /* "IndexDistal" */
    var IndexTip: String /* "IndexTip" */
    var MiddleMetacarpal: String /* "MiddleMetacarpal" */
    var MiddleProximal: String /* "MiddleProximal" */
    var MiddleIntermediate: String /* "MiddleIntermediate" */
    var MiddleDistal: String /* "MiddleDistal" */
    var MiddleTip: String /* "MiddleTip" */
    var RingMetacarpal: String /* "RingMetacarpal" */
    var RingProximal: String /* "RingProximal" */
    var RingIntermediate: String /* "RingIntermediate" */
    var RingDistal: String /* "RingDistal" */
    var RingTip: String /* "RingTip" */
    var LittleMetacarpal: String /* "LittleMetacarpal" */
    var LittleProximal: String /* "LittleProximal" */
    var LittleIntermediate: String /* "LittleIntermediate" */
    var LittleDistal: String /* "LittleDistal" */
    var LittleTip: String /* "LittleTip" */
    var EHandKeypoint_MAX: String /* "EHandKeypoint_MAX" */
}

external open class HandKeypointConversion : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): HandKeypointConversion
        fun Find(Outer: UObject, ResourceName: String): HandKeypointConversion
        fun GetDefaultObject(): HandKeypointConversion
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): HandKeypointConversion
        fun Conv_HandKeypointToInt32(Input: String /* "Palm" | "Wrist" | "ThumbMetacarpal" | "ThumbProximal" | "ThumbDistal" | "ThumbTip" | "IndexMetacarpal" | "IndexProximal" | "IndexIntermediate" | "IndexDistal" | "IndexTip" | "MiddleMetacarpal" | "MiddleProximal" | "MiddleIntermediate" | "MiddleDistal" | "MiddleTip" | "RingMetacarpal" | "RingProximal" | "RingIntermediate" | "RingDistal" | "RingTip" | "LittleMetacarpal" | "LittleProximal" | "LittleIntermediate" | "LittleDistal" | "LittleTip" | "EHandKeypoint_MAX" */): Number
        fun C(Other: UObject): HandKeypointConversion
        fun C(Other: Any): HandKeypointConversion
    }
}

external open class MotionTrackedDeviceFunctionLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MotionTrackedDeviceFunctionLibrary
        fun Find(Outer: UObject, ResourceName: String): MotionTrackedDeviceFunctionLibrary
        fun GetDefaultObject(): MotionTrackedDeviceFunctionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MotionTrackedDeviceFunctionLibrary
        fun SetIsControllerMotionTrackingEnabledByDefault(Enable: Boolean)
        fun IsMotionTrackingEnabledForSource(PlayerIndex: Number, SourceName: String): Boolean
        fun IsMotionTrackingEnabledForDevice(PlayerIndex: Number, Hand: String /* "Left" | "Right" | "AnyHand" | "Pad" | "ExternalCamera" | "Gun" | "HMD" | "Special_1" | "Special_2" | "Special_3" | "Special_4" | "Special_5" | "Special_6" | "Special_7" | "Special_8" | "Special_9" | "Special_10" | "Special_11" | "ControllerHand_Count" | "EControllerHand_MAX" */): Boolean
        fun IsMotionTrackingEnabledForComponent(MotionControllerComponent: MotionControllerComponent): Boolean
        fun IsMotionTrackedDeviceCountManagementNecessary(): Boolean
        fun IsMotionSourceTracking(PlayerIndex: Number, SourceName: String): Boolean
        fun GetMotionTrackingEnabledControllerCount(): Number
        fun GetMaximumMotionTrackedControllerCount(): Number
        fun GetActiveTrackingSystemName(): String
        fun EnumerateMotionSources(): Array<String>
        fun EnableMotionTrackingOfSource(PlayerIndex: Number, SourceName: String): Boolean
        fun EnableMotionTrackingOfDevice(PlayerIndex: Number, Hand: String /* "Left" | "Right" | "AnyHand" | "Pad" | "ExternalCamera" | "Gun" | "HMD" | "Special_1" | "Special_2" | "Special_3" | "Special_4" | "Special_5" | "Special_6" | "Special_7" | "Special_8" | "Special_9" | "Special_10" | "Special_11" | "ControllerHand_Count" | "EControllerHand_MAX" */): Boolean
        fun EnableMotionTrackingForComponent(MotionControllerComponent: MotionControllerComponent): Boolean
        fun DisableMotionTrackingOfSource(PlayerIndex: Number, SourceName: String)
        fun DisableMotionTrackingOfDevice(PlayerIndex: Number, Hand: String /* "Left" | "Right" | "AnyHand" | "Pad" | "ExternalCamera" | "Gun" | "HMD" | "Special_1" | "Special_2" | "Special_3" | "Special_4" | "Special_5" | "Special_6" | "Special_7" | "Special_8" | "Special_9" | "Special_10" | "Special_11" | "ControllerHand_Count" | "EControllerHand_MAX" */)
        fun DisableMotionTrackingOfControllersForPlayer(PlayerIndex: Number)
        fun DisableMotionTrackingOfAllControllers()
        fun DisableMotionTrackingForComponent(MotionControllerComponent: MotionControllerComponent)
        fun C(Other: UObject): MotionTrackedDeviceFunctionLibrary
        fun C(Other: Any): MotionTrackedDeviceFunctionLibrary
    }
}

external open class VRNotificationsComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var HMDTrackingInitializingAndNeedsHMDToBeTrackedDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var HMDTrackingInitializedDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var HMDRecenteredDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var HMDLostDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var HMDReconnectedDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var HMDConnectCanceledDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var HMDPutOnHeadDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var HMDRemovedFromHeadDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var VRControllerRecenteredDelegate: UnrealEngineMulticastDelegate<() -> Unit>

    companion object {
        fun Load(ResourceName: String): VRNotificationsComponent
        fun Find(Outer: UObject, ResourceName: String): VRNotificationsComponent
        fun GetDefaultObject(): VRNotificationsComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VRNotificationsComponent
        fun C(Other: UObject): VRNotificationsComponent
        fun C(Other: Any): VRNotificationsComponent
    }
}

external open class XRAssetFunctionLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): XRAssetFunctionLibrary
        fun Find(Outer: UObject, ResourceName: String): XRAssetFunctionLibrary
        fun GetDefaultObject(): XRAssetFunctionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): XRAssetFunctionLibrary
        fun AddNamedDeviceVisualizationComponentBlocking(Target: Actor, SystemName: String, DeviceName: String, bManualAttachment: Boolean, RelativeTransform: Transform, XRDeviceId: XRDeviceId = definedExternally): `T$515`
        fun AddDeviceVisualizationComponentBlocking(Target: Actor, XRDeviceId: XRDeviceId, bManualAttachment: Boolean, RelativeTransform: Transform): PrimitiveComponent
        fun C(Other: UObject): XRAssetFunctionLibrary
        fun C(Other: Any): XRAssetFunctionLibrary
    }
}

external interface `T$570` {
    var XRDeviceId: XRDeviceId
    var NewComponent: PrimitiveComponent
    var `$`: AsyncTask_LoadXRDeviceVisComponent
}

external interface `T$571` {
    var NewComponent: PrimitiveComponent
    var `$`: AsyncTask_LoadXRDeviceVisComponent
}

external open class AsyncTask_LoadXRDeviceVisComponent : BlueprintAsyncActionBase {
    constructor()
    constructor(Outer: UObject)
    open var OnModelLoaded: UnrealEngineMulticastDelegate<(LoadedComponent: PrimitiveComponent) -> Unit>
    open var OnLoadFailure: UnrealEngineMulticastDelegate<(LoadedComponent: PrimitiveComponent) -> Unit>
    open var SpawnedComponent: PrimitiveComponent

    companion object {
        fun Load(ResourceName: String): AsyncTask_LoadXRDeviceVisComponent
        fun Find(Outer: UObject, ResourceName: String): AsyncTask_LoadXRDeviceVisComponent
        fun GetDefaultObject(): AsyncTask_LoadXRDeviceVisComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AsyncTask_LoadXRDeviceVisComponent
        fun AddNamedDeviceVisualizationComponentAsync(Target: Actor, SystemName: String, DeviceName: String, bManualAttachment: Boolean, RelativeTransform: Transform, XRDeviceId: XRDeviceId = definedExternally, NewComponent: PrimitiveComponent = definedExternally): `T$570`
        fun AddDeviceVisualizationComponentAsync(Target: Actor, XRDeviceId: XRDeviceId, bManualAttachment: Boolean, RelativeTransform: Transform, NewComponent: PrimitiveComponent = definedExternally): `T$571`
        fun C(Other: UObject): AsyncTask_LoadXRDeviceVisComponent
        fun C(Other: Any): AsyncTask_LoadXRDeviceVisComponent
    }
}

external open class XRLoadingScreenFunctionLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): XRLoadingScreenFunctionLibrary
        fun Find(Outer: UObject, ResourceName: String): XRLoadingScreenFunctionLibrary
        fun GetDefaultObject(): XRLoadingScreenFunctionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): XRLoadingScreenFunctionLibrary
        fun ShowLoadingScreen()
        fun SetLoadingScreen(Texture: Texture, Scale: Vector2D, Offset: Vector, bShowLoadingMovie: Boolean, bShowOnSet: Boolean)
        fun HideLoadingScreen()
        fun ClearLoadingScreenSplashes()
        fun AddLoadingScreenSplash(Texture: Texture, Translation: Vector, Rotation: Rotator, Size: Vector2D, DeltaRotation: Rotator, bClearBeforeAdd: Boolean)
        fun C(Other: UObject): XRLoadingScreenFunctionLibrary
        fun C(Other: Any): XRLoadingScreenFunctionLibrary
    }
}

external open class ActorTransformer : ViewportTransformer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorTransformer
        fun Find(Outer: UObject, ResourceName: String): ActorTransformer
        fun GetDefaultObject(): ActorTransformer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorTransformer
        fun C(Other: UObject): ActorTransformer
        fun C(Other: Any): ActorTransformer
    }
}

external open class ViewportInteractableInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ViewportInteractableInterface
        fun Find(Outer: UObject, ResourceName: String): ViewportInteractableInterface
        fun GetDefaultObject(): ViewportInteractableInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ViewportInteractableInterface
        fun C(Other: UObject): ViewportInteractableInterface
        fun C(Other: Any): ViewportInteractableInterface
    }
}

external open class TranslationDragOperation : ViewportDragOperation {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TranslationDragOperation
        fun Find(Outer: UObject, ResourceName: String): TranslationDragOperation
        fun GetDefaultObject(): TranslationDragOperation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TranslationDragOperation
        fun C(Other: UObject): TranslationDragOperation
        fun C(Other: Any): TranslationDragOperation
    }
}

external open class PlaneTranslationDragOperation : ViewportDragOperation {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PlaneTranslationDragOperation
        fun Find(Outer: UObject, ResourceName: String): PlaneTranslationDragOperation
        fun GetDefaultObject(): PlaneTranslationDragOperation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PlaneTranslationDragOperation
        fun C(Other: UObject): PlaneTranslationDragOperation
        fun C(Other: Any): PlaneTranslationDragOperation
    }
}

external open class RotateOnAngleDragOperation : ViewportDragOperation {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): RotateOnAngleDragOperation
        fun Find(Outer: UObject, ResourceName: String): RotateOnAngleDragOperation
        fun GetDefaultObject(): RotateOnAngleDragOperation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RotateOnAngleDragOperation
        fun C(Other: UObject): RotateOnAngleDragOperation
        fun C(Other: Any): RotateOnAngleDragOperation
    }
}

external open class ScaleDragOperation : ViewportDragOperation {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ScaleDragOperation
        fun Find(Outer: UObject, ResourceName: String): ScaleDragOperation
        fun GetDefaultObject(): ScaleDragOperation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ScaleDragOperation
        fun C(Other: UObject): ScaleDragOperation
        fun C(Other: Any): ScaleDragOperation
    }
}

external open class UniformScaleDragOperation : ViewportDragOperation {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): UniformScaleDragOperation
        fun Find(Outer: UObject, ResourceName: String): UniformScaleDragOperation
        fun GetDefaultObject(): UniformScaleDragOperation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UniformScaleDragOperation
        fun C(Other: UObject): UniformScaleDragOperation
        fun C(Other: Any): UniformScaleDragOperation
    }
}

external open class AxisGizmoHandleGroup : GizmoHandleGroup {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AxisGizmoHandleGroup
        fun Find(Outer: UObject, ResourceName: String): AxisGizmoHandleGroup
        fun GetDefaultObject(): AxisGizmoHandleGroup
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AxisGizmoHandleGroup
        fun C(Other: UObject): AxisGizmoHandleGroup
        fun C(Other: Any): AxisGizmoHandleGroup
    }
}

external open class GizmoHandleMeshComponent : StaticMeshComponent {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GizmoHandleMeshComponent
        fun Find(Outer: UObject, ResourceName: String): GizmoHandleMeshComponent
        fun GetDefaultObject(): GizmoHandleMeshComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoHandleMeshComponent
        fun C(Other: UObject): GizmoHandleMeshComponent
        fun C(Other: Any): GizmoHandleMeshComponent
    }
}

external open class UniformScaleGizmoHandleGroup : GizmoHandleGroup {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): UniformScaleGizmoHandleGroup
        fun Find(Outer: UObject, ResourceName: String): UniformScaleGizmoHandleGroup
        fun GetDefaultObject(): UniformScaleGizmoHandleGroup
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UniformScaleGizmoHandleGroup
        fun C(Other: UObject): UniformScaleGizmoHandleGroup
        fun C(Other: Any): UniformScaleGizmoHandleGroup
    }
}

external open class PivotTranslationGizmoHandleGroup : AxisGizmoHandleGroup {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PivotTranslationGizmoHandleGroup
        fun Find(Outer: UObject, ResourceName: String): PivotTranslationGizmoHandleGroup
        fun GetDefaultObject(): PivotTranslationGizmoHandleGroup
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PivotTranslationGizmoHandleGroup
        fun C(Other: UObject): PivotTranslationGizmoHandleGroup
        fun C(Other: Any): PivotTranslationGizmoHandleGroup
    }
}

external open class PivotScaleGizmoHandleGroup : AxisGizmoHandleGroup {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PivotScaleGizmoHandleGroup
        fun Find(Outer: UObject, ResourceName: String): PivotScaleGizmoHandleGroup
        fun GetDefaultObject(): PivotScaleGizmoHandleGroup
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PivotScaleGizmoHandleGroup
        fun C(Other: UObject): PivotScaleGizmoHandleGroup
        fun C(Other: Any): PivotScaleGizmoHandleGroup
    }
}

external open class PivotPlaneTranslationGizmoHandleGroup : AxisGizmoHandleGroup {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PivotPlaneTranslationGizmoHandleGroup
        fun Find(Outer: UObject, ResourceName: String): PivotPlaneTranslationGizmoHandleGroup
        fun GetDefaultObject(): PivotPlaneTranslationGizmoHandleGroup
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PivotPlaneTranslationGizmoHandleGroup
        fun C(Other: UObject): PivotPlaneTranslationGizmoHandleGroup
        fun C(Other: Any): PivotPlaneTranslationGizmoHandleGroup
    }
}

external open class PivotRotationGizmoHandleGroup : AxisGizmoHandleGroup {
    constructor()
    constructor(Outer: UObject)
    open var RootFullRotationHandleComponent: SceneComponent
    open var FullRotationHandleMeshComponent: GizmoHandleMeshComponent
    open var StartRotationIndicatorMeshComponent: GizmoHandleMeshComponent
    open var RootStartRotationIdicatorComponent: SceneComponent
    open var DeltaRotationIndicatorMeshComponent: GizmoHandleMeshComponent
    open var RootDeltaRotationIndicatorComponent: SceneComponent

    companion object {
        fun Load(ResourceName: String): PivotRotationGizmoHandleGroup
        fun Find(Outer: UObject, ResourceName: String): PivotRotationGizmoHandleGroup
        fun GetDefaultObject(): PivotRotationGizmoHandleGroup
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PivotRotationGizmoHandleGroup
        fun C(Other: UObject): PivotRotationGizmoHandleGroup
        fun C(Other: Any): PivotRotationGizmoHandleGroup
    }
}

external open class StretchGizmoHandleGroup : GizmoHandleGroup {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): StretchGizmoHandleGroup
        fun Find(Outer: UObject, ResourceName: String): StretchGizmoHandleGroup
        fun GetDefaultObject(): StretchGizmoHandleGroup
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): StretchGizmoHandleGroup
        fun C(Other: UObject): StretchGizmoHandleGroup
        fun C(Other: Any): StretchGizmoHandleGroup
    }
}

external open class PivotTransformGizmo(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : BaseTransformGizmo {
    open var UniformScaleGizmoHandleGroup: UniformScaleGizmoHandleGroup
    open var TranslationGizmoHandleGroup: PivotTranslationGizmoHandleGroup
    open var ScaleGizmoHandleGroup: PivotScaleGizmoHandleGroup
    open var PlaneTranslationGizmoHandleGroup: PivotPlaneTranslationGizmoHandleGroup
    open var RotationGizmoHandleGroup: PivotRotationGizmoHandleGroup
    open var StretchGizmoHandleGroup: StretchGizmoHandleGroup
    open var LastDraggingHandle: ActorComponent

    companion object {
        fun GetDefaultObject(): PivotTransformGizmo
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PivotTransformGizmo
        fun C(Other: UObject): PivotTransformGizmo
        fun C(Other: Any): PivotTransformGizmo
    }
}

external open class StretchGizmoHandleDragOperation : ViewportDragOperation {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): StretchGizmoHandleDragOperation
        fun Find(Outer: UObject, ResourceName: String): StretchGizmoHandleDragOperation
        fun GetDefaultObject(): StretchGizmoHandleDragOperation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): StretchGizmoHandleDragOperation
        fun C(Other: UObject): StretchGizmoHandleDragOperation
        fun C(Other: Any): StretchGizmoHandleDragOperation
    }
}

external object ELocalizationTargetConflictStatus {
    var Unknown: String /* "Unknown" */
    var ConflictsPresent: String /* "ConflictsPresent" */
    var Clear: String /* "Clear" */
    var ELocalizationTargetConflictStatus_MAX: String /* "ELocalizationTargetConflictStatus_MAX" */
}

external object ELocalizationGatherPathRoot {
    var Auto: String /* "Auto" */
    var Engine: String /* "Engine" */
    var Project: String /* "Project" */
    var ELocalizationGatherPathRoot_MAX: String /* "ELocalizationGatherPathRoot_MAX" */
}

external open class GatherTextSearchDirectory {
    open var PathRoot: String /* "Auto" | "Engine" | "Project" | "ELocalizationGatherPathRoot_MAX" */
    open var Path: String
    open fun clone(): GatherTextSearchDirectory

    companion object {
        fun C(Other: UObject): GatherTextSearchDirectory
        fun C(Other: Any): GatherTextSearchDirectory
    }
}

external open class GatherTextExcludePath {
    open var PathRoot: String /* "Auto" | "Engine" | "Project" | "ELocalizationGatherPathRoot_MAX" */
    open var Pattern: String
    open fun clone(): GatherTextExcludePath

    companion object {
        fun C(Other: UObject): GatherTextExcludePath
        fun C(Other: Any): GatherTextExcludePath
    }
}

external open class GatherTextFileExtension {
    open var Pattern: String
    open fun clone(): GatherTextFileExtension

    companion object {
        fun C(Other: UObject): GatherTextFileExtension
        fun C(Other: Any): GatherTextFileExtension
    }
}

external open class GatherTextFromTextFilesConfiguration {
    open var IsEnabled: Boolean
    open var SearchDirectories: Array<GatherTextSearchDirectory>
    open var ExcludePathWildcards: Array<GatherTextExcludePath>
    open var FileExtensions: Array<GatherTextFileExtension>
    open var ShouldGatherFromEditorOnlyData: Boolean
    open fun clone(): GatherTextFromTextFilesConfiguration

    companion object {
        fun C(Other: UObject): GatherTextFromTextFilesConfiguration
        fun C(Other: Any): GatherTextFromTextFilesConfiguration
    }
}

external open class GatherTextIncludePath {
    open var PathRoot: String /* "Auto" | "Engine" | "Project" | "ELocalizationGatherPathRoot_MAX" */
    open var Pattern: String
    open fun clone(): GatherTextIncludePath

    companion object {
        fun C(Other: UObject): GatherTextIncludePath
        fun C(Other: Any): GatherTextIncludePath
    }
}

external open class GatherTextFromPackagesConfiguration {
    open var IsEnabled: Boolean
    open var IncludePathWildcards: Array<GatherTextIncludePath>
    open var ExcludePathWildcards: Array<GatherTextExcludePath>
    open var FileExtensions: Array<GatherTextFileExtension>
    open var Collections: Array<String>
    open var ExcludeClasses: Array<SoftClassPath>
    open var ShouldExcludeDerivedClasses: Boolean
    open var ShouldGatherFromEditorOnlyData: Boolean
    open var SkipGatherCache: Boolean
    open fun clone(): GatherTextFromPackagesConfiguration

    companion object {
        fun C(Other: UObject): GatherTextFromPackagesConfiguration
        fun C(Other: Any): GatherTextFromPackagesConfiguration
    }
}

external open class MetaDataKeyName {
    open var Name: String
    open fun clone(): MetaDataKeyName

    companion object {
        fun C(Other: UObject): MetaDataKeyName
        fun C(Other: Any): MetaDataKeyName
    }
}

external open class MetaDataTextKeyPattern {
    open var Pattern: String
    open fun clone(): MetaDataTextKeyPattern

    companion object {
        fun C(Other: UObject): MetaDataTextKeyPattern
        fun C(Other: Any): MetaDataTextKeyPattern
    }
}

external open class MetaDataKeyGatherSpecification {
    open var MetaDataKey: MetaDataKeyName
    open var TextNamespace: String
    open var TextKeyPattern: MetaDataTextKeyPattern
    open fun clone(): MetaDataKeyGatherSpecification

    companion object {
        fun C(Other: UObject): MetaDataKeyGatherSpecification
        fun C(Other: Any): MetaDataKeyGatherSpecification
    }
}

external open class GatherTextFromMetaDataConfiguration {
    open var IsEnabled: Boolean
    open var IncludePathWildcards: Array<GatherTextIncludePath>
    open var ExcludePathWildcards: Array<GatherTextExcludePath>
    open var KeySpecifications: Array<MetaDataKeyGatherSpecification>
    open var ShouldGatherFromEditorOnlyData: Boolean
    open fun clone(): GatherTextFromMetaDataConfiguration

    companion object {
        fun C(Other: UObject): GatherTextFromMetaDataConfiguration
        fun C(Other: Any): GatherTextFromMetaDataConfiguration
    }
}

external object ELocalizedTextCollapseMode {
    var IdenticalTextIdAndSource: String /* "IdenticalTextIdAndSource" */
    var IdenticalPackageIdTextIdAndSource: String /* "IdenticalPackageIdTextIdAndSource" */
    var IdenticalNamespaceAndSource: String /* "IdenticalNamespaceAndSource" */
    var ELocalizedTextCollapseMode_MAX: String /* "ELocalizedTextCollapseMode_MAX" */
}

external object EPortableObjectFormat {
    var Unreal: String /* "Unreal" */
    var Crowdin: String /* "Crowdin" */
    var EPortableObjectFormat_MAX: String /* "EPortableObjectFormat_MAX" */
}

external open class LocalizationExportingSettings {
    open var CollapseMode: String /* "IdenticalTextIdAndSource" | "IdenticalPackageIdTextIdAndSource" | "IdenticalNamespaceAndSource" | "ELocalizedTextCollapseMode_MAX" */
    open var POFormat: String /* "Unreal" | "Crowdin" | "EPortableObjectFormat_MAX" */
    open var ShouldPersistCommentsOnExport: Boolean
    open var ShouldAddSourceLocationsAsComments: Boolean
    open fun clone(): LocalizationExportingSettings

    companion object {
        fun C(Other: UObject): LocalizationExportingSettings
        fun C(Other: Any): LocalizationExportingSettings
    }
}

external open class LocalizationCompilationSettings {
    open var SkipSourceCheck: Boolean
    open var ValidateFormatPatterns: Boolean
    open var ValidateSafeWhitespace: Boolean
    open fun clone(): LocalizationCompilationSettings

    companion object {
        fun C(Other: UObject): LocalizationCompilationSettings
        fun C(Other: Any): LocalizationCompilationSettings
    }
}

external open class LocalizationImportDialogueSettings {
    open var RawAudioPath: DirectoryPath
    open var ImportedDialogueFolder: String
    open var bImportNativeAsSource: Boolean
    open fun clone(): LocalizationImportDialogueSettings

    companion object {
        fun C(Other: UObject): LocalizationImportDialogueSettings
        fun C(Other: Any): LocalizationImportDialogueSettings
    }
}

external open class CultureStatistics {
    open var CultureName: String
    open var WordCount: Any
    open fun clone(): CultureStatistics

    companion object {
        fun C(Other: UObject): CultureStatistics
        fun C(Other: Any): CultureStatistics
    }
}

external open class LocalizationTargetSettings {
    open var Name: String
    open var Guid: Guid
    open var ConflictStatus: String /* "Unknown" | "ConflictsPresent" | "Clear" | "ELocalizationTargetConflictStatus_MAX" */
    open var TargetDependencies: Array<Guid>
    open var AdditionalManifestDependencies: Array<FilePath>
    open var RequiredModuleNames: Array<String>
    open var GatherFromTextFiles: GatherTextFromTextFilesConfiguration
    open var GatherFromPackages: GatherTextFromPackagesConfiguration
    open var GatherFromMetaData: GatherTextFromMetaDataConfiguration
    open var ExportSettings: LocalizationExportingSettings
    open var CompileSettings: LocalizationCompilationSettings
    open var ImportDialogueSettings: LocalizationImportDialogueSettings
    open var NativeCultureIndex: Number
    open var SupportedCulturesStatistics: Array<CultureStatistics>
    open fun clone(): LocalizationTargetSettings

    companion object {
        fun C(Other: UObject): LocalizationTargetSettings
        fun C(Other: Any): LocalizationTargetSettings
    }
}

external open class LocalizationTarget : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Settings: LocalizationTargetSettings

    companion object {
        fun Load(ResourceName: String): LocalizationTarget
        fun Find(Outer: UObject, ResourceName: String): LocalizationTarget
        fun GetDefaultObject(): LocalizationTarget
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LocalizationTarget
        fun C(Other: UObject): LocalizationTarget
        fun C(Other: Any): LocalizationTarget
    }
}

external open class LocalizationTargetSet : UObject {
    constructor()
    constructor(Outer: UObject)
    open var TargetObjects: Array<LocalizationTarget>

    companion object {
        fun Load(ResourceName: String): LocalizationTargetSet
        fun Find(Outer: UObject, ResourceName: String): LocalizationTargetSet
        fun GetDefaultObject(): LocalizationTargetSet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LocalizationTargetSet
        fun C(Other: UObject): LocalizationTargetSet
        fun C(Other: Any): LocalizationTargetSet
    }
}

external open class LocalizationSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var EngineTargetSet: LocalizationTargetSet
    open var EngineTargetsSettings: Array<LocalizationTargetSettings>
    open var GameTargetSet: LocalizationTargetSet
    open var GameTargetsSettings: Array<LocalizationTargetSettings>

    companion object {
        fun Load(ResourceName: String): LocalizationSettings
        fun Find(Outer: UObject, ResourceName: String): LocalizationSettings
        fun GetDefaultObject(): LocalizationSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LocalizationSettings
        fun C(Other: UObject): LocalizationSettings
        fun C(Other: Any): LocalizationSettings
    }
}

external open class InternationalizationExportSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var CulturesToGenerate: Array<String>
    open var CommandletClass: String
    open var SourcePath: String
    open var DestinationPath: String
    open var PortableObjectName: String
    open var ManifestName: String
    open var ArchiveName: String
    open var bExportLoc: Boolean
    open var bImportLoc: Boolean
    open var bUseCultureDirectory: Boolean

    companion object {
        fun Load(ResourceName: String): InternationalizationExportSettings
        fun Find(Outer: UObject, ResourceName: String): InternationalizationExportSettings
        fun GetDefaultObject(): InternationalizationExportSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InternationalizationExportSettings
        fun C(Other: UObject): InternationalizationExportSettings
        fun C(Other: Any): InternationalizationExportSettings
    }
}

external open class TranslationPickerSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bSubmitTranslationPickerChangesToLocalizationService: Boolean

    companion object {
        fun Load(ResourceName: String): TranslationPickerSettings
        fun Find(Outer: UObject, ResourceName: String): TranslationPickerSettings
        fun GetDefaultObject(): TranslationPickerSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TranslationPickerSettings
        fun C(Other: UObject): TranslationPickerSettings
        fun C(Other: Any): TranslationPickerSettings
    }
}

external interface `T$572` {
    var Year: Number
    var Month: Number
    var Day: Number
    var Hour: Number
    var Minute: Number
    var Second: Number
    var Millisecond: Number
}

external open class DateTime {
    open fun clone(): DateTime
    open fun AsDate(): String
    open fun AsDateTime(): String
    open fun AsTime(): String
    open fun AsDate(InTimeZone: String): String
    open fun AsDateTime(InTimeZone: String): String
    open fun AsTime(InTimeZone: String): String
    open fun Add_DateTimeDateTime(B: DateTime): DateTime
    open fun Add_DateTimeTimespan(B: Timespan): DateTime
    open fun BreakDateTime(Year: Number = definedExternally, Month: Number = definedExternally, Day: Number = definedExternally, Hour: Number = definedExternally, Minute: Number = definedExternally, Second: Number = definedExternally, Millisecond: Number = definedExternally): `T$572`
    open fun Equal(B: DateTime): Boolean
    open fun GetDate(): DateTime
    open fun GetDay(): Number
    open fun GetDayOfYear(): Number
    open fun GetHour(): Number
    open fun GetHour12(): Number
    open fun GetMillisecond(): Number
    open fun GetMinute(): Number
    open fun GetMonth(): Number
    open fun GetSecond(): Number
    open fun GetTimeOfDay(): Timespan
    open fun GetYear(): Number
    open fun Greater_DateTimeDateTime(B: DateTime): Boolean
    open fun GreaterEqual_DateTimeDateTime(B: DateTime): Boolean
    open fun IsAfternoon(): Boolean
    open fun IsMorning(): Boolean
    open fun Less_DateTimeDateTime(B: DateTime): Boolean
    open fun LessEqual_DateTimeDateTime(B: DateTime): Boolean
    open fun NotEqual(B: DateTime): Boolean
    open fun Subtract_DateTimeDateTime(B: DateTime): Timespan
    open fun Subtract_DateTimeTimespan(B: Timespan): DateTime
    open fun ScheduleLocalNotificationAtTime(LocalTime: Boolean, Title: String, Body: String, Action: String, ActivationEvent: String): Number
    open fun ScheduleLocalNotificationBadgeAtTime(LocalTime: Boolean, ActivationEvent: String): Number

    companion object {
        fun C(Other: UObject): DateTime
        fun C(Other: Any): DateTime
        fun AsDate(InDateTime: DateTime): String
        fun AsDateTime(In: DateTime): String
        fun AsTime(In: DateTime): String
        fun AsDate(InDateTime: DateTime, InTimeZone: String): String
        fun AsDateTime(InDateTime: DateTime, InTimeZone: String): String
        fun AsTime(InDateTime: DateTime, InTimeZone: String): String
        fun Add_DateTimeDateTime(A: DateTime, B: DateTime): DateTime
        fun Add_DateTimeTimespan(A: DateTime, B: Timespan): DateTime
        fun BreakDateTime(InDateTime: DateTime, Year: Number = definedExternally, Month: Number = definedExternally, Day: Number = definedExternally, Hour: Number = definedExternally, Minute: Number = definedExternally, Second: Number = definedExternally, Millisecond: Number = definedExternally): `T$572`
        fun Equal(A: DateTime, B: DateTime): Boolean
        fun GetDate(A: DateTime): DateTime
        fun GetDay(A: DateTime): Number
        fun GetDayOfYear(A: DateTime): Number
        fun GetHour(A: DateTime): Number
        fun GetHour12(A: DateTime): Number
        fun GetMillisecond(A: DateTime): Number
        fun GetMinute(A: DateTime): Number
        fun GetMonth(A: DateTime): Number
        fun GetSecond(A: DateTime): Number
        fun GetTimeOfDay(A: DateTime): Timespan
        fun GetYear(A: DateTime): Number
        fun Greater_DateTimeDateTime(A: DateTime, B: DateTime): Boolean
        fun GreaterEqual_DateTimeDateTime(A: DateTime, B: DateTime): Boolean
        fun IsAfternoon(A: DateTime): Boolean
        fun IsMorning(A: DateTime): Boolean
        fun Less_DateTimeDateTime(A: DateTime, B: DateTime): Boolean
        fun LessEqual_DateTimeDateTime(A: DateTime, B: DateTime): Boolean
        fun NotEqual(A: DateTime, B: DateTime): Boolean
        fun Subtract_DateTimeDateTime(A: DateTime, B: DateTime): Timespan
        fun Subtract_DateTimeTimespan(A: DateTime, B: Timespan): DateTime
        fun ScheduleLocalNotificationAtTime(FireDateTime: DateTime, LocalTime: Boolean, Title: String, Body: String, Action: String, ActivationEvent: String): Number
        fun ScheduleLocalNotificationBadgeAtTime(FireDateTime: DateTime, LocalTime: Boolean, ActivationEvent: String): Number
        fun MaxValue(): DateTime
        fun MinValue(): DateTime
        fun MakeDateTime(Year: Number, Month: Number, Day: Number, Hour: Number, Minute: Number, Second: Number, Millisecond: Number): DateTime
        fun Now(): DateTime
        fun Today(): DateTime
        fun UtcNow(): DateTime
    }
}

external open class TranslationChange {
    open var Version: String
    open var DateAndTime: DateTime
    open var Source: String
    open var Translation: String
    open fun clone(): TranslationChange

    companion object {
        fun C(Other: UObject): TranslationChange
        fun C(Other: Any): TranslationChange
    }
}

external open class TranslationContextInfo {
    open var Key: String
    open var Context: String
    open var Changes: Array<TranslationChange>
    open fun clone(): TranslationContextInfo

    companion object {
        fun C(Other: UObject): TranslationContextInfo
        fun C(Other: Any): TranslationContextInfo
    }
}

external open class TranslationUnit : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Namespace: String
    open var Key: String
    open var Source: String
    open var Translation: String
    open var Contexts: Array<TranslationContextInfo>
    open var HasBeenReviewed: Boolean
    open var TranslationBeforeImport: String
    open var LocresPath: String

    companion object {
        fun Load(ResourceName: String): TranslationUnit
        fun Find(Outer: UObject, ResourceName: String): TranslationUnit
        fun GetDefaultObject(): TranslationUnit
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TranslationUnit
        fun C(Other: UObject): TranslationUnit
        fun C(Other: Any): TranslationUnit
    }
}

external open class StatusBarSubsystem : EditorSubsystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): StatusBarSubsystem
        fun Find(Outer: UObject, ResourceName: String): StatusBarSubsystem
        fun GetDefaultObject(): StatusBarSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): StatusBarSubsystem
        fun C(Other: UObject): StatusBarSubsystem
        fun C(Other: Any): StatusBarSubsystem
    }
}

external open class LevelEditorMenuContext : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LevelEditorMenuContext
        fun Find(Outer: UObject, ResourceName: String): LevelEditorMenuContext
        fun GetDefaultObject(): LevelEditorMenuContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelEditorMenuContext
        fun C(Other: UObject): LevelEditorMenuContext
        fun C(Other: Any): LevelEditorMenuContext
    }
}

external object ELevelEditorMenuContext {
    var Viewport: String /* "Viewport" */
    var SceneOutliner: String /* "SceneOutliner" */
    var MainMenu: String /* "MainMenu" */
    var ELevelEditorMenuContext_MAX: String /* "ELevelEditorMenuContext_MAX" */
}

external open class LevelEditorContextMenuContext : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ContextType: String /* "Viewport" | "SceneOutliner" | "MainMenu" | "ELevelEditorMenuContext_MAX" */
    open var CurrentSelection: TypedElementSelectionSet
    open var CursorWorldLocation: Vector
    open var SelectedComponents: Array<ActorComponent>
    open var HitProxyActor: Actor
    open fun GetHitProxyElement(): ScriptTypedElementHandle

    companion object {
        fun Load(ResourceName: String): LevelEditorContextMenuContext
        fun Find(Outer: UObject, ResourceName: String): LevelEditorContextMenuContext
        fun GetDefaultObject(): LevelEditorContextMenuContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelEditorContextMenuContext
        fun C(Other: UObject): LevelEditorContextMenuContext
        fun C(Other: Any): LevelEditorContextMenuContext
    }
}

external open class LevelViewportToolBarContext : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LevelViewportToolBarContext
        fun Find(Outer: UObject, ResourceName: String): LevelViewportToolBarContext
        fun GetDefaultObject(): LevelViewportToolBarContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelViewportToolBarContext
        fun C(Other: UObject): LevelViewportToolBarContext
        fun C(Other: Any): LevelViewportToolBarContext
    }
}

external open class QuickActionMenuContext : UObject {
    constructor()
    constructor(Outer: UObject)
    open var CurrentSelection: TypedElementSelectionSet

    companion object {
        fun Load(ResourceName: String): QuickActionMenuContext
        fun Find(Outer: UObject, ResourceName: String): QuickActionMenuContext
        fun GetDefaultObject(): QuickActionMenuContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): QuickActionMenuContext
        fun C(Other: UObject): QuickActionMenuContext
        fun C(Other: Any): QuickActionMenuContext
    }
}

external open class LevelEditorSubsystem : EditorSubsystem {
    constructor()
    constructor(Outer: UObject)
    open fun SetCurrentLevelByName(LevelName: String): Boolean
    open fun SetAllowsCinematicControl(bAllow: Boolean, ViewportConfigKey: String)
    open fun SaveCurrentLevel(): Boolean
    open fun SaveAllDirtyLevels(): Boolean
    open fun PilotLevelActor(ActorToPilot: Actor, ViewportConfigKey: String)
    open fun NewLevelFromTemplate(AssetPath: String, TemplateAssetPath: String): Boolean
    open fun NewLevel(AssetPath: String): Boolean
    open fun LoadLevel(AssetPath: String): Boolean
    open fun IsInPlayInEditor(): Boolean
    open fun GetViewportConfigKeys(): Array<String>
    open fun GetSelectionSet(): TypedElementSelectionSet
    open fun GetCurrentLevel(): Level
    open fun GetAllowsCinematicControl(ViewportConfigKey: String): Boolean
    open fun GetActiveViewportConfigKey(): String
    open fun EjectPilotLevelActor(ViewportConfigKey: String)
    open fun EditorSetGameView(bGameView: Boolean, ViewportConfigKey: String)
    open fun EditorRequestEndPlay()
    open fun EditorPlaySimulate()
    open fun EditorInvalidateViewports()
    open fun EditorGetGameView(ViewportConfigKey: String): Boolean

    companion object {
        fun Load(ResourceName: String): LevelEditorSubsystem
        fun Find(Outer: UObject, ResourceName: String): LevelEditorSubsystem
        fun GetDefaultObject(): LevelEditorSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelEditorSubsystem
        fun C(Other: UObject): LevelEditorSubsystem
        fun C(Other: Any): LevelEditorSubsystem
    }
}

external open class LightEditorSubsystem : EditorSubsystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LightEditorSubsystem
        fun Find(Outer: UObject, ResourceName: String): LightEditorSubsystem
        fun GetDefaultObject(): LightEditorSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LightEditorSubsystem
        fun C(Other: UObject): LightEditorSubsystem
        fun C(Other: Any): LightEditorSubsystem
    }
}

external open class AssetEditorUISubsystem : EditorSubsystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AssetEditorUISubsystem
        fun Find(Outer: UObject, ResourceName: String): AssetEditorUISubsystem
        fun GetDefaultObject(): AssetEditorUISubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AssetEditorUISubsystem
        fun C(Other: UObject): AssetEditorUISubsystem
        fun C(Other: Any): AssetEditorUISubsystem
    }
}

external open class LevelEditorUISubsystem : AssetEditorUISubsystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LevelEditorUISubsystem
        fun Find(Outer: UObject, ResourceName: String): LevelEditorUISubsystem
        fun GetDefaultObject(): LevelEditorUISubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelEditorUISubsystem
        fun C(Other: UObject): LevelEditorUISubsystem
        fun C(Other: Any): LevelEditorUISubsystem
    }
}

external open class Manipulator(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var AssociatedComponent: SceneComponent
    open var StaticMeshComponent: StaticMeshComponent

    companion object {
        fun GetDefaultObject(): Manipulator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Manipulator
        fun C(Other: UObject): Manipulator
        fun C(Other: Any): Manipulator
    }
}

external open class PropertyNameAndIndex {
    open var Name: String
    open var index: Number
    open fun clone(): PropertyNameAndIndex

    companion object {
        fun C(Other: UObject): PropertyNameAndIndex
        fun C(Other: Any): PropertyNameAndIndex
    }
}

external open class ComponentPropertyPath {
    open var ParentOwningActor: Actor
    open var LastResortComponentPtr: Any
    open var PropertyChain: Array<PropertyNameAndIndex>
    open fun clone(): ComponentPropertyPath

    companion object {
        fun C(Other: UObject): ComponentPropertyPath
        fun C(Other: Any): ComponentPropertyPath
    }
}

external object ESelectedTangentHandle {
    var None: String /* "None" */
    var Leave: String /* "Leave" */
    var Arrive: String /* "Arrive" */
    var ESelectedTangentHandle_MAX: String /* "ESelectedTangentHandle_MAX" */
}

external open class SplineComponentVisualizerSelectionState : UObject {
    constructor()
    constructor(Outer: UObject)
    open var SplinePropertyPath: ComponentPropertyPath
    open var SelectedKeys: Any
    open var LastKeyIndexSelected: Number
    open var SelectedSegmentIndex: Number
    open var SelectedTangentHandle: Number
    open var SelectedTangentHandleType: String /* "None" | "Leave" | "Arrive" | "ESelectedTangentHandle_MAX" */
    open var SelectedSplinePosition: Vector
    open var CachedRotation: Quat

    companion object {
        fun Load(ResourceName: String): SplineComponentVisualizerSelectionState
        fun Find(Outer: UObject, ResourceName: String): SplineComponentVisualizerSelectionState
        fun GetDefaultObject(): SplineComponentVisualizerSelectionState
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SplineComponentVisualizerSelectionState
        fun C(Other: UObject): SplineComponentVisualizerSelectionState
        fun C(Other: Any): SplineComponentVisualizerSelectionState
    }
}

external object EShapeAddMode {
    var AppendAfter: String /* "AppendAfter" */
    var AppendBefore: String /* "AppendBefore" */
    var InsertAfter: String /* "InsertAfter" */
    var InsertBefore: String /* "InsertBefore" */
    var EShapeAddMode_MAX: String /* "EShapeAddMode_MAX" */
}

external open class SplineGeneratorBase : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ShapeAddMode: String /* "AppendAfter" | "AppendBefore" | "InsertAfter" | "InsertBefore" | "EShapeAddMode_MAX" */

    companion object {
        fun Load(ResourceName: String): SplineGeneratorBase
        fun Find(Outer: UObject, ResourceName: String): SplineGeneratorBase
        fun GetDefaultObject(): SplineGeneratorBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SplineGeneratorBase
        fun C(Other: UObject): SplineGeneratorBase
        fun C(Other: Any): SplineGeneratorBase
    }
}

external open class CircleSplineGenerator : SplineGeneratorBase {
    constructor()
    constructor(Outer: UObject)
    open var NumberOfPoints: Number
    open var Radius: Number
    open var bReverseDir: Boolean
    open var bKeepFirstKeyTangent: Boolean
    open var bBranchRight: Boolean

    companion object {
        fun Load(ResourceName: String): CircleSplineGenerator
        fun Find(Outer: UObject, ResourceName: String): CircleSplineGenerator
        fun GetDefaultObject(): CircleSplineGenerator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CircleSplineGenerator
        fun C(Other: UObject): CircleSplineGenerator
        fun C(Other: Any): CircleSplineGenerator
    }
}

external open class ArcSplineGenerator : SplineGeneratorBase {
    constructor()
    constructor(Outer: UObject)
    open var NumberOfPoints: Number
    open var Radius: Number
    open var Degrees: Number
    open var bReverseDir: Boolean
    open var bKeepFirstKeyTangent: Boolean
    open var bBranchRight: Boolean

    companion object {
        fun Load(ResourceName: String): ArcSplineGenerator
        fun Find(Outer: UObject, ResourceName: String): ArcSplineGenerator
        fun GetDefaultObject(): ArcSplineGenerator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ArcSplineGenerator
        fun C(Other: UObject): ArcSplineGenerator
        fun C(Other: Any): ArcSplineGenerator
    }
}

external open class SquareSplineGenerator : SplineGeneratorBase {
    constructor()
    constructor(Outer: UObject)
    open var Length: Number
    open var bBranchRight: Boolean

    companion object {
        fun Load(ResourceName: String): SquareSplineGenerator
        fun Find(Outer: UObject, ResourceName: String): SquareSplineGenerator
        fun GetDefaultObject(): SquareSplineGenerator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SquareSplineGenerator
        fun C(Other: UObject): SquareSplineGenerator
        fun C(Other: Any): SquareSplineGenerator
    }
}

external open class EllipseSplineGenerator : SplineGeneratorBase {
    constructor()
    constructor(Outer: UObject)
    open var NumberOfPoints: Number
    open var Length: Number
    open var Width: Number
    open var bReverseDir: Boolean
    open var bKeepFirstKeyTangent: Boolean
    open var bBranchRight: Boolean

    companion object {
        fun Load(ResourceName: String): EllipseSplineGenerator
        fun Find(Outer: UObject, ResourceName: String): EllipseSplineGenerator
        fun GetDefaultObject(): EllipseSplineGenerator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EllipseSplineGenerator
        fun C(Other: UObject): EllipseSplineGenerator
        fun C(Other: Any): EllipseSplineGenerator
    }
}

external open class RectangleSplineGenerator : SplineGeneratorBase {
    constructor()
    constructor(Outer: UObject)
    open var Length: Number
    open var Width: Number
    open var bBranchRight: Boolean

    companion object {
        fun Load(ResourceName: String): RectangleSplineGenerator
        fun Find(Outer: UObject, ResourceName: String): RectangleSplineGenerator
        fun GetDefaultObject(): RectangleSplineGenerator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RectangleSplineGenerator
        fun C(Other: UObject): RectangleSplineGenerator
        fun C(Other: Any): RectangleSplineGenerator
    }
}

external open class LineSplineGenerator : SplineGeneratorBase {
    constructor()
    constructor(Outer: UObject)
    open var NumberOfPoints: Number
    open var Length: Number
    open var bEnableUpToNextPoint: Boolean
    open var bUpToNextPoint: Boolean

    companion object {
        fun Load(ResourceName: String): LineSplineGenerator
        fun Find(Outer: UObject, ResourceName: String): LineSplineGenerator
        fun GetDefaultObject(): LineSplineGenerator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LineSplineGenerator
        fun C(Other: UObject): LineSplineGenerator
        fun C(Other: Any): LineSplineGenerator
    }
}

external open class GameplayTaskOwnerInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GameplayTaskOwnerInterface
        fun Find(Outer: UObject, ResourceName: String): GameplayTaskOwnerInterface
        fun GetDefaultObject(): GameplayTaskOwnerInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayTaskOwnerInterface
        fun C(Other: UObject): GameplayTaskOwnerInterface
        fun C(Other: Any): GameplayTaskOwnerInterface
    }
}

external open class GameplayTask_ClaimResource : GameplayTask {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GameplayTask_ClaimResource
        fun Find(Outer: UObject, ResourceName: String): GameplayTask_ClaimResource
        fun GetDefaultObject(): GameplayTask_ClaimResource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayTask_ClaimResource
        fun C(Other: UObject): GameplayTask_ClaimResource
        fun C(Other: Any): GameplayTask_ClaimResource
    }
}

external interface `T$573` {
    var SpawnedActor: Actor
    var `$`: Boolean
}

external open class GameplayTask_SpawnActor : GameplayTask {
    constructor()
    constructor(Outer: UObject)
    open var Success: UnrealEngineMulticastDelegate<(SpawnedActor: Actor) -> Unit>
    open var DidNotSpawn: UnrealEngineMulticastDelegate<(SpawnedActor: Actor) -> Unit>
    open var ClassToSpawn: UnrealEngineClass
    open fun FinishSpawningActor(WorldContextObject: UObject, SpawnedActor: Actor)
    open fun BeginSpawningActor(WorldContextObject: UObject, SpawnedActor: Actor = definedExternally): `T$573`

    companion object {
        fun Load(ResourceName: String): GameplayTask_SpawnActor
        fun Find(Outer: UObject, ResourceName: String): GameplayTask_SpawnActor
        fun GetDefaultObject(): GameplayTask_SpawnActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayTask_SpawnActor
        fun C(Other: UObject): GameplayTask_SpawnActor
        fun C(Other: Any): GameplayTask_SpawnActor
    }
}

external open class GameplayTask_TimeLimitedExecution : GameplayTask {
    constructor()
    constructor(Outer: UObject)
    open var OnFinished: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnTimeExpired: UnrealEngineMulticastDelegate<() -> Unit>

    companion object {
        fun Load(ResourceName: String): GameplayTask_TimeLimitedExecution
        fun Find(Outer: UObject, ResourceName: String): GameplayTask_TimeLimitedExecution
        fun GetDefaultObject(): GameplayTask_TimeLimitedExecution
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayTask_TimeLimitedExecution
        fun C(Other: UObject): GameplayTask_TimeLimitedExecution
        fun C(Other: Any): GameplayTask_TimeLimitedExecution
    }
}

external open class GameplayTask_WaitDelay : GameplayTask {
    constructor()
    constructor(Outer: UObject)
    open var OnFinish: UnrealEngineMulticastDelegate<() -> Unit>

    companion object {
        fun Load(ResourceName: String): GameplayTask_WaitDelay
        fun Find(Outer: UObject, ResourceName: String): GameplayTask_WaitDelay
        fun GetDefaultObject(): GameplayTask_WaitDelay
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayTask_WaitDelay
        fun C(Other: UObject): GameplayTask_WaitDelay
        fun C(Other: Any): GameplayTask_WaitDelay
    }
}

external interface `T$574` {
    var OutActors: Array<Actor>
}

external interface `T$575` {
    var GameplayTags: Array<GameplayTag>
}

external open class BlueprintGameplayTagLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlueprintGameplayTagLibrary
        fun Find(Outer: UObject, ResourceName: String): BlueprintGameplayTagLibrary
        fun GetDefaultObject(): BlueprintGameplayTagLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintGameplayTagLibrary
        fun RemoveGameplayTag(TagContainer: GameplayTagContainer = definedExternally, Tag: GameplayTag = definedExternally): `T$308`
        fun NotEqual_TagTag(A: GameplayTag, B: String): Boolean
        fun NotEqual_TagContainerTagContainer(A: GameplayTagContainer, B: String): Boolean
        fun NotEqual_GameplayTagContainer(A: GameplayTagContainer, B: GameplayTagContainer): Boolean
        fun NotEqual_GameplayTag(A: GameplayTag, B: GameplayTag): Boolean
        fun MatchesTag(TagOne: GameplayTag, TagTwo: GameplayTag, bExactMatch: Boolean): Boolean
        fun MatchesAnyTags(TagOne: GameplayTag, OtherContainer: GameplayTagContainer, bExactMatch: Boolean): Boolean
        fun MakeLiteralGameplayTagContainer(Value: GameplayTagContainer): GameplayTagContainer
        fun MakeLiteralGameplayTag(Value: GameplayTag): GameplayTag
        fun MakeGameplayTagQuery(TagQuery: GameplayTagQuery): GameplayTagQuery
        fun MakeGameplayTagContainerFromTag(SingleTag: GameplayTag): GameplayTagContainer
        fun MakeGameplayTagContainerFromArray(GameplayTags: Array<GameplayTag>): GameplayTagContainer
        fun IsTagQueryEmpty(TagQuery: GameplayTagQuery): Boolean
        fun IsGameplayTagValid(GameplayTag: GameplayTag): Boolean
        fun HasTag(TagContainer: GameplayTagContainer, Tag: GameplayTag, bExactMatch: Boolean): Boolean
        fun HasAnyTags(TagContainer: GameplayTagContainer, OtherContainer: GameplayTagContainer, bExactMatch: Boolean): Boolean
        fun HasAllTags(TagContainer: GameplayTagContainer, OtherContainer: GameplayTagContainer, bExactMatch: Boolean): Boolean
        fun GetTagName(GameplayTag: GameplayTag): String
        fun GetNumGameplayTagsInContainer(TagContainer: GameplayTagContainer): Number
        fun GetDebugStringFromGameplayTagContainer(TagContainer: GameplayTagContainer): String
        fun GetDebugStringFromGameplayTag(GameplayTag: GameplayTag): String
        fun GetAllActorsOfClassMatchingTagQuery(WorldContextObject: UObject, ActorClass: UnrealEngineClass, GameplayTagQuery: GameplayTagQuery, OutActors: Array<Actor> = definedExternally): `T$574`
        fun EqualEqual_GameplayTagContainer(A: GameplayTagContainer, B: GameplayTagContainer): Boolean
        fun EqualEqual_GameplayTag(A: GameplayTag, B: GameplayTag): Boolean
        fun DoesContainerMatchTagQuery(TagContainer: GameplayTagContainer, TagQuery: GameplayTagQuery): Boolean
        fun BreakGameplayTagContainer(GameplayTagContainer: GameplayTagContainer, GameplayTags: Array<GameplayTag> = definedExternally): `T$575`
        fun AppendGameplayTagContainers(InOutTagContainer: GameplayTagContainer = definedExternally, InTagContainer: GameplayTagContainer = definedExternally): `T$306`
        fun AddGameplayTag(TagContainer: GameplayTagContainer = definedExternally, Tag: GameplayTag = definedExternally): `T$305`
        fun C(Other: UObject): BlueprintGameplayTagLibrary
        fun C(Other: Any): BlueprintGameplayTagLibrary
    }
}

external open class GameplayTagAssetInterface : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun HasMatchingGameplayTag(TagToCheck: GameplayTag): Boolean
    open fun HasAnyMatchingGameplayTags(TagContainer: GameplayTagContainer): Boolean
    open fun HasAllMatchingGameplayTags(TagContainer: GameplayTagContainer): Boolean
    open fun GetOwnedGameplayTags(TagContainer: GameplayTagContainer = definedExternally): `T$305`

    companion object {
        fun Load(ResourceName: String): GameplayTagAssetInterface
        fun Find(Outer: UObject, ResourceName: String): GameplayTagAssetInterface
        fun GetDefaultObject(): GameplayTagAssetInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayTagAssetInterface
        fun C(Other: UObject): GameplayTagAssetInterface
        fun C(Other: Any): GameplayTagAssetInterface
    }
}

external open class EditableGameplayTagQueryExpression : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EditableGameplayTagQueryExpression
        fun Find(Outer: UObject, ResourceName: String): EditableGameplayTagQueryExpression
        fun GetDefaultObject(): EditableGameplayTagQueryExpression
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditableGameplayTagQueryExpression
        fun C(Other: UObject): EditableGameplayTagQueryExpression
        fun C(Other: Any): EditableGameplayTagQueryExpression
    }
}

external open class EditableGameplayTagQuery : UObject {
    constructor()
    constructor(Outer: UObject)
    open var UserDescription: String
    open var RootExpression: EditableGameplayTagQueryExpression
    open var TagQueryExportText_Helper: GameplayTagQuery

    companion object {
        fun Load(ResourceName: String): EditableGameplayTagQuery
        fun Find(Outer: UObject, ResourceName: String): EditableGameplayTagQuery
        fun GetDefaultObject(): EditableGameplayTagQuery
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditableGameplayTagQuery
        fun C(Other: UObject): EditableGameplayTagQuery
        fun C(Other: Any): EditableGameplayTagQuery
    }
}

external open class EditableGameplayTagQueryExpression_AnyTagsMatch : EditableGameplayTagQueryExpression {
    constructor()
    constructor(Outer: UObject)
    open var Tags: GameplayTagContainer

    companion object {
        fun Load(ResourceName: String): EditableGameplayTagQueryExpression_AnyTagsMatch
        fun Find(Outer: UObject, ResourceName: String): EditableGameplayTagQueryExpression_AnyTagsMatch
        fun GetDefaultObject(): EditableGameplayTagQueryExpression_AnyTagsMatch
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditableGameplayTagQueryExpression_AnyTagsMatch
        fun C(Other: UObject): EditableGameplayTagQueryExpression_AnyTagsMatch
        fun C(Other: Any): EditableGameplayTagQueryExpression_AnyTagsMatch
    }
}

external open class EditableGameplayTagQueryExpression_AllTagsMatch : EditableGameplayTagQueryExpression {
    constructor()
    constructor(Outer: UObject)
    open var Tags: GameplayTagContainer

    companion object {
        fun Load(ResourceName: String): EditableGameplayTagQueryExpression_AllTagsMatch
        fun Find(Outer: UObject, ResourceName: String): EditableGameplayTagQueryExpression_AllTagsMatch
        fun GetDefaultObject(): EditableGameplayTagQueryExpression_AllTagsMatch
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditableGameplayTagQueryExpression_AllTagsMatch
        fun C(Other: UObject): EditableGameplayTagQueryExpression_AllTagsMatch
        fun C(Other: Any): EditableGameplayTagQueryExpression_AllTagsMatch
    }
}

external open class EditableGameplayTagQueryExpression_NoTagsMatch : EditableGameplayTagQueryExpression {
    constructor()
    constructor(Outer: UObject)
    open var Tags: GameplayTagContainer

    companion object {
        fun Load(ResourceName: String): EditableGameplayTagQueryExpression_NoTagsMatch
        fun Find(Outer: UObject, ResourceName: String): EditableGameplayTagQueryExpression_NoTagsMatch
        fun GetDefaultObject(): EditableGameplayTagQueryExpression_NoTagsMatch
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditableGameplayTagQueryExpression_NoTagsMatch
        fun C(Other: UObject): EditableGameplayTagQueryExpression_NoTagsMatch
        fun C(Other: Any): EditableGameplayTagQueryExpression_NoTagsMatch
    }
}

external open class EditableGameplayTagQueryExpression_AnyExprMatch : EditableGameplayTagQueryExpression {
    constructor()
    constructor(Outer: UObject)
    open var Expressions: Array<EditableGameplayTagQueryExpression>

    companion object {
        fun Load(ResourceName: String): EditableGameplayTagQueryExpression_AnyExprMatch
        fun Find(Outer: UObject, ResourceName: String): EditableGameplayTagQueryExpression_AnyExprMatch
        fun GetDefaultObject(): EditableGameplayTagQueryExpression_AnyExprMatch
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditableGameplayTagQueryExpression_AnyExprMatch
        fun C(Other: UObject): EditableGameplayTagQueryExpression_AnyExprMatch
        fun C(Other: Any): EditableGameplayTagQueryExpression_AnyExprMatch
    }
}

external open class EditableGameplayTagQueryExpression_AllExprMatch : EditableGameplayTagQueryExpression {
    constructor()
    constructor(Outer: UObject)
    open var Expressions: Array<EditableGameplayTagQueryExpression>

    companion object {
        fun Load(ResourceName: String): EditableGameplayTagQueryExpression_AllExprMatch
        fun Find(Outer: UObject, ResourceName: String): EditableGameplayTagQueryExpression_AllExprMatch
        fun GetDefaultObject(): EditableGameplayTagQueryExpression_AllExprMatch
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditableGameplayTagQueryExpression_AllExprMatch
        fun C(Other: UObject): EditableGameplayTagQueryExpression_AllExprMatch
        fun C(Other: Any): EditableGameplayTagQueryExpression_AllExprMatch
    }
}

external open class EditableGameplayTagQueryExpression_NoExprMatch : EditableGameplayTagQueryExpression {
    constructor()
    constructor(Outer: UObject)
    open var Expressions: Array<EditableGameplayTagQueryExpression>

    companion object {
        fun Load(ResourceName: String): EditableGameplayTagQueryExpression_NoExprMatch
        fun Find(Outer: UObject, ResourceName: String): EditableGameplayTagQueryExpression_NoExprMatch
        fun GetDefaultObject(): EditableGameplayTagQueryExpression_NoExprMatch
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditableGameplayTagQueryExpression_NoExprMatch
        fun C(Other: UObject): EditableGameplayTagQueryExpression_NoExprMatch
        fun C(Other: Any): EditableGameplayTagQueryExpression_NoExprMatch
    }
}

external open class GameplayTagsManager : UObject {
    constructor()
    constructor(Outer: UObject)
    open var TagSources: Any
    open var GameplayTagTables: Array<DataTable>

    companion object {
        fun Load(ResourceName: String): GameplayTagsManager
        fun Find(Outer: UObject, ResourceName: String): GameplayTagsManager
        fun GetDefaultObject(): GameplayTagsManager
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayTagsManager
        fun C(Other: UObject): GameplayTagsManager
        fun C(Other: Any): GameplayTagsManager
    }
}

external open class GameplayTagTableRow : TableRowBase {
    open var Tag: String
    open var DevComment: String
    override fun clone(): GameplayTagTableRow

    companion object {
        fun C(Other: UObject): GameplayTagTableRow
        fun C(Other: Any): GameplayTagTableRow
    }
}

external open class GameplayTagsList : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ConfigFileName: String
    open var GameplayTagList: Array<GameplayTagTableRow>

    companion object {
        fun Load(ResourceName: String): GameplayTagsList
        fun Find(Outer: UObject, ResourceName: String): GameplayTagsList
        fun GetDefaultObject(): GameplayTagsList
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayTagsList
        fun C(Other: UObject): GameplayTagsList
        fun C(Other: Any): GameplayTagsList
    }
}

external open class RestrictedGameplayTagTableRow : GameplayTagTableRow {
    open var bAllowNonRestrictedChildren: Boolean
    override fun clone(): RestrictedGameplayTagTableRow

    companion object {
        fun C(Other: UObject): RestrictedGameplayTagTableRow
        fun C(Other: Any): RestrictedGameplayTagTableRow
    }
}

external open class RestrictedGameplayTagsList : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ConfigFileName: String
    open var RestrictedGameplayTagList: Array<RestrictedGameplayTagTableRow>

    companion object {
        fun Load(ResourceName: String): RestrictedGameplayTagsList
        fun Find(Outer: UObject, ResourceName: String): RestrictedGameplayTagsList
        fun GetDefaultObject(): RestrictedGameplayTagsList
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RestrictedGameplayTagsList
        fun C(Other: UObject): RestrictedGameplayTagsList
        fun C(Other: Any): RestrictedGameplayTagsList
    }
}

external open class GameplayTagCategoryRemap {
    open var BaseCategory: String
    open var RemapCategories: Array<String>
    open fun clone(): GameplayTagCategoryRemap

    companion object {
        fun C(Other: UObject): GameplayTagCategoryRemap
        fun C(Other: Any): GameplayTagCategoryRemap
    }
}

external open class GameplayTagRedirect {
    open var OldTagName: String
    open var NewTagName: String
    open fun clone(): GameplayTagRedirect

    companion object {
        fun C(Other: UObject): GameplayTagRedirect
        fun C(Other: Any): GameplayTagRedirect
    }
}

external open class RestrictedConfigInfo {
    open var RestrictedConfigName: String
    open var Owners: Array<String>
    open fun clone(): RestrictedConfigInfo

    companion object {
        fun C(Other: UObject): RestrictedConfigInfo
        fun C(Other: Any): RestrictedConfigInfo
    }
}

external open class GameplayTagsSettings : GameplayTagsList {
    constructor()
    constructor(Outer: UObject)
    open var ImportTagsFromConfig: Boolean
    open var WarnOnInvalidTags: Boolean
    open var ClearInvalidTags: Boolean
    open var FastReplication: Boolean
    open var InvalidTagCharacters: String
    open var CategoryRemapping: Array<GameplayTagCategoryRemap>
    open var GameplayTagTableList: Array<SoftObjectPath>
    open var GameplayTagRedirects: Array<GameplayTagRedirect>
    open var CommonlyReplicatedTags: Array<String>
    open var NumBitsForContainerSize: Number
    open var NetIndexFirstBitSegment: Number
    open var RestrictedConfigFiles: Array<RestrictedConfigInfo>
    open var RestrictedTagList: String

    companion object {
        fun Load(ResourceName: String): GameplayTagsSettings
        fun Find(Outer: UObject, ResourceName: String): GameplayTagsSettings
        fun GetDefaultObject(): GameplayTagsSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayTagsSettings
        fun C(Other: UObject): GameplayTagsSettings
        fun C(Other: Any): GameplayTagsSettings
    }
}

external open class GameplayTagsDeveloperSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var DeveloperConfigName: String
    open var FavoriteTagSource: String

    companion object {
        fun Load(ResourceName: String): GameplayTagsDeveloperSettings
        fun Find(Outer: UObject, ResourceName: String): GameplayTagsDeveloperSettings
        fun GetDefaultObject(): GameplayTagsDeveloperSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayTagsDeveloperSettings
        fun C(Other: UObject): GameplayTagsDeveloperSettings
        fun C(Other: Any): GameplayTagsDeveloperSettings
    }
}

external open class GameplayDebuggerNetPack {
    open fun clone(): GameplayDebuggerNetPack

    companion object {
        fun C(Other: UObject): GameplayDebuggerNetPack
        fun C(Other: Any): GameplayDebuggerNetPack
    }
}

external open class GameplayDebuggerDebugActor {
    open var ActorName: String
    open var SyncCounter: Number
    open fun clone(): GameplayDebuggerDebugActor

    companion object {
        fun C(Other: UObject): GameplayDebuggerDebugActor
        fun C(Other: Any): GameplayDebuggerDebugActor
    }
}

external open class GameplayDebuggerVisLogSync {
    open var DeviceIDs: String
    open fun clone(): GameplayDebuggerVisLogSync

    companion object {
        fun C(Other: UObject): GameplayDebuggerVisLogSync
        fun C(Other: Any): GameplayDebuggerVisLogSync
    }
}

external open class DebugDrawComponent : PrimitiveComponent {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DebugDrawComponent
        fun Find(Outer: UObject, ResourceName: String): DebugDrawComponent
        fun GetDefaultObject(): DebugDrawComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DebugDrawComponent
        fun C(Other: UObject): DebugDrawComponent
        fun C(Other: Any): DebugDrawComponent
    }
}

external open class GameplayDebuggerRenderingComponent : DebugDrawComponent {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GameplayDebuggerRenderingComponent
        fun Find(Outer: UObject, ResourceName: String): GameplayDebuggerRenderingComponent
        fun GetDefaultObject(): GameplayDebuggerRenderingComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayDebuggerRenderingComponent
        fun C(Other: UObject): GameplayDebuggerRenderingComponent
        fun C(Other: Any): GameplayDebuggerRenderingComponent
    }
}

external open class GameplayDebuggerCategoryReplicator(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var OwnerPC: PlayerController
    open var bIsEnabled: Boolean
    open var ReplicatedData: GameplayDebuggerNetPack
    open var DebugActor: GameplayDebuggerDebugActor
    open var VisLogSync: GameplayDebuggerVisLogSync
    open var RenderingComp: GameplayDebuggerRenderingComponent
    open fun ServerSetViewPoint(InViewLocation: Vector, InViewDirection: Vector)
    open fun ServerSetEnabled(bEnable: Boolean)
    open fun ServerSetDebugActor(Actor: Actor, bSelectInEditor: Boolean)
    open fun ServerSetCategoryEnabled(CategoryId: Number, bEnable: Boolean)
    open fun ServerSendExtensionInputEvent(ExtensionId: Number, HandlerId: Number)
    open fun ServerSendCategoryInputEvent(CategoryId: Number, HandlerId: Number)

    companion object {
        fun GetDefaultObject(): GameplayDebuggerCategoryReplicator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayDebuggerCategoryReplicator
        fun C(Other: UObject): GameplayDebuggerCategoryReplicator
        fun C(Other: Any): GameplayDebuggerCategoryReplicator
    }
}

external object EGameplayDebuggerOverrideMode {
    var Enable: String /* "Enable" */
    var Disable: String /* "Disable" */
    var UseDefault: String /* "UseDefault" */
    var EGameplayDebuggerOverrideMode_MAX: String /* "EGameplayDebuggerOverrideMode_MAX" */
}

external open class GameplayDebuggerInputConfig {
    open var ConfigName: String
    open var Key: Key
    open var bModShift: Boolean
    open var bModCtrl: Boolean
    open var bModAlt: Boolean
    open var bModCmd: Boolean
    open fun clone(): GameplayDebuggerInputConfig

    companion object {
        fun C(Other: UObject): GameplayDebuggerInputConfig
        fun C(Other: Any): GameplayDebuggerInputConfig
    }
}

external open class GameplayDebuggerCategoryConfig {
    open var CategoryName: String
    open var SlotIdx: Number
    open var ActiveInGame: String /* "Enable" | "Disable" | "UseDefault" | "EGameplayDebuggerOverrideMode_MAX" */
    open var ActiveInSimulate: String /* "Enable" | "Disable" | "UseDefault" | "EGameplayDebuggerOverrideMode_MAX" */
    open var Hidden: String /* "Enable" | "Disable" | "UseDefault" | "EGameplayDebuggerOverrideMode_MAX" */
    open var bOverrideSlotIdx: Boolean
    open var InputHandlers: Array<GameplayDebuggerInputConfig>
    open fun clone(): GameplayDebuggerCategoryConfig

    companion object {
        fun C(Other: UObject): GameplayDebuggerCategoryConfig
        fun C(Other: Any): GameplayDebuggerCategoryConfig
    }
}

external open class GameplayDebuggerExtensionConfig {
    open var ExtensionName: String
    open var UseExtension: String /* "Enable" | "Disable" | "UseDefault" | "EGameplayDebuggerOverrideMode_MAX" */
    open var InputHandlers: Array<GameplayDebuggerInputConfig>
    open fun clone(): GameplayDebuggerExtensionConfig

    companion object {
        fun C(Other: UObject): GameplayDebuggerExtensionConfig
        fun C(Other: Any): GameplayDebuggerExtensionConfig
    }
}

external open class GameplayDebuggerConfig : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ActivationKey: Key
    open var CategoryRowNextKey: Key
    open var CategoryRowPrevKey: Key
    open var CategorySlot0: Key
    open var CategorySlot1: Key
    open var CategorySlot2: Key
    open var CategorySlot3: Key
    open var CategorySlot4: Key
    open var CategorySlot5: Key
    open var CategorySlot6: Key
    open var CategorySlot7: Key
    open var CategorySlot8: Key
    open var CategorySlot9: Key
    open var DebugCanvasPaddingLeft: Number
    open var DebugCanvasPaddingRight: Number
    open var DebugCanvasPaddingTop: Number
    open var DebugCanvasPaddingBottom: Number
    open var bDebugCanvasEnableTextShadow: Boolean
    open var Categories: Array<GameplayDebuggerCategoryConfig>
    open var Extensions: Array<GameplayDebuggerExtensionConfig>

    companion object {
        fun Load(ResourceName: String): GameplayDebuggerConfig
        fun Find(Outer: UObject, ResourceName: String): GameplayDebuggerConfig
        fun GetDefaultObject(): GameplayDebuggerConfig
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayDebuggerConfig
        fun C(Other: UObject): GameplayDebuggerConfig
        fun C(Other: Any): GameplayDebuggerConfig
    }
}

external open class GameplayDebuggerUserSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var bEnableGameplayDebuggerInEditor: Boolean
    open var MaxViewDistance: Number
    open var MaxViewAngle: Number
    open var FontSize: Number

    companion object {
        fun Load(ResourceName: String): GameplayDebuggerUserSettings
        fun Find(Outer: UObject, ResourceName: String): GameplayDebuggerUserSettings
        fun GetDefaultObject(): GameplayDebuggerUserSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayDebuggerUserSettings
        fun C(Other: UObject): GameplayDebuggerUserSettings
        fun C(Other: Any): GameplayDebuggerUserSettings
    }
}

external open class GameplayDebuggerPlayerData {
    open var Controller: GameplayDebuggerLocalController
    open var InputComponent: InputComponent
    open var Replicator: GameplayDebuggerCategoryReplicator
    open fun clone(): GameplayDebuggerPlayerData

    companion object {
        fun C(Other: UObject): GameplayDebuggerPlayerData
        fun C(Other: Any): GameplayDebuggerPlayerData
    }
}

external open class GameplayDebuggerPlayerManager(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var PlayerData: Array<GameplayDebuggerPlayerData>
    open var PendingRegistrations: Array<GameplayDebuggerCategoryReplicator>
    open var EditorWorldData: GameplayDebuggerPlayerData

    companion object {
        fun GetDefaultObject(): GameplayDebuggerPlayerManager
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayDebuggerPlayerManager
        fun C(Other: UObject): GameplayDebuggerPlayerManager
        fun C(Other: Any): GameplayDebuggerPlayerManager
    }
}

external open class GameplayDebuggerLocalController : UObject {
    constructor()
    constructor(Outer: UObject)
    open var CachedReplicator: GameplayDebuggerCategoryReplicator
    open var CachedPlayerManager: GameplayDebuggerPlayerManager
    open var DebugActorCandidate: Actor
    open var HUDFont: Font

    companion object {
        fun Load(ResourceName: String): GameplayDebuggerLocalController
        fun Find(Outer: UObject, ResourceName: String): GameplayDebuggerLocalController
        fun GetDefaultObject(): GameplayDebuggerLocalController
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayDebuggerLocalController
        fun C(Other: UObject): GameplayDebuggerLocalController
        fun C(Other: Any): GameplayDebuggerLocalController
    }
}

external open class AIBlueprintHelperLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AIBlueprintHelperLibrary
        fun Find(Outer: UObject, ResourceName: String): AIBlueprintHelperLibrary
        fun GetDefaultObject(): AIBlueprintHelperLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AIBlueprintHelperLibrary
        fun UnlockAIResourcesWithAnimation(AnimInstance: AnimInstance, bUnlockMovement: Boolean, UnlockAILogic: Boolean)
        fun SpawnAIFromClass(WorldContextObject: UObject, PawnClass: UnrealEngineClass, BehaviorTree: BehaviorTree, Location: Vector, Rotation: Rotator, bNoCollisionFail: Boolean, Owner: Actor): Pawn
        fun SimpleMoveToLocation(Controller: Controller, Goal: Vector)
        fun SimpleMoveToActor(Controller: Controller, Goal: Actor)
        fun SendAIMessage(Target: Pawn, Message: String, MessageSource: UObject, bSuccess: Boolean)
        fun LockAIResourcesWithAnimation(AnimInstance: AnimInstance, bLockMovement: Boolean, LockAILogic: Boolean)
        fun IsValidAIRotation(Rotation: Rotator): Boolean
        fun IsValidAILocation(Location: Vector): Boolean
        fun IsValidAIDirection(DirectionVector: Vector): Boolean
        fun GetNextNavLinkIndex(Controller: Controller): Number
        fun GetCurrentPathPoints(Controller: Controller): Array<Vector>
        fun GetCurrentPathIndex(Controller: Controller): Number
        fun GetCurrentPath(Controller: Controller): NavigationPath
        fun GetBlackboard(Target: Actor): BlackboardComponent
        fun GetAIController(ControlledActor: Actor): AIController
        fun CreateMoveToProxyObject(WorldContextObject: UObject, Pawn: Pawn, Destination: Vector, TargetActor: Actor, AcceptanceRadius: Number, bStopOnOverlap: Boolean): AIAsyncTaskBlueprintProxy
        fun C(Other: UObject): AIBlueprintHelperLibrary
        fun C(Other: Any): AIBlueprintHelperLibrary
    }
}

external open class AIDataProvider_QueryParams : AIDataProvider {
    constructor()
    constructor(Outer: UObject)
    open var ParamName: String
    open var FloatValue: Number
    open var IntValue: Number
    open var BoolValue: Boolean

    companion object {
        fun Load(ResourceName: String): AIDataProvider_QueryParams
        fun Find(Outer: UObject, ResourceName: String): AIDataProvider_QueryParams
        fun GetDefaultObject(): AIDataProvider_QueryParams
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AIDataProvider_QueryParams
        fun C(Other: UObject): AIDataProvider_QueryParams
        fun C(Other: Any): AIDataProvider_QueryParams
    }
}

external open class AIDataProvider_Random : AIDataProvider_QueryParams {
    constructor()
    constructor(Outer: UObject)
    open var Min: Number
    open var Max: Number
    open var bInteger: Boolean

    companion object {
        fun Load(ResourceName: String): AIDataProvider_Random
        fun Find(Outer: UObject, ResourceName: String): AIDataProvider_Random
        fun GetDefaultObject(): AIDataProvider_Random
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AIDataProvider_Random
        fun C(Other: UObject): AIDataProvider_Random
        fun C(Other: Any): AIDataProvider_Random
    }
}

external open class AIPerceptionListenerInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AIPerceptionListenerInterface
        fun Find(Outer: UObject, ResourceName: String): AIPerceptionListenerInterface
        fun GetDefaultObject(): AIPerceptionListenerInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AIPerceptionListenerInterface
        fun C(Other: UObject): AIPerceptionListenerInterface
        fun C(Other: Any): AIPerceptionListenerInterface
    }
}

external open class AIPerceptionStimuliSourceComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var bAutoRegisterAsSource: Boolean
    open var RegisterAsSourceForSenses: Array<UnrealEngineClass>
    open fun UnregisterFromSense(SenseClass: UnrealEngineClass)
    open fun UnregisterFromPerceptionSystem()
    open fun RegisterWithPerceptionSystem()
    open fun RegisterForSense(SenseClass: UnrealEngineClass)

    companion object {
        fun Load(ResourceName: String): AIPerceptionStimuliSourceComponent
        fun Find(Outer: UObject, ResourceName: String): AIPerceptionStimuliSourceComponent
        fun GetDefaultObject(): AIPerceptionStimuliSourceComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AIPerceptionStimuliSourceComponent
        fun C(Other: UObject): AIPerceptionStimuliSourceComponent
        fun C(Other: Any): AIPerceptionStimuliSourceComponent
    }
}

external open class AIResourceInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AIResourceInterface
        fun Find(Outer: UObject, ResourceName: String): AIResourceInterface
        fun GetDefaultObject(): AIResourceInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AIResourceInterface
        fun C(Other: UObject): AIResourceInterface
        fun C(Other: Any): AIResourceInterface
    }
}

external open class AIResource_Movement : GameplayTaskResource {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AIResource_Movement
        fun Find(Outer: UObject, ResourceName: String): AIResource_Movement
        fun GetDefaultObject(): AIResource_Movement
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AIResource_Movement
        fun C(Other: UObject): AIResource_Movement
        fun C(Other: Any): AIResource_Movement
    }
}

external open class AIResource_Logic : GameplayTaskResource {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AIResource_Logic
        fun Find(Outer: UObject, ResourceName: String): AIResource_Logic
        fun GetDefaultObject(): AIResource_Logic
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AIResource_Logic
        fun C(Other: UObject): AIResource_Logic
        fun C(Other: Any): AIResource_Logic
    }
}

external object EUserDefinedStructureStatus {
    var UDSS_UpToDate: String /* "UDSS_UpToDate" */
    var UDSS_Dirty: String /* "UDSS_Dirty" */
    var UDSS_Error: String /* "UDSS_Error" */
    var UDSS_Duplicate: String /* "UDSS_Duplicate" */
    var UDSS_MAX: String /* "UDSS_MAX" */
}

external open class UserDefinedStruct : ScriptStruct {
    constructor()
    constructor(Outer: UObject)
    open var PrimaryStruct: Any
    open var ErrorMessage: String
    open var EditorData: UObject
    open var Status: String /* "UDSS_UpToDate" | "UDSS_Dirty" | "UDSS_Error" | "UDSS_Duplicate" | "UDSS_MAX" */
    open var Guid: Guid

    companion object {
        fun Load(ResourceName: String): UserDefinedStruct
        fun Find(Outer: UObject, ResourceName: String): UserDefinedStruct
        fun GetDefaultObject(): UserDefinedStruct
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UserDefinedStruct
        fun C(Other: UObject): UserDefinedStruct
        fun C(Other: Any): UserDefinedStruct
    }
}

external open class AISenseBlueprintListener : UserDefinedStruct {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AISenseBlueprintListener
        fun Find(Outer: UObject, ResourceName: String): AISenseBlueprintListener
        fun GetDefaultObject(): AISenseBlueprintListener
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISenseBlueprintListener
        fun C(Other: UObject): AISenseBlueprintListener
        fun C(Other: Any): AISenseBlueprintListener
    }
}

external interface `T$576` {
    var ListenerComponents: Array<AIPerceptionComponent>
}

external interface `T$577` {
    var ListenerActors: Array<Actor>
}

external open class AISense_Blueprint : AISense {
    constructor()
    constructor(Outer: UObject)
    open var ListenerDataType: UnrealEngineClass
    open var ListenerContainer: Array<AIPerceptionComponent>
    open var UnprocessedEvents: Array<AISenseEvent>
    open fun OnUpdate(EventsToProcess: Array<AISenseEvent>): Number
    open fun OnListenerUpdated(ActorListener: Actor, PerceptionComponent: AIPerceptionComponent)
    open fun OnListenerUnregistered(ActorListener: Actor, PerceptionComponent: AIPerceptionComponent)
    open fun OnListenerRegistered(ActorListener: Actor, PerceptionComponent: AIPerceptionComponent)
    open fun OnNewPawn(NewPawn: Pawn)
    open fun GetAllListenerComponents(ListenerComponents: Array<AIPerceptionComponent> = definedExternally): `T$576`
    open fun GetAllListenerActors(ListenerActors: Array<Actor> = definedExternally): `T$577`

    companion object {
        fun Load(ResourceName: String): AISense_Blueprint
        fun Find(Outer: UObject, ResourceName: String): AISense_Blueprint
        fun GetDefaultObject(): AISense_Blueprint
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISense_Blueprint
        fun C(Other: UObject): AISense_Blueprint
        fun C(Other: Any): AISense_Blueprint
    }
}

external open class AISenseConfig_Blueprint : AISenseConfig {
    constructor()
    constructor(Outer: UObject)
    open var Implementation: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): AISenseConfig_Blueprint
        fun Find(Outer: UObject, ResourceName: String): AISenseConfig_Blueprint
        fun GetDefaultObject(): AISenseConfig_Blueprint
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISenseConfig_Blueprint
        fun C(Other: UObject): AISenseConfig_Blueprint
        fun C(Other: Any): AISenseConfig_Blueprint
    }
}

external open class AIDamageEvent {
    open var Amount: Number
    open var Location: Vector
    open var HitLocation: Vector
    open var DamagedActor: Actor
    open var Instigator: Actor
    open var Tag: String
    open fun clone(): AIDamageEvent

    companion object {
        fun C(Other: UObject): AIDamageEvent
        fun C(Other: Any): AIDamageEvent
    }
}

external open class AISense_Damage : AISense {
    constructor()
    constructor(Outer: UObject)
    open var RegisteredEvents: Array<AIDamageEvent>

    companion object {
        fun Load(ResourceName: String): AISense_Damage
        fun Find(Outer: UObject, ResourceName: String): AISense_Damage
        fun GetDefaultObject(): AISense_Damage
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISense_Damage
        fun ReportDamageEvent(WorldContextObject: UObject, DamagedActor: Actor, Instigator: Actor, DamageAmount: Number, EventLocation: Vector, HitLocation: Vector, Tag: String)
        fun C(Other: UObject): AISense_Damage
        fun C(Other: Any): AISense_Damage
    }
}

external open class AISenseConfig_Damage : AISenseConfig {
    constructor()
    constructor(Outer: UObject)
    open var Implementation: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): AISenseConfig_Damage
        fun Find(Outer: UObject, ResourceName: String): AISenseConfig_Damage
        fun GetDefaultObject(): AISenseConfig_Damage
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISenseConfig_Damage
        fun C(Other: UObject): AISenseConfig_Damage
        fun C(Other: Any): AISenseConfig_Damage
    }
}

external open class AINoiseEvent {
    open var NoiseLocation: Vector
    open var Loudness: Number
    open var MaxRange: Number
    open var Instigator: Actor
    open var Tag: String
    open fun clone(): AINoiseEvent

    companion object {
        fun C(Other: UObject): AINoiseEvent
        fun C(Other: Any): AINoiseEvent
    }
}

external open class AISense_Hearing : AISense {
    constructor()
    constructor(Outer: UObject)
    open var NoiseEvents: Array<AINoiseEvent>
    open var SpeedOfSoundSq: Number

    companion object {
        fun Load(ResourceName: String): AISense_Hearing
        fun Find(Outer: UObject, ResourceName: String): AISense_Hearing
        fun GetDefaultObject(): AISense_Hearing
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISense_Hearing
        fun ReportNoiseEvent(WorldContextObject: UObject, NoiseLocation: Vector, Loudness: Number, Instigator: Actor, MaxRange: Number, Tag: String)
        fun C(Other: UObject): AISense_Hearing
        fun C(Other: Any): AISense_Hearing
    }
}

external open class AISenseAffiliationFilter {
    open var bDetectEnemies: Boolean
    open var bDetectNeutrals: Boolean
    open var bDetectFriendlies: Boolean
    open fun clone(): AISenseAffiliationFilter

    companion object {
        fun C(Other: UObject): AISenseAffiliationFilter
        fun C(Other: Any): AISenseAffiliationFilter
    }
}

external open class AISenseConfig_Hearing : AISenseConfig {
    constructor()
    constructor(Outer: UObject)
    open var Implementation: UnrealEngineClass
    open var HearingRange: Number
    open var LoSHearingRange: Number
    open var bUseLoSHearing: Boolean
    open var DetectionByAffiliation: AISenseAffiliationFilter

    companion object {
        fun Load(ResourceName: String): AISenseConfig_Hearing
        fun Find(Outer: UObject, ResourceName: String): AISenseConfig_Hearing
        fun GetDefaultObject(): AISenseConfig_Hearing
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISenseConfig_Hearing
        fun C(Other: UObject): AISenseConfig_Hearing
        fun C(Other: Any): AISenseConfig_Hearing
    }
}

external open class AISenseConfig_Prediction : AISenseConfig {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AISenseConfig_Prediction
        fun Find(Outer: UObject, ResourceName: String): AISenseConfig_Prediction
        fun GetDefaultObject(): AISenseConfig_Prediction
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISenseConfig_Prediction
        fun C(Other: UObject): AISenseConfig_Prediction
        fun C(Other: Any): AISenseConfig_Prediction
    }
}

external open class AISense_Sight : AISense {
    constructor()
    constructor(Outer: UObject)
    open var MaxTracesPerTick: Number
    open var MinQueriesPerTimeSliceCheck: Number
    open var MaxTimeSlicePerTick: Any
    open var HighImportanceQueryDistanceThreshold: Number
    open var MaxQueryImportance: Number
    open var SightLimitQueryImportance: Number

    companion object {
        fun Load(ResourceName: String): AISense_Sight
        fun Find(Outer: UObject, ResourceName: String): AISense_Sight
        fun GetDefaultObject(): AISense_Sight
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISense_Sight
        fun C(Other: UObject): AISense_Sight
        fun C(Other: Any): AISense_Sight
    }
}

external open class AISenseConfig_Sight : AISenseConfig {
    constructor()
    constructor(Outer: UObject)
    open var Implementation: UnrealEngineClass
    open var SightRadius: Number
    open var LoseSightRadius: Number
    open var PeripheralVisionAngleDegrees: Number
    open var DetectionByAffiliation: AISenseAffiliationFilter
    open var AutoSuccessRangeFromLastSeenLocation: Number
    open var PointOfViewBackwardOffset: Number
    open var NearClippingRadius: Number

    companion object {
        fun Load(ResourceName: String): AISenseConfig_Sight
        fun Find(Outer: UObject, ResourceName: String): AISenseConfig_Sight
        fun GetDefaultObject(): AISenseConfig_Sight
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISenseConfig_Sight
        fun C(Other: UObject): AISenseConfig_Sight
        fun C(Other: Any): AISenseConfig_Sight
    }
}

external open class AISenseConfig_Team : AISenseConfig {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AISenseConfig_Team
        fun Find(Outer: UObject, ResourceName: String): AISenseConfig_Team
        fun GetDefaultObject(): AISenseConfig_Team
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISenseConfig_Team
        fun C(Other: UObject): AISenseConfig_Team
        fun C(Other: Any): AISenseConfig_Team
    }
}

external open class AISenseConfig_Touch : AISenseConfig {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AISenseConfig_Touch
        fun Find(Outer: UObject, ResourceName: String): AISenseConfig_Touch
        fun GetDefaultObject(): AISenseConfig_Touch
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISenseConfig_Touch
        fun C(Other: UObject): AISenseConfig_Touch
        fun C(Other: Any): AISenseConfig_Touch
    }
}

external open class AISenseEvent_Damage : AISenseEvent {
    constructor()
    constructor(Outer: UObject)
    open var Event: AIDamageEvent

    companion object {
        fun Load(ResourceName: String): AISenseEvent_Damage
        fun Find(Outer: UObject, ResourceName: String): AISenseEvent_Damage
        fun GetDefaultObject(): AISenseEvent_Damage
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISenseEvent_Damage
        fun C(Other: UObject): AISenseEvent_Damage
        fun C(Other: Any): AISenseEvent_Damage
    }
}

external open class AISenseEvent_Hearing : AISenseEvent {
    constructor()
    constructor(Outer: UObject)
    open var Event: AINoiseEvent

    companion object {
        fun Load(ResourceName: String): AISenseEvent_Hearing
        fun Find(Outer: UObject, ResourceName: String): AISenseEvent_Hearing
        fun GetDefaultObject(): AISenseEvent_Hearing
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISenseEvent_Hearing
        fun C(Other: UObject): AISenseEvent_Hearing
        fun C(Other: Any): AISenseEvent_Hearing
    }
}

external open class AIPredictionEvent {
    open var Requestor: Actor
    open var PredictedActor: Actor
    open fun clone(): AIPredictionEvent

    companion object {
        fun C(Other: UObject): AIPredictionEvent
        fun C(Other: Any): AIPredictionEvent
    }
}

external open class AISense_Prediction : AISense {
    constructor()
    constructor(Outer: UObject)
    open var RegisteredEvents: Array<AIPredictionEvent>

    companion object {
        fun Load(ResourceName: String): AISense_Prediction
        fun Find(Outer: UObject, ResourceName: String): AISense_Prediction
        fun GetDefaultObject(): AISense_Prediction
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISense_Prediction
        fun RequestPawnPredictionEvent(Requestor: Pawn, PredictedActor: Actor, PredictionTime: Number)
        fun RequestControllerPredictionEvent(Requestor: AIController, PredictedActor: Actor, PredictionTime: Number)
        fun C(Other: UObject): AISense_Prediction
        fun C(Other: Any): AISense_Prediction
    }
}

external open class AITeamStimulusEvent {
    open var Broadcaster: Actor
    open var Enemy: Actor
    open fun clone(): AITeamStimulusEvent

    companion object {
        fun C(Other: UObject): AITeamStimulusEvent
        fun C(Other: Any): AITeamStimulusEvent
    }
}

external open class AISense_Team : AISense {
    constructor()
    constructor(Outer: UObject)
    open var RegisteredEvents: Array<AITeamStimulusEvent>

    companion object {
        fun Load(ResourceName: String): AISense_Team
        fun Find(Outer: UObject, ResourceName: String): AISense_Team
        fun GetDefaultObject(): AISense_Team
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISense_Team
        fun C(Other: UObject): AISense_Team
        fun C(Other: Any): AISense_Team
    }
}

external open class AITouchEvent {
    open var TouchReceiver: Actor
    open var OtherActor: Actor
    open fun clone(): AITouchEvent

    companion object {
        fun C(Other: UObject): AITouchEvent
        fun C(Other: Any): AITouchEvent
    }
}

external open class AISense_Touch : AISense {
    constructor()
    constructor(Outer: UObject)
    open var RegisteredEvents: Array<AITouchEvent>

    companion object {
        fun Load(ResourceName: String): AISense_Touch
        fun Find(Outer: UObject, ResourceName: String): AISense_Touch
        fun GetDefaultObject(): AISense_Touch
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISense_Touch
        fun C(Other: UObject): AISense_Touch
        fun C(Other: Any): AISense_Touch
    }
}

external open class AISightTargetInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AISightTargetInterface
        fun Find(Outer: UObject, ResourceName: String): AISightTargetInterface
        fun GetDefaultObject(): AISightTargetInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AISightTargetInterface
        fun C(Other: UObject): AISightTargetInterface
        fun C(Other: Any): AISightTargetInterface
    }
}

external open class AITask : GameplayTask {
    constructor()
    constructor(Outer: UObject)
    open var OwnerController: AIController

    companion object {
        fun Load(ResourceName: String): AITask
        fun Find(Outer: UObject, ResourceName: String): AITask
        fun GetDefaultObject(): AITask
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AITask
        fun C(Other: UObject): AITask
        fun C(Other: Any): AITask
    }
}

external open class AITask_LockLogic : AITask {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AITask_LockLogic
        fun Find(Outer: UObject, ResourceName: String): AITask_LockLogic
        fun GetDefaultObject(): AITask_LockLogic
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AITask_LockLogic
        fun C(Other: UObject): AITask_LockLogic
        fun C(Other: Any): AITask_LockLogic
    }
}

external open class AIMoveRequest {
    open var GoalActor: Actor
    open fun clone(): AIMoveRequest

    companion object {
        fun C(Other: UObject): AIMoveRequest
        fun C(Other: Any): AIMoveRequest
    }
}

external object EAIOptionFlag {
    var Default: String /* "Default" */
    var Enable: String /* "Enable" */
    var Disable: String /* "Disable" */
    var MAX: String /* "MAX" */
}

external open class AITask_MoveTo : AITask {
    constructor()
    constructor(Outer: UObject)
    open var OnRequestFailed: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnMoveFinished: UnrealEngineMulticastDelegate<(Result: String /* "Success" | "Blocked" | "OffPath" | "Aborted" | "Skipped_DEPRECATED" | "Invalid" | "EPathFollowingResult_MAX" */, AIController: AIController) -> Unit>
    open var MoveRequest: AIMoveRequest

    companion object {
        fun Load(ResourceName: String): AITask_MoveTo
        fun Find(Outer: UObject, ResourceName: String): AITask_MoveTo
        fun GetDefaultObject(): AITask_MoveTo
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AITask_MoveTo
        fun MoveToLocationorActor(Controller: AIController, GoalLocation: Vector, GoalActor: Actor, AcceptanceRadius: Number, StopOnOverlap: String /* "Default" | "Enable" | "Disable" | "MAX" */, AcceptPartialPath: String /* "Default" | "Enable" | "Disable" | "MAX" */, bUsePathfinding: Boolean, bLockAILogic: Boolean, bUseContinuosGoalTracking: Boolean, ProjectGoalOnNavigation: String /* "Default" | "Enable" | "Disable" | "MAX" */): AITask_MoveTo
        fun C(Other: UObject): AITask_MoveTo
        fun C(Other: Any): AITask_MoveTo
    }
}

external open class AITask_RunEQS : AITask {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AITask_RunEQS
        fun Find(Outer: UObject, ResourceName: String): AITask_RunEQS
        fun GetDefaultObject(): AITask_RunEQS
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AITask_RunEQS
        fun RunEQS(Controller: AIController, QueryTemplate: EnvQuery): AITask_RunEQS
        fun C(Other: UObject): AITask_RunEQS
        fun C(Other: Any): AITask_RunEQS
    }
}

external open class BehaviorTreeTypes : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BehaviorTreeTypes
        fun Find(Outer: UObject, ResourceName: String): BehaviorTreeTypes
        fun GetDefaultObject(): BehaviorTreeTypes
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BehaviorTreeTypes
        fun C(Other: UObject): BehaviorTreeTypes
        fun C(Other: Any): BehaviorTreeTypes
    }
}

external open class BlackboardAssetProvider : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun GetBlackboardAsset(): BlackboardData

    companion object {
        fun Load(ResourceName: String): BlackboardAssetProvider
        fun Find(Outer: UObject, ResourceName: String): BlackboardAssetProvider
        fun GetDefaultObject(): BlackboardAssetProvider
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlackboardAssetProvider
        fun C(Other: UObject): BlackboardAssetProvider
        fun C(Other: Any): BlackboardAssetProvider
    }
}

external open class BlackboardKeyType_Bool : BlackboardKeyType {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlackboardKeyType_Bool
        fun Find(Outer: UObject, ResourceName: String): BlackboardKeyType_Bool
        fun GetDefaultObject(): BlackboardKeyType_Bool
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlackboardKeyType_Bool
        fun C(Other: UObject): BlackboardKeyType_Bool
        fun C(Other: Any): BlackboardKeyType_Bool
    }
}

external open class BlackboardKeyType_Class : BlackboardKeyType {
    constructor()
    constructor(Outer: UObject)
    open var BaseClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): BlackboardKeyType_Class
        fun Find(Outer: UObject, ResourceName: String): BlackboardKeyType_Class
        fun GetDefaultObject(): BlackboardKeyType_Class
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlackboardKeyType_Class
        fun C(Other: UObject): BlackboardKeyType_Class
        fun C(Other: Any): BlackboardKeyType_Class
    }
}

external open class BlackboardKeyType_Enum : BlackboardKeyType {
    constructor()
    constructor(Outer: UObject)
    open var EnumType: Enum
    open var EnumName: String
    open var bIsEnumNameValid: Boolean

    companion object {
        fun Load(ResourceName: String): BlackboardKeyType_Enum
        fun Find(Outer: UObject, ResourceName: String): BlackboardKeyType_Enum
        fun GetDefaultObject(): BlackboardKeyType_Enum
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlackboardKeyType_Enum
        fun C(Other: UObject): BlackboardKeyType_Enum
        fun C(Other: Any): BlackboardKeyType_Enum
    }
}

external open class BlackboardKeyType_Float : BlackboardKeyType {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlackboardKeyType_Float
        fun Find(Outer: UObject, ResourceName: String): BlackboardKeyType_Float
        fun GetDefaultObject(): BlackboardKeyType_Float
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlackboardKeyType_Float
        fun C(Other: UObject): BlackboardKeyType_Float
        fun C(Other: Any): BlackboardKeyType_Float
    }
}

external open class BlackboardKeyType_Int : BlackboardKeyType {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlackboardKeyType_Int
        fun Find(Outer: UObject, ResourceName: String): BlackboardKeyType_Int
        fun GetDefaultObject(): BlackboardKeyType_Int
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlackboardKeyType_Int
        fun C(Other: UObject): BlackboardKeyType_Int
        fun C(Other: Any): BlackboardKeyType_Int
    }
}

external open class BlackboardKeyType_Name : BlackboardKeyType {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlackboardKeyType_Name
        fun Find(Outer: UObject, ResourceName: String): BlackboardKeyType_Name
        fun GetDefaultObject(): BlackboardKeyType_Name
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlackboardKeyType_Name
        fun C(Other: UObject): BlackboardKeyType_Name
        fun C(Other: Any): BlackboardKeyType_Name
    }
}

external open class BlackboardKeyType_NativeEnum : BlackboardKeyType {
    constructor()
    constructor(Outer: UObject)
    open var EnumName: String
    open var EnumType: Enum

    companion object {
        fun Load(ResourceName: String): BlackboardKeyType_NativeEnum
        fun Find(Outer: UObject, ResourceName: String): BlackboardKeyType_NativeEnum
        fun GetDefaultObject(): BlackboardKeyType_NativeEnum
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlackboardKeyType_NativeEnum
        fun C(Other: UObject): BlackboardKeyType_NativeEnum
        fun C(Other: Any): BlackboardKeyType_NativeEnum
    }
}

external open class BlackboardKeyType_Object : BlackboardKeyType {
    constructor()
    constructor(Outer: UObject)
    open var BaseClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): BlackboardKeyType_Object
        fun Find(Outer: UObject, ResourceName: String): BlackboardKeyType_Object
        fun GetDefaultObject(): BlackboardKeyType_Object
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlackboardKeyType_Object
        fun C(Other: UObject): BlackboardKeyType_Object
        fun C(Other: Any): BlackboardKeyType_Object
    }
}

external open class BlackboardKeyType_Rotator : BlackboardKeyType {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlackboardKeyType_Rotator
        fun Find(Outer: UObject, ResourceName: String): BlackboardKeyType_Rotator
        fun GetDefaultObject(): BlackboardKeyType_Rotator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlackboardKeyType_Rotator
        fun C(Other: UObject): BlackboardKeyType_Rotator
        fun C(Other: Any): BlackboardKeyType_Rotator
    }
}

external open class BlackboardKeyType_String : BlackboardKeyType {
    constructor()
    constructor(Outer: UObject)
    open var StringValue: String

    companion object {
        fun Load(ResourceName: String): BlackboardKeyType_String
        fun Find(Outer: UObject, ResourceName: String): BlackboardKeyType_String
        fun GetDefaultObject(): BlackboardKeyType_String
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlackboardKeyType_String
        fun C(Other: UObject): BlackboardKeyType_String
        fun C(Other: Any): BlackboardKeyType_String
    }
}

external open class BlackboardKeyType_Vector : BlackboardKeyType {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlackboardKeyType_Vector
        fun Find(Outer: UObject, ResourceName: String): BlackboardKeyType_Vector
        fun GetDefaultObject(): BlackboardKeyType_Vector
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlackboardKeyType_Vector
        fun C(Other: UObject): BlackboardKeyType_Vector
        fun C(Other: Any): BlackboardKeyType_Vector
    }
}

external open class BTComposite_Selector : BTCompositeNode {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BTComposite_Selector
        fun Find(Outer: UObject, ResourceName: String): BTComposite_Selector
        fun GetDefaultObject(): BTComposite_Selector
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTComposite_Selector
        fun C(Other: UObject): BTComposite_Selector
        fun C(Other: Any): BTComposite_Selector
    }
}

external open class BTComposite_Sequence : BTCompositeNode {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BTComposite_Sequence
        fun Find(Outer: UObject, ResourceName: String): BTComposite_Sequence
        fun GetDefaultObject(): BTComposite_Sequence
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTComposite_Sequence
        fun C(Other: UObject): BTComposite_Sequence
        fun C(Other: Any): BTComposite_Sequence
    }
}

external object EBTParallelMode {
    var AbortBackground: String /* "AbortBackground" */
    var WaitForBackground: String /* "WaitForBackground" */
    var EBTParallelMode_MAX: String /* "EBTParallelMode_MAX" */
}

external open class BTComposite_SimpleParallel : BTCompositeNode {
    constructor()
    constructor(Outer: UObject)
    open var FinishMode: String /* "AbortBackground" | "WaitForBackground" | "EBTParallelMode_MAX" */

    companion object {
        fun Load(ResourceName: String): BTComposite_SimpleParallel
        fun Find(Outer: UObject, ResourceName: String): BTComposite_SimpleParallel
        fun GetDefaultObject(): BTComposite_SimpleParallel
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTComposite_SimpleParallel
        fun C(Other: UObject): BTComposite_SimpleParallel
        fun C(Other: Any): BTComposite_SimpleParallel
    }
}

external open class BTDecorator_BlackboardBase : BTDecorator {
    constructor()
    constructor(Outer: UObject)
    open var BlackboardKey: BlackboardKeySelector

    companion object {
        fun Load(ResourceName: String): BTDecorator_BlackboardBase
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_BlackboardBase
        fun GetDefaultObject(): BTDecorator_BlackboardBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_BlackboardBase
        fun C(Other: UObject): BTDecorator_BlackboardBase
        fun C(Other: Any): BTDecorator_BlackboardBase
    }
}

external object EBTBlackboardRestart {
    var ValueChange: String /* "ValueChange" */
    var ResultChange: String /* "ResultChange" */
    var EBTBlackboardRestart_MAX: String /* "EBTBlackboardRestart_MAX" */
}

external object EBasicKeyOperation {
    var Set: String /* "Set" */
    var NotSet: String /* "NotSet" */
    var EBasicKeyOperation_MAX: String /* "EBasicKeyOperation_MAX" */
}

external object EArithmeticKeyOperation {
    var Equal: String /* "Equal" */
    var NotEqual: String /* "NotEqual" */
    var Less: String /* "Less" */
    var LessOrEqual: String /* "LessOrEqual" */
    var Greater: String /* "Greater" */
    var GreaterOrEqual: String /* "GreaterOrEqual" */
    var EArithmeticKeyOperation_MAX: String /* "EArithmeticKeyOperation_MAX" */
}

external object ETextKeyOperation {
    var Equal: String /* "Equal" */
    var NotEqual: String /* "NotEqual" */
    var Contain: String /* "Contain" */
    var NotContain: String /* "NotContain" */
    var ETextKeyOperation_MAX: String /* "ETextKeyOperation_MAX" */
}

external open class BTDecorator_Blackboard : BTDecorator_BlackboardBase {
    constructor()
    constructor(Outer: UObject)
    open var IntValue: Number
    open var FloatValue: Number
    open var StringValue: String
    open var CachedDescription: String
    open var OperationType: Number
    open var NotifyObserver: String /* "ValueChange" | "ResultChange" | "EBTBlackboardRestart_MAX" */
    open var BasicOperation: String /* "Set" | "NotSet" | "EBasicKeyOperation_MAX" */
    open var ArithmeticOperation: String /* "Equal" | "NotEqual" | "Less" | "LessOrEqual" | "Greater" | "GreaterOrEqual" | "EArithmeticKeyOperation_MAX" */
    open var TextOperation: String /* "Equal" | "NotEqual" | "Contain" | "NotContain" | "ETextKeyOperation_MAX" */

    companion object {
        fun Load(ResourceName: String): BTDecorator_Blackboard
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_Blackboard
        fun GetDefaultObject(): BTDecorator_Blackboard
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_Blackboard
        fun C(Other: UObject): BTDecorator_Blackboard
        fun C(Other: Any): BTDecorator_Blackboard
    }
}

external object EBTNodeResult {
    var Succeeded: String /* "Succeeded" */
    var Failed: String /* "Failed" */
    var Aborted: String /* "Aborted" */
    var InProgress: String /* "InProgress" */
    var EBTNodeResult_MAX: String /* "EBTNodeResult_MAX" */
}

external open class BTDecorator_BlueprintBase : BTDecorator {
    constructor()
    constructor(Outer: UObject)
    open var AIOwner: AIController
    open var ActorOwner: Actor
    open var ObservedKeyNames: Array<String>
    open var CustomDescription: String
    open var bShowPropertyDetails: Boolean
    open var bCheckConditionOnlyBlackBoardChanges: Boolean
    open var bIsObservingBB: Boolean
    open fun ReceiveTickAI(OwnerController: AIController, ControlledPawn: Pawn, DeltaSeconds: Number)
    open fun ReceiveTick(OwnerActor: Actor, DeltaSeconds: Number)
    open fun ReceiveObserverDeactivatedAI(OwnerController: AIController, ControlledPawn: Pawn)
    open fun ReceiveObserverDeactivated(OwnerActor: Actor)
    open fun ReceiveObserverActivatedAI(OwnerController: AIController, ControlledPawn: Pawn)
    open fun ReceiveObserverActivated(OwnerActor: Actor)
    open fun ReceiveExecutionStartAI(OwnerController: AIController, ControlledPawn: Pawn)
    open fun ReceiveExecutionStart(OwnerActor: Actor)
    open fun ReceiveExecutionFinishAI(OwnerController: AIController, ControlledPawn: Pawn, NodeResult: String /* "Succeeded" | "Failed" | "Aborted" | "InProgress" | "EBTNodeResult_MAX" */)
    open fun ReceiveExecutionFinish(OwnerActor: Actor, NodeResult: String /* "Succeeded" | "Failed" | "Aborted" | "InProgress" | "EBTNodeResult_MAX" */)
    open fun PerformConditionCheckAI(OwnerController: AIController, ControlledPawn: Pawn): Boolean
    open fun PerformConditionCheck(OwnerActor: Actor): Boolean
    open fun IsDecoratorObserverActive(): Boolean
    open fun IsDecoratorExecutionActive(): Boolean

    companion object {
        fun Load(ResourceName: String): BTDecorator_BlueprintBase
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_BlueprintBase
        fun GetDefaultObject(): BTDecorator_BlueprintBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_BlueprintBase
        fun C(Other: UObject): BTDecorator_BlueprintBase
        fun C(Other: Any): BTDecorator_BlueprintBase
    }
}

external object EGameplayContainerMatchType {
    var Any: String /* "Any" */
    var All: String /* "All" */
    var EGameplayContainerMatchType_MAX: String /* "EGameplayContainerMatchType_MAX" */
}

external open class BTDecorator_CheckGameplayTagsOnActor : BTDecorator {
    constructor()
    constructor(Outer: UObject)
    open var ActorToCheck: BlackboardKeySelector
    open var TagsToMatch: String /* "Any" | "All" | "EGameplayContainerMatchType_MAX" */
    open var GameplayTags: GameplayTagContainer
    open var CachedDescription: String

    companion object {
        fun Load(ResourceName: String): BTDecorator_CheckGameplayTagsOnActor
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_CheckGameplayTagsOnActor
        fun GetDefaultObject(): BTDecorator_CheckGameplayTagsOnActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_CheckGameplayTagsOnActor
        fun C(Other: UObject): BTDecorator_CheckGameplayTagsOnActor
        fun C(Other: Any): BTDecorator_CheckGameplayTagsOnActor
    }
}

external object EBlackBoardEntryComparison {
    var Equal: String /* "Equal" */
    var NotEqual: String /* "NotEqual" */
    var EBlackBoardEntryComparison_MAX: String /* "EBlackBoardEntryComparison_MAX" */
}

external open class BTDecorator_CompareBBEntries : BTDecorator {
    constructor()
    constructor(Outer: UObject)
    open var Operator: String /* "Equal" | "NotEqual" | "EBlackBoardEntryComparison_MAX" */
    open var BlackboardKeyA: BlackboardKeySelector
    open var BlackboardKeyB: BlackboardKeySelector

    companion object {
        fun Load(ResourceName: String): BTDecorator_CompareBBEntries
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_CompareBBEntries
        fun GetDefaultObject(): BTDecorator_CompareBBEntries
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_CompareBBEntries
        fun C(Other: UObject): BTDecorator_CompareBBEntries
        fun C(Other: Any): BTDecorator_CompareBBEntries
    }
}

external open class BTDecorator_ConditionalLoop : BTDecorator_Blackboard {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BTDecorator_ConditionalLoop
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_ConditionalLoop
        fun GetDefaultObject(): BTDecorator_ConditionalLoop
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_ConditionalLoop
        fun C(Other: UObject): BTDecorator_ConditionalLoop
        fun C(Other: Any): BTDecorator_ConditionalLoop
    }
}

external open class BTDecorator_ConeCheck : BTDecorator {
    constructor()
    constructor(Outer: UObject)
    open var ConeHalfAngle: Number
    open var ConeOrigin: BlackboardKeySelector
    open var ConeDirection: BlackboardKeySelector
    open var Observed: BlackboardKeySelector

    companion object {
        fun Load(ResourceName: String): BTDecorator_ConeCheck
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_ConeCheck
        fun GetDefaultObject(): BTDecorator_ConeCheck
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_ConeCheck
        fun C(Other: UObject): BTDecorator_ConeCheck
        fun C(Other: Any): BTDecorator_ConeCheck
    }
}

external open class BTDecorator_Cooldown : BTDecorator {
    constructor()
    constructor(Outer: UObject)
    open var CoolDownTime: Number

    companion object {
        fun Load(ResourceName: String): BTDecorator_Cooldown
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_Cooldown
        fun GetDefaultObject(): BTDecorator_Cooldown
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_Cooldown
        fun C(Other: UObject): BTDecorator_Cooldown
        fun C(Other: Any): BTDecorator_Cooldown
    }
}

external object EPathExistanceQueryType {
    var NavmeshRaycast2D: String /* "NavmeshRaycast2D" */
    var HierarchicalQuery: String /* "HierarchicalQuery" */
    var RegularPathFinding: String /* "RegularPathFinding" */
    var EPathExistanceQueryType_MAX: String /* "EPathExistanceQueryType_MAX" */
}

external open class BTDecorator_DoesPathExist : BTDecorator {
    constructor()
    constructor(Outer: UObject)
    open var BlackboardKeyA: BlackboardKeySelector
    open var BlackboardKeyB: BlackboardKeySelector
    open var bUseSelf: Boolean
    open var PathQueryType: String /* "NavmeshRaycast2D" | "HierarchicalQuery" | "RegularPathFinding" | "EPathExistanceQueryType_MAX" */
    open var FilterClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): BTDecorator_DoesPathExist
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_DoesPathExist
        fun GetDefaultObject(): BTDecorator_DoesPathExist
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_DoesPathExist
        fun C(Other: UObject): BTDecorator_DoesPathExist
        fun C(Other: Any): BTDecorator_DoesPathExist
    }
}

external open class BTDecorator_ForceSuccess : BTDecorator {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BTDecorator_ForceSuccess
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_ForceSuccess
        fun GetDefaultObject(): BTDecorator_ForceSuccess
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_ForceSuccess
        fun C(Other: UObject): BTDecorator_ForceSuccess
        fun C(Other: Any): BTDecorator_ForceSuccess
    }
}

external object FAIDistanceType {
    var Distance3D: String /* "Distance3D" */
    var Distance2D: String /* "Distance2D" */
    var DistanceZ: String /* "DistanceZ" */
    var MAX: String /* "MAX" */
}

external open class BTDecorator_IsAtLocation : BTDecorator_BlackboardBase {
    constructor()
    constructor(Outer: UObject)
    open var AcceptableRadius: Number
    open var ParametrizedAcceptableRadius: AIDataProviderFloatValue
    open var GeometricDistanceType: String /* "Distance3D" | "Distance2D" | "DistanceZ" | "MAX" */
    open var bUseParametrizedRadius: Boolean
    open var bUseNavAgentGoalLocation: Boolean
    open var bPathFindingBasedTest: Boolean

    companion object {
        fun Load(ResourceName: String): BTDecorator_IsAtLocation
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_IsAtLocation
        fun GetDefaultObject(): BTDecorator_IsAtLocation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_IsAtLocation
        fun C(Other: UObject): BTDecorator_IsAtLocation
        fun C(Other: Any): BTDecorator_IsAtLocation
    }
}

external open class BTDecorator_IsBBEntryOfClass : BTDecorator_BlackboardBase {
    constructor()
    constructor(Outer: UObject)
    open var TestClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): BTDecorator_IsBBEntryOfClass
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_IsBBEntryOfClass
        fun GetDefaultObject(): BTDecorator_IsBBEntryOfClass
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_IsBBEntryOfClass
        fun C(Other: UObject): BTDecorator_IsBBEntryOfClass
        fun C(Other: Any): BTDecorator_IsBBEntryOfClass
    }
}

external open class BTDecorator_KeepInCone : BTDecorator {
    constructor()
    constructor(Outer: UObject)
    open var ConeHalfAngle: Number
    open var ConeOrigin: BlackboardKeySelector
    open var Observed: BlackboardKeySelector
    open var bUseSelfAsOrigin: Boolean
    open var bUseSelfAsObserved: Boolean

    companion object {
        fun Load(ResourceName: String): BTDecorator_KeepInCone
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_KeepInCone
        fun GetDefaultObject(): BTDecorator_KeepInCone
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_KeepInCone
        fun C(Other: UObject): BTDecorator_KeepInCone
        fun C(Other: Any): BTDecorator_KeepInCone
    }
}

external open class BTDecorator_Loop : BTDecorator {
    constructor()
    constructor(Outer: UObject)
    open var NumLoops: Number
    open var bInfiniteLoop: Boolean
    open var InfiniteLoopTimeoutTime: Number

    companion object {
        fun Load(ResourceName: String): BTDecorator_Loop
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_Loop
        fun GetDefaultObject(): BTDecorator_Loop
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_Loop
        fun C(Other: UObject): BTDecorator_Loop
        fun C(Other: Any): BTDecorator_Loop
    }
}

external open class BTDecorator_ReachedMoveGoal : BTDecorator {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BTDecorator_ReachedMoveGoal
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_ReachedMoveGoal
        fun GetDefaultObject(): BTDecorator_ReachedMoveGoal
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_ReachedMoveGoal
        fun C(Other: UObject): BTDecorator_ReachedMoveGoal
        fun C(Other: Any): BTDecorator_ReachedMoveGoal
    }
}

external open class BTDecorator_SetTagCooldown : BTDecorator {
    constructor()
    constructor(Outer: UObject)
    open var CooldownTag: GameplayTag
    open var CooldownDuration: Number
    open var bAddToExistingDuration: Boolean

    companion object {
        fun Load(ResourceName: String): BTDecorator_SetTagCooldown
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_SetTagCooldown
        fun GetDefaultObject(): BTDecorator_SetTagCooldown
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_SetTagCooldown
        fun C(Other: UObject): BTDecorator_SetTagCooldown
        fun C(Other: Any): BTDecorator_SetTagCooldown
    }
}

external open class BTDecorator_TagCooldown : BTDecorator {
    constructor()
    constructor(Outer: UObject)
    open var CooldownTag: GameplayTag
    open var CooldownDuration: Number
    open var bAddToExistingDuration: Boolean
    open var bActivatesCooldown: Boolean

    companion object {
        fun Load(ResourceName: String): BTDecorator_TagCooldown
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_TagCooldown
        fun GetDefaultObject(): BTDecorator_TagCooldown
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_TagCooldown
        fun C(Other: UObject): BTDecorator_TagCooldown
        fun C(Other: Any): BTDecorator_TagCooldown
    }
}

external open class BTDecorator_TimeLimit : BTDecorator {
    constructor()
    constructor(Outer: UObject)
    open var TimeLimit: Number

    companion object {
        fun Load(ResourceName: String): BTDecorator_TimeLimit
        fun Find(Outer: UObject, ResourceName: String): BTDecorator_TimeLimit
        fun GetDefaultObject(): BTDecorator_TimeLimit
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTDecorator_TimeLimit
        fun C(Other: UObject): BTDecorator_TimeLimit
        fun C(Other: Any): BTDecorator_TimeLimit
    }
}

external open class BTFunctionLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BTFunctionLibrary
        fun Find(Outer: UObject, ResourceName: String): BTFunctionLibrary
        fun GetDefaultObject(): BTFunctionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTFunctionLibrary
        fun StopUsingExternalEvent(NodeOwner: BTNode)
        fun StartUsingExternalEvent(NodeOwner: BTNode, OwningActor: Actor)
        fun SetBlackboardValueAsVector(NodeOwner: BTNode, Key: BlackboardKeySelector, Value: Vector)
        fun SetBlackboardValueAsString(NodeOwner: BTNode, Key: BlackboardKeySelector, Value: String)
        fun SetBlackboardValueAsRotator(NodeOwner: BTNode, Key: BlackboardKeySelector, Value: Rotator)
        fun SetBlackboardValueAsObject(NodeOwner: BTNode, Key: BlackboardKeySelector, Value: UObject)
        fun SetBlackboardValueAsName(NodeOwner: BTNode, Key: BlackboardKeySelector, Value: String)
        fun SetBlackboardValueAsInt(NodeOwner: BTNode, Key: BlackboardKeySelector, Value: Number)
        fun SetBlackboardValueAsFloat(NodeOwner: BTNode, Key: BlackboardKeySelector, Value: Number)
        fun SetBlackboardValueAsEnum(NodeOwner: BTNode, Key: BlackboardKeySelector, Value: Number)
        fun SetBlackboardValueAsClass(NodeOwner: BTNode, Key: BlackboardKeySelector, Value: UnrealEngineClass)
        fun SetBlackboardValueAsBool(NodeOwner: BTNode, Key: BlackboardKeySelector, Value: Boolean)
        fun GetOwnersBlackboard(NodeOwner: BTNode): BlackboardComponent
        fun GetOwnerComponent(NodeOwner: BTNode): BehaviorTreeComponent
        fun GetBlackboardValueAsVector(NodeOwner: BTNode, Key: BlackboardKeySelector): Vector
        fun GetBlackboardValueAsString(NodeOwner: BTNode, Key: BlackboardKeySelector): String
        fun GetBlackboardValueAsRotator(NodeOwner: BTNode, Key: BlackboardKeySelector): Rotator
        fun GetBlackboardValueAsObject(NodeOwner: BTNode, Key: BlackboardKeySelector): UObject
        fun GetBlackboardValueAsName(NodeOwner: BTNode, Key: BlackboardKeySelector): String
        fun GetBlackboardValueAsInt(NodeOwner: BTNode, Key: BlackboardKeySelector): Number
        fun GetBlackboardValueAsFloat(NodeOwner: BTNode, Key: BlackboardKeySelector): Number
        fun GetBlackboardValueAsEnum(NodeOwner: BTNode, Key: BlackboardKeySelector): Number
        fun GetBlackboardValueAsClass(NodeOwner: BTNode, Key: BlackboardKeySelector): UnrealEngineClass
        fun GetBlackboardValueAsBool(NodeOwner: BTNode, Key: BlackboardKeySelector): Boolean
        fun GetBlackboardValueAsActor(NodeOwner: BTNode, Key: BlackboardKeySelector): Actor
        fun ClearBlackboardValueAsVector(NodeOwner: BTNode, Key: BlackboardKeySelector)
        fun ClearBlackboardValue(NodeOwner: BTNode, Key: BlackboardKeySelector)
        fun C(Other: UObject): BTFunctionLibrary
        fun C(Other: Any): BTFunctionLibrary
    }
}

external open class BTService_BlackboardBase : BTService {
    constructor()
    constructor(Outer: UObject)
    open var BlackboardKey: BlackboardKeySelector

    companion object {
        fun Load(ResourceName: String): BTService_BlackboardBase
        fun Find(Outer: UObject, ResourceName: String): BTService_BlackboardBase
        fun GetDefaultObject(): BTService_BlackboardBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTService_BlackboardBase
        fun C(Other: UObject): BTService_BlackboardBase
        fun C(Other: Any): BTService_BlackboardBase
    }
}

external open class BTService_BlueprintBase : BTService {
    constructor()
    constructor(Outer: UObject)
    open var AIOwner: AIController
    open var ActorOwner: Actor
    open var CustomDescription: String
    open var bShowPropertyDetails: Boolean
    open var bShowEventDetails: Boolean
    open fun ReceiveTickAI(OwnerController: AIController, ControlledPawn: Pawn, DeltaSeconds: Number)
    open fun ReceiveTick(OwnerActor: Actor, DeltaSeconds: Number)
    open fun ReceiveSearchStartAI(OwnerController: AIController, ControlledPawn: Pawn)
    open fun ReceiveSearchStart(OwnerActor: Actor)
    open fun ReceiveDeactivationAI(OwnerController: AIController, ControlledPawn: Pawn)
    open fun ReceiveDeactivation(OwnerActor: Actor)
    open fun ReceiveActivationAI(OwnerController: AIController, ControlledPawn: Pawn)
    open fun ReceiveActivation(OwnerActor: Actor)
    open fun IsServiceActive(): Boolean

    companion object {
        fun Load(ResourceName: String): BTService_BlueprintBase
        fun Find(Outer: UObject, ResourceName: String): BTService_BlueprintBase
        fun GetDefaultObject(): BTService_BlueprintBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTService_BlueprintBase
        fun C(Other: UObject): BTService_BlueprintBase
        fun C(Other: Any): BTService_BlueprintBase
    }
}

external open class BTService_DefaultFocus : BTService_BlackboardBase {
    constructor()
    constructor(Outer: UObject)
    open var FocusPriority: Number

    companion object {
        fun Load(ResourceName: String): BTService_DefaultFocus
        fun Find(Outer: UObject, ResourceName: String): BTService_DefaultFocus
        fun GetDefaultObject(): BTService_DefaultFocus
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTService_DefaultFocus
        fun C(Other: UObject): BTService_DefaultFocus
        fun C(Other: Any): BTService_DefaultFocus
    }
}

external object EAIParamType {
    var Float: String /* "Float" */
    var Int: String /* "Int" */
    var Bool: String /* "Bool" */
    var MAX: String /* "MAX" */
}

external open class AIDynamicParam {
    open var ParamName: String
    open var ParamType: String /* "Float" | "Int" | "Bool" | "MAX" */
    open var Value: Number
    open var BBKey: BlackboardKeySelector
    open fun clone(): AIDynamicParam

    companion object {
        fun C(Other: UObject): AIDynamicParam
        fun C(Other: Any): AIDynamicParam
    }
}

external open class EQSParametrizedQueryExecutionRequest {
    open var QueryTemplate: EnvQuery
    open var QueryConfig: Array<AIDynamicParam>
    open var EQSQueryBlackboardKey: BlackboardKeySelector
    open var RunMode: String /* "SingleResult" | "RandomBest5Pct" | "RandomBest25Pct" | "AllMatching" | "EEnvQueryRunMode_MAX" */
    open var bUseBBKeyForQueryTemplate: Boolean
    open fun clone(): EQSParametrizedQueryExecutionRequest

    companion object {
        fun C(Other: UObject): EQSParametrizedQueryExecutionRequest
        fun C(Other: Any): EQSParametrizedQueryExecutionRequest
    }
}

external open class BTService_RunEQS : BTService_BlackboardBase {
    constructor()
    constructor(Outer: UObject)
    open var EQSRequest: EQSParametrizedQueryExecutionRequest
    open var bUpdateBBOnFail: Boolean

    companion object {
        fun Load(ResourceName: String): BTService_RunEQS
        fun Find(Outer: UObject, ResourceName: String): BTService_RunEQS
        fun GetDefaultObject(): BTService_RunEQS
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTService_RunEQS
        fun C(Other: UObject): BTService_RunEQS
        fun C(Other: Any): BTService_RunEQS
    }
}

external open class BTTask_BlackboardBase : BTTaskNode {
    constructor()
    constructor(Outer: UObject)
    open var BlackboardKey: BlackboardKeySelector

    companion object {
        fun Load(ResourceName: String): BTTask_BlackboardBase
        fun Find(Outer: UObject, ResourceName: String): BTTask_BlackboardBase
        fun GetDefaultObject(): BTTask_BlackboardBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_BlackboardBase
        fun C(Other: UObject): BTTask_BlackboardBase
        fun C(Other: Any): BTTask_BlackboardBase
    }
}

external open class IntervalCountdown {
    open var Interval: Number
    open fun clone(): IntervalCountdown

    companion object {
        fun C(Other: UObject): IntervalCountdown
        fun C(Other: Any): IntervalCountdown
    }
}

external open class BTTask_BlueprintBase : BTTaskNode {
    constructor()
    constructor(Outer: UObject)
    open var AIOwner: AIController
    open var ActorOwner: Actor
    open var TickInterval: IntervalCountdown
    open var CustomDescription: String
    open var bShowPropertyDetails: Boolean
    open fun SetFinishOnMessageWithId(MessageName: String, RequestID: Number)
    open fun SetFinishOnMessage(MessageName: String)
    open fun ReceiveTickAI(OwnerController: AIController, ControlledPawn: Pawn, DeltaSeconds: Number)
    open fun ReceiveTick(OwnerActor: Actor, DeltaSeconds: Number)
    open fun ReceiveExecuteAI(OwnerController: AIController, ControlledPawn: Pawn)
    open fun ReceiveExecute(OwnerActor: Actor)
    open fun ReceiveAbortAI(OwnerController: AIController, ControlledPawn: Pawn)
    open fun ReceiveAbort(OwnerActor: Actor)
    open fun IsTaskExecuting(): Boolean
    open fun IsTaskAborting(): Boolean
    open fun FinishExecute(bSuccess: Boolean)
    open fun FinishAbort()

    companion object {
        fun Load(ResourceName: String): BTTask_BlueprintBase
        fun Find(Outer: UObject, ResourceName: String): BTTask_BlueprintBase
        fun GetDefaultObject(): BTTask_BlueprintBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_BlueprintBase
        fun C(Other: UObject): BTTask_BlueprintBase
        fun C(Other: Any): BTTask_BlueprintBase
    }
}

external open class BTTask_FinishWithResult : BTTaskNode {
    constructor()
    constructor(Outer: UObject)
    open var Result: String /* "Succeeded" | "Failed" | "Aborted" | "InProgress" | "EBTNodeResult_MAX" */

    companion object {
        fun Load(ResourceName: String): BTTask_FinishWithResult
        fun Find(Outer: UObject, ResourceName: String): BTTask_FinishWithResult
        fun GetDefaultObject(): BTTask_FinishWithResult
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_FinishWithResult
        fun C(Other: UObject): BTTask_FinishWithResult
        fun C(Other: Any): BTTask_FinishWithResult
    }
}

external open class BTTask_GameplayTaskBase : BTTaskNode {
    constructor()
    constructor(Outer: UObject)
    open var bWaitForGameplayTask: Boolean

    companion object {
        fun Load(ResourceName: String): BTTask_GameplayTaskBase
        fun Find(Outer: UObject, ResourceName: String): BTTask_GameplayTaskBase
        fun GetDefaultObject(): BTTask_GameplayTaskBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_GameplayTaskBase
        fun C(Other: UObject): BTTask_GameplayTaskBase
        fun C(Other: Any): BTTask_GameplayTaskBase
    }
}

external open class BTTask_MakeNoise : BTTaskNode {
    constructor()
    constructor(Outer: UObject)
    open var Loudnes: Number

    companion object {
        fun Load(ResourceName: String): BTTask_MakeNoise
        fun Find(Outer: UObject, ResourceName: String): BTTask_MakeNoise
        fun GetDefaultObject(): BTTask_MakeNoise
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_MakeNoise
        fun C(Other: UObject): BTTask_MakeNoise
        fun C(Other: Any): BTTask_MakeNoise
    }
}

external open class BTTask_MoveTo : BTTask_BlackboardBase {
    constructor()
    constructor(Outer: UObject)
    open var AcceptableRadius: Number
    open var FilterClass: UnrealEngineClass
    open var ObservedBlackboardValueTolerance: Number
    open var bObserveBlackboardValue: Boolean
    open var bAllowStrafe: Boolean
    open var bAllowPartialPath: Boolean
    open var bTrackMovingGoal: Boolean
    open var bProjectGoalLocation: Boolean
    open var bReachTestIncludesAgentRadius: Boolean
    open var bReachTestIncludesGoalRadius: Boolean
    open var bStopOnOverlap: Boolean
    open var bStopOnOverlapNeedsUpdate: Boolean

    companion object {
        fun Load(ResourceName: String): BTTask_MoveTo
        fun Find(Outer: UObject, ResourceName: String): BTTask_MoveTo
        fun GetDefaultObject(): BTTask_MoveTo
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_MoveTo
        fun C(Other: UObject): BTTask_MoveTo
        fun C(Other: Any): BTTask_MoveTo
    }
}

external open class BTTask_MoveDirectlyToward : BTTask_MoveTo {
    constructor()
    constructor(Outer: UObject)
    open var bDisablePathUpdateOnGoalLocationChange: Boolean
    open var bProjectVectorGoalToNavigation: Boolean
    open var bUpdatedDeprecatedProperties: Boolean

    companion object {
        fun Load(ResourceName: String): BTTask_MoveDirectlyToward
        fun Find(Outer: UObject, ResourceName: String): BTTask_MoveDirectlyToward
        fun GetDefaultObject(): BTTask_MoveDirectlyToward
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_MoveDirectlyToward
        fun C(Other: UObject): BTTask_MoveDirectlyToward
        fun C(Other: Any): BTTask_MoveDirectlyToward
    }
}

external open class BTTask_PawnActionBase : BTTaskNode {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BTTask_PawnActionBase
        fun Find(Outer: UObject, ResourceName: String): BTTask_PawnActionBase
        fun GetDefaultObject(): BTTask_PawnActionBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_PawnActionBase
        fun C(Other: UObject): BTTask_PawnActionBase
        fun C(Other: Any): BTTask_PawnActionBase
    }
}

external open class BTTask_PlayAnimation : BTTaskNode {
    constructor()
    constructor(Outer: UObject)
    open var AnimationToPlay: AnimationAsset
    open var bLooping: Boolean
    open var bNonBlocking: Boolean
    open var MyOwnerComp: BehaviorTreeComponent
    open var CachedSkelMesh: SkeletalMeshComponent

    companion object {
        fun Load(ResourceName: String): BTTask_PlayAnimation
        fun Find(Outer: UObject, ResourceName: String): BTTask_PlayAnimation
        fun GetDefaultObject(): BTTask_PlayAnimation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_PlayAnimation
        fun C(Other: UObject): BTTask_PlayAnimation
        fun C(Other: Any): BTTask_PlayAnimation
    }
}

external open class BTTask_PlaySound : BTTaskNode {
    constructor()
    constructor(Outer: UObject)
    open var SoundToPlay: SoundCue

    companion object {
        fun Load(ResourceName: String): BTTask_PlaySound
        fun Find(Outer: UObject, ResourceName: String): BTTask_PlaySound
        fun GetDefaultObject(): BTTask_PlaySound
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_PlaySound
        fun C(Other: UObject): BTTask_PlaySound
        fun C(Other: Any): BTTask_PlaySound
    }
}

external open class BTTask_PushPawnAction : BTTask_PawnActionBase {
    constructor()
    constructor(Outer: UObject)
    open var Action: PawnAction

    companion object {
        fun Load(ResourceName: String): BTTask_PushPawnAction
        fun Find(Outer: UObject, ResourceName: String): BTTask_PushPawnAction
        fun GetDefaultObject(): BTTask_PushPawnAction
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_PushPawnAction
        fun C(Other: UObject): BTTask_PushPawnAction
        fun C(Other: Any): BTTask_PushPawnAction
    }
}

external open class BTTask_RotateToFaceBBEntry : BTTask_BlackboardBase {
    constructor()
    constructor(Outer: UObject)
    open var Precision: Number

    companion object {
        fun Load(ResourceName: String): BTTask_RotateToFaceBBEntry
        fun Find(Outer: UObject, ResourceName: String): BTTask_RotateToFaceBBEntry
        fun GetDefaultObject(): BTTask_RotateToFaceBBEntry
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_RotateToFaceBBEntry
        fun C(Other: UObject): BTTask_RotateToFaceBBEntry
        fun C(Other: Any): BTTask_RotateToFaceBBEntry
    }
}

external open class BTTask_RunBehavior : BTTaskNode {
    constructor()
    constructor(Outer: UObject)
    open var BehaviorAsset: BehaviorTree

    companion object {
        fun Load(ResourceName: String): BTTask_RunBehavior
        fun Find(Outer: UObject, ResourceName: String): BTTask_RunBehavior
        fun GetDefaultObject(): BTTask_RunBehavior
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_RunBehavior
        fun C(Other: UObject): BTTask_RunBehavior
        fun C(Other: Any): BTTask_RunBehavior
    }
}

external open class BTTask_RunBehaviorDynamic : BTTaskNode {
    constructor()
    constructor(Outer: UObject)
    open var InjectionTag: GameplayTag
    open var DefaultBehaviorAsset: BehaviorTree
    open var BehaviorAsset: BehaviorTree

    companion object {
        fun Load(ResourceName: String): BTTask_RunBehaviorDynamic
        fun Find(Outer: UObject, ResourceName: String): BTTask_RunBehaviorDynamic
        fun GetDefaultObject(): BTTask_RunBehaviorDynamic
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_RunBehaviorDynamic
        fun C(Other: UObject): BTTask_RunBehaviorDynamic
        fun C(Other: Any): BTTask_RunBehaviorDynamic
    }
}

external open class EnvNamedValue {
    open var ParamName: String
    open var ParamType: String /* "Float" | "Int" | "Bool" | "MAX" */
    open var Value: Number
    open fun clone(): EnvNamedValue

    companion object {
        fun C(Other: UObject): EnvNamedValue
        fun C(Other: Any): EnvNamedValue
    }
}

external open class BTTask_RunEQSQuery : BTTask_BlackboardBase {
    constructor()
    constructor(Outer: UObject)
    open var QueryTemplate: EnvQuery
    open var QueryParams: Array<EnvNamedValue>
    open var QueryConfig: Array<AIDynamicParam>
    open var RunMode: String /* "SingleResult" | "RandomBest5Pct" | "RandomBest25Pct" | "AllMatching" | "EEnvQueryRunMode_MAX" */
    open var EQSQueryBlackboardKey: BlackboardKeySelector
    open var bUseBBKey: Boolean
    open var EQSRequest: EQSParametrizedQueryExecutionRequest
    open var bUpdateBBOnFail: Boolean

    companion object {
        fun Load(ResourceName: String): BTTask_RunEQSQuery
        fun Find(Outer: UObject, ResourceName: String): BTTask_RunEQSQuery
        fun GetDefaultObject(): BTTask_RunEQSQuery
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_RunEQSQuery
        fun C(Other: UObject): BTTask_RunEQSQuery
        fun C(Other: Any): BTTask_RunEQSQuery
    }
}

external open class BTTask_SetTagCooldown : BTTaskNode {
    constructor()
    constructor(Outer: UObject)
    open var CooldownTag: GameplayTag
    open var bAddToExistingDuration: Boolean
    open var CooldownDuration: Number

    companion object {
        fun Load(ResourceName: String): BTTask_SetTagCooldown
        fun Find(Outer: UObject, ResourceName: String): BTTask_SetTagCooldown
        fun GetDefaultObject(): BTTask_SetTagCooldown
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_SetTagCooldown
        fun C(Other: UObject): BTTask_SetTagCooldown
        fun C(Other: Any): BTTask_SetTagCooldown
    }
}

external open class BTTask_Wait : BTTaskNode {
    constructor()
    constructor(Outer: UObject)
    open var WaitTime: Number
    open var RandomDeviation: Number

    companion object {
        fun Load(ResourceName: String): BTTask_Wait
        fun Find(Outer: UObject, ResourceName: String): BTTask_Wait
        fun GetDefaultObject(): BTTask_Wait
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_Wait
        fun C(Other: UObject): BTTask_Wait
        fun C(Other: Any): BTTask_Wait
    }
}

external open class BTTask_WaitBlackboardTime : BTTask_Wait {
    constructor()
    constructor(Outer: UObject)
    open var BlackboardKey: BlackboardKeySelector

    companion object {
        fun Load(ResourceName: String): BTTask_WaitBlackboardTime
        fun Find(Outer: UObject, ResourceName: String): BTTask_WaitBlackboardTime
        fun GetDefaultObject(): BTTask_WaitBlackboardTime
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BTTask_WaitBlackboardTime
        fun C(Other: UObject): BTTask_WaitBlackboardTime
        fun C(Other: Any): BTTask_WaitBlackboardTime
    }
}

external open class CrowdAgentInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CrowdAgentInterface
        fun Find(Outer: UObject, ResourceName: String): CrowdAgentInterface
        fun GetDefaultObject(): CrowdAgentInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CrowdAgentInterface
        fun C(Other: UObject): CrowdAgentInterface
        fun C(Other: Any): CrowdAgentInterface
    }
}

external open class CrowdFollowingComponent : PathFollowingComponent {
    constructor()
    constructor(Outer: UObject)
    open var CrowdAgentMoveDirection: Vector
    open var CharacterMovement: CharacterMovementComponent
    open var AvoidanceGroup: NavAvoidanceMask
    open var GroupsToAvoid: NavAvoidanceMask
    open var GroupsToIgnore: NavAvoidanceMask
    open fun SuspendCrowdSteering(bSuspend: Boolean)

    companion object {
        fun Load(ResourceName: String): CrowdFollowingComponent
        fun Find(Outer: UObject, ResourceName: String): CrowdFollowingComponent
        fun GetDefaultObject(): CrowdFollowingComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CrowdFollowingComponent
        fun C(Other: UObject): CrowdFollowingComponent
        fun C(Other: Any): CrowdFollowingComponent
    }
}

external open class CrowdManagerBase : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CrowdManagerBase
        fun Find(Outer: UObject, ResourceName: String): CrowdManagerBase
        fun GetDefaultObject(): CrowdManagerBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CrowdManagerBase
        fun C(Other: UObject): CrowdManagerBase
        fun C(Other: Any): CrowdManagerBase
    }
}

external open class CrowdAvoidanceConfig {
    open var VelocityBias: Number
    open var DesiredVelocityWeight: Number
    open var CurrentVelocityWeight: Number
    open var SideBiasWeight: Number
    open var ImpactTimeWeight: Number
    open var ImpactTimeRange: Number
    open var CustomPatternIdx: Number
    open var AdaptiveDivisions: Number
    open var AdaptiveRings: Number
    open var AdaptiveDepth: Number
    open fun clone(): CrowdAvoidanceConfig

    companion object {
        fun C(Other: UObject): CrowdAvoidanceConfig
        fun C(Other: Any): CrowdAvoidanceConfig
    }
}

external open class CrowdAvoidanceSamplingPattern {
    open var Angles: Array<Number>
    open var Radii: Array<Number>
    open fun clone(): CrowdAvoidanceSamplingPattern

    companion object {
        fun C(Other: UObject): CrowdAvoidanceSamplingPattern
        fun C(Other: Any): CrowdAvoidanceSamplingPattern
    }
}

external open class CrowdManager : CrowdManagerBase {
    constructor()
    constructor(Outer: UObject)
    open var MyNavData: NavigationData
    open var AvoidanceConfig: Array<CrowdAvoidanceConfig>
    open var SamplingPatterns: Array<CrowdAvoidanceSamplingPattern>
    open var MaxAgents: Number
    open var MaxAgentRadius: Number
    open var MaxAvoidedAgents: Number
    open var MaxAvoidedWalls: Number
    open var NavmeshCheckInterval: Number
    open var PathOptimizationInterval: Number
    open var SeparationDirClamp: Number
    open var PathOffsetRadiusMultiplier: Number
    open var bResolveCollisions: Boolean

    companion object {
        fun Load(ResourceName: String): CrowdManager
        fun Find(Outer: UObject, ResourceName: String): CrowdManager
        fun GetDefaultObject(): CrowdManager
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CrowdManager
        fun C(Other: UObject): CrowdManager
        fun C(Other: Any): CrowdManager
    }
}

external open class DetourCrowdAIController(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : AIController {
    companion object {
        fun GetDefaultObject(): DetourCrowdAIController
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DetourCrowdAIController
        fun C(Other: UObject): DetourCrowdAIController
        fun C(Other: Any): DetourCrowdAIController
    }
}

external interface `T$578` {
    var ResultingLocation: Vector
}

external interface `T$579` {
    var ResultingActor: Actor
}

external interface `T$580` {
    var ResultingLocationSet: Array<Vector>
}

external interface `T$581` {
    var ResultingActorsSet: Array<Actor>
}

external open class EnvQueryContext_BlueprintBase : EnvQueryContext {
    constructor()
    constructor(Outer: UObject)
    open fun ProvideSingleLocation(QuerierObject: UObject, QuerierActor: Actor, ResultingLocation: Vector = definedExternally): `T$578`
    open fun ProvideSingleActor(QuerierObject: UObject, QuerierActor: Actor, ResultingActor: Actor = definedExternally): `T$579`
    open fun ProvideLocationsSet(QuerierObject: UObject, QuerierActor: Actor, ResultingLocationSet: Array<Vector> = definedExternally): `T$580`
    open fun ProvideActorsSet(QuerierObject: UObject, QuerierActor: Actor, ResultingActorsSet: Array<Actor> = definedExternally): `T$581`

    companion object {
        fun Load(ResourceName: String): EnvQueryContext_BlueprintBase
        fun Find(Outer: UObject, ResourceName: String): EnvQueryContext_BlueprintBase
        fun GetDefaultObject(): EnvQueryContext_BlueprintBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryContext_BlueprintBase
        fun C(Other: UObject): EnvQueryContext_BlueprintBase
        fun C(Other: Any): EnvQueryContext_BlueprintBase
    }
}

external open class EnvQueryContext_Item : EnvQueryContext {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EnvQueryContext_Item
        fun Find(Outer: UObject, ResourceName: String): EnvQueryContext_Item
        fun GetDefaultObject(): EnvQueryContext_Item
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryContext_Item
        fun C(Other: UObject): EnvQueryContext_Item
        fun C(Other: Any): EnvQueryContext_Item
    }
}

external open class EnvQueryContext_Querier : EnvQueryContext {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EnvQueryContext_Querier
        fun Find(Outer: UObject, ResourceName: String): EnvQueryContext_Querier
        fun GetDefaultObject(): EnvQueryContext_Querier
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryContext_Querier
        fun C(Other: UObject): EnvQueryContext_Querier
        fun C(Other: Any): EnvQueryContext_Querier
    }
}

external open class EnvQueryDebugHelpers : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EnvQueryDebugHelpers
        fun Find(Outer: UObject, ResourceName: String): EnvQueryDebugHelpers
        fun GetDefaultObject(): EnvQueryDebugHelpers
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryDebugHelpers
        fun C(Other: UObject): EnvQueryDebugHelpers
        fun C(Other: Any): EnvQueryDebugHelpers
    }
}

external open class EnvQueryGenerator_ActorsOfClass : EnvQueryGenerator {
    constructor()
    constructor(Outer: UObject)
    open var SearchedActorClass: UnrealEngineClass
    open var GenerateOnlyActorsInRadius: AIDataProviderBoolValue
    open var SearchRadius: AIDataProviderFloatValue
    open var SearchCenter: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): EnvQueryGenerator_ActorsOfClass
        fun Find(Outer: UObject, ResourceName: String): EnvQueryGenerator_ActorsOfClass
        fun GetDefaultObject(): EnvQueryGenerator_ActorsOfClass
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryGenerator_ActorsOfClass
        fun C(Other: UObject): EnvQueryGenerator_ActorsOfClass
        fun C(Other: Any): EnvQueryGenerator_ActorsOfClass
    }
}

external open class EnvQueryGenerator_BlueprintBase : EnvQueryGenerator {
    constructor()
    constructor(Outer: UObject)
    open var GeneratorsActionDescription: String
    open var Context: UnrealEngineClass
    open var GeneratedItemType: UnrealEngineClass
    open fun GetQuerier(): UObject
    open fun DoItemGeneration(ContextLocations: Array<Vector>)
    open fun AddGeneratedVector(GeneratedVector: Vector)
    open fun AddGeneratedActor(GeneratedActor: Actor)

    companion object {
        fun Load(ResourceName: String): EnvQueryGenerator_BlueprintBase
        fun Find(Outer: UObject, ResourceName: String): EnvQueryGenerator_BlueprintBase
        fun GetDefaultObject(): EnvQueryGenerator_BlueprintBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryGenerator_BlueprintBase
        fun C(Other: UObject): EnvQueryGenerator_BlueprintBase
        fun C(Other: Any): EnvQueryGenerator_BlueprintBase
    }
}

external open class EnvQueryGenerator_Composite : EnvQueryGenerator {
    constructor()
    constructor(Outer: UObject)
    open var Generators: Array<EnvQueryGenerator>
    open var bAllowDifferentItemTypes: Boolean
    open var bHasMatchingItemType: Boolean
    open var ForcedItemType: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): EnvQueryGenerator_Composite
        fun Find(Outer: UObject, ResourceName: String): EnvQueryGenerator_Composite
        fun GetDefaultObject(): EnvQueryGenerator_Composite
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryGenerator_Composite
        fun C(Other: UObject): EnvQueryGenerator_Composite
        fun C(Other: Any): EnvQueryGenerator_Composite
    }
}

external object EEnvTraceShape {
    var Line: String /* "Line" */
    var Box: String /* "Box" */
    var Sphere: String /* "Sphere" */
    var Capsule: String /* "Capsule" */
    var EEnvTraceShape_MAX: String /* "EEnvTraceShape_MAX" */
}

external object EEnvQueryTrace {
    var None: String /* "None" */
    var Navigation: String /* "Navigation" */
    var GeometryByChannel: String /* "GeometryByChannel" */
    var GeometryByProfile: String /* "GeometryByProfile" */
    var NavigationOverLedges: String /* "NavigationOverLedges" */
    var EEnvQueryTrace_MAX: String /* "EEnvQueryTrace_MAX" */
}

external open class EnvTraceData {
    open var VersionNum: Number
    open var NavigationFilter: UnrealEngineClass
    open var ProjectDown: Number
    open var ProjectUp: Number
    open var ExtentX: Number
    open var ExtentY: Number
    open var ExtentZ: Number
    open var PostProjectionVerticalOffset: Number
    open var TraceChannel: String /* "TraceTypeQuery1" | "TraceTypeQuery2" | "TraceTypeQuery3" | "TraceTypeQuery4" | "TraceTypeQuery5" | "TraceTypeQuery6" | "TraceTypeQuery7" | "TraceTypeQuery8" | "TraceTypeQuery9" | "TraceTypeQuery10" | "TraceTypeQuery11" | "TraceTypeQuery12" | "TraceTypeQuery13" | "TraceTypeQuery14" | "TraceTypeQuery15" | "TraceTypeQuery16" | "TraceTypeQuery17" | "TraceTypeQuery18" | "TraceTypeQuery19" | "TraceTypeQuery20" | "TraceTypeQuery21" | "TraceTypeQuery22" | "TraceTypeQuery23" | "TraceTypeQuery24" | "TraceTypeQuery25" | "TraceTypeQuery26" | "TraceTypeQuery27" | "TraceTypeQuery28" | "TraceTypeQuery29" | "TraceTypeQuery30" | "TraceTypeQuery31" | "TraceTypeQuery32" | "TraceTypeQuery_MAX" | "ETraceTypeQuery_MAX" */
    open var SerializedChannel: String /* "ECC_WorldStatic" | "ECC_WorldDynamic" | "ECC_Pawn" | "ECC_Visibility" | "ECC_Camera" | "ECC_PhysicsBody" | "ECC_Vehicle" | "ECC_Destructible" | "ECC_EngineTraceChannel1" | "ECC_EngineTraceChannel2" | "ECC_EngineTraceChannel3" | "ECC_EngineTraceChannel4" | "ECC_EngineTraceChannel5" | "ECC_EngineTraceChannel6" | "ECC_GameTraceChannel1" | "ECC_GameTraceChannel2" | "ECC_GameTraceChannel3" | "ECC_GameTraceChannel4" | "ECC_GameTraceChannel5" | "ECC_GameTraceChannel6" | "ECC_GameTraceChannel7" | "ECC_GameTraceChannel8" | "ECC_GameTraceChannel9" | "ECC_GameTraceChannel10" | "ECC_GameTraceChannel11" | "ECC_GameTraceChannel12" | "ECC_GameTraceChannel13" | "ECC_GameTraceChannel14" | "ECC_GameTraceChannel15" | "ECC_GameTraceChannel16" | "ECC_GameTraceChannel17" | "ECC_GameTraceChannel18" | "ECC_OverlapAll_Deprecated" | "ECC_MAX" */
    open var TraceProfileName: String
    open var TraceShape: String /* "Line" | "Box" | "Sphere" | "Capsule" | "EEnvTraceShape_MAX" */
    open var TraceMode: String /* "None" | "Navigation" | "GeometryByChannel" | "GeometryByProfile" | "NavigationOverLedges" | "EEnvQueryTrace_MAX" */
    open var bTraceComplex: Boolean
    open var bOnlyBlockingHits: Boolean
    open var bCanTraceOnNavMesh: Boolean
    open var bCanTraceOnGeometry: Boolean
    open var bCanDisableTrace: Boolean
    open var bCanProjectDown: Boolean
    open fun clone(): EnvTraceData

    companion object {
        fun C(Other: UObject): EnvTraceData
        fun C(Other: Any): EnvTraceData
    }
}

external open class EnvQueryGenerator_ProjectedPoints : EnvQueryGenerator {
    constructor()
    constructor(Outer: UObject)
    open var ProjectionData: EnvTraceData

    companion object {
        fun Load(ResourceName: String): EnvQueryGenerator_ProjectedPoints
        fun Find(Outer: UObject, ResourceName: String): EnvQueryGenerator_ProjectedPoints
        fun GetDefaultObject(): EnvQueryGenerator_ProjectedPoints
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryGenerator_ProjectedPoints
        fun C(Other: UObject): EnvQueryGenerator_ProjectedPoints
        fun C(Other: Any): EnvQueryGenerator_ProjectedPoints
    }
}

external open class EnvQueryGenerator_Cone : EnvQueryGenerator_ProjectedPoints {
    constructor()
    constructor(Outer: UObject)
    open var AlignedPointsDistance: AIDataProviderFloatValue
    open var ConeDegrees: AIDataProviderFloatValue
    open var AngleStep: AIDataProviderFloatValue
    open var Range: AIDataProviderFloatValue
    open var CenterActor: UnrealEngineClass
    open var bIncludeContextLocation: Boolean

    companion object {
        fun Load(ResourceName: String): EnvQueryGenerator_Cone
        fun Find(Outer: UObject, ResourceName: String): EnvQueryGenerator_Cone
        fun GetDefaultObject(): EnvQueryGenerator_Cone
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryGenerator_Cone
        fun C(Other: UObject): EnvQueryGenerator_Cone
        fun C(Other: Any): EnvQueryGenerator_Cone
    }
}

external open class EnvQueryGenerator_CurrentLocation : EnvQueryGenerator {
    constructor()
    constructor(Outer: UObject)
    open var QueryContext: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): EnvQueryGenerator_CurrentLocation
        fun Find(Outer: UObject, ResourceName: String): EnvQueryGenerator_CurrentLocation
        fun GetDefaultObject(): EnvQueryGenerator_CurrentLocation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryGenerator_CurrentLocation
        fun C(Other: UObject): EnvQueryGenerator_CurrentLocation
        fun C(Other: Any): EnvQueryGenerator_CurrentLocation
    }
}

external open class AIDataProviderIntValue : AIDataProviderTypedValue {
    open var DefaultValue: Number
    override fun clone(): AIDataProviderIntValue

    companion object {
        fun C(Other: UObject): AIDataProviderIntValue
        fun C(Other: Any): AIDataProviderIntValue
    }
}

external object EEnvDirection {
    var TwoPoints: String /* "TwoPoints" */
    var Rotation: String /* "Rotation" */
    var EEnvDirection_MAX: String /* "EEnvDirection_MAX" */
}

external open class EnvDirection {
    open var LineFrom: UnrealEngineClass
    open var LineTo: UnrealEngineClass
    open var Rotation: UnrealEngineClass
    open var DirMode: String /* "TwoPoints" | "Rotation" | "EEnvDirection_MAX" */
    open fun clone(): EnvDirection

    companion object {
        fun C(Other: UObject): EnvDirection
        fun C(Other: Any): EnvDirection
    }
}

external open class EnvQueryGenerator_Donut : EnvQueryGenerator_ProjectedPoints {
    constructor()
    constructor(Outer: UObject)
    open var InnerRadius: AIDataProviderFloatValue
    open var OuterRadius: AIDataProviderFloatValue
    open var NumberOfRings: AIDataProviderIntValue
    open var PointsPerRing: AIDataProviderIntValue
    open var ArcDirection: EnvDirection
    open var ArcAngle: AIDataProviderFloatValue
    open var bUseSpiralPattern: Boolean
    open var Center: UnrealEngineClass
    open var bDefineArc: Boolean

    companion object {
        fun Load(ResourceName: String): EnvQueryGenerator_Donut
        fun Find(Outer: UObject, ResourceName: String): EnvQueryGenerator_Donut
        fun GetDefaultObject(): EnvQueryGenerator_Donut
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryGenerator_Donut
        fun C(Other: UObject): EnvQueryGenerator_Donut
        fun C(Other: Any): EnvQueryGenerator_Donut
    }
}

external object EPointOnCircleSpacingMethod {
    var BySpaceBetween: String /* "BySpaceBetween" */
    var ByNumberOfPoints: String /* "ByNumberOfPoints" */
    var EPointOnCircleSpacingMethod_MAX: String /* "EPointOnCircleSpacingMethod_MAX" */
}

external open class EnvQueryGenerator_OnCircle : EnvQueryGenerator_ProjectedPoints {
    constructor()
    constructor(Outer: UObject)
    open var CircleRadius: AIDataProviderFloatValue
    open var SpaceBetween: AIDataProviderFloatValue
    open var NumberOfPoints: AIDataProviderIntValue
    open var PointOnCircleSpacingMethod: String /* "BySpaceBetween" | "ByNumberOfPoints" | "EPointOnCircleSpacingMethod_MAX" */
    open var ArcDirection: EnvDirection
    open var ArcAngle: AIDataProviderFloatValue
    open var AngleRadians: Number
    open var CircleCenter: UnrealEngineClass
    open var bIgnoreAnyContextActorsWhenGeneratingCircle: Boolean
    open var CircleCenterZOffset: AIDataProviderFloatValue
    open var TraceData: EnvTraceData
    open var bDefineArc: Boolean

    companion object {
        fun Load(ResourceName: String): EnvQueryGenerator_OnCircle
        fun Find(Outer: UObject, ResourceName: String): EnvQueryGenerator_OnCircle
        fun GetDefaultObject(): EnvQueryGenerator_OnCircle
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryGenerator_OnCircle
        fun C(Other: UObject): EnvQueryGenerator_OnCircle
        fun C(Other: Any): EnvQueryGenerator_OnCircle
    }
}

external open class EnvQueryGenerator_SimpleGrid : EnvQueryGenerator_ProjectedPoints {
    constructor()
    constructor(Outer: UObject)
    open var GridSize: AIDataProviderFloatValue
    open var SpaceBetween: AIDataProviderFloatValue
    open var GenerateAround: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): EnvQueryGenerator_SimpleGrid
        fun Find(Outer: UObject, ResourceName: String): EnvQueryGenerator_SimpleGrid
        fun GetDefaultObject(): EnvQueryGenerator_SimpleGrid
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryGenerator_SimpleGrid
        fun C(Other: UObject): EnvQueryGenerator_SimpleGrid
        fun C(Other: Any): EnvQueryGenerator_SimpleGrid
    }
}

external open class EnvQueryGenerator_PathingGrid : EnvQueryGenerator_SimpleGrid {
    constructor()
    constructor(Outer: UObject)
    open var PathToItem: AIDataProviderBoolValue
    open var NavigationFilter: UnrealEngineClass
    open var ScanRangeMultiplier: AIDataProviderFloatValue

    companion object {
        fun Load(ResourceName: String): EnvQueryGenerator_PathingGrid
        fun Find(Outer: UObject, ResourceName: String): EnvQueryGenerator_PathingGrid
        fun GetDefaultObject(): EnvQueryGenerator_PathingGrid
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryGenerator_PathingGrid
        fun C(Other: UObject): EnvQueryGenerator_PathingGrid
        fun C(Other: Any): EnvQueryGenerator_PathingGrid
    }
}

external open class EnvQueryGenerator_PerceivedActors : EnvQueryGenerator {
    constructor()
    constructor(Outer: UObject)
    open var AllowedActorClass: UnrealEngineClass
    open var SearchRadius: AIDataProviderFloatValue
    open var ListenerContext: UnrealEngineClass
    open var SenseToUse: UnrealEngineClass
    open var bIncludeKnownActors: Boolean

    companion object {
        fun Load(ResourceName: String): EnvQueryGenerator_PerceivedActors
        fun Find(Outer: UObject, ResourceName: String): EnvQueryGenerator_PerceivedActors
        fun GetDefaultObject(): EnvQueryGenerator_PerceivedActors
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryGenerator_PerceivedActors
        fun C(Other: UObject): EnvQueryGenerator_PerceivedActors
        fun C(Other: Any): EnvQueryGenerator_PerceivedActors
    }
}

external open class EnvQueryItemType_VectorBase : EnvQueryItemType {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EnvQueryItemType_VectorBase
        fun Find(Outer: UObject, ResourceName: String): EnvQueryItemType_VectorBase
        fun GetDefaultObject(): EnvQueryItemType_VectorBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryItemType_VectorBase
        fun C(Other: UObject): EnvQueryItemType_VectorBase
        fun C(Other: Any): EnvQueryItemType_VectorBase
    }
}

external open class EnvQueryItemType_ActorBase : EnvQueryItemType_VectorBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EnvQueryItemType_ActorBase
        fun Find(Outer: UObject, ResourceName: String): EnvQueryItemType_ActorBase
        fun GetDefaultObject(): EnvQueryItemType_ActorBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryItemType_ActorBase
        fun C(Other: UObject): EnvQueryItemType_ActorBase
        fun C(Other: Any): EnvQueryItemType_ActorBase
    }
}

external open class EnvQueryItemType_Actor : EnvQueryItemType_ActorBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EnvQueryItemType_Actor
        fun Find(Outer: UObject, ResourceName: String): EnvQueryItemType_Actor
        fun GetDefaultObject(): EnvQueryItemType_Actor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryItemType_Actor
        fun C(Other: UObject): EnvQueryItemType_Actor
        fun C(Other: Any): EnvQueryItemType_Actor
    }
}

external open class EnvQueryItemType_Direction : EnvQueryItemType_VectorBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EnvQueryItemType_Direction
        fun Find(Outer: UObject, ResourceName: String): EnvQueryItemType_Direction
        fun GetDefaultObject(): EnvQueryItemType_Direction
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryItemType_Direction
        fun C(Other: UObject): EnvQueryItemType_Direction
        fun C(Other: Any): EnvQueryItemType_Direction
    }
}

external open class EnvQueryItemType_Point : EnvQueryItemType_VectorBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EnvQueryItemType_Point
        fun Find(Outer: UObject, ResourceName: String): EnvQueryItemType_Point
        fun GetDefaultObject(): EnvQueryItemType_Point
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryItemType_Point
        fun C(Other: UObject): EnvQueryItemType_Point
        fun C(Other: Any): EnvQueryItemType_Point
    }
}

external object EEnvTestDistance {
    var Distance3D: String /* "Distance3D" */
    var Distance2D: String /* "Distance2D" */
    var DistanceZ: String /* "DistanceZ" */
    var DistanceAbsoluteZ: String /* "DistanceAbsoluteZ" */
    var EEnvTestDistance_MAX: String /* "EEnvTestDistance_MAX" */
}

external open class EnvQueryTest_Distance : EnvQueryTest {
    constructor()
    constructor(Outer: UObject)
    open var TestMode: String /* "Distance3D" | "Distance2D" | "DistanceZ" | "DistanceAbsoluteZ" | "EEnvTestDistance_MAX" */
    open var DistanceTo: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): EnvQueryTest_Distance
        fun Find(Outer: UObject, ResourceName: String): EnvQueryTest_Distance
        fun GetDefaultObject(): EnvQueryTest_Distance
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryTest_Distance
        fun C(Other: UObject): EnvQueryTest_Distance
        fun C(Other: Any): EnvQueryTest_Distance
    }
}

external object EEnvTestDot {
    var Dot3D: String /* "Dot3D" */
    var Dot2D: String /* "Dot2D" */
    var EEnvTestDot_MAX: String /* "EEnvTestDot_MAX" */
}

external open class EnvQueryTest_Dot : EnvQueryTest {
    constructor()
    constructor(Outer: UObject)
    open var LineA: EnvDirection
    open var LineB: EnvDirection
    open var TestMode: String /* "Dot3D" | "Dot2D" | "EEnvTestDot_MAX" */
    open var bAbsoluteValue: Boolean

    companion object {
        fun Load(ResourceName: String): EnvQueryTest_Dot
        fun Find(Outer: UObject, ResourceName: String): EnvQueryTest_Dot
        fun GetDefaultObject(): EnvQueryTest_Dot
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryTest_Dot
        fun C(Other: UObject): EnvQueryTest_Dot
        fun C(Other: Any): EnvQueryTest_Dot
    }
}

external open class EnvQueryTest_GameplayTags : EnvQueryTest {
    constructor()
    constructor(Outer: UObject)
    open var TagQueryToMatch: GameplayTagQuery
    open var bRejectIncompatibleItems: Boolean
    open var bUpdatedToUseQuery: Boolean
    open var TagsToMatch: String /* "Any" | "All" | "EGameplayContainerMatchType_MAX" */
    open var GameplayTags: GameplayTagContainer

    companion object {
        fun Load(ResourceName: String): EnvQueryTest_GameplayTags
        fun Find(Outer: UObject, ResourceName: String): EnvQueryTest_GameplayTags
        fun GetDefaultObject(): EnvQueryTest_GameplayTags
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryTest_GameplayTags
        fun C(Other: UObject): EnvQueryTest_GameplayTags
        fun C(Other: Any): EnvQueryTest_GameplayTags
    }
}

external object EEnvOverlapShape {
    var Box: String /* "Box" */
    var Sphere: String /* "Sphere" */
    var Capsule: String /* "Capsule" */
    var EEnvOverlapShape_MAX: String /* "EEnvOverlapShape_MAX" */
}

external open class EnvOverlapData {
    open var ExtentX: Number
    open var ExtentY: Number
    open var ExtentZ: Number
    open var ShapeOffset: Vector
    open var OverlapChannel: String /* "ECC_WorldStatic" | "ECC_WorldDynamic" | "ECC_Pawn" | "ECC_Visibility" | "ECC_Camera" | "ECC_PhysicsBody" | "ECC_Vehicle" | "ECC_Destructible" | "ECC_EngineTraceChannel1" | "ECC_EngineTraceChannel2" | "ECC_EngineTraceChannel3" | "ECC_EngineTraceChannel4" | "ECC_EngineTraceChannel5" | "ECC_EngineTraceChannel6" | "ECC_GameTraceChannel1" | "ECC_GameTraceChannel2" | "ECC_GameTraceChannel3" | "ECC_GameTraceChannel4" | "ECC_GameTraceChannel5" | "ECC_GameTraceChannel6" | "ECC_GameTraceChannel7" | "ECC_GameTraceChannel8" | "ECC_GameTraceChannel9" | "ECC_GameTraceChannel10" | "ECC_GameTraceChannel11" | "ECC_GameTraceChannel12" | "ECC_GameTraceChannel13" | "ECC_GameTraceChannel14" | "ECC_GameTraceChannel15" | "ECC_GameTraceChannel16" | "ECC_GameTraceChannel17" | "ECC_GameTraceChannel18" | "ECC_OverlapAll_Deprecated" | "ECC_MAX" */
    open var OverlapShape: String /* "Box" | "Sphere" | "Capsule" | "EEnvOverlapShape_MAX" */
    open var bOnlyBlockingHits: Boolean
    open var bOverlapComplex: Boolean
    open var bSkipOverlapQuerier: Boolean
    open fun clone(): EnvOverlapData

    companion object {
        fun C(Other: UObject): EnvOverlapData
        fun C(Other: Any): EnvOverlapData
    }
}

external open class EnvQueryTest_Overlap : EnvQueryTest {
    constructor()
    constructor(Outer: UObject)
    open var OverlapData: EnvOverlapData

    companion object {
        fun Load(ResourceName: String): EnvQueryTest_Overlap
        fun Find(Outer: UObject, ResourceName: String): EnvQueryTest_Overlap
        fun GetDefaultObject(): EnvQueryTest_Overlap
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryTest_Overlap
        fun C(Other: UObject): EnvQueryTest_Overlap
        fun C(Other: Any): EnvQueryTest_Overlap
    }
}

external object EEnvTestPathfinding {
    var PathExist: String /* "PathExist" */
    var PathCost: String /* "PathCost" */
    var PathLength: String /* "PathLength" */
    var EEnvTestPathfinding_MAX: String /* "EEnvTestPathfinding_MAX" */
}

external open class EnvQueryTest_Pathfinding : EnvQueryTest {
    constructor()
    constructor(Outer: UObject)
    open var TestMode: String /* "PathExist" | "PathCost" | "PathLength" | "EEnvTestPathfinding_MAX" */
    open var Context: UnrealEngineClass
    open var PathFromContext: AIDataProviderBoolValue
    open var SkipUnreachable: AIDataProviderBoolValue
    open var FilterClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): EnvQueryTest_Pathfinding
        fun Find(Outer: UObject, ResourceName: String): EnvQueryTest_Pathfinding
        fun GetDefaultObject(): EnvQueryTest_Pathfinding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryTest_Pathfinding
        fun C(Other: UObject): EnvQueryTest_Pathfinding
        fun C(Other: Any): EnvQueryTest_Pathfinding
    }
}

external open class EnvQueryTest_PathfindingBatch : EnvQueryTest_Pathfinding {
    constructor()
    constructor(Outer: UObject)
    open var ScanRangeMultiplier: AIDataProviderFloatValue

    companion object {
        fun Load(ResourceName: String): EnvQueryTest_PathfindingBatch
        fun Find(Outer: UObject, ResourceName: String): EnvQueryTest_PathfindingBatch
        fun GetDefaultObject(): EnvQueryTest_PathfindingBatch
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryTest_PathfindingBatch
        fun C(Other: UObject): EnvQueryTest_PathfindingBatch
        fun C(Other: Any): EnvQueryTest_PathfindingBatch
    }
}

external open class EnvQueryTest_Project : EnvQueryTest {
    constructor()
    constructor(Outer: UObject)
    open var ProjectionData: EnvTraceData

    companion object {
        fun Load(ResourceName: String): EnvQueryTest_Project
        fun Find(Outer: UObject, ResourceName: String): EnvQueryTest_Project
        fun GetDefaultObject(): EnvQueryTest_Project
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryTest_Project
        fun C(Other: UObject): EnvQueryTest_Project
        fun C(Other: Any): EnvQueryTest_Project
    }
}

external open class EnvQueryTest_Random : EnvQueryTest {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EnvQueryTest_Random
        fun Find(Outer: UObject, ResourceName: String): EnvQueryTest_Random
        fun GetDefaultObject(): EnvQueryTest_Random
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryTest_Random
        fun C(Other: UObject): EnvQueryTest_Random
        fun C(Other: Any): EnvQueryTest_Random
    }
}

external open class EnvQueryTest_Trace : EnvQueryTest {
    constructor()
    constructor(Outer: UObject)
    open var TraceData: EnvTraceData
    open var TraceFromContext: AIDataProviderBoolValue
    open var ItemHeightOffset: AIDataProviderFloatValue
    open var ContextHeightOffset: AIDataProviderFloatValue
    open var Context: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): EnvQueryTest_Trace
        fun Find(Outer: UObject, ResourceName: String): EnvQueryTest_Trace
        fun GetDefaultObject(): EnvQueryTest_Trace
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryTest_Trace
        fun C(Other: UObject): EnvQueryTest_Trace
        fun C(Other: Any): EnvQueryTest_Trace
    }
}

external open class EnvQueryTest_Volume : EnvQueryTest {
    constructor()
    constructor(Outer: UObject)
    open var VolumeContext: UnrealEngineClass
    open var VolumeClass: UnrealEngineClass
    open var bDoComplexVolumeTest: Boolean

    companion object {
        fun Load(ResourceName: String): EnvQueryTest_Volume
        fun Find(Outer: UObject, ResourceName: String): EnvQueryTest_Volume
        fun GetDefaultObject(): EnvQueryTest_Volume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryTest_Volume
        fun C(Other: UObject): EnvQueryTest_Volume
        fun C(Other: Any): EnvQueryTest_Volume
    }
}

external open class EnvQueryTypes : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EnvQueryTypes
        fun Find(Outer: UObject, ResourceName: String): EnvQueryTypes
        fun GetDefaultObject(): EnvQueryTypes
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnvQueryTypes
        fun C(Other: UObject): EnvQueryTypes
        fun C(Other: Any): EnvQueryTypes
    }
}

external open class EQSQueryResultSourceInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EQSQueryResultSourceInterface
        fun Find(Outer: UObject, ResourceName: String): EQSQueryResultSourceInterface
        fun GetDefaultObject(): EQSQueryResultSourceInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EQSQueryResultSourceInterface
        fun C(Other: UObject): EQSQueryResultSourceInterface
        fun C(Other: Any): EQSQueryResultSourceInterface
    }
}

external open class EQSRenderingComponent : DebugDrawComponent {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EQSRenderingComponent
        fun Find(Outer: UObject, ResourceName: String): EQSRenderingComponent
        fun GetDefaultObject(): EQSRenderingComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EQSRenderingComponent
        fun C(Other: UObject): EQSRenderingComponent
        fun C(Other: Any): EQSRenderingComponent
    }
}

external object EEnvQueryHightlightMode {
    var All: String /* "All" */
    var Best5Pct: String /* "Best5Pct" */
    var Best25Pct: String /* "Best25Pct" */
    var EEnvQueryHightlightMode_MAX: String /* "EEnvQueryHightlightMode_MAX" */
}

external open class EQSTestingPawn(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Character {
    open var QueryTemplate: EnvQuery
    open var QueryParams: Array<EnvNamedValue>
    open var QueryConfig: Array<AIDynamicParam>
    open var TimeLimitPerStep: Number
    open var StepToDebugDraw: Number
    open var HighlightMode: String /* "All" | "Best5Pct" | "Best25Pct" | "EEnvQueryHightlightMode_MAX" */
    open var bDrawLabels: Boolean
    open var bDrawFailedItems: Boolean
    open var bReRunQueryOnlyOnFinishedMove: Boolean
    open var bShouldBeVisibleInGame: Boolean
    open var bTickDuringGame: Boolean
    open var QueryingMode: String /* "SingleResult" | "RandomBest5Pct" | "RandomBest25Pct" | "AllMatching" | "EEnvQueryRunMode_MAX" */
    open var NavAgentProperties: NavAgentProperties
    open var EdRenderComp: EQSRenderingComponent

    companion object {
        fun GetDefaultObject(): EQSTestingPawn
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EQSTestingPawn
        fun C(Other: UObject): EQSTestingPawn
        fun C(Other: Any): EQSTestingPawn
    }
}

external open class GenericTeamAgentInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GenericTeamAgentInterface
        fun Find(Outer: UObject, ResourceName: String): GenericTeamAgentInterface
        fun GetDefaultObject(): GenericTeamAgentInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GenericTeamAgentInterface
        fun C(Other: UObject): GenericTeamAgentInterface
        fun C(Other: Any): GenericTeamAgentInterface
    }
}

external open class GridPathAIController(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : AIController {
    companion object {
        fun GetDefaultObject(): GridPathAIController
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GridPathAIController
        fun C(Other: UObject): GridPathAIController
        fun C(Other: Any): GridPathAIController
    }
}

external open class GridPathFollowingComponent : PathFollowingComponent {
    constructor()
    constructor(Outer: UObject)
    open var GridManager: NavLocalGridManager

    companion object {
        fun Load(ResourceName: String): GridPathFollowingComponent
        fun Find(Outer: UObject, ResourceName: String): GridPathFollowingComponent
        fun GetDefaultObject(): GridPathFollowingComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GridPathFollowingComponent
        fun C(Other: UObject): GridPathFollowingComponent
        fun C(Other: Any): GridPathFollowingComponent
    }
}

external open class NavFilter_AIControllerDefault : NavigationQueryFilter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NavFilter_AIControllerDefault
        fun Find(Outer: UObject, ResourceName: String): NavFilter_AIControllerDefault
        fun GetDefaultObject(): NavFilter_AIControllerDefault
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavFilter_AIControllerDefault
        fun C(Other: UObject): NavFilter_AIControllerDefault
        fun C(Other: Any): NavFilter_AIControllerDefault
    }
}

external object ENavLinkDirection {
    var BothWays: String /* "BothWays" */
    var LeftToRight: String /* "LeftToRight" */
    var RightToLeft: String /* "RightToLeft" */
    var ENavLinkDirection_MAX: String /* "ENavLinkDirection_MAX" */
}

external open class NavigationLinkBase {
    open var LeftProjectHeight: Number
    open var MaxFallDownLength: Number
    open var SnapRadius: Number
    open var SnapHeight: Number
    open var SupportedAgents: NavAgentSelector
    open var bSupportsAgent0: Boolean
    open var bSupportsAgent1: Boolean
    open var bSupportsAgent2: Boolean
    open var bSupportsAgent3: Boolean
    open var bSupportsAgent4: Boolean
    open var bSupportsAgent5: Boolean
    open var bSupportsAgent6: Boolean
    open var bSupportsAgent7: Boolean
    open var bSupportsAgent8: Boolean
    open var bSupportsAgent9: Boolean
    open var bSupportsAgent10: Boolean
    open var bSupportsAgent11: Boolean
    open var bSupportsAgent12: Boolean
    open var bSupportsAgent13: Boolean
    open var bSupportsAgent14: Boolean
    open var bSupportsAgent15: Boolean
    open var Description: String
    open var Direction: String /* "BothWays" | "LeftToRight" | "RightToLeft" | "ENavLinkDirection_MAX" */
    open var bUseSnapHeight: Boolean
    open var bSnapToCheapestArea: Boolean
    open var bCustomFlag0: Boolean
    open var bCustomFlag1: Boolean
    open var bCustomFlag2: Boolean
    open var bCustomFlag3: Boolean
    open var bCustomFlag4: Boolean
    open var bCustomFlag5: Boolean
    open var bCustomFlag6: Boolean
    open var bCustomFlag7: Boolean
    open var AreaClass: UnrealEngineClass
    open fun clone(): NavigationLinkBase

    companion object {
        fun C(Other: UObject): NavigationLinkBase
        fun C(Other: Any): NavigationLinkBase
    }
}

external open class NavigationLink : NavigationLinkBase {
    open var Left: Vector
    open var Right: Vector
    override fun clone(): NavigationLink

    companion object {
        fun C(Other: UObject): NavigationLink
        fun C(Other: Any): NavigationLink
    }
}

external open class NavigationSegmentLink : NavigationLinkBase {
    open var LeftStart: Vector
    open var LeftEnd: Vector
    open var RightStart: Vector
    open var RightEnd: Vector
    override fun clone(): NavigationSegmentLink

    companion object {
        fun C(Other: UObject): NavigationSegmentLink
        fun C(Other: Any): NavigationSegmentLink
    }
}

external open class NavRelevantComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var bAttachToOwnersRoot: Boolean
    open var CachedNavParent: UObject
    open fun SetNavigationRelevancy(bRelevant: Boolean)

    companion object {
        fun Load(ResourceName: String): NavRelevantComponent
        fun Find(Outer: UObject, ResourceName: String): NavRelevantComponent
        fun GetDefaultObject(): NavRelevantComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavRelevantComponent
        fun C(Other: UObject): NavRelevantComponent
        fun C(Other: Any): NavRelevantComponent
    }
}

external open class NavLinkCustomComponent : NavRelevantComponent {
    constructor()
    constructor(Outer: UObject)
    open var NavLinkUserId: Any
    open var EnabledAreaClass: UnrealEngineClass
    open var DisabledAreaClass: UnrealEngineClass
    open var SupportedAgents: NavAgentSelector
    open var LinkRelativeStart: Vector
    open var LinkRelativeEnd: Vector
    open var LinkDirection: String /* "BothWays" | "LeftToRight" | "RightToLeft" | "ENavLinkDirection_MAX" */
    open var bLinkEnabled: Boolean
    open var bNotifyWhenEnabled: Boolean
    open var bNotifyWhenDisabled: Boolean
    open var bCreateBoxObstacle: Boolean
    open var ObstacleOffset: Vector
    open var ObstacleExtent: Vector
    open var ObstacleAreaClass: UnrealEngineClass
    open var BroadcastRadius: Number
    open var BroadcastInterval: Number
    open var BroadcastChannel: String /* "ECC_WorldStatic" | "ECC_WorldDynamic" | "ECC_Pawn" | "ECC_Visibility" | "ECC_Camera" | "ECC_PhysicsBody" | "ECC_Vehicle" | "ECC_Destructible" | "ECC_EngineTraceChannel1" | "ECC_EngineTraceChannel2" | "ECC_EngineTraceChannel3" | "ECC_EngineTraceChannel4" | "ECC_EngineTraceChannel5" | "ECC_EngineTraceChannel6" | "ECC_GameTraceChannel1" | "ECC_GameTraceChannel2" | "ECC_GameTraceChannel3" | "ECC_GameTraceChannel4" | "ECC_GameTraceChannel5" | "ECC_GameTraceChannel6" | "ECC_GameTraceChannel7" | "ECC_GameTraceChannel8" | "ECC_GameTraceChannel9" | "ECC_GameTraceChannel10" | "ECC_GameTraceChannel11" | "ECC_GameTraceChannel12" | "ECC_GameTraceChannel13" | "ECC_GameTraceChannel14" | "ECC_GameTraceChannel15" | "ECC_GameTraceChannel16" | "ECC_GameTraceChannel17" | "ECC_GameTraceChannel18" | "ECC_OverlapAll_Deprecated" | "ECC_MAX" */

    companion object {
        fun Load(ResourceName: String): NavLinkCustomComponent
        fun Find(Outer: UObject, ResourceName: String): NavLinkCustomComponent
        fun GetDefaultObject(): NavLinkCustomComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavLinkCustomComponent
        fun C(Other: UObject): NavLinkCustomComponent
        fun C(Other: Any): NavLinkCustomComponent
    }
}

external open class NavLinkRenderingComponent : PrimitiveComponent {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NavLinkRenderingComponent
        fun Find(Outer: UObject, ResourceName: String): NavLinkRenderingComponent
        fun GetDefaultObject(): NavLinkRenderingComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavLinkRenderingComponent
        fun C(Other: UObject): NavLinkRenderingComponent
        fun C(Other: Any): NavLinkRenderingComponent
    }
}

external open class NavLinkProxy(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var PointLinks: Array<NavigationLink>
    open var SegmentLinks: Array<NavigationSegmentLink>
    open var SmartLinkComp: NavLinkCustomComponent
    open var bSmartLinkIsRelevant: Boolean
    open var EdRenderComp: NavLinkRenderingComponent
    open var SpriteComponent: BillboardComponent
    open var OnSmartLinkReached: UnrealEngineMulticastDelegate<(MovingActor: Actor, DestinationPoint: Vector) -> Unit>
    open fun SetSmartLinkEnabled(bEnabled: Boolean)
    open fun ResumePathFollowing(Agent: Actor)
    open fun ReceiveSmartLinkReached(Agent: Actor, Destination: Vector)
    open fun IsSmartLinkEnabled(): Boolean
    open fun HasMovingAgents(): Boolean
    open fun CopyEndPointsFromSimpleLink()

    companion object {
        fun GetDefaultObject(): NavLinkProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavLinkProxy
        fun C(Other: UObject): NavLinkProxy
        fun C(Other: Any): NavLinkProxy
    }
}

external open class PathFollowingManager : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PathFollowingManager
        fun Find(Outer: UObject, ResourceName: String): PathFollowingManager
        fun GetDefaultObject(): PathFollowingManager
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PathFollowingManager
        fun C(Other: UObject): PathFollowingManager
        fun C(Other: Any): PathFollowingManager
    }
}

external open class PawnAction_BlueprintBase : PawnAction {
    constructor()
    constructor(Outer: UObject)
    open fun ActionTick(ControlledPawn: Pawn, DeltaSeconds: Number)
    open fun ActionStart(ControlledPawn: Pawn)
    open fun ActionResume(ControlledPawn: Pawn)
    open fun ActionPause(ControlledPawn: Pawn)
    open fun ActionFinished(ControlledPawn: Pawn, WithResult: String /* "NotStarted" | "InProgress" | "Success" | "Failed" | "Aborted" | "EPawnActionResult_MAX" */)

    companion object {
        fun Load(ResourceName: String): PawnAction_BlueprintBase
        fun Find(Outer: UObject, ResourceName: String): PawnAction_BlueprintBase
        fun GetDefaultObject(): PawnAction_BlueprintBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PawnAction_BlueprintBase
        fun C(Other: UObject): PawnAction_BlueprintBase
        fun C(Other: Any): PawnAction_BlueprintBase
    }
}

external open class PawnAction_Move : PawnAction {
    constructor()
    constructor(Outer: UObject)
    open var GoalActor: Actor
    open var GoalLocation: Vector
    open var AcceptableRadius: Number
    open var FilterClass: UnrealEngineClass
    open var bAllowStrafe: Boolean
    open var bFinishOnOverlap: Boolean
    open var bUsePathfinding: Boolean
    open var bAllowPartialPath: Boolean
    open var bProjectGoalToNavigation: Boolean
    open var bUpdatePathToGoal: Boolean
    open var bAbortChildActionOnPathChange: Boolean

    companion object {
        fun Load(ResourceName: String): PawnAction_Move
        fun Find(Outer: UObject, ResourceName: String): PawnAction_Move
        fun GetDefaultObject(): PawnAction_Move
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PawnAction_Move
        fun C(Other: UObject): PawnAction_Move
        fun C(Other: Any): PawnAction_Move
    }
}

external object EPawnActionFailHandling {
    var RequireSuccess: String /* "RequireSuccess" */
    var IgnoreFailure: String /* "IgnoreFailure" */
    var EPawnActionFailHandling_MAX: String /* "EPawnActionFailHandling_MAX" */
}

external open class PawnAction_Repeat : PawnAction {
    constructor()
    constructor(Outer: UObject)
    open var ActionToRepeat: PawnAction
    open var RecentActionCopy: PawnAction
    open var ChildFailureHandlingMode: String /* "RequireSuccess" | "IgnoreFailure" | "EPawnActionFailHandling_MAX" */

    companion object {
        fun Load(ResourceName: String): PawnAction_Repeat
        fun Find(Outer: UObject, ResourceName: String): PawnAction_Repeat
        fun GetDefaultObject(): PawnAction_Repeat
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PawnAction_Repeat
        fun C(Other: UObject): PawnAction_Repeat
        fun C(Other: Any): PawnAction_Repeat
    }
}

external open class PawnAction_Sequence : PawnAction {
    constructor()
    constructor(Outer: UObject)
    open var ActionSequence: Array<PawnAction>
    open var ChildFailureHandlingMode: String /* "RequireSuccess" | "IgnoreFailure" | "EPawnActionFailHandling_MAX" */
    open var RecentActionCopy: PawnAction

    companion object {
        fun Load(ResourceName: String): PawnAction_Sequence
        fun Find(Outer: UObject, ResourceName: String): PawnAction_Sequence
        fun GetDefaultObject(): PawnAction_Sequence
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PawnAction_Sequence
        fun C(Other: UObject): PawnAction_Sequence
        fun C(Other: Any): PawnAction_Sequence
    }
}

external open class PawnAction_Wait : PawnAction {
    constructor()
    constructor(Outer: UObject)
    open var TimeToWait: Number

    companion object {
        fun Load(ResourceName: String): PawnAction_Wait
        fun Find(Outer: UObject, ResourceName: String): PawnAction_Wait
        fun GetDefaultObject(): PawnAction_Wait
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PawnAction_Wait
        fun C(Other: UObject): PawnAction_Wait
        fun C(Other: Any): PawnAction_Wait
    }
}

external open class PawnSensingComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var HearingThreshold: Number
    open var LOSHearingThreshold: Number
    open var SightRadius: Number
    open var SensingInterval: Number
    open var HearingMaxSoundAge: Number
    open var bEnableSensingUpdates: Boolean
    open var bOnlySensePlayers: Boolean
    open var bSeePawns: Boolean
    open var bHearNoises: Boolean
    open var OnSeePawn: UnrealEngineMulticastDelegate<(Pawn: Pawn) -> Unit>
    open var OnHearNoise: UnrealEngineMulticastDelegate<(Instigator: Pawn, Location: Vector, Volume: Number) -> Unit>
    open var PeripheralVisionAngle: Number
    open var PeripheralVisionCosine: Number
    open fun SetSensingUpdatesEnabled(bEnabled: Boolean)
    open fun SetSensingInterval(NewSensingInterval: Number)
    open fun SetPeripheralVisionAngle(NewPeripheralVisionAngle: Number)
    open fun GetPeripheralVisionCosine(): Number
    open fun GetPeripheralVisionAngle(): Number

    companion object {
        fun Load(ResourceName: String): PawnSensingComponent
        fun Find(Outer: UObject, ResourceName: String): PawnSensingComponent
        fun GetDefaultObject(): PawnSensingComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PawnSensingComponent
        fun C(Other: UObject): PawnSensingComponent
        fun C(Other: Any): PawnSensingComponent
    }
}

external open class VisualLoggerExtension : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): VisualLoggerExtension
        fun Find(Outer: UObject, ResourceName: String): VisualLoggerExtension
        fun GetDefaultObject(): VisualLoggerExtension
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VisualLoggerExtension
        fun C(Other: UObject): VisualLoggerExtension
        fun C(Other: Any): VisualLoggerExtension
    }
}

external open class AbstractNavData(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : NavigationData {
    companion object {
        fun GetDefaultObject(): AbstractNavData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AbstractNavData
        fun C(Other: UObject): AbstractNavData
        fun C(Other: Any): AbstractNavData
    }
}

external open class NavAreaMeta : NavArea {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NavAreaMeta
        fun Find(Outer: UObject, ResourceName: String): NavAreaMeta
        fun GetDefaultObject(): NavAreaMeta
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavAreaMeta
        fun C(Other: UObject): NavAreaMeta
        fun C(Other: Any): NavAreaMeta
    }
}

external open class NavAreaMeta_SwitchByAgent : NavAreaMeta {
    constructor()
    constructor(Outer: UObject)
    open var Agent0Area: UnrealEngineClass
    open var Agent1Area: UnrealEngineClass
    open var Agent2Area: UnrealEngineClass
    open var Agent3Area: UnrealEngineClass
    open var Agent4Area: UnrealEngineClass
    open var Agent5Area: UnrealEngineClass
    open var Agent6Area: UnrealEngineClass
    open var Agent7Area: UnrealEngineClass
    open var Agent8Area: UnrealEngineClass
    open var Agent9Area: UnrealEngineClass
    open var Agent10Area: UnrealEngineClass
    open var Agent11Area: UnrealEngineClass
    open var Agent12Area: UnrealEngineClass
    open var Agent13Area: UnrealEngineClass
    open var Agent14Area: UnrealEngineClass
    open var Agent15Area: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): NavAreaMeta_SwitchByAgent
        fun Find(Outer: UObject, ResourceName: String): NavAreaMeta_SwitchByAgent
        fun GetDefaultObject(): NavAreaMeta_SwitchByAgent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavAreaMeta_SwitchByAgent
        fun C(Other: UObject): NavAreaMeta_SwitchByAgent
        fun C(Other: Any): NavAreaMeta_SwitchByAgent
    }
}

external open class NavArea_Default : NavArea {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NavArea_Default
        fun Find(Outer: UObject, ResourceName: String): NavArea_Default
        fun GetDefaultObject(): NavArea_Default
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavArea_Default
        fun C(Other: UObject): NavArea_Default
        fun C(Other: Any): NavArea_Default
    }
}

external open class NavArea_LowHeight : NavArea {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NavArea_LowHeight
        fun Find(Outer: UObject, ResourceName: String): NavArea_LowHeight
        fun GetDefaultObject(): NavArea_LowHeight
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavArea_LowHeight
        fun C(Other: UObject): NavArea_LowHeight
        fun C(Other: Any): NavArea_LowHeight
    }
}

external open class NavArea_Null : NavArea {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NavArea_Null
        fun Find(Outer: UObject, ResourceName: String): NavArea_Null
        fun GetDefaultObject(): NavArea_Null
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavArea_Null
        fun C(Other: UObject): NavArea_Null
        fun C(Other: Any): NavArea_Null
    }
}

external open class NavArea_Obstacle : NavArea {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NavArea_Obstacle
        fun Find(Outer: UObject, ResourceName: String): NavArea_Obstacle
        fun GetDefaultObject(): NavArea_Obstacle
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavArea_Obstacle
        fun C(Other: UObject): NavArea_Obstacle
        fun C(Other: Any): NavArea_Obstacle
    }
}

external open class NavCollisionCylinder {
    open var Offset: Vector
    open var Radius: Number
    open var Height: Number
    open fun clone(): NavCollisionCylinder

    companion object {
        fun C(Other: UObject): NavCollisionCylinder
        fun C(Other: Any): NavCollisionCylinder
    }
}

external open class NavCollisionBox {
    open var Offset: Vector
    open var Extent: Vector
    open fun clone(): NavCollisionBox

    companion object {
        fun C(Other: UObject): NavCollisionBox
        fun C(Other: Any): NavCollisionBox
    }
}

external open class NavCollision : NavCollisionBase {
    constructor()
    constructor(Outer: UObject)
    open var CylinderCollision: Array<NavCollisionCylinder>
    open var BoxCollision: Array<NavCollisionBox>
    open var AreaClass: UnrealEngineClass
    open var bGatherConvexGeometry: Boolean
    open var bCreateOnClient: Boolean

    companion object {
        fun Load(ResourceName: String): NavCollision
        fun Find(Outer: UObject, ResourceName: String): NavCollision
        fun GetDefaultObject(): NavCollision
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavCollision
        fun C(Other: UObject): NavCollision
        fun C(Other: Any): NavCollision
    }
}

external open class NavigationGraph(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : NavigationData {
    companion object {
        fun GetDefaultObject(): NavigationGraph
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavigationGraph
        fun C(Other: UObject): NavigationGraph
        fun C(Other: Any): NavigationGraph
    }
}

external open class NavigationGraphNode(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    companion object {
        fun GetDefaultObject(): NavigationGraphNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavigationGraphNode
        fun C(Other: UObject): NavigationGraphNode
        fun C(Other: Any): NavigationGraphNode
    }
}

external open class NavGraphNode {
    open var Owner: UObject
    open fun clone(): NavGraphNode

    companion object {
        fun C(Other: UObject): NavGraphNode
        fun C(Other: Any): NavGraphNode
    }
}

external open class NavigationGraphNodeComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var UNode: NavGraphNode
    open var NextNodeComponent: NavigationGraphNodeComponent
    open var PrevNodeComponent: NavigationGraphNodeComponent

    companion object {
        fun Load(ResourceName: String): NavigationGraphNodeComponent
        fun Find(Outer: UObject, ResourceName: String): NavigationGraphNodeComponent
        fun GetDefaultObject(): NavigationGraphNodeComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavigationGraphNodeComponent
        fun C(Other: UObject): NavigationGraphNodeComponent
        fun C(Other: Any): NavigationGraphNodeComponent
    }
}

external open class NavigationInvokerComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var TileGenerationRadius: Number
    open var TileRemovalRadius: Number

    companion object {
        fun Load(ResourceName: String): NavigationInvokerComponent
        fun Find(Outer: UObject, ResourceName: String): NavigationInvokerComponent
        fun GetDefaultObject(): NavigationInvokerComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavigationInvokerComponent
        fun C(Other: UObject): NavigationInvokerComponent
        fun C(Other: Any): NavigationInvokerComponent
    }
}

external open class NavigationPathGenerator : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NavigationPathGenerator
        fun Find(Outer: UObject, ResourceName: String): NavigationPathGenerator
        fun GetDefaultObject(): NavigationPathGenerator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavigationPathGenerator
        fun C(Other: UObject): NavigationPathGenerator
        fun C(Other: Any): NavigationPathGenerator
    }
}

external object ENavDataGatheringModeConfig {
    var Invalid: String /* "Invalid" */
    var Instant: String /* "Instant" */
    var Lazy: String /* "Lazy" */
    var ENavDataGatheringModeConfig_MAX: String /* "ENavDataGatheringModeConfig_MAX" */
}

external object FNavigationSystemRunMode {
    var InvalidMode: String /* "InvalidMode" */
    var GameMode: String /* "GameMode" */
    var EditorMode: String /* "EditorMode" */
    var SimulationMode: String /* "SimulationMode" */
    var PIEMode: String /* "PIEMode" */
    var InferFromWorldMode: String /* "InferFromWorldMode" */
    var FNavigationSystemRunMode_MAX: String /* "FNavigationSystemRunMode_MAX" */
}

external open class NavMeshBoundsVolume(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Volume {
    open var SupportedAgents: NavAgentSelector

    companion object {
        fun GetDefaultObject(): NavMeshBoundsVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavMeshBoundsVolume
        fun C(Other: UObject): NavMeshBoundsVolume
        fun C(Other: Any): NavMeshBoundsVolume
    }
}

external object ENavigationQueryResult {
    var Invalid: String /* "Invalid" */
    var Error: String /* "Error" */
    var Fail: String /* "Fail" */
    var Success: String /* "Success" */
    var ENavigationQueryResult_MAX: String /* "ENavigationQueryResult_MAX" */
}

external interface `T$582` {
    var HitLocation: Vector
    var `$`: Boolean
}

external interface `T$583` {
    var ProjectedLocation: Vector
    var `$`: Boolean
}

external interface `T$584` {
    var RandomLocation: Vector
    var `$`: Boolean
}

external interface `T$585` {
    var PathLength: Number
    var `$`: String /* "Invalid" | "Error" | "Fail" | "Success" | "ENavigationQueryResult_MAX" */
}

external interface `T$586` {
    var PathCost: Number
    var `$`: String /* "Invalid" | "Error" | "Fail" | "Success" | "ENavigationQueryResult_MAX" */
}

external open class NavigationSystemV1 : NavigationSystemBase {
    constructor()
    constructor(Outer: UObject)
    open var MainNavData: NavigationData
    open var AbstractNavData: NavigationData
    open var DefaultAgentName: String
    open var CrowdManagerClass: Class
    open var bAutoCreateNavigationData: Boolean
    open var bSpawnNavDataInNavBoundsLevel: Boolean
    open var bAllowClientSideNavigation: Boolean
    open var bShouldDiscardSubLevelNavData: Boolean
    open var bTickWhilePaused: Boolean
    open var bSupportRebuilding: Boolean
    open var bInitialBuildingLocked: Boolean
    open var bSkipAgentHeightCheckWhenPickingNavData: Boolean
    open var bGenerateNavigationOnlyAroundNavigationInvokers: Boolean
    open var ActiveTilesUpdateInterval: Number
    open var DataGatheringMode: String /* "Invalid" | "Instant" | "Lazy" | "ENavDataGatheringModeConfig_MAX" */
    open var DirtyAreaWarningSizeThreshold: Number
    open var GatheringNavModifiersWarningLimitTime: Number
    open var SupportedAgents: Array<NavDataConfig>
    open var SupportedAgentsMask: NavAgentSelector
    open var BuildBounds: Box
    open var NavDataSet: Array<NavigationData>
    open var NavDataRegistrationQueue: Array<NavigationData>
    open var OnNavDataRegisteredEvent: UnrealEngineMulticastDelegate<(NavData: NavigationData) -> Unit>
    open var OnNavigationGenerationFinishedDelegate: UnrealEngineMulticastDelegate<(NavData: NavigationData) -> Unit>
    open var OperationMode: String /* "InvalidMode" | "GameMode" | "EditorMode" | "SimulationMode" | "PIEMode" | "InferFromWorldMode" | "FNavigationSystemRunMode_MAX" */
    open var DirtyAreasUpdateFreq: Number
    open fun UnregisterNavigationInvoker(Invoker: Actor)
    open fun SetMaxSimultaneousTileGenerationJobsCount(MaxNumberOfJobs: Number)
    open fun SetGeometryGatheringMode(NewMode: String /* "Invalid" | "Instant" | "Lazy" | "ENavDataGatheringModeConfig_MAX" */)
    open fun ResetMaxSimultaneousTileGenerationJobsCount()
    open fun RegisterNavigationInvoker(Invoker: Actor, TileGenerationRadius: Number, TileRemovalRadius: Number)
    open fun OnNavigationBoundsUpdated(NavVolume: NavMeshBoundsVolume)
    open fun ReplaceAreaInOctreeData(UObject: UObject, OldArea: UnrealEngineClass, NewArea: UnrealEngineClass): Boolean

    companion object {
        fun Load(ResourceName: String): NavigationSystemV1
        fun Find(Outer: UObject, ResourceName: String): NavigationSystemV1
        fun GetDefaultObject(): NavigationSystemV1
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavigationSystemV1
        fun SimpleMoveToLocation(Controller: Controller, Goal: Vector)
        fun SimpleMoveToActor(Controller: Controller, Goal: Actor)
        fun ProjectPointToNavigation_DEPRECATED(WorldContextObject: UObject, Point: Vector, NavData: NavigationData, FilterClass: UnrealEngineClass, QueryExtent: Vector): Vector
        fun NavigationRaycast(WorldContextObject: UObject, RayStart: Vector, RayEnd: Vector, HitLocation: Vector = definedExternally, FilterClass: UnrealEngineClass = definedExternally, Querier: Controller = definedExternally): `T$582`
        fun ProjectPointToNavigation(WorldContextObject: UObject, Point: Vector, ProjectedLocation: Vector = definedExternally, NavData: NavigationData = definedExternally, FilterClass: UnrealEngineClass = definedExternally, QueryExtent: Vector = definedExternally): `T$583`
        fun GetRandomReachablePointInRadius(WorldContextObject: UObject, Origin: Vector, RandomLocation: Vector = definedExternally, Radius: Number = definedExternally, NavData: NavigationData = definedExternally, FilterClass: UnrealEngineClass = definedExternally): `T$584`
        fun GetRandomPointInNavigableRadius(WorldContextObject: UObject, Origin: Vector, RandomLocation: Vector = definedExternally, Radius: Number = definedExternally, NavData: NavigationData = definedExternally, FilterClass: UnrealEngineClass = definedExternally): `T$584`
        fun GetRandomLocationInNavigableRadius(WorldContextObject: UObject, Origin: Vector, RandomLocation: Vector = definedExternally, Radius: Number = definedExternally, NavData: NavigationData = definedExternally, FilterClass: UnrealEngineClass = definedExternally): `T$584`
        fun IsNavigationBeingBuiltOrLocked(WorldContextObject: UObject): Boolean
        fun IsNavigationBeingBuilt(WorldContextObject: UObject): Boolean
        fun GetRandomReachablePointInRadius_DEPRECATED(WorldContextObject: UObject, Origin: Vector, Radius: Number, NavData: NavigationData, FilterClass: UnrealEngineClass): Vector
        fun GetRandomPointInNavigableRadius_DEPRECATED(WorldContextObject: UObject, Origin: Vector, Radius: Number, NavData: NavigationData, FilterClass: UnrealEngineClass): Vector
        fun GetPathLength(WorldContextObject: UObject, PathStart: Vector, PathEnd: Vector, PathLength: Number = definedExternally, NavData: NavigationData = definedExternally, FilterClass: UnrealEngineClass = definedExternally): `T$585`
        fun GetPathCost(WorldContextObject: UObject, PathStart: Vector, PathEnd: Vector, PathCost: Number = definedExternally, NavData: NavigationData = definedExternally, FilterClass: UnrealEngineClass = definedExternally): `T$586`
        fun GetNavigationSystem(WorldContextObject: UObject): NavigationSystemV1
        fun FindPathToLocationSynchronously(WorldContextObject: UObject, PathStart: Vector, PathEnd: Vector, PathfindingContext: Actor, FilterClass: UnrealEngineClass): NavigationPath
        fun FindPathToActorSynchronously(WorldContextObject: UObject, PathStart: Vector, GoalActor: Actor, TetherDistance: Number, PathfindingContext: Actor, FilterClass: UnrealEngineClass): NavigationPath
        fun C(Other: UObject): NavigationSystemV1
        fun C(Other: Any): NavigationSystemV1
    }
}

external open class NavigationSystemModuleConfig : NavigationSystemConfig {
    constructor()
    constructor(Outer: UObject)
    open var bStrictlyStatic: Boolean
    open var bCreateOnClient: Boolean
    open var bAutoSpawnMissingNavData: Boolean
    open var bSpawnNavDataInNavBoundsLevel: Boolean

    companion object {
        fun Load(ResourceName: String): NavigationSystemModuleConfig
        fun Find(Outer: UObject, ResourceName: String): NavigationSystemModuleConfig
        fun GetDefaultObject(): NavigationSystemModuleConfig
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavigationSystemModuleConfig
        fun C(Other: UObject): NavigationSystemModuleConfig
        fun C(Other: Any): NavigationSystemModuleConfig
    }
}

external open class NavTestRenderingComponent : DebugDrawComponent {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NavTestRenderingComponent
        fun Find(Outer: UObject, ResourceName: String): NavTestRenderingComponent
        fun GetDefaultObject(): NavTestRenderingComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavTestRenderingComponent
        fun C(Other: UObject): NavTestRenderingComponent
        fun C(Other: Any): NavTestRenderingComponent
    }
}

external object ENavCostDisplay {
    var TotalCost: String /* "TotalCost" */
    var HeuristicOnly: String /* "HeuristicOnly" */
    var RealCostOnly: String /* "RealCostOnly" */
    var ENavCostDisplay_MAX: String /* "ENavCostDisplay_MAX" */
}

external open class NavigationTestingActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var CapsuleComponent: CapsuleComponent
    open var EdRenderComp: NavTestRenderingComponent
    open var InvokerComponent: NavigationInvokerComponent
    open var bActAsNavigationInvoker: Boolean
    open var NavAgentProps: NavAgentProperties
    open var QueryingExtent: Vector
    open var MyNavData: NavigationData
    open var ProjectedLocation: Vector
    open var bProjectedLocationValid: Boolean
    open var bSearchStart: Boolean
    open var CostLimitFactor: Number
    open var MinimumCostLimit: Number
    open var bBacktracking: Boolean
    open var bUseHierarchicalPathfinding: Boolean
    open var bGatherDetailedInfo: Boolean
    open var bDrawDistanceToWall: Boolean
    open var bShowNodePool: Boolean
    open var bShowBestPath: Boolean
    open var bShowDiffWithPreviousStep: Boolean
    open var bShouldBeVisibleInGame: Boolean
    open var CostDisplayMode: String /* "TotalCost" | "HeuristicOnly" | "RealCostOnly" | "ENavCostDisplay_MAX" */
    open var TextCanvasOffset: Vector2D
    open var bPathExist: Boolean
    open var bPathIsPartial: Boolean
    open var bPathSearchOutOfNodes: Boolean
    open var PathfindingTime: Number
    open var PathCost: Number
    open var PathfindingSteps: Number
    open var OtherActor: NavigationTestingActor
    open var FilterClass: UnrealEngineClass
    open var ShowStepIndex: Number
    open var OffsetFromCornersDistance: Number

    companion object {
        fun GetDefaultObject(): NavigationTestingActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavigationTestingActor
        fun C(Other: UObject): NavigationTestingActor
        fun C(Other: Any): NavigationTestingActor
    }
}

external open class NavLinkComponent : PrimitiveComponent {
    constructor()
    constructor(Outer: UObject)
    open var Links: Array<NavigationLink>

    companion object {
        fun Load(ResourceName: String): NavLinkComponent
        fun Find(Outer: UObject, ResourceName: String): NavLinkComponent
        fun GetDefaultObject(): NavLinkComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavLinkComponent
        fun C(Other: UObject): NavLinkComponent
        fun C(Other: Any): NavLinkComponent
    }
}

external open class NavLinkCustomInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NavLinkCustomInterface
        fun Find(Outer: UObject, ResourceName: String): NavLinkCustomInterface
        fun GetDefaultObject(): NavLinkCustomInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavLinkCustomInterface
        fun C(Other: UObject): NavLinkCustomInterface
        fun C(Other: Any): NavLinkCustomInterface
    }
}

external open class NavLinkHostInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NavLinkHostInterface
        fun Find(Outer: UObject, ResourceName: String): NavLinkHostInterface
        fun GetDefaultObject(): NavLinkHostInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavLinkHostInterface
        fun C(Other: UObject): NavLinkHostInterface
        fun C(Other: Any): NavLinkHostInterface
    }
}

external open class NavLinkDefinition : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Links: Array<NavigationLink>
    open var SegmentLinks: Array<NavigationSegmentLink>

    companion object {
        fun Load(ResourceName: String): NavLinkDefinition
        fun Find(Outer: UObject, ResourceName: String): NavLinkDefinition
        fun GetDefaultObject(): NavLinkDefinition
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavLinkDefinition
        fun C(Other: UObject): NavLinkDefinition
        fun C(Other: Any): NavLinkDefinition
    }
}

external open class NavLinkTrivial : NavLinkDefinition {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NavLinkTrivial
        fun Find(Outer: UObject, ResourceName: String): NavLinkTrivial
        fun GetDefaultObject(): NavLinkTrivial
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavLinkTrivial
        fun C(Other: UObject): NavLinkTrivial
        fun C(Other: Any): NavLinkTrivial
    }
}

external open class NavMeshRenderingComponent : DebugDrawComponent {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NavMeshRenderingComponent
        fun Find(Outer: UObject, ResourceName: String): NavMeshRenderingComponent
        fun GetDefaultObject(): NavMeshRenderingComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavMeshRenderingComponent
        fun C(Other: UObject): NavMeshRenderingComponent
        fun C(Other: Any): NavMeshRenderingComponent
    }
}

external open class NavModifierComponent : NavRelevantComponent {
    constructor()
    constructor(Outer: UObject)
    open var AreaClass: UnrealEngineClass
    open var FailsafeExtent: Vector
    open var bIncludeAgentHeight: Boolean
    open fun SetAreaClass(NewAreaClass: UnrealEngineClass)

    companion object {
        fun Load(ResourceName: String): NavModifierComponent
        fun Find(Outer: UObject, ResourceName: String): NavModifierComponent
        fun GetDefaultObject(): NavModifierComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavModifierComponent
        fun C(Other: UObject): NavModifierComponent
        fun C(Other: Any): NavModifierComponent
    }
}

external open class NavModifierVolume(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Volume {
    open var AreaClass: UnrealEngineClass
    open var bMaskFillCollisionUnderneathForNavmesh: Boolean
    open fun SetAreaClass(NewAreaClass: UnrealEngineClass)

    companion object {
        fun GetDefaultObject(): NavModifierVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavModifierVolume
        fun C(Other: UObject): NavModifierVolume
        fun C(Other: Any): NavModifierVolume
    }
}

external open class NavNodeInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NavNodeInterface
        fun Find(Outer: UObject, ResourceName: String): NavNodeInterface
        fun GetDefaultObject(): NavNodeInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavNodeInterface
        fun C(Other: UObject): NavNodeInterface
        fun C(Other: Any): NavNodeInterface
    }
}

external object ENavSystemOverridePolicy {
    var Override: String /* "Override" */
    var Append: String /* "Append" */
    var Skip: String /* "Skip" */
    var ENavSystemOverridePolicy_MAX: String /* "ENavSystemOverridePolicy_MAX" */
}

external open class NavSystemConfigOverride(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var SpriteComponent: BillboardComponent
    open var NavigationSystemConfig: NavigationSystemConfig
    open var OverridePolicy: String /* "Override" | "Append" | "Skip" | "ENavSystemOverridePolicy_MAX" */
    open var bLoadOnClient: Boolean
    open fun ApplyChanges()

    companion object {
        fun GetDefaultObject(): NavSystemConfigOverride
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavSystemConfigOverride
        fun C(Other: UObject): NavSystemConfigOverride
        fun C(Other: Any): NavSystemConfigOverride
    }
}

external open class RecastFilter_UseDefaultArea : NavigationQueryFilter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): RecastFilter_UseDefaultArea
        fun Find(Outer: UObject, ResourceName: String): RecastFilter_UseDefaultArea
        fun GetDefaultObject(): RecastFilter_UseDefaultArea
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RecastFilter_UseDefaultArea
        fun C(Other: UObject): RecastFilter_UseDefaultArea
        fun C(Other: Any): RecastFilter_UseDefaultArea
    }
}

external open class RecastNavMeshDataChunk : NavigationDataChunk {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): RecastNavMeshDataChunk
        fun Find(Outer: UObject, ResourceName: String): RecastNavMeshDataChunk
        fun GetDefaultObject(): RecastNavMeshDataChunk
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RecastNavMeshDataChunk
        fun C(Other: UObject): RecastNavMeshDataChunk
        fun C(Other: Any): RecastNavMeshDataChunk
    }
}

external object ETimezoneSetting {
    var InternationalDateLineWest: String /* "InternationalDateLineWest" */
    var CoordinatedUniversalTimeNeg11: String /* "CoordinatedUniversalTimeNeg11" */
    var Samoa: String /* "Samoa" */
    var Hawaii: String /* "Hawaii" */
    var Alaska: String /* "Alaska" */
    var PacificTime_USCAN: String /* "PacificTime_USCAN" */
    var BajaCalifornia: String /* "BajaCalifornia" */
    var MountainTime_USCAN: String /* "MountainTime_USCAN" */
    var Chihuahua_LaPaz_Mazatlan: String /* "Chihuahua_LaPaz_Mazatlan" */
    var Arizona: String /* "Arizona" */
    var Saskatchewan: String /* "Saskatchewan" */
    var CentralAmerica: String /* "CentralAmerica" */
    var CentralTime_USCAN: String /* "CentralTime_USCAN" */
    var Guadalajara_MexicoCity_Monterrey: String /* "Guadalajara_MexicoCity_Monterrey" */
    var EasternTime_USCAN: String /* "EasternTime_USCAN" */
    var Bogota_Lima_Quito: String /* "Bogota_Lima_Quito" */
    var Indiana_US: String /* "Indiana_US" */
    var Caracas: String /* "Caracas" */
    var AtlanticTime_Canada: String /* "AtlanticTime_Canada" */
    var Cuiaba: String /* "Cuiaba" */
    var Santiago: String /* "Santiago" */
    var Georgetown_LaPaz_Manaus_SanJuan: String /* "Georgetown_LaPaz_Manaus_SanJuan" */
    var Asuncion: String /* "Asuncion" */
    var Newfoundland: String /* "Newfoundland" */
    var Brasilia: String /* "Brasilia" */
    var Greenland: String /* "Greenland" */
    var Montevideo: String /* "Montevideo" */
    var Cayenne_Fortaleza: String /* "Cayenne_Fortaleza" */
    var BuenosAires: String /* "BuenosAires" */
    var MidAtlantic: String /* "MidAtlantic" */
    var CoordinatedUniversalTimeNeg02: String /* "CoordinatedUniversalTimeNeg02" */
    var Azores: String /* "Azores" */
    var CaboVerdeIs: String /* "CaboVerdeIs" */
    var Dublin_Edinburgh_Lisbon_London: String /* "Dublin_Edinburgh_Lisbon_London" */
    var Monrovia_Reykjavik: String /* "Monrovia_Reykjavik" */
    var Casablanca: String /* "Casablanca" */
    var UTC: String /* "UTC" */
    var Belgrade_Bratislava_Budapest_Ljubljana_Prague: String /* "Belgrade_Bratislava_Budapest_Ljubljana_Prague" */
    var Sarajevo_Skopje_Warsaw_Zagreb: String /* "Sarajevo_Skopje_Warsaw_Zagreb" */
    var Brussels_Copenhagen_Madrid_Paris: String /* "Brussels_Copenhagen_Madrid_Paris" */
    var WestCentralAfrica: String /* "WestCentralAfrica" */
    var Amsterdam_Berlin_Bern_Rome_Stockholm_Vienna: String /* "Amsterdam_Berlin_Bern_Rome_Stockholm_Vienna" */
    var Windhoek: String /* "Windhoek" */
    var Minsk: String /* "Minsk" */
    var Cairo: String /* "Cairo" */
    var Helsinki_Kyiv_Riga_Sofia_Tallinn_Vilnius: String /* "Helsinki_Kyiv_Riga_Sofia_Tallinn_Vilnius" */
    var Athens_Bucharest: String /* "Athens_Bucharest" */
    var Jerusalem: String /* "Jerusalem" */
    var Amman: String /* "Amman" */
    var Beirut: String /* "Beirut" */
    var Harare_Pretoria: String /* "Harare_Pretoria" */
    var Damascus: String /* "Damascus" */
    var Istanbul: String /* "Istanbul" */
    var Kuwait_Riyadh: String /* "Kuwait_Riyadh" */
    var Baghdad: String /* "Baghdad" */
    var Nairobi: String /* "Nairobi" */
    var Kaliningrad: String /* "Kaliningrad" */
    var Tehran: String /* "Tehran" */
    var Moscow_StPetersburg_Volgograd: String /* "Moscow_StPetersburg_Volgograd" */
    var AbuDhabi_Muscat: String /* "AbuDhabi_Muscat" */
    var Baku: String /* "Baku" */
    var Yerevan: String /* "Yerevan" */
    var Tbilisi: String /* "Tbilisi" */
    var PortLouis: String /* "PortLouis" */
    var Kabul: String /* "Kabul" */
    var Tashkent: String /* "Tashkent" */
    var Islamabad_Karachi: String /* "Islamabad_Karachi" */
    var Chennai_Kolkata_Mumbai_NewDelhi: String /* "Chennai_Kolkata_Mumbai_NewDelhi" */
    var SriJayawardenepura: String /* "SriJayawardenepura" */
    var Kathmandu: String /* "Kathmandu" */
    var Ekaterinburg: String /* "Ekaterinburg" */
    var Astana: String /* "Astana" */
    var Dhaka: String /* "Dhaka" */
    var Yangon_Rangoon: String /* "Yangon_Rangoon" */
    var Novosibirsk: String /* "Novosibirsk" */
    var Bangkok_Hanoi_Jakarta: String /* "Bangkok_Hanoi_Jakarta" */
    var Krasnoyarsk: String /* "Krasnoyarsk" */
    var Beijing_Chongqing_HongKong_Urumqi: String /* "Beijing_Chongqing_HongKong_Urumqi" */
    var KualaLumpur_Singapore: String /* "KualaLumpur_Singapore" */
    var Taipei: String /* "Taipei" */
    var Perth: String /* "Perth" */
    var Ulaanbaatar: String /* "Ulaanbaatar" */
    var Irkutsk: String /* "Irkutsk" */
    var Seoul: String /* "Seoul" */
    var Osaka_Sapporo_Tokyo: String /* "Osaka_Sapporo_Tokyo" */
    var Darwin: String /* "Darwin" */
    var Adelaide: String /* "Adelaide" */
    var Yakutsk: String /* "Yakutsk" */
    var Canberra_Melbourne_Sydney: String /* "Canberra_Melbourne_Sydney" */
    var Brisbane: String /* "Brisbane" */
    var Hobart: String /* "Hobart" */
    var Guam_PortMoresby: String /* "Guam_PortMoresby" */
    var Vladivostok: String /* "Vladivostok" */
    var SolomonIs_NewCaledonia: String /* "SolomonIs_NewCaledonia" */
    var Magadan: String /* "Magadan" */
    var Fiji: String /* "Fiji" */
    var Auckland_Wellington: String /* "Auckland_Wellington" */
    var CoordinatedUniversalTime12: String /* "CoordinatedUniversalTime12" */
    var Nukualofa: String /* "Nukualofa" */
    var LocalTime: String /* "LocalTime" */
    var ETimezoneSetting_MAX: String /* "ETimezoneSetting_MAX" */
}

external open class InternationalizationSettingsModel : UObject {
    constructor()
    constructor(Outer: UObject)
    open var DisplayTimezone: String /* "InternationalDateLineWest" | "CoordinatedUniversalTimeNeg11" | "Samoa" | "Hawaii" | "Alaska" | "PacificTime_USCAN" | "BajaCalifornia" | "MountainTime_USCAN" | "Chihuahua_LaPaz_Mazatlan" | "Arizona" | "Saskatchewan" | "CentralAmerica" | "CentralTime_USCAN" | "Guadalajara_MexicoCity_Monterrey" | "EasternTime_USCAN" | "Bogota_Lima_Quito" | "Indiana_US" | "Caracas" | "AtlanticTime_Canada" | "Cuiaba" | "Santiago" | "Georgetown_LaPaz_Manaus_SanJuan" | "Asuncion" | "Newfoundland" | "Brasilia" | "Greenland" | "Montevideo" | "Cayenne_Fortaleza" | "BuenosAires" | "MidAtlantic" | "CoordinatedUniversalTimeNeg02" | "Azores" | "CaboVerdeIs" | "Dublin_Edinburgh_Lisbon_London" | "Monrovia_Reykjavik" | "Casablanca" | "UTC" | "Belgrade_Bratislava_Budapest_Ljubljana_Prague" | "Sarajevo_Skopje_Warsaw_Zagreb" | "Brussels_Copenhagen_Madrid_Paris" | "WestCentralAfrica" | "Amsterdam_Berlin_Bern_Rome_Stockholm_Vienna" | "Windhoek" | "Minsk" | "Cairo" | "Helsinki_Kyiv_Riga_Sofia_Tallinn_Vilnius" | "Athens_Bucharest" | "Jerusalem" | "Amman" | "Beirut" | "Harare_Pretoria" | "Damascus" | "Istanbul" | "Kuwait_Riyadh" | "Baghdad" | "Nairobi" | "Kaliningrad" | "Tehran" | "Moscow_StPetersburg_Volgograd" | "AbuDhabi_Muscat" | "Baku" | "Yerevan" | "Tbilisi" | "PortLouis" | "Kabul" | "Tashkent" | "Islamabad_Karachi" | "Chennai_Kolkata_Mumbai_NewDelhi" | "SriJayawardenepura" | "Kathmandu" | "Ekaterinburg" | "Astana" | "Dhaka" | "Yangon_Rangoon" | "Novosibirsk" | "Bangkok_Hanoi_Jakarta" | "Krasnoyarsk" | "Beijing_Chongqing_HongKong_Urumqi" | "KualaLumpur_Singapore" | "Taipei" | "Perth" | "Ulaanbaatar" | "Irkutsk" | "Seoul" | "Osaka_Sapporo_Tokyo" | "Darwin" | "Adelaide" | "Yakutsk" | "Canberra_Melbourne_Sydney" | "Brisbane" | "Hobart" | "Guam_PortMoresby" | "Vladivostok" | "SolomonIs_NewCaledonia" | "Magadan" | "Fiji" | "Auckland_Wellington" | "CoordinatedUniversalTime12" | "Nukualofa" | "LocalTime" | "ETimezoneSetting_MAX" */

    companion object {
        fun Load(ResourceName: String): InternationalizationSettingsModel
        fun Find(Outer: UObject, ResourceName: String): InternationalizationSettingsModel
        fun GetDefaultObject(): InternationalizationSettingsModel
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InternationalizationSettingsModel
        fun C(Other: UObject): InternationalizationSettingsModel
        fun C(Other: Any): InternationalizationSettingsModel
    }
}

external open class SplineMetadataDetailsFactoryBase : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SplineMetadataDetailsFactoryBase
        fun Find(Outer: UObject, ResourceName: String): SplineMetadataDetailsFactoryBase
        fun GetDefaultObject(): SplineMetadataDetailsFactoryBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SplineMetadataDetailsFactoryBase
        fun C(Other: UObject): SplineMetadataDetailsFactoryBase
        fun C(Other: Any): SplineMetadataDetailsFactoryBase
    }
}

external open class ActorFactory : UObject {
    constructor()
    constructor(Outer: UObject)
    open var DisplayName: String
    open var MenuPriority: Number
    open var NewActorClassName: String
    open var NewActorClass: UnrealEngineClass
    open var bShowInEditorQuickMenu: Boolean
    open var bUseSurfaceOrientation: Boolean
    open var bUsePlacementExtent: Boolean
    open var SpawnPositionOffset: Vector

    companion object {
        fun Load(ResourceName: String): ActorFactory
        fun Find(Outer: UObject, ResourceName: String): ActorFactory
        fun GetDefaultObject(): ActorFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactory
        fun C(Other: UObject): ActorFactory
        fun C(Other: Any): ActorFactory
    }
}

external open class ActorFactoryVolume : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryVolume
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryVolume
        fun GetDefaultObject(): ActorFactoryVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryVolume
        fun C(Other: UObject): ActorFactoryVolume
        fun C(Other: Any): ActorFactoryVolume
    }
}

external open class ActorFactoryBoxVolume : ActorFactoryVolume {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryBoxVolume
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryBoxVolume
        fun GetDefaultObject(): ActorFactoryBoxVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryBoxVolume
        fun C(Other: UObject): ActorFactoryBoxVolume
        fun C(Other: Any): ActorFactoryBoxVolume
    }
}

external open class ActorFactoryProceduralFoliage : ActorFactoryBoxVolume {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryProceduralFoliage
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryProceduralFoliage
        fun GetDefaultObject(): ActorFactoryProceduralFoliage
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryProceduralFoliage
        fun C(Other: UObject): ActorFactoryProceduralFoliage
        fun C(Other: Any): ActorFactoryProceduralFoliage
    }
}

external open class FoliageType_InstancedStaticMeshFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): FoliageType_InstancedStaticMeshFactory
        fun Find(Outer: UObject, ResourceName: String): FoliageType_InstancedStaticMeshFactory
        fun GetDefaultObject(): FoliageType_InstancedStaticMeshFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FoliageType_InstancedStaticMeshFactory
        fun C(Other: UObject): FoliageType_InstancedStaticMeshFactory
        fun C(Other: Any): FoliageType_InstancedStaticMeshFactory
    }
}

external open class FoliageType_ActorFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): FoliageType_ActorFactory
        fun Find(Outer: UObject, ResourceName: String): FoliageType_ActorFactory
        fun GetDefaultObject(): FoliageType_ActorFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FoliageType_ActorFactory
        fun C(Other: UObject): FoliageType_ActorFactory
        fun C(Other: Any): FoliageType_ActorFactory
    }
}

external open class BlueprintThumbnailRenderer : DefaultSizedThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlueprintThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): BlueprintThumbnailRenderer
        fun GetDefaultObject(): BlueprintThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintThumbnailRenderer
        fun C(Other: UObject): BlueprintThumbnailRenderer
        fun C(Other: Any): BlueprintThumbnailRenderer
    }
}

external open class FoliageType_ActorThumbnailRenderer : BlueprintThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): FoliageType_ActorThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): FoliageType_ActorThumbnailRenderer
        fun GetDefaultObject(): FoliageType_ActorThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FoliageType_ActorThumbnailRenderer
        fun C(Other: UObject): FoliageType_ActorThumbnailRenderer
        fun C(Other: Any): FoliageType_ActorThumbnailRenderer
    }
}

external open class FoliageType_ISMThumbnailRenderer : DefaultSizedThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): FoliageType_ISMThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): FoliageType_ISMThumbnailRenderer
        fun GetDefaultObject(): FoliageType_ISMThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FoliageType_ISMThumbnailRenderer
        fun C(Other: UObject): FoliageType_ISMThumbnailRenderer
        fun C(Other: Any): FoliageType_ISMThumbnailRenderer
    }
}

external open class LandscapeGrassTypeFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LandscapeGrassTypeFactory
        fun Find(Outer: UObject, ResourceName: String): LandscapeGrassTypeFactory
        fun GetDefaultObject(): LandscapeGrassTypeFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LandscapeGrassTypeFactory
        fun C(Other: UObject): LandscapeGrassTypeFactory
        fun C(Other: Any): LandscapeGrassTypeFactory
    }
}

external object EFoliageScaling {
    var Uniform: String /* "Uniform" */
    var Free: String /* "Free" */
    var LockXY: String /* "LockXY" */
    var LockXZ: String /* "LockXZ" */
    var LockYZ: String /* "LockYZ" */
    var EFoliageScaling_MAX: String /* "EFoliageScaling_MAX" */
}

external open class FloatInterval {
    open var Min: Number
    open var Max: Number
    open fun clone(): FloatInterval

    companion object {
        fun C(Other: UObject): FloatInterval
        fun C(Other: Any): FloatInterval
    }
}

external open class FoliageVertexColorChannelMask {
    open var UseMask: Boolean
    open var MaskThreshold: Number
    open var InvertMask: Boolean
    open fun clone(): FoliageVertexColorChannelMask

    companion object {
        fun C(Other: UObject): FoliageVertexColorChannelMask
        fun C(Other: Any): FoliageVertexColorChannelMask
    }
}

external object FoliageVertexColorMask {
    var FOLIAGEVERTEXCOLORMASK_Disabled: String /* "FOLIAGEVERTEXCOLORMASK_Disabled" */
    var FOLIAGEVERTEXCOLORMASK_Red: String /* "FOLIAGEVERTEXCOLORMASK_Red" */
    var FOLIAGEVERTEXCOLORMASK_Green: String /* "FOLIAGEVERTEXCOLORMASK_Green" */
    var FOLIAGEVERTEXCOLORMASK_Blue: String /* "FOLIAGEVERTEXCOLORMASK_Blue" */
    var FOLIAGEVERTEXCOLORMASK_Alpha: String /* "FOLIAGEVERTEXCOLORMASK_Alpha" */
    var FOLIAGEVERTEXCOLORMASK_MAX: String /* "FOLIAGEVERTEXCOLORMASK_MAX" */
}

external open class Int32Interval {
    open var Min: Number
    open var Max: Number
    open fun clone(): Int32Interval

    companion object {
        fun C(Other: UObject): Int32Interval
        fun C(Other: Any): Int32Interval
    }
}

external open class FoliageDensityFalloff {
    open var bUseFalloffCurve: Boolean
    open var FalloffCurve: RuntimeFloatCurve
    open fun clone(): FoliageDensityFalloff

    companion object {
        fun C(Other: UObject): FoliageDensityFalloff
        fun C(Other: Any): FoliageDensityFalloff
    }
}

external open class FoliageType : UObject {
    constructor()
    constructor(Outer: UObject)
    open var UpdateGuid: Guid
    open var Density: Number
    open var DensityAdjustmentFactor: Number
    open var Radius: Number
    open var bSingleInstanceModeOverrideRadius: Boolean
    open var SingleInstanceModeRadius: Number
    open var Scaling: String /* "Uniform" | "Free" | "LockXY" | "LockXZ" | "LockYZ" | "EFoliageScaling_MAX" */
    open var ScaleX: FloatInterval
    open var ScaleY: FloatInterval
    open var ScaleZ: FloatInterval
    open var VertexColorMaskByChannel: FoliageVertexColorChannelMask
    open var VertexColorMask: String /* "FOLIAGEVERTEXCOLORMASK_Disabled" | "FOLIAGEVERTEXCOLORMASK_Red" | "FOLIAGEVERTEXCOLORMASK_Green" | "FOLIAGEVERTEXCOLORMASK_Blue" | "FOLIAGEVERTEXCOLORMASK_Alpha" | "FOLIAGEVERTEXCOLORMASK_MAX" */
    open var VertexColorMaskThreshold: Number
    open var VertexColorMaskInvert: Boolean
    open var ZOffset: FloatInterval
    open var AlignToNormal: Boolean
    open var AverageNormal: Boolean
    open var AverageNormalSingleComponent: Boolean
    open var AlignMaxAngle: Number
    open var RandomYaw: Boolean
    open var RandomPitchAngle: Number
    open var GroundSlopeAngle: FloatInterval
    open var Height: FloatInterval
    open var LandscapeLayers: Array<String>
    open var MinimumLayerWeight: Number
    open var ExclusionLandscapeLayers: Array<String>
    open var MinimumExclusionLayerWeight: Number
    open var LandscapeLayer: String
    open var CollisionWithWorld: Boolean
    open var CollisionScale: Vector
    open var AverageNormalSampleCount: Number
    open var MeshBounds: BoxSphereBounds
    open var LowBoundOriginRadius: Vector
    open var Mobility: String /* "Static" | "Stationary" | "Movable" | "EComponentMobility_MAX" */
    open var CullDistance: Int32Interval
    open var bEnableStaticLighting: Boolean
    open var CastShadow: Boolean
    open var bAffectDynamicIndirectLighting: Boolean
    open var bAffectDistanceFieldLighting: Boolean
    open var bCastDynamicShadow: Boolean
    open var bCastStaticShadow: Boolean
    open var bCastContactShadow: Boolean
    open var bCastShadowAsTwoSided: Boolean
    open var bReceivesDecals: Boolean
    open var bOverrideLightMapRes: Boolean
    open var OverriddenLightMapRes: Number
    open var LightmapType: String /* "Default" | "ForceSurface" | "ForceVolumetric" | "ELightmapType_MAX" */
    open var bUseAsOccluder: Boolean
    open var bVisibleInRayTracing: Boolean
    open var bEvaluateWorldPositionOffset: Boolean
    open var BodyInstance: BodyInstance
    open var CustomNavigableGeometry: String /* "No" | "Yes" | "EvenIfNotCollidable" | "DontExport" | "EHasCustomNavigableGeometry_MAX" */
    open var LightingChannels: LightingChannels
    open var bRenderCustomDepth: Boolean
    open var CustomDepthStencilWriteMask: String /* "ERSM_Default" | "ERSM_255" | "ERSM_1" | "ERSM_2" | "ERSM_4" | "ERSM_8" | "ERSM_16" | "ERSM_32" | "ERSM_64" | "ERSM_128" | "ERSM_MAX" */
    open var CustomDepthStencilValue: Number
    open var TranslucencySortPriority: Number
    open var HiddenEditorViews: Any
    open var IsSelected: Boolean
    open var CollisionRadius: Number
    open var ShadeRadius: Number
    open var NumSteps: Number
    open var InitialSeedDensity: Number
    open var AverageSpreadDistance: Number
    open var SpreadVariance: Number
    open var SeedsPerStep: Number
    open var DistributionSeed: Number
    open var MaxInitialSeedOffset: Number
    open var bCanGrowInShade: Boolean
    open var bSpawnsInShade: Boolean
    open var MaxInitialAge: Number
    open var MaxAge: Number
    open var OverlapPriority: Number
    open var ProceduralScale: FloatInterval
    open var ScaleCurve: RuntimeFloatCurve
    open var DensityFalloff: FoliageDensityFalloff
    open var ChangeCount: Number
    open var ReapplyDensity: Boolean
    open var ReapplyRadius: Boolean
    open var ReapplyAlignToNormal: Boolean
    open var ReapplyRandomYaw: Boolean
    open var ReapplyScaling: Boolean
    open var ReapplyScaleX: Boolean
    open var ReapplyScaleY: Boolean
    open var ReapplyScaleZ: Boolean
    open var ReapplyRandomPitchAngle: Boolean
    open var ReapplyGroundSlope: Boolean
    open var ReapplyHeight: Boolean
    open var ReapplyLandscapeLayers: Boolean
    open var ReapplyZOffset: Boolean
    open var ReapplyCollisionWithWorld: Boolean
    open var ReapplyVertexColorMask: Boolean
    open var bEnableDensityScaling: Boolean
    open var bEnableDiscardOnLoad: Boolean
    open var RuntimeVirtualTextures: Array<RuntimeVirtualTexture>
    open var VirtualTextureCullMips: Number
    open var VirtualTextureRenderPassType: String /* "Never" | "Exclusive" | "Always" | "ERuntimeVirtualTextureMainPassType_MAX" */
    open var bIncludeInHLOD: Boolean
    open var ScaleMinX: Number
    open var ScaleMinY: Number
    open var ScaleMinZ: Number
    open var ScaleMaxX: Number
    open var ScaleMaxY: Number
    open var ScaleMaxZ: Number
    open var HeightMin: Number
    open var HeightMax: Number
    open var ZOffsetMin: Number
    open var ZOffsetMax: Number
    open var StartCullDistance: Number
    open var EndCullDistance: Number
    open var UniformScale: Boolean
    open var LockScaleX: Boolean
    open var LockScaleY: Boolean
    open var LockScaleZ: Boolean
    open var GroundSlope: Number
    open var MinGroundSlope: Number
    open var MinScale: Number
    open var MaxScale: Number

    companion object {
        fun Load(ResourceName: String): FoliageType
        fun Find(Outer: UObject, ResourceName: String): FoliageType
        fun GetDefaultObject(): FoliageType
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FoliageType
        fun C(Other: UObject): FoliageType
        fun C(Other: Any): FoliageType
    }
}

external open class InstancedStaticMeshInstanceData {
    open var Transform: Matrix
    open fun clone(): InstancedStaticMeshInstanceData

    companion object {
        fun C(Other: UObject): InstancedStaticMeshInstanceData
        fun C(Other: Any): InstancedStaticMeshInstanceData
    }
}

external open class InstancedStaticMeshRandomSeed {
    open var StartInstanceIndex: Number
    open var RandomSeed: Number
    open fun clone(): InstancedStaticMeshRandomSeed

    companion object {
        fun C(Other: UObject): InstancedStaticMeshRandomSeed
        fun C(Other: Any): InstancedStaticMeshRandomSeed
    }
}

external open class InstancedStaticMeshMappingInfo {
    open fun clone(): InstancedStaticMeshMappingInfo

    companion object {
        fun C(Other: UObject): InstancedStaticMeshMappingInfo
        fun C(Other: Any): InstancedStaticMeshMappingInfo
    }
}

external open class InstancedStaticMeshComponent : StaticMeshComponent {
    constructor()
    constructor(Outer: UObject)
    open var PerInstanceSMData: Array<InstancedStaticMeshInstanceData>
    open var PerInstancePrevTransform: Array<Matrix>
    open var NumCustomDataFloats: Number
    open var PerInstanceSMCustomData: Array<Number>
    open var InstancingRandomSeed: Number
    open var AdditionalRandomSeeds: Array<InstancedStaticMeshRandomSeed>
    open var InstanceStartCullDistance: Number
    open var InstanceEndCullDistance: Number
    open var InstanceReorderTable: Array<Number>
    open var NumPendingLightmaps: Number
    open var CachedMappings: Array<InstancedStaticMeshMappingInfo>
    open fun UpdateInstanceTransform(InstanceIndex: Number, NewInstanceTransform: Transform, bWorldSpace: Boolean, bMarkRenderStateDirty: Boolean, bTeleport: Boolean): Boolean
    open fun SetCustomDataValue(InstanceIndex: Number, CustomDataIndex: Number, CustomDataValue: Number, bMarkRenderStateDirty: Boolean): Boolean
    open fun SetCullDistances(StartCullDistance: Number, EndCullDistance: Number)
    open fun RemoveInstances(InstancesToRemove: Array<Number>): Boolean
    open fun RemoveInstance(InstanceIndex: Number): Boolean
    open fun IsValidInstance(InstanceIndex: Number): Boolean
    open fun GetInstanceTransform(InstanceIndex: Number, OutInstanceTransform: Transform = definedExternally, bWorldSpace: Boolean = definedExternally): `T$420`
    open fun GetInstancesOverlappingSphere(Center: Vector, Radius: Number, bSphereInWorldSpace: Boolean): Array<Number>
    open fun GetInstancesOverlappingBox(Box: Box, bBoxInWorldSpace: Boolean): Array<Number>
    open fun GetInstanceCount(): Number
    open fun ClearInstances()
    open fun BatchUpdateInstancesTransforms(StartInstanceIndex: Number, NewInstancesTransforms: Array<Transform>, bWorldSpace: Boolean, bMarkRenderStateDirty: Boolean, bTeleport: Boolean): Boolean
    open fun BatchUpdateInstancesTransform(StartInstanceIndex: Number, NumInstances: Number, NewInstancesTransform: Transform, bWorldSpace: Boolean, bMarkRenderStateDirty: Boolean, bTeleport: Boolean): Boolean
    open fun AddInstanceWorldSpace(WorldTransform: Transform): Number
    open fun AddInstances(InstanceTransforms: Array<Transform>, bShouldReturnIndices: Boolean, bWorldSpace: Boolean): Array<Number>
    open fun AddInstance(InstanceTransform: Transform, bWorldSpace: Boolean): Number
    open fun AcquireEditorSMInstanceElementHandle(InstanceIndex: Number, bAllowCreate: Boolean): ScriptTypedElementHandle

    companion object {
        fun Load(ResourceName: String): InstancedStaticMeshComponent
        fun Find(Outer: UObject, ResourceName: String): InstancedStaticMeshComponent
        fun GetDefaultObject(): InstancedStaticMeshComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InstancedStaticMeshComponent
        fun C(Other: UObject): InstancedStaticMeshComponent
        fun C(Other: Any): InstancedStaticMeshComponent
        fun AcquireEditorSMInstanceElementHandle(ISMComponent: InstancedStaticMeshComponent, InstanceIndex: Number, bAllowCreate: Boolean): ScriptTypedElementHandle
    }
}

external open class HierarchicalInstancedStaticMeshComponent : InstancedStaticMeshComponent {
    constructor()
    constructor(Outer: UObject)
    open var bUseTranslatedInstanceSpace: Boolean
    open var TranslatedInstanceSpaceOrigin: Vector
    open var SortedInstances: Array<Number>
    open var NumBuiltInstances: Number
    open var BuiltInstanceBounds: Box
    open var UnbuiltInstanceBounds: Box
    open var UnbuiltInstanceBoundsList: Array<Box>
    open var bEnableDensityScaling: Boolean
    open var OcclusionLayerNumNodes: Number
    open var CacheMeshExtendedBounds: BoxSphereBounds
    open var bDisableCollision: Boolean
    open var InstanceCountToRender: Number

    companion object {
        fun Load(ResourceName: String): HierarchicalInstancedStaticMeshComponent
        fun Find(Outer: UObject, ResourceName: String): HierarchicalInstancedStaticMeshComponent
        fun GetDefaultObject(): HierarchicalInstancedStaticMeshComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): HierarchicalInstancedStaticMeshComponent
        fun C(Other: UObject): HierarchicalInstancedStaticMeshComponent
        fun C(Other: Any): HierarchicalInstancedStaticMeshComponent
    }
}

external open class FoliageInstancedStaticMeshComponent : HierarchicalInstancedStaticMeshComponent {
    constructor()
    constructor(Outer: UObject)
    open var OnInstanceTakePointDamage: UnrealEngineMulticastDelegate<(InstanceIndex: Number, Damage: Number, InstigatedBy: Controller, HitLocation: Vector, ShotFromDirection: Vector, DamageType: DamageType, DamageCauser: Actor) -> Unit>
    open var OnInstanceTakeRadialDamage: UnrealEngineMulticastDelegate<(Instances: Array<Number>, Damages: Array<Number>, InstigatedBy: Controller, Origin: Vector, MaxRadius: Number, DamageType: DamageType, DamageCauser: Actor) -> Unit>
    open var bEnableDiscardOnLoad: Boolean
    open var FoliageHiddenEditorViews: Any
    open var GenerationGuid: Guid

    companion object {
        fun Load(ResourceName: String): FoliageInstancedStaticMeshComponent
        fun Find(Outer: UObject, ResourceName: String): FoliageInstancedStaticMeshComponent
        fun GetDefaultObject(): FoliageInstancedStaticMeshComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FoliageInstancedStaticMeshComponent
        fun C(Other: UObject): FoliageInstancedStaticMeshComponent
        fun C(Other: Any): FoliageInstancedStaticMeshComponent
    }
}

external open class FoliageType_InstancedStaticMesh : FoliageType {
    constructor()
    constructor(Outer: UObject)
    open var Mesh: StaticMesh
    open var OverrideMaterials: Array<MaterialInterface>
    open var ComponentClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): FoliageType_InstancedStaticMesh
        fun Find(Outer: UObject, ResourceName: String): FoliageType_InstancedStaticMesh
        fun GetDefaultObject(): FoliageType_InstancedStaticMesh
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FoliageType_InstancedStaticMesh
        fun C(Other: UObject): FoliageType_InstancedStaticMesh
        fun C(Other: Any): FoliageType_InstancedStaticMesh
    }
}

external open class FoliageTypeObject {
    open var FoliageTypeObject: UObject
    open var TypeInstance: FoliageType
    open var bIsAsset: Boolean
    open var Type: UnrealEngineClass
    open fun clone(): FoliageTypeObject

    companion object {
        fun C(Other: UObject): FoliageTypeObject
        fun C(Other: Any): FoliageTypeObject
    }
}

external open class ProceduralFoliageSpawner : UObject {
    constructor()
    constructor(Outer: UObject)
    open var RandomSeed: Number
    open var TileSize: Number
    open var NumUniqueTiles: Number
    open var MinimumQuadTreeSize: Number
    open var FoliageTypes: Array<FoliageTypeObject>
    open fun Simulate(NumSteps: Number)

    companion object {
        fun Load(ResourceName: String): ProceduralFoliageSpawner
        fun Find(Outer: UObject, ResourceName: String): ProceduralFoliageSpawner
        fun GetDefaultObject(): ProceduralFoliageSpawner
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ProceduralFoliageSpawner
        fun C(Other: UObject): ProceduralFoliageSpawner
        fun C(Other: Any): ProceduralFoliageSpawner
    }
}

external open class ProceduralFoliageComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var FoliageSpawner: ProceduralFoliageSpawner
    open var TileOverlap: Number
    open var bAllowLandscape: Boolean
    open var bAllowBSP: Boolean
    open var bAllowStaticMesh: Boolean
    open var bAllowTranslucent: Boolean
    open var bAllowFoliage: Boolean
    open var bShowDebugTiles: Boolean
    open var DataLayer: ActorDataLayer
    open var SpawningVolume: Volume
    open var ProceduralGuid: Guid
    open var LastSimulationDataLayer: ActorDataLayer

    companion object {
        fun Load(ResourceName: String): ProceduralFoliageComponent
        fun Find(Outer: UObject, ResourceName: String): ProceduralFoliageComponent
        fun GetDefaultObject(): ProceduralFoliageComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ProceduralFoliageComponent
        fun C(Other: UObject): ProceduralFoliageComponent
        fun C(Other: Any): ProceduralFoliageComponent
    }
}

external open class ProceduralFoliageVolume(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Volume {
    open var ProceduralComponent: ProceduralFoliageComponent

    companion object {
        fun GetDefaultObject(): ProceduralFoliageVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ProceduralFoliageVolume
        fun C(Other: UObject): ProceduralFoliageVolume
        fun C(Other: Any): ProceduralFoliageVolume
    }
}

external open class ProceduralFoliageEditorLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ProceduralFoliageEditorLibrary
        fun Find(Outer: UObject, ResourceName: String): ProceduralFoliageEditorLibrary
        fun GetDefaultObject(): ProceduralFoliageEditorLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ProceduralFoliageEditorLibrary
        fun ResimulateProceduralFoliageVolumes(ProceduralFoliageVolumes: Array<ProceduralFoliageVolume>)
        fun ResimulateProceduralFoliageComponents(ProceduralFoliageComponents: Array<ProceduralFoliageComponent>)
        fun ClearProceduralFoliageVolumes(ProceduralFoliageVolumes: Array<ProceduralFoliageVolume>)
        fun ClearProceduralFoliageComponents(ProceduralFoliageComponents: Array<ProceduralFoliageComponent>)
        fun C(Other: UObject): ProceduralFoliageEditorLibrary
        fun C(Other: Any): ProceduralFoliageEditorLibrary
    }
}

external open class ProceduralFoliageSpawnerFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ProceduralFoliageSpawnerFactory
        fun Find(Outer: UObject, ResourceName: String): ProceduralFoliageSpawnerFactory
        fun GetDefaultObject(): ProceduralFoliageSpawnerFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ProceduralFoliageSpawnerFactory
        fun C(Other: UObject): ProceduralFoliageSpawnerFactory
        fun C(Other: Any): ProceduralFoliageSpawnerFactory
    }
}

external open class CookerStats : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Assets: Array<Any>
    open var SizeBefore: Number
    open var SizeAfter: Number
    open var Path: String

    companion object {
        fun Load(ResourceName: String): CookerStats
        fun Find(Outer: UObject, ResourceName: String): CookerStats
        fun GetDefaultObject(): CookerStats
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CookerStats
        fun C(Other: UObject): CookerStats
        fun C(Other: Any): CookerStats
    }
}

external open class LightingBuildInfo : UObject {
    constructor()
    constructor(Outer: UObject)
    open var UObject: Any
    open var LightingTime: Number
    open var UnmappedTexelsPercentage: Number
    open var UnmappedTexelsMemory: Number
    open var TotalTexelMemory: Number
    open var LevelName: String

    companion object {
        fun Load(ResourceName: String): LightingBuildInfo
        fun Find(Outer: UObject, ResourceName: String): LightingBuildInfo
        fun GetDefaultObject(): LightingBuildInfo
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LightingBuildInfo
        fun C(Other: UObject): LightingBuildInfo
        fun C(Other: Any): LightingBuildInfo
    }
}

external open class PrimitiveStats : UObject {
    constructor()
    constructor(Outer: UObject)
    open var UObject: Any
    open var Actors: Array<Any>
    open var Type: String
    open var Count: Number
    open var Sections: Number
    open var HWInstances: Number
    open var InstSections: Number
    open var Triangles: Number
    open var InstTriangles: Number
    open var ResourceSize: Number
    open var VertexColorMem: Number
    open var InstVertexColorMem: Number
    open var LightsLM: Number
    open var LightsOther: Number
    open var LightsTotal: Number
    open var ObjLightCost: Number
    open var LightMapData: Number
    open var LMSMResolution: Number
    open var RadiusMin: Number
    open var RadiusMax: Number
    open var RadiusAvg: Number

    companion object {
        fun Load(ResourceName: String): PrimitiveStats
        fun Find(Outer: UObject, ResourceName: String): PrimitiveStats
        fun GetDefaultObject(): PrimitiveStats
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PrimitiveStats
        fun C(Other: UObject): PrimitiveStats
        fun C(Other: Any): PrimitiveStats
    }
}

external open class ShaderCookerStats : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Name: String
    open var Platform: String
    open var Category: String
    open var Compiled: Number
    open var Cooked: Number
    open var Permutations: Number
    open var CompileTime: Number
    open var Path: String

    companion object {
        fun Load(ResourceName: String): ShaderCookerStats
        fun Find(Outer: UObject, ResourceName: String): ShaderCookerStats
        fun GetDefaultObject(): ShaderCookerStats
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ShaderCookerStats
        fun C(Other: UObject): ShaderCookerStats
        fun C(Other: Any): ShaderCookerStats
    }
}

external open class StaticMeshLightingInfo : UObject {
    constructor()
    constructor(Outer: UObject)
    open var StaticMeshActor: Actor
    open var StaticMesh: Any
    open var LevelName: String
    open var TextureMapping: String
    open var bTextureMapping: Boolean
    open var bHasLightmapTexCoords: Boolean
    open var StaticLightingResolution: Number
    open var TextureLightMapMemoryUsage: Number
    open var VertexLightMapMemoryUsage: Number
    open var LightMapLightCount: Number
    open var TextureShadowMapMemoryUsage: Number
    open var VertexShadowMapMemoryUsage: Number
    open var ShadowMapLightCount: Number
    open var LightmapTextureNames: Array<String>

    companion object {
        fun Load(ResourceName: String): StaticMeshLightingInfo
        fun Find(Outer: UObject, ResourceName: String): StaticMeshLightingInfo
        fun GetDefaultObject(): StaticMeshLightingInfo
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): StaticMeshLightingInfo
        fun C(Other: UObject): StaticMeshLightingInfo
        fun C(Other: Any): StaticMeshLightingInfo
    }
}

external open class TextureStats : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Texture: Any
    open var Actors: Array<Any>
    open var Type: String
    open var Virtual: String
    open var MaxDim: Vector2D
    open var CurrentDim: Vector2D
    open var Format: String /* "PF_Unknown" | "PF_A32B32G32R32F" | "PF_B8G8R8A8" | "PF_G8" | "PF_G16" | "PF_DXT1" | "PF_DXT3" | "PF_DXT5" | "PF_UYVY" | "PF_FloatRGB" | "PF_FloatRGBA" | "PF_DepthStencil" | "PF_ShadowDepth" | "PF_R32_FLOAT" | "PF_G16R16" | "PF_G16R16F" | "PF_G16R16F_FILTER" | "PF_G32R32F" | "PF_A2B10G10R10" | "PF_A16B16G16R16" | "PF_D24" | "PF_R16F" | "PF_R16F_FILTER" | "PF_BC5" | "PF_V8U8" | "PF_A1" | "PF_FloatR11G11B10" | "PF_A8" | "PF_R32_UINT" | "PF_R32_SINT" | "PF_PVRTC2" | "PF_PVRTC4" | "PF_R16_UINT" | "PF_R16_SINT" | "PF_R16G16B16A16_UINT" | "PF_R16G16B16A16_SINT" | "PF_R5G6B5_UNORM" | "PF_R8G8B8A8" | "PF_A8R8G8B8" | "PF_BC4" | "PF_R8G8" | "PF_ATC_RGB" | "PF_ATC_RGBA_E" | "PF_ATC_RGBA_I" | "PF_X24_G8" | "PF_ETC1" | "PF_ETC2_RGB" | "PF_ETC2_RGBA" | "PF_R32G32B32A32_UINT" | "PF_R16G16_UINT" | "PF_ASTC_4x4" | "PF_ASTC_6x6" | "PF_ASTC_8x8" | "PF_ASTC_10x10" | "PF_ASTC_12x12" | "PF_BC6H" | "PF_BC7" | "PF_R8_UINT" | "PF_L8" | "PF_XGXR8" | "PF_R8G8B8A8_UINT" | "PF_R8G8B8A8_SNORM" | "PF_R16G16B16A16_UNORM" | "PF_R16G16B16A16_SNORM" | "PF_PLATFORM_HDR_0" | "PF_PLATFORM_HDR_1" | "PF_PLATFORM_HDR_2" | "PF_NV12" | "PF_R32G32_UINT" | "PF_ETC2_R11_EAC" | "PF_ETC2_RG11_EAC" | "PF_R8" | "PF_B5G5R5A1_UNORM" | "PF_G16R16_SNORM" | "PF_R8G8_UINT" | "PF_R32G32B32_UINT" | "PF_R32G32B32_SINT" | "PF_R32G32B32F" | "PF_R8_SINT" | "PF_R64_UINT" | "PF_MAX" */
    open var Group: String /* "TEXTUREGROUP_World" | "TEXTUREGROUP_WorldNormalMap" | "TEXTUREGROUP_WorldSpecular" | "TEXTUREGROUP_Character" | "TEXTUREGROUP_CharacterNormalMap" | "TEXTUREGROUP_CharacterSpecular" | "TEXTUREGROUP_Weapon" | "TEXTUREGROUP_WeaponNormalMap" | "TEXTUREGROUP_WeaponSpecular" | "TEXTUREGROUP_Vehicle" | "TEXTUREGROUP_VehicleNormalMap" | "TEXTUREGROUP_VehicleSpecular" | "TEXTUREGROUP_Cinematic" | "TEXTUREGROUP_Effects" | "TEXTUREGROUP_EffectsNotFiltered" | "TEXTUREGROUP_Skybox" | "TEXTUREGROUP_UI" | "TEXTUREGROUP_Lightmap" | "TEXTUREGROUP_RenderTarget" | "TEXTUREGROUP_MobileFlattened" | "TEXTUREGROUP_ProcBuilding_Face" | "TEXTUREGROUP_ProcBuilding_LightMap" | "TEXTUREGROUP_Shadowmap" | "TEXTUREGROUP_ColorLookupTable" | "TEXTUREGROUP_Terrain_Heightmap" | "TEXTUREGROUP_Terrain_Weightmap" | "TEXTUREGROUP_Bokeh" | "TEXTUREGROUP_IESLightProfile" | "TEXTUREGROUP_Pixels2D" | "TEXTUREGROUP_HierarchicalLOD" | "TEXTUREGROUP_Impostor" | "TEXTUREGROUP_ImpostorNormalDepth" | "TEXTUREGROUP_8BitData" | "TEXTUREGROUP_16BitData" | "TEXTUREGROUP_Project01" | "TEXTUREGROUP_Project02" | "TEXTUREGROUP_Project03" | "TEXTUREGROUP_Project04" | "TEXTUREGROUP_Project05" | "TEXTUREGROUP_Project06" | "TEXTUREGROUP_Project07" | "TEXTUREGROUP_Project08" | "TEXTUREGROUP_Project09" | "TEXTUREGROUP_Project10" | "TEXTUREGROUP_Project11" | "TEXTUREGROUP_Project12" | "TEXTUREGROUP_Project13" | "TEXTUREGROUP_Project14" | "TEXTUREGROUP_Project15" | "TEXTUREGROUP_Project16" | "TEXTUREGROUP_MAX" */
    open var LODBias: Number
    open var CurrentKB: Number
    open var FullyLoadedKB: Number
    open var NumUses: Number
    open var LastTimeRendered: Number
    open var Path: String

    companion object {
        fun Load(ResourceName: String): TextureStats
        fun Find(Outer: UObject, ResourceName: String): TextureStats
        fun GetDefaultObject(): TextureStats
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextureStats
        fun C(Other: UObject): TextureStats
        fun C(Other: Any): TextureStats
    }
}

external open class TextureImportSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var AutoVTSize: Number

    companion object {
        fun Load(ResourceName: String): TextureImportSettings
        fun Find(Outer: UObject, ResourceName: String): TextureImportSettings
        fun GetDefaultObject(): TextureImportSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextureImportSettings
        fun C(Other: UObject): TextureImportSettings
        fun C(Other: Any): TextureImportSettings
    }
}

external open class ClothConfigCommon : ClothConfigBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ClothConfigCommon
        fun Find(Outer: UObject, ResourceName: String): ClothConfigCommon
        fun GetDefaultObject(): ClothConfigCommon
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClothConfigCommon
        fun C(Other: UObject): ClothConfigCommon
        fun C(Other: Any): ClothConfigCommon
    }
}

external open class ClothSharedConfigCommon : ClothConfigCommon {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ClothSharedConfigCommon
        fun Find(Outer: UObject, ResourceName: String): ClothSharedConfigCommon
        fun GetDefaultObject(): ClothSharedConfigCommon
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClothSharedConfigCommon
        fun C(Other: UObject): ClothSharedConfigCommon
        fun C(Other: Any): ClothSharedConfigCommon
    }
}

external open class ClothingAssetCustomData : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ClothingAssetCustomData
        fun Find(Outer: UObject, ResourceName: String): ClothingAssetCustomData
        fun GetDefaultObject(): ClothingAssetCustomData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClothingAssetCustomData
        fun C(Other: UObject): ClothingAssetCustomData
        fun C(Other: Any): ClothingAssetCustomData
    }
}

external open class ClothTetherData {
    open fun clone(): ClothTetherData

    companion object {
        fun C(Other: UObject): ClothTetherData
        fun C(Other: Any): ClothTetherData
    }
}

external open class ClothPhysicalMeshData {
    open var Vertices: Array<Vector3f>
    open var Normals: Array<Vector3f>
    open var VertexColors: Array<Color>
    open var Indices: Array<Any>
    open var WeightMaps: Any
    open var InverseMasses: Array<Number>
    open var BoneData: Array<ClothVertBoneData>
    open var SelfCollisionIndices: Array<Any>
    open var EuclideanTethers: ClothTetherData
    open var GeodesicTethers: ClothTetherData
    open var MaxBoneWeights: Number
    open var NumFixedVerts: Number
    open var MaxDistances: Array<Number>
    open var BackstopDistances: Array<Number>
    open var BackstopRadiuses: Array<Number>
    open var AnimDriveMultipliers: Array<Number>
    open fun clone(): ClothPhysicalMeshData

    companion object {
        fun C(Other: UObject): ClothPhysicalMeshData
        fun C(Other: Any): ClothPhysicalMeshData
    }
}

external open class ClothCollisionPrim_Sphere {
    open var BoneIndex: Number
    open var Radius: Number
    open var LocalPosition: Vector
    open fun clone(): ClothCollisionPrim_Sphere

    companion object {
        fun C(Other: UObject): ClothCollisionPrim_Sphere
        fun C(Other: Any): ClothCollisionPrim_Sphere
    }
}

external open class ClothCollisionPrim_SphereConnection {
    open var SphereIndices: Number
    open fun clone(): ClothCollisionPrim_SphereConnection

    companion object {
        fun C(Other: UObject): ClothCollisionPrim_SphereConnection
        fun C(Other: Any): ClothCollisionPrim_SphereConnection
    }
}

external open class ClothCollisionPrim_ConvexFace {
    open var Plane: Plane
    open var Indices: Array<Number>
    open fun clone(): ClothCollisionPrim_ConvexFace

    companion object {
        fun C(Other: UObject): ClothCollisionPrim_ConvexFace
        fun C(Other: Any): ClothCollisionPrim_ConvexFace
    }
}

external open class ClothCollisionPrim_Convex {
    open var planes: Array<Plane>
    open var Faces: Array<ClothCollisionPrim_ConvexFace>
    open var SurfacePoints: Array<Vector>
    open var BoneIndex: Number
    open fun clone(): ClothCollisionPrim_Convex

    companion object {
        fun C(Other: UObject): ClothCollisionPrim_Convex
        fun C(Other: Any): ClothCollisionPrim_Convex
    }
}

external open class ClothCollisionPrim_Box {
    open var LocalPosition: Vector
    open var LocalRotation: Quat
    open var HalfExtents: Vector
    open var BoneIndex: Number
    open fun clone(): ClothCollisionPrim_Box

    companion object {
        fun C(Other: UObject): ClothCollisionPrim_Box
        fun C(Other: Any): ClothCollisionPrim_Box
    }
}

external open class ClothCollisionData {
    open var Spheres: Array<ClothCollisionPrim_Sphere>
    open var SphereConnections: Array<ClothCollisionPrim_SphereConnection>
    open var Convexes: Array<ClothCollisionPrim_Convex>
    open var Boxes: Array<ClothCollisionPrim_Box>
    open fun clone(): ClothCollisionData

    companion object {
        fun C(Other: UObject): ClothCollisionData
        fun C(Other: Any): ClothCollisionData
    }
}

external open class PointWeightMap {
    open var Values: Array<Number>
    open var Name: String
    open var CurrentTarget: Number
    open var bEnabled: Boolean
    open fun clone(): PointWeightMap

    companion object {
        fun C(Other: UObject): PointWeightMap
        fun C(Other: Any): PointWeightMap
    }
}

external open class ClothLODDataCommon_Legacy : UObject {
    constructor()
    constructor(Outer: UObject)
    open var PhysicalMeshData: ClothPhysicalMeshDataBase_Legacy
    open var ClothPhysicalMeshData: ClothPhysicalMeshData
    open var CollisionData: ClothCollisionData
    open var ParameterMasks: Array<PointWeightMap>

    companion object {
        fun Load(ResourceName: String): ClothLODDataCommon_Legacy
        fun Find(Outer: UObject, ResourceName: String): ClothLODDataCommon_Legacy
        fun GetDefaultObject(): ClothLODDataCommon_Legacy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClothLODDataCommon_Legacy
        fun C(Other: UObject): ClothLODDataCommon_Legacy
        fun C(Other: Any): ClothLODDataCommon_Legacy
    }
}

external object EWeightMapTargetCommon {
    var None: String /* "None" */
    var MaxDistance: String /* "MaxDistance" */
    var BackstopDistance: String /* "BackstopDistance" */
    var BackstopRadius: String /* "BackstopRadius" */
    var AnimDriveStiffness: String /* "AnimDriveStiffness" */
    var AnimDriveDamping_DEPRECATED: String /* "AnimDriveDamping_DEPRECATED" */
    var EWeightMapTargetCommon_MAX: String /* "EWeightMapTargetCommon_MAX" */
}

external open class ClothParameterMask_Legacy {
    open var MaskName: String
    open var CurrentTarget: String /* "None" | "MaxDistance" | "BackstopDistance" | "BackstopRadius" | "AnimDriveStiffness" | "AnimDriveDamping_DEPRECATED" | "EWeightMapTargetCommon_MAX" */
    open var MaxValue: Number
    open var MinValue: Number
    open var Values: Array<Number>
    open var bEnabled: Boolean
    open fun clone(): ClothParameterMask_Legacy

    companion object {
        fun C(Other: UObject): ClothParameterMask_Legacy
        fun C(Other: Any): ClothParameterMask_Legacy
    }
}

external open class ClothLODDataCommon {
    open var PhysicalMeshData: ClothPhysicalMeshData
    open var CollisionData: ClothCollisionData
    open var bUseMultipleInfluences: Boolean
    open var SkinningKernelRadius: Number
    open var bSmoothTransition: Boolean
    open var ParameterMasks: Array<ClothParameterMask_Legacy>
    open var PointWeightMaps: Array<PointWeightMap>
    open fun clone(): ClothLODDataCommon

    companion object {
        fun C(Other: UObject): ClothLODDataCommon
        fun C(Other: Any): ClothLODDataCommon
    }
}

external object EClothingWindMethod_Legacy {
    var Legacy: String /* "Legacy" */
    var Accurate: String /* "Accurate" */
    var EClothingWindMethod_MAX: String /* "EClothingWindMethod_MAX" */
}

external open class ClothConstraintSetup_Legacy {
    open var Stiffness: Number
    open var StiffnessMultiplier: Number
    open var StretchLimit: Number
    open var CompressionLimit: Number
    open fun clone(): ClothConstraintSetup_Legacy

    companion object {
        fun C(Other: UObject): ClothConstraintSetup_Legacy
        fun C(Other: Any): ClothConstraintSetup_Legacy
    }
}

external open class ClothConfig_Legacy {
    open var WindMethod: String /* "Legacy" | "Accurate" | "EClothingWindMethod_MAX" */
    open var VerticalConstraintConfig: ClothConstraintSetup_Legacy
    open var HorizontalConstraintConfig: ClothConstraintSetup_Legacy
    open var BendConstraintConfig: ClothConstraintSetup_Legacy
    open var ShearConstraintConfig: ClothConstraintSetup_Legacy
    open var SelfCollisionRadius: Number
    open var SelfCollisionStiffness: Number
    open var SelfCollisionCullScale: Number
    open var Damping: Vector
    open var Friction: Number
    open var WindDragCoefficient: Number
    open var WindLiftCoefficient: Number
    open var LinearDrag: Vector
    open var AngularDrag: Vector
    open var LinearInertiaScale: Vector
    open var AngularInertiaScale: Vector
    open var CentrifugalInertiaScale: Vector
    open var SolverFrequency: Number
    open var StiffnessFrequency: Number
    open var GravityScale: Number
    open var GravityOverride: Vector
    open var bUseGravityOverride: Boolean
    open var TetherStiffness: Number
    open var TetherLimit: Number
    open var CollisionThickness: Number
    open var AnimDriveSpringStiffness: Number
    open var AnimDriveDamperStiffness: Number
    open fun clone(): ClothConfig_Legacy

    companion object {
        fun C(Other: UObject): ClothConfig_Legacy
        fun C(Other: Any): ClothConfig_Legacy
    }
}

external open class ClothingAssetCommon : ClothingAssetBase {
    constructor()
    constructor(Outer: UObject)
    open var PhysicsAsset: PhysicsAsset
    open var ClothConfigs: Any
    open var ClothSharedSimConfig: ClothConfigBase
    open var ClothSimConfig: ClothConfigBase
    open var ChaosClothSimConfig: ClothConfigBase
    open var ClothLODData: Array<ClothLODDataCommon_Legacy>
    open var LODData: Array<ClothLODDataCommon>
    open var LodMap: Array<Number>
    open var UsedBoneNames: Array<String>
    open var UsedBoneIndices: Array<Number>
    open var ReferenceBoneIndex: Number
    open var CustomData: ClothingAssetCustomData
    open var ClothConfig: ClothConfig_Legacy

    companion object {
        fun Load(ResourceName: String): ClothingAssetCommon
        fun Find(Outer: UObject, ResourceName: String): ClothingAssetCommon
        fun GetDefaultObject(): ClothingAssetCommon
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClothingAssetCommon
        fun C(Other: UObject): ClothingAssetCommon
        fun C(Other: Any): ClothingAssetCommon
    }
}

external open class PreviewSceneProfile {
    open var ProfileName: String
    open var bSharedProfile: Boolean
    open var bUseSkyLighting: Boolean
    open var DirectionalLightIntensity: Number
    open var DirectionalLightColor: LinearColor
    open var SkyLightIntensity: Number
    open var bRotateLightingRig: Boolean
    open var bShowEnvironment: Boolean
    open var bShowFloor: Boolean
    open var EnvironmentColor: LinearColor
    open var EnvironmentIntensity: Number
    open var EnvironmentCubeMap: TextureCube
    open var EnvironmentCubeMapPath: String
    open var bPostProcessingEnabled: Boolean
    open var PostProcessingSettings: PostProcessSettings
    open var LightingRigRotation: Number
    open var RotationSpeed: Number
    open var DirectionalLightRotation: Rotator
    open fun clone(): PreviewSceneProfile

    companion object {
        fun C(Other: UObject): PreviewSceneProfile
        fun C(Other: Any): PreviewSceneProfile
    }
}

external open class LocalProfiles : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Profiles: Array<PreviewSceneProfile>

    companion object {
        fun Load(ResourceName: String): LocalProfiles
        fun Find(Outer: UObject, ResourceName: String): LocalProfiles
        fun GetDefaultObject(): LocalProfiles
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LocalProfiles
        fun C(Other: UObject): LocalProfiles
        fun C(Other: Any): LocalProfiles
    }
}

external open class SharedProfiles : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Profiles: Array<PreviewSceneProfile>

    companion object {
        fun Load(ResourceName: String): SharedProfiles
        fun Find(Outer: UObject, ResourceName: String): SharedProfiles
        fun GetDefaultObject(): SharedProfiles
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SharedProfiles
        fun C(Other: UObject): SharedProfiles
        fun C(Other: Any): SharedProfiles
    }
}

external open class AssetViewerSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Profiles: Array<PreviewSceneProfile>
    open var bFakeConfigValue_HACK: Boolean

    companion object {
        fun Load(ResourceName: String): AssetViewerSettings
        fun Find(Outer: UObject, ResourceName: String): AssetViewerSettings
        fun GetDefaultObject(): AssetViewerSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AssetViewerSettings
        fun C(Other: UObject): AssetViewerSettings
        fun C(Other: Any): AssetViewerSettings
    }
}

external open class PropertyEntry {
    open var Property: String /* "MP_EmissiveColor" | "MP_Opacity" | "MP_OpacityMask" | "MP_DiffuseColor" | "MP_SpecularColor" | "MP_BaseColor" | "MP_Metallic" | "MP_Specular" | "MP_Roughness" | "MP_Anisotropy" | "MP_Normal" | "MP_Tangent" | "MP_WorldPositionOffset" | "MP_WorldDisplacement_DEPRECATED" | "MP_TessellationMultiplier_DEPRECATED" | "MP_SubsurfaceColor" | "MP_CustomData0" | "MP_CustomData1" | "MP_AmbientOcclusion" | "MP_Refraction" | "MP_CustomizedUVs0" | "MP_CustomizedUVs1" | "MP_CustomizedUVs2" | "MP_CustomizedUVs3" | "MP_CustomizedUVs4" | "MP_CustomizedUVs5" | "MP_CustomizedUVs6" | "MP_CustomizedUVs7" | "MP_PixelDepthOffset" | "MP_ShadingModel" | "MP_FrontMaterial" | "MP_MaterialAttributes" | "MP_CustomOutput" | "MP_MAX" */
    open var bUseCustomSize: Boolean
    open var CustomSize: IntPoint
    open var bUseConstantValue: Boolean
    open var ConstantValue: Number
    open fun clone(): PropertyEntry

    companion object {
        fun C(Other: UObject): PropertyEntry
        fun C(Other: Any): PropertyEntry
    }
}

external open class MaterialOptions : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Properties: Array<PropertyEntry>
    open var TextureSize: IntPoint
    open var LODIndices: Array<Number>
    open var bUseMeshData: Boolean
    open var bUseSpecificUVIndex: Boolean
    open var TextureCoordinateIndex: Number

    companion object {
        fun Load(ResourceName: String): MaterialOptions
        fun Find(Outer: UObject, ResourceName: String): MaterialOptions
        fun GetDefaultObject(): MaterialOptions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialOptions
        fun C(Other: UObject): MaterialOptions
        fun C(Other: Any): MaterialOptions
    }
}

external open class AssetBakeOptions : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AssetBakeOptions
        fun Find(Outer: UObject, ResourceName: String): AssetBakeOptions
        fun GetDefaultObject(): AssetBakeOptions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AssetBakeOptions
        fun C(Other: UObject): AssetBakeOptions
        fun C(Other: Any): AssetBakeOptions
    }
}

external object EMaterialBakeMethod {
    var IndividualMaterial: String /* "IndividualMaterial" */
    var AtlasMaterial: String /* "AtlasMaterial" */
    var BinnedMaterial: String /* "BinnedMaterial" */
    var EMaterialBakeMethod_MAX: String /* "EMaterialBakeMethod_MAX" */
}

external open class MaterialMergeOptions : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Method: String /* "IndividualMaterial" | "AtlasMaterial" | "BinnedMaterial" | "EMaterialBakeMethod_MAX" */
    open var BlendMode: String /* "BLEND_Opaque" | "BLEND_Masked" | "BLEND_Translucent" | "BLEND_Additive" | "BLEND_Modulate" | "BLEND_AlphaComposite" | "BLEND_AlphaHoldout" | "BLEND_MAX" */

    companion object {
        fun Load(ResourceName: String): MaterialMergeOptions
        fun Find(Outer: UObject, ResourceName: String): MaterialMergeOptions
        fun GetDefaultObject(): MaterialMergeOptions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialMergeOptions
        fun C(Other: UObject): MaterialMergeOptions
        fun C(Other: Any): MaterialMergeOptions
    }
}

external open class MaterialInstanceConstant : MaterialInstance {
    constructor()
    constructor(Outer: UObject)
    open var ParameterStateId: Guid
    open var PhysMaterialMask: PhysicalMaterialMask
    open fun GetVectorParameterValue(ParameterName: String): LinearColor
    open fun GetTextureParameterValue(ParameterName: String): Texture
    open fun GetScalarParameterValue(ParameterName: String): Number
    open fun ClearAllMaterialInstanceParameters()
    open fun GetMaterialInstanceRuntimeVirtualTextureParameterValue(ParameterName: String, Association: String /* "LayerParameter" | "BlendParameter" | "GlobalParameter" | "EMaterialParameterAssociation_MAX" */): RuntimeVirtualTexture
    open fun GetMaterialInstanceScalarParameterValue(ParameterName: String, Association: String /* "LayerParameter" | "BlendParameter" | "GlobalParameter" | "EMaterialParameterAssociation_MAX" */): Number
    open fun GetMaterialInstanceStaticSwitchParameterValue(ParameterName: String, Association: String /* "LayerParameter" | "BlendParameter" | "GlobalParameter" | "EMaterialParameterAssociation_MAX" */): Boolean
    open fun GetMaterialInstanceTextureParameterValue(ParameterName: String, Association: String /* "LayerParameter" | "BlendParameter" | "GlobalParameter" | "EMaterialParameterAssociation_MAX" */): Texture
    open fun GetMaterialInstanceVectorParameterValue(ParameterName: String, Association: String /* "LayerParameter" | "BlendParameter" | "GlobalParameter" | "EMaterialParameterAssociation_MAX" */): LinearColor
    open fun SetMaterialInstanceParent(NewParent: MaterialInterface)
    open fun SetMaterialInstanceRuntimeVirtualTextureParameterValue(ParameterName: String, Value: RuntimeVirtualTexture, Association: String /* "LayerParameter" | "BlendParameter" | "GlobalParameter" | "EMaterialParameterAssociation_MAX" */): Boolean
    open fun SetMaterialInstanceScalarParameterValue(ParameterName: String, Value: Number, Association: String /* "LayerParameter" | "BlendParameter" | "GlobalParameter" | "EMaterialParameterAssociation_MAX" */): Boolean
    open fun SetMaterialInstanceStaticSwitchParameterValue(ParameterName: String, Value: Boolean, Association: String /* "LayerParameter" | "BlendParameter" | "GlobalParameter" | "EMaterialParameterAssociation_MAX" */): Boolean
    open fun SetMaterialInstanceTextureParameterValue(ParameterName: String, Value: Texture, Association: String /* "LayerParameter" | "BlendParameter" | "GlobalParameter" | "EMaterialParameterAssociation_MAX" */): Boolean
    open fun SetMaterialInstanceVectorParameterValue(ParameterName: String, Value: LinearColor, Association: String /* "LayerParameter" | "BlendParameter" | "GlobalParameter" | "EMaterialParameterAssociation_MAX" */): Boolean
    open fun UpdateMaterialInstance()

    companion object {
        fun Load(ResourceName: String): MaterialInstanceConstant
        fun Find(Outer: UObject, ResourceName: String): MaterialInstanceConstant
        fun GetDefaultObject(): MaterialInstanceConstant
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialInstanceConstant
        fun C(Other: UObject): MaterialInstanceConstant
        fun C(Other: Any): MaterialInstanceConstant
        fun ClearAllMaterialInstanceParameters(Instance: MaterialInstanceConstant)
        fun GetMaterialInstanceRuntimeVirtualTextureParameterValue(Instance: MaterialInstanceConstant, ParameterName: String, Association: String /* "LayerParameter" | "BlendParameter" | "GlobalParameter" | "EMaterialParameterAssociation_MAX" */): RuntimeVirtualTexture
        fun GetMaterialInstanceScalarParameterValue(Instance: MaterialInstanceConstant, ParameterName: String, Association: String /* "LayerParameter" | "BlendParameter" | "GlobalParameter" | "EMaterialParameterAssociation_MAX" */): Number
        fun GetMaterialInstanceStaticSwitchParameterValue(Instance: MaterialInstanceConstant, ParameterName: String, Association: String /* "LayerParameter" | "BlendParameter" | "GlobalParameter" | "EMaterialParameterAssociation_MAX" */): Boolean
        fun GetMaterialInstanceTextureParameterValue(Instance: MaterialInstanceConstant, ParameterName: String, Association: String /* "LayerParameter" | "BlendParameter" | "GlobalParameter" | "EMaterialParameterAssociation_MAX" */): Texture
        fun GetMaterialInstanceVectorParameterValue(Instance: MaterialInstanceConstant, ParameterName: String, Association: String /* "LayerParameter" | "BlendParameter" | "GlobalParameter" | "EMaterialParameterAssociation_MAX" */): LinearColor
        fun SetMaterialInstanceParent(Instance: MaterialInstanceConstant, NewParent: MaterialInterface)
        fun SetMaterialInstanceRuntimeVirtualTextureParameterValue(Instance: MaterialInstanceConstant, ParameterName: String, Value: RuntimeVirtualTexture, Association: String /* "LayerParameter" | "BlendParameter" | "GlobalParameter" | "EMaterialParameterAssociation_MAX" */): Boolean
        fun SetMaterialInstanceScalarParameterValue(Instance: MaterialInstanceConstant, ParameterName: String, Value: Number, Association: String /* "LayerParameter" | "BlendParameter" | "GlobalParameter" | "EMaterialParameterAssociation_MAX" */): Boolean
        fun SetMaterialInstanceStaticSwitchParameterValue(Instance: MaterialInstanceConstant, ParameterName: String, Value: Boolean, Association: String /* "LayerParameter" | "BlendParameter" | "GlobalParameter" | "EMaterialParameterAssociation_MAX" */): Boolean
        fun SetMaterialInstanceTextureParameterValue(Instance: MaterialInstanceConstant, ParameterName: String, Value: Texture, Association: String /* "LayerParameter" | "BlendParameter" | "GlobalParameter" | "EMaterialParameterAssociation_MAX" */): Boolean
        fun SetMaterialInstanceVectorParameterValue(Instance: MaterialInstanceConstant, ParameterName: String, Value: LinearColor, Association: String /* "LayerParameter" | "BlendParameter" | "GlobalParameter" | "EMaterialParameterAssociation_MAX" */): Boolean
        fun UpdateMaterialInstance(Instance: MaterialInstanceConstant)
    }
}

external interface `T$587` {
    var ParameterNames: Array<String>
}

external interface `T$588` {
    var ParameterNames: Array<String>
}

external interface `T$589` {
    var ParameterNames: Array<String>
}

external interface `T$590` {
    var ParameterNames: Array<String>
}

external interface `T$591` {
    var ChildInstances: Array<AssetData>
}

external open class MaterialEditingLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialEditingLibrary
        fun Find(Outer: UObject, ResourceName: String): MaterialEditingLibrary
        fun GetDefaultObject(): MaterialEditingLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialEditingLibrary
        fun UpdateMaterialInstance(Instance: MaterialInstanceConstant)
        fun UpdateMaterialFunction(MaterialFunction: MaterialFunctionInterface, PreviewMaterial: Material)
        fun SetMaterialUsage(Material: Material, Usage: String /* "MATUSAGE_SkeletalMesh" | "MATUSAGE_ParticleSprites" | "MATUSAGE_BeamTrails" | "MATUSAGE_MeshParticles" | "MATUSAGE_StaticLighting" | "MATUSAGE_MorphTargets" | "MATUSAGE_SplineMesh" | "MATUSAGE_InstancedStaticMeshes" | "MATUSAGE_GeometryCollections" | "MATUSAGE_Clothing" | "MATUSAGE_NiagaraSprites" | "MATUSAGE_NiagaraRibbons" | "MATUSAGE_NiagaraMeshParticles" | "MATUSAGE_GeometryCache" | "MATUSAGE_Water" | "MATUSAGE_HairStrands" | "MATUSAGE_LidarPointCloud" | "MATUSAGE_VirtualHeightfieldMesh" | "MATUSAGE_Nanite" | "MATUSAGE_MAX" */, bNeedsRecompile: Boolean = definedExternally): `T$28`
        fun SetMaterialInstanceVectorParameterValue(Instance: MaterialInstanceConstant, ParameterName: String, Value: LinearColor, Association: String /* "LayerParameter" | "BlendParameter" | "GlobalParameter" | "EMaterialParameterAssociation_MAX" */): Boolean
        fun SetMaterialInstanceTextureParameterValue(Instance: MaterialInstanceConstant, ParameterName: String, Value: Texture, Association: String /* "LayerParameter" | "BlendParameter" | "GlobalParameter" | "EMaterialParameterAssociation_MAX" */): Boolean
        fun SetMaterialInstanceStaticSwitchParameterValue(Instance: MaterialInstanceConstant, ParameterName: String, Value: Boolean, Association: String /* "LayerParameter" | "BlendParameter" | "GlobalParameter" | "EMaterialParameterAssociation_MAX" */): Boolean
        fun SetMaterialInstanceScalarParameterValue(Instance: MaterialInstanceConstant, ParameterName: String, Value: Number, Association: String /* "LayerParameter" | "BlendParameter" | "GlobalParameter" | "EMaterialParameterAssociation_MAX" */): Boolean
        fun SetMaterialInstanceRuntimeVirtualTextureParameterValue(Instance: MaterialInstanceConstant, ParameterName: String, Value: RuntimeVirtualTexture, Association: String /* "LayerParameter" | "BlendParameter" | "GlobalParameter" | "EMaterialParameterAssociation_MAX" */): Boolean
        fun SetMaterialInstanceParent(Instance: MaterialInstanceConstant, NewParent: MaterialInterface)
        fun RecompileMaterial(Material: Material)
        fun LayoutMaterialFunctionExpressions(MaterialFunction: MaterialFunction)
        fun LayoutMaterialExpressions(Material: Material)
        fun HasMaterialUsage(Material: Material, Usage: String /* "MATUSAGE_SkeletalMesh" | "MATUSAGE_ParticleSprites" | "MATUSAGE_BeamTrails" | "MATUSAGE_MeshParticles" | "MATUSAGE_StaticLighting" | "MATUSAGE_MorphTargets" | "MATUSAGE_SplineMesh" | "MATUSAGE_InstancedStaticMeshes" | "MATUSAGE_GeometryCollections" | "MATUSAGE_Clothing" | "MATUSAGE_NiagaraSprites" | "MATUSAGE_NiagaraRibbons" | "MATUSAGE_NiagaraMeshParticles" | "MATUSAGE_GeometryCache" | "MATUSAGE_Water" | "MATUSAGE_HairStrands" | "MATUSAGE_LidarPointCloud" | "MATUSAGE_VirtualHeightfieldMesh" | "MATUSAGE_Nanite" | "MATUSAGE_MAX" */): Boolean
        fun GetVectorParameterSource(Material: MaterialInterface, ParameterName: String, ParameterSource: SoftObjectPath = definedExternally): `T$34`
        fun GetVectorParameterNames(Material: MaterialInterface, ParameterNames: Array<String> = definedExternally): `T$587`
        fun GetUsedTextures(Material: Material): Array<Texture>
        fun GetTextureParameterSource(Material: MaterialInterface, ParameterName: String, ParameterSource: SoftObjectPath = definedExternally): `T$34`
        fun GetTextureParameterNames(Material: MaterialInterface, ParameterNames: Array<String> = definedExternally): `T$588`
        fun GetStatistics(Material: MaterialInterface): MaterialStatistics
        fun GetStaticSwitchParameterSource(Material: MaterialInterface, ParameterName: String, ParameterSource: SoftObjectPath = definedExternally): `T$34`
        fun GetStaticSwitchParameterNames(Material: MaterialInterface, ParameterNames: Array<String> = definedExternally): `T$589`
        fun GetScalarParameterSource(Material: MaterialInterface, ParameterName: String, ParameterSource: SoftObjectPath = definedExternally): `T$34`
        fun GetScalarParameterNames(Material: MaterialInterface, ParameterNames: Array<String> = definedExternally): `T$590`
        fun GetNumMaterialExpressionsInFunction(MaterialFunction: MaterialFunction): Number
        fun GetNumMaterialExpressions(Material: Material): Number
        fun GetMaterialSelectedNodes(Material: Material): Any
        fun GetMaterialPropertyInputNode(Material: Material, Property: String /* "MP_EmissiveColor" | "MP_Opacity" | "MP_OpacityMask" | "MP_DiffuseColor" | "MP_SpecularColor" | "MP_BaseColor" | "MP_Metallic" | "MP_Specular" | "MP_Roughness" | "MP_Anisotropy" | "MP_Normal" | "MP_Tangent" | "MP_WorldPositionOffset" | "MP_WorldDisplacement_DEPRECATED" | "MP_TessellationMultiplier_DEPRECATED" | "MP_SubsurfaceColor" | "MP_CustomData0" | "MP_CustomData1" | "MP_AmbientOcclusion" | "MP_Refraction" | "MP_CustomizedUVs0" | "MP_CustomizedUVs1" | "MP_CustomizedUVs2" | "MP_CustomizedUVs3" | "MP_CustomizedUVs4" | "MP_CustomizedUVs5" | "MP_CustomizedUVs6" | "MP_CustomizedUVs7" | "MP_PixelDepthOffset" | "MP_ShadingModel" | "MP_FrontMaterial" | "MP_MaterialAttributes" | "MP_CustomOutput" | "MP_MAX" */): MaterialExpression
        fun GetMaterialInstanceVectorParameterValue(Instance: MaterialInstanceConstant, ParameterName: String, Association: String /* "LayerParameter" | "BlendParameter" | "GlobalParameter" | "EMaterialParameterAssociation_MAX" */): LinearColor
        fun GetMaterialInstanceTextureParameterValue(Instance: MaterialInstanceConstant, ParameterName: String, Association: String /* "LayerParameter" | "BlendParameter" | "GlobalParameter" | "EMaterialParameterAssociation_MAX" */): Texture
        fun GetMaterialInstanceStaticSwitchParameterValue(Instance: MaterialInstanceConstant, ParameterName: String, Association: String /* "LayerParameter" | "BlendParameter" | "GlobalParameter" | "EMaterialParameterAssociation_MAX" */): Boolean
        fun GetMaterialInstanceScalarParameterValue(Instance: MaterialInstanceConstant, ParameterName: String, Association: String /* "LayerParameter" | "BlendParameter" | "GlobalParameter" | "EMaterialParameterAssociation_MAX" */): Number
        fun GetMaterialInstanceRuntimeVirtualTextureParameterValue(Instance: MaterialInstanceConstant, ParameterName: String, Association: String /* "LayerParameter" | "BlendParameter" | "GlobalParameter" | "EMaterialParameterAssociation_MAX" */): RuntimeVirtualTexture
        fun GetMaterialDefaultVectorParameterValue(Material: Material, ParameterName: String): LinearColor
        fun GetMaterialDefaultTextureParameterValue(Material: Material, ParameterName: String): Texture
        fun GetMaterialDefaultStaticSwitchParameterValue(Material: Material, ParameterName: String): Boolean
        fun GetMaterialDefaultScalarParameterValue(Material: Material, ParameterName: String): Number
        fun GetInputsForMaterialExpression(Material: Material, MaterialExpression: MaterialExpression): Array<MaterialExpression>
        fun GetChildInstances(Parent: MaterialInterface, ChildInstances: Array<AssetData> = definedExternally): `T$591`
        fun DuplicateMaterialExpression(Material: Material, MaterialFunction: MaterialFunction, Expression: MaterialExpression): MaterialExpression
        fun DeleteMaterialExpressionInFunction(MaterialFunction: MaterialFunction, Expression: MaterialExpression)
        fun DeleteMaterialExpression(Material: Material, Expression: MaterialExpression)
        fun DeleteAllMaterialExpressionsInFunction(MaterialFunction: MaterialFunction)
        fun DeleteAllMaterialExpressions(Material: Material)
        fun CreateMaterialExpressionInFunction(MaterialFunction: MaterialFunction, ExpressionClass: UnrealEngineClass, NodePosX: Number, NodePosY: Number): MaterialExpression
        fun CreateMaterialExpression(Material: Material, ExpressionClass: UnrealEngineClass, NodePosX: Number, NodePosY: Number): MaterialExpression
        fun ConnectMaterialProperty(FromExpression: MaterialExpression, FromOutputName: String, Property: String /* "MP_EmissiveColor" | "MP_Opacity" | "MP_OpacityMask" | "MP_DiffuseColor" | "MP_SpecularColor" | "MP_BaseColor" | "MP_Metallic" | "MP_Specular" | "MP_Roughness" | "MP_Anisotropy" | "MP_Normal" | "MP_Tangent" | "MP_WorldPositionOffset" | "MP_WorldDisplacement_DEPRECATED" | "MP_TessellationMultiplier_DEPRECATED" | "MP_SubsurfaceColor" | "MP_CustomData0" | "MP_CustomData1" | "MP_AmbientOcclusion" | "MP_Refraction" | "MP_CustomizedUVs0" | "MP_CustomizedUVs1" | "MP_CustomizedUVs2" | "MP_CustomizedUVs3" | "MP_CustomizedUVs4" | "MP_CustomizedUVs5" | "MP_CustomizedUVs6" | "MP_CustomizedUVs7" | "MP_PixelDepthOffset" | "MP_ShadingModel" | "MP_FrontMaterial" | "MP_MaterialAttributes" | "MP_CustomOutput" | "MP_MAX" */): Boolean
        fun ConnectMaterialExpressions(FromExpression: MaterialExpression, FromOutputName: String, ToExpression: MaterialExpression, ToInputName: String): Boolean
        fun ClearAllMaterialInstanceParameters(Instance: MaterialInstanceConstant)
        fun C(Other: UObject): MaterialEditingLibrary
        fun C(Other: Any): MaterialEditingLibrary
    }
}

external open class MaterialEditorMenuContext : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialEditorMenuContext
        fun Find(Outer: UObject, ResourceName: String): MaterialEditorMenuContext
        fun GetDefaultObject(): MaterialEditorMenuContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialEditorMenuContext
        fun C(Other: UObject): MaterialEditorMenuContext
        fun C(Other: Any): MaterialEditorMenuContext
    }
}

external object EBackgroundType {
    var SolidColor: String /* "SolidColor" */
    var Checkered: String /* "Checkered" */
    var EBackgroundType_MAX: String /* "EBackgroundType_MAX" */
}

external open class CheckerboardSettings {
    open var ColorOne: Color
    open var ColorTwo: Color
    open var Size: Number
    open fun clone(): CheckerboardSettings

    companion object {
        fun C(Other: UObject): CheckerboardSettings
        fun C(Other: Any): CheckerboardSettings
    }
}

external open class PreviewBackgroundSettings {
    open var bShowBorder: Boolean
    open var BorderColor: Color
    open var BackgroundType: String /* "SolidColor" | "Checkered" | "EBackgroundType_MAX" */
    open var BackgroundColor: Color
    open var Checkerboard: CheckerboardSettings
    open fun clone(): PreviewBackgroundSettings

    companion object {
        fun C(Other: UObject): PreviewBackgroundSettings
        fun C(Other: Any): PreviewBackgroundSettings
    }
}

external open class MaterialEditorSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var MaliOfflineCompilerPath: FilePath
    open var DefaultPreviewWidth: Number
    open var DefaultPreviewHeight: Number
    open var PreviewBackground: PreviewBackgroundSettings

    companion object {
        fun Load(ResourceName: String): MaterialEditorSettings
        fun Find(Outer: UObject, ResourceName: String): MaterialEditorSettings
        fun GetDefaultObject(): MaterialEditorSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialEditorSettings
        fun C(Other: UObject): MaterialEditorSettings
        fun C(Other: Any): MaterialEditorSettings
    }
}

external open class CurveEditorFilterBase : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CurveEditorFilterBase
        fun Find(Outer: UObject, ResourceName: String): CurveEditorFilterBase
        fun GetDefaultObject(): CurveEditorFilterBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CurveEditorFilterBase
        fun C(Other: UObject): CurveEditorFilterBase
        fun C(Other: Any): CurveEditorFilterBase
    }
}

external open class CurveEditorBakeFilter : CurveEditorFilterBase {
    constructor()
    constructor(Outer: UObject)
    open var bUseFrameBake: Boolean
    open var BakeIntervalInFrames: FrameNumber
    open var BakeIntervalInSeconds: Number

    companion object {
        fun Load(ResourceName: String): CurveEditorBakeFilter
        fun Find(Outer: UObject, ResourceName: String): CurveEditorBakeFilter
        fun GetDefaultObject(): CurveEditorBakeFilter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CurveEditorBakeFilter
        fun C(Other: UObject): CurveEditorBakeFilter
        fun C(Other: Any): CurveEditorBakeFilter
    }
}

external open class KeyPosition {
    open var InputValue: Any
    open var OutputValue: Any
    open fun clone(): KeyPosition

    companion object {
        fun C(Other: UObject): KeyPosition
        fun C(Other: Any): KeyPosition
    }
}

external open class KeyAttributes {
    open var bHasArriveTangent: Boolean
    open var bHasLeaveTangent: Boolean
    open var bHasInterpMode: Boolean
    open var bHasTangentMode: Boolean
    open var bHasTangentWeightMode: Boolean
    open var bHasArriveTangentWeight: Boolean
    open var bHasLeaveTangentWeight: Boolean
    open var ArriveTangent: Number
    open var LeaveTangent: Number
    open var InterpMode: String /* "RCIM_Linear" | "RCIM_Constant" | "RCIM_Cubic" | "RCIM_None" | "RCIM_MAX" */
    open var TangentMode: String /* "RCTM_Auto" | "RCTM_User" | "RCTM_Break" | "RCTM_None" | "RCTM_MAX" */
    open var TangentWeightMode: String /* "RCTWM_WeightedNone" | "RCTWM_WeightedArrive" | "RCTWM_WeightedLeave" | "RCTWM_WeightedBoth" | "RCTWM_MAX" */
    open var ArriveTangentWeight: Number
    open var LeaveTangentWeight: Number
    open fun clone(): KeyAttributes

    companion object {
        fun C(Other: UObject): KeyAttributes
        fun C(Other: Any): KeyAttributes
    }
}

external open class CurveEditorCopyableCurveKeys : UObject {
    constructor()
    constructor(Outer: UObject)
    open var KeyPositions: Array<KeyPosition>
    open var KeyAttributes: Array<KeyAttributes>
    open var ShortDisplayName: String
    open var LongDisplayName: String
    open var IntentionName: String

    companion object {
        fun Load(ResourceName: String): CurveEditorCopyableCurveKeys
        fun Find(Outer: UObject, ResourceName: String): CurveEditorCopyableCurveKeys
        fun GetDefaultObject(): CurveEditorCopyableCurveKeys
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CurveEditorCopyableCurveKeys
        fun C(Other: UObject): CurveEditorCopyableCurveKeys
        fun C(Other: Any): CurveEditorCopyableCurveKeys
    }
}

external open class CurveEditorCopyBuffer : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Curves: Array<CurveEditorCopyableCurveKeys>
    open var TimeOffset: Any
    open var bAbsolutePosition: Boolean

    companion object {
        fun Load(ResourceName: String): CurveEditorCopyBuffer
        fun Find(Outer: UObject, ResourceName: String): CurveEditorCopyBuffer
        fun GetDefaultObject(): CurveEditorCopyBuffer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CurveEditorCopyBuffer
        fun C(Other: UObject): CurveEditorCopyBuffer
        fun C(Other: Any): CurveEditorCopyBuffer
    }
}

external open class CurveEditorEulerFilter : CurveEditorFilterBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CurveEditorEulerFilter
        fun Find(Outer: UObject, ResourceName: String): CurveEditorEulerFilter
        fun GetDefaultObject(): CurveEditorEulerFilter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CurveEditorEulerFilter
        fun C(Other: UObject): CurveEditorEulerFilter
        fun C(Other: Any): CurveEditorEulerFilter
    }
}

external open class CurveEditorKeyProxy : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CurveEditorKeyProxy
        fun Find(Outer: UObject, ResourceName: String): CurveEditorKeyProxy
        fun GetDefaultObject(): CurveEditorKeyProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CurveEditorKeyProxy
        fun C(Other: UObject): CurveEditorKeyProxy
        fun C(Other: Any): CurveEditorKeyProxy
    }
}

external open class CurveEditorReduceFilter : CurveEditorFilterBase {
    constructor()
    constructor(Outer: UObject)
    open var Tolerance: Number

    companion object {
        fun Load(ResourceName: String): CurveEditorReduceFilter
        fun Find(Outer: UObject, ResourceName: String): CurveEditorReduceFilter
        fun GetDefaultObject(): CurveEditorReduceFilter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CurveEditorReduceFilter
        fun C(Other: UObject): CurveEditorReduceFilter
        fun C(Other: Any): CurveEditorReduceFilter
    }
}

external object ECurveEditorTangentVisibility {
    var AllTangents: String /* "AllTangents" */
    var SelectedKeys: String /* "SelectedKeys" */
    var NoTangents: String /* "NoTangents" */
    var ECurveEditorTangentVisibility_MAX: String /* "ECurveEditorTangentVisibility_MAX" */
}

external object ECurveEditorZoomPosition {
    var CurrentTime: String /* "CurrentTime" */
    var MousePosition: String /* "MousePosition" */
    var ECurveEditorZoomPosition_MAX: String /* "ECurveEditorZoomPosition_MAX" */
}

external open class CustomColorForChannel {
    open var UObject: Class
    open var PropertyName: String
    open var Color: LinearColor
    open fun clone(): CustomColorForChannel

    companion object {
        fun C(Other: UObject): CustomColorForChannel
        fun C(Other: Any): CustomColorForChannel
    }
}

external open class CustomColorForSpaceSwitch {
    open var ControlName: String
    open var Color: LinearColor
    open fun clone(): CustomColorForSpaceSwitch

    companion object {
        fun C(Other: UObject): CustomColorForSpaceSwitch
        fun C(Other: Any): CustomColorForSpaceSwitch
    }
}

external open class CurveEditorSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bAutoFrameCurveEditor: Boolean
    open var FrameInputPadding: Number
    open var FrameOutputPadding: Number
    open var bShowCurveEditorCurveToolTips: Boolean
    open var TangentVisibility: String /* "AllTangents" | "SelectedKeys" | "NoTangents" | "ECurveEditorTangentVisibility_MAX" */
    open var ZoomPosition: String /* "CurrentTime" | "MousePosition" | "ECurveEditorZoomPosition_MAX" */
    open var CustomColors: Array<CustomColorForChannel>
    open var ParentSpaceCustomColor: LinearColor
    open var WorldSpaceCustomColor: LinearColor
    open var ControlSpaceCustomColors: Array<CustomColorForSpaceSwitch>

    companion object {
        fun Load(ResourceName: String): CurveEditorSettings
        fun Find(Outer: UObject, ResourceName: String): CurveEditorSettings
        fun GetDefaultObject(): CurveEditorSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CurveEditorSettings
        fun C(Other: UObject): CurveEditorSettings
        fun C(Other: Any): CurveEditorSettings
    }
}

external open class RichCurveKeyProxy : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Value: RichCurveKey

    companion object {
        fun Load(ResourceName: String): RichCurveKeyProxy
        fun Find(Outer: UObject, ResourceName: String): RichCurveKeyProxy
        fun GetDefaultObject(): RichCurveKeyProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RichCurveKeyProxy
        fun C(Other: UObject): RichCurveKeyProxy
        fun C(Other: Any): RichCurveKeyProxy
    }
}

external open class CameraRig_Crane(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var CranePitch: Number
    open var CraneYaw: Number
    open var CraneArmLength: Number
    open var bLockMountPitch: Boolean
    open var bLockMountYaw: Boolean
    open var TransformComponent: SceneComponent
    open var CraneYawControl: SceneComponent
    open var CranePitchControl: SceneComponent
    open var CraneCameraMount: SceneComponent
    open var PreviewMesh_CraneArm: StaticMeshComponent
    open var PreviewMesh_CraneBase: StaticMeshComponent
    open var PreviewMesh_CraneMount: StaticMeshComponent
    open var PreviewMesh_CraneCounterWeight: StaticMeshComponent

    companion object {
        fun GetDefaultObject(): CameraRig_Crane
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CameraRig_Crane
        fun C(Other: UObject): CameraRig_Crane
        fun C(Other: Any): CameraRig_Crane
    }
}

external open class CameraRig_Rail(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var CurrentPositionOnRail: Number
    open var bLockOrientationToRail: Boolean
    open var bShowRailVisualization: Boolean
    open var PreviewMeshScale: Number
    open var TransformComponent: SceneComponent
    open var RailSplineComponent: SplineComponent
    open var RailCameraMount: SceneComponent
    open var PreviewMesh_Rail: SplineMeshComponent
    open var PreviewRailMeshSegments: Array<SplineMeshComponent>
    open var PreviewRailStaticMesh: StaticMesh
    open var PreviewMesh_Mount: StaticMeshComponent
    open fun GetRailSplineComponent(): SplineComponent

    companion object {
        fun GetDefaultObject(): CameraRig_Rail
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CameraRig_Rail
        fun C(Other: UObject): CameraRig_Rail
        fun C(Other: Any): CameraRig_Rail
    }
}

external open class CameraLookatTrackingSettings {
    open var bEnableLookAtTracking: Boolean
    open var bDrawDebugLookAtTrackingPosition: Boolean
    open var LookAtTrackingInterpSpeed: Number
    open var ActorToTrack: Actor
    open var RelativeOffset: Vector
    open var bAllowRoll: Boolean
    open fun clone(): CameraLookatTrackingSettings

    companion object {
        fun C(Other: UObject): CameraLookatTrackingSettings
        fun C(Other: Any): CameraLookatTrackingSettings
    }
}

external open class NamedFilmbackPreset {
    open var Name: String
    open var FilmbackSettings: CameraFilmbackSettings
    open fun clone(): NamedFilmbackPreset

    companion object {
        fun C(Other: UObject): NamedFilmbackPreset
        fun C(Other: Any): NamedFilmbackPreset
    }
}

external open class NamedLensPreset {
    open var Name: String
    open var LensSettings: CameraLensSettings
    open fun clone(): NamedLensPreset

    companion object {
        fun C(Other: UObject): NamedLensPreset
        fun C(Other: Any): NamedLensPreset
    }
}

external open class CineCameraComponent : CameraComponent {
    constructor()
    constructor(Outer: UObject)
    open var FilmbackSettings: CameraFilmbackSettings
    open var Filmback: CameraFilmbackSettings
    open var LensSettings: CameraLensSettings
    open var FocusSettings: CameraFocusSettings
    open var CurrentFocalLength: Number
    open var CurrentAperture: Number
    open var CurrentFocusDistance: Number
    open var CurrentHorizontalFOV: Number
    open var FocusPlaneVisualizationMesh: StaticMesh
    open var FocusPlaneVisualizationMaterial: Material
    open var DebugFocusPlaneComponent: StaticMeshComponent
    open var DebugFocusPlaneMID: MaterialInstanceDynamic
    open var FilmbackPresets: Array<NamedFilmbackPreset>
    open var LensPresets: Array<NamedLensPreset>
    open var DefaultFilmbackPresetName: String
    open var DefaultFilmbackPreset: String
    open var DefaultLensPresetName: String
    open var DefaultLensFocalLength: Number
    open var DefaultLensFStop: Number
    open fun SetLensPresetByName(InPresetName: String)
    open fun SetFilmbackPresetByName(InPresetName: String)
    open fun SetCurrentFocalLength(InFocalLength: Number)
    open fun GetVerticalFieldOfView(): Number
    open fun GetLensPresetName(): String
    open fun GetHorizontalFieldOfView(): Number
    open fun GetFilmbackPresetName(): String
    open fun GetDefaultFilmbackPresetName(): String

    companion object {
        fun Load(ResourceName: String): CineCameraComponent
        fun Find(Outer: UObject, ResourceName: String): CineCameraComponent
        fun GetDefaultObject(): CineCameraComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CineCameraComponent
        fun GetLensPresetsCopy(): Array<NamedLensPreset>
        fun GetFilmbackPresetsCopy(): Array<NamedFilmbackPreset>
        fun C(Other: UObject): CineCameraComponent
        fun C(Other: Any): CineCameraComponent
    }
}

external open class CineCameraActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : CameraActor {
    open var LookatTrackingSettings: CameraLookatTrackingSettings
    open fun GetCineCameraComponent(): CineCameraComponent

    companion object {
        fun GetDefaultObject(): CineCameraActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CineCameraActor
        fun C(Other: UObject): CineCameraActor
        fun C(Other: Any): CineCameraActor
    }
}

external interface `T$592` {
    var bOutSelectionChanged: Boolean
    var bOutActorModified: Boolean
    var `$`: Boolean
}

external interface `T$593` {
    var InOutActors: Array<Actor>
}

external interface `T$594` {
    var InOutActors: Array<Actor>
}

external open class DataLayerEditorSubsystem : EditorSubsystem {
    constructor()
    constructor(Outer: UObject)
    open fun UpdateAllViewVisibility(DataLayerThatChanged: DataLayer)
    open fun UpdateAllActorsVisibility(bNotifySelectionChange: Boolean, bRedrawViewports: Boolean): Boolean
    open fun UpdateActorVisibility(Actor: Actor, bOutSelectionChanged: Boolean = definedExternally, bOutActorModified: Boolean = definedExternally, bNotifySelectionChange: Boolean = definedExternally, bRedrawViewports: Boolean = definedExternally): `T$592`
    open fun UpdateActorAllViewsVisibility(Actor: Actor)
    open fun ToggleDataLayerVisibility(DataLayer: DataLayer)
    open fun ToggleDataLayersVisibility(DataLayers: Array<DataLayer>)
    open fun ToggleDataLayersIsLoadedInEditor(DataLayers: Array<DataLayer>, bIsFromUserChange: Boolean): Boolean
    open fun ToggleDataLayersIsDynamicallyLoadedInEditor(DataLayers: Array<DataLayer>, bIsFromUserChange: Boolean): Boolean
    open fun ToggleDataLayerIsLoadedInEditor(DataLayer: DataLayer, bIsFromUserChange: Boolean): Boolean
    open fun ToggleDataLayerIsDynamicallyLoadedInEditor(DataLayer: DataLayer, bIsFromUserChange: Boolean): Boolean
    open fun SetParentDataLayer(DataLayer: DataLayer, ParentDataLayer: DataLayer): Boolean
    open fun SetDataLayerVisibility(DataLayer: DataLayer, bIsVisible: Boolean)
    open fun SetDataLayersVisibility(DataLayers: Array<DataLayer>, bIsVisible: Boolean)
    open fun SetDataLayersIsLoadedInEditor(DataLayers: Array<DataLayer>, bIsLoadedInEditor: Boolean, bIsFromUserChange: Boolean): Boolean
    open fun SetDataLayersIsDynamicallyLoadedInEditor(DataLayers: Array<DataLayer>, bIsLoadedInEditor: Boolean, bIsFromUserChange: Boolean): Boolean
    open fun SetDataLayerIsLoadedInEditor(DataLayer: DataLayer, bIsLoadedInEditor: Boolean, bIsFromUserChange: Boolean): Boolean
    open fun SetDataLayerIsDynamicallyLoadedInEditor(DataLayer: DataLayer, bIsLoadedInEditor: Boolean, bIsFromUserChange: Boolean): Boolean
    open fun SelectActorsInDataLayers(DataLayers: Array<DataLayer>, bSelect: Boolean, bNotify: Boolean, bSelectEvenIfHidden: Boolean): Boolean
    open fun SelectActorsInDataLayer(DataLayer: DataLayer, bSelect: Boolean, bNotify: Boolean, bSelectEvenIfHidden: Boolean): Boolean
    open fun RenameDataLayer(DataLayer: DataLayer, NewDataLayerLabel: String): Boolean
    open fun RemoveSelectedActorsFromDataLayers(DataLayers: Array<DataLayer>): Boolean
    open fun RemoveSelectedActorsFromDataLayer(DataLayer: DataLayer): Boolean
    open fun RemoveActorsFromDataLayers(Actors: Array<Actor>, DataLayers: Array<DataLayer>): Boolean
    open fun RemoveActorsFromDataLayer(Actors: Array<Actor>, DataLayer: DataLayer): Boolean
    open fun RemoveActorsFromAllDataLayers(Actors: Array<Actor>): Boolean
    open fun RemoveActorFromDataLayers(Actor: Actor, DataLayers: Array<DataLayer>): Boolean
    open fun RemoveActorFromDataLayer(Actor: Actor, DataLayerToRemove: DataLayer): Boolean
    open fun RemoveActorFromAllDataLayers(Actor: Actor): Boolean
    open fun MakeAllDataLayersVisible()
    open fun IsActorValidForDataLayer(Actor: Actor): Boolean
    open fun GetDataLayerFromLabel(DataLayerLabel: String): DataLayer
    open fun GetDataLayer(ActorDataLayer: ActorDataLayer): DataLayer
    open fun GetActorsFromDataLayers(DataLayers: Array<DataLayer>): Array<Actor>
    open fun GetActorsFromDataLayer(DataLayer: DataLayer): Array<Actor>
    open fun DeleteDataLayers(DataLayersToDelete: Array<DataLayer>)
    open fun DeleteDataLayer(DataLayerToDelete: DataLayer)
    open fun CreateDataLayer(): DataLayer
    open fun AppendActorsFromDataLayers(DataLayers: Array<DataLayer>, InOutActors: Array<Actor> = definedExternally): `T$593`
    open fun AppendActorsFromDataLayer(DataLayer: DataLayer, InOutActors: Array<Actor> = definedExternally): `T$594`
    open fun AddSelectedActorsToDataLayers(DataLayers: Array<DataLayer>): Boolean
    open fun AddSelectedActorsToDataLayer(DataLayer: DataLayer): Boolean
    open fun AddActorToDataLayers(Actor: Actor, DataLayers: Array<DataLayer>): Boolean
    open fun AddActorToDataLayer(Actor: Actor, DataLayer: DataLayer): Boolean
    open fun AddActorsToDataLayers(Actors: Array<Actor>, DataLayers: Array<DataLayer>): Boolean
    open fun AddActorsToDataLayer(Actors: Array<Actor>, DataLayer: DataLayer): Boolean

    companion object {
        fun Load(ResourceName: String): DataLayerEditorSubsystem
        fun Find(Outer: UObject, ResourceName: String): DataLayerEditorSubsystem
        fun GetDefaultObject(): DataLayerEditorSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DataLayerEditorSubsystem
        fun C(Other: UObject): DataLayerEditorSubsystem
        fun C(Other: Any): DataLayerEditorSubsystem
    }
}

external object EHardwareClass {
    var Unspecified: String /* "Unspecified" */
    var Desktop: String /* "Desktop" */
    var Mobile: String /* "Mobile" */
    var EHardwareClass_MAX: String /* "EHardwareClass_MAX" */
}

external object EGraphicsPreset {
    var Unspecified: String /* "Unspecified" */
    var Maximum: String /* "Maximum" */
    var Scalable: String /* "Scalable" */
    var EGraphicsPreset_MAX: String /* "EGraphicsPreset_MAX" */
}

external open class HardwareTargetingSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var TargetedHardwareClass: String /* "Unspecified" | "Desktop" | "Mobile" | "EHardwareClass_MAX" */
    open var AppliedTargetedHardwareClass: String /* "Unspecified" | "Desktop" | "Mobile" | "EHardwareClass_MAX" */
    open var DefaultGraphicsPerformance: String /* "Unspecified" | "Maximum" | "Scalable" | "EGraphicsPreset_MAX" */
    open var AppliedDefaultGraphicsPerformance: String /* "Unspecified" | "Maximum" | "Scalable" | "EGraphicsPreset_MAX" */

    companion object {
        fun Load(ResourceName: String): HardwareTargetingSettings
        fun Find(Outer: UObject, ResourceName: String): HardwareTargetingSettings
        fun GetDefaultObject(): HardwareTargetingSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): HardwareTargetingSettings
        fun C(Other: UObject): HardwareTargetingSettings
        fun C(Other: Any): HardwareTargetingSettings
    }
}

external open class ClassTemplate : UObject {
    constructor()
    constructor(Outer: UObject)
    open var GeneratedBaseClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): ClassTemplate
        fun Find(Outer: UObject, ResourceName: String): ClassTemplate
        fun GetDefaultObject(): ClassTemplate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClassTemplate
        fun C(Other: UObject): ClassTemplate
        fun C(Other: Any): ClassTemplate
    }
}

external open class PluginClassTemplate : ClassTemplate {
    constructor()
    constructor(Outer: UObject)
    open var PluginName: String

    companion object {
        fun Load(ResourceName: String): PluginClassTemplate
        fun Find(Outer: UObject, ResourceName: String): PluginClassTemplate
        fun GetDefaultObject(): PluginClassTemplate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PluginClassTemplate
        fun C(Other: UObject): PluginClassTemplate
        fun C(Other: Any): PluginClassTemplate
    }
}

external open class ClassTemplateEditorSubsystem : EditorSubsystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ClassTemplateEditorSubsystem
        fun Find(Outer: UObject, ResourceName: String): ClassTemplateEditorSubsystem
        fun GetDefaultObject(): ClassTemplateEditorSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClassTemplateEditorSubsystem
        fun C(Other: UObject): ClassTemplateEditorSubsystem
        fun C(Other: Any): ClassTemplateEditorSubsystem
    }
}

external open class LocalizedTemplateString {
    open var Language: String
    open var text: String
    open fun clone(): LocalizedTemplateString

    companion object {
        fun C(Other: UObject): LocalizedTemplateString
        fun C(Other: Any): LocalizedTemplateString
    }
}

external open class TemplateFolderRename {
    open var From: String
    open var To: String
    open fun clone(): TemplateFolderRename

    companion object {
        fun C(Other: UObject): TemplateFolderRename
        fun C(Other: Any): TemplateFolderRename
    }
}

external open class TemplateReplacement {
    open var Extensions: Array<String>
    open var From: String
    open var To: String
    open var bCaseSensitive: Boolean
    open fun clone(): TemplateReplacement

    companion object {
        fun C(Other: UObject): TemplateReplacement
        fun C(Other: Any): TemplateReplacement
    }
}

external object ETemplateSetting {
    var Languages: String /* "Languages" */
    var HardwareTarget: String /* "HardwareTarget" */
    var GraphicsPreset: String /* "GraphicsPreset" */
    var StarterContent: String /* "StarterContent" */
    var XR: String /* "XR" */
    var Raytracing: String /* "Raytracing" */
    var All: String /* "All" */
    var ETemplateSetting_MAX: String /* "ETemplateSetting_MAX" */
}

external object EFeaturePackDetailLevel {
    var Standard: String /* "Standard" */
    var High: String /* "High" */
    var EFeaturePackDetailLevel_MAX: String /* "EFeaturePackDetailLevel_MAX" */
}

external open class FeaturePackLevelSet {
    open var DetailLevels: Array<String /* "Standard" | "High" | "EFeaturePackDetailLevel_MAX" */>
    open var MountName: String
    open fun clone(): FeaturePackLevelSet

    companion object {
        fun C(Other: UObject): FeaturePackLevelSet
        fun C(Other: Any): FeaturePackLevelSet
    }
}

external open class TemplateProjectDefs : UObject {
    constructor()
    constructor(Outer: UObject)
    open var LocalizedDisplayNames: Array<LocalizedTemplateString>
    open var LocalizedDescriptions: Array<LocalizedTemplateString>
    open var FoldersToIgnore: Array<String>
    open var FilesToIgnore: Array<String>
    open var FolderRenames: Array<TemplateFolderRename>
    open var FilenameReplacements: Array<TemplateReplacement>
    open var ReplacementsInFiles: Array<TemplateReplacement>
    open var SortKey: String
    open var Categories: Array<String>
    open var ClassTypes: String
    open var AssetTypes: String
    open var bAllowProjectCreation: Boolean
    open var bIsEnterprise: Boolean
    open var bIsBlank: Boolean
    open var bThumbnailAsIcon: Boolean
    open var HiddenSettings: Array<String /* "Languages" | "HardwareTarget" | "GraphicsPreset" | "StarterContent" | "XR" | "Raytracing" | "All" | "ETemplateSetting_MAX" */>
    open var PacksToInclude: Array<String>
    open var EditDetailLevelPreference: String /* "Standard" | "High" | "EFeaturePackDetailLevel_MAX" */
    open var SharedContentPacks: Array<FeaturePackLevelSet>
    open var StarterContent: String

    companion object {
        fun Load(ResourceName: String): TemplateProjectDefs
        fun Find(Outer: UObject, ResourceName: String): TemplateProjectDefs
        fun GetDefaultObject(): TemplateProjectDefs
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TemplateProjectDefs
        fun C(Other: UObject): TemplateProjectDefs
        fun C(Other: Any): TemplateProjectDefs
    }
}

external open class DefaultTemplateProjectDefs : TemplateProjectDefs {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DefaultTemplateProjectDefs
        fun Find(Outer: UObject, ResourceName: String): DefaultTemplateProjectDefs
        fun GetDefaultObject(): DefaultTemplateProjectDefs
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DefaultTemplateProjectDefs
        fun C(Other: UObject): DefaultTemplateProjectDefs
        fun C(Other: Any): DefaultTemplateProjectDefs
    }
}

external open class TemplateCategoryDef {
    open var Key: String
    open var LocalizedDisplayNames: Array<LocalizedTemplateString>
    open var LocalizedDescriptions: Array<LocalizedTemplateString>
    open var Icon: String
    open var IsMajorCategory: Boolean
    open fun clone(): TemplateCategoryDef

    companion object {
        fun C(Other: UObject): TemplateCategoryDef
        fun C(Other: Any): TemplateCategoryDef
    }
}

external open class TemplateCategories : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Categories: Array<TemplateCategoryDef>

    companion object {
        fun Load(ResourceName: String): TemplateCategories
        fun Find(Outer: UObject, ResourceName: String): TemplateCategories
        fun GetDefaultObject(): TemplateCategories
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TemplateCategories
        fun C(Other: UObject): TemplateCategories
        fun C(Other: Any): TemplateCategories
    }
}

external interface `T$595` {
    var OutData: SubobjectData
}

external open class SubobjectDataHandle {
    open fun clone(): SubobjectDataHandle
    open fun GetData(OutData: SubobjectData = definedExternally): `T$595`
    open fun IsHandleValid(): Boolean

    companion object {
        fun C(Other: UObject): SubobjectDataHandle
        fun C(Other: Any): SubobjectDataHandle
        fun GetData(DataHandle: SubobjectDataHandle, OutData: SubobjectData = definedExternally): `T$595`
        fun IsHandleValid(DataHandle: SubobjectDataHandle): Boolean
    }
}

external interface `T$596` {
    var OutHandle: SubobjectDataHandle
}

external open class SubobjectData {
    open var WeakObjectPtr: Any
    open var Handle: SubobjectDataHandle
    open var ParentObjectHandle: SubobjectDataHandle
    open var ChildrenHandles: Array<SubobjectDataHandle>
    open fun clone(): SubobjectData
    open fun CanCopy(): Boolean
    open fun CanDelete(): Boolean
    open fun CanDuplicate(): Boolean
    open fun CanEdit(): Boolean
    open fun CanRename(): Boolean
    open fun CanReparent(): Boolean
    open fun GetHandle(OutHandle: SubobjectDataHandle = definedExternally): `T$596`
    open fun GetObject(bEvenIfPendingKill: Boolean): UObject
    open fun GetVariableName(): String
    open fun IsActor(): Boolean
    open fun IsAttachedTo(InHandle: SubobjectDataHandle): Boolean
    open fun IsChildActor(): Boolean
    open fun IsComponent(): Boolean
    open fun IsDefaultSceneRoot(): Boolean
    open fun IsInheritedComponent(): Boolean
    open fun IsInstancedActor(): Boolean
    open fun IsInstancedComponent(): Boolean
    open fun IsNativeComponent(): Boolean
    open fun IsRootActor(): Boolean
    open fun IsRootComponent(): Boolean
    open fun IsSceneComponent(): Boolean
    open fun IsValid(): Boolean

    companion object {
        fun C(Other: UObject): SubobjectData
        fun C(Other: Any): SubobjectData
        fun CanCopy(Data: SubobjectData): Boolean
        fun CanDelete(Data: SubobjectData): Boolean
        fun CanDuplicate(Data: SubobjectData): Boolean
        fun CanEdit(Data: SubobjectData): Boolean
        fun CanRename(Data: SubobjectData): Boolean
        fun CanReparent(Data: SubobjectData): Boolean
        fun GetHandle(Data: SubobjectData, OutHandle: SubobjectDataHandle = definedExternally): `T$596`
        fun GetObject(Data: SubobjectData, bEvenIfPendingKill: Boolean): UObject
        fun GetVariableName(Data: SubobjectData): String
        fun IsActor(Data: SubobjectData): Boolean
        fun IsAttachedTo(Data: SubobjectData, InHandle: SubobjectDataHandle): Boolean
        fun IsChildActor(Data: SubobjectData): Boolean
        fun IsComponent(Data: SubobjectData): Boolean
        fun IsDefaultSceneRoot(Data: SubobjectData): Boolean
        fun IsInheritedComponent(Data: SubobjectData): Boolean
        fun IsInstancedActor(Data: SubobjectData): Boolean
        fun IsInstancedComponent(Data: SubobjectData): Boolean
        fun IsNativeComponent(Data: SubobjectData): Boolean
        fun IsRootActor(Data: SubobjectData): Boolean
        fun IsRootComponent(Data: SubobjectData): Boolean
        fun IsSceneComponent(Data: SubobjectData): Boolean
        fun IsValid(Data: SubobjectData): Boolean
    }
}

external open class SubobjectDataBlueprintFunctionLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)
    open fun GetDisplayName(Data: SubobjectData): String
    open fun GetBlueprint(Data: SubobjectData): Blueprint

    companion object {
        fun Load(ResourceName: String): SubobjectDataBlueprintFunctionLibrary
        fun Find(Outer: UObject, ResourceName: String): SubobjectDataBlueprintFunctionLibrary
        fun GetDefaultObject(): SubobjectDataBlueprintFunctionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SubobjectDataBlueprintFunctionLibrary
        fun IsValid(Data: SubobjectData): Boolean
        fun IsSceneComponent(Data: SubobjectData): Boolean
        fun IsRootComponent(Data: SubobjectData): Boolean
        fun IsRootActor(Data: SubobjectData): Boolean
        fun IsNativeComponent(Data: SubobjectData): Boolean
        fun IsInstancedComponent(Data: SubobjectData): Boolean
        fun IsInstancedActor(Data: SubobjectData): Boolean
        fun IsInheritedComponent(Data: SubobjectData): Boolean
        fun IsHandleValid(DataHandle: SubobjectDataHandle): Boolean
        fun IsDefaultSceneRoot(Data: SubobjectData): Boolean
        fun IsComponent(Data: SubobjectData): Boolean
        fun IsChildActor(Data: SubobjectData): Boolean
        fun IsAttachedTo(Data: SubobjectData, InHandle: SubobjectDataHandle): Boolean
        fun IsActor(Data: SubobjectData): Boolean
        fun GetVariableName(Data: SubobjectData): String
        fun GetObject(Data: SubobjectData, bEvenIfPendingKill: Boolean): UObject
        fun GetHandle(Data: SubobjectData, OutHandle: SubobjectDataHandle = definedExternally): `T$596`
        fun GetData(DataHandle: SubobjectDataHandle, OutData: SubobjectData = definedExternally): `T$595`
        fun CanReparent(Data: SubobjectData): Boolean
        fun CanRename(Data: SubobjectData): Boolean
        fun CanEdit(Data: SubobjectData): Boolean
        fun CanDuplicate(Data: SubobjectData): Boolean
        fun CanDelete(Data: SubobjectData): Boolean
        fun CanCopy(Data: SubobjectData): Boolean
        fun C(Other: UObject): SubobjectDataBlueprintFunctionLibrary
        fun C(Other: Any): SubobjectDataBlueprintFunctionLibrary
    }
}

external open class ReparentSubobjectParams {
    open var NewParentHandle: SubobjectDataHandle
    open var BlueprintContext: Blueprint
    open var ActorPreviewContext: Actor
    open fun clone(): ReparentSubobjectParams

    companion object {
        fun C(Other: UObject): ReparentSubobjectParams
        fun C(Other: Any): ReparentSubobjectParams
    }
}

external open class AddNewSubobjectParams {
    open var ParentHandle: SubobjectDataHandle
    open var NewClass: UnrealEngineClass
    open var BlueprintContext: Blueprint
    open var bSkipMarkBlueprintModified: Boolean
    open var bConformTransformToParent: Boolean
    open fun clone(): AddNewSubobjectParams

    companion object {
        fun C(Other: UObject): AddNewSubobjectParams
        fun C(Other: Any): AddNewSubobjectParams
    }
}

external interface `T$597` {
    var OutArray: Array<SubobjectDataHandle>
}

external interface `T$598` {
    var OutArray: Array<SubobjectDataHandle>
}

external interface `T$599` {
    var OutData: SubobjectData
    var `$`: Boolean
}

external interface `T$600` {
    var OutErrorMessage: String
    var `$`: Boolean
}

external interface `T$601` {
    var FailReason: String
    var `$`: SubobjectDataHandle
}

external open class SubobjectDataSubsystem : EngineSubsystem {
    constructor()
    constructor(Outer: UObject)
    open fun ReparentSubobjects(Params: ReparentSubobjectParams, HandlesToMove: Array<SubobjectDataHandle>): Boolean
    open fun ReparentSubobject(Params: ReparentSubobjectParams, ToReparentHandle: SubobjectDataHandle): Boolean
    open fun RenameSubobject(Handle: SubobjectDataHandle, InNewName: String): Boolean
    open fun MakeNewSceneRoot(Context: SubobjectDataHandle, NewSceneRoot: SubobjectDataHandle, BPContext: Blueprint): Boolean
    open fun GatherSubobjectDataForInstance(Context: Actor, OutArray: Array<SubobjectDataHandle> = definedExternally): `T$597`
    open fun GatherSubobjectDataForBlueprint(Context: Blueprint, OutArray: Array<SubobjectDataHandle> = definedExternally): `T$598`
    open fun FindSubobjectDataFromHandle(Handle: SubobjectDataHandle, OutData: SubobjectData = definedExternally): `T$599`
    open fun DeleteSubobjectsfromInstance(ContextHandle: SubobjectDataHandle, SubobjectsToDelete: Array<SubobjectDataHandle>): Number
    open fun DeleteSubobjectfromInstance(ContextHandle: SubobjectDataHandle, SubobjectToDelete: SubobjectDataHandle): Number
    open fun IsValidRename(Handle: SubobjectDataHandle, InNewText: String, OutErrorMessage: String = definedExternally): `T$600`
    open fun FindHandleForObject(Context: SubobjectDataHandle, ObjectToFind: UObject, BPContext: Blueprint): SubobjectDataHandle
    open fun DetachSubobject(OwnerHandle: SubobjectDataHandle, ChildToRemove: SubobjectDataHandle): Boolean
    open fun DeleteSubobjectsfromBlueprint(ContextHandle: SubobjectDataHandle, SubobjectsToDelete: Array<SubobjectDataHandle>, BPContext: Blueprint): Number
    open fun DeleteSubobjectfromBlueprint(ContextHandle: SubobjectDataHandle, SubobjectToDelete: SubobjectDataHandle, BPContext: Blueprint): Number
    open fun CopySubobjects(Handles: Array<SubobjectDataHandle>, BPContext: Blueprint)
    open fun ChangeSubobjectClass(Handle: SubobjectDataHandle, NewClass: UnrealEngineClass): Boolean
    open fun CanPasteSubobjects(RootHandle: SubobjectDataHandle, BPContext: Blueprint): Boolean
    open fun CanCopySubobjects(Handles: Array<SubobjectDataHandle>): Boolean
    open fun AttachSubobject(OwnerHandle: SubobjectDataHandle, ChildToAddHandle: SubobjectDataHandle): Boolean
    open fun AddNewSubobject(Params: AddNewSubobjectParams, FailReason: String = definedExternally): `T$601`

    companion object {
        fun Load(ResourceName: String): SubobjectDataSubsystem
        fun Find(Outer: UObject, ResourceName: String): SubobjectDataSubsystem
        fun GetDefaultObject(): SubobjectDataSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SubobjectDataSubsystem
        fun RenameSubobjectMemberVariable(BPContext: Blueprint, InHandle: SubobjectDataHandle, NewName: String)
        fun CreateNewCPPComponent(ComponentClass: UnrealEngineClass, NewClassPath: String, NewClassName: String): UnrealEngineClass
        fun CreateNewBlueprintComponent(ComponentClass: UnrealEngineClass, NewClassPath: String, NewClassName: String): UnrealEngineClass
        fun C(Other: UObject): SubobjectDataSubsystem
        fun C(Other: Any): SubobjectDataSubsystem
    }
}

external open class SubobjectEditorMenuContext : UObject {
    constructor()
    constructor(Outer: UObject)
    open fun GetSelectedObjects(): Array<UObject>

    companion object {
        fun Load(ResourceName: String): SubobjectEditorMenuContext
        fun Find(Outer: UObject, ResourceName: String): SubobjectEditorMenuContext
        fun GetDefaultObject(): SubobjectEditorMenuContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SubobjectEditorMenuContext
        fun C(Other: UObject): SubobjectEditorMenuContext
        fun C(Other: Any): SubobjectEditorMenuContext
    }
}

external open class Texture2DDynamic : Texture {
    constructor()
    constructor(Outer: UObject)
    open var Format: String /* "PF_Unknown" | "PF_A32B32G32R32F" | "PF_B8G8R8A8" | "PF_G8" | "PF_G16" | "PF_DXT1" | "PF_DXT3" | "PF_DXT5" | "PF_UYVY" | "PF_FloatRGB" | "PF_FloatRGBA" | "PF_DepthStencil" | "PF_ShadowDepth" | "PF_R32_FLOAT" | "PF_G16R16" | "PF_G16R16F" | "PF_G16R16F_FILTER" | "PF_G32R32F" | "PF_A2B10G10R10" | "PF_A16B16G16R16" | "PF_D24" | "PF_R16F" | "PF_R16F_FILTER" | "PF_BC5" | "PF_V8U8" | "PF_A1" | "PF_FloatR11G11B10" | "PF_A8" | "PF_R32_UINT" | "PF_R32_SINT" | "PF_PVRTC2" | "PF_PVRTC4" | "PF_R16_UINT" | "PF_R16_SINT" | "PF_R16G16B16A16_UINT" | "PF_R16G16B16A16_SINT" | "PF_R5G6B5_UNORM" | "PF_R8G8B8A8" | "PF_A8R8G8B8" | "PF_BC4" | "PF_R8G8" | "PF_ATC_RGB" | "PF_ATC_RGBA_E" | "PF_ATC_RGBA_I" | "PF_X24_G8" | "PF_ETC1" | "PF_ETC2_RGB" | "PF_ETC2_RGBA" | "PF_R32G32B32A32_UINT" | "PF_R16G16_UINT" | "PF_ASTC_4x4" | "PF_ASTC_6x6" | "PF_ASTC_8x8" | "PF_ASTC_10x10" | "PF_ASTC_12x12" | "PF_BC6H" | "PF_BC7" | "PF_R8_UINT" | "PF_L8" | "PF_XGXR8" | "PF_R8G8B8A8_UINT" | "PF_R8G8B8A8_SNORM" | "PF_R16G16B16A16_UNORM" | "PF_R16G16B16A16_SNORM" | "PF_PLATFORM_HDR_0" | "PF_PLATFORM_HDR_1" | "PF_PLATFORM_HDR_2" | "PF_NV12" | "PF_R32G32_UINT" | "PF_ETC2_R11_EAC" | "PF_ETC2_RG11_EAC" | "PF_R8" | "PF_B5G5R5A1_UNORM" | "PF_G16R16_SNORM" | "PF_R8G8_UINT" | "PF_R32G32B32_UINT" | "PF_R32G32B32_SINT" | "PF_R32G32B32F" | "PF_R8_SINT" | "PF_R64_UINT" | "PF_MAX" */

    companion object {
        fun Load(ResourceName: String): Texture2DDynamic
        fun Find(Outer: UObject, ResourceName: String): Texture2DDynamic
        fun GetDefaultObject(): Texture2DDynamic
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Texture2DDynamic
        fun C(Other: UObject): Texture2DDynamic
        fun C(Other: Any): Texture2DDynamic
    }
}

external open class AsyncTaskDownloadImage : BlueprintAsyncActionBase {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<(Texture: Texture2DDynamic) -> Unit>
    open var OnFail: UnrealEngineMulticastDelegate<(Texture: Texture2DDynamic) -> Unit>

    companion object {
        fun Load(ResourceName: String): AsyncTaskDownloadImage
        fun Find(Outer: UObject, ResourceName: String): AsyncTaskDownloadImage
        fun GetDefaultObject(): AsyncTaskDownloadImage
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AsyncTaskDownloadImage
        fun DownloadImage(URL: String): AsyncTaskDownloadImage
        fun C(Other: UObject): AsyncTaskDownloadImage
        fun C(Other: Any): AsyncTaskDownloadImage
    }
}

external open class ContentWidget : PanelWidget {
    constructor()
    constructor(Outer: UObject)
    open fun SetContent(Content: Widget): PanelSlot
    open fun GetContentSlot(): PanelSlot
    open fun GetContent(): Widget

    companion object {
        fun Load(ResourceName: String): ContentWidget
        fun Find(Outer: UObject, ResourceName: String): ContentWidget
        fun GetDefaultObject(): ContentWidget
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ContentWidget
        fun C(Other: UObject): ContentWidget
        fun C(Other: Any): ContentWidget
    }
}

external open class BackgroundBlur : ContentWidget {
    constructor()
    constructor(Outer: UObject)
    open var Padding: Margin
    open var HorizontalAlignment: String /* "HAlign_Fill" | "HAlign_Left" | "HAlign_Center" | "HAlign_Right" | "HAlign_MAX" */
    open var VerticalAlignment: String /* "VAlign_Fill" | "VAlign_Top" | "VAlign_Center" | "VAlign_Bottom" | "VAlign_MAX" */
    open var bApplyAlphaToBlur: Boolean
    open var BlurStrength: Number
    open var bOverrideAutoRadiusCalculation: Boolean
    open var BlurRadius: Number
    open var CornerRadius: Vector4
    open var LowQualityFallbackBrush: SlateBrush
    open fun SetVerticalAlignment(InVerticalAlignment: String /* "VAlign_Fill" | "VAlign_Top" | "VAlign_Center" | "VAlign_Bottom" | "VAlign_MAX" */)
    open fun SetPadding(InPadding: Margin)
    open fun SetLowQualityFallbackBrush(InBrush: SlateBrush)
    open fun SetHorizontalAlignment(InHorizontalAlignment: String /* "HAlign_Fill" | "HAlign_Left" | "HAlign_Center" | "HAlign_Right" | "HAlign_MAX" */)
    open fun SetCornerRadius(InCornerRadius: Vector4)
    open fun SetBlurStrength(InStrength: Number)
    open fun SetBlurRadius(InBlurRadius: Number)
    open fun SetApplyAlphaToBlur(bInApplyAlphaToBlur: Boolean)

    companion object {
        fun Load(ResourceName: String): BackgroundBlur
        fun Find(Outer: UObject, ResourceName: String): BackgroundBlur
        fun GetDefaultObject(): BackgroundBlur
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BackgroundBlur
        fun C(Other: UObject): BackgroundBlur
        fun C(Other: Any): BackgroundBlur
    }
}

external open class BackgroundBlurSlot : PanelSlot {
    constructor()
    constructor(Outer: UObject)
    open var Padding: Margin
    open var HorizontalAlignment: String /* "HAlign_Fill" | "HAlign_Left" | "HAlign_Center" | "HAlign_Right" | "HAlign_MAX" */
    open var VerticalAlignment: String /* "VAlign_Fill" | "VAlign_Top" | "VAlign_Center" | "VAlign_Bottom" | "VAlign_MAX" */
    open fun SetVerticalAlignment(InVerticalAlignment: String /* "VAlign_Fill" | "VAlign_Top" | "VAlign_Center" | "VAlign_Bottom" | "VAlign_MAX" */)
    open fun SetPadding(InPadding: Margin)
    open fun SetHorizontalAlignment(InHorizontalAlignment: String /* "HAlign_Fill" | "HAlign_Left" | "HAlign_Center" | "HAlign_Right" | "HAlign_MAX" */)

    companion object {
        fun Load(ResourceName: String): BackgroundBlurSlot
        fun Find(Outer: UObject, ResourceName: String): BackgroundBlurSlot
        fun GetDefaultObject(): BackgroundBlurSlot
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BackgroundBlurSlot
        fun C(Other: UObject): BackgroundBlurSlot
        fun C(Other: Any): BackgroundBlurSlot
    }
}

external open class BoolBinding : PropertyBinding {
    constructor()
    constructor(Outer: UObject)
    open fun GetValue(): Boolean

    companion object {
        fun Load(ResourceName: String): BoolBinding
        fun Find(Outer: UObject, ResourceName: String): BoolBinding
        fun GetDefaultObject(): BoolBinding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BoolBinding
        fun C(Other: UObject): BoolBinding
        fun C(Other: Any): BoolBinding
    }
}

external open class Border : ContentWidget {
    constructor()
    constructor(Outer: UObject)
    open var HorizontalAlignment: String /* "HAlign_Fill" | "HAlign_Left" | "HAlign_Center" | "HAlign_Right" | "HAlign_MAX" */
    open var VerticalAlignment: String /* "VAlign_Fill" | "VAlign_Top" | "VAlign_Center" | "VAlign_Bottom" | "VAlign_MAX" */
    open var bShowEffectWhenDisabled: Boolean
    open var ContentColorAndOpacity: LinearColor
    open var ContentColorAndOpacityDelegate: UnrealEngineDelegate<() -> LinearColor>
    open var Padding: Margin
    open var Background: SlateBrush
    open var BackgroundDelegate: UnrealEngineDelegate<() -> SlateBrush>
    open var BrushColor: LinearColor
    open var BrushColorDelegate: UnrealEngineDelegate<() -> LinearColor>
    open var DesiredSizeScale: Vector2D
    open var bFlipForRightToLeftFlowDirection: Boolean
    open var OnMouseButtonDownEvent: UnrealEngineDelegate<(MyGeometry: Geometry, MouseEvent: UPointerEvent) -> EventReply>
    open var OnMouseButtonUpEvent: UnrealEngineDelegate<(MyGeometry: Geometry, MouseEvent: UPointerEvent) -> EventReply>
    open var OnMouseMoveEvent: UnrealEngineDelegate<(MyGeometry: Geometry, MouseEvent: UPointerEvent) -> EventReply>
    open var OnMouseDoubleClickEvent: UnrealEngineDelegate<(MyGeometry: Geometry, MouseEvent: UPointerEvent) -> EventReply>
    open var Brush: SlateBrushAsset
    open fun SetVerticalAlignment(InVerticalAlignment: String /* "VAlign_Fill" | "VAlign_Top" | "VAlign_Center" | "VAlign_Bottom" | "VAlign_MAX" */)
    open fun SetPadding(InPadding: Margin)
    open fun SetHorizontalAlignment(InHorizontalAlignment: String /* "HAlign_Fill" | "HAlign_Left" | "HAlign_Center" | "HAlign_Right" | "HAlign_MAX" */)
    open fun SetDesiredSizeScale(InScale: Vector2D)
    open fun SetContentColorAndOpacity(InContentColorAndOpacity: LinearColor)
    open fun SetBrushFromTexture(Texture: Texture2D)
    open fun SetBrushFromMaterial(Material: MaterialInterface)
    open fun SetBrushFromAsset(Asset: SlateBrushAsset)
    open fun SetBrushColor(InBrushColor: LinearColor)
    open fun SetBrush(InBrush: SlateBrush)
    open fun GetDynamicMaterial(): MaterialInstanceDynamic

    companion object {
        fun Load(ResourceName: String): Border
        fun Find(Outer: UObject, ResourceName: String): Border
        fun GetDefaultObject(): Border
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Border
        fun C(Other: UObject): Border
        fun C(Other: Any): Border
    }
}

external open class BrushBinding : PropertyBinding {
    constructor()
    constructor(Outer: UObject)
    open fun GetValue(): SlateBrush

    companion object {
        fun Load(ResourceName: String): BrushBinding
        fun Find(Outer: UObject, ResourceName: String): BrushBinding
        fun GetDefaultObject(): BrushBinding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BrushBinding
        fun C(Other: UObject): BrushBinding
        fun C(Other: Any): BrushBinding
    }
}

external object EButtonClickMethod {
    var DownAndUp: String /* "DownAndUp" */
    var MouseDown: String /* "MouseDown" */
    var MouseUp: String /* "MouseUp" */
    var PreciseClick: String /* "PreciseClick" */
    var EButtonClickMethod_MAX: String /* "EButtonClickMethod_MAX" */
}

external object EButtonTouchMethod {
    var DownAndUp: String /* "DownAndUp" */
    var Down: String /* "Down" */
    var PreciseTap: String /* "PreciseTap" */
    var EButtonTouchMethod_MAX: String /* "EButtonTouchMethod_MAX" */
}

external object EButtonPressMethod {
    var DownAndUp: String /* "DownAndUp" */
    var ButtonPress: String /* "ButtonPress" */
    var ButtonRelease: String /* "ButtonRelease" */
    var EButtonPressMethod_MAX: String /* "EButtonPressMethod_MAX" */
}

external open class Button : ContentWidget {
    constructor()
    constructor(Outer: UObject)
    open var Style: SlateWidgetStyleAsset
    open var WidgetStyle: ButtonStyle
    open var ColorAndOpacity: LinearColor
    open var BackgroundColor: LinearColor
    open var ClickMethod: String /* "DownAndUp" | "MouseDown" | "MouseUp" | "PreciseClick" | "EButtonClickMethod_MAX" */
    open var TouchMethod: String /* "DownAndUp" | "Down" | "PreciseTap" | "EButtonTouchMethod_MAX" */
    open var PressMethod: String /* "DownAndUp" | "ButtonPress" | "ButtonRelease" | "EButtonPressMethod_MAX" */
    open var IsFocusable: Boolean
    open var OnClicked: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnPressed: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnReleased: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnHovered: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnUnhovered: UnrealEngineMulticastDelegate<() -> Unit>
    open fun SetTouchMethod(InTouchMethod: String /* "DownAndUp" | "Down" | "PreciseTap" | "EButtonTouchMethod_MAX" */)
    open fun SetStyle(InStyle: ButtonStyle)
    open fun SetPressMethod(InPressMethod: String /* "DownAndUp" | "ButtonPress" | "ButtonRelease" | "EButtonPressMethod_MAX" */)
    open fun SetColorAndOpacity(InColorAndOpacity: LinearColor)
    open fun SetClickMethod(InClickMethod: String /* "DownAndUp" | "MouseDown" | "MouseUp" | "PreciseClick" | "EButtonClickMethod_MAX" */)
    open fun SetBackgroundColor(InBackgroundColor: LinearColor)
    open fun IsPressed(): Boolean

    companion object {
        fun Load(ResourceName: String): Button
        fun Find(Outer: UObject, ResourceName: String): Button
        fun GetDefaultObject(): Button
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Button
        fun C(Other: UObject): Button
        fun C(Other: Any): Button
    }
}

external open class ButtonSlot : PanelSlot {
    constructor()
    constructor(Outer: UObject)
    open var Padding: Margin
    open var HorizontalAlignment: String /* "HAlign_Fill" | "HAlign_Left" | "HAlign_Center" | "HAlign_Right" | "HAlign_MAX" */
    open var VerticalAlignment: String /* "VAlign_Fill" | "VAlign_Top" | "VAlign_Center" | "VAlign_Bottom" | "VAlign_MAX" */
    open fun SetVerticalAlignment(InVerticalAlignment: String /* "VAlign_Fill" | "VAlign_Top" | "VAlign_Center" | "VAlign_Bottom" | "VAlign_MAX" */)
    open fun SetPadding(InPadding: Margin)
    open fun SetHorizontalAlignment(InHorizontalAlignment: String /* "HAlign_Fill" | "HAlign_Left" | "HAlign_Center" | "HAlign_Right" | "HAlign_MAX" */)

    companion object {
        fun Load(ResourceName: String): ButtonSlot
        fun Find(Outer: UObject, ResourceName: String): ButtonSlot
        fun GetDefaultObject(): ButtonSlot
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ButtonSlot
        fun C(Other: UObject): ButtonSlot
        fun C(Other: Any): ButtonSlot
    }
}

external open class CanvasPanel : PanelWidget {
    constructor()
    constructor(Outer: UObject)
    open fun AddChildToCanvas(Content: Widget): CanvasPanelSlot

    companion object {
        fun Load(ResourceName: String): CanvasPanel
        fun Find(Outer: UObject, ResourceName: String): CanvasPanel
        fun GetDefaultObject(): CanvasPanel
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CanvasPanel
        fun C(Other: UObject): CanvasPanel
        fun C(Other: Any): CanvasPanel
    }
}

external open class CheckBox : ContentWidget {
    constructor()
    constructor(Outer: UObject)
    open var CheckedState: String /* "Unchecked" | "Checked" | "Undetermined" | "ECheckBoxState_MAX" */
    open var CheckedStateDelegate: UnrealEngineDelegate<() -> String>
    open var WidgetStyle: CheckBoxStyle
    open var Style: SlateWidgetStyleAsset
    open var UncheckedImage: SlateBrushAsset
    open var UncheckedHoveredImage: SlateBrushAsset
    open var UncheckedPressedImage: SlateBrushAsset
    open var CheckedImage: SlateBrushAsset
    open var CheckedHoveredImage: SlateBrushAsset
    open var CheckedPressedImage: SlateBrushAsset
    open var UndeterminedImage: SlateBrushAsset
    open var UndeterminedHoveredImage: SlateBrushAsset
    open var UndeterminedPressedImage: SlateBrushAsset
    open var HorizontalAlignment: String /* "HAlign_Fill" | "HAlign_Left" | "HAlign_Center" | "HAlign_Right" | "HAlign_MAX" */
    open var Padding: Margin
    open var BorderBackgroundColor: SlateColor
    open var ClickMethod: String /* "DownAndUp" | "MouseDown" | "MouseUp" | "PreciseClick" | "EButtonClickMethod_MAX" */
    open var TouchMethod: String /* "DownAndUp" | "Down" | "PreciseTap" | "EButtonTouchMethod_MAX" */
    open var PressMethod: String /* "DownAndUp" | "ButtonPress" | "ButtonRelease" | "EButtonPressMethod_MAX" */
    open var IsFocusable: Boolean
    open var OnCheckStateChanged: UnrealEngineMulticastDelegate<(bIsChecked: Boolean) -> Unit>
    open fun SetTouchMethod(InTouchMethod: String /* "DownAndUp" | "Down" | "PreciseTap" | "EButtonTouchMethod_MAX" */)
    open fun SetPressMethod(InPressMethod: String /* "DownAndUp" | "ButtonPress" | "ButtonRelease" | "EButtonPressMethod_MAX" */)
    open fun SetIsChecked(InIsChecked: Boolean)
    open fun SetClickMethod(InClickMethod: String /* "DownAndUp" | "MouseDown" | "MouseUp" | "PreciseClick" | "EButtonClickMethod_MAX" */)
    open fun SetCheckedState(InCheckedState: String /* "Unchecked" | "Checked" | "Undetermined" | "ECheckBoxState_MAX" */)
    open fun IsPressed(): Boolean
    open fun IsChecked(): Boolean
    open fun GetCheckedState(): String /* "Unchecked" | "Checked" | "Undetermined" | "ECheckBoxState_MAX" */

    companion object {
        fun Load(ResourceName: String): CheckBox
        fun Find(Outer: UObject, ResourceName: String): CheckBox
        fun GetDefaultObject(): CheckBox
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CheckBox
        fun C(Other: UObject): CheckBox
        fun C(Other: Any): CheckBox
    }
}

external open class CheckedStateBinding : PropertyBinding {
    constructor()
    constructor(Outer: UObject)
    open fun GetValue(): String /* "Unchecked" | "Checked" | "Undetermined" | "ECheckBoxState_MAX" */

    companion object {
        fun Load(ResourceName: String): CheckedStateBinding
        fun Find(Outer: UObject, ResourceName: String): CheckedStateBinding
        fun GetDefaultObject(): CheckedStateBinding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CheckedStateBinding
        fun C(Other: UObject): CheckedStateBinding
        fun C(Other: Any): CheckedStateBinding
    }
}

external open class CircularThrobber : Widget {
    constructor()
    constructor(Outer: UObject)
    open var NumberOfPieces: Number
    open var Period: Number
    open var Radius: Number
    open var PieceImage: SlateBrushAsset
    open var UImage: SlateBrush
    open var bEnableRadius: Boolean
    open fun SetRadius(InRadius: Number)
    open fun SetPeriod(InPeriod: Number)
    open fun SetNumberOfPieces(InNumberOfPieces: Number)

    companion object {
        fun Load(ResourceName: String): CircularThrobber
        fun Find(Outer: UObject, ResourceName: String): CircularThrobber
        fun GetDefaultObject(): CircularThrobber
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CircularThrobber
        fun C(Other: UObject): CircularThrobber
        fun C(Other: Any): CircularThrobber
    }
}

external open class ColorBinding : PropertyBinding {
    constructor()
    constructor(Outer: UObject)
    open fun GetSlateValue(): SlateColor
    open fun GetLinearValue(): LinearColor

    companion object {
        fun Load(ResourceName: String): ColorBinding
        fun Find(Outer: UObject, ResourceName: String): ColorBinding
        fun GetDefaultObject(): ColorBinding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ColorBinding
        fun C(Other: UObject): ColorBinding
        fun C(Other: Any): ColorBinding
    }
}

external open class ComboBox : Widget {
    constructor()
    constructor(Outer: UObject)
    open var Items: Array<UObject>
    open var OnGenerateWidgetEvent: UnrealEngineDelegate<(Item: UObject) -> Widget>
    open var bIsFocusable: Boolean

    companion object {
        fun Load(ResourceName: String): ComboBox
        fun Find(Outer: UObject, ResourceName: String): ComboBox
        fun GetDefaultObject(): ComboBox
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ComboBox
        fun C(Other: UObject): ComboBox
        fun C(Other: Any): ComboBox
    }
}

external open class TableRowStyle : SlateWidgetStyle {
    open var SelectorFocusedBrush: SlateBrush
    open var ActiveHoveredBrush: SlateBrush
    open var ActiveBrush: SlateBrush
    open var InactiveHoveredBrush: SlateBrush
    open var InactiveBrush: SlateBrush
    open var bUseParentRowBrush: Boolean
    open var ParentRowBackgroundBrush: SlateBrush
    open var ParentRowBackgroundHoveredBrush: SlateBrush
    open var EvenRowBackgroundHoveredBrush: SlateBrush
    open var EvenRowBackgroundBrush: SlateBrush
    open var OddRowBackgroundHoveredBrush: SlateBrush
    open var OddRowBackgroundBrush: SlateBrush
    open var TextColor: SlateColor
    open var SelectedTextColor: SlateColor
    open var DropIndicator_Above: SlateBrush
    open var DropIndicator_Onto: SlateBrush
    open var DropIndicator_Below: SlateBrush
    open var ActiveHighlightedBrush: SlateBrush
    open var InactiveHighlightedBrush: SlateBrush
    override fun clone(): TableRowStyle

    companion object {
        fun C(Other: UObject): TableRowStyle
        fun C(Other: Any): TableRowStyle
    }
}

external object ESelectInfo {
    var OnKeyPress: String /* "OnKeyPress" */
    var OnNavigation: String /* "OnNavigation" */
    var OnMouseClick: String /* "OnMouseClick" */
    var Direct: String /* "Direct" */
    var ESelectInfo_MAX: String /* "ESelectInfo_MAX" */
}

external open class ComboBoxKey : Widget {
    constructor()
    constructor(Outer: UObject)
    open var Options: Array<String>
    open var SelectedOption: String
    open var WidgetStyle: ComboBoxStyle
    open var ItemStyle: TableRowStyle
    open var ForegroundColor: SlateColor
    open var ContentPadding: Margin
    open var MaxListHeight: Number
    open var bHasDownArrow: Boolean
    open var bEnableGamepadNavigationMode: Boolean
    open var bIsFocusable: Boolean
    open var OnGenerateContentWidget: UnrealEngineDelegate<(Item: String) -> Widget>
    open var OnGenerateItemWidget: UnrealEngineDelegate<(Item: String) -> Widget>
    open var OnSelectionChanged: UnrealEngineMulticastDelegate<(SelectedItem: String, SelectionType: String /* "OnKeyPress" | "OnNavigation" | "OnMouseClick" | "Direct" | "ESelectInfo_MAX" */) -> Unit>
    open var OnOpening: UnrealEngineMulticastDelegate<() -> Unit>
    open fun SetSelectedOption(Option: String)
    open fun RemoveOption(Option: String): Boolean
    open fun IsOpen(): Boolean
    open fun GetSelectedOption(): String
    open fun ClearSelection()
    open fun ClearOptions()
    open fun AddOption(Option: String)

    companion object {
        fun Load(ResourceName: String): ComboBoxKey
        fun Find(Outer: UObject, ResourceName: String): ComboBoxKey
        fun GetDefaultObject(): ComboBoxKey
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ComboBoxKey
        fun C(Other: UObject): ComboBoxKey
        fun C(Other: Any): ComboBoxKey
    }
}

external open class ComboBoxString : Widget {
    constructor()
    constructor(Outer: UObject)
    open var DefaultOptions: Array<String>
    open var SelectedOption: String
    open var WidgetStyle: ComboBoxStyle
    open var ItemStyle: TableRowStyle
    open var ContentPadding: Margin
    open var MaxListHeight: Number
    open var HasDownArrow: Boolean
    open var EnableGamepadNavigationMode: Boolean
    open var Font: SlateFontInfo
    open var ForegroundColor: SlateColor
    open var bIsFocusable: Boolean
    open var OnGenerateWidgetEvent: UnrealEngineDelegate<(Item: String) -> Widget>
    open var OnSelectionChanged: UnrealEngineMulticastDelegate<(SelectedItem: String, SelectionType: String /* "OnKeyPress" | "OnNavigation" | "OnMouseClick" | "Direct" | "ESelectInfo_MAX" */) -> Unit>
    open var OnOpening: UnrealEngineMulticastDelegate<() -> Unit>
    open fun SetSelectedOption(Option: String)
    open fun SetSelectedIndex(index: Number)
    open fun RemoveOption(Option: String): Boolean
    open fun RefreshOptions()
    open fun IsOpen(): Boolean
    open fun GetSelectedOption(): String
    open fun GetSelectedIndex(): Number
    open fun GetOptionCount(): Number
    open fun GetOptionAtIndex(index: Number): String
    open fun FindOptionIndex(Option: String): Number
    open fun ClearSelection()
    open fun ClearOptions()
    open fun AddOption(Option: String)

    companion object {
        fun Load(ResourceName: String): ComboBoxString
        fun Find(Outer: UObject, ResourceName: String): ComboBoxString
        fun GetDefaultObject(): ComboBoxString
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ComboBoxString
        fun C(Other: UObject): ComboBoxString
        fun C(Other: Any): ComboBoxString
    }
}

external object EDynamicBoxType {
    var Horizontal: String /* "Horizontal" */
    var Vertical: String /* "Vertical" */
    var Wrap: String /* "Wrap" */
    var VerticalWrap: String /* "VerticalWrap" */
    var Radial: String /* "Radial" */
    var Overlay: String /* "Overlay" */
    var EDynamicBoxType_MAX: String /* "EDynamicBoxType_MAX" */
}

external open class RadialBoxSettings {
    open var StartingAngle: Number
    open var bDistributeItemsEvenly: Boolean
    open var AngleBetweenItems: Number
    open var SectorCentralAngle: Number
    open fun clone(): RadialBoxSettings

    companion object {
        fun C(Other: UObject): RadialBoxSettings
        fun C(Other: Any): RadialBoxSettings
    }
}

external open class UserWidgetPool {
    open var ActiveWidgets: Array<UserWidget>
    open var InactiveWidgets: Array<UserWidget>
    open fun clone(): UserWidgetPool

    companion object {
        fun C(Other: UObject): UserWidgetPool
        fun C(Other: Any): UserWidgetPool
    }
}

external open class DynamicEntryBoxBase : Widget {
    constructor()
    constructor(Outer: UObject)
    open var EntryBoxType: String /* "Horizontal" | "Vertical" | "Wrap" | "VerticalWrap" | "Radial" | "Overlay" | "EDynamicBoxType_MAX" */
    open var EntrySpacing: Vector2D
    open var SpacingPattern: Array<Vector2D>
    open var EntrySizeRule: SlateChildSize
    open var EntryHorizontalAlignment: String /* "HAlign_Fill" | "HAlign_Left" | "HAlign_Center" | "HAlign_Right" | "HAlign_MAX" */
    open var EntryVerticalAlignment: String /* "VAlign_Fill" | "VAlign_Top" | "VAlign_Center" | "VAlign_Bottom" | "VAlign_MAX" */
    open var MaxElementSize: Number
    open var RadialBoxSettings: RadialBoxSettings
    open var EntryWidgetPool: UserWidgetPool
    open fun SetRadialSettings(InSettings: RadialBoxSettings)
    open fun SetEntrySpacing(InEntrySpacing: Vector2D)
    open fun GetNumEntries(): Number
    open fun GetAllEntries(): Array<UserWidget>

    companion object {
        fun Load(ResourceName: String): DynamicEntryBoxBase
        fun Find(Outer: UObject, ResourceName: String): DynamicEntryBoxBase
        fun GetDefaultObject(): DynamicEntryBoxBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DynamicEntryBoxBase
        fun C(Other: UObject): DynamicEntryBoxBase
        fun C(Other: Any): DynamicEntryBoxBase
    }
}

external open class DynamicEntryBox : DynamicEntryBoxBase {
    constructor()
    constructor(Outer: UObject)
    open var NumDesignerPreviewEntries: Number
    open var EntryWidgetClass: UnrealEngineClass
    open fun Reset(bDeleteWidgets: Boolean)
    open fun RemoveEntry(EntryWidget: UserWidget)
    open fun CreateEntryofClass(EntryClass: UnrealEngineClass): UserWidget
    open fun CreateEntry(): UserWidget

    companion object {
        fun Load(ResourceName: String): DynamicEntryBox
        fun Find(Outer: UObject, ResourceName: String): DynamicEntryBox
        fun GetDefaultObject(): DynamicEntryBox
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DynamicEntryBox
        fun C(Other: UObject): DynamicEntryBox
        fun C(Other: Any): DynamicEntryBox
    }
}

external object EVirtualKeyboardType {
    var Default: String /* "Default" */
    var Number: String /* "Number" */
    var Web: String /* "Web" */
    var Email: String /* "Email" */
    var Password: String /* "Password" */
    var AlphaNumeric: String /* "AlphaNumeric" */
    var EVirtualKeyboardType_MAX: String /* "EVirtualKeyboardType_MAX" */
}

external open class VirtualKeyboardOptions {
    open var bEnableAutocorrect: Boolean
    open fun clone(): VirtualKeyboardOptions

    companion object {
        fun C(Other: UObject): VirtualKeyboardOptions
        fun C(Other: Any): VirtualKeyboardOptions
    }
}

external object EVirtualKeyboardTrigger {
    var OnFocusByPointer: String /* "OnFocusByPointer" */
    var OnAllFocusEvents: String /* "OnAllFocusEvents" */
    var EVirtualKeyboardTrigger_MAX: String /* "EVirtualKeyboardTrigger_MAX" */
}

external object EVirtualKeyboardDismissAction {
    var TextChangeOnDismiss: String /* "TextChangeOnDismiss" */
    var TextCommitOnAccept: String /* "TextCommitOnAccept" */
    var TextCommitOnDismiss: String /* "TextCommitOnDismiss" */
    var EVirtualKeyboardDismissAction_MAX: String /* "EVirtualKeyboardDismissAction_MAX" */
}

external object ETextJustify {
    var Left: String /* "Left" */
    var Center: String /* "Center" */
    var Right: String /* "Right" */
    var ETextJustify_MAX: String /* "ETextJustify_MAX" */
}

external object ETextShapingMethod {
    var Auto: String /* "Auto" */
    var KerningOnly: String /* "KerningOnly" */
    var FullShaping: String /* "FullShaping" */
    var ETextShapingMethod_MAX: String /* "ETextShapingMethod_MAX" */
}

external object ETextFlowDirection {
    var Auto: String /* "Auto" */
    var LeftToRight: String /* "LeftToRight" */
    var RightToLeft: String /* "RightToLeft" */
    var ETextFlowDirection_MAX: String /* "ETextFlowDirection_MAX" */
}

external open class ShapedTextOptions {
    open var bOverride_TextShapingMethod: Boolean
    open var bOverride_TextFlowDirection: Boolean
    open var TextShapingMethod: String /* "Auto" | "KerningOnly" | "FullShaping" | "ETextShapingMethod_MAX" */
    open var TextFlowDirection: String /* "Auto" | "LeftToRight" | "RightToLeft" | "ETextFlowDirection_MAX" */
    open fun clone(): ShapedTextOptions

    companion object {
        fun C(Other: UObject): ShapedTextOptions
        fun C(Other: Any): ShapedTextOptions
    }
}

external object ETextCommit {
    var Default: String /* "Default" */
    var OnEnter: String /* "OnEnter" */
    var OnUserMovedFocus: String /* "OnUserMovedFocus" */
    var OnCleared: String /* "OnCleared" */
    var ETextCommit_MAX: String /* "ETextCommit_MAX" */
}

external open class EditableText : Widget {
    constructor()
    constructor(Outer: UObject)
    open var text: String
    open var TextDelegate: UnrealEngineDelegate<() -> String>
    open var HintText: String
    open var HintTextDelegate: UnrealEngineDelegate<() -> String>
    open var WidgetStyle: EditableTextStyle
    open var Style: SlateWidgetStyleAsset
    open var BackgroundImageSelected: SlateBrushAsset
    open var BackgroundImageComposing: SlateBrushAsset
    open var CaretImage: SlateBrushAsset
    open var Font: SlateFontInfo
    open var ColorAndOpacity: SlateColor
    open var IsReadOnly: Boolean
    open var IsPassword: Boolean
    open var MinimumDesiredWidth: Number
    open var IsCaretMovedWhenGainFocus: Boolean
    open var SelectAllTextWhenFocused: Boolean
    open var RevertTextOnEscape: Boolean
    open var ClearKeyboardFocusOnCommit: Boolean
    open var SelectAllTextOnCommit: Boolean
    open var AllowContextMenu: Boolean
    open var KeyboardType: String /* "Default" | "Number" | "Web" | "Email" | "Password" | "AlphaNumeric" | "EVirtualKeyboardType_MAX" */
    open var VirtualKeyboardOptions: VirtualKeyboardOptions
    open var VirtualKeyboardTrigger: String /* "OnFocusByPointer" | "OnAllFocusEvents" | "EVirtualKeyboardTrigger_MAX" */
    open var VirtualKeyboardDismissAction: String /* "TextChangeOnDismiss" | "TextCommitOnAccept" | "TextCommitOnDismiss" | "EVirtualKeyboardDismissAction_MAX" */
    open var Justification: String /* "Left" | "Center" | "Right" | "ETextJustify_MAX" */
    open var OverflowPolicy: String /* "Clip" | "Ellipsis" | "ETextOverflowPolicy_MAX" */
    open var ShapedTextOptions: ShapedTextOptions
    open var OnTextChanged: UnrealEngineMulticastDelegate<(text: String) -> Unit>
    open var OnTextCommitted: UnrealEngineMulticastDelegate<(text: String, CommitMethod: String /* "Default" | "OnEnter" | "OnUserMovedFocus" | "OnCleared" | "ETextCommit_MAX" */) -> Unit>
    open fun SetTextOverflowPolicy(InOverflowPolicy: String /* "Clip" | "Ellipsis" | "ETextOverflowPolicy_MAX" */)
    open fun SetText(InText: String)
    open fun SetJustification(InJustification: String /* "Left" | "Center" | "Right" | "ETextJustify_MAX" */)
    open fun SetIsReadOnly(InbIsReadyOnly: Boolean)
    open fun SetIsPassword(InbIsPassword: Boolean)
    open fun SetHintText(InHintText: String)
    open fun GetText(): String

    companion object {
        fun Load(ResourceName: String): EditableText
        fun Find(Outer: UObject, ResourceName: String): EditableText
        fun GetDefaultObject(): EditableText
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditableText
        fun C(Other: UObject): EditableText
        fun C(Other: Any): EditableText
    }
}

external open class EditableTextBox : Widget {
    constructor()
    constructor(Outer: UObject)
    open var text: String
    open var TextDelegate: UnrealEngineDelegate<() -> String>
    open var WidgetStyle: EditableTextBoxStyle
    open var Style: SlateWidgetStyleAsset
    open var HintText: String
    open var HintTextDelegate: UnrealEngineDelegate<() -> String>
    open var Font: SlateFontInfo
    open var ForegroundColor: LinearColor
    open var BackgroundColor: LinearColor
    open var ReadOnlyForegroundColor: LinearColor
    open var IsReadOnly: Boolean
    open var IsPassword: Boolean
    open var MinimumDesiredWidth: Number
    open var Padding: Margin
    open var IsCaretMovedWhenGainFocus: Boolean
    open var SelectAllTextWhenFocused: Boolean
    open var RevertTextOnEscape: Boolean
    open var ClearKeyboardFocusOnCommit: Boolean
    open var SelectAllTextOnCommit: Boolean
    open var AllowContextMenu: Boolean
    open var KeyboardType: String /* "Default" | "Number" | "Web" | "Email" | "Password" | "AlphaNumeric" | "EVirtualKeyboardType_MAX" */
    open var VirtualKeyboardOptions: VirtualKeyboardOptions
    open var VirtualKeyboardTrigger: String /* "OnFocusByPointer" | "OnAllFocusEvents" | "EVirtualKeyboardTrigger_MAX" */
    open var VirtualKeyboardDismissAction: String /* "TextChangeOnDismiss" | "TextCommitOnAccept" | "TextCommitOnDismiss" | "EVirtualKeyboardDismissAction_MAX" */
    open var Justification: String /* "Left" | "Center" | "Right" | "ETextJustify_MAX" */
    open var OverflowPolicy: String /* "Clip" | "Ellipsis" | "ETextOverflowPolicy_MAX" */
    open var ShapedTextOptions: ShapedTextOptions
    open var OnTextChanged: UnrealEngineMulticastDelegate<(text: String) -> Unit>
    open var OnTextCommitted: UnrealEngineMulticastDelegate<(text: String, CommitMethod: String /* "Default" | "OnEnter" | "OnUserMovedFocus" | "OnCleared" | "ETextCommit_MAX" */) -> Unit>
    open fun SetTextOverflowPolicy(InOverflowPolicy: String /* "Clip" | "Ellipsis" | "ETextOverflowPolicy_MAX" */)
    open fun SetText(InText: String)
    open fun SetJustification(InJustification: String /* "Left" | "Center" | "Right" | "ETextJustify_MAX" */)
    open fun SetIsReadOnly(bReadOnly: Boolean)
    open fun SetIsPassword(bIsPassword: Boolean)
    open fun SetHintText(InText: String)
    open fun SetForegroundColor(Color: LinearColor)
    open fun SetError(InError: String)
    open fun HasError(): Boolean
    open fun GetText(): String
    open fun ClearError()

    companion object {
        fun Load(ResourceName: String): EditableTextBox
        fun Find(Outer: UObject, ResourceName: String): EditableTextBox
        fun GetDefaultObject(): EditableTextBox
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditableTextBox
        fun C(Other: UObject): EditableTextBox
        fun C(Other: Any): EditableTextBox
    }
}

external open class ExpandableAreaStyle : SlateWidgetStyle {
    open var CollapsedImage: SlateBrush
    open var ExpandedImage: SlateBrush
    open var RolloutAnimationSeconds: Number
    override fun clone(): ExpandableAreaStyle

    companion object {
        fun C(Other: UObject): ExpandableAreaStyle
        fun C(Other: Any): ExpandableAreaStyle
    }
}

external open class ExpandableArea : Widget {
    constructor()
    constructor(Outer: UObject)
    open var Style: ExpandableAreaStyle
    open var BorderBrush: SlateBrush
    open var BorderColor: SlateColor
    open var bIsExpanded: Boolean
    open var MaxHeight: Number
    open var HeaderPadding: Margin
    open var AreaPadding: Margin
    open var OnExpansionChanged: UnrealEngineMulticastDelegate<(Area: ExpandableArea, bIsExpanded: Boolean) -> Unit>
    open var HeaderContent: Widget
    open var BodyContent: Widget
    open fun SetIsExpanded_Animated(IsExpanded: Boolean)
    open fun SetIsExpanded(IsExpanded: Boolean)
    open fun GetIsExpanded(): Boolean

    companion object {
        fun Load(ResourceName: String): ExpandableArea
        fun Find(Outer: UObject, ResourceName: String): ExpandableArea
        fun GetDefaultObject(): ExpandableArea
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ExpandableArea
        fun C(Other: UObject): ExpandableArea
        fun C(Other: Any): ExpandableArea
    }
}

external open class FloatBinding : PropertyBinding {
    constructor()
    constructor(Outer: UObject)
    open fun GetValue(): Number

    companion object {
        fun Load(ResourceName: String): FloatBinding
        fun Find(Outer: UObject, ResourceName: String): FloatBinding
        fun GetDefaultObject(): FloatBinding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FloatBinding
        fun C(Other: UObject): FloatBinding
        fun C(Other: Any): FloatBinding
    }
}

external open class GridPanel : PanelWidget {
    constructor()
    constructor(Outer: UObject)
    open var ColumnFill: Array<Number>
    open var RowFill: Array<Number>
    open fun SetRowFill(ColumnIndex: Number, Coefficient: Number)
    open fun SetColumnFill(ColumnIndex: Number, Coefficient: Number)
    open fun AddChildToGrid(Content: Widget, InRow: Number, InColumn: Number): GridSlot

    companion object {
        fun Load(ResourceName: String): GridPanel
        fun Find(Outer: UObject, ResourceName: String): GridPanel
        fun GetDefaultObject(): GridPanel
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GridPanel
        fun C(Other: UObject): GridPanel
        fun C(Other: Any): GridPanel
    }
}

external open class HorizontalBox : PanelWidget {
    constructor()
    constructor(Outer: UObject)
    open fun AddChildToHorizontalBox(Content: Widget): HorizontalBoxSlot

    companion object {
        fun Load(ResourceName: String): HorizontalBox
        fun Find(Outer: UObject, ResourceName: String): HorizontalBox
        fun GetDefaultObject(): HorizontalBox
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): HorizontalBox
        fun C(Other: UObject): HorizontalBox
        fun C(Other: Any): HorizontalBox
    }
}

external open class UImage : Widget {
    constructor()
    constructor(Outer: UObject)
    open var UImage: SlateBrushAsset
    open var Brush: SlateBrush
    open var BrushDelegate: UnrealEngineDelegate<() -> SlateBrush>
    open var ColorAndOpacity: LinearColor
    open var ColorAndOpacityDelegate: UnrealEngineDelegate<() -> LinearColor>
    open var bFlipForRightToLeftFlowDirection: Boolean
    open var OnMouseButtonDownEvent: UnrealEngineDelegate<(MyGeometry: Geometry, MouseEvent: UPointerEvent) -> EventReply>
    open fun SetOpacity(InOpacity: Number)
    open fun SetDesiredSizeOverride(DesiredSize: Vector2D)
    open fun SetColorAndOpacity(InColorAndOpacity: LinearColor)
    open fun SetBrushTintColor(TintColor: SlateColor)
    open fun SetBrushResourceObject(ResourceObject: UObject)
    open fun SetBrushFromTextureDynamic(Texture: Texture2DDynamic, bMatchSize: Boolean)
    open fun SetBrushFromTexture(Texture: Texture2D, bMatchSize: Boolean)
    open fun SetBrushFromSoftTexture(SoftTexture: Texture2D, bMatchSize: Boolean)
    open fun SetBrushFromSoftMaterial(SoftMaterial: MaterialInterface)
    open fun SetBrushFromMaterial(Material: MaterialInterface)
    open fun SetBrushFromAsset(Asset: SlateBrushAsset)
    open fun SetBrush(InBrush: SlateBrush)
    open fun GetDynamicMaterial(): MaterialInstanceDynamic

    companion object {
        fun Load(ResourceName: String): UImage
        fun Find(Outer: UObject, ResourceName: String): UImage
        fun GetDefaultObject(): UImage
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UImage
        fun C(Other: UObject): UImage
        fun C(Other: Any): UImage
    }
}

external open class InputChord {
    open var Key: Key
    open var bShift: Boolean
    open var bCtrl: Boolean
    open var bAlt: Boolean
    open var bCmd: Boolean
    open fun clone(): InputChord
    open fun Equal(B: InputChord): Boolean
    open fun GetInputChordDisplayName(): String

    companion object {
        fun C(Other: UObject): InputChord
        fun C(Other: Any): InputChord
        fun Equal(A: InputChord, B: InputChord): Boolean
        fun GetInputChordDisplayName(Key: InputChord): String
    }
}

external open class InputKeySelector : Widget {
    constructor()
    constructor(Outer: UObject)
    open var WidgetStyle: ButtonStyle
    open var TextStyle: TextBlockStyle
    open var SelectedKey: InputChord
    open var Font: SlateFontInfo
    open var Margin: Margin
    open var ColorAndOpacity: LinearColor
    open var KeySelectionText: String
    open var NoKeySpecifiedText: String
    open var bAllowModifierKeys: Boolean
    open var bAllowGamepadKeys: Boolean
    open var EscapeKeys: Array<Key>
    open var OnKeySelected: UnrealEngineMulticastDelegate<(SelectedKey: InputChord) -> Unit>
    open var OnIsSelectingKeyChanged: UnrealEngineMulticastDelegate<() -> Unit>
    open fun SetTextBlockVisibility(InVisibility: String /* "Visible" | "Collapsed" | "Hidden" | "HitTestInvisible" | "SelfHitTestInvisible" | "ESlateVisibility_MAX" */)
    open fun SetSelectedKey(InSelectedKey: InputChord)
    open fun SetNoKeySpecifiedText(InNoKeySpecifiedText: String)
    open fun SetKeySelectionText(InKeySelectionText: String)
    open fun SetEscapeKeys(InKeys: Array<Key>)
    open fun SetAllowModifierKeys(bInAllowModifierKeys: Boolean)
    open fun SetAllowGamepadKeys(bInAllowGamepadKeys: Boolean)
    open fun GetIsSelectingKey(): Boolean

    companion object {
        fun Load(ResourceName: String): InputKeySelector
        fun Find(Outer: UObject, ResourceName: String): InputKeySelector
        fun GetDefaultObject(): InputKeySelector
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InputKeySelector
        fun C(Other: UObject): InputKeySelector
        fun C(Other: Any): InputKeySelector
    }
}

external open class Int32Binding : PropertyBinding {
    constructor()
    constructor(Outer: UObject)
    open fun GetValue(): Number

    companion object {
        fun Load(ResourceName: String): Int32Binding
        fun Find(Outer: UObject, ResourceName: String): Int32Binding
        fun GetDefaultObject(): Int32Binding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Int32Binding
        fun C(Other: UObject): Int32Binding
        fun C(Other: Any): Int32Binding
    }
}

external open class InvalidationBox : ContentWidget {
    constructor()
    constructor(Outer: UObject)
    open var bCanCache: Boolean
    open var CacheRelativeTransforms: Boolean
    open fun SetCanCache(CanCache: Boolean)
    open fun InvalidateCache()
    open fun GetCanCache(): Boolean

    companion object {
        fun Load(ResourceName: String): InvalidationBox
        fun Find(Outer: UObject, ResourceName: String): InvalidationBox
        fun GetDefaultObject(): InvalidationBox
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InvalidationBox
        fun C(Other: UObject): InvalidationBox
        fun C(Other: Any): InvalidationBox
    }
}

external open class UserListEntry : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun OnItemSelectionChanged(bIsSelected: Boolean)
    open fun OnItemExpansionChanged(bIsExpanded: Boolean)
    open fun OnEntryReleased()

    companion object {
        fun Load(ResourceName: String): UserListEntry
        fun Find(Outer: UObject, ResourceName: String): UserListEntry
        fun GetDefaultObject(): UserListEntry
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UserListEntry
        fun C(Other: UObject): UserListEntry
        fun C(Other: Any): UserListEntry
    }
}

external open class UserListEntryLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): UserListEntryLibrary
        fun Find(Outer: UObject, ResourceName: String): UserListEntryLibrary
        fun GetDefaultObject(): UserListEntryLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UserListEntryLibrary
        fun C(Other: UObject): UserListEntryLibrary
        fun C(Other: Any): UserListEntryLibrary
    }
}

external open class UserObjectListEntry : UserListEntry {
    constructor()
    constructor(Outer: UObject)
    open fun OnListItemObjectSet(ListItemObject: UObject)

    companion object {
        fun Load(ResourceName: String): UserObjectListEntry
        fun Find(Outer: UObject, ResourceName: String): UserObjectListEntry
        fun GetDefaultObject(): UserObjectListEntry
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UserObjectListEntry
        fun C(Other: UObject): UserObjectListEntry
        fun C(Other: Any): UserObjectListEntry
    }
}

external open class UserObjectListEntryLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): UserObjectListEntryLibrary
        fun Find(Outer: UObject, ResourceName: String): UserObjectListEntryLibrary
        fun GetDefaultObject(): UserObjectListEntryLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UserObjectListEntryLibrary
        fun C(Other: UObject): UserObjectListEntryLibrary
        fun C(Other: Any): UserObjectListEntryLibrary
    }
}

external open class ListViewBase : Widget {
    constructor()
    constructor(Outer: UObject)
    open var EntryWidgetClass: UnrealEngineClass
    open var WheelScrollMultiplier: Number
    open var bEnableScrollAnimation: Boolean
    open var AllowOverscroll: Boolean
    open var bEnableRightClickScrolling: Boolean
    open var bEnableFixedLineOffset: Boolean
    open var FixedLineScrollOffset: Number
    open var bAllowDragging: Boolean
    open var BP_OnEntryGenerated: UnrealEngineMulticastDelegate<(Widget: UserWidget) -> Unit>
    open var BP_OnEntryReleased: UnrealEngineMulticastDelegate<(Widget: UserWidget) -> Unit>
    open var NumDesignerPreviewEntries: Number
    open var EntryWidgetPool: UserWidgetPool
    open fun SetWheelScrollMultiplier(NewWheelScrollMultiplier: Number)
    open fun SetScrollOffset(InScrollOffset: Number)
    open fun SetScrollbarVisibility(InVisibility: String /* "Visible" | "Collapsed" | "Hidden" | "HitTestInvisible" | "SelfHitTestInvisible" | "ESlateVisibility_MAX" */)
    open fun ScrollToTop()
    open fun ScrollToBottom()
    open fun RequestRefresh()
    open fun RegenerateAllEntries()
    open fun GetScrollOffset(): Number
    open fun GetDisplayedEntryWidgets(): Array<UserWidget>

    companion object {
        fun Load(ResourceName: String): ListViewBase
        fun Find(Outer: UObject, ResourceName: String): ListViewBase
        fun GetDefaultObject(): ListViewBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ListViewBase
        fun C(Other: UObject): ListViewBase
        fun C(Other: Any): ListViewBase
    }
}

external open class TableViewStyle : SlateWidgetStyle {
    open var BackgroundBrush: SlateBrush
    override fun clone(): TableViewStyle

    companion object {
        fun C(Other: UObject): TableViewStyle
        fun C(Other: Any): TableViewStyle
    }
}

external object EOrientation {
    var Orient_Horizontal: String /* "Orient_Horizontal" */
    var Orient_Vertical: String /* "Orient_Vertical" */
    var Orient_MAX: String /* "Orient_MAX" */
}

external object ESelectionMode {
    var None: String /* "None" */
    var Single: String /* "Single" */
    var SingleToggle: String /* "SingleToggle" */
    var Multi: String /* "Multi" */
    var ESelectionMode_MAX: String /* "ESelectionMode_MAX" */
}

external object EConsumeMouseWheel {
    var WhenScrollingPossible: String /* "WhenScrollingPossible" */
    var Always: String /* "Always" */
    var Never: String /* "Never" */
    var EConsumeMouseWheel_MAX: String /* "EConsumeMouseWheel_MAX" */
}

external interface `T$602` {
    var Items: Array<UObject>
    var `$`: Boolean
}

external open class ListView : ListViewBase {
    constructor()
    constructor(Outer: UObject)
    open var WidgetStyle: TableViewStyle
    open var ScrollBarStyle: ScrollBarStyle
    open var Orientation: String /* "Orient_Horizontal" | "Orient_Vertical" | "Orient_MAX" */
    open var SelectionMode: String /* "None" | "Single" | "SingleToggle" | "Multi" | "ESelectionMode_MAX" */
    open var ConsumeMouseWheel: String /* "WhenScrollingPossible" | "Always" | "Never" | "EConsumeMouseWheel_MAX" */
    open var bClearSelectionOnClick: Boolean
    open var bIsFocusable: Boolean
    open var EntrySpacing: Number
    open var bReturnFocusToSelection: Boolean
    open var ListItems: Array<UObject>
    open var BP_OnEntryInitialized: UnrealEngineMulticastDelegate<(Item: UObject, Widget: UserWidget) -> Unit>
    open var BP_OnItemClicked: UnrealEngineMulticastDelegate<(Item: UObject) -> Unit>
    open var BP_OnItemDoubleClicked: UnrealEngineMulticastDelegate<(Item: UObject) -> Unit>
    open var BP_OnItemIsHoveredChanged: UnrealEngineMulticastDelegate<(Item: UObject, bIsHovered: Boolean) -> Unit>
    open var BP_OnItemSelectionChanged: UnrealEngineMulticastDelegate<(Item: UObject, bIsSelected: Boolean) -> Unit>
    open var BP_OnItemScrolledIntoView: UnrealEngineMulticastDelegate<(Item: UObject, Widget: UserWidget) -> Unit>
    open fun SetSelectionMode(SelectionMode: String /* "None" | "Single" | "SingleToggle" | "Multi" | "ESelectionMode_MAX" */)
    open fun SetSelectedIndex(index: Number)
    open fun ScrollIndexIntoView(index: Number)
    open fun RemoveItem(Item: UObject)
    open fun OnListItemOuterEndPlayed(ItemOuter: Actor, EndPlayReason: String /* "Destroyed" | "LevelTransition" | "EndPlayInEditor" | "RemovedFromWorld" | "Quit" | "EEndPlayReason_MAX" */)
    open fun OnListItemEndPlayed(Item: Actor, EndPlayReason: String /* "Destroyed" | "LevelTransition" | "EndPlayInEditor" | "RemovedFromWorld" | "Quit" | "EEndPlayReason_MAX" */)
    open fun NavigateToIndex(index: Number)
    open fun IsRefreshPending(): Boolean
    open fun GetNumItems(): Number
    open fun GetListItems(): Array<UObject>
    open fun GetItemAt(index: Number): UObject
    open fun GetIndexForItem(Item: UObject): Number
    open fun ClearListItems()
    open fun SetSelectedItem(Item: UObject)
    open fun SetListItems(InListItems: Array<UObject>)
    open fun SetItemSelection(Item: UObject, bSelected: Boolean)
    open fun ScrollItemIntoView(Item: UObject)
    open fun NavigateToItem(Item: UObject)
    open fun IsItemVisible(Item: UObject): Boolean
    open fun GetSelectedItems(Items: Array<UObject> = definedExternally): `T$602`
    open fun GetSelectedItem(): UObject
    open fun GetNumItemsSelected(): Number
    open fun ClearSelection()
    open fun CancelScrollIntoView()
    open fun AddItem(Item: UObject)

    companion object {
        fun Load(ResourceName: String): ListView
        fun Find(Outer: UObject, ResourceName: String): ListView
        fun GetDefaultObject(): ListView
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ListView
        fun C(Other: UObject): ListView
        fun C(Other: Any): ListView
    }
}

external open class ListViewDesignerPreviewItem : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ListViewDesignerPreviewItem
        fun Find(Outer: UObject, ResourceName: String): ListViewDesignerPreviewItem
        fun GetDefaultObject(): ListViewDesignerPreviewItem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ListViewDesignerPreviewItem
        fun C(Other: UObject): ListViewDesignerPreviewItem
        fun C(Other: Any): ListViewDesignerPreviewItem
    }
}

external object EMenuPlacement {
    var MenuPlacement_BelowAnchor: String /* "MenuPlacement_BelowAnchor" */
    var MenuPlacement_CenteredBelowAnchor: String /* "MenuPlacement_CenteredBelowAnchor" */
    var MenuPlacement_BelowRightAnchor: String /* "MenuPlacement_BelowRightAnchor" */
    var MenuPlacement_ComboBox: String /* "MenuPlacement_ComboBox" */
    var MenuPlacement_ComboBoxRight: String /* "MenuPlacement_ComboBoxRight" */
    var MenuPlacement_MenuRight: String /* "MenuPlacement_MenuRight" */
    var MenuPlacement_AboveAnchor: String /* "MenuPlacement_AboveAnchor" */
    var MenuPlacement_CenteredAboveAnchor: String /* "MenuPlacement_CenteredAboveAnchor" */
    var MenuPlacement_AboveRightAnchor: String /* "MenuPlacement_AboveRightAnchor" */
    var MenuPlacement_MenuLeft: String /* "MenuPlacement_MenuLeft" */
    var MenuPlacement_Center: String /* "MenuPlacement_Center" */
    var MenuPlacement_RightLeftCenter: String /* "MenuPlacement_RightLeftCenter" */
    var MenuPlacement_MatchBottomLeft: String /* "MenuPlacement_MatchBottomLeft" */
    var MenuPlacement_MAX: String /* "MenuPlacement_MAX" */
}

external open class MenuAnchor : ContentWidget {
    constructor()
    constructor(Outer: UObject)
    open var MenuClass: UnrealEngineClass
    open var OnGetMenuContentEvent: UnrealEngineDelegate<() -> Widget>
    open var OnGetUserMenuContentEvent: UnrealEngineDelegate<() -> UserWidget>
    open var PLACEMENT: String /* "MenuPlacement_BelowAnchor" | "MenuPlacement_CenteredBelowAnchor" | "MenuPlacement_BelowRightAnchor" | "MenuPlacement_ComboBox" | "MenuPlacement_ComboBoxRight" | "MenuPlacement_MenuRight" | "MenuPlacement_AboveAnchor" | "MenuPlacement_CenteredAboveAnchor" | "MenuPlacement_AboveRightAnchor" | "MenuPlacement_MenuLeft" | "MenuPlacement_Center" | "MenuPlacement_RightLeftCenter" | "MenuPlacement_MatchBottomLeft" | "MenuPlacement_MAX" */
    open var bFitInWindow: Boolean
    open var ShouldDeferPaintingAfterWindowContent: Boolean
    open var UseApplicationMenuStack: Boolean
    open var OnMenuOpenChanged: UnrealEngineMulticastDelegate<(bIsOpen: Boolean) -> Unit>
    open fun ToggleOpen(bFocusOnOpen: Boolean)
    open fun ShouldOpenDueToClick(): Boolean
    open fun SetPlacement(InPlacement: String /* "MenuPlacement_BelowAnchor" | "MenuPlacement_CenteredBelowAnchor" | "MenuPlacement_BelowRightAnchor" | "MenuPlacement_ComboBox" | "MenuPlacement_ComboBoxRight" | "MenuPlacement_MenuRight" | "MenuPlacement_AboveAnchor" | "MenuPlacement_CenteredAboveAnchor" | "MenuPlacement_AboveRightAnchor" | "MenuPlacement_MenuLeft" | "MenuPlacement_Center" | "MenuPlacement_RightLeftCenter" | "MenuPlacement_MatchBottomLeft" | "MenuPlacement_MAX" */)
    open fun Open(bFocusMenu: Boolean)
    open fun IsOpen(): Boolean
    open fun HasOpenSubMenus(): Boolean
    open fun GetMenuPosition(): Vector2D
    open fun FitInWindow(bFit: Boolean)
    open fun Close()

    companion object {
        fun Load(ResourceName: String): MenuAnchor
        fun Find(Outer: UObject, ResourceName: String): MenuAnchor
        fun GetDefaultObject(): MenuAnchor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MenuAnchor
        fun C(Other: UObject): MenuAnchor
        fun C(Other: Any): MenuAnchor
    }
}

external open class MouseCursorBinding : PropertyBinding {
    constructor()
    constructor(Outer: UObject)
    open fun GetValue(): String /* "None" | "Default" | "TextEditBeam" | "ResizeLeftRight" | "ResizeUpDown" | "ResizeSouthEast" | "ResizeSouthWest" | "CardinalCross" | "Crosshairs" | "Hand" | "GrabHand" | "GrabHandClosed" | "SlashedCircle" | "EyeDropper" | "EMouseCursor_MAX" */

    companion object {
        fun Load(ResourceName: String): MouseCursorBinding
        fun Find(Outer: UObject, ResourceName: String): MouseCursorBinding
        fun GetDefaultObject(): MouseCursorBinding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MouseCursorBinding
        fun C(Other: UObject): MouseCursorBinding
        fun C(Other: Any): MouseCursorBinding
    }
}

external open class MovieSceneEntitySystem : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Linker: MovieSceneEntitySystemLinker

    companion object {
        fun Load(ResourceName: String): MovieSceneEntitySystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneEntitySystem
        fun GetDefaultObject(): MovieSceneEntitySystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneEntitySystem
        fun C(Other: UObject): MovieSceneEntitySystem
        fun C(Other: Any): MovieSceneEntitySystem
    }
}

external open class MovieSceneEntityInstantiatorSystem : MovieSceneEntitySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneEntityInstantiatorSystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneEntityInstantiatorSystem
        fun GetDefaultObject(): MovieSceneEntityInstantiatorSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneEntityInstantiatorSystem
        fun C(Other: UObject): MovieSceneEntityInstantiatorSystem
        fun C(Other: Any): MovieSceneEntityInstantiatorSystem
    }
}

external open class MovieScenePropertyInstantiatorSystem : MovieSceneEntityInstantiatorSystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieScenePropertyInstantiatorSystem
        fun Find(Outer: UObject, ResourceName: String): MovieScenePropertyInstantiatorSystem
        fun GetDefaultObject(): MovieScenePropertyInstantiatorSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScenePropertyInstantiatorSystem
        fun C(Other: UObject): MovieScenePropertyInstantiatorSystem
        fun C(Other: Any): MovieScenePropertyInstantiatorSystem
    }
}

external open class MovieScenePropertySystem : MovieSceneEntitySystem {
    constructor()
    constructor(Outer: UObject)
    open var InstantiatorSystem: MovieScenePropertyInstantiatorSystem

    companion object {
        fun Load(ResourceName: String): MovieScenePropertySystem
        fun Find(Outer: UObject, ResourceName: String): MovieScenePropertySystem
        fun GetDefaultObject(): MovieScenePropertySystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScenePropertySystem
        fun C(Other: UObject): MovieScenePropertySystem
        fun C(Other: Any): MovieScenePropertySystem
    }
}

external open class MovieScene2DTransformPropertySystem : MovieScenePropertySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieScene2DTransformPropertySystem
        fun Find(Outer: UObject, ResourceName: String): MovieScene2DTransformPropertySystem
        fun GetDefaultObject(): MovieScene2DTransformPropertySystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScene2DTransformPropertySystem
        fun C(Other: UObject): MovieScene2DTransformPropertySystem
        fun C(Other: Any): MovieScene2DTransformPropertySystem
    }
}

external open class MovieScene2DTransformMask {
    open var mask: Any
    open fun clone(): MovieScene2DTransformMask

    companion object {
        fun C(Other: UObject): MovieScene2DTransformMask
        fun C(Other: Any): MovieScene2DTransformMask
    }
}

external open class MovieScene2DTransformSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var TransformMask: MovieScene2DTransformMask
    open var Translation: MovieSceneFloatChannel
    open var Rotation: MovieSceneFloatChannel
    open var Scale: MovieSceneFloatChannel
    open var Shear: MovieSceneFloatChannel

    companion object {
        fun Load(ResourceName: String): MovieScene2DTransformSection
        fun Find(Outer: UObject, ResourceName: String): MovieScene2DTransformSection
        fun GetDefaultObject(): MovieScene2DTransformSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScene2DTransformSection
        fun C(Other: UObject): MovieScene2DTransformSection
        fun C(Other: Any): MovieScene2DTransformSection
    }
}

external open class MovieScenePropertyBinding {
    open var PropertyName: String
    open var PropertyPath: String
    open var bCanUseClassLookup: Boolean
    open fun clone(): MovieScenePropertyBinding

    companion object {
        fun C(Other: UObject): MovieScenePropertyBinding
        fun C(Other: Any): MovieScenePropertyBinding
    }
}

external open class MovieScenePropertyTrack : MovieSceneNameableTrack {
    constructor()
    constructor(Outer: UObject)
    open var UniqueTrackName: String
    open var PropertyName: String
    open var PropertyPath: String
    open var SectionToKey: MovieSceneSection
    open var PropertyBinding: MovieScenePropertyBinding
    open var Sections: Array<MovieSceneSection>
    open fun GetPropertyName(): String
    open fun GetPropertyPath(): String
    open fun GetUniqueTrackName(): String
    open fun SetPropertyNameAndPath(InPropertyName: String, InPropertyPath: String)

    companion object {
        fun Load(ResourceName: String): MovieScenePropertyTrack
        fun Find(Outer: UObject, ResourceName: String): MovieScenePropertyTrack
        fun GetDefaultObject(): MovieScenePropertyTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScenePropertyTrack
        fun C(Other: UObject): MovieScenePropertyTrack
        fun C(Other: Any): MovieScenePropertyTrack
        fun GetPropertyName(Track: MovieScenePropertyTrack): String
        fun GetPropertyPath(Track: MovieScenePropertyTrack): String
        fun GetUniqueTrackName(Track: MovieScenePropertyTrack): String
        fun SetPropertyNameAndPath(Track: MovieScenePropertyTrack, InPropertyName: String, InPropertyPath: String)
    }
}

external open class MovieScene2DTransformTrack : MovieScenePropertyTrack {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieScene2DTransformTrack
        fun Find(Outer: UObject, ResourceName: String): MovieScene2DTransformTrack
        fun GetDefaultObject(): MovieScene2DTransformTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScene2DTransformTrack
        fun C(Other: UObject): MovieScene2DTransformTrack
        fun C(Other: Any): MovieScene2DTransformTrack
    }
}

external open class MovieSceneMarginPropertySystem : MovieScenePropertySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneMarginPropertySystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneMarginPropertySystem
        fun GetDefaultObject(): MovieSceneMarginPropertySystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneMarginPropertySystem
        fun C(Other: UObject): MovieSceneMarginPropertySystem
        fun C(Other: Any): MovieSceneMarginPropertySystem
    }
}

external open class MovieSceneMarginSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var TopCurve: MovieSceneFloatChannel
    open var LeftCurve: MovieSceneFloatChannel
    open var RightCurve: MovieSceneFloatChannel
    open var BottomCurve: MovieSceneFloatChannel

    companion object {
        fun Load(ResourceName: String): MovieSceneMarginSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneMarginSection
        fun GetDefaultObject(): MovieSceneMarginSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneMarginSection
        fun C(Other: UObject): MovieSceneMarginSection
        fun C(Other: Any): MovieSceneMarginSection
    }
}

external open class MovieSceneMarginTrack : MovieScenePropertyTrack {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneMarginTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneMarginTrack
        fun GetDefaultObject(): MovieSceneMarginTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneMarginTrack
        fun C(Other: UObject): MovieSceneMarginTrack
        fun C(Other: Any): MovieSceneMarginTrack
    }
}

external open class MovieSceneMaterialTrack : MovieSceneNameableTrack {
    constructor()
    constructor(Outer: UObject)
    open var Sections: Array<MovieSceneSection>

    companion object {
        fun Load(ResourceName: String): MovieSceneMaterialTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneMaterialTrack
        fun GetDefaultObject(): MovieSceneMaterialTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneMaterialTrack
        fun C(Other: UObject): MovieSceneMaterialTrack
        fun C(Other: Any): MovieSceneMaterialTrack
    }
}

external open class MovieSceneWidgetMaterialTrack : MovieSceneMaterialTrack {
    constructor()
    constructor(Outer: UObject)
    open var BrushPropertyNamePath: Array<String>
    open var TrackName: String

    companion object {
        fun Load(ResourceName: String): MovieSceneWidgetMaterialTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneWidgetMaterialTrack
        fun GetDefaultObject(): MovieSceneWidgetMaterialTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneWidgetMaterialTrack
        fun C(Other: UObject): MovieSceneWidgetMaterialTrack
        fun C(Other: Any): MovieSceneWidgetMaterialTrack
    }
}

external object ETextWrappingPolicy {
    var DefaultWrapping: String /* "DefaultWrapping" */
    var AllowPerCharacterWrapping: String /* "AllowPerCharacterWrapping" */
    var ETextWrappingPolicy_MAX: String /* "ETextWrappingPolicy_MAX" */
}

external open class TextLayoutWidget : Widget {
    constructor()
    constructor(Outer: UObject)
    open var ShapedTextOptions: ShapedTextOptions
    open var Justification: String /* "Left" | "Center" | "Right" | "ETextJustify_MAX" */
    open var WrappingPolicy: String /* "DefaultWrapping" | "AllowPerCharacterWrapping" | "ETextWrappingPolicy_MAX" */
    open var AutoWrapText: Boolean
    open var WrapTextAt: Number
    open var Margin: Margin
    open var LineHeightPercentage: Number
    open fun SetJustification(InJustification: String /* "Left" | "Center" | "Right" | "ETextJustify_MAX" */)

    companion object {
        fun Load(ResourceName: String): TextLayoutWidget
        fun Find(Outer: UObject, ResourceName: String): TextLayoutWidget
        fun GetDefaultObject(): TextLayoutWidget
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextLayoutWidget
        fun C(Other: UObject): TextLayoutWidget
        fun C(Other: Any): TextLayoutWidget
    }
}

external open class MultiLineEditableText : TextLayoutWidget {
    constructor()
    constructor(Outer: UObject)
    open var text: String
    open var HintText: String
    open var HintTextDelegate: UnrealEngineDelegate<() -> String>
    open var WidgetStyle: TextBlockStyle
    open var bIsReadOnly: Boolean
    open var Font: SlateFontInfo
    open var SelectAllTextWhenFocused: Boolean
    open var ClearTextSelectionOnFocusLoss: Boolean
    open var RevertTextOnEscape: Boolean
    open var ClearKeyboardFocusOnCommit: Boolean
    open var AllowContextMenu: Boolean
    open var VirtualKeyboardOptions: VirtualKeyboardOptions
    open var VirtualKeyboardDismissAction: String /* "TextChangeOnDismiss" | "TextCommitOnAccept" | "TextCommitOnDismiss" | "EVirtualKeyboardDismissAction_MAX" */
    open var OnTextChanged: UnrealEngineMulticastDelegate<(text: String) -> Unit>
    open var OnTextCommitted: UnrealEngineMulticastDelegate<(text: String, CommitMethod: String /* "Default" | "OnEnter" | "OnUserMovedFocus" | "OnCleared" | "ETextCommit_MAX" */) -> Unit>
    open fun SetWidgetStyle(InWidgetStyle: TextBlockStyle)
    open fun SetText(InText: String)
    open fun SetIsReadOnly(bReadOnly: Boolean)
    open fun SetHintText(InHintText: String)
    open fun GetText(): String
    open fun GetHintText(): String

    companion object {
        fun Load(ResourceName: String): MultiLineEditableText
        fun Find(Outer: UObject, ResourceName: String): MultiLineEditableText
        fun GetDefaultObject(): MultiLineEditableText
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MultiLineEditableText
        fun C(Other: UObject): MultiLineEditableText
        fun C(Other: Any): MultiLineEditableText
    }
}

external open class MultiLineEditableTextBox : TextLayoutWidget {
    constructor()
    constructor(Outer: UObject)
    open var text: String
    open var HintText: String
    open var HintTextDelegate: UnrealEngineDelegate<() -> String>
    open var WidgetStyle: EditableTextBoxStyle
    open var TextStyle: TextBlockStyle
    open var bIsReadOnly: Boolean
    open var AllowContextMenu: Boolean
    open var VirtualKeyboardOptions: VirtualKeyboardOptions
    open var VirtualKeyboardDismissAction: String /* "TextChangeOnDismiss" | "TextCommitOnAccept" | "TextCommitOnDismiss" | "EVirtualKeyboardDismissAction_MAX" */
    open var Style: SlateWidgetStyleAsset
    open var Font: SlateFontInfo
    open var ForegroundColor: LinearColor
    open var BackgroundColor: LinearColor
    open var ReadOnlyForegroundColor: LinearColor
    open var OnTextChanged: UnrealEngineMulticastDelegate<(text: String) -> Unit>
    open var OnTextCommitted: UnrealEngineMulticastDelegate<(text: String, CommitMethod: String /* "Default" | "OnEnter" | "OnUserMovedFocus" | "OnCleared" | "ETextCommit_MAX" */) -> Unit>
    open fun SetTextStyle(InTextStyle: TextBlockStyle)
    open fun SetText(InText: String)
    open fun SetIsReadOnly(bReadOnly: Boolean)
    open fun SetHintText(InHintText: String)
    open fun SetForegroundColor(Color: LinearColor)
    open fun SetError(InError: String)
    open fun GetText(): String
    open fun GetHintText(): String

    companion object {
        fun Load(ResourceName: String): MultiLineEditableTextBox
        fun Find(Outer: UObject, ResourceName: String): MultiLineEditableTextBox
        fun GetDefaultObject(): MultiLineEditableTextBox
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MultiLineEditableTextBox
        fun C(Other: UObject): MultiLineEditableTextBox
        fun C(Other: Any): MultiLineEditableTextBox
    }
}

external open class NamedSlot : ContentWidget {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NamedSlot
        fun Find(Outer: UObject, ResourceName: String): NamedSlot
        fun GetDefaultObject(): NamedSlot
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NamedSlot
        fun C(Other: UObject): NamedSlot
        fun C(Other: Any): NamedSlot
    }
}

external open class NamedSlotInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NamedSlotInterface
        fun Find(Outer: UObject, ResourceName: String): NamedSlotInterface
        fun GetDefaultObject(): NamedSlotInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NamedSlotInterface
        fun C(Other: UObject): NamedSlotInterface
        fun C(Other: Any): NamedSlotInterface
    }
}

external open class NativeWidgetHost : Widget {
    constructor()
    constructor(Outer: UObject)
    open fun SetContent(SlateWidget: JavascriptSlateWidget): Widget

    companion object {
        fun Load(ResourceName: String): NativeWidgetHost
        fun Find(Outer: UObject, ResourceName: String): NativeWidgetHost
        fun GetDefaultObject(): NativeWidgetHost
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NativeWidgetHost
        fun C(Other: UObject): NativeWidgetHost
        fun C(Other: Any): NativeWidgetHost
        fun SetContent(TargetWidget: NativeWidgetHost, SlateWidget: JavascriptSlateWidget): Widget
    }
}

external open class Overlay : PanelWidget {
    constructor()
    constructor(Outer: UObject)
    open fun AddChildToOverlay(Content: Widget): OverlaySlot

    companion object {
        fun Load(ResourceName: String): Overlay
        fun Find(Outer: UObject, ResourceName: String): Overlay
        fun GetDefaultObject(): Overlay
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Overlay
        fun C(Other: UObject): Overlay
        fun C(Other: Any): Overlay
    }
}

external object EProgressBarFillType {
    var LeftToRight: String /* "LeftToRight" */
    var RightToLeft: String /* "RightToLeft" */
    var FillFromCenter: String /* "FillFromCenter" */
    var FillFromCenterHorizontal: String /* "FillFromCenterHorizontal" */
    var FillFromCenterVertical: String /* "FillFromCenterVertical" */
    var TopToBottom: String /* "TopToBottom" */
    var BottomToTop: String /* "BottomToTop" */
    var EProgressBarFillType_MAX: String /* "EProgressBarFillType_MAX" */
}

external object EProgressBarFillStyle {
    var Mask: String /* "Mask" */
    var Scale: String /* "Scale" */
    var EProgressBarFillStyle_MAX: String /* "EProgressBarFillStyle_MAX" */
}

external open class ProgressBar : Widget {
    constructor()
    constructor(Outer: UObject)
    open var WidgetStyle: ProgressBarStyle
    open var Style: SlateWidgetStyleAsset
    open var BackgroundImage: SlateBrushAsset
    open var FillImage: SlateBrushAsset
    open var MarqueeImage: SlateBrushAsset
    open var Percent: Number
    open var BarFillType: String /* "LeftToRight" | "RightToLeft" | "FillFromCenter" | "FillFromCenterHorizontal" | "FillFromCenterVertical" | "TopToBottom" | "BottomToTop" | "EProgressBarFillType_MAX" */
    open var BarFillStyle: String /* "Mask" | "Scale" | "EProgressBarFillStyle_MAX" */
    open var bIsMarquee: Boolean
    open var BorderPadding: Vector2D
    open var PercentDelegate: UnrealEngineDelegate<() -> Number>
    open var FillColorAndOpacity: LinearColor
    open var FillColorAndOpacityDelegate: UnrealEngineDelegate<() -> LinearColor>
    open fun SetPercent(InPercent: Number)
    open fun SetIsMarquee(InbIsMarquee: Boolean)
    open fun SetFillColorAndOpacity(InColor: LinearColor)

    companion object {
        fun Load(ResourceName: String): ProgressBar
        fun Find(Outer: UObject, ResourceName: String): ProgressBar
        fun GetDefaultObject(): ProgressBar
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ProgressBar
        fun C(Other: UObject): ProgressBar
        fun C(Other: Any): ProgressBar
    }
}

external open class RetainerBox : ContentWidget {
    constructor()
    constructor(Outer: UObject)
    open var bRetainRender: Boolean
    open var RenderOnInvalidation: Boolean
    open var RenderOnPhase: Boolean
    open var Phase: Number
    open var PhaseCount: Number
    open var EffectMaterial: MaterialInterface
    open var TextureParameter: String
    open fun SetTextureParameter(TextureParameter: String)
    open fun SetRetainRendering(bInRetainRendering: Boolean)
    open fun SetRenderingPhase(RenderPhase: Number, TotalPhases: Number)
    open fun SetEffectMaterial(EffectMaterial: MaterialInterface)
    open fun RequestRender()
    open fun GetEffectMaterial(): MaterialInstanceDynamic

    companion object {
        fun Load(ResourceName: String): RetainerBox
        fun Find(Outer: UObject, ResourceName: String): RetainerBox
        fun GetDefaultObject(): RetainerBox
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RetainerBox
        fun C(Other: UObject): RetainerBox
        fun C(Other: Any): RetainerBox
    }
}

external open class RichTextBlockDecorator : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): RichTextBlockDecorator
        fun Find(Outer: UObject, ResourceName: String): RichTextBlockDecorator
        fun GetDefaultObject(): RichTextBlockDecorator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RichTextBlockDecorator
        fun C(Other: UObject): RichTextBlockDecorator
        fun C(Other: Any): RichTextBlockDecorator
    }
}

external interface `T$603` {
    var InStrikeBrush: SlateBrush
}

external open class RichTextBlock : TextLayoutWidget {
    constructor()
    constructor(Outer: UObject)
    open var text: String
    open var TextStyleSet: DataTable
    open var DecoratorClasses: Array<UnrealEngineClass>
    open var bOverrideDefaultStyle: Boolean
    open var DefaultTextStyleOverride: TextBlockStyle
    open var MinDesiredWidth: Number
    open var TextTransformPolicy: String /* "None" | "ToLower" | "ToUpper" | "ETextTransformPolicy_MAX" */
    open var TextOverflowPolicy: String /* "Clip" | "Ellipsis" | "ETextOverflowPolicy_MAX" */
    open var DefaultTextStyle: TextBlockStyle
    open var InstanceDecorators: Array<RichTextBlockDecorator>
    open fun SetTextTransformPolicy(InTransformPolicy: String /* "None" | "ToLower" | "ToUpper" | "ETextTransformPolicy_MAX" */)
    open fun SetTextStyleSet(NewTextStyleSet: DataTable)
    open fun SetTextOverflowPolicy(InOverflowPolicy: String /* "Clip" | "Ellipsis" | "ETextOverflowPolicy_MAX" */)
    open fun SetText(InText: String)
    open fun SetMinDesiredWidth(InMinDesiredWidth: Number)
    open fun SetDefaultTextStyle(InDefaultTextStyle: TextBlockStyle)
    open fun SetDefaultStrikeBrush(InStrikeBrush: SlateBrush = definedExternally): `T$603`
    open fun SetDefaultShadowOffset(InShadowOffset: Vector2D)
    open fun SetDefaultShadowColorAndOpacity(InShadowColorAndOpacity: LinearColor)
    open fun SetDefaultFont(InFontInfo: SlateFontInfo)
    open fun SetDefaultColorAndOpacity(InColorAndOpacity: SlateColor)
    open fun SetAutoWrapText(InAutoTextWrap: Boolean)
    open fun RefreshTextLayout()
    open fun GetText(): String
    open fun GetDefaultDynamicMaterial(): MaterialInstanceDynamic
    open fun GetDecoratorByClass(DecoratorClass: UnrealEngineClass): RichTextBlockDecorator
    open fun ClearAllDefaultStyleOverrides()

    companion object {
        fun Load(ResourceName: String): RichTextBlock
        fun Find(Outer: UObject, ResourceName: String): RichTextBlock
        fun GetDefaultObject(): RichTextBlock
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RichTextBlock
        fun C(Other: UObject): RichTextBlock
        fun C(Other: Any): RichTextBlock
    }
}

external open class RichTextBlockImageDecorator : RichTextBlockDecorator {
    constructor()
    constructor(Outer: UObject)
    open var ImageSet: DataTable

    companion object {
        fun Load(ResourceName: String): RichTextBlockImageDecorator
        fun Find(Outer: UObject, ResourceName: String): RichTextBlockImageDecorator
        fun GetDefaultObject(): RichTextBlockImageDecorator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RichTextBlockImageDecorator
        fun C(Other: UObject): RichTextBlockImageDecorator
        fun C(Other: Any): RichTextBlockImageDecorator
    }
}

external open class SafeZone : ContentWidget {
    constructor()
    constructor(Outer: UObject)
    open var PadLeft: Boolean
    open var PadRight: Boolean
    open var PadTop: Boolean
    open var PadBottom: Boolean
    open fun SetSidesToPad(InPadLeft: Boolean, InPadRight: Boolean, InPadTop: Boolean, InPadBottom: Boolean)

    companion object {
        fun Load(ResourceName: String): SafeZone
        fun Find(Outer: UObject, ResourceName: String): SafeZone
        fun GetDefaultObject(): SafeZone
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SafeZone
        fun C(Other: UObject): SafeZone
        fun C(Other: Any): SafeZone
    }
}

external object EStretch {
    var None: String /* "None" */
    var Fill: String /* "Fill" */
    var ScaleToFit: String /* "ScaleToFit" */
    var ScaleToFitX: String /* "ScaleToFitX" */
    var ScaleToFitY: String /* "ScaleToFitY" */
    var ScaleToFill: String /* "ScaleToFill" */
    var ScaleBySafeZone: String /* "ScaleBySafeZone" */
    var UserSpecified: String /* "UserSpecified" */
    var EStretch_MAX: String /* "EStretch_MAX" */
}

external object EStretchDirection {
    var Both: String /* "Both" */
    var DownOnly: String /* "DownOnly" */
    var UpOnly: String /* "UpOnly" */
    var EStretchDirection_MAX: String /* "EStretchDirection_MAX" */
}

external open class ScaleBox : ContentWidget {
    constructor()
    constructor(Outer: UObject)
    open var Stretch: String /* "None" | "Fill" | "ScaleToFit" | "ScaleToFitX" | "ScaleToFitY" | "ScaleToFill" | "ScaleBySafeZone" | "UserSpecified" | "EStretch_MAX" */
    open var StretchDirection: String /* "Both" | "DownOnly" | "UpOnly" | "EStretchDirection_MAX" */
    open var UserSpecifiedScale: Number
    open var IgnoreInheritedScale: Boolean
    open fun SetUserSpecifiedScale(InUserSpecifiedScale: Number)
    open fun SetStretchDirection(InStretchDirection: String /* "Both" | "DownOnly" | "UpOnly" | "EStretchDirection_MAX" */)
    open fun SetStretch(InStretch: String /* "None" | "Fill" | "ScaleToFit" | "ScaleToFitX" | "ScaleToFitY" | "ScaleToFill" | "ScaleBySafeZone" | "UserSpecified" | "EStretch_MAX" */)
    open fun SetIgnoreInheritedScale(bInIgnoreInheritedScale: Boolean)

    companion object {
        fun Load(ResourceName: String): ScaleBox
        fun Find(Outer: UObject, ResourceName: String): ScaleBox
        fun GetDefaultObject(): ScaleBox
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ScaleBox
        fun C(Other: UObject): ScaleBox
        fun C(Other: Any): ScaleBox
    }
}

external open class ScrollBar : Widget {
    constructor()
    constructor(Outer: UObject)
    open var WidgetStyle: ScrollBarStyle
    open var Style: SlateWidgetStyleAsset
    open var bAlwaysShowScrollbar: Boolean
    open var bAlwaysShowScrollbarTrack: Boolean
    open var Orientation: String /* "Orient_Horizontal" | "Orient_Vertical" | "Orient_MAX" */
    open var Thickness: Vector2D
    open var Padding: Margin
    open fun SetState(InOffsetFraction: Number, InThumbSizeFraction: Number)

    companion object {
        fun Load(ResourceName: String): ScrollBar
        fun Find(Outer: UObject, ResourceName: String): ScrollBar
        fun GetDefaultObject(): ScrollBar
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ScrollBar
        fun C(Other: UObject): ScrollBar
        fun C(Other: Any): ScrollBar
    }
}

external object EDescendantScrollDestination {
    var IntoView: String /* "IntoView" */
    var TopOrLeft: String /* "TopOrLeft" */
    var Center: String /* "Center" */
    var BottomOrRight: String /* "BottomOrRight" */
    var EDescendantScrollDestination_MAX: String /* "EDescendantScrollDestination_MAX" */
}

external object EScrollWhenFocusChanges {
    var NoScroll: String /* "NoScroll" */
    var InstantScroll: String /* "InstantScroll" */
    var AnimatedScroll: String /* "AnimatedScroll" */
    var EScrollWhenFocusChanges_MAX: String /* "EScrollWhenFocusChanges_MAX" */
}

external open class ScrollBox : PanelWidget {
    constructor()
    constructor(Outer: UObject)
    open var WidgetStyle: ScrollBoxStyle
    open var WidgetBarStyle: ScrollBarStyle
    open var Style: SlateWidgetStyleAsset
    open var BarStyle: SlateWidgetStyleAsset
    open var Orientation: String /* "Orient_Horizontal" | "Orient_Vertical" | "Orient_MAX" */
    open var ScrollBarVisibility: String /* "Visible" | "Collapsed" | "Hidden" | "HitTestInvisible" | "SelfHitTestInvisible" | "ESlateVisibility_MAX" */
    open var ConsumeMouseWheel: String /* "WhenScrollingPossible" | "Always" | "Never" | "EConsumeMouseWheel_MAX" */
    open var ScrollbarThickness: Vector2D
    open var ScrollbarPadding: Margin
    open var AlwaysShowScrollbar: Boolean
    open var AlwaysShowScrollbarTrack: Boolean
    open var AllowOverscroll: Boolean
    open var BackPadScrolling: Boolean
    open var FrontPadScrolling: Boolean
    open var bAnimateWheelScrolling: Boolean
    open var NavigationDestination: String /* "IntoView" | "TopOrLeft" | "Center" | "BottomOrRight" | "EDescendantScrollDestination_MAX" */
    open var NavigationScrollPadding: Number
    open var ScrollWhenFocusChanges: String /* "NoScroll" | "InstantScroll" | "AnimatedScroll" | "EScrollWhenFocusChanges_MAX" */
    open var bAllowRightClickDragScrolling: Boolean
    open var WheelScrollMultiplier: Number
    open var OnUserScrolled: UnrealEngineMulticastDelegate<(CurrentOffset: Number) -> Unit>
    open fun SetWheelScrollMultiplier(NewWheelScrollMultiplier: Number)
    open fun SetScrollWhenFocusChanges(NewScrollWhenFocusChanges: String /* "NoScroll" | "InstantScroll" | "AnimatedScroll" | "EScrollWhenFocusChanges_MAX" */)
    open fun SetScrollOffset(NewScrollOffset: Number)
    open fun SetScrollBarVisibility(NewScrollBarVisibility: String /* "Visible" | "Collapsed" | "Hidden" | "HitTestInvisible" | "SelfHitTestInvisible" | "ESlateVisibility_MAX" */)
    open fun SetScrollbarThickness(NewScrollbarThickness: Vector2D)
    open fun SetScrollbarPadding(NewScrollbarPadding: Margin)
    open fun SetOrientation(NewOrientation: String /* "Orient_Horizontal" | "Orient_Vertical" | "Orient_MAX" */)
    open fun SetNavigationDestination(NewNavigationDestination: String /* "IntoView" | "TopOrLeft" | "Center" | "BottomOrRight" | "EDescendantScrollDestination_MAX" */)
    open fun SetConsumeMouseWheel(NewConsumeMouseWheel: String /* "WhenScrollingPossible" | "Always" | "Never" | "EConsumeMouseWheel_MAX" */)
    open fun SetAnimateWheelScrolling(bShouldAnimateWheelScrolling: Boolean)
    open fun SetAlwaysShowScrollbar(NewAlwaysShowScrollbar: Boolean)
    open fun SetAllowOverscroll(NewAllowOverscroll: Boolean)
    open fun ScrollWidgetIntoView(WidgetToFind: Widget, AnimateScroll: Boolean, ScrollDestination: String /* "IntoView" | "TopOrLeft" | "Center" | "BottomOrRight" | "EDescendantScrollDestination_MAX" */, Padding: Number)
    open fun ScrollToStart()
    open fun ScrollToEnd()
    open fun GetViewOffsetFraction(): Number
    open fun GetScrollOffsetOfEnd(): Number
    open fun GetScrollOffset(): Number
    open fun EndInertialScrolling()

    companion object {
        fun Load(ResourceName: String): ScrollBox
        fun Find(Outer: UObject, ResourceName: String): ScrollBox
        fun GetDefaultObject(): ScrollBox
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ScrollBox
        fun C(Other: UObject): ScrollBox
        fun C(Other: Any): ScrollBox
    }
}

external open class SizeBox : ContentWidget {
    constructor()
    constructor(Outer: UObject)
    open var WidthOverride: Number
    open var HeightOverride: Number
    open var MinDesiredWidth: Number
    open var MinDesiredHeight: Number
    open var MaxDesiredWidth: Number
    open var MaxDesiredHeight: Number
    open var MinAspectRatio: Number
    open var MaxAspectRatio: Number
    open var bOverride_WidthOverride: Boolean
    open var bOverride_HeightOverride: Boolean
    open var bOverride_MinDesiredWidth: Boolean
    open var bOverride_MinDesiredHeight: Boolean
    open var bOverride_MaxDesiredWidth: Boolean
    open var bOverride_MaxDesiredHeight: Boolean
    open var bOverride_MinAspectRatio: Boolean
    open var bOverride_MaxAspectRatio: Boolean
    open fun SetWidthOverride(InWidthOverride: Number)
    open fun SetMinDesiredWidth(InMinDesiredWidth: Number)
    open fun SetMinDesiredHeight(InMinDesiredHeight: Number)
    open fun SetMinAspectRatio(InMinAspectRatio: Number)
    open fun SetMaxDesiredWidth(InMaxDesiredWidth: Number)
    open fun SetMaxDesiredHeight(InMaxDesiredHeight: Number)
    open fun SetMaxAspectRatio(InMaxAspectRatio: Number)
    open fun SetHeightOverride(InHeightOverride: Number)
    open fun ClearWidthOverride()
    open fun ClearMinDesiredWidth()
    open fun ClearMinDesiredHeight()
    open fun ClearMinAspectRatio()
    open fun ClearMaxDesiredWidth()
    open fun ClearMaxDesiredHeight()
    open fun ClearMaxAspectRatio()
    open fun ClearHeightOverride()

    companion object {
        fun Load(ResourceName: String): SizeBox
        fun Find(Outer: UObject, ResourceName: String): SizeBox
        fun GetDefaultObject(): SizeBox
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SizeBox
        fun C(Other: UObject): SizeBox
        fun C(Other: Any): SizeBox
    }
}

external open class SlateBlueprintLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SlateBlueprintLibrary
        fun Find(Outer: UObject, ResourceName: String): SlateBlueprintLibrary
        fun GetDefaultObject(): SlateBlueprintLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SlateBlueprintLibrary
        fun TransformVectorLocalToAbsolute(Geometry: Geometry, LocalVector: Vector2D): Vector2D
        fun TransformVectorAbsoluteToLocal(Geometry: Geometry, AbsoluteVector: Vector2D): Vector2D
        fun TransformScalarLocalToAbsolute(Geometry: Geometry, LocalScalar: Number): Number
        fun TransformScalarAbsoluteToLocal(Geometry: Geometry, AbsoluteScalar: Number): Number
        fun ScreenToWidgetLocal(WorldContextObject: UObject, Geometry: Geometry, ScreenPosition: Vector2D, LocalCoordinate: Vector2D = definedExternally, bIncludeWindowPosition: Boolean = definedExternally): `T$363`
        fun ScreenToWidgetAbsolute(WorldContextObject: UObject, ScreenPosition: Vector2D, AbsoluteCoordinate: Vector2D = definedExternally, bIncludeWindowPosition: Boolean = definedExternally): `T$362`
        fun ScreenToViewport(WorldContextObject: UObject, ScreenPosition: Vector2D, ViewportPosition: Vector2D = definedExternally): `T$361`
        fun LocalToViewport(WorldContextObject: UObject, Geometry: Geometry, LocalCoordinate: Vector2D, PixelPosition: Vector2D = definedExternally, ViewportPosition: Vector2D = definedExternally): `T$360`
        fun LocalToAbsolute(Geometry: Geometry, LocalCoordinate: Vector2D): Vector2D
        fun IsUnderLocation(Geometry: Geometry, AbsoluteCoordinate: Vector2D): Boolean
        fun GetLocalTopLeft(Geometry: Geometry): Vector2D
        fun GetLocalSize(Geometry: Geometry): Vector2D
        fun GetAbsoluteSize(Geometry: Geometry): Vector2D
        fun EqualEqual_SlateBrush(A: SlateBrush, B: SlateBrush): Boolean
        fun AbsoluteToViewport(WorldContextObject: UObject, AbsoluteDesktopCoordinate: Vector2D, PixelPosition: Vector2D = definedExternally, ViewportPosition: Vector2D = definedExternally): `T$360`
        fun AbsoluteToLocal(Geometry: Geometry, AbsoluteCoordinate: Vector2D): Vector2D
        fun C(Other: UObject): SlateBlueprintLibrary
        fun C(Other: Any): SlateBlueprintLibrary
    }
}

external open class SlateMeshVertex {
    open var position: Vector2f
    open var Color: Color
    open var UV0: Vector2f
    open var UV1: Vector2f
    open var UV2: Vector2f
    open var UV3: Vector2f
    open var UV4: Vector2f
    open var UV5: Vector2f
    open fun clone(): SlateMeshVertex

    companion object {
        fun C(Other: UObject): SlateMeshVertex
        fun C(Other: Any): SlateMeshVertex
    }
}

external open class SlateVectorArtData : UObject {
    constructor()
    constructor(Outer: UObject)
    open var MeshAsset: StaticMesh
    open var SourceMaterial: MaterialInterface
    open var VertexData: Array<SlateMeshVertex>
    open var IndexData: Array<Any>
    open var Material: MaterialInterface
    open var ExtentMin: Vector2D
    open var ExtentMax: Vector2D

    companion object {
        fun Load(ResourceName: String): SlateVectorArtData
        fun Find(Outer: UObject, ResourceName: String): SlateVectorArtData
        fun GetDefaultObject(): SlateVectorArtData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SlateVectorArtData
        fun C(Other: UObject): SlateVectorArtData
        fun C(Other: Any): SlateVectorArtData
    }
}

external open class SliderStyle : SlateWidgetStyle {
    open var NormalBarImage: SlateBrush
    open var HoveredBarImage: SlateBrush
    open var DisabledBarImage: SlateBrush
    open var NormalThumbImage: SlateBrush
    open var HoveredThumbImage: SlateBrush
    open var DisabledThumbImage: SlateBrush
    open var BarThickness: Number
    override fun clone(): SliderStyle

    companion object {
        fun C(Other: UObject): SliderStyle
        fun C(Other: Any): SliderStyle
    }
}

external open class Slider : Widget {
    constructor()
    constructor(Outer: UObject)
    open var Value: Number
    open var ValueDelegate: UnrealEngineDelegate<() -> Number>
    open var MinValue: Number
    open var MaxValue: Number
    open var WidgetStyle: SliderStyle
    open var Orientation: String /* "Orient_Horizontal" | "Orient_Vertical" | "Orient_MAX" */
    open var SliderBarColor: LinearColor
    open var SliderHandleColor: LinearColor
    open var IndentHandle: Boolean
    open var Locked: Boolean
    open var MouseUsesStep: Boolean
    open var RequiresControllerLock: Boolean
    open var StepSize: Number
    open var IsFocusable: Boolean
    open var OnMouseCaptureBegin: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnMouseCaptureEnd: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnControllerCaptureBegin: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnControllerCaptureEnd: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnValueChanged: UnrealEngineMulticastDelegate<(Value: Number) -> Unit>
    open fun GetValue(InValue: Number)
    open fun SetStepSize(InValue: Number)
    open fun SetSliderHandleColor(InValue: LinearColor)
    open fun SetSliderBarColor(InValue: LinearColor)
    open fun SetMinValue(InValue: Number)
    open fun SetMaxValue(InValue: Number)
    open fun SetLocked(InValue: Boolean)
    open fun SetIndentHandle(InValue: Boolean)
    open fun GetValue(): Number
    open fun GetNormalizedValue(): Number

    companion object {
        fun Load(ResourceName: String): Slider
        fun Find(Outer: UObject, ResourceName: String): Slider
        fun GetDefaultObject(): Slider
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Slider
        fun C(Other: UObject): Slider
        fun C(Other: Any): Slider
    }
}

external open class Spacer : Widget {
    constructor()
    constructor(Outer: UObject)
    open var Size: Vector2D
    open fun SetSize(InSize: Vector2D)

    companion object {
        fun Load(ResourceName: String): Spacer
        fun Find(Outer: UObject, ResourceName: String): Spacer
        fun GetDefaultObject(): Spacer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Spacer
        fun C(Other: UObject): Spacer
        fun C(Other: Any): Spacer
    }
}

external open class SpinBox : Widget {
    constructor()
    constructor(Outer: UObject)
    open var Value: Number
    open var ValueDelegate: UnrealEngineDelegate<() -> Number>
    open var WidgetStyle: SpinBoxStyle
    open var Style: SlateWidgetStyleAsset
    open var MinFractionalDigits: Number
    open var MaxFractionalDigits: Number
    open var bAlwaysUsesDeltaSnap: Boolean
    open var Delta: Number
    open var SliderExponent: Number
    open var Font: SlateFontInfo
    open var Justification: String /* "Left" | "Center" | "Right" | "ETextJustify_MAX" */
    open var MinDesiredWidth: Number
    open var ClearKeyboardFocusOnCommit: Boolean
    open var SelectAllTextOnCommit: Boolean
    open var ForegroundColor: SlateColor
    open var OnValueChanged: UnrealEngineMulticastDelegate<(InValue: Number) -> Unit>
    open var OnValueCommitted: UnrealEngineMulticastDelegate<(InValue: Number, CommitMethod: String /* "Default" | "OnEnter" | "OnUserMovedFocus" | "OnCleared" | "ETextCommit_MAX" */) -> Unit>
    open var OnBeginSliderMovement: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnEndSliderMovement: UnrealEngineMulticastDelegate<(InValue: Number) -> Unit>
    open var bOverride_MinValue: Boolean
    open var bOverride_MaxValue: Boolean
    open var bOverride_MinSliderValue: Boolean
    open var bOverride_MaxSliderValue: Boolean
    open var MinValue: Number
    open var MaxValue: Number
    open var MinSliderValue: Number
    open var MaxSliderValue: Number
    open fun SetValue(NewValue: Number)
    open fun SetMinValue(NewValue: Number)
    open fun SetMinSliderValue(NewValue: Number)
    open fun SetMinFractionalDigits(NewValue: Number)
    open fun SetMaxValue(NewValue: Number)
    open fun SetMaxSliderValue(NewValue: Number)
    open fun SetMaxFractionalDigits(NewValue: Number)
    open fun SetForegroundColor(InForegroundColor: SlateColor)
    open fun SetDelta(NewValue: Number)
    open fun SetAlwaysUsesDeltaSnap(bNewValue: Boolean)
    open fun GetValue(): Number
    open fun GetMinValue(): Number
    open fun GetMinSliderValue(): Number
    open fun GetMinFractionalDigits(): Number
    open fun GetMaxValue(): Number
    open fun GetMaxSliderValue(): Number
    open fun GetMaxFractionalDigits(): Number
    open fun GetDelta(): Number
    open fun GetAlwaysUsesDeltaSnap(): Boolean
    open fun ClearMinValue()
    open fun ClearMinSliderValue()
    open fun ClearMaxValue()
    open fun ClearMaxSliderValue()

    companion object {
        fun Load(ResourceName: String): SpinBox
        fun Find(Outer: UObject, ResourceName: String): SpinBox
        fun GetDefaultObject(): SpinBox
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SpinBox
        fun C(Other: UObject): SpinBox
        fun C(Other: Any): SpinBox
    }
}

external open class TextBinding : PropertyBinding {
    constructor()
    constructor(Outer: UObject)
    open fun GetTextValue(): String
    open fun GetStringValue(): String

    companion object {
        fun Load(ResourceName: String): TextBinding
        fun Find(Outer: UObject, ResourceName: String): TextBinding
        fun GetDefaultObject(): TextBinding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextBinding
        fun C(Other: UObject): TextBinding
        fun C(Other: Any): TextBinding
    }
}

external open class TextBlock : TextLayoutWidget {
    constructor()
    constructor(Outer: UObject)
    open var text: String
    open var TextDelegate: UnrealEngineDelegate<() -> String>
    open var ColorAndOpacity: SlateColor
    open var ColorAndOpacityDelegate: UnrealEngineDelegate<() -> SlateColor>
    open var Font: SlateFontInfo
    open var StrikeBrush: SlateBrush
    open var ShadowOffset: Vector2D
    open var ShadowColorAndOpacity: LinearColor
    open var ShadowColorAndOpacityDelegate: UnrealEngineDelegate<() -> LinearColor>
    open var MinDesiredWidth: Number
    open var bWrapWithInvalidationPanel: Boolean
    open var bAutoWrapText: Boolean
    open var TextTransformPolicy: String /* "None" | "ToLower" | "ToUpper" | "ETextTransformPolicy_MAX" */
    open var TextOverflowPolicy: String /* "Clip" | "Ellipsis" | "ETextOverflowPolicy_MAX" */
    open var bSimpleTextMode: Boolean
    open fun SetTextTransformPolicy(InTransformPolicy: String /* "None" | "ToLower" | "ToUpper" | "ETextTransformPolicy_MAX" */)
    open fun SetTextOverflowPolicy(InOverflowPolicy: String /* "Clip" | "Ellipsis" | "ETextOverflowPolicy_MAX" */)
    open fun SetText(InText: String)
    open fun SetStrikeBrush(InStrikeBrush: SlateBrush)
    open fun SetShadowOffset(InShadowOffset: Vector2D)
    open fun SetShadowColorAndOpacity(InShadowColorAndOpacity: LinearColor)
    open fun SetOpacity(InOpacity: Number)
    open fun SetMinDesiredWidth(InMinDesiredWidth: Number)
    open fun SetFont(InFontInfo: SlateFontInfo)
    open fun SetColorAndOpacity(InColorAndOpacity: SlateColor)
    open fun SetAutoWrapText(InAutoTextWrap: Boolean)
    open fun GetText(): String
    open fun GetDynamicOutlineMaterial(): MaterialInstanceDynamic
    open fun GetDynamicFontMaterial(): MaterialInstanceDynamic

    companion object {
        fun Load(ResourceName: String): TextBlock
        fun Find(Outer: UObject, ResourceName: String): TextBlock
        fun GetDefaultObject(): TextBlock
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextBlock
        fun C(Other: UObject): TextBlock
        fun C(Other: Any): TextBlock
    }
}

external open class Throbber : Widget {
    constructor()
    constructor(Outer: UObject)
    open var NumberOfPieces: Number
    open var bAnimateHorizontally: Boolean
    open var bAnimateVertically: Boolean
    open var bAnimateOpacity: Boolean
    open var PieceImage: SlateBrushAsset
    open var UImage: SlateBrush
    open fun SetNumberOfPieces(InNumberOfPieces: Number)
    open fun SetAnimateVertically(bInAnimateVertically: Boolean)
    open fun SetAnimateOpacity(bInAnimateOpacity: Boolean)
    open fun SetAnimateHorizontally(bInAnimateHorizontally: Boolean)

    companion object {
        fun Load(ResourceName: String): Throbber
        fun Find(Outer: UObject, ResourceName: String): Throbber
        fun GetDefaultObject(): Throbber
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Throbber
        fun C(Other: UObject): Throbber
        fun C(Other: Any): Throbber
    }
}

external object EListItemAlignment {
    var EvenlyDistributed: String /* "EvenlyDistributed" */
    var EvenlySize: String /* "EvenlySize" */
    var EvenlyWide: String /* "EvenlyWide" */
    var LeftAligned: String /* "LeftAligned" */
    var RightAligned: String /* "RightAligned" */
    var CenterAligned: String /* "CenterAligned" */
    var Fill: String /* "Fill" */
    var EListItemAlignment_MAX: String /* "EListItemAlignment_MAX" */
}

external open class TileView : ListView {
    constructor()
    constructor(Outer: UObject)
    open var EntryHeight: Number
    open var EntryWidth: Number
    open var TileAlignment: String /* "EvenlyDistributed" | "EvenlySize" | "EvenlyWide" | "LeftAligned" | "RightAligned" | "CenterAligned" | "Fill" | "EListItemAlignment_MAX" */
    open var bWrapHorizontalNavigation: Boolean
    open fun SetEntryWidth(NewWidth: Number)
    open fun SetEntryHeight(NewHeight: Number)
    open fun GetEntryWidth(): Number
    open fun GetEntryHeight(): Number

    companion object {
        fun Load(ResourceName: String): TileView
        fun Find(Outer: UObject, ResourceName: String): TileView
        fun GetDefaultObject(): TileView
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TileView
        fun C(Other: UObject): TileView
        fun C(Other: Any): TileView
    }
}

external open class TreeView : ListView {
    constructor()
    constructor(Outer: UObject)
    open var BP_OnGetItemChildren: UnrealEngineDelegate<(Item: UObject, Children: Array<UObject>) -> Unit>
    open var BP_OnItemExpansionChanged: UnrealEngineMulticastDelegate<(Item: UObject, bIsExpanded: Boolean) -> Unit>
    open fun SetItemExpansion(Item: UObject, bExpandItem: Boolean)
    open fun ExpandAll()
    open fun CollapseAll()

    companion object {
        fun Load(ResourceName: String): TreeView
        fun Find(Outer: UObject, ResourceName: String): TreeView
        fun GetDefaultObject(): TreeView
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TreeView
        fun C(Other: UObject): TreeView
        fun C(Other: Any): TreeView
    }
}

external open class UniformGridPanel : PanelWidget {
    constructor()
    constructor(Outer: UObject)
    open var SlotPadding: Margin
    open var MinDesiredSlotWidth: Number
    open var MinDesiredSlotHeight: Number
    open fun SetSlotPadding(InSlotPadding: Margin)
    open fun SetMinDesiredSlotWidth(InMinDesiredSlotWidth: Number)
    open fun SetMinDesiredSlotHeight(InMinDesiredSlotHeight: Number)
    open fun AddChildToUniformGrid(Content: Widget, InRow: Number, InColumn: Number): UniformGridSlot

    companion object {
        fun Load(ResourceName: String): UniformGridPanel
        fun Find(Outer: UObject, ResourceName: String): UniformGridPanel
        fun GetDefaultObject(): UniformGridPanel
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UniformGridPanel
        fun C(Other: UObject): UniformGridPanel
        fun C(Other: Any): UniformGridPanel
    }
}

external open class UserWidgetBlueprint : Blueprint {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): UserWidgetBlueprint
        fun Find(Outer: UObject, ResourceName: String): UserWidgetBlueprint
        fun GetDefaultObject(): UserWidgetBlueprint
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UserWidgetBlueprint
        fun C(Other: UObject): UserWidgetBlueprint
        fun C(Other: Any): UserWidgetBlueprint
    }
}

external open class VerticalBox : PanelWidget {
    constructor()
    constructor(Outer: UObject)
    open fun AddChildToVerticalBox(Content: Widget): VerticalBoxSlot

    companion object {
        fun Load(ResourceName: String): VerticalBox
        fun Find(Outer: UObject, ResourceName: String): VerticalBox
        fun GetDefaultObject(): VerticalBox
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VerticalBox
        fun C(Other: UObject): VerticalBox
        fun C(Other: Any): VerticalBox
    }
}

external open class Viewport : ContentWidget {
    constructor()
    constructor(Outer: UObject)
    open var BackgroundColor: LinearColor
    open fun Spawn(ActorClass: UnrealEngineClass): Actor
    open fun SetViewRotation(Rotation: Rotator)
    open fun SetViewLocation(Location: Vector)
    open fun GetViewRotation(): Rotator
    open fun GetViewportWorld(): World
    open fun GetViewLocation(): Vector

    companion object {
        fun Load(ResourceName: String): Viewport
        fun Find(Outer: UObject, ResourceName: String): Viewport
        fun GetDefaultObject(): Viewport
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Viewport
        fun C(Other: UObject): Viewport
        fun C(Other: Any): Viewport
    }
}

external open class VisibilityBinding : PropertyBinding {
    constructor()
    constructor(Outer: UObject)
    open fun GetValue(): String /* "Visible" | "Collapsed" | "Hidden" | "HitTestInvisible" | "SelfHitTestInvisible" | "ESlateVisibility_MAX" */

    companion object {
        fun Load(ResourceName: String): VisibilityBinding
        fun Find(Outer: UObject, ResourceName: String): VisibilityBinding
        fun GetDefaultObject(): VisibilityBinding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VisibilityBinding
        fun C(Other: UObject): VisibilityBinding
        fun C(Other: Any): VisibilityBinding
    }
}

external open class BlueprintWidgetAnimationDelegateBinding {
    open var Action: String /* "Started" | "Finished" | "EWidgetAnimationEvent_MAX" */
    open var AnimationToBind: String
    open var FunctionNameToBind: String
    open var UserTag: String
    open fun clone(): BlueprintWidgetAnimationDelegateBinding

    companion object {
        fun C(Other: UObject): BlueprintWidgetAnimationDelegateBinding
        fun C(Other: Any): BlueprintWidgetAnimationDelegateBinding
    }
}

external open class WidgetAnimationDelegateBinding : DynamicBlueprintBinding {
    constructor()
    constructor(Outer: UObject)
    open var WidgetAnimationDelegateBindings: Array<BlueprintWidgetAnimationDelegateBinding>

    companion object {
        fun Load(ResourceName: String): WidgetAnimationDelegateBinding
        fun Find(Outer: UObject, ResourceName: String): WidgetAnimationDelegateBinding
        fun GetDefaultObject(): WidgetAnimationDelegateBinding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WidgetAnimationDelegateBinding
        fun C(Other: UObject): WidgetAnimationDelegateBinding
        fun C(Other: Any): WidgetAnimationDelegateBinding
    }
}

external interface `T$604` {
    var Result: UMGSequencePlayer
    var `$`: WidgetAnimationPlayCallbackProxy
}

external open class WidgetAnimationPlayCallbackProxy : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Finished: UnrealEngineMulticastDelegate<() -> Unit>

    companion object {
        fun Load(ResourceName: String): WidgetAnimationPlayCallbackProxy
        fun Find(Outer: UObject, ResourceName: String): WidgetAnimationPlayCallbackProxy
        fun GetDefaultObject(): WidgetAnimationPlayCallbackProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WidgetAnimationPlayCallbackProxy
        fun PlayAnimationTimeRangewithFinishedevent(Result: UMGSequencePlayer = definedExternally, Widget: UserWidget = definedExternally, InAnimation: WidgetAnimation = definedExternally, StartAtTime: Number = definedExternally, EndAtTime: Number = definedExternally, NumLoopsToPlay: Number = definedExternally, PlayMode: String /* "Forward" | "Reverse" | "PingPong" | "EUMGSequencePlayMode_MAX" */ = definedExternally, PlaybackSpeed: Number = definedExternally): `T$604`
        fun PlayAnimationwithFinishedevent(Result: UMGSequencePlayer = definedExternally, Widget: UserWidget = definedExternally, InAnimation: WidgetAnimation = definedExternally, StartAtTime: Number = definedExternally, NumLoopsToPlay: Number = definedExternally, PlayMode: String /* "Forward" | "Reverse" | "PingPong" | "EUMGSequencePlayMode_MAX" */ = definedExternally, PlaybackSpeed: Number = definedExternally): `T$604`
        fun C(Other: UObject): WidgetAnimationPlayCallbackProxy
        fun C(Other: Any): WidgetAnimationPlayCallbackProxy
    }
}

external open class WidgetBinding : PropertyBinding {
    constructor()
    constructor(Outer: UObject)
    open fun GetValue(): Widget

    companion object {
        fun Load(ResourceName: String): WidgetBinding
        fun Find(Outer: UObject, ResourceName: String): WidgetBinding
        fun GetDefaultObject(): WidgetBinding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WidgetBinding
        fun C(Other: UObject): WidgetBinding
        fun C(Other: Any): WidgetBinding
    }
}

external open class EventGraphFastCallPair {
    open var FunctionToPatch: UFunction
    open var EventGraphCallOffset: Number
    open fun clone(): EventGraphFastCallPair

    companion object {
        fun C(Other: UObject): EventGraphFastCallPair
        fun C(Other: Any): EventGraphFastCallPair
    }
}

external open class BlueprintGeneratedClass : Class {
    constructor()
    constructor(Outer: UObject)
    open var NumReplicatedProperties: Number
    open var bHasNativizedParent: Boolean
    open var bHasCookedComponentInstancingData: Boolean
    open var bIsSparseClassDataSerializable: Boolean
    open var DynamicBindingObjects: Array<DynamicBlueprintBinding>
    open var ComponentTemplates: Array<ActorComponent>
    open var Timelines: Array<TimelineTemplate>
    open var ComponentClassOverrides: Array<BPComponentClassOverride>
    open var SimpleConstructionScript: SimpleConstructionScript
    open var InheritableComponentHandler: InheritableComponentHandler
    open var UberGraphFramePointerProperty: StructProperty
    open var UberGraphFunction: UFunction
    open var FastCallPairs: Array<EventGraphFastCallPair>
    open var OverridenArchetypeForCDO: UObject
    open var PropertyGuids: Any
    open var CalledFunctions: Array<UFunction>
    open var CookedComponentInstancingData: Any

    companion object {
        fun Load(ResourceName: String): BlueprintGeneratedClass
        fun Find(Outer: UObject, ResourceName: String): BlueprintGeneratedClass
        fun GetDefaultObject(): BlueprintGeneratedClass
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintGeneratedClass
        fun C(Other: UObject): BlueprintGeneratedClass
        fun C(Other: Any): BlueprintGeneratedClass
    }
}

external object EBindingKind {
    var Function: String /* "Function" */
    var Property: String /* "Property" */
    var EBindingKind_MAX: String /* "EBindingKind_MAX" */
}

external open class DelegateRuntimeBinding {
    open var ObjectName: String
    open var PropertyName: String
    open var FunctionName: String
    open var SourcePath: DynamicPropertyPath
    open var Kind: String /* "Function" | "Property" | "EBindingKind_MAX" */
    open fun clone(): DelegateRuntimeBinding

    companion object {
        fun C(Other: UObject): DelegateRuntimeBinding
        fun C(Other: Any): DelegateRuntimeBinding
    }
}

external open class WidgetBlueprintGeneratedClass : BlueprintGeneratedClass {
    constructor()
    constructor(Outer: UObject)
    open var WidgetTree: WidgetTree
    open var bCanCallPreConstruct: Boolean
    open var bClassRequiresNativeTick: Boolean
    open var Bindings: Array<DelegateRuntimeBinding>
    open var Animations: Array<WidgetAnimation>
    open var NamedSlots: Array<String>

    companion object {
        fun Load(ResourceName: String): WidgetBlueprintGeneratedClass
        fun Find(Outer: UObject, ResourceName: String): WidgetBlueprintGeneratedClass
        fun GetDefaultObject(): WidgetBlueprintGeneratedClass
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WidgetBlueprintGeneratedClass
        fun C(Other: UObject): WidgetBlueprintGeneratedClass
        fun C(Other: Any): WidgetBlueprintGeneratedClass
    }
}

external open class NavigationEvent : InputEvent {
    open fun clone(): NavigationEvent
    open fun GetInputEventFromNavigationEvent(): InputEvent

    companion object {
        fun C(Other: UObject): NavigationEvent
        fun C(Other: Any): NavigationEvent
        fun GetInputEventFromNavigationEvent(Event: NavigationEvent): InputEvent
    }
}

external interface `T$605` {
    var FoundWidgets: Array<UserWidget>
}

external interface `T$606` {
    var FoundWidgets: Array<UserWidget>
}

external open class WidgetBlueprintLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): WidgetBlueprintLibrary
        fun Find(Outer: UObject, ResourceName: String): WidgetBlueprintLibrary
        fun GetDefaultObject(): WidgetBlueprintLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WidgetBlueprintLibrary
        fun UnlockMouse(Reply: EventReply = definedExternally): `T$268`
        fun Unhandled(): EventReply
        fun SetWindowTitleBarState(TitleBarContent: Widget, Mode: String /* "Overlay" | "VerticalBox" | "EWindowTitleBarMode_MAX" */, bTitleBarDragEnabled: Boolean, bWindowButtonsVisible: Boolean, bTitleBarVisible: Boolean)
        fun SetWindowTitleBarCloseButtonActive(bActive: Boolean)
        fun SetUserFocus(Reply: EventReply = definedExternally, FocusWidget: Widget = definedExternally, bInAllUsers: Boolean = definedExternally): `T$268`
        fun SetMousePosition(Reply: EventReply = definedExternally, NewMousePosition: Vector2D = definedExternally): `T$268`
        fun SetInputMode_UIOnlyEx(PlayerController: PlayerController, InWidgetToFocus: Widget, InMouseLockMode: String /* "DoNotLock" | "LockOnCapture" | "LockAlways" | "LockInFullscreen" | "EMouseLockMode_MAX" */)
        fun SetInputMode_GameOnly(PlayerController: PlayerController)
        fun SetInputMode_GameAndUIEx(PlayerController: PlayerController, InWidgetToFocus: Widget, InMouseLockMode: String /* "DoNotLock" | "LockOnCapture" | "LockAlways" | "LockInFullscreen" | "EMouseLockMode_MAX" */, bHideCursorDuringCapture: Boolean)
        fun SetHardwareCursor(WorldContextObject: UObject, CursorShape: String /* "None" | "Default" | "TextEditBeam" | "ResizeLeftRight" | "ResizeUpDown" | "ResizeSouthEast" | "ResizeSouthWest" | "CardinalCross" | "Crosshairs" | "Hand" | "GrabHand" | "GrabHandClosed" | "SlashedCircle" | "EyeDropper" | "EMouseCursor_MAX" */, CursorName: String, HotSpot: Vector2D): Boolean
        fun SetFocusToGameViewport()
        fun SetColorVisionDeficiencyType(Type: String /* "NormalVision" | "Deuteranope" | "Protanope" | "Tritanope" | "EColorVisionDeficiency_MAX" */, Severity: Number, CorrectDeficiency: Boolean, ShowCorrectionWithDeficiency: Boolean)
        fun SetBrushResourceToTexture(Brush: SlateBrush = definedExternally, Texture: Texture2D = definedExternally): `T$44`
        fun SetBrushResourceToMaterial(Brush: SlateBrush = definedExternally, Material: MaterialInterface = definedExternally): `T$44`
        fun RestorePreviousWindowTitleBarState()
        fun ReleaseMouseCapture(Reply: EventReply = definedExternally): `T$268`
        fun ReleaseJoystickCapture(Reply: EventReply = definedExternally, bInAllJoysticks: Boolean = definedExternally): `T$268`
        fun NoResourceBrush(): SlateBrush
        fun MakeBrushFromTexture(Texture: Texture2D, Width: Number, Height: Number): SlateBrush
        fun MakeBrushFromMaterial(Material: MaterialInterface, Width: Number, Height: Number): SlateBrush
        fun MakeBrushFromAsset(BrushAsset: SlateBrushAsset): SlateBrush
        fun LockMouse(Reply: EventReply = definedExternally, CapturingWidget: Widget = definedExternally): `T$268`
        fun IsDragDropping(): Boolean
        fun Handled(): EventReply
        fun GetSafeZonePadding(WorldContextObject: UObject, SafePadding: Vector4 = definedExternally, SafePaddingScale: Vector2D = definedExternally, SpillOverPadding: Vector4 = definedExternally): `T$359`
        fun GetKeyEventFromAnalogInputEvent(Event: AnalogInputEvent): KeyEvent
        fun GetInputEventFromPointerEvent(Event: UPointerEvent): InputEvent
        fun GetInputEventFromNavigationEvent(Event: NavigationEvent): InputEvent
        fun GetInputEventFromKeyEvent(Event: KeyEvent): InputEvent
        fun GetInputEventFromCharacterEvent(Event: CharacterEvent): InputEvent
        fun GetDynamicMaterial(Brush: SlateBrush = definedExternally): `T$43`
        fun GetDragDroppingContent(): DragDropOperation
        fun GetBrushResourceAsTexture2D(Brush: SlateBrush): Texture2D
        fun GetBrushResourceAsMaterial(Brush: SlateBrush): MaterialInterface
        fun GetBrushResource(Brush: SlateBrush): UObject
        fun GetAllWidgetsWithInterface(WorldContextObject: UObject, FoundWidgets: Array<UserWidget> = definedExternally, Interface: UnrealEngineClass = definedExternally, TopLevelOnly: Boolean = definedExternally): `T$605`
        fun GetAllWidgetsOfClass(WorldContextObject: UObject, FoundWidgets: Array<UserWidget> = definedExternally, WidgetClass: UnrealEngineClass = definedExternally, TopLevelOnly: Boolean = definedExternally): `T$606`
        fun EndDragDrop(Reply: EventReply = definedExternally): `T$268`
        fun DrawTextFormatted(Context: PaintContext = definedExternally, text: String = definedExternally, position: Vector2D = definedExternally, Font: Font = definedExternally, FontSize: Number = definedExternally, FontTypeFace: String = definedExternally, Tint: LinearColor = definedExternally): `T$269`
        fun DrawText(Context: PaintContext = definedExternally, InString: String = definedExternally, position: Vector2D = definedExternally, Tint: LinearColor = definedExternally): `T$269`
        fun DrawLines(Context: PaintContext = definedExternally, Points: Array<Vector2D> = definedExternally, Tint: LinearColor = definedExternally, bAntiAlias: Boolean = definedExternally, Thickness: Number = definedExternally): `T$269`
        fun DrawLine(Context: PaintContext = definedExternally, PositionA: Vector2D = definedExternally, PositionB: Vector2D = definedExternally, Tint: LinearColor = definedExternally, bAntiAlias: Boolean = definedExternally, Thickness: Number = definedExternally): `T$269`
        fun DrawBox(Context: PaintContext = definedExternally, position: Vector2D = definedExternally, Size: Vector2D = definedExternally, Brush: SlateBrushAsset = definedExternally, Tint: LinearColor = definedExternally): `T$269`
        fun DismissAllMenus()
        fun DetectDragIfPressed(UPointerEvent: UPointerEvent, WidgetDetectingDrag: Widget, DragKey: Key): EventReply
        fun DetectDrag(Reply: EventReply = definedExternally, WidgetDetectingDrag: Widget = definedExternally, DragKey: Key = definedExternally): `T$268`
        fun CreateDragDropOperation(OperationClass: UnrealEngineClass): DragDropOperation
        fun Create(WorldContextObject: UObject, WidgetType: UnrealEngineClass, OwningPlayer: PlayerController): UserWidget
        fun ClearUserFocus(Reply: EventReply = definedExternally, bInAllUsers: Boolean = definedExternally): `T$268`
        fun CaptureMouse(Reply: EventReply = definedExternally, CapturingWidget: Widget = definedExternally): `T$268`
        fun CaptureJoystick(Reply: EventReply = definedExternally, CapturingWidget: Widget = definedExternally, bInAllJoysticks: Boolean = definedExternally): `T$268`
        fun CancelDragDrop()
        fun C(Other: UObject): WidgetBlueprintLibrary
        fun C(Other: Any): WidgetBlueprintLibrary
    }
}

external object EWidgetInteractionSource {
    var World: String /* "World" */
    var Mouse: String /* "Mouse" */
    var CenterScreen: String /* "CenterScreen" */
    var Custom: String /* "Custom" */
    var EWidgetInteractionSource_MAX: String /* "EWidgetInteractionSource_MAX" */
}

external open class WidgetInteractionComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var OnHoveredWidgetChanged: UnrealEngineMulticastDelegate<(WidgetComponent: WidgetComponent, PreviousWidgetComponent: WidgetComponent) -> Unit>
    open var VirtualUserIndex: Number
    open var PointerIndex: Number
    open var TraceChannel: String /* "ECC_WorldStatic" | "ECC_WorldDynamic" | "ECC_Pawn" | "ECC_Visibility" | "ECC_Camera" | "ECC_PhysicsBody" | "ECC_Vehicle" | "ECC_Destructible" | "ECC_EngineTraceChannel1" | "ECC_EngineTraceChannel2" | "ECC_EngineTraceChannel3" | "ECC_EngineTraceChannel4" | "ECC_EngineTraceChannel5" | "ECC_EngineTraceChannel6" | "ECC_GameTraceChannel1" | "ECC_GameTraceChannel2" | "ECC_GameTraceChannel3" | "ECC_GameTraceChannel4" | "ECC_GameTraceChannel5" | "ECC_GameTraceChannel6" | "ECC_GameTraceChannel7" | "ECC_GameTraceChannel8" | "ECC_GameTraceChannel9" | "ECC_GameTraceChannel10" | "ECC_GameTraceChannel11" | "ECC_GameTraceChannel12" | "ECC_GameTraceChannel13" | "ECC_GameTraceChannel14" | "ECC_GameTraceChannel15" | "ECC_GameTraceChannel16" | "ECC_GameTraceChannel17" | "ECC_GameTraceChannel18" | "ECC_OverlapAll_Deprecated" | "ECC_MAX" */
    open var InteractionDistance: Number
    open var InteractionSource: String /* "World" | "Mouse" | "CenterScreen" | "Custom" | "EWidgetInteractionSource_MAX" */
    open var bEnableHitTesting: Boolean
    open var bShowDebug: Boolean
    open var DebugSphereLineThickness: Number
    open var DebugLineThickness: Number
    open var DebugColor: LinearColor
    open var CustomHitResult: HitResult
    open var LocalHitLocation: Vector2D
    open var LastLocalHitLocation: Vector2D
    open var HoveredWidgetComponent: WidgetComponent
    open var LastHitResult: HitResult
    open var bIsHoveredWidgetInteractable: Boolean
    open var bIsHoveredWidgetFocusable: Boolean
    open var bIsHoveredWidgetHitTestVisible: Boolean
    open var ArrowComponent: ArrowComponent
    open fun SetFocus(FocusWidget: Widget)
    open fun SetCustomHitResult(HitResult: HitResult)
    open fun SendKeyChar(Characters: String, bRepeat: Boolean): Boolean
    open fun ScrollWheel(ScrollDelta: Number)
    open fun ReleasePointerKey(Key: Key)
    open fun ReleaseKey(Key: Key): Boolean
    open fun PressPointerKey(Key: Key)
    open fun PressKey(Key: Key, bRepeat: Boolean): Boolean
    open fun PressAndReleaseKey(Key: Key): Boolean
    open fun IsOverInteractableWidget(): Boolean
    open fun IsOverHitTestVisibleWidget(): Boolean
    open fun IsOverFocusableWidget(): Boolean
    open fun GetLastHitResult(): HitResult
    open fun GetHoveredWidgetComponent(): WidgetComponent
    open fun Get2DHitLocation(): Vector2D

    companion object {
        fun Load(ResourceName: String): WidgetInteractionComponent
        fun Find(Outer: UObject, ResourceName: String): WidgetInteractionComponent
        fun GetDefaultObject(): WidgetInteractionComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WidgetInteractionComponent
        fun C(Other: UObject): WidgetInteractionComponent
        fun C(Other: Any): WidgetInteractionComponent
    }
}

external open class WidgetLayoutLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): WidgetLayoutLibrary
        fun Find(Outer: UObject, ResourceName: String): WidgetLayoutLibrary
        fun GetDefaultObject(): WidgetLayoutLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WidgetLayoutLibrary
        fun SlotAsWrapBoxSlot(Widget: Widget): WrapBoxSlot
        fun SlotAsWidgetSwitcherSlot(Widget: Widget): WidgetSwitcherSlot
        fun SlotAsVerticalBoxSlot(Widget: Widget): VerticalBoxSlot
        fun SlotAsUniformGridSlot(Widget: Widget): UniformGridSlot
        fun SlotAsSizeBoxSlot(Widget: Widget): SizeBoxSlot
        fun SlotAsScrollBoxSlot(Widget: Widget): ScrollBoxSlot
        fun SlotAsScaleBoxSlot(Widget: Widget): ScaleBoxSlot
        fun SlotAsSafeBoxSlot(Widget: Widget): SafeZoneSlot
        fun SlotAsOverlaySlot(Widget: Widget): OverlaySlot
        fun SlotAsHorizontalBoxSlot(Widget: Widget): HorizontalBoxSlot
        fun SlotAsGridSlot(Widget: Widget): GridSlot
        fun SlotAsCanvasSlot(Widget: Widget): CanvasPanelSlot
        fun SlotAsBorderSlot(Widget: Widget): BorderSlot
        fun RemoveAllWidgets(WorldContextObject: UObject)
        fun ProjectWorldLocationToWidgetPosition(PlayerController: PlayerController, WorldLocation: Vector, ScreenPosition: Vector2D = definedExternally, bPlayerViewportRelative: Boolean = definedExternally): `T$279`
        fun GetViewportWidgetGeometry(WorldContextObject: UObject): Geometry
        fun GetViewportSize(WorldContextObject: UObject): Vector2D
        fun GetViewportScale(WorldContextObject: UObject): Number
        fun GetPlayerScreenWidgetGeometry(PlayerController: PlayerController): Geometry
        fun GetMousePositionScaledByDPI(Player: PlayerController, LocationX: Number = definedExternally, LocationY: Number = definedExternally): `T$273`
        fun GetMousePositionOnViewport(WorldContextObject: UObject): Vector2D
        fun GetMousePositionOnPlatform(): Vector2D
        fun C(Other: UObject): WidgetLayoutLibrary
        fun C(Other: Any): WidgetLayoutLibrary
    }
}

external open class WidgetSwitcher : PanelWidget {
    constructor()
    constructor(Outer: UObject)
    open var ActiveWidgetIndex: Number
    open fun SetActiveWidgetIndex(index: Number)
    open fun SetActiveWidget(Widget: Widget)
    open fun GetWidgetAtIndex(index: Number): Widget
    open fun GetNumWidgets(): Number
    open fun GetActiveWidgetIndex(): Number
    open fun GetActiveWidget(): Widget

    companion object {
        fun Load(ResourceName: String): WidgetSwitcher
        fun Find(Outer: UObject, ResourceName: String): WidgetSwitcher
        fun GetDefaultObject(): WidgetSwitcher
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WidgetSwitcher
        fun C(Other: UObject): WidgetSwitcher
        fun C(Other: Any): WidgetSwitcher
    }
}

external open class WindowTitleBarArea : ContentWidget {
    constructor()
    constructor(Outer: UObject)
    open var bWindowButtonsEnabled: Boolean
    open var bDoubleClickTogglesFullscreen: Boolean
    open fun SetVerticalAlignment(InVerticalAlignment: String /* "VAlign_Fill" | "VAlign_Top" | "VAlign_Center" | "VAlign_Bottom" | "VAlign_MAX" */)
    open fun SetPadding(InPadding: Margin)
    open fun SetHorizontalAlignment(InHorizontalAlignment: String /* "HAlign_Fill" | "HAlign_Left" | "HAlign_Center" | "HAlign_Right" | "HAlign_MAX" */)

    companion object {
        fun Load(ResourceName: String): WindowTitleBarArea
        fun Find(Outer: UObject, ResourceName: String): WindowTitleBarArea
        fun GetDefaultObject(): WindowTitleBarArea
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WindowTitleBarArea
        fun C(Other: UObject): WindowTitleBarArea
        fun C(Other: Any): WindowTitleBarArea
    }
}

external open class WindowTitleBarAreaSlot : PanelSlot {
    constructor()
    constructor(Outer: UObject)
    open var Padding: Margin
    open var HorizontalAlignment: String /* "HAlign_Fill" | "HAlign_Left" | "HAlign_Center" | "HAlign_Right" | "HAlign_MAX" */
    open var VerticalAlignment: String /* "VAlign_Fill" | "VAlign_Top" | "VAlign_Center" | "VAlign_Bottom" | "VAlign_MAX" */
    open fun SetVerticalAlignment(InVerticalAlignment: String /* "VAlign_Fill" | "VAlign_Top" | "VAlign_Center" | "VAlign_Bottom" | "VAlign_MAX" */)
    open fun SetPadding(InPadding: Margin)
    open fun SetHorizontalAlignment(InHorizontalAlignment: String /* "HAlign_Fill" | "HAlign_Left" | "HAlign_Center" | "HAlign_Right" | "HAlign_MAX" */)

    companion object {
        fun Load(ResourceName: String): WindowTitleBarAreaSlot
        fun Find(Outer: UObject, ResourceName: String): WindowTitleBarAreaSlot
        fun GetDefaultObject(): WindowTitleBarAreaSlot
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WindowTitleBarAreaSlot
        fun C(Other: UObject): WindowTitleBarAreaSlot
        fun C(Other: Any): WindowTitleBarAreaSlot
    }
}

external open class WrapBox : PanelWidget {
    constructor()
    constructor(Outer: UObject)
    open var InnerSlotPadding: Vector2D
    open var WrapWidth: Number
    open var WrapSize: Number
    open var bExplicitWrapWidth: Boolean
    open var bExplicitWrapSize: Boolean
    open var HorizontalAlignment: String /* "HAlign_Fill" | "HAlign_Left" | "HAlign_Center" | "HAlign_Right" | "HAlign_MAX" */
    open var Orientation: String /* "Orient_Horizontal" | "Orient_Vertical" | "Orient_MAX" */
    open fun SetInnerSlotPadding(InPadding: Vector2D)
    open fun SetHorizontalAlignment(InHorizontalAlignment: String /* "HAlign_Fill" | "HAlign_Left" | "HAlign_Center" | "HAlign_Right" | "HAlign_MAX" */)
    open fun AddChildToWrapBox(Content: Widget): WrapBoxSlot

    companion object {
        fun Load(ResourceName: String): WrapBox
        fun Find(Outer: UObject, ResourceName: String): WrapBox
        fun GetDefaultObject(): WrapBox
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WrapBox
        fun C(Other: UObject): WrapBox
        fun C(Other: Any): WrapBox
    }
}

external open class BlueprintEditorLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlueprintEditorLibrary
        fun Find(Outer: UObject, ResourceName: String): BlueprintEditorLibrary
        fun GetDefaultObject(): BlueprintEditorLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintEditorLibrary
        fun UpgradeOperatorNodes(Blueprint: Blueprint)
        fun ReplaceVariableReferences(Blueprint: Blueprint, OldVarName: String, NewVarName: String)
        fun ReparentBlueprint(Blueprint: Blueprint, NewParentClass: UnrealEngineClass)
        fun RenameGraph(Graph: EdGraph, NewNameStr: String)
        fun RemoveUnusedVariables(Blueprint: Blueprint): Number
        fun RemoveUnusedNodes(Blueprint: Blueprint)
        fun RemoveGraph(Blueprint: Blueprint, Graph: EdGraph)
        fun RemoveFunctionGraph(Blueprint: Blueprint, FuncName: String)
        fun GetBlueprintAsset(UObject: UObject): Blueprint
        fun GeneratedClass(BlueprintObj: Blueprint): UnrealEngineClass
        fun FindGraph(Blueprint: Blueprint, GraphName: String): EdGraph
        fun FindEventGraph(Blueprint: Blueprint): EdGraph
        fun CompileBlueprint(Blueprint: Blueprint)
        fun AddFunctionGraph(Blueprint: Blueprint, FuncName: String): EdGraph
        fun C(Other: UObject): BlueprintEditorLibrary
        fun C(Other: Any): BlueprintEditorLibrary
    }
}

external open class ClassViewerProjectSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var InternalOnlyPaths: Array<DirectoryPath>
    open var InternalOnlyClasses: Array<SoftClassPath>

    companion object {
        fun Load(ResourceName: String): ClassViewerProjectSettings
        fun Find(Outer: UObject, ResourceName: String): ClassViewerProjectSettings
        fun GetDefaultObject(): ClassViewerProjectSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClassViewerProjectSettings
        fun C(Other: UObject): ClassViewerProjectSettings
        fun C(Other: Any): ClassViewerProjectSettings
    }
}

external object EContentBrowserDataMenuContext_AddNewMenuDomain {
    var Toolbar: String /* "Toolbar" */
    var AssetView: String /* "AssetView" */
    var PathView: String /* "PathView" */
    var EContentBrowserDataMenuContext_MAX: String /* "EContentBrowserDataMenuContext_MAX" */
}

external open class ContentBrowserDataMenuContext_AddNewMenu : UObject {
    constructor()
    constructor(Outer: UObject)
    open var SelectedPaths: Array<String>
    open var bContainsValidPackagePath: Boolean
    open var bCanBeModified: Boolean
    open var OwnerDomain: String /* "Toolbar" | "AssetView" | "PathView" | "EContentBrowserDataMenuContext_MAX" */

    companion object {
        fun Load(ResourceName: String): ContentBrowserDataMenuContext_AddNewMenu
        fun Find(Outer: UObject, ResourceName: String): ContentBrowserDataMenuContext_AddNewMenu
        fun GetDefaultObject(): ContentBrowserDataMenuContext_AddNewMenu
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ContentBrowserDataMenuContext_AddNewMenu
        fun C(Other: UObject): ContentBrowserDataMenuContext_AddNewMenu
        fun C(Other: Any): ContentBrowserDataMenuContext_AddNewMenu
    }
}

external open class ContentBrowserItem {
    open fun clone(): ContentBrowserItem
    open fun GetDisplayName(): String
    open fun GetVirtualPath(): String
    open fun IsFile(): Boolean
    open fun IsFolder(): Boolean

    companion object {
        fun C(Other: UObject): ContentBrowserItem
        fun C(Other: Any): ContentBrowserItem
        fun GetDisplayName(Item: ContentBrowserItem): String
        fun GetVirtualPath(Item: ContentBrowserItem): String
        fun IsFile(Item: ContentBrowserItem): Boolean
        fun IsFolder(Item: ContentBrowserItem): Boolean
    }
}

external open class ContentBrowserDataMenuContext_FolderMenu : UObject {
    constructor()
    constructor(Outer: UObject)
    open var SelectedItems: Array<ContentBrowserItem>
    open var bCanBeModified: Boolean

    companion object {
        fun Load(ResourceName: String): ContentBrowserDataMenuContext_FolderMenu
        fun Find(Outer: UObject, ResourceName: String): ContentBrowserDataMenuContext_FolderMenu
        fun GetDefaultObject(): ContentBrowserDataMenuContext_FolderMenu
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ContentBrowserDataMenuContext_FolderMenu
        fun C(Other: UObject): ContentBrowserDataMenuContext_FolderMenu
        fun C(Other: Any): ContentBrowserDataMenuContext_FolderMenu
    }
}

external open class ContentBrowserDataMenuContext_FileMenu : UObject {
    constructor()
    constructor(Outer: UObject)
    open var SelectedItems: Array<ContentBrowserItem>
    open var bCanBeModified: Boolean

    companion object {
        fun Load(ResourceName: String): ContentBrowserDataMenuContext_FileMenu
        fun Find(Outer: UObject, ResourceName: String): ContentBrowserDataMenuContext_FileMenu
        fun GetDefaultObject(): ContentBrowserDataMenuContext_FileMenu
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ContentBrowserDataMenuContext_FileMenu
        fun C(Other: UObject): ContentBrowserDataMenuContext_FileMenu
        fun C(Other: Any): ContentBrowserDataMenuContext_FileMenu
    }
}

external open class ContentBrowserDataMenuContext_DragDropMenu : UObject {
    constructor()
    constructor(Outer: UObject)
    open var DropTargetItem: ContentBrowserItem
    open var DraggedItems: Array<ContentBrowserItem>
    open var bCanMove: Boolean
    open var bCanCopy: Boolean

    companion object {
        fun Load(ResourceName: String): ContentBrowserDataMenuContext_DragDropMenu
        fun Find(Outer: UObject, ResourceName: String): ContentBrowserDataMenuContext_DragDropMenu
        fun GetDefaultObject(): ContentBrowserDataMenuContext_DragDropMenu
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ContentBrowserDataMenuContext_DragDropMenu
        fun C(Other: UObject): ContentBrowserDataMenuContext_DragDropMenu
        fun C(Other: Any): ContentBrowserDataMenuContext_DragDropMenu
    }
}

external open class ContentBrowserDataSource : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ContentBrowserDataSource
        fun Find(Outer: UObject, ResourceName: String): ContentBrowserDataSource
        fun GetDefaultObject(): ContentBrowserDataSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ContentBrowserDataSource
        fun C(Other: UObject): ContentBrowserDataSource
        fun C(Other: Any): ContentBrowserDataSource
    }
}

external object EContentBrowserItemTypeFilter {
    var IncludeNone: String /* "IncludeNone" */
    var IncludeFolders: String /* "IncludeFolders" */
    var IncludeFiles: String /* "IncludeFiles" */
    var IncludeAll: String /* "IncludeAll" */
    var EContentBrowserItemTypeFilter_MAX: String /* "EContentBrowserItemTypeFilter_MAX" */
}

external object EContentBrowserItemCategoryFilter {
    var IncludeNone: String /* "IncludeNone" */
    var IncludeAssets: String /* "IncludeAssets" */
    var IncludeClasses: String /* "IncludeClasses" */
    var IncludeCollections: String /* "IncludeCollections" */
    var IncludeMisc: String /* "IncludeMisc" */
    var IncludeAll: String /* "IncludeAll" */
    var EContentBrowserItemCategoryFilter_MAX: String /* "EContentBrowserItemCategoryFilter_MAX" */
}

external object EContentBrowserItemAttributeFilter {
    var IncludeNone: String /* "IncludeNone" */
    var IncludeProject: String /* "IncludeProject" */
    var IncludeEngine: String /* "IncludeEngine" */
    var IncludePlugins: String /* "IncludePlugins" */
    var IncludeDeveloper: String /* "IncludeDeveloper" */
    var IncludeLocalized: String /* "IncludeLocalized" */
    var IncludeAll: String /* "IncludeAll" */
    var EContentBrowserItemAttributeFilter_MAX: String /* "EContentBrowserItemAttributeFilter_MAX" */
}

external open class ContentBrowserDataFilter {
    open var bRecursivePaths: Boolean
    open var ItemTypeFilter: String /* "IncludeNone" | "IncludeFolders" | "IncludeFiles" | "IncludeAll" | "EContentBrowserItemTypeFilter_MAX" */
    open var ItemCategoryFilter: String /* "IncludeNone" | "IncludeAssets" | "IncludeClasses" | "IncludeCollections" | "IncludeMisc" | "IncludeAll" | "EContentBrowserItemCategoryFilter_MAX" */
    open var ItemAttributeFilter: String /* "IncludeNone" | "IncludeProject" | "IncludeEngine" | "IncludePlugins" | "IncludeDeveloper" | "IncludeLocalized" | "IncludeAll" | "EContentBrowserItemAttributeFilter_MAX" */
    open fun clone(): ContentBrowserDataFilter

    companion object {
        fun C(Other: UObject): ContentBrowserDataFilter
        fun C(Other: Any): ContentBrowserDataFilter
    }
}

external open class ContentBrowserDataSubsystem : EditorSubsystem {
    constructor()
    constructor(Outer: UObject)
    open var EnabledDataSources: Array<String>
    open fun GetItemsUnderPath(InPath: String, InFilter: ContentBrowserDataFilter): Array<ContentBrowserItem>
    open fun GetItemsAtPath(InPath: String, InItemTypeFilter: String /* "IncludeNone" | "IncludeFolders" | "IncludeFiles" | "IncludeAll" | "EContentBrowserItemTypeFilter_MAX" */): Array<ContentBrowserItem>
    open fun GetItemAtPath(InPath: String, InItemTypeFilter: String /* "IncludeNone" | "IncludeFolders" | "IncludeFiles" | "IncludeAll" | "EContentBrowserItemTypeFilter_MAX" */): ContentBrowserItem
    open fun GetAvailableDataSources(): Array<String>
    open fun GetActiveDataSources(): Array<String>
    open fun DeactivateDataSource(Name: String): Boolean
    open fun DeactivateAllDataSources()
    open fun ActivateDataSource(Name: String): Boolean
    open fun ActivateAllDataSources()

    companion object {
        fun Load(ResourceName: String): ContentBrowserDataSubsystem
        fun Find(Outer: UObject, ResourceName: String): ContentBrowserDataSubsystem
        fun GetDefaultObject(): ContentBrowserDataSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ContentBrowserDataSubsystem
        fun C(Other: UObject): ContentBrowserDataSubsystem
        fun C(Other: Any): ContentBrowserDataSubsystem
    }
}

external open class ContentBrowserItemLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ContentBrowserItemLibrary
        fun Find(Outer: UObject, ResourceName: String): ContentBrowserItemLibrary
        fun GetDefaultObject(): ContentBrowserItemLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ContentBrowserItemLibrary
        fun IsFolder(Item: ContentBrowserItem): Boolean
        fun IsFile(Item: ContentBrowserItem): Boolean
        fun GetVirtualPath(Item: ContentBrowserItem): String
        fun GetDisplayName(Item: ContentBrowserItem): String
        fun C(Other: UObject): ContentBrowserItemLibrary
        fun C(Other: Any): ContentBrowserItemLibrary
    }
}

external open class EditorConfigBase : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EditorConfigBase
        fun Find(Outer: UObject, ResourceName: String): EditorConfigBase
        fun GetDefaultObject(): EditorConfigBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorConfigBase
        fun C(Other: UObject): EditorConfigBase
        fun C(Other: Any): EditorConfigBase
    }
}

external open class EditorConfigSubsystem : EditorSubsystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EditorConfigSubsystem
        fun Find(Outer: UObject, ResourceName: String): EditorConfigSubsystem
        fun GetDefaultObject(): EditorConfigSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorConfigSubsystem
        fun C(Other: UObject): EditorConfigSubsystem
        fun C(Other: Any): EditorConfigSubsystem
    }
}

external open class EditorConfigTestStruct {
    open var BoolProperty: Boolean
    open var IntProperty: Number
    open var StringProperty: String
    open var FloatProperty: Number
    open var ArrayProperty: Array<String>
    open fun clone(): EditorConfigTestStruct

    companion object {
        fun C(Other: UObject): EditorConfigTestStruct
        fun C(Other: Any): EditorConfigTestStruct
    }
}

external open class EditorConfigTestObject : UObject {
    constructor()
    constructor(Outer: UObject)
    open var UObject: UObject
    open var SoftObjectPath: SoftObjectPath
    open var struct: EditorConfigTestStruct
    open var Number: Number

    companion object {
        fun Load(ResourceName: String): EditorConfigTestObject
        fun Find(Outer: UObject, ResourceName: String): EditorConfigTestObject
        fun GetDefaultObject(): EditorConfigTestObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorConfigTestObject
        fun C(Other: UObject): EditorConfigTestObject
        fun C(Other: Any): EditorConfigTestObject
    }
}

external open class EditorMetadataOverrides : EditorSubsystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EditorMetadataOverrides
        fun Find(Outer: UObject, ResourceName: String): EditorMetadataOverrides
        fun GetDefaultObject(): EditorMetadataOverrides
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorMetadataOverrides
        fun C(Other: UObject): EditorMetadataOverrides
        fun C(Other: Any): EditorMetadataOverrides
    }
}

external open class SourceControlState {
    open var Filename: String
    open var bIsValid: Boolean
    open var bIsUnknown: Boolean
    open var bCanCheckIn: Boolean
    open var bCanCheckOut: Boolean
    open var bIsCheckedOut: Boolean
    open var bIsCurrent: Boolean
    open var bIsSourceControlled: Boolean
    open var bIsAdded: Boolean
    open var bIsDeleted: Boolean
    open var bIsIgnored: Boolean
    open var bCanEdit: Boolean
    open var bCanDelete: Boolean
    open var bIsModified: Boolean
    open var bCanAdd: Boolean
    open var bIsConflicted: Boolean
    open var bCanRevert: Boolean
    open var bIsCheckedOutOther: Boolean
    open var CheckedOutOther: String
    open fun clone(): SourceControlState

    companion object {
        fun C(Other: UObject): SourceControlState
        fun C(Other: Any): SourceControlState
    }
}

external open class SourceControlHelpers : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SourceControlHelpers
        fun Find(Outer: UObject, ResourceName: String): SourceControlHelpers
        fun GetDefaultObject(): SourceControlHelpers
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SourceControlHelpers
        fun SyncFiles(InFiles: Array<String>, bSilent: Boolean): Boolean
        fun SyncFile(InFile: String, bSilent: Boolean): Boolean
        fun RevertUnchangedFiles(InFiles: Array<String>, bSilent: Boolean): Boolean
        fun RevertUnchangedFile(InFile: String, bSilent: Boolean): Boolean
        fun RevertFiles(InFiles: Array<String>, bSilent: Boolean): Boolean
        fun RevertFile(InFile: String, bSilent: Boolean): Boolean
        fun QueryFileState(InFile: String, bSilent: Boolean): SourceControlState
        fun MarkFilesForDelete(InFiles: Array<String>, bSilent: Boolean): Boolean
        fun MarkFilesForAdd(InFiles: Array<String>, bSilent: Boolean): Boolean
        fun MarkFileForDelete(InFile: String, bSilent: Boolean): Boolean
        fun MarkFileForAdd(InFile: String, bSilent: Boolean): Boolean
        fun LastErrorMsg(): String
        fun IsEnabled(): Boolean
        fun IsAvailable(): Boolean
        fun CurrentProvider(): String
        fun CopyFile(InSourceFile: String, InDestFile: String, bSilent: Boolean): Boolean
        fun CheckOutOrAddFiles(InFiles: Array<String>, bSilent: Boolean): Boolean
        fun CheckOutOrAddFile(InFile: String, bSilent: Boolean): Boolean
        fun CheckOutFiles(InFiles: Array<String>, bSilent: Boolean): Boolean
        fun CheckOutFile(InFile: String, bSilent: Boolean): Boolean
        fun CheckInFiles(InFiles: Array<String>, InDescription: String, bSilent: Boolean): Boolean
        fun CheckInFile(InFile: String, InDescription: String, bSilent: Boolean): Boolean
        fun C(Other: UObject): SourceControlHelpers
        fun C(Other: Any): SourceControlHelpers
    }
}

external open class SourceControlPreferences : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var bEnableValidationTag: Boolean
    open var bShouldDeleteNewFilesOnRevert: Boolean
    open var CollectionChangelistTags: Array<String>
    open var SpecificCollectionChangelistTags: Any

    companion object {
        fun Load(ResourceName: String): SourceControlPreferences
        fun Find(Outer: UObject, ResourceName: String): SourceControlPreferences
        fun GetDefaultObject(): SourceControlPreferences
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SourceControlPreferences
        fun C(Other: UObject): SourceControlPreferences
        fun C(Other: Any): SourceControlPreferences
    }
}

external open class ActorBrowsingModeSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bHideTemporaryActors: Boolean
    open var bShowOnlyActorsInCurrentLevel: Boolean
    open var bShowOnlySelectedActors: Boolean
    open var bHideActorComponents: Boolean
    open var bHideLevelInstanceHierarchy: Boolean
    open var bHideUnloadedActors: Boolean

    companion object {
        fun Load(ResourceName: String): ActorBrowsingModeSettings
        fun Find(Outer: UObject, ResourceName: String): ActorBrowsingModeSettings
        fun GetDefaultObject(): ActorBrowsingModeSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorBrowsingModeSettings
        fun C(Other: UObject): ActorBrowsingModeSettings
        fun C(Other: Any): ActorBrowsingModeSettings
    }
}

external open class OutlinerConfig : EditorConfigBase {
    constructor()
    constructor(Outer: UObject)
    open var Outliners: Any

    companion object {
        fun Load(ResourceName: String): OutlinerConfig
        fun Find(Outer: UObject, ResourceName: String): OutlinerConfig
        fun GetDefaultObject(): OutlinerConfig
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): OutlinerConfig
        fun C(Other: UObject): OutlinerConfig
        fun C(Other: Any): OutlinerConfig
    }
}

external open class SceneOutlinerMenuContext : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SceneOutlinerMenuContext
        fun Find(Outer: UObject, ResourceName: String): SceneOutlinerMenuContext
        fun GetDefaultObject(): SceneOutlinerMenuContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SceneOutlinerMenuContext
        fun C(Other: UObject): SceneOutlinerMenuContext
        fun C(Other: Any): SceneOutlinerMenuContext
    }
}

external open class DetailsConfig : EditorConfigBase {
    constructor()
    constructor(Outer: UObject)
    open var Views: Any

    companion object {
        fun Load(ResourceName: String): DetailsConfig
        fun Find(Outer: UObject, ResourceName: String): DetailsConfig
        fun GetDefaultObject(): DetailsConfig
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DetailsConfig
        fun C(Other: UObject): DetailsConfig
        fun C(Other: Any): DetailsConfig
    }
}

external object EditConditionTestEnum {
    var First: String /* "First" */
    var Second: String /* "Second" */
    var EditConditionTestEnum_MAX: String /* "EditConditionTestEnum_MAX" */
}

external object EditConditionByteEnum {
    var First: String /* "First" */
    var Second: String /* "Second" */
    var EditConditionByteEnum_MAX: String /* "EditConditionByteEnum_MAX" */
}

external open class EditConditionTestObject : UObject {
    constructor()
    constructor(Outer: UObject)
    open var BoolProperty: Boolean
    open var EnumProperty: String /* "First" | "Second" | "EditConditionTestEnum_MAX" */
    open var ByteEnumProperty: String /* "First" | "Second" | "EditConditionByteEnum_MAX" */
    open var DoubleProperty: Any
    open var IntegerProperty: Number
    open var UintBitfieldProperty: Boolean
    open var UObjectPtr: UObject
    open var SoftClassPtr: Class
    open var WeakObjectPtr: Any

    companion object {
        fun Load(ResourceName: String): EditConditionTestObject
        fun Find(Outer: UObject, ResourceName: String): EditConditionTestObject
        fun GetDefaultObject(): EditConditionTestObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditConditionTestObject
        fun C(Other: UObject): EditConditionTestObject
        fun C(Other: Any): EditConditionTestObject
    }
}

external open class BlueprintNodeSpawner : UObject {
    constructor()
    constructor(Outer: UObject)
    open var NodeClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): BlueprintNodeSpawner
        fun Find(Outer: UObject, ResourceName: String): BlueprintNodeSpawner
        fun GetDefaultObject(): BlueprintNodeSpawner
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintNodeSpawner
        fun C(Other: UObject): BlueprintNodeSpawner
        fun C(Other: Any): BlueprintNodeSpawner
    }
}

external open class BlueprintEventNodeSpawner : BlueprintNodeSpawner {
    constructor()
    constructor(Outer: UObject)
    open var EventFunc: UFunction
    open var CustomEventName: String

    companion object {
        fun Load(ResourceName: String): BlueprintEventNodeSpawner
        fun Find(Outer: UObject, ResourceName: String): BlueprintEventNodeSpawner
        fun GetDefaultObject(): BlueprintEventNodeSpawner
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintEventNodeSpawner
        fun C(Other: UObject): BlueprintEventNodeSpawner
        fun C(Other: Any): BlueprintEventNodeSpawner
    }
}

external open class BlueprintBoundEventNodeSpawner : BlueprintEventNodeSpawner {
    constructor()
    constructor(Outer: UObject)
    open var EventDelegate: Any

    companion object {
        fun Load(ResourceName: String): BlueprintBoundEventNodeSpawner
        fun Find(Outer: UObject, ResourceName: String): BlueprintBoundEventNodeSpawner
        fun GetDefaultObject(): BlueprintBoundEventNodeSpawner
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintBoundEventNodeSpawner
        fun C(Other: UObject): BlueprintBoundEventNodeSpawner
        fun C(Other: Any): BlueprintBoundEventNodeSpawner
    }
}

external open class BlueprintBoundNodeSpawner : BlueprintNodeSpawner {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlueprintBoundNodeSpawner
        fun Find(Outer: UObject, ResourceName: String): BlueprintBoundNodeSpawner
        fun GetDefaultObject(): BlueprintBoundNodeSpawner
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintBoundNodeSpawner
        fun C(Other: UObject): BlueprintBoundNodeSpawner
        fun C(Other: Any): BlueprintBoundNodeSpawner
    }
}

external open class BlueprintComponentNodeSpawner : BlueprintNodeSpawner {
    constructor()
    constructor(Outer: UObject)
    open var ComponentClass: UnrealEngineClass
    open var ComponentName: String
    open var ComponentAssetName: String

    companion object {
        fun Load(ResourceName: String): BlueprintComponentNodeSpawner
        fun Find(Outer: UObject, ResourceName: String): BlueprintComponentNodeSpawner
        fun GetDefaultObject(): BlueprintComponentNodeSpawner
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintComponentNodeSpawner
        fun C(Other: UObject): BlueprintComponentNodeSpawner
        fun C(Other: Any): BlueprintComponentNodeSpawner
    }
}

external open class BlueprintFieldNodeSpawner : BlueprintNodeSpawner {
    constructor()
    constructor(Outer: UObject)
    open var OwnerClass: UnrealEngineClass
    open var Field: Field
    open var Property: Any

    companion object {
        fun Load(ResourceName: String): BlueprintFieldNodeSpawner
        fun Find(Outer: UObject, ResourceName: String): BlueprintFieldNodeSpawner
        fun GetDefaultObject(): BlueprintFieldNodeSpawner
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintFieldNodeSpawner
        fun C(Other: UObject): BlueprintFieldNodeSpawner
        fun C(Other: Any): BlueprintFieldNodeSpawner
    }
}

external open class BlueprintDelegateNodeSpawner : BlueprintFieldNodeSpawner {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlueprintDelegateNodeSpawner
        fun Find(Outer: UObject, ResourceName: String): BlueprintDelegateNodeSpawner
        fun GetDefaultObject(): BlueprintDelegateNodeSpawner
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintDelegateNodeSpawner
        fun C(Other: UObject): BlueprintDelegateNodeSpawner
        fun C(Other: Any): BlueprintDelegateNodeSpawner
    }
}

external object EBlueprintBreakpointReloadMethod {
    var RestoreAll: String /* "RestoreAll" */
    var RestoreAllAndDisable: String /* "RestoreAllAndDisable" */
    var DiscardAll: String /* "DiscardAll" */
    var EBlueprintBreakpointReloadMethod_MAX: String /* "EBlueprintBreakpointReloadMethod_MAX" */
}

external object ESaveOnCompile {
    var SoC_Never: String /* "SoC_Never" */
    var SoC_SuccessOnly: String /* "SoC_SuccessOnly" */
    var SoC_Always: String /* "SoC_Always" */
    var SoC_MAX: String /* "SoC_MAX" */
}

external open class BlueprintEditorSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var bDrawMidpointArrowsInBlueprints: Boolean
    open var bShowGraphInstructionText: Boolean
    open var bHideUnrelatedNodes: Boolean
    open var bShowShortTooltips: Boolean
    open var bSplitContextTargetSettings: Boolean
    open var bExposeAllMemberComponentFunctions: Boolean
    open var bShowContextualFavorites: Boolean
    open var bExposeDeprecatedFunctions: Boolean
    open var bCompactCallOnMemberNodes: Boolean
    open var bFlattenFavoritesMenus: Boolean
    open var bAutoCastObjectConnections: Boolean
    open var bShowViewportOnSimulate: Boolean
    open var bSpawnDefaultBlueprintNodes: Boolean
    open var bHideConstructionScriptComponentsInDetailsView: Boolean
    open var bHostFindInBlueprintsInGlobalTab: Boolean
    open var bNavigateToNativeFunctionsFromCallNodes: Boolean
    open var bDoubleClickNavigatesToParent: Boolean
    open var bEnableTypePromotion: Boolean
    open var TypePromotionPinDenyList: Any
    open var BreakpointReloadMethod: String /* "RestoreAll" | "RestoreAllAndDisable" | "DiscardAll" | "EBlueprintBreakpointReloadMethod_MAX" */
    open var bEnablePinValueInspectionTooltips: Boolean
    open var bEnableNamespaceEditorFeatures: Boolean
    open var bEnableNamespaceFilteringFeatures: Boolean
    open var bEnableNamespaceImportingFeatures: Boolean
    open var NamespacesToAlwaysInclude: Array<String>
    open var bFavorPureCastNodes: Boolean
    open var SaveOnCompile: String /* "SoC_Never" | "SoC_SuccessOnly" | "SoC_Always" | "SoC_MAX" */
    open var bJumpToNodeErrors: Boolean
    open var bAllowExplicitImpureNodeDisabling: Boolean
    open var bShowActionMenuItemSignatures: Boolean
    open var bBlueprintNodeUniqueNames: Boolean
    open var bShowDetailedCompileResults: Boolean
    open var CompileEventDisplayThresholdMs: Number
    open var NodeTemplateCacheCapMB: Number
    open var bShowInheritedVariables: Boolean
    open var bAlwaysShowInterfacesInOverrides: Boolean
    open var bShowParentClassInOverrides: Boolean
    open var bShowEmptySections: Boolean
    open var bShowAccessSpecifier: Boolean
    open var Bookmarks: Any
    open var BookmarkNodes: Array<BPEditorBookmarkNode>
    open var PerBlueprintSettings: Any
    open var bIncludeCommentNodesInBookmarksTab: Boolean
    open var bShowBookmarksForCurrentDocumentOnlyInTab: Boolean
    open var GraphEditorQuickJumps: Any
    open var BaseClassesToAllowRecompilingDuringPlayInEditor: Array<Class>

    companion object {
        fun Load(ResourceName: String): BlueprintEditorSettings
        fun Find(Outer: UObject, ResourceName: String): BlueprintEditorSettings
        fun GetDefaultObject(): BlueprintEditorSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintEditorSettings
        fun C(Other: UObject): BlueprintEditorSettings
        fun C(Other: Any): BlueprintEditorSettings
    }
}

external open class BlueprintFunctionNodeSpawner : BlueprintFieldNodeSpawner {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlueprintFunctionNodeSpawner
        fun Find(Outer: UObject, ResourceName: String): BlueprintFunctionNodeSpawner
        fun GetDefaultObject(): BlueprintFunctionNodeSpawner
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintFunctionNodeSpawner
        fun C(Other: UObject): BlueprintFunctionNodeSpawner
        fun C(Other: Any): BlueprintFunctionNodeSpawner
    }
}

external open class BlueprintVariableNodeSpawner : BlueprintFieldNodeSpawner {
    constructor()
    constructor(Outer: UObject)
    open var LocalVarOuter: EdGraph
    open var LocalVarDesc: BPVariableDescription

    companion object {
        fun Load(ResourceName: String): BlueprintVariableNodeSpawner
        fun Find(Outer: UObject, ResourceName: String): BlueprintVariableNodeSpawner
        fun GetDefaultObject(): BlueprintVariableNodeSpawner
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintVariableNodeSpawner
        fun C(Other: UObject): BlueprintVariableNodeSpawner
        fun C(Other: Any): BlueprintVariableNodeSpawner
    }
}

external open class BlueprintCallableFunctionRedirect {
    open var ClassName: String
    open var OldFunctionName: String
    open var NewFunctionName: String
    open var BlueprintParamName: String
    open var ClassParamName: String
    open fun clone(): BlueprintCallableFunctionRedirect

    companion object {
        fun C(Other: UObject): BlueprintCallableFunctionRedirect
        fun C(Other: Any): BlueprintCallableFunctionRedirect
    }
}

external open class EdGraphSchema_K2 : EdGraphSchema {
    constructor()
    constructor(Outer: UObject)
    open var EditoronlyBPFunctionRedirects: Array<BlueprintCallableFunctionRedirect>

    companion object {
        fun Load(ResourceName: String): EdGraphSchema_K2
        fun Find(Outer: UObject, ResourceName: String): EdGraphSchema_K2
        fun GetDefaultObject(): EdGraphSchema_K2
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EdGraphSchema_K2
        fun C(Other: UObject): EdGraphSchema_K2
        fun C(Other: Any): EdGraphSchema_K2
    }
}

external open class K2Node_ActorBoundEvent : K2Node_Event {
    constructor()
    constructor(Outer: UObject)
    open var DelegatePropertyName: String
    open var DelegateOwnerClass: UnrealEngineClass
    open var EventOwner: Actor

    companion object {
        fun Load(ResourceName: String): K2Node_ActorBoundEvent
        fun Find(Outer: UObject, ResourceName: String): K2Node_ActorBoundEvent
        fun GetDefaultObject(): K2Node_ActorBoundEvent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_ActorBoundEvent
        fun C(Other: UObject): K2Node_ActorBoundEvent
        fun C(Other: Any): K2Node_ActorBoundEvent
    }
}

external open class K2Node_CallFunction : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var bIsPureFunc: Boolean
    open var bIsConstFunc: Boolean
    open var bWantsEnumToExecExpansion: Boolean
    open var bIsInterfaceCall: Boolean
    open var bIsFinalFunction: Boolean
    open var bIsBeadFunction: Boolean
    open var FunctionReference: MemberReference
    open var CallFunctionName: String
    open var CallFunctionClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): K2Node_CallFunction
        fun Find(Outer: UObject, ResourceName: String): K2Node_CallFunction
        fun GetDefaultObject(): K2Node_CallFunction
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_CallFunction
        fun C(Other: UObject): K2Node_CallFunction
        fun C(Other: Any): K2Node_CallFunction
    }
}

external open class K2Node_AddComponent : K2Node_CallFunction {
    constructor()
    constructor(Outer: UObject)
    open var bHasExposedVariable: Boolean
    open var TemplateBlueprint: String
    open var TemplateType: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): K2Node_AddComponent
        fun Find(Outer: UObject, ResourceName: String): K2Node_AddComponent
        fun GetDefaultObject(): K2Node_AddComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_AddComponent
        fun C(Other: UObject): K2Node_AddComponent
        fun C(Other: Any): K2Node_AddComponent
    }
}

external open class K2Node_ConstructObjectFromClass : K2Node {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_ConstructObjectFromClass
        fun Find(Outer: UObject, ResourceName: String): K2Node_ConstructObjectFromClass
        fun GetDefaultObject(): K2Node_ConstructObjectFromClass
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_ConstructObjectFromClass
        fun C(Other: UObject): K2Node_ConstructObjectFromClass
        fun C(Other: Any): K2Node_ConstructObjectFromClass
    }
}

external open class K2Node_AddComponentByClass : K2Node_ConstructObjectFromClass {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_AddComponentByClass
        fun Find(Outer: UObject, ResourceName: String): K2Node_AddComponentByClass
        fun GetDefaultObject(): K2Node_AddComponentByClass
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_AddComponentByClass
        fun C(Other: UObject): K2Node_AddComponentByClass
        fun C(Other: Any): K2Node_AddComponentByClass
    }
}

external open class K2Node_BaseMCDelegate : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var DelegateReference: MemberReference

    companion object {
        fun Load(ResourceName: String): K2Node_BaseMCDelegate
        fun Find(Outer: UObject, ResourceName: String): K2Node_BaseMCDelegate
        fun GetDefaultObject(): K2Node_BaseMCDelegate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_BaseMCDelegate
        fun C(Other: UObject): K2Node_BaseMCDelegate
        fun C(Other: Any): K2Node_BaseMCDelegate
    }
}

external open class K2Node_AddDelegate : K2Node_BaseMCDelegate {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_AddDelegate
        fun Find(Outer: UObject, ResourceName: String): K2Node_AddDelegate
        fun GetDefaultObject(): K2Node_AddDelegate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_AddDelegate
        fun C(Other: UObject): K2Node_AddDelegate
        fun C(Other: Any): K2Node_AddDelegate
    }
}

external open class K2Node_AddPinInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_AddPinInterface
        fun Find(Outer: UObject, ResourceName: String): K2Node_AddPinInterface
        fun GetDefaultObject(): K2Node_AddPinInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_AddPinInterface
        fun C(Other: UObject): K2Node_AddPinInterface
        fun C(Other: Any): K2Node_AddPinInterface
    }
}

external open class K2Node_AssignDelegate : K2Node_AddDelegate {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_AssignDelegate
        fun Find(Outer: UObject, ResourceName: String): K2Node_AssignDelegate
        fun GetDefaultObject(): K2Node_AssignDelegate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_AssignDelegate
        fun C(Other: UObject): K2Node_AssignDelegate
        fun C(Other: Any): K2Node_AssignDelegate
    }
}

external open class K2Node_AssignmentStatement : K2Node {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_AssignmentStatement
        fun Find(Outer: UObject, ResourceName: String): K2Node_AssignmentStatement
        fun GetDefaultObject(): K2Node_AssignmentStatement
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_AssignmentStatement
        fun C(Other: UObject): K2Node_AssignmentStatement
        fun C(Other: Any): K2Node_AssignmentStatement
    }
}

external open class K2Node_BaseAsyncTask : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var ProxyFactoryFunctionName: String
    open var ProxyFactoryClass: UnrealEngineClass
    open var ProxyClass: UnrealEngineClass
    open var ProxyActivateFunctionName: String

    companion object {
        fun Load(ResourceName: String): K2Node_BaseAsyncTask
        fun Find(Outer: UObject, ResourceName: String): K2Node_BaseAsyncTask
        fun GetDefaultObject(): K2Node_BaseAsyncTask
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_BaseAsyncTask
        fun C(Other: UObject): K2Node_BaseAsyncTask
        fun C(Other: Any): K2Node_BaseAsyncTask
    }
}

external open class K2Node_AsyncAction : K2Node_BaseAsyncTask {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_AsyncAction
        fun Find(Outer: UObject, ResourceName: String): K2Node_AsyncAction
        fun GetDefaultObject(): K2Node_AsyncAction
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_AsyncAction
        fun C(Other: UObject): K2Node_AsyncAction
        fun C(Other: Any): K2Node_AsyncAction
    }
}

external open class K2Node_BitmaskLiteral : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var BitflagsEnum: Enum

    companion object {
        fun Load(ResourceName: String): K2Node_BitmaskLiteral
        fun Find(Outer: UObject, ResourceName: String): K2Node_BitmaskLiteral
        fun GetDefaultObject(): K2Node_BitmaskLiteral
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_BitmaskLiteral
        fun C(Other: UObject): K2Node_BitmaskLiteral
        fun C(Other: Any): K2Node_BitmaskLiteral
    }
}

external object ESelfContextInfo {
    var Unspecified: String /* "Unspecified" */
    var NotSelfContext: String /* "NotSelfContext" */
    var ESelfContextInfo_MAX: String /* "ESelfContextInfo_MAX" */
}

external open class K2Node_Variable : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var VariableReference: MemberReference
    open var SelfContextInfo: String /* "Unspecified" | "NotSelfContext" | "ESelfContextInfo_MAX" */
    open var VariableSourceClass: UnrealEngineClass
    open var VariableName: String
    open var bSelfContext: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_Variable
        fun Find(Outer: UObject, ResourceName: String): K2Node_Variable
        fun GetDefaultObject(): K2Node_Variable
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_Variable
        fun C(Other: UObject): K2Node_Variable
        fun C(Other: Any): K2Node_Variable
    }
}

external open class K2Node_StructOperation : K2Node_Variable {
    constructor()
    constructor(Outer: UObject)
    open var StructType: ScriptStruct

    companion object {
        fun Load(ResourceName: String): K2Node_StructOperation
        fun Find(Outer: UObject, ResourceName: String): K2Node_StructOperation
        fun GetDefaultObject(): K2Node_StructOperation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_StructOperation
        fun C(Other: UObject): K2Node_StructOperation
        fun C(Other: Any): K2Node_StructOperation
    }
}

external open class K2Node_StructMemberGet : K2Node_StructOperation {
    constructor()
    constructor(Outer: UObject)
    open var ShowPinForProperties: Array<OptionalPinFromProperty>

    companion object {
        fun Load(ResourceName: String): K2Node_StructMemberGet
        fun Find(Outer: UObject, ResourceName: String): K2Node_StructMemberGet
        fun GetDefaultObject(): K2Node_StructMemberGet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_StructMemberGet
        fun C(Other: UObject): K2Node_StructMemberGet
        fun C(Other: Any): K2Node_StructMemberGet
    }
}

external open class K2Node_BreakStruct : K2Node_StructMemberGet {
    constructor()
    constructor(Outer: UObject)
    open var bMadeAfterOverridePinRemoval: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_BreakStruct
        fun Find(Outer: UObject, ResourceName: String): K2Node_BreakStruct
        fun GetDefaultObject(): K2Node_BreakStruct
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_BreakStruct
        fun C(Other: UObject): K2Node_BreakStruct
        fun C(Other: Any): K2Node_BreakStruct
    }
}

external open class K2Node_CallArrayFunction : K2Node_CallFunction {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_CallArrayFunction
        fun Find(Outer: UObject, ResourceName: String): K2Node_CallArrayFunction
        fun GetDefaultObject(): K2Node_CallArrayFunction
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_CallArrayFunction
        fun C(Other: UObject): K2Node_CallArrayFunction
        fun C(Other: Any): K2Node_CallArrayFunction
    }
}

external open class K2Node_CallDataTableFunction : K2Node_CallFunction {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_CallDataTableFunction
        fun Find(Outer: UObject, ResourceName: String): K2Node_CallDataTableFunction
        fun GetDefaultObject(): K2Node_CallDataTableFunction
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_CallDataTableFunction
        fun C(Other: UObject): K2Node_CallDataTableFunction
        fun C(Other: Any): K2Node_CallDataTableFunction
    }
}

external open class K2Node_CallDelegate : K2Node_BaseMCDelegate {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_CallDelegate
        fun Find(Outer: UObject, ResourceName: String): K2Node_CallDelegate
        fun GetDefaultObject(): K2Node_CallDelegate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_CallDelegate
        fun C(Other: UObject): K2Node_CallDelegate
        fun C(Other: Any): K2Node_CallDelegate
    }
}

external open class K2Node_CallFunctionOnMember : K2Node_CallFunction {
    constructor()
    constructor(Outer: UObject)
    open var MemberVariableToCallOn: MemberReference

    companion object {
        fun Load(ResourceName: String): K2Node_CallFunctionOnMember
        fun Find(Outer: UObject, ResourceName: String): K2Node_CallFunctionOnMember
        fun GetDefaultObject(): K2Node_CallFunctionOnMember
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_CallFunctionOnMember
        fun C(Other: UObject): K2Node_CallFunctionOnMember
        fun C(Other: Any): K2Node_CallFunctionOnMember
    }
}

external open class K2Node_CallMaterialParameterCollectionFunction : K2Node_CallFunction {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_CallMaterialParameterCollectionFunction
        fun Find(Outer: UObject, ResourceName: String): K2Node_CallMaterialParameterCollectionFunction
        fun GetDefaultObject(): K2Node_CallMaterialParameterCollectionFunction
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_CallMaterialParameterCollectionFunction
        fun C(Other: UObject): K2Node_CallMaterialParameterCollectionFunction
        fun C(Other: Any): K2Node_CallMaterialParameterCollectionFunction
    }
}

external open class K2Node_CallParentFunction : K2Node_CallFunction {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_CallParentFunction
        fun Find(Outer: UObject, ResourceName: String): K2Node_CallParentFunction
        fun GetDefaultObject(): K2Node_CallParentFunction
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_CallParentFunction
        fun C(Other: UObject): K2Node_CallParentFunction
        fun C(Other: Any): K2Node_CallParentFunction
    }
}

external open class K2Node_CastByteToEnum : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var Enum: Enum
    open var bSafe: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_CastByteToEnum
        fun Find(Outer: UObject, ResourceName: String): K2Node_CastByteToEnum
        fun GetDefaultObject(): K2Node_CastByteToEnum
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_CastByteToEnum
        fun C(Other: UObject): K2Node_CastByteToEnum
        fun C(Other: Any): K2Node_CastByteToEnum
    }
}

external open class K2Node_DynamicCast : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var TargetType: UnrealEngineClass
    open var bIsPureCast: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_DynamicCast
        fun Find(Outer: UObject, ResourceName: String): K2Node_DynamicCast
        fun GetDefaultObject(): K2Node_DynamicCast
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_DynamicCast
        fun C(Other: UObject): K2Node_DynamicCast
        fun C(Other: Any): K2Node_DynamicCast
    }
}

external open class K2Node_ClassDynamicCast : K2Node_DynamicCast {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_ClassDynamicCast
        fun Find(Outer: UObject, ResourceName: String): K2Node_ClassDynamicCast
        fun GetDefaultObject(): K2Node_ClassDynamicCast
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_ClassDynamicCast
        fun C(Other: UObject): K2Node_ClassDynamicCast
        fun C(Other: Any): K2Node_ClassDynamicCast
    }
}

external open class K2Node_ClearDelegate : K2Node_BaseMCDelegate {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_ClearDelegate
        fun Find(Outer: UObject, ResourceName: String): K2Node_ClearDelegate
        fun GetDefaultObject(): K2Node_ClearDelegate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_ClearDelegate
        fun C(Other: UObject): K2Node_ClearDelegate
        fun C(Other: Any): K2Node_ClearDelegate
    }
}

external open class K2Node_CommutativeAssociativeBinaryOperator : K2Node_CallFunction {
    constructor()
    constructor(Outer: UObject)
    open var NumAdditionalInputs: Number

    companion object {
        fun Load(ResourceName: String): K2Node_CommutativeAssociativeBinaryOperator
        fun Find(Outer: UObject, ResourceName: String): K2Node_CommutativeAssociativeBinaryOperator
        fun GetDefaultObject(): K2Node_CommutativeAssociativeBinaryOperator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_CommutativeAssociativeBinaryOperator
        fun C(Other: UObject): K2Node_CommutativeAssociativeBinaryOperator
        fun C(Other: Any): K2Node_CommutativeAssociativeBinaryOperator
    }
}

external open class K2Node_ComponentBoundEvent : K2Node_Event {
    constructor()
    constructor(Outer: UObject)
    open var DelegatePropertyName: String
    open var DelegateOwnerClass: UnrealEngineClass
    open var ComponentPropertyName: String
    open var DelegatePropertyDisplayName: String

    companion object {
        fun Load(ResourceName: String): K2Node_ComponentBoundEvent
        fun Find(Outer: UObject, ResourceName: String): K2Node_ComponentBoundEvent
        fun GetDefaultObject(): K2Node_ComponentBoundEvent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_ComponentBoundEvent
        fun C(Other: UObject): K2Node_ComponentBoundEvent
        fun C(Other: Any): K2Node_ComponentBoundEvent
    }
}

external open class K2Node_Tunnel : K2Node_EditablePinBase {
    constructor()
    constructor(Outer: UObject)
    open var OutputSourceNode: K2Node_Tunnel
    open var InputSinkNode: K2Node_Tunnel
    open var bCanHaveInputs: Boolean
    open var bCanHaveOutputs: Boolean
    open var MetaData: KismetUserDeclaredFunctionMetadata

    companion object {
        fun Load(ResourceName: String): K2Node_Tunnel
        fun Find(Outer: UObject, ResourceName: String): K2Node_Tunnel
        fun GetDefaultObject(): K2Node_Tunnel
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_Tunnel
        fun C(Other: UObject): K2Node_Tunnel
        fun C(Other: Any): K2Node_Tunnel
    }
}

external open class K2Node_Composite : K2Node_Tunnel {
    constructor()
    constructor(Outer: UObject)
    open var BoundGraph: EdGraph

    companion object {
        fun Load(ResourceName: String): K2Node_Composite
        fun Find(Outer: UObject, ResourceName: String): K2Node_Composite
        fun GetDefaultObject(): K2Node_Composite
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_Composite
        fun C(Other: UObject): K2Node_Composite
        fun C(Other: Any): K2Node_Composite
    }
}

external open class K2Node_ConvertAsset : K2Node {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_ConvertAsset
        fun Find(Outer: UObject, ResourceName: String): K2Node_ConvertAsset
        fun GetDefaultObject(): K2Node_ConvertAsset
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_ConvertAsset
        fun C(Other: UObject): K2Node_ConvertAsset
        fun C(Other: Any): K2Node_ConvertAsset
    }
}

external open class K2Node_Copy : K2Node {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_Copy
        fun Find(Outer: UObject, ResourceName: String): K2Node_Copy
        fun GetDefaultObject(): K2Node_Copy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_Copy
        fun C(Other: UObject): K2Node_Copy
        fun C(Other: Any): K2Node_Copy
    }
}

external open class K2Node_CreateDelegate : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var SelectedFunctionName: String
    open var SelectedFunctionGuid: Guid

    companion object {
        fun Load(ResourceName: String): K2Node_CreateDelegate
        fun Find(Outer: UObject, ResourceName: String): K2Node_CreateDelegate
        fun GetDefaultObject(): K2Node_CreateDelegate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_CreateDelegate
        fun C(Other: UObject): K2Node_CreateDelegate
        fun C(Other: Any): K2Node_CreateDelegate
    }
}

external open class K2Node_DeadClass : K2Node {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_DeadClass
        fun Find(Outer: UObject, ResourceName: String): K2Node_DeadClass
        fun GetDefaultObject(): K2Node_DeadClass
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_DeadClass
        fun C(Other: UObject): K2Node_DeadClass
        fun C(Other: Any): K2Node_DeadClass
    }
}

external open class K2Node_DelegateSet : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var DelegatePropertyName: String
    open var DelegatePropertyClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): K2Node_DelegateSet
        fun Find(Outer: UObject, ResourceName: String): K2Node_DelegateSet
        fun GetDefaultObject(): K2Node_DelegateSet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_DelegateSet
        fun C(Other: UObject): K2Node_DelegateSet
        fun C(Other: Any): K2Node_DelegateSet
    }
}

external open class K2Node_TemporaryVariable : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var VariableType: EdGraphPinType
    open var bIsPersistent: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_TemporaryVariable
        fun Find(Outer: UObject, ResourceName: String): K2Node_TemporaryVariable
        fun GetDefaultObject(): K2Node_TemporaryVariable
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_TemporaryVariable
        fun C(Other: UObject): K2Node_TemporaryVariable
        fun C(Other: Any): K2Node_TemporaryVariable
    }
}

external open class K2Node_DoOnceMultiInput : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var NumAdditionalInputs: Number
    open var DataNode: K2Node_TemporaryVariable

    companion object {
        fun Load(ResourceName: String): K2Node_DoOnceMultiInput
        fun Find(Outer: UObject, ResourceName: String): K2Node_DoOnceMultiInput
        fun GetDefaultObject(): K2Node_DoOnceMultiInput
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_DoOnceMultiInput
        fun C(Other: UObject): K2Node_DoOnceMultiInput
        fun C(Other: Any): K2Node_DoOnceMultiInput
    }
}

external open class K2Node_EaseFunction : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var EaseFunctionName: String

    companion object {
        fun Load(ResourceName: String): K2Node_EaseFunction
        fun Find(Outer: UObject, ResourceName: String): K2Node_EaseFunction
        fun GetDefaultObject(): K2Node_EaseFunction
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_EaseFunction
        fun C(Other: UObject): K2Node_EaseFunction
        fun C(Other: Any): K2Node_EaseFunction
    }
}

external open class K2Node_EditorPropertyAccessBase : K2Node_CallFunction {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_EditorPropertyAccessBase
        fun Find(Outer: UObject, ResourceName: String): K2Node_EditorPropertyAccessBase
        fun GetDefaultObject(): K2Node_EditorPropertyAccessBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_EditorPropertyAccessBase
        fun C(Other: UObject): K2Node_EditorPropertyAccessBase
        fun C(Other: Any): K2Node_EditorPropertyAccessBase
    }
}

external open class K2Node_GetEditorProperty : K2Node_EditorPropertyAccessBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_GetEditorProperty
        fun Find(Outer: UObject, ResourceName: String): K2Node_GetEditorProperty
        fun GetDefaultObject(): K2Node_GetEditorProperty
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_GetEditorProperty
        fun C(Other: UObject): K2Node_GetEditorProperty
        fun C(Other: Any): K2Node_GetEditorProperty
    }
}

external open class K2Node_SetEditorProperty : K2Node_EditorPropertyAccessBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_SetEditorProperty
        fun Find(Outer: UObject, ResourceName: String): K2Node_SetEditorProperty
        fun GetDefaultObject(): K2Node_SetEditorProperty
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_SetEditorProperty
        fun C(Other: UObject): K2Node_SetEditorProperty
        fun C(Other: Any): K2Node_SetEditorProperty
    }
}

external open class K2Node_EnumEquality : K2Node {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_EnumEquality
        fun Find(Outer: UObject, ResourceName: String): K2Node_EnumEquality
        fun GetDefaultObject(): K2Node_EnumEquality
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_EnumEquality
        fun C(Other: UObject): K2Node_EnumEquality
        fun C(Other: Any): K2Node_EnumEquality
    }
}

external open class K2Node_EnumInequality : K2Node_EnumEquality {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_EnumInequality
        fun Find(Outer: UObject, ResourceName: String): K2Node_EnumInequality
        fun GetDefaultObject(): K2Node_EnumInequality
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_EnumInequality
        fun C(Other: UObject): K2Node_EnumInequality
        fun C(Other: Any): K2Node_EnumInequality
    }
}

external open class K2Node_EnumLiteral : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var Enum: Enum

    companion object {
        fun Load(ResourceName: String): K2Node_EnumLiteral
        fun Find(Outer: UObject, ResourceName: String): K2Node_EnumLiteral
        fun GetDefaultObject(): K2Node_EnumLiteral
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_EnumLiteral
        fun C(Other: UObject): K2Node_EnumLiteral
        fun C(Other: Any): K2Node_EnumLiteral
    }
}

external open class K2Node_EventNodeInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_EventNodeInterface
        fun Find(Outer: UObject, ResourceName: String): K2Node_EventNodeInterface
        fun GetDefaultObject(): K2Node_EventNodeInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_EventNodeInterface
        fun C(Other: UObject): K2Node_EventNodeInterface
        fun C(Other: Any): K2Node_EventNodeInterface
    }
}

external open class K2Node_ExecutionSequence : K2Node {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_ExecutionSequence
        fun Find(Outer: UObject, ResourceName: String): K2Node_ExecutionSequence
        fun GetDefaultObject(): K2Node_ExecutionSequence
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_ExecutionSequence
        fun C(Other: UObject): K2Node_ExecutionSequence
        fun C(Other: Any): K2Node_ExecutionSequence
    }
}

external open class K2Node_ExternalGraphInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_ExternalGraphInterface
        fun Find(Outer: UObject, ResourceName: String): K2Node_ExternalGraphInterface
        fun GetDefaultObject(): K2Node_ExternalGraphInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_ExternalGraphInterface
        fun C(Other: UObject): K2Node_ExternalGraphInterface
        fun C(Other: Any): K2Node_ExternalGraphInterface
    }
}

external open class K2Node_ForEachElementInEnum : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var Enum: Enum

    companion object {
        fun Load(ResourceName: String): K2Node_ForEachElementInEnum
        fun Find(Outer: UObject, ResourceName: String): K2Node_ForEachElementInEnum
        fun GetDefaultObject(): K2Node_ForEachElementInEnum
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_ForEachElementInEnum
        fun C(Other: UObject): K2Node_ForEachElementInEnum
        fun C(Other: Any): K2Node_ForEachElementInEnum
    }
}

external open class K2Node_FormatText : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var PinNames: Array<String>

    companion object {
        fun Load(ResourceName: String): K2Node_FormatText
        fun Find(Outer: UObject, ResourceName: String): K2Node_FormatText
        fun GetDefaultObject(): K2Node_FormatText
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_FormatText
        fun C(Other: UObject): K2Node_FormatText
        fun C(Other: Any): K2Node_FormatText
    }
}

external open class K2Node_FunctionTerminator : K2Node_EditablePinBase {
    constructor()
    constructor(Outer: UObject)
    open var FunctionReference: MemberReference
    open var SignatureClass: UnrealEngineClass
    open var SignatureName: String

    companion object {
        fun Load(ResourceName: String): K2Node_FunctionTerminator
        fun Find(Outer: UObject, ResourceName: String): K2Node_FunctionTerminator
        fun GetDefaultObject(): K2Node_FunctionTerminator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_FunctionTerminator
        fun C(Other: UObject): K2Node_FunctionTerminator
        fun C(Other: Any): K2Node_FunctionTerminator
    }
}

external open class K2Node_FunctionEntry : K2Node_FunctionTerminator {
    constructor()
    constructor(Outer: UObject)
    open var CustomGeneratedFunctionName: String
    open var MetaData: KismetUserDeclaredFunctionMetadata
    open var LocalVariables: Array<BPVariableDescription>
    open var bEnforceConstCorrectness: Boolean
    open var ExtraFlags: Number

    companion object {
        fun Load(ResourceName: String): K2Node_FunctionEntry
        fun Find(Outer: UObject, ResourceName: String): K2Node_FunctionEntry
        fun GetDefaultObject(): K2Node_FunctionEntry
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_FunctionEntry
        fun C(Other: UObject): K2Node_FunctionEntry
        fun C(Other: Any): K2Node_FunctionEntry
    }
}

external open class K2Node_FunctionResult : K2Node_FunctionTerminator {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_FunctionResult
        fun Find(Outer: UObject, ResourceName: String): K2Node_FunctionResult
        fun GetDefaultObject(): K2Node_FunctionResult
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_FunctionResult
        fun C(Other: UObject): K2Node_FunctionResult
        fun C(Other: Any): K2Node_FunctionResult
    }
}

external open class K2Node_GenericCreateObject : K2Node_ConstructObjectFromClass {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_GenericCreateObject
        fun Find(Outer: UObject, ResourceName: String): K2Node_GenericCreateObject
        fun GetDefaultObject(): K2Node_GenericCreateObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_GenericCreateObject
        fun C(Other: UObject): K2Node_GenericCreateObject
        fun C(Other: Any): K2Node_GenericCreateObject
    }
}

external open class K2Node_GetArrayItem : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var bReturnByRefDesired: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_GetArrayItem
        fun Find(Outer: UObject, ResourceName: String): K2Node_GetArrayItem
        fun GetDefaultObject(): K2Node_GetArrayItem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_GetArrayItem
        fun C(Other: UObject): K2Node_GetArrayItem
        fun C(Other: Any): K2Node_GetArrayItem
    }
}

external open class K2Node_GetClassDefaults : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var BlueprintSubscribedTo: Blueprint
    open var ShowPinForProperties: Array<OptionalPinFromProperty>
    open var bExcludeObjectContainers: Boolean
    open var bExcludeObjectArrays: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_GetClassDefaults
        fun Find(Outer: UObject, ResourceName: String): K2Node_GetClassDefaults
        fun GetDefaultObject(): K2Node_GetClassDefaults
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_GetClassDefaults
        fun C(Other: UObject): K2Node_GetClassDefaults
        fun C(Other: Any): K2Node_GetClassDefaults
    }
}

external open class K2Node_GetDataTableRow : K2Node {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_GetDataTableRow
        fun Find(Outer: UObject, ResourceName: String): K2Node_GetDataTableRow
        fun GetDefaultObject(): K2Node_GetDataTableRow
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_GetDataTableRow
        fun C(Other: UObject): K2Node_GetDataTableRow
        fun C(Other: Any): K2Node_GetDataTableRow
    }
}

external open class K2Node_GetEnumeratorName : K2Node {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_GetEnumeratorName
        fun Find(Outer: UObject, ResourceName: String): K2Node_GetEnumeratorName
        fun GetDefaultObject(): K2Node_GetEnumeratorName
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_GetEnumeratorName
        fun C(Other: UObject): K2Node_GetEnumeratorName
        fun C(Other: Any): K2Node_GetEnumeratorName
    }
}

external open class K2Node_GetEnumeratorNameAsString : K2Node_GetEnumeratorName {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_GetEnumeratorNameAsString
        fun Find(Outer: UObject, ResourceName: String): K2Node_GetEnumeratorNameAsString
        fun GetDefaultObject(): K2Node_GetEnumeratorNameAsString
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_GetEnumeratorNameAsString
        fun C(Other: UObject): K2Node_GetEnumeratorNameAsString
        fun C(Other: Any): K2Node_GetEnumeratorNameAsString
    }
}

external open class K2Node_GetInputAxisKeyValue : K2Node_CallFunction {
    constructor()
    constructor(Outer: UObject)
    open var InputAxisKey: Key
    open var bConsumeInput: Boolean
    open var bExecuteWhenPaused: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_GetInputAxisKeyValue
        fun Find(Outer: UObject, ResourceName: String): K2Node_GetInputAxisKeyValue
        fun GetDefaultObject(): K2Node_GetInputAxisKeyValue
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_GetInputAxisKeyValue
        fun C(Other: UObject): K2Node_GetInputAxisKeyValue
        fun C(Other: Any): K2Node_GetInputAxisKeyValue
    }
}

external open class K2Node_GetInputAxisValue : K2Node_CallFunction {
    constructor()
    constructor(Outer: UObject)
    open var InputAxisName: String
    open var bConsumeInput: Boolean
    open var bExecuteWhenPaused: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_GetInputAxisValue
        fun Find(Outer: UObject, ResourceName: String): K2Node_GetInputAxisValue
        fun GetDefaultObject(): K2Node_GetInputAxisValue
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_GetInputAxisValue
        fun C(Other: UObject): K2Node_GetInputAxisValue
        fun C(Other: Any): K2Node_GetInputAxisValue
    }
}

external open class K2Node_GetInputVectorAxisValue : K2Node_GetInputAxisKeyValue {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_GetInputVectorAxisValue
        fun Find(Outer: UObject, ResourceName: String): K2Node_GetInputVectorAxisValue
        fun GetDefaultObject(): K2Node_GetInputVectorAxisValue
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_GetInputVectorAxisValue
        fun C(Other: UObject): K2Node_GetInputVectorAxisValue
        fun C(Other: Any): K2Node_GetInputVectorAxisValue
    }
}

external open class K2Node_GetNumEnumEntries : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var Enum: Enum

    companion object {
        fun Load(ResourceName: String): K2Node_GetNumEnumEntries
        fun Find(Outer: UObject, ResourceName: String): K2Node_GetNumEnumEntries
        fun GetDefaultObject(): K2Node_GetNumEnumEntries
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_GetNumEnumEntries
        fun C(Other: UObject): K2Node_GetNumEnumEntries
        fun C(Other: Any): K2Node_GetNumEnumEntries
    }
}

external open class K2Node_GetSubsystem : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var CustomClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): K2Node_GetSubsystem
        fun Find(Outer: UObject, ResourceName: String): K2Node_GetSubsystem
        fun GetDefaultObject(): K2Node_GetSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_GetSubsystem
        fun C(Other: UObject): K2Node_GetSubsystem
        fun C(Other: Any): K2Node_GetSubsystem
    }
}

external open class K2Node_GetSubsystemFromPC : K2Node_GetSubsystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_GetSubsystemFromPC
        fun Find(Outer: UObject, ResourceName: String): K2Node_GetSubsystemFromPC
        fun GetDefaultObject(): K2Node_GetSubsystemFromPC
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_GetSubsystemFromPC
        fun C(Other: UObject): K2Node_GetSubsystemFromPC
        fun C(Other: Any): K2Node_GetSubsystemFromPC
    }
}

external open class K2Node_GetEngineSubsystem : K2Node_GetSubsystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_GetEngineSubsystem
        fun Find(Outer: UObject, ResourceName: String): K2Node_GetEngineSubsystem
        fun GetDefaultObject(): K2Node_GetEngineSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_GetEngineSubsystem
        fun C(Other: UObject): K2Node_GetEngineSubsystem
        fun C(Other: Any): K2Node_GetEngineSubsystem
    }
}

external open class K2Node_GetEditorSubsystem : K2Node_GetSubsystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_GetEditorSubsystem
        fun Find(Outer: UObject, ResourceName: String): K2Node_GetEditorSubsystem
        fun GetDefaultObject(): K2Node_GetEditorSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_GetEditorSubsystem
        fun C(Other: UObject): K2Node_GetEditorSubsystem
        fun C(Other: Any): K2Node_GetEditorSubsystem
    }
}

external open class K2Node_IfThenElse : K2Node {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_IfThenElse
        fun Find(Outer: UObject, ResourceName: String): K2Node_IfThenElse
        fun GetDefaultObject(): K2Node_IfThenElse
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_IfThenElse
        fun C(Other: UObject): K2Node_IfThenElse
        fun C(Other: Any): K2Node_IfThenElse
    }
}

external open class K2Node_InputAction : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var InputActionName: String
    open var bConsumeInput: Boolean
    open var bExecuteWhenPaused: Boolean
    open var bOverrideParentBinding: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_InputAction
        fun Find(Outer: UObject, ResourceName: String): K2Node_InputAction
        fun GetDefaultObject(): K2Node_InputAction
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_InputAction
        fun C(Other: UObject): K2Node_InputAction
        fun C(Other: Any): K2Node_InputAction
    }
}

external open class K2Node_InputActionEvent : K2Node_Event {
    constructor()
    constructor(Outer: UObject)
    open var InputActionName: String
    open var InputKeyEvent: String /* "IE_Pressed" | "IE_Released" | "IE_Repeat" | "IE_DoubleClick" | "IE_Axis" | "IE_MAX" */
    open var bConsumeInput: Boolean
    open var bExecuteWhenPaused: Boolean
    open var bOverrideParentBinding: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_InputActionEvent
        fun Find(Outer: UObject, ResourceName: String): K2Node_InputActionEvent
        fun GetDefaultObject(): K2Node_InputActionEvent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_InputActionEvent
        fun C(Other: UObject): K2Node_InputActionEvent
        fun C(Other: Any): K2Node_InputActionEvent
    }
}

external open class K2Node_InputAxisEvent : K2Node_Event {
    constructor()
    constructor(Outer: UObject)
    open var InputAxisName: String
    open var bConsumeInput: Boolean
    open var bExecuteWhenPaused: Boolean
    open var bOverrideParentBinding: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_InputAxisEvent
        fun Find(Outer: UObject, ResourceName: String): K2Node_InputAxisEvent
        fun GetDefaultObject(): K2Node_InputAxisEvent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_InputAxisEvent
        fun C(Other: UObject): K2Node_InputAxisEvent
        fun C(Other: Any): K2Node_InputAxisEvent
    }
}

external open class K2Node_InputAxisKeyEvent : K2Node_Event {
    constructor()
    constructor(Outer: UObject)
    open var AxisKey: Key
    open var bConsumeInput: Boolean
    open var bExecuteWhenPaused: Boolean
    open var bOverrideParentBinding: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_InputAxisKeyEvent
        fun Find(Outer: UObject, ResourceName: String): K2Node_InputAxisKeyEvent
        fun GetDefaultObject(): K2Node_InputAxisKeyEvent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_InputAxisKeyEvent
        fun C(Other: UObject): K2Node_InputAxisKeyEvent
        fun C(Other: Any): K2Node_InputAxisKeyEvent
    }
}

external open class K2Node_InputKey : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var InputKey: Key
    open var bConsumeInput: Boolean
    open var bExecuteWhenPaused: Boolean
    open var bOverrideParentBinding: Boolean
    open var bControl: Boolean
    open var bAlt: Boolean
    open var bShift: Boolean
    open var bCommand: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_InputKey
        fun Find(Outer: UObject, ResourceName: String): K2Node_InputKey
        fun GetDefaultObject(): K2Node_InputKey
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_InputKey
        fun C(Other: UObject): K2Node_InputKey
        fun C(Other: Any): K2Node_InputKey
    }
}

external open class K2Node_InputKeyEvent : K2Node_Event {
    constructor()
    constructor(Outer: UObject)
    open var InputChord: InputChord
    open var InputKeyEvent: String /* "IE_Pressed" | "IE_Released" | "IE_Repeat" | "IE_DoubleClick" | "IE_Axis" | "IE_MAX" */
    open var bConsumeInput: Boolean
    open var bExecuteWhenPaused: Boolean
    open var bOverrideParentBinding: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_InputKeyEvent
        fun Find(Outer: UObject, ResourceName: String): K2Node_InputKeyEvent
        fun GetDefaultObject(): K2Node_InputKeyEvent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_InputKeyEvent
        fun C(Other: UObject): K2Node_InputKeyEvent
        fun C(Other: Any): K2Node_InputKeyEvent
    }
}

external open class K2Node_InputTouch : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var bConsumeInput: Boolean
    open var bExecuteWhenPaused: Boolean
    open var bOverrideParentBinding: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_InputTouch
        fun Find(Outer: UObject, ResourceName: String): K2Node_InputTouch
        fun GetDefaultObject(): K2Node_InputTouch
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_InputTouch
        fun C(Other: UObject): K2Node_InputTouch
        fun C(Other: Any): K2Node_InputTouch
    }
}

external open class K2Node_InputTouchEvent : K2Node_Event {
    constructor()
    constructor(Outer: UObject)
    open var InputKeyEvent: String /* "IE_Pressed" | "IE_Released" | "IE_Repeat" | "IE_DoubleClick" | "IE_Axis" | "IE_MAX" */
    open var bConsumeInput: Boolean
    open var bExecuteWhenPaused: Boolean
    open var bOverrideParentBinding: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_InputTouchEvent
        fun Find(Outer: UObject, ResourceName: String): K2Node_InputTouchEvent
        fun GetDefaultObject(): K2Node_InputTouchEvent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_InputTouchEvent
        fun C(Other: UObject): K2Node_InputTouchEvent
        fun C(Other: Any): K2Node_InputTouchEvent
    }
}

external open class K2Node_InputVectorAxisEvent : K2Node_InputAxisKeyEvent {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_InputVectorAxisEvent
        fun Find(Outer: UObject, ResourceName: String): K2Node_InputVectorAxisEvent
        fun GetDefaultObject(): K2Node_InputVectorAxisEvent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_InputVectorAxisEvent
        fun C(Other: UObject): K2Node_InputVectorAxisEvent
        fun C(Other: Any): K2Node_InputVectorAxisEvent
    }
}

external open class K2Node_Knot : K2Node {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_Knot
        fun Find(Outer: UObject, ResourceName: String): K2Node_Knot
        fun GetDefaultObject(): K2Node_Knot
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_Knot
        fun C(Other: UObject): K2Node_Knot
        fun C(Other: Any): K2Node_Knot
    }
}

external open class K2Node_Literal : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var ObjectRef: UObject

    companion object {
        fun Load(ResourceName: String): K2Node_Literal
        fun Find(Outer: UObject, ResourceName: String): K2Node_Literal
        fun GetDefaultObject(): K2Node_Literal
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_Literal
        fun C(Other: UObject): K2Node_Literal
        fun C(Other: Any): K2Node_Literal
    }
}

external open class K2Node_LoadAsset : K2Node {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_LoadAsset
        fun Find(Outer: UObject, ResourceName: String): K2Node_LoadAsset
        fun GetDefaultObject(): K2Node_LoadAsset
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_LoadAsset
        fun C(Other: UObject): K2Node_LoadAsset
        fun C(Other: Any): K2Node_LoadAsset
    }
}

external open class K2Node_LoadAssetClass : K2Node_LoadAsset {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_LoadAssetClass
        fun Find(Outer: UObject, ResourceName: String): K2Node_LoadAssetClass
        fun GetDefaultObject(): K2Node_LoadAssetClass
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_LoadAssetClass
        fun C(Other: UObject): K2Node_LoadAssetClass
        fun C(Other: Any): K2Node_LoadAssetClass
    }
}

external open class K2Node_LocalVariable : K2Node_TemporaryVariable {
    constructor()
    constructor(Outer: UObject)
    open var CustomVariableName: String
    open var VariableTooltip: String

    companion object {
        fun Load(ResourceName: String): K2Node_LocalVariable
        fun Find(Outer: UObject, ResourceName: String): K2Node_LocalVariable
        fun GetDefaultObject(): K2Node_LocalVariable
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_LocalVariable
        fun C(Other: UObject): K2Node_LocalVariable
        fun C(Other: Any): K2Node_LocalVariable
    }
}

external open class GraphReference {
    open var MacroGraph: EdGraph
    open var GraphBlueprint: Blueprint
    open var GraphGuid: Guid
    open fun clone(): GraphReference

    companion object {
        fun C(Other: UObject): GraphReference
        fun C(Other: Any): GraphReference
    }
}

external open class K2Node_MacroInstance : K2Node_Tunnel {
    constructor()
    constructor(Outer: UObject)
    open var MacroGraph: EdGraph
    open var MacroGraphReference: GraphReference
    open var ResolvedWildcardType: EdGraphPinType

    companion object {
        fun Load(ResourceName: String): K2Node_MacroInstance
        fun Find(Outer: UObject, ResourceName: String): K2Node_MacroInstance
        fun GetDefaultObject(): K2Node_MacroInstance
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_MacroInstance
        fun C(Other: UObject): K2Node_MacroInstance
        fun C(Other: Any): K2Node_MacroInstance
    }
}

external open class K2Node_MakeContainer : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var NumInputs: Number

    companion object {
        fun Load(ResourceName: String): K2Node_MakeContainer
        fun Find(Outer: UObject, ResourceName: String): K2Node_MakeContainer
        fun GetDefaultObject(): K2Node_MakeContainer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_MakeContainer
        fun C(Other: UObject): K2Node_MakeContainer
        fun C(Other: Any): K2Node_MakeContainer
    }
}

external open class K2Node_MakeArray : K2Node_MakeContainer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_MakeArray
        fun Find(Outer: UObject, ResourceName: String): K2Node_MakeArray
        fun GetDefaultObject(): K2Node_MakeArray
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_MakeArray
        fun C(Other: UObject): K2Node_MakeArray
        fun C(Other: Any): K2Node_MakeArray
    }
}

external open class K2Node_MakeMap : K2Node_MakeContainer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_MakeMap
        fun Find(Outer: UObject, ResourceName: String): K2Node_MakeMap
        fun GetDefaultObject(): K2Node_MakeMap
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_MakeMap
        fun C(Other: UObject): K2Node_MakeMap
        fun C(Other: Any): K2Node_MakeMap
    }
}

external open class K2Node_MakeSet : K2Node_MakeContainer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_MakeSet
        fun Find(Outer: UObject, ResourceName: String): K2Node_MakeSet
        fun GetDefaultObject(): K2Node_MakeSet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_MakeSet
        fun C(Other: UObject): K2Node_MakeSet
        fun C(Other: Any): K2Node_MakeSet
    }
}

external open class K2Node_StructMemberSet : K2Node_StructOperation {
    constructor()
    constructor(Outer: UObject)
    open var ShowPinForProperties: Array<OptionalPinFromProperty>

    companion object {
        fun Load(ResourceName: String): K2Node_StructMemberSet
        fun Find(Outer: UObject, ResourceName: String): K2Node_StructMemberSet
        fun GetDefaultObject(): K2Node_StructMemberSet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_StructMemberSet
        fun C(Other: UObject): K2Node_StructMemberSet
        fun C(Other: Any): K2Node_StructMemberSet
    }
}

external open class K2Node_MakeStruct : K2Node_StructMemberSet {
    constructor()
    constructor(Outer: UObject)
    open var bMadeAfterOverridePinRemoval: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_MakeStruct
        fun Find(Outer: UObject, ResourceName: String): K2Node_MakeStruct
        fun GetDefaultObject(): K2Node_MakeStruct
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_MakeStruct
        fun C(Other: UObject): K2Node_MakeStruct
        fun C(Other: Any): K2Node_MakeStruct
    }
}

external open class K2Node_MakeVariable : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var VariableType: BPVariableDescription

    companion object {
        fun Load(ResourceName: String): K2Node_MakeVariable
        fun Find(Outer: UObject, ResourceName: String): K2Node_MakeVariable
        fun GetDefaultObject(): K2Node_MakeVariable
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_MakeVariable
        fun C(Other: UObject): K2Node_MakeVariable
        fun C(Other: Any): K2Node_MakeVariable
    }
}

external open class K2Node_MathExpression : K2Node_Composite {
    constructor()
    constructor(Outer: UObject)
    open var Expression: String
    open var bMadeAfterRotChange: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_MathExpression
        fun Find(Outer: UObject, ResourceName: String): K2Node_MathExpression
        fun GetDefaultObject(): K2Node_MathExpression
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_MathExpression
        fun C(Other: UObject): K2Node_MathExpression
        fun C(Other: Any): K2Node_MathExpression
    }
}

external open class InterpFilter : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Caption: String

    companion object {
        fun Load(ResourceName: String): InterpFilter
        fun Find(Outer: UObject, ResourceName: String): InterpFilter
        fun GetDefaultObject(): InterpFilter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpFilter
        fun C(Other: UObject): InterpFilter
        fun C(Other: Any): InterpFilter
    }
}

external open class InterpGroupDirector : InterpGroup {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InterpGroupDirector
        fun Find(Outer: UObject, ResourceName: String): InterpGroupDirector
        fun GetDefaultObject(): InterpGroupDirector
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpGroupDirector
        fun C(Other: UObject): InterpGroupDirector
        fun C(Other: Any): InterpGroupDirector
    }
}

external open class InterpData : UObject {
    constructor()
    constructor(Outer: UObject)
    open var InterpLength: Number
    open var PathBuildTime: Number
    open var InterpGroups: Array<InterpGroup>
    open var CurveEdSetup: InterpCurveEdSetup
    open var InterpFilters: Array<InterpFilter>
    open var SelectedFilter: InterpFilter
    open var DefaultFilters: Array<InterpFilter>
    open var EdSectionStart: Number
    open var EdSectionEnd: Number
    open var bShouldBakeAndPrune: Boolean
    open var CachedDirectorGroup: InterpGroupDirector
    open var AllEventNames: Array<String>

    companion object {
        fun Load(ResourceName: String): InterpData
        fun Find(Outer: UObject, ResourceName: String): InterpData
        fun GetDefaultObject(): InterpData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpData
        fun C(Other: UObject): InterpData
        fun C(Other: Any): InterpData
    }
}

external open class InterpGroupActorInfo {
    open var ObjectName: String
    open var Actors: Array<Actor>
    open fun clone(): InterpGroupActorInfo

    companion object {
        fun C(Other: UObject): InterpGroupActorInfo
        fun C(Other: Any): InterpGroupActorInfo
    }
}

external open class CameraCutInfo {
    open var Location: Vector
    open var Timestamp: Number
    open fun clone(): CameraCutInfo

    companion object {
        fun C(Other: UObject): CameraCutInfo
        fun C(Other: Any): CameraCutInfo
    }
}

external open class MatineeActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var MatineeData: InterpData
    open var MatineeControllerName: String
    open var PlayRate: Number
    open var bPlayOnLevelLoad: Boolean
    open var bForceStartPos: Boolean
    open var ForceStartPosition: Number
    open var bLooping: Boolean
    open var bRewindOnPlay: Boolean
    open var bNoResetOnRewind: Boolean
    open var bRewindIfAlreadyPlaying: Boolean
    open var bDisableRadioFilter: Boolean
    open var bClientSideOnly: Boolean
    open var bSkipUpdateIfNotVisible: Boolean
    open var bIsSkippable: Boolean
    open var PreferredSplitScreenNum: Number
    open var bDisableMovementInput: Boolean
    open var bDisableLookAtInput: Boolean
    open var bHidePlayer: Boolean
    open var bHideHud: Boolean
    open var GroupActorInfos: Array<InterpGroupActorInfo>
    open var bShouldShowGore: Boolean
    open var GroupInst: Array<InterpGroupInst>
    open var CameraCuts: Array<CameraCutInfo>
    open var SpriteComponent: BillboardComponent
    open var bIsBeingEdited: Boolean
    open var bIsScrubbing: Boolean
    open var bIsPlaying: Boolean
    open var bReversePlayback: Boolean
    open var bPaused: Boolean
    open var bPendingStop: Boolean
    open var InterpPosition: Number
    open var ReplicationForceIsPlaying: Number
    open var OnPlay: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnStop: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnPause: UnrealEngineMulticastDelegate<() -> Unit>
    open fun Stop()
    open fun SetPosition(NewPosition: Number, bJump: Boolean)
    open fun SetLoopingState(bNewLooping: Boolean)
    open fun Reverse()
    open fun Play()
    open fun Pause()
    open fun EnableGroupByName(GroupName: String, bEnable: Boolean)
    open fun ChangePlaybackDirection()

    companion object {
        fun GetDefaultObject(): MatineeActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MatineeActor
        fun C(Other: UObject): MatineeActor
        fun C(Other: Any): MatineeActor
    }
}

external open class K2Node_MatineeController : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var MatineeActor: MatineeActor

    companion object {
        fun Load(ResourceName: String): K2Node_MatineeController
        fun Find(Outer: UObject, ResourceName: String): K2Node_MatineeController
        fun GetDefaultObject(): K2Node_MatineeController
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_MatineeController
        fun C(Other: UObject): K2Node_MatineeController
        fun C(Other: Any): K2Node_MatineeController
    }
}

external open class K2Node_Message : K2Node_CallFunction {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_Message
        fun Find(Outer: UObject, ResourceName: String): K2Node_Message
        fun GetDefaultObject(): K2Node_Message
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_Message
        fun C(Other: UObject): K2Node_Message
        fun C(Other: Any): K2Node_Message
    }
}

external open class K2Node_MultiGate : K2Node_ExecutionSequence {
    constructor()
    constructor(Outer: UObject)
    open var DataNode: K2Node_TemporaryVariable

    companion object {
        fun Load(ResourceName: String): K2Node_MultiGate
        fun Find(Outer: UObject, ResourceName: String): K2Node_MultiGate
        fun GetDefaultObject(): K2Node_MultiGate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_MultiGate
        fun C(Other: UObject): K2Node_MultiGate
        fun C(Other: Any): K2Node_MultiGate
    }
}

external open class K2Node_PromotableOperator : K2Node_CallFunction {
    constructor()
    constructor(Outer: UObject)
    open var NumAdditionalInputs: Number

    companion object {
        fun Load(ResourceName: String): K2Node_PromotableOperator
        fun Find(Outer: UObject, ResourceName: String): K2Node_PromotableOperator
        fun GetDefaultObject(): K2Node_PromotableOperator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_PromotableOperator
        fun C(Other: UObject): K2Node_PromotableOperator
        fun C(Other: Any): K2Node_PromotableOperator
    }
}

external open class K2Node_PureAssignmentStatement : K2Node {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_PureAssignmentStatement
        fun Find(Outer: UObject, ResourceName: String): K2Node_PureAssignmentStatement
        fun GetDefaultObject(): K2Node_PureAssignmentStatement
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_PureAssignmentStatement
        fun C(Other: UObject): K2Node_PureAssignmentStatement
        fun C(Other: Any): K2Node_PureAssignmentStatement
    }
}

external open class K2Node_RemoveDelegate : K2Node_BaseMCDelegate {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_RemoveDelegate
        fun Find(Outer: UObject, ResourceName: String): K2Node_RemoveDelegate
        fun GetDefaultObject(): K2Node_RemoveDelegate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_RemoveDelegate
        fun C(Other: UObject): K2Node_RemoveDelegate
        fun C(Other: Any): K2Node_RemoveDelegate
    }
}

external open class K2Node_Select : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var NumOptionPins: Number
    open var IndexPinType: EdGraphPinType
    open var Enum: Enum
    open var EnumEntries: Array<String>
    open var EnumEntryFriendlyNames: Array<String>
    open var bReconstructNode: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_Select
        fun Find(Outer: UObject, ResourceName: String): K2Node_Select
        fun GetDefaultObject(): K2Node_Select
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_Select
        fun C(Other: UObject): K2Node_Select
        fun C(Other: Any): K2Node_Select
    }
}

external open class K2Node_Self : K2Node {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_Self
        fun Find(Outer: UObject, ResourceName: String): K2Node_Self
        fun GetDefaultObject(): K2Node_Self
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_Self
        fun C(Other: UObject): K2Node_Self
        fun C(Other: Any): K2Node_Self
    }
}

external open class K2Node_SetFieldsInStruct : K2Node_MakeStruct {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_SetFieldsInStruct
        fun Find(Outer: UObject, ResourceName: String): K2Node_SetFieldsInStruct
        fun GetDefaultObject(): K2Node_SetFieldsInStruct
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_SetFieldsInStruct
        fun C(Other: UObject): K2Node_SetFieldsInStruct
        fun C(Other: Any): K2Node_SetFieldsInStruct
    }
}

external open class K2Node_SetVariableOnPersistentFrame : K2Node {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_SetVariableOnPersistentFrame
        fun Find(Outer: UObject, ResourceName: String): K2Node_SetVariableOnPersistentFrame
        fun GetDefaultObject(): K2Node_SetVariableOnPersistentFrame
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_SetVariableOnPersistentFrame
        fun C(Other: UObject): K2Node_SetVariableOnPersistentFrame
        fun C(Other: Any): K2Node_SetVariableOnPersistentFrame
    }
}

external open class K2Node_SpawnActor : K2Node {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_SpawnActor
        fun Find(Outer: UObject, ResourceName: String): K2Node_SpawnActor
        fun GetDefaultObject(): K2Node_SpawnActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_SpawnActor
        fun C(Other: UObject): K2Node_SpawnActor
        fun C(Other: Any): K2Node_SpawnActor
    }
}

external open class K2Node_SpawnActorFromClass : K2Node_ConstructObjectFromClass {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_SpawnActorFromClass
        fun Find(Outer: UObject, ResourceName: String): K2Node_SpawnActorFromClass
        fun GetDefaultObject(): K2Node_SpawnActorFromClass
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_SpawnActorFromClass
        fun C(Other: UObject): K2Node_SpawnActorFromClass
        fun C(Other: Any): K2Node_SpawnActorFromClass
    }
}

external open class K2Node_Switch : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var bHasDefaultPin: Boolean
    open var FunctionName: String
    open var FunctionClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): K2Node_Switch
        fun Find(Outer: UObject, ResourceName: String): K2Node_Switch
        fun GetDefaultObject(): K2Node_Switch
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_Switch
        fun C(Other: UObject): K2Node_Switch
        fun C(Other: Any): K2Node_Switch
    }
}

external open class K2Node_SwitchEnum : K2Node_Switch {
    constructor()
    constructor(Outer: UObject)
    open var Enum: Enum
    open var EnumEntries: Array<String>
    open var EnumFriendlyNames: Array<String>

    companion object {
        fun Load(ResourceName: String): K2Node_SwitchEnum
        fun Find(Outer: UObject, ResourceName: String): K2Node_SwitchEnum
        fun GetDefaultObject(): K2Node_SwitchEnum
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_SwitchEnum
        fun C(Other: UObject): K2Node_SwitchEnum
        fun C(Other: Any): K2Node_SwitchEnum
    }
}

external open class K2Node_SwitchInteger : K2Node_Switch {
    constructor()
    constructor(Outer: UObject)
    open var StartIndex: Number

    companion object {
        fun Load(ResourceName: String): K2Node_SwitchInteger
        fun Find(Outer: UObject, ResourceName: String): K2Node_SwitchInteger
        fun GetDefaultObject(): K2Node_SwitchInteger
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_SwitchInteger
        fun C(Other: UObject): K2Node_SwitchInteger
        fun C(Other: Any): K2Node_SwitchInteger
    }
}

external open class K2Node_SwitchName : K2Node_Switch {
    constructor()
    constructor(Outer: UObject)
    open var PinNames: Array<String>

    companion object {
        fun Load(ResourceName: String): K2Node_SwitchName
        fun Find(Outer: UObject, ResourceName: String): K2Node_SwitchName
        fun GetDefaultObject(): K2Node_SwitchName
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_SwitchName
        fun C(Other: UObject): K2Node_SwitchName
        fun C(Other: Any): K2Node_SwitchName
    }
}

external open class K2Node_SwitchString : K2Node_Switch {
    constructor()
    constructor(Outer: UObject)
    open var PinNames: Array<String>
    open var bIsCaseSensitive: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_SwitchString
        fun Find(Outer: UObject, ResourceName: String): K2Node_SwitchString
        fun GetDefaultObject(): K2Node_SwitchString
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_SwitchString
        fun C(Other: UObject): K2Node_SwitchString
        fun C(Other: Any): K2Node_SwitchString
    }
}

external open class K2Node_Timeline : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var TimelineName: String
    open var bAutoPlay: Boolean
    open var TimelineGuid: Guid
    open var bLoop: Boolean
    open var bReplicated: Boolean
    open var bIgnoreTimeDilation: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_Timeline
        fun Find(Outer: UObject, ResourceName: String): K2Node_Timeline
        fun GetDefaultObject(): K2Node_Timeline
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_Timeline
        fun C(Other: UObject): K2Node_Timeline
        fun C(Other: Any): K2Node_Timeline
    }
}

external object ETunnelBoundaryType {
    var Unknown: String /* "Unknown" */
    var EntrySite: String /* "EntrySite" */
    var InputSite: String /* "InputSite" */
    var OutputSite: String /* "OutputSite" */
    var ETunnelBoundaryType_MAX: String /* "ETunnelBoundaryType_MAX" */
}

external open class K2Node_TunnelBoundary : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var BaseName: String
    open var TunnelBoundaryType: String /* "Unknown" | "EntrySite" | "InputSite" | "OutputSite" | "ETunnelBoundaryType_MAX" */

    companion object {
        fun Load(ResourceName: String): K2Node_TunnelBoundary
        fun Find(Outer: UObject, ResourceName: String): K2Node_TunnelBoundary
        fun GetDefaultObject(): K2Node_TunnelBoundary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_TunnelBoundary
        fun C(Other: UObject): K2Node_TunnelBoundary
        fun C(Other: Any): K2Node_TunnelBoundary
    }
}

external open class K2Node_VariableGet : K2Node_Variable {
    constructor()
    constructor(Outer: UObject)
    open var bIsPureGet: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_VariableGet
        fun Find(Outer: UObject, ResourceName: String): K2Node_VariableGet
        fun GetDefaultObject(): K2Node_VariableGet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_VariableGet
        fun C(Other: UObject): K2Node_VariableGet
        fun C(Other: Any): K2Node_VariableGet
    }
}

external open class K2Node_VariableSet : K2Node_Variable {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_VariableSet
        fun Find(Outer: UObject, ResourceName: String): K2Node_VariableSet
        fun GetDefaultObject(): K2Node_VariableSet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_VariableSet
        fun C(Other: UObject): K2Node_VariableSet
        fun C(Other: Any): K2Node_VariableSet
    }
}

external open class K2Node_VariableSetRef : K2Node {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_VariableSetRef
        fun Find(Outer: UObject, ResourceName: String): K2Node_VariableSetRef
        fun GetDefaultObject(): K2Node_VariableSetRef
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_VariableSetRef
        fun C(Other: UObject): K2Node_VariableSetRef
        fun C(Other: Any): K2Node_VariableSetRef
    }
}

external open class NodeDependingOnEnumInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NodeDependingOnEnumInterface
        fun Find(Outer: UObject, ResourceName: String): NodeDependingOnEnumInterface
        fun GetDefaultObject(): NodeDependingOnEnumInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NodeDependingOnEnumInterface
        fun C(Other: UObject): NodeDependingOnEnumInterface
        fun C(Other: Any): NodeDependingOnEnumInterface
    }
}

external open class PinTypeSelectorFilter : UObject {
    constructor()
    constructor(Outer: UObject)
    open var FilterClass: Class

    companion object {
        fun Load(ResourceName: String): PinTypeSelectorFilter
        fun Find(Outer: UObject, ResourceName: String): PinTypeSelectorFilter
        fun GetDefaultObject(): PinTypeSelectorFilter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PinTypeSelectorFilter
        fun C(Other: UObject): PinTypeSelectorFilter
        fun C(Other: Any): PinTypeSelectorFilter
    }
}

external open class BlueprintCompilerExtension : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlueprintCompilerExtension
        fun Find(Outer: UObject, ResourceName: String): BlueprintCompilerExtension
        fun GetDefaultObject(): BlueprintCompilerExtension
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintCompilerExtension
        fun C(Other: UObject): BlueprintCompilerExtension
        fun C(Other: Any): BlueprintCompilerExtension
    }
}

external open class BlueprintEditorToolMenuContext : UObject {
    constructor()
    constructor(Outer: UObject)
    open fun GetBlueprintObj(): Blueprint

    companion object {
        fun Load(ResourceName: String): BlueprintEditorToolMenuContext
        fun Find(Outer: UObject, ResourceName: String): BlueprintEditorToolMenuContext
        fun GetDefaultObject(): BlueprintEditorToolMenuContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintEditorToolMenuContext
        fun C(Other: UObject): BlueprintEditorToolMenuContext
        fun C(Other: Any): BlueprintEditorToolMenuContext
    }
}

external open class FavoritedBlueprintPaletteItem {
    open fun clone(): FavoritedBlueprintPaletteItem

    companion object {
        fun C(Other: UObject): FavoritedBlueprintPaletteItem
        fun C(Other: Any): FavoritedBlueprintPaletteItem
    }
}

external open class BlueprintPaletteFavorites : UObject {
    constructor()
    constructor(Outer: UObject)
    open var CustomFavorites: Array<String>
    open var CurrentFavorites: Array<FavoritedBlueprintPaletteItem>
    open var CurrentProfile: String

    companion object {
        fun Load(ResourceName: String): BlueprintPaletteFavorites
        fun Find(Outer: UObject, ResourceName: String): BlueprintPaletteFavorites
        fun GetDefaultObject(): BlueprintPaletteFavorites
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintPaletteFavorites
        fun C(Other: UObject): BlueprintPaletteFavorites
        fun C(Other: Any): BlueprintPaletteFavorites
    }
}

external open class SCSEditorExtensionContext : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SCSEditorExtensionContext
        fun Find(Outer: UObject, ResourceName: String): SCSEditorExtensionContext
        fun GetDefaultObject(): SCSEditorExtensionContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SCSEditorExtensionContext
        fun C(Other: UObject): SCSEditorExtensionContext
        fun C(Other: Any): SCSEditorExtensionContext
    }
}

external open class SSCSEditorMenuContext : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SSCSEditorMenuContext
        fun Find(Outer: UObject, ResourceName: String): SSCSEditorMenuContext
        fun GetDefaultObject(): SSCSEditorMenuContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SSCSEditorMenuContext
        fun C(Other: UObject): SSCSEditorMenuContext
        fun C(Other: Any): SSCSEditorMenuContext
    }
}

external open class SubobjectEditorExtensionContext : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SubobjectEditorExtensionContext
        fun Find(Outer: UObject, ResourceName: String): SubobjectEditorExtensionContext
        fun GetDefaultObject(): SubobjectEditorExtensionContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SubobjectEditorExtensionContext
        fun C(Other: UObject): SubobjectEditorExtensionContext
        fun C(Other: Any): SubobjectEditorExtensionContext
    }
}

external object EBlueprintPinStyleType {
    var BPST_Original: String /* "BPST_Original" */
    var BPST_VariantA: String /* "BPST_VariantA" */
    var BPST_MAX: String /* "BPST_MAX" */
}

external object EGraphPanningMouseButton {
    var Right: String /* "Right" */
    var Middle: String /* "Middle" */
    var Both: String /* "Both" */
    var EGraphPanningMouseButton_MAX: String /* "EGraphPanningMouseButton_MAX" */
}

external object ECommentBoxMode {
    var GroupMovement: String /* "GroupMovement" */
    var NoGroupMovement: String /* "NoGroupMovement" */
    var ECommentBoxMode_MAX: String /* "ECommentBoxMode_MAX" */
}

external open class GraphEditorSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var DataPinStyle: String /* "BPST_Original" | "BPST_VariantA" | "BPST_MAX" */
    open var PanningMouseButton: String /* "Right" | "Middle" | "Both" | "EGraphPanningMouseButton_MAX" */
    open var PaddingAbovePin: Number
    open var PaddingBelowPin: Number
    open var PaddingRightOfInput: Number
    open var PaddingLeftOfOutput: Number
    open var PaddingTowardsNodeEdge: Number
    open var bTreatSplinesLikePins: Boolean
    open var SplineHoverTolerance: Number
    open var SplineCloseTolerance: Number
    open var ForwardSplineHorizontalDeltaRange: Number
    open var ForwardSplineVerticalDeltaRange: Number
    open var ForwardSplineTangentFromHorizontalDelta: Vector2D
    open var ForwardSplineTangentFromVerticalDelta: Vector2D
    open var BackwardSplineHorizontalDeltaRange: Number
    open var BackwardSplineVerticalDeltaRange: Number
    open var BackwardSplineTangentFromHorizontalDelta: Vector2D
    open var BackwardSplineTangentFromVerticalDelta: Vector2D
    open var DefaultPinTypeColor: LinearColor
    open var ExecutionPinTypeColor: LinearColor
    open var BooleanPinTypeColor: LinearColor
    open var BytePinTypeColor: LinearColor
    open var ClassPinTypeColor: LinearColor
    open var IntPinTypeColor: LinearColor
    open var Int64PinTypeColor: LinearColor
    open var FloatPinTypeColor: LinearColor
    open var DoublePinTypeColor: LinearColor
    open var RealPinTypeColor: LinearColor
    open var NamePinTypeColor: LinearColor
    open var SoftObjectPinTypeColor: LinearColor
    open var SoftClassPinTypeColor: LinearColor
    open var DelegatePinTypeColor: LinearColor
    open var ObjectPinTypeColor: LinearColor
    open var InterfacePinTypeColor: LinearColor
    open var StringPinTypeColor: LinearColor
    open var TextPinTypeColor: LinearColor
    open var StructPinTypeColor: LinearColor
    open var WildcardPinTypeColor: LinearColor
    open var VectorPinTypeColor: LinearColor
    open var RotatorPinTypeColor: LinearColor
    open var TransformPinTypeColor: LinearColor
    open var IndexPinTypeColor: LinearColor
    open var EventNodeTitleColor: LinearColor
    open var FunctionCallNodeTitleColor: LinearColor
    open var PureFunctionCallNodeTitleColor: LinearColor
    open var ParentFunctionCallNodeTitleColor: LinearColor
    open var FunctionTerminatorNodeTitleColor: LinearColor
    open var ExecBranchNodeTitleColor: LinearColor
    open var ExecSequenceNodeTitleColor: LinearColor
    open var ResultNodeTitleColor: LinearColor
    open var DefaultCommentNodeTitleColor: LinearColor
    open var PreviewNodeTitleColor: LinearColor
    open var DefaultDataWireThickness: Number
    open var DefaultExecutionWireThickness: Number
    open var TraceAttackColor: LinearColor
    open var TraceAttackWireThickness: Number
    open var TraceAttackHoldPeriod: Number
    open var TraceDecayPeriod: Number
    open var TraceDecayExponent: Number
    open var TraceSustainColor: LinearColor
    open var TraceSustainWireThickness: Number
    open var TraceSustainHoldPeriod: Number
    open var TraceReleaseColor: LinearColor
    open var TraceReleaseWireThickness: Number
    open var TraceReleasePeriod: Number
    open var TraceReleaseExponent: Number
    open var TracePositionBonusPeriod: Number
    open var TracePositionExponent: Number
    open var PaddingAutoCollateIncrement: Number
    open var bOpenCreateMenuOnBlankGraphAreas: Boolean
    open var DefaultCommentNodeMoveMode: String /* "GroupMovement" | "NoGroupMovement" | "ECommentBoxMode_MAX" */
    open var bShowCommentBubbleWhenZoomedOut: Boolean

    companion object {
        fun Load(ResourceName: String): GraphEditorSettings
        fun Find(Outer: UObject, ResourceName: String): GraphEditorSettings
        fun GetDefaultObject(): GraphEditorSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GraphEditorSettings
        fun C(Other: UObject): GraphEditorSettings
        fun C(Other: Any): GraphEditorSettings
    }
}

external open class AssetEditorContextInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AssetEditorContextInterface
        fun Find(Outer: UObject, ResourceName: String): AssetEditorContextInterface
        fun GetDefaultObject(): AssetEditorContextInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AssetEditorContextInterface
        fun C(Other: UObject): AssetEditorContextInterface
        fun C(Other: Any): AssetEditorContextInterface
    }
}

external open class AssetFactoryInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AssetFactoryInterface
        fun Find(Outer: UObject, ResourceName: String): AssetFactoryInterface
        fun GetDefaultObject(): AssetFactoryInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AssetFactoryInterface
        fun C(Other: UObject): AssetFactoryInterface
        fun C(Other: Any): AssetFactoryInterface
    }
}

external open class EditorElementSubsystem : EditorSubsystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EditorElementSubsystem
        fun Find(Outer: UObject, ResourceName: String): EditorElementSubsystem
        fun GetDefaultObject(): EditorElementSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorElementSubsystem
        fun C(Other: UObject): EditorElementSubsystem
        fun C(Other: Any): EditorElementSubsystem
    }
}

external open class PlacementSubsystem : EditorSubsystem {
    constructor()
    constructor(Outer: UObject)
    open var AssetFactories: Array<Any>

    companion object {
        fun Load(ResourceName: String): PlacementSubsystem
        fun Find(Outer: UObject, ResourceName: String): PlacementSubsystem
        fun GetDefaultObject(): PlacementSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PlacementSubsystem
        fun C(Other: UObject): PlacementSubsystem
        fun C(Other: Any): PlacementSubsystem
    }
}

external open class TypedElementDetailsInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TypedElementDetailsInterface
        fun Find(Outer: UObject, ResourceName: String): TypedElementDetailsInterface
        fun GetDefaultObject(): TypedElementDetailsInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TypedElementDetailsInterface
        fun C(Other: UObject): TypedElementDetailsInterface
        fun C(Other: Any): TypedElementDetailsInterface
    }
}

external open class TypedElementViewportInteraction : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TypedElementViewportInteraction
        fun Find(Outer: UObject, ResourceName: String): TypedElementViewportInteraction
        fun GetDefaultObject(): TypedElementViewportInteraction
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TypedElementViewportInteraction
        fun C(Other: UObject): TypedElementViewportInteraction
        fun C(Other: Any): TypedElementViewportInteraction
    }
}

external open class AnimNodeFunctionRef {
    open var ClassName: String
    open var FunctionName: String
    open var Class: UnrealEngineClass
    open var UFunction: UFunction
    open fun clone(): AnimNodeFunctionRef

    companion object {
        fun C(Other: UObject): AnimNodeFunctionRef
        fun C(Other: Any): AnimNodeFunctionRef
    }
}

external open class AnimNode_Base {
    open var InitialUpdateFunction: AnimNodeFunctionRef
    open var BecomeRelevantFunction: AnimNodeFunctionRef
    open var UpdateFunction: AnimNodeFunctionRef
    open fun clone(): AnimNode_Base

    companion object {
        fun C(Other: UObject): AnimNode_Base
        fun C(Other: Any): AnimNode_Base
    }
}

external open class PoseLinkBase {
    open var LinkID: Number
    open var SourceLinkID: Number
    open fun clone(): PoseLinkBase

    companion object {
        fun C(Other: UObject): PoseLinkBase
        fun C(Other: Any): PoseLinkBase
    }
}

external open class PoseLink : PoseLinkBase {
    override fun clone(): PoseLink

    companion object {
        fun C(Other: UObject): PoseLink
        fun C(Other: Any): PoseLink
    }
}

external open class AnimNode_Root : AnimNode_Base {
    open var Result: PoseLink
    open var Name: String
    open var Group: String
    override fun clone(): AnimNode_Root

    companion object {
        fun C(Other: UObject): AnimNode_Root
        fun C(Other: Any): AnimNode_Root
    }
}

external open class AnimNode_BlendSpaceSampleResult : AnimNode_Root {
    override fun clone(): AnimNode_BlendSpaceSampleResult

    companion object {
        fun C(Other: UObject): AnimNode_BlendSpaceSampleResult
        fun C(Other: Any): AnimNode_BlendSpaceSampleResult
    }
}

external open class AnimGraphNode_BlendSpaceSampleResult : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_BlendSpaceSampleResult

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_BlendSpaceSampleResult
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_BlendSpaceSampleResult
        fun GetDefaultObject(): AnimGraphNode_BlendSpaceSampleResult
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_BlendSpaceSampleResult
        fun C(Other: UObject): AnimGraphNode_BlendSpaceSampleResult
        fun C(Other: Any): AnimGraphNode_BlendSpaceSampleResult
    }
}

external open class AnimationBlendSpaceSampleGraph : AnimationGraph {
    constructor()
    constructor(Outer: UObject)
    open var ResultNode: AnimGraphNode_BlendSpaceSampleResult

    companion object {
        fun Load(ResourceName: String): AnimationBlendSpaceSampleGraph
        fun Find(Outer: UObject, ResourceName: String): AnimationBlendSpaceSampleGraph
        fun GetDefaultObject(): AnimationBlendSpaceSampleGraph
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationBlendSpaceSampleGraph
        fun C(Other: UObject): AnimationBlendSpaceSampleGraph
        fun C(Other: Any): AnimationBlendSpaceSampleGraph
    }
}

external open class AnimationConduitGraphSchema : EdGraphSchema_K2 {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimationConduitGraphSchema
        fun Find(Outer: UObject, ResourceName: String): AnimationConduitGraphSchema
        fun GetDefaultObject(): AnimationConduitGraphSchema
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationConduitGraphSchema
        fun C(Other: UObject): AnimationConduitGraphSchema
        fun C(Other: Any): AnimationConduitGraphSchema
    }
}

external open class AnimNode_StateResult : AnimNode_Root {
    open var StateIndex: Number
    override fun clone(): AnimNode_StateResult

    companion object {
        fun C(Other: UObject): AnimNode_StateResult
        fun C(Other: Any): AnimNode_StateResult
    }
}

external open class AnimGraphNode_StateResult : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_StateResult

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_StateResult
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_StateResult
        fun GetDefaultObject(): AnimGraphNode_StateResult
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_StateResult
        fun C(Other: UObject): AnimGraphNode_StateResult
        fun C(Other: Any): AnimGraphNode_StateResult
    }
}

external open class AnimGraphNode_CustomTransitionResult : AnimGraphNode_StateResult {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_CustomTransitionResult
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_CustomTransitionResult
        fun GetDefaultObject(): AnimGraphNode_CustomTransitionResult
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_CustomTransitionResult
        fun C(Other: UObject): AnimGraphNode_CustomTransitionResult
        fun C(Other: Any): AnimGraphNode_CustomTransitionResult
    }
}

external open class AnimationCustomTransitionGraph : AnimationGraph {
    constructor()
    constructor(Outer: UObject)
    open var MyResultNode: AnimGraphNode_CustomTransitionResult

    companion object {
        fun Load(ResourceName: String): AnimationCustomTransitionGraph
        fun Find(Outer: UObject, ResourceName: String): AnimationCustomTransitionGraph
        fun GetDefaultObject(): AnimationCustomTransitionGraph
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationCustomTransitionGraph
        fun C(Other: UObject): AnimationCustomTransitionGraph
        fun C(Other: Any): AnimationCustomTransitionGraph
    }
}

external open class AnimationGraphSchema : EdGraphSchema_K2 {
    constructor()
    constructor(Outer: UObject)
    open var PN_SequenceName: String
    open var NAME_NeverAsPin: String
    open var NAME_PinHiddenByDefault: String
    open var NAME_PinShownByDefault: String
    open var NAME_AlwaysAsPin: String
    open var NAME_CustomizeProperty: String
    open var NAME_OnEvaluate: String
    open var DefaultEvaluationHandlerName: String

    companion object {
        fun Load(ResourceName: String): AnimationGraphSchema
        fun Find(Outer: UObject, ResourceName: String): AnimationGraphSchema
        fun GetDefaultObject(): AnimationGraphSchema
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationGraphSchema
        fun C(Other: UObject): AnimationGraphSchema
        fun C(Other: Any): AnimationGraphSchema
    }
}

external open class AnimationCustomTransitionSchema : AnimationGraphSchema {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimationCustomTransitionSchema
        fun Find(Outer: UObject, ResourceName: String): AnimationCustomTransitionSchema
        fun GetDefaultObject(): AnimationCustomTransitionSchema
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationCustomTransitionSchema
        fun C(Other: UObject): AnimationCustomTransitionSchema
        fun C(Other: Any): AnimationCustomTransitionSchema
    }
}

external open class AnimationStateGraph : AnimationGraph {
    constructor()
    constructor(Outer: UObject)
    open var MyResultNode: AnimGraphNode_StateResult

    companion object {
        fun Load(ResourceName: String): AnimationStateGraph
        fun Find(Outer: UObject, ResourceName: String): AnimationStateGraph
        fun GetDefaultObject(): AnimationStateGraph
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationStateGraph
        fun C(Other: UObject): AnimationStateGraph
        fun C(Other: Any): AnimationStateGraph
    }
}

external open class AnimationStateGraphSchema : AnimationGraphSchema {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimationStateGraphSchema
        fun Find(Outer: UObject, ResourceName: String): AnimationStateGraphSchema
        fun GetDefaultObject(): AnimationStateGraphSchema
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationStateGraphSchema
        fun C(Other: UObject): AnimationStateGraphSchema
        fun C(Other: Any): AnimationStateGraphSchema
    }
}

external open class AnimStateEntryNode : EdGraphNode {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimStateEntryNode
        fun Find(Outer: UObject, ResourceName: String): AnimStateEntryNode
        fun GetDefaultObject(): AnimStateEntryNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimStateEntryNode
        fun C(Other: UObject): AnimStateEntryNode
        fun C(Other: Any): AnimStateEntryNode
    }
}

external open class AnimGraphNode_StateMachineBase : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var EditorStateMachineGraph: AnimationStateMachineGraph

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_StateMachineBase
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_StateMachineBase
        fun GetDefaultObject(): AnimGraphNode_StateMachineBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_StateMachineBase
        fun C(Other: UObject): AnimGraphNode_StateMachineBase
        fun C(Other: Any): AnimGraphNode_StateMachineBase
    }
}

external open class AnimationStateMachineGraph : EdGraph {
    constructor()
    constructor(Outer: UObject)
    open var EntryNode: AnimStateEntryNode
    open var OwnerAnimGraphNode: AnimGraphNode_StateMachineBase

    companion object {
        fun Load(ResourceName: String): AnimationStateMachineGraph
        fun Find(Outer: UObject, ResourceName: String): AnimationStateMachineGraph
        fun GetDefaultObject(): AnimationStateMachineGraph
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationStateMachineGraph
        fun C(Other: UObject): AnimationStateMachineGraph
        fun C(Other: Any): AnimationStateMachineGraph
    }
}

external open class AnimationStateMachineSchema : EdGraphSchema {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimationStateMachineSchema
        fun Find(Outer: UObject, ResourceName: String): AnimationStateMachineSchema
        fun GetDefaultObject(): AnimationStateMachineSchema
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationStateMachineSchema
        fun C(Other: UObject): AnimationStateMachineSchema
        fun C(Other: Any): AnimationStateMachineSchema
    }
}

external open class AnimNode_TransitionResult : AnimNode_Base {
    open var bCanEnterTransition: Boolean
    override fun clone(): AnimNode_TransitionResult

    companion object {
        fun C(Other: UObject): AnimNode_TransitionResult
        fun C(Other: Any): AnimNode_TransitionResult
    }
}

external open class AnimGraphNode_TransitionResult : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_TransitionResult

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_TransitionResult
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_TransitionResult
        fun GetDefaultObject(): AnimGraphNode_TransitionResult
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_TransitionResult
        fun C(Other: UObject): AnimGraphNode_TransitionResult
        fun C(Other: Any): AnimGraphNode_TransitionResult
    }
}

external open class AnimationTransitionGraph : AnimationGraph {
    constructor()
    constructor(Outer: UObject)
    open var MyResultNode: AnimGraphNode_TransitionResult

    companion object {
        fun Load(ResourceName: String): AnimationTransitionGraph
        fun Find(Outer: UObject, ResourceName: String): AnimationTransitionGraph
        fun GetDefaultObject(): AnimationTransitionGraph
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationTransitionGraph
        fun C(Other: UObject): AnimationTransitionGraph
        fun C(Other: Any): AnimationTransitionGraph
    }
}

external open class AnimationTransitionSchema : EdGraphSchema_K2 {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimationTransitionSchema
        fun Find(Outer: UObject, ResourceName: String): AnimationTransitionSchema
        fun GetDefaultObject(): AnimationTransitionSchema
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationTransitionSchema
        fun C(Other: UObject): AnimationTransitionSchema
        fun C(Other: Any): AnimationTransitionSchema
    }
}

external open class AnimBlueprintExtension : BlueprintExtension {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimBlueprintExtension
        fun Find(Outer: UObject, ResourceName: String): AnimBlueprintExtension
        fun GetDefaultObject(): AnimBlueprintExtension
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimBlueprintExtension
        fun C(Other: UObject): AnimBlueprintExtension
        fun C(Other: Any): AnimBlueprintExtension
    }
}

external open class AnimBlueprintExtension_Attributes : AnimBlueprintExtension {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimBlueprintExtension_Attributes
        fun Find(Outer: UObject, ResourceName: String): AnimBlueprintExtension_Attributes
        fun GetDefaultObject(): AnimBlueprintExtension_Attributes
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimBlueprintExtension_Attributes
        fun C(Other: UObject): AnimBlueprintExtension_Attributes
        fun C(Other: Any): AnimBlueprintExtension_Attributes
    }
}

external open class AnimSubsystem {
    open fun clone(): AnimSubsystem

    companion object {
        fun C(Other: UObject): AnimSubsystem
        fun C(Other: Any): AnimSubsystem
    }
}

external object EPostCopyOperation {
    var None: String /* "None" */
    var LogicalNegateBool: String /* "LogicalNegateBool" */
    var EPostCopyOperation_MAX: String /* "EPostCopyOperation_MAX" */
}

external open class ExposedValueCopyRecord {
    open var CopyIndex: Number
    open var PostCopyOperation: String /* "None" | "LogicalNegateBool" | "EPostCopyOperation_MAX" */
    open fun clone(): ExposedValueCopyRecord

    companion object {
        fun C(Other: UObject): ExposedValueCopyRecord
        fun C(Other: Any): ExposedValueCopyRecord
    }
}

external open class ExposedValueHandler {
    open var CopyRecords: Array<ExposedValueCopyRecord>
    open var UFunction: UFunction
    open var BoundFunction: String
    open fun clone(): ExposedValueHandler

    companion object {
        fun C(Other: UObject): ExposedValueHandler
        fun C(Other: Any): ExposedValueHandler
    }
}

external open class AnimSubsystem_Base : AnimSubsystem {
    open var ExposedValueHandlers: Array<ExposedValueHandler>
    override fun clone(): AnimSubsystem_Base

    companion object {
        fun C(Other: UObject): AnimSubsystem_Base
        fun C(Other: Any): AnimSubsystem_Base
    }
}

external open class AnimBlueprintExtension_Base : AnimBlueprintExtension {
    constructor()
    constructor(Outer: UObject)
    open var Subsystem: AnimSubsystem_Base

    companion object {
        fun Load(ResourceName: String): AnimBlueprintExtension_Base
        fun Find(Outer: UObject, ResourceName: String): AnimBlueprintExtension_Base
        fun GetDefaultObject(): AnimBlueprintExtension_Base
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimBlueprintExtension_Base
        fun C(Other: UObject): AnimBlueprintExtension_Base
        fun C(Other: Any): AnimBlueprintExtension_Base
    }
}

external object EFilterInterpolationType {
    var BSIT_Average: String /* "BSIT_Average" */
    var BSIT_Linear: String /* "BSIT_Linear" */
    var BSIT_Cubic: String /* "BSIT_Cubic" */
    var BSIT_EaseInOut: String /* "BSIT_EaseInOut" */
    var BSIT_ExponentialDecay: String /* "BSIT_ExponentialDecay" */
    var BSIT_SpringDamper: String /* "BSIT_SpringDamper" */
    var BSIT_MAX: String /* "BSIT_MAX" */
}

external open class InterpolationParameter {
    open var InterpolationTime: Number
    open var DampingRatio: Number
    open var MaxSpeed: Number
    open var InterpolationType: String /* "BSIT_Average" | "BSIT_Linear" | "BSIT_Cubic" | "BSIT_EaseInOut" | "BSIT_ExponentialDecay" | "BSIT_SpringDamper" | "BSIT_MAX" */
    open fun clone(): InterpolationParameter

    companion object {
        fun C(Other: UObject): InterpolationParameter
        fun C(Other: Any): InterpolationParameter
    }
}

external open class AnalysisProperties : UObject {
    constructor()
    constructor(Outer: UObject)
    open var UFunction: String

    companion object {
        fun Load(ResourceName: String): AnalysisProperties
        fun Find(Outer: UObject, ResourceName: String): AnalysisProperties
        fun GetDefaultObject(): AnalysisProperties
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnalysisProperties
        fun C(Other: UObject): AnalysisProperties
        fun C(Other: Any): AnalysisProperties
    }
}

external object ENotifyTriggerMode {
    var AllAnimations: String /* "AllAnimations" */
    var HighestWeightedAnimation: String /* "HighestWeightedAnimation" */
    var None: String /* "None" */
    var ENotifyTriggerMode_MAX: String /* "ENotifyTriggerMode_MAX" */
}

external object EPreferredTriangulationDirection {
    var None: String /* "None" */
    var Tangential: String /* "Tangential" */
    var Radial: String /* "Radial" */
    var EPreferredTriangulationDirection_MAX: String /* "EPreferredTriangulationDirection_MAX" */
}

external open class PerBoneInterpolation {
    open var BoneReference: BoneReference
    open var InterpolationSpeedPerSec: Number
    open fun clone(): PerBoneInterpolation

    companion object {
        fun C(Other: UObject): PerBoneInterpolation
        fun C(Other: Any): PerBoneInterpolation
    }
}

external open class BlendSample {
    open var Animation: AnimSequence
    open var SampleValue: Vector
    open var RateScale: Number
    open var bIsValid: Boolean
    open fun clone(): BlendSample

    companion object {
        fun C(Other: UObject): BlendSample
        fun C(Other: Any): BlendSample
    }
}

external open class EditorElement {
    open var Indices: Number
    open var Weights: Number
    open fun clone(): EditorElement

    companion object {
        fun C(Other: UObject): EditorElement
        fun C(Other: Any): EditorElement
    }
}

external open class BlendSpaceSegment {
    open var SampleIndices: Number
    open var Vertices: Number
    open fun clone(): BlendSpaceSegment

    companion object {
        fun C(Other: UObject): BlendSpaceSegment
        fun C(Other: Any): BlendSpaceSegment
    }
}

external open class BlendSpaceTriangleEdgeInfo {
    open var Normal: Vector2D
    open var NeighbourTriangleIndex: Number
    open var AdjacentPerimeterTriangleIndices: Number
    open var AdjacentPerimeterVertexIndices: Number
    open fun clone(): BlendSpaceTriangleEdgeInfo

    companion object {
        fun C(Other: UObject): BlendSpaceTriangleEdgeInfo
        fun C(Other: Any): BlendSpaceTriangleEdgeInfo
    }
}

external open class BlendSpaceTriangle {
    open var SampleIndices: Number
    open var Vertices: Vector2D
    open var EdgeInfo: BlendSpaceTriangleEdgeInfo
    open fun clone(): BlendSpaceTriangle

    companion object {
        fun C(Other: UObject): BlendSpaceTriangle
        fun C(Other: Any): BlendSpaceTriangle
    }
}

external open class BlendSpaceData {
    open var Segments: Array<BlendSpaceSegment>
    open var Triangles: Array<BlendSpaceTriangle>
    open fun clone(): BlendSpaceData

    companion object {
        fun C(Other: UObject): BlendSpaceData
        fun C(Other: Any): BlendSpaceData
    }
}

external open class BlendParameter {
    open var DisplayName: String
    open var Min: Number
    open var Max: Number
    open var GridNum: Number
    open var bSnapToGrid: Boolean
    open var bWrapInput: Boolean
    open fun clone(): BlendParameter

    companion object {
        fun C(Other: UObject): BlendParameter
        fun C(Other: Any): BlendParameter
    }
}

external object EBlendSpaceAxis {
    var BSA_None: String /* "BSA_None" */
    var BSA_X: String /* "BSA_X" */
    var BSA_Y: String /* "BSA_Y" */
    var BSA_MAX: String /* "BSA_MAX" */
}

external open class BlendSpace : AnimationAsset {
    constructor()
    constructor(Outer: UObject)
    open var bRotationBlendInMeshSpace: Boolean
    open var InterpolationParam: InterpolationParameter
    open var AnalysisProperties: AnalysisProperties
    open var TargetWeightInterpolationSpeedPerSec: Number
    open var bTargetWeightInterpolationEaseInOut: Boolean
    open var PreviewBasePose: AnimSequence
    open var AnimLength: Number
    open var NotifyTriggerMode: String /* "AllAnimations" | "HighestWeightedAnimation" | "None" | "ENotifyTriggerMode_MAX" */
    open var bInterpolateUsingGrid: Boolean
    open var PreferredTriangulationDirection: String /* "None" | "Tangential" | "Radial" | "EPreferredTriangulationDirection_MAX" */
    open var PerBoneBlend: Array<PerBoneInterpolation>
    open var SampleIndexWithMarkers: Number
    open var SampleData: Array<BlendSample>
    open var GridSamples: Array<EditorElement>
    open var BlendSpaceData: BlendSpaceData
    open var BlendParameters: BlendParameter
    open var AxisToScaleAnimation: String /* "BSA_None" | "BSA_X" | "BSA_Y" | "BSA_MAX" */
    open var DimensionIndices: Array<Number>

    companion object {
        fun Load(ResourceName: String): BlendSpace
        fun Find(Outer: UObject, ResourceName: String): BlendSpace
        fun GetDefaultObject(): BlendSpace
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlendSpace
        fun C(Other: UObject): BlendSpace
        fun C(Other: Any): BlendSpace
    }
}

external open class AnimSubsystem_BlendSpaceGraph : AnimSubsystem {
    open var BlendSpaces: Array<BlendSpace>
    override fun clone(): AnimSubsystem_BlendSpaceGraph

    companion object {
        fun C(Other: UObject): AnimSubsystem_BlendSpaceGraph
        fun C(Other: Any): AnimSubsystem_BlendSpaceGraph
    }
}

external open class AnimBlueprintExtension_BlendSpaceGraph : AnimBlueprintExtension {
    constructor()
    constructor(Outer: UObject)
    open var Class: UnrealEngineClass
    open var Subsystem: AnimSubsystem_BlendSpaceGraph

    companion object {
        fun Load(ResourceName: String): AnimBlueprintExtension_BlendSpaceGraph
        fun Find(Outer: UObject, ResourceName: String): AnimBlueprintExtension_BlendSpaceGraph
        fun GetDefaultObject(): AnimBlueprintExtension_BlendSpaceGraph
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimBlueprintExtension_BlendSpaceGraph
        fun C(Other: UObject): AnimBlueprintExtension_BlendSpaceGraph
        fun C(Other: Any): AnimBlueprintExtension_BlendSpaceGraph
    }
}

external open class AnimBlueprintExtension_CachedPose : AnimBlueprintExtension {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimBlueprintExtension_CachedPose
        fun Find(Outer: UObject, ResourceName: String): AnimBlueprintExtension_CachedPose
        fun GetDefaultObject(): AnimBlueprintExtension_CachedPose
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimBlueprintExtension_CachedPose
        fun C(Other: UObject): AnimBlueprintExtension_CachedPose
        fun C(Other: Any): AnimBlueprintExtension_CachedPose
    }
}

external open class AnimBlueprintExtension_CallFunction : AnimBlueprintExtension {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimBlueprintExtension_CallFunction
        fun Find(Outer: UObject, ResourceName: String): AnimBlueprintExtension_CallFunction
        fun GetDefaultObject(): AnimBlueprintExtension_CallFunction
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimBlueprintExtension_CallFunction
        fun C(Other: UObject): AnimBlueprintExtension_CallFunction
        fun C(Other: Any): AnimBlueprintExtension_CallFunction
    }
}

external open class AnimBlueprintExtension_LinkedAnimGraph : AnimBlueprintExtension {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimBlueprintExtension_LinkedAnimGraph
        fun Find(Outer: UObject, ResourceName: String): AnimBlueprintExtension_LinkedAnimGraph
        fun GetDefaultObject(): AnimBlueprintExtension_LinkedAnimGraph
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimBlueprintExtension_LinkedAnimGraph
        fun C(Other: UObject): AnimBlueprintExtension_LinkedAnimGraph
        fun C(Other: Any): AnimBlueprintExtension_LinkedAnimGraph
    }
}

external open class AnimSubsystemInstance {
    open fun clone(): AnimSubsystemInstance

    companion object {
        fun C(Other: UObject): AnimSubsystemInstance
        fun C(Other: Any): AnimSubsystemInstance
    }
}

external open class AnimSubsystemInstance_NodeRelevancy : AnimSubsystemInstance {
    override fun clone(): AnimSubsystemInstance_NodeRelevancy

    companion object {
        fun C(Other: UObject): AnimSubsystemInstance_NodeRelevancy
        fun C(Other: Any): AnimSubsystemInstance_NodeRelevancy
    }
}

external open class AnimBlueprintExtension_NodeRelevancy : AnimBlueprintExtension {
    constructor()
    constructor(Outer: UObject)
    open var Subsystem: AnimSubsystemInstance_NodeRelevancy

    companion object {
        fun Load(ResourceName: String): AnimBlueprintExtension_NodeRelevancy
        fun Find(Outer: UObject, ResourceName: String): AnimBlueprintExtension_NodeRelevancy
        fun GetDefaultObject(): AnimBlueprintExtension_NodeRelevancy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimBlueprintExtension_NodeRelevancy
        fun C(Other: UObject): AnimBlueprintExtension_NodeRelevancy
        fun C(Other: Any): AnimBlueprintExtension_NodeRelevancy
    }
}

external open class PropertyAccessSegment {
    open var Name: String
    open var struct: Struct
    open var Property: Any
    open var UFunction: UFunction
    open var ArrayIndex: Number
    open var Flags: Any
    open fun clone(): PropertyAccessSegment

    companion object {
        fun C(Other: UObject): PropertyAccessSegment
        fun C(Other: Any): PropertyAccessSegment
    }
}

external open class PropertyAccessPath {
    open var PathSegmentStartIndex: Number
    open var PathSegmentCount: Number
    open fun clone(): PropertyAccessPath

    companion object {
        fun C(Other: UObject): PropertyAccessPath
        fun C(Other: Any): PropertyAccessPath
    }
}

external object EPropertyAccessCopyType {
    var None: String /* "None" */
    var Plain: String /* "Plain" */
    var Complex: String /* "Complex" */
    var Bool: String /* "Bool" */
    var Struct: String /* "Struct" */
    var Object: String /* "Object" */
    var Name: String /* "Name" */
    var Array: String /* "Array" */
    var PromoteBoolToByte: String /* "PromoteBoolToByte" */
    var PromoteBoolToInt32: String /* "PromoteBoolToInt32" */
    var PromoteBoolToInt64: String /* "PromoteBoolToInt64" */
    var PromoteBoolToFloat: String /* "PromoteBoolToFloat" */
    var PromoteBoolToDouble: String /* "PromoteBoolToDouble" */
    var PromoteByteToInt32: String /* "PromoteByteToInt32" */
    var PromoteByteToInt64: String /* "PromoteByteToInt64" */
    var PromoteByteToFloat: String /* "PromoteByteToFloat" */
    var PromoteByteToDouble: String /* "PromoteByteToDouble" */
    var PromoteInt32ToInt64: String /* "PromoteInt32ToInt64" */
    var PromoteInt32ToFloat: String /* "PromoteInt32ToFloat" */
    var PromoteInt32ToDouble: String /* "PromoteInt32ToDouble" */
    var PromoteFloatToDouble: String /* "PromoteFloatToDouble" */
    var DemoteDoubleToFloat: String /* "DemoteDoubleToFloat" */
    var PromoteArrayFloatToDouble: String /* "PromoteArrayFloatToDouble" */
    var DemoteArrayDoubleToFloat: String /* "DemoteArrayDoubleToFloat" */
    var EPropertyAccessCopyType_MAX: String /* "EPropertyAccessCopyType_MAX" */
}

external open class PropertyAccessCopy {
    open var AccessIndex: Number
    open var DestAccessStartIndex: Number
    open var DestAccessEndIndex: Number
    open var Type: String /* "None" | "Plain" | "Complex" | "Bool" | "Struct" | "Object" | "Name" | "Array" | "PromoteBoolToByte" | "PromoteBoolToInt32" | "PromoteBoolToInt64" | "PromoteBoolToFloat" | "PromoteBoolToDouble" | "PromoteByteToInt32" | "PromoteByteToInt64" | "PromoteByteToFloat" | "PromoteByteToDouble" | "PromoteInt32ToInt64" | "PromoteInt32ToFloat" | "PromoteInt32ToDouble" | "PromoteFloatToDouble" | "DemoteDoubleToFloat" | "PromoteArrayFloatToDouble" | "DemoteArrayDoubleToFloat" | "EPropertyAccessCopyType_MAX" */
    open fun clone(): PropertyAccessCopy

    companion object {
        fun C(Other: UObject): PropertyAccessCopy
        fun C(Other: Any): PropertyAccessCopy
    }
}

external open class PropertyAccessCopyBatch {
    open var Copies: Array<PropertyAccessCopy>
    open fun clone(): PropertyAccessCopyBatch

    companion object {
        fun C(Other: UObject): PropertyAccessCopyBatch
        fun C(Other: Any): PropertyAccessCopyBatch
    }
}

external open class PropertyAccessIndirectionChain {
    open var Property: Any
    open var IndirectionStartIndex: Number
    open var IndirectionEndIndex: Number
    open fun clone(): PropertyAccessIndirectionChain

    companion object {
        fun C(Other: UObject): PropertyAccessIndirectionChain
        fun C(Other: Any): PropertyAccessIndirectionChain
    }
}

external object EPropertyAccessObjectType {
    var None: String /* "None" */
    var Object: String /* "Object" */
    var WeakObject: String /* "WeakObject" */
    var SoftObject: String /* "SoftObject" */
    var EPropertyAccessObjectType_MAX: String /* "EPropertyAccessObjectType_MAX" */
}

external object EPropertyAccessIndirectionType {
    var Offset: String /* "Offset" */
    var Object: String /* "Object" */
    var Array: String /* "Array" */
    var ScriptFunction: String /* "ScriptFunction" */
    var NativeFunction: String /* "NativeFunction" */
    var EPropertyAccessIndirectionType_MAX: String /* "EPropertyAccessIndirectionType_MAX" */
}

external open class PropertyAccessIndirection {
    open var Property: Any
    open var UFunction: UFunction
    open var ReturnBufferSize: Number
    open var ReturnBufferAlignment: Number
    open var ArrayIndex: Number
    open var Offset: Number
    open var ObjectType: String /* "None" | "Object" | "WeakObject" | "SoftObject" | "EPropertyAccessObjectType_MAX" */
    open var Type: String /* "Offset" | "Object" | "Array" | "ScriptFunction" | "NativeFunction" | "EPropertyAccessIndirectionType_MAX" */
    open fun clone(): PropertyAccessIndirection

    companion object {
        fun C(Other: UObject): PropertyAccessIndirection
        fun C(Other: Any): PropertyAccessIndirection
    }
}

external open class PropertyAccessLibrary {
    open var PathSegments: Array<PropertyAccessSegment>
    open var SrcPaths: Array<PropertyAccessPath>
    open var DestPaths: Array<PropertyAccessPath>
    open var CopyBatches: PropertyAccessCopyBatch
    open var CopyBatchArray: Array<PropertyAccessCopyBatch>
    open var SrcAccesses: Array<PropertyAccessIndirectionChain>
    open var DestAccesses: Array<PropertyAccessIndirectionChain>
    open var Indirections: Array<PropertyAccessIndirection>
    open fun clone(): PropertyAccessLibrary

    companion object {
        fun C(Other: UObject): PropertyAccessLibrary
        fun C(Other: Any): PropertyAccessLibrary
    }
}
