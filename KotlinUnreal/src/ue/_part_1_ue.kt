@file:Suppress("INTERFACE_WITH_SUPERCLASS", "OVERRIDING_FINAL_MEMBER", "RETURN_TYPE_MISMATCH_ON_OVERRIDE", "CONFLICTING_OVERLOADS")
package ue


import kotlin.js.*
import org.khronos.webgl.*
import org.w3c.dom.*
import org.w3c.dom.events.*
import org.w3c.dom.parsing.*
import org.w3c.dom.svg.*
import org.w3c.dom.url.*
import org.w3c.fetch.*
import org.w3c.files.*
import org.w3c.notifications.*
import org.w3c.performance.*
import org.w3c.workers.*
import org.w3c.xhr.*


external open class GeneralEngineSettings : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GeneralEngineSettings
        fun Find(Outer: UObject, ResourceName: String): GeneralEngineSettings
        fun GetDefaultObject(): GeneralEngineSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GeneralEngineSettings
        fun C(Other: UObject): GeneralEngineSettings
        fun C(Other: Any): GeneralEngineSettings
    }
}

external open class GeneralProjectSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var CompanyName: String
    open var CompanyDistinguishedName: String
    open var CopyrightNotice: String
    open var Description: String
    open var Homepage: String
    open var LicensingTerms: String
    open var PrivacyPolicy: String
    open var ProjectID: Guid
    open var ProjectName: String
    open var ProjectVersion: String
    open var SupportContact: String
    open var ProjectDisplayedTitle: String
    open var ProjectDebugTitleInfo: String
    open var bShouldWindowPreserveAspectRatio: Boolean
    open var bUseBorderlessWindow: Boolean
    open var bStartInVR: Boolean
    open var bAllowWindowResize: Boolean
    open var bAllowClose: Boolean
    open var bAllowMaximize: Boolean
    open var bAllowMinimize: Boolean

    companion object {
        fun Load(ResourceName: String): GeneralProjectSettings
        fun Find(Outer: UObject, ResourceName: String): GeneralProjectSettings
        fun GetDefaultObject(): GeneralProjectSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GeneralProjectSettings
        fun C(Other: UObject): GeneralProjectSettings
        fun C(Other: Any): GeneralProjectSettings
    }
}

external open class HudSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bShowHUD: Boolean
    open var DebugDisplay: Array<String>

    companion object {
        fun Load(ResourceName: String): HudSettings
        fun Find(Outer: UObject, ResourceName: String): HudSettings
        fun GetDefaultObject(): HudSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): HudSettings
        fun C(Other: UObject): HudSettings
        fun C(Other: Any): HudSettings
    }
}

external open class HandlerComponentFactory : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): HandlerComponentFactory
        fun Find(Outer: UObject, ResourceName: String): HandlerComponentFactory
        fun GetDefaultObject(): HandlerComponentFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): HandlerComponentFactory
        fun C(Other: UObject): HandlerComponentFactory
        fun C(Other: Any): HandlerComponentFactory
    }
}

external open class PacketHandlerProfileConfig : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Components: Array<String>

    companion object {
        fun Load(ResourceName: String): PacketHandlerProfileConfig
        fun Find(Outer: UObject, ResourceName: String): PacketHandlerProfileConfig
        fun GetDefaultObject(): PacketHandlerProfileConfig
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PacketHandlerProfileConfig
        fun C(Other: UObject): PacketHandlerProfileConfig
        fun C(Other: Any): PacketHandlerProfileConfig
    }
}

external open class MeshDescription : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MeshDescription
        fun Find(Outer: UObject, ResourceName: String): MeshDescription
        fun GetDefaultObject(): MeshDescription
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MeshDescription
        fun C(Other: UObject): MeshDescription
        fun C(Other: Any): MeshDescription
    }
}

external open class DeveloperSettings : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DeveloperSettings
        fun Find(Outer: UObject, ResourceName: String): DeveloperSettings
        fun GetDefaultObject(): DeveloperSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DeveloperSettings
        fun C(Other: UObject): DeveloperSettings
        fun C(Other: Any): DeveloperSettings
    }
}

external open class ChaosPhysicalMaterial : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Friction: Number
    open var StaticFriction: Number
    open var Restitution: Number
    open var LinearEtherDrag: Number
    open var AngularEtherDrag: Number
    open var SleepingLinearVelocityThreshold: Number
    open var SleepingAngularVelocityThreshold: Number

    companion object {
        fun Load(ResourceName: String): ChaosPhysicalMaterial
        fun Find(Outer: UObject, ResourceName: String): ChaosPhysicalMaterial
        fun GetDefaultObject(): ChaosPhysicalMaterial
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ChaosPhysicalMaterial
        fun C(Other: UObject): ChaosPhysicalMaterial
        fun C(Other: Any): ChaosPhysicalMaterial
    }
}

external object EClusterUnionMethod {
    var PointImplicit: String /* "PointImplicit" */
    var DelaunayTriangulation: String /* "DelaunayTriangulation" */
    var MinimalSpanningSubsetDelaunayTriangulation: String /* "MinimalSpanningSubsetDelaunayTriangulation" */
    var PointImplicitAugmentedWithMinimalDelaunay: String /* "PointImplicitAugmentedWithMinimalDelaunay" */
    var None: String /* "None" */
    var EClusterUnionMethod_MAX: String /* "EClusterUnionMethod_MAX" */
}

external open class SolverCollisionFilterSettings {
    open var FilterEnabled: Boolean
    open var MinMass: Number
    open var MinSpeed: Number
    open var MinImpulse: Number
    open fun clone(): SolverCollisionFilterSettings

    companion object {
        fun C(Other: UObject): SolverCollisionFilterSettings
        fun C(Other: Any): SolverCollisionFilterSettings
    }
}

external open class SolverBreakingFilterSettings {
    open var FilterEnabled: Boolean
    open var MinMass: Number
    open var MinSpeed: Number
    open var MinVolume: Number
    open fun clone(): SolverBreakingFilterSettings

    companion object {
        fun C(Other: UObject): SolverBreakingFilterSettings
        fun C(Other: Any): SolverBreakingFilterSettings
    }
}

external open class SolverTrailingFilterSettings {
    open var FilterEnabled: Boolean
    open var MinMass: Number
    open var MinSpeed: Number
    open var MinVolume: Number
    open fun clone(): SolverTrailingFilterSettings

    companion object {
        fun C(Other: UObject): SolverTrailingFilterSettings
        fun C(Other: Any): SolverTrailingFilterSettings
    }
}

external open class ChaosSolverConfiguration {
    open var Iterations: Number
    open var CollisionPairIterations: Number
    open var PushOutIterations: Number
    open var CollisionPushOutPairIterations: Number
    open var CollisionMarginFraction: Number
    open var CollisionMarginMax: Number
    open var CollisionCullDistance: Number
    open var JointPairIterations: Number
    open var JointPushOutPairIterations: Number
    open var ClusterConnectionFactor: Number
    open var ClusterUnionConnectionType: String /* "PointImplicit" | "DelaunayTriangulation" | "MinimalSpanningSubsetDelaunayTriangulation" | "PointImplicitAugmentedWithMinimalDelaunay" | "None" | "EClusterUnionMethod_MAX" */
    open var bGenerateCollisionData: Boolean
    open var CollisionFilterSettings: SolverCollisionFilterSettings
    open var bGenerateBreakData: Boolean
    open var BreakingFilterSettings: SolverBreakingFilterSettings
    open var bGenerateTrailingData: Boolean
    open var TrailingFilterSettings: SolverTrailingFilterSettings
    open var bGenerateContactGraph: Boolean
    open fun clone(): ChaosSolverConfiguration

    companion object {
        fun C(Other: UObject): ChaosSolverConfiguration
        fun C(Other: Any): ChaosSolverConfiguration
    }
}

external open class PhysicsSettingsCore : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var DefaultGravityZ: Number
    open var DefaultTerminalVelocity: Number
    open var DefaultFluidFriction: Number
    open var SimulateScratchMemorySize: Number
    open var RagdollAggregateThreshold: Number
    open var TriangleMeshTriangleMinAreaThreshold: Number
    open var bEnableShapeSharing: Boolean
    open var bEnablePCM: Boolean
    open var bEnableStabilization: Boolean
    open var bWarnMissingLocks: Boolean
    open var bEnable2DPhysics: Boolean
    open var bDefaultHasComplexCollision: Boolean
    open var BounceThresholdVelocity: Number
    open var FrictionCombineMode: String /* "Average" | "Min" | "Multiply" | "Max" | "EFrictionCombineMode_MAX" */
    open var RestitutionCombineMode: String /* "Average" | "Min" | "Multiply" | "Max" | "EFrictionCombineMode_MAX" */
    open var MaxAngularVelocity: Number
    open var MaxDepenetrationVelocity: Number
    open var ContactOffsetMultiplier: Number
    open var MinContactOffset: Number
    open var MaxContactOffset: Number
    open var bSimulateSkeletalMeshOnDedicatedServer: Boolean
    open var DefaultShapeComplexity: String /* "CTF_UseDefault" | "CTF_UseSimpleAndComplex" | "CTF_UseSimpleAsComplex" | "CTF_UseComplexAsSimple" | "CTF_MAX" */
    open var SolverOptions: ChaosSolverConfiguration

    companion object {
        fun Load(ResourceName: String): PhysicsSettingsCore
        fun Find(Outer: UObject, ResourceName: String): PhysicsSettingsCore
        fun GetDefaultObject(): PhysicsSettingsCore
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PhysicsSettingsCore
        fun C(Other: UObject): PhysicsSettingsCore
        fun C(Other: Any): PhysicsSettingsCore
    }
}

external open class AudioEndpointSettingsBase : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AudioEndpointSettingsBase
        fun Find(Outer: UObject, ResourceName: String): AudioEndpointSettingsBase
        fun GetDefaultObject(): AudioEndpointSettingsBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AudioEndpointSettingsBase
        fun C(Other: UObject): AudioEndpointSettingsBase
        fun C(Other: Any): AudioEndpointSettingsBase
    }
}

external open class DummyEndpointSettings : AudioEndpointSettingsBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DummyEndpointSettings
        fun Find(Outer: UObject, ResourceName: String): DummyEndpointSettings
        fun GetDefaultObject(): DummyEndpointSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DummyEndpointSettings
        fun C(Other: UObject): DummyEndpointSettings
        fun C(Other: Any): DummyEndpointSettings
    }
}

external open class SoundfieldEndpointSettingsBase : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundfieldEndpointSettingsBase
        fun Find(Outer: UObject, ResourceName: String): SoundfieldEndpointSettingsBase
        fun GetDefaultObject(): SoundfieldEndpointSettingsBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundfieldEndpointSettingsBase
        fun C(Other: UObject): SoundfieldEndpointSettingsBase
        fun C(Other: Any): SoundfieldEndpointSettingsBase
    }
}

external open class SoundfieldEffectSettingsBase : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundfieldEffectSettingsBase
        fun Find(Outer: UObject, ResourceName: String): SoundfieldEffectSettingsBase
        fun GetDefaultObject(): SoundfieldEffectSettingsBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundfieldEffectSettingsBase
        fun C(Other: UObject): SoundfieldEffectSettingsBase
        fun C(Other: Any): SoundfieldEffectSettingsBase
    }
}

external open class SoundfieldEffectBase : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Settings: SoundfieldEffectSettingsBase

    companion object {
        fun Load(ResourceName: String): SoundfieldEffectBase
        fun Find(Outer: UObject, ResourceName: String): SoundfieldEffectBase
        fun GetDefaultObject(): SoundfieldEffectBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundfieldEffectBase
        fun C(Other: UObject): SoundfieldEffectBase
        fun C(Other: Any): SoundfieldEffectBase
    }
}

external open class PropertyAccess : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PropertyAccess
        fun Find(Outer: UObject, ResourceName: String): PropertyAccess
        fun GetDefaultObject(): PropertyAccess
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PropertyAccess
        fun C(Other: UObject): PropertyAccess
        fun C(Other: Any): PropertyAccess
    }
}

external open class PropertyEventBroadcaster : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PropertyEventBroadcaster
        fun Find(Outer: UObject, ResourceName: String): PropertyEventBroadcaster
        fun GetDefaultObject(): PropertyEventBroadcaster
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PropertyEventBroadcaster
        fun C(Other: UObject): PropertyEventBroadcaster
        fun C(Other: Any): PropertyEventBroadcaster
    }
}

external open class PropertyEventSubscriber : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PropertyEventSubscriber
        fun Find(Outer: UObject, ResourceName: String): PropertyEventSubscriber
        fun GetDefaultObject(): PropertyEventSubscriber
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PropertyEventSubscriber
        fun C(Other: UObject): PropertyEventSubscriber
        fun C(Other: Any): PropertyEventSubscriber
    }
}

external open class ClothConfigBase : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ClothConfigBase
        fun Find(Outer: UObject, ResourceName: String): ClothConfigBase
        fun GetDefaultObject(): ClothConfigBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClothConfigBase
        fun C(Other: UObject): ClothConfigBase
        fun C(Other: Any): ClothConfigBase
    }
}

external open class ClothSharedSimConfigBase : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ClothSharedSimConfigBase
        fun Find(Outer: UObject, ResourceName: String): ClothSharedSimConfigBase
        fun GetDefaultObject(): ClothSharedSimConfigBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClothSharedSimConfigBase
        fun C(Other: UObject): ClothSharedSimConfigBase
        fun C(Other: Any): ClothSharedSimConfigBase
    }
}

external open class ClothVertBoneData {
    open var NumInfluences: Number
    open var BoneIndices: Any
    open var BoneWeights: Number
    open fun clone(): ClothVertBoneData

    companion object {
        fun C(Other: UObject): ClothVertBoneData
        fun C(Other: Any): ClothVertBoneData
    }
}

external open class ClothPhysicalMeshDataBase_Legacy : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Vertices: Array<Vector>
    open var Normals: Array<Vector>
    open var VertexColors: Array<Color>
    open var Indices: Array<Any>
    open var InverseMasses: Array<Number>
    open var BoneData: Array<ClothVertBoneData>
    open var NumFixedVerts: Number
    open var MaxBoneWeights: Number
    open var SelfCollisionIndices: Array<Any>

    companion object {
        fun Load(ResourceName: String): ClothPhysicalMeshDataBase_Legacy
        fun Find(Outer: UObject, ResourceName: String): ClothPhysicalMeshDataBase_Legacy
        fun GetDefaultObject(): ClothPhysicalMeshDataBase_Legacy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClothPhysicalMeshDataBase_Legacy
        fun C(Other: UObject): ClothPhysicalMeshDataBase_Legacy
        fun C(Other: Any): ClothPhysicalMeshDataBase_Legacy
    }
}

external open class JsonUtilitiesDummyObject : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): JsonUtilitiesDummyObject
        fun Find(Outer: UObject, ResourceName: String): JsonUtilitiesDummyObject
        fun GetDefaultObject(): JsonUtilitiesDummyObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): JsonUtilitiesDummyObject
        fun C(Other: UObject): JsonUtilitiesDummyObject
        fun C(Other: Any): JsonUtilitiesDummyObject
    }
}

external object EMultiBoxType {
    var MenuBar: String /* "MenuBar" */
    var ToolBar: String /* "ToolBar" */
    var VerticalToolBar: String /* "VerticalToolBar" */
    var UniformToolBar: String /* "UniformToolBar" */
    var Menu: String /* "Menu" */
    var ButtonRow: String /* "ButtonRow" */
    var EMultiBoxType_MAX: String /* "EMultiBoxType_MAX" */
}

external open class ToolMenuOwner {
    open fun clone(): ToolMenuOwner

    companion object {
        fun C(Other: UObject): ToolMenuOwner
        fun C(Other: Any): ToolMenuOwner
    }
}

external open class ToolMenuContext {
    open var ContextObjects: Array<UObject>
    open fun clone(): ToolMenuContext

    companion object {
        fun C(Other: UObject): ToolMenuContext
        fun C(Other: Any): ToolMenuContext
    }
}

external object EMultiBlockType {
    var None: String /* "None" */
    var ButtonRow: String /* "ButtonRow" */
    var EditableText: String /* "EditableText" */
    var Heading: String /* "Heading" */
    var MenuEntry: String /* "MenuEntry" */
    var Separator: String /* "Separator" */
    var ToolBarButton: String /* "ToolBarButton" */
    var ToolBarComboButton: String /* "ToolBarComboButton" */
    var Widget: String /* "Widget" */
    var EMultiBlockType_MAX: String /* "EMultiBlockType_MAX" */
}

external object EUserInterfaceActionType {
    var None: String /* "None" */
    var Button: String /* "Button" */
    var ToggleButton: String /* "ToggleButton" */
    var RadioButton: String /* "RadioButton" */
    var Check: String /* "Check" */
    var CollapsedButton: String /* "CollapsedButton" */
    var EUserInterfaceActionType_MAX: String /* "EUserInterfaceActionType_MAX" */
}

external object EToolMenuInsertType {
    var Default: String /* "Default" */
    var Before: String /* "Before" */
    var After: String /* "After" */
    var First: String /* "First" */
    var EToolMenuInsertType_MAX: String /* "EToolMenuInsertType_MAX" */
}

external open class ToolMenuInsert {
    open var Name: String
    open var Position: String /* "Default" | "Before" | "After" | "First" | "EToolMenuInsertType_MAX" */
    open fun clone(): ToolMenuInsert

    companion object {
        fun C(Other: UObject): ToolMenuInsert
        fun C(Other: Any): ToolMenuInsert
    }
}

external open class ScriptSlateIcon {
    open var StyleSetName: String
    open var StyleName: String
    open var SmallStyleName: String
    open fun clone(): ScriptSlateIcon

    companion object {
        fun C(Other: UObject): ScriptSlateIcon
        fun C(Other: Any): ScriptSlateIcon
    }
}

external open class ToolMenuEntryScriptDataAdvanced {
    open var TutorialHighlight: String
    open var EntryType: String /* "None" | "ButtonRow" | "EditableText" | "Heading" | "MenuEntry" | "Separator" | "ToolBarButton" | "ToolBarComboButton" | "Widget" | "EMultiBlockType_MAX" */
    open var UserInterfaceActionType: String /* "None" | "Button" | "ToggleButton" | "RadioButton" | "Check" | "CollapsedButton" | "EUserInterfaceActionType_MAX" */
    open var bIsSubMenu: Boolean
    open var bOpenSubMenuOnClick: Boolean
    open var bShouldCloseWindowAfterMenuSelection: Boolean
    open var bSimpleComboBox: Boolean
    open fun clone(): ToolMenuEntryScriptDataAdvanced

    companion object {
        fun C(Other: UObject): ToolMenuEntryScriptDataAdvanced
        fun C(Other: Any): ToolMenuEntryScriptDataAdvanced
    }
}

external open class ToolMenuEntryScriptData {
    open var Menu: String
    open var Section: String
    open var Name: String
    open var Label: String
    open var Tooltip: String
    open var Icon: ScriptSlateIcon
    open var OwnerName: String
    open var InsertPosition: ToolMenuInsert
    open var Advanced: ToolMenuEntryScriptDataAdvanced
    open fun clone(): ToolMenuEntryScriptData

    companion object {
        fun C(Other: UObject): ToolMenuEntryScriptData
        fun C(Other: Any): ToolMenuEntryScriptData
    }
}

external object ECheckBoxState {
    var Unchecked: String /* "Unchecked" */
    var Checked: String /* "Checked" */
    var Undetermined: String /* "Undetermined" */
    var ECheckBoxState_MAX: String /* "ECheckBoxState_MAX" */
}

external open class ToolMenuEntryScript : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Data: ToolMenuEntryScriptData
    open fun RegisterMenuEntry()
    open fun IsVisible(Context: ToolMenuContext): Boolean
    open fun InitEntry(OwnerName: String, Menu: String, Section: String, Name: String, Label: String, Tooltip: String)
    open fun GetToolTip(Context: ToolMenuContext): String
    open fun GetLabel(Context: ToolMenuContext): String
    open fun GetIcon(Context: ToolMenuContext): ScriptSlateIcon
    open fun GetCheckState(Context: ToolMenuContext): String /* "Unchecked" | "Checked" | "Undetermined" | "ECheckBoxState_MAX" */
    open fun Execute(Context: ToolMenuContext)
    open fun ConstructMenuEntry(Menu: ToolMenu, SectionName: String, Context: ToolMenuContext)
    open fun CanExecute(Context: ToolMenuContext): Boolean

    companion object {
        fun Load(ResourceName: String): ToolMenuEntryScript
        fun Find(Outer: UObject, ResourceName: String): ToolMenuEntryScript
        fun GetDefaultObject(): ToolMenuEntryScript
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ToolMenuEntryScript
        fun C(Other: UObject): ToolMenuEntryScript
        fun C(Other: Any): ToolMenuEntryScript
    }
}

external open class ToolMenuEntry {
    open var Name: String
    open var Owner: ToolMenuOwner
    open var Type: String /* "None" | "ButtonRow" | "EditableText" | "Heading" | "MenuEntry" | "Separator" | "ToolBarButton" | "ToolBarComboButton" | "Widget" | "EMultiBlockType_MAX" */
    open var UserInterfaceActionType: String /* "None" | "Button" | "ToggleButton" | "RadioButton" | "Check" | "CollapsedButton" | "EUserInterfaceActionType_MAX" */
    open var TutorialHighlightName: String
    open var InsertPosition: ToolMenuInsert
    open var bShouldCloseWindowAfterMenuSelection: Boolean
    open var ScriptObject: ToolMenuEntryScript
    open fun clone(): ToolMenuEntry

    companion object {
        fun C(Other: UObject): ToolMenuEntry
        fun C(Other: Any): ToolMenuEntry
    }
}

external open class ToolMenuSectionDynamic : UObject {
    constructor()
    constructor(Outer: UObject)
    open fun ConstructSections(Menu: ToolMenu, Context: ToolMenuContext)

    companion object {
        fun Load(ResourceName: String): ToolMenuSectionDynamic
        fun Find(Outer: UObject, ResourceName: String): ToolMenuSectionDynamic
        fun GetDefaultObject(): ToolMenuSectionDynamic
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ToolMenuSectionDynamic
        fun C(Other: UObject): ToolMenuSectionDynamic
        fun C(Other: Any): ToolMenuSectionDynamic
    }
}

external open class ToolMenuSection {
    open var Name: String
    open var Owner: ToolMenuOwner
    open var Blocks: Array<ToolMenuEntry>
    open var InsertPosition: ToolMenuInsert
    open var Context: ToolMenuContext
    open var ToolMenuSectionDynamic: ToolMenuSectionDynamic
    open fun clone(): ToolMenuSection

    companion object {
        fun C(Other: UObject): ToolMenuSection
        fun C(Other: Any): ToolMenuSection
    }
}

external open class ToolMenu : ToolMenuBase {
    constructor()
    constructor(Outer: UObject)
    open var MenuName: String
    open var MenuParent: String
    open var StyleName: String
    open var TutorialHighlightName: String
    open var MenuType: String /* "MenuBar" | "ToolBar" | "VerticalToolBar" | "UniformToolBar" | "Menu" | "ButtonRow" | "EMultiBoxType_MAX" */
    open var bShouldCloseWindowAfterMenuSelection: Boolean
    open var bCloseSelfOnly: Boolean
    open var bSearchable: Boolean
    open var bToolBarIsFocusable: Boolean
    open var bToolBarForceSmallIcons: Boolean
    open var bPreventCustomization: Boolean
    open var MenuOwner: ToolMenuOwner
    open var Context: ToolMenuContext
    open var Sections: Array<ToolMenuSection>
    open var SubMenuParent: ToolMenu
    open var SubMenuSourceEntryName: String
    open fun InitMenu(Owner: ToolMenuOwner, Name: String, Parent: String, Type: String /* "MenuBar" | "ToolBar" | "VerticalToolBar" | "UniformToolBar" | "Menu" | "ButtonRow" | "EMultiBoxType_MAX" */)
    open fun AddSubMenuScript(Owner: String, SectionName: String, Name: String, Label: String, Tooltip: String): ToolMenu
    open fun AddSection(SectionName: String, Label: String, InsertName: String, InsertType: String /* "Default" | "Before" | "After" | "First" | "EToolMenuInsertType_MAX" */)
    open fun AddMenuEntryObject(InObject: ToolMenuEntryScript)
    open fun AddMenuEntry(SectionName: String, Args: ToolMenuEntry)
    open fun AddDynamicSection(SectionName: String, UObject: ToolMenuSectionDynamic)

    companion object {
        fun Load(ResourceName: String): ToolMenu
        fun Find(Outer: UObject, ResourceName: String): ToolMenu
        fun GetDefaultObject(): ToolMenu
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ToolMenu
        fun C(Other: UObject): ToolMenu
        fun C(Other: Any): ToolMenu
    }
}

external open class ToolMenuContextBase : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ToolMenuContextBase
        fun Find(Outer: UObject, ResourceName: String): ToolMenuContextBase
        fun GetDefaultObject(): ToolMenuContextBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ToolMenuContextBase
        fun C(Other: UObject): ToolMenuContextBase
        fun C(Other: Any): ToolMenuContextBase
    }
}

external open class SlateTabManagerContext : ToolMenuContextBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SlateTabManagerContext
        fun Find(Outer: UObject, ResourceName: String): SlateTabManagerContext
        fun GetDefaultObject(): SlateTabManagerContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SlateTabManagerContext
        fun C(Other: UObject): SlateTabManagerContext
        fun C(Other: Any): SlateTabManagerContext
    }
}

external open class CustomizedToolMenu {
    open var Name: String
    open var Entries: Any
    open var Sections: Any
    open var EntryOrder: Any
    open var SectionOrder: Array<String>
    open fun clone(): CustomizedToolMenu

    companion object {
        fun C(Other: UObject): CustomizedToolMenu
        fun C(Other: Any): CustomizedToolMenu
    }
}

external open class ToolMenus : UObject {
    constructor()
    constructor(Outer: UObject)
    open var CustomizedMenus: Array<CustomizedToolMenu>
    open var MenuSubstitutionsDuringGenerate: Any
    open var Menus: Any
    open fun UnregisterOwnerByName(InOwnerName: String)
    open fun SetSectionPosition(MenuName: String, SectionName: String, OtherSectionName: String, PositionType: String /* "Default" | "Before" | "After" | "First" | "EToolMenuInsertType_MAX" */)
    open fun SetSectionLabel(MenuName: String, SectionName: String, Label: String)
    open fun RemoveSection(MenuName: String, Section: String)
    open fun RemoveMenu(MenuName: String)
    open fun RemoveEntry(MenuName: String, Section: String, Name: String)
    open fun RegisterMenu(Name: String, Parent: String, Type: String /* "MenuBar" | "ToolBar" | "VerticalToolBar" | "UniformToolBar" | "Menu" | "ButtonRow" | "EMultiBoxType_MAX" */, bWarnIfAlreadyRegistered: Boolean): ToolMenu
    open fun RefreshMenuWidget(Name: String): Boolean
    open fun RefreshAllWidgets()
    open fun IsMenuRegistered(Name: String): Boolean
    open fun FindMenu(Name: String): ToolMenu
    open fun ExtendMenu(Name: String): ToolMenu

    companion object {
        fun Load(ResourceName: String): ToolMenus
        fun Find(Outer: UObject, ResourceName: String): ToolMenus
        fun GetDefaultObject(): ToolMenus
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ToolMenus
        fun GetActorGroupingUtils(): ToolMenus
        fun FindContext(InContext: ToolMenuContext, InClass: UnrealEngineClass): UObject
        fun AddMenuEntryObject(MenuEntryObject: ToolMenuEntryScript): Boolean
        fun C(Other: UObject): ToolMenus
        fun C(Other: Any): ToolMenus
    }
}

external open class ToolMenuContextExtensions : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ToolMenuContextExtensions
        fun Find(Outer: UObject, ResourceName: String): ToolMenuContextExtensions
        fun GetDefaultObject(): ToolMenuContextExtensions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ToolMenuContextExtensions
        fun FindByClass(Context: ToolMenuContext, InClass: UnrealEngineClass): UObject
        fun C(Other: UObject): ToolMenuContextExtensions
        fun C(Other: Any): ToolMenuContextExtensions
    }
}

external object EToolMenuStringCommandType {
    var Command: String /* "Command" */
    var Python: String /* "Python" */
    var Custom: String /* "Custom" */
    var EToolMenuStringCommandType_MAX: String /* "EToolMenuStringCommandType_MAX" */
}

external open class ToolMenuStringCommand {
    open var Type: String /* "Command" | "Python" | "Custom" | "EToolMenuStringCommandType_MAX" */
    open var CustomType: String
    open var string: String
    open fun clone(): ToolMenuStringCommand

    companion object {
        fun C(Other: UObject): ToolMenuStringCommand
        fun C(Other: Any): ToolMenuStringCommand
    }
}

external interface `T$568` {
    var Target: ToolMenuEntry
}

external interface `T$569` {
    var Name: String
}

external interface `T$570` {
    var Type: String /* "Command" | "Python" | "Custom" | "EToolMenuStringCommandType_MAX" */
    var CustomType: String
    var string: String
}

external interface `T$571` {
    var StyleSetName: String
    var StyleName: String
    var SmallStyleName: String
}

external open class ToolMenuEntryExtensions : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ToolMenuEntryExtensions
        fun Find(Outer: UObject, ResourceName: String): ToolMenuEntryExtensions
        fun GetDefaultObject(): ToolMenuEntryExtensions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ToolMenuEntryExtensions
        fun SetToolTip(Target: ToolMenuEntry = definedExternally, Tooltip: String = definedExternally): `T$568`
        fun SetStringCommand(Target: ToolMenuEntry = definedExternally, Type: String /* "Command" | "Python" | "Custom" | "EToolMenuStringCommandType_MAX" */ = definedExternally, CustomType: String = definedExternally, string: String = definedExternally): `T$568`
        fun SetLabel(Target: ToolMenuEntry = definedExternally, Label: String = definedExternally): `T$568`
        fun SetIcon(Target: ToolMenuEntry = definedExternally, StyleSetName: String = definedExternally, StyleName: String = definedExternally, SmallStyleName: String = definedExternally): `T$568`
        fun MakeToolMenuOwner(Name: String): ToolMenuOwner
        fun MakeStringCommand(Type: String /* "Command" | "Python" | "Custom" | "EToolMenuStringCommandType_MAX" */, CustomType: String, string: String): ToolMenuStringCommand
        fun MakeScriptSlateIcon(StyleSetName: String, StyleName: String, SmallStyleName: String): ScriptSlateIcon
        fun InitMenuEntry(InOwner: String, InName: String, InLabel: String, InToolTip: String, CommandType: String /* "Command" | "Python" | "Custom" | "EToolMenuStringCommandType_MAX" */, CustomCommandType: String, CommandString: String): ToolMenuEntry
        fun GetToolTip(Target: ToolMenuEntry): String
        fun GetLabel(Target: ToolMenuEntry): String
        fun BreakToolMenuOwner(InValue: ToolMenuOwner, Name: String = definedExternally): `T$569`
        fun BreakStringCommand(InValue: ToolMenuStringCommand, Type: String /* "Command" | "Python" | "Custom" | "EToolMenuStringCommandType_MAX" */ = definedExternally, CustomType: String = definedExternally, string: String = definedExternally): `T$570`
        fun BreakScriptSlateIcon(InValue: ScriptSlateIcon, StyleSetName: String = definedExternally, StyleName: String = definedExternally, SmallStyleName: String = definedExternally): `T$571`
        fun C(Other: UObject): ToolMenuEntryExtensions
        fun C(Other: Any): ToolMenuEntryExtensions
    }
}

external interface `T$572` {
    var Section: ToolMenuSection
}

external open class ToolMenuSectionExtensions : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ToolMenuSectionExtensions
        fun Find(Outer: UObject, ResourceName: String): ToolMenuSectionExtensions
        fun GetDefaultObject(): ToolMenuSectionExtensions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ToolMenuSectionExtensions
        fun SetLabel(Section: ToolMenuSection = definedExternally, Label: String = definedExternally): `T$572`
        fun GetLabel(Section: ToolMenuSection): String
        fun AddEntryObject(Section: ToolMenuSection = definedExternally, InObject: ToolMenuEntryScript = definedExternally): `T$572`
        fun AddEntry(Section: ToolMenuSection = definedExternally, Args: ToolMenuEntry = definedExternally): `T$572`
        fun C(Other: UObject): ToolMenuSectionExtensions
        fun C(Other: Any): ToolMenuSectionExtensions
    }
}

external open class LiveLinkRole : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LiveLinkRole
        fun Find(Outer: UObject, ResourceName: String): LiveLinkRole
        fun GetDefaultObject(): LiveLinkRole
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkRole
        fun C(Other: UObject): LiveLinkRole
        fun C(Other: Any): LiveLinkRole
    }
}

external open class LiveLinkBasicRole : LiveLinkRole {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LiveLinkBasicRole
        fun Find(Outer: UObject, ResourceName: String): LiveLinkBasicRole
        fun GetDefaultObject(): LiveLinkBasicRole
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkBasicRole
        fun C(Other: UObject): LiveLinkBasicRole
        fun C(Other: Any): LiveLinkBasicRole
    }
}

external open class LiveLinkAnimationRole : LiveLinkBasicRole {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LiveLinkAnimationRole
        fun Find(Outer: UObject, ResourceName: String): LiveLinkAnimationRole
        fun GetDefaultObject(): LiveLinkAnimationRole
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkAnimationRole
        fun C(Other: UObject): LiveLinkAnimationRole
        fun C(Other: Any): LiveLinkAnimationRole
    }
}

external open class LiveLinkTransformRole : LiveLinkBasicRole {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LiveLinkTransformRole
        fun Find(Outer: UObject, ResourceName: String): LiveLinkTransformRole
        fun GetDefaultObject(): LiveLinkTransformRole
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkTransformRole
        fun C(Other: UObject): LiveLinkTransformRole
        fun C(Other: Any): LiveLinkTransformRole
    }
}

external open class LiveLinkCameraRole : LiveLinkTransformRole {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LiveLinkCameraRole
        fun Find(Outer: UObject, ResourceName: String): LiveLinkCameraRole
        fun GetDefaultObject(): LiveLinkCameraRole
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkCameraRole
        fun C(Other: UObject): LiveLinkCameraRole
        fun C(Other: Any): LiveLinkCameraRole
    }
}

external open class LiveLinkController : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LiveLinkController
        fun Find(Outer: UObject, ResourceName: String): LiveLinkController
        fun GetDefaultObject(): LiveLinkController
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkController
        fun C(Other: UObject): LiveLinkController
        fun C(Other: Any): LiveLinkController
    }
}

external object ELiveLinkSourceMode {
    var Latest: String /* "Latest" */
    var EngineTime: String /* "EngineTime" */
    var Timecode: String /* "Timecode" */
    var ELiveLinkSourceMode_MAX: String /* "ELiveLinkSourceMode_MAX" */
}

external open class LiveLinkSourceBufferManagementSettings {
    open var bValidEngineTimeEnabled: Boolean
    open var ValidEngineTime: Number
    open var EngineTimeOffset: Number
    open var EngineTimeClockOffset: Any
    open var TimecodeFrameRate: FrameRate
    open var bGenerateSubFrame: Boolean
    open var DetectedFrameRate: FrameRate
    open var bUseTimecodeSmoothLatest: Boolean
    open var SourceTimecodeFrameRate: FrameRate
    open var bValidTimecodeFrameEnabled: Boolean
    open var ValidTimecodeFrame: Number
    open var TimecodeFrameOffset: Number
    open var TimecodeClockOffset: Any
    open var LatestOffset: Number
    open var MaxNumberOfFrameToBuffered: Number
    open var bKeepAtLeastOneFrame: Boolean
    open fun clone(): LiveLinkSourceBufferManagementSettings

    companion object {
        fun C(Other: UObject): LiveLinkSourceBufferManagementSettings
        fun C(Other: Any): LiveLinkSourceBufferManagementSettings
    }
}

external open class LiveLinkSourceFactory : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LiveLinkSourceFactory
        fun Find(Outer: UObject, ResourceName: String): LiveLinkSourceFactory
        fun GetDefaultObject(): LiveLinkSourceFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkSourceFactory
        fun C(Other: UObject): LiveLinkSourceFactory
        fun C(Other: Any): LiveLinkSourceFactory
    }
}

external open class LiveLinkBaseBlueprintData {
    open fun clone(): LiveLinkBaseBlueprintData

    companion object {
        fun C(Other: UObject): LiveLinkBaseBlueprintData
        fun C(Other: Any): LiveLinkBaseBlueprintData
    }
}

external interface `T$573` {
    var OutBlueprintData: LiveLinkBaseBlueprintData
    var `$`: Boolean
}

external open class LiveLinkSubjectName {
    open var Name: String
    open fun clone(): LiveLinkSubjectName
    open fun EvaluateLiveLinkFrameAtSceneTime(Role: UnrealEngineClass, SceneTime: Timecode, OutBlueprintData: LiveLinkBaseBlueprintData = definedExternally): `T$573`
    open fun EvaluateLiveLinkFrameAtWorldTimeOffset(Role: UnrealEngineClass, WorldTimeOffset: Number, OutBlueprintData: LiveLinkBaseBlueprintData = definedExternally): `T$573`
    open fun EvaluateLiveLinkFrame(Role: UnrealEngineClass, OutBlueprintData: LiveLinkBaseBlueprintData = definedExternally): `T$573`
    open fun GetLiveLinkSubjectRole(): UnrealEngineClass
    open fun IsLiveLinkSubjectEnabled(): Boolean

    companion object {
        fun C(Other: UObject): LiveLinkSubjectName
        fun C(Other: Any): LiveLinkSubjectName
        fun EvaluateLiveLinkFrameAtSceneTime(SubjectName: LiveLinkSubjectName, Role: UnrealEngineClass, SceneTime: Timecode, OutBlueprintData: LiveLinkBaseBlueprintData = definedExternally): `T$573`
        fun EvaluateLiveLinkFrameAtWorldTimeOffset(SubjectName: LiveLinkSubjectName, Role: UnrealEngineClass, WorldTimeOffset: Number, OutBlueprintData: LiveLinkBaseBlueprintData = definedExternally): `T$573`
        fun EvaluateLiveLinkFrame(SubjectName: LiveLinkSubjectName, Role: UnrealEngineClass, OutBlueprintData: LiveLinkBaseBlueprintData = definedExternally): `T$573`
        fun GetLiveLinkSubjectRole(SubjectName: LiveLinkSubjectName): UnrealEngineClass
        fun IsLiveLinkSubjectEnabled(SubjectName: LiveLinkSubjectName): Boolean
    }
}

external open class LiveLinkSourceDebugInfo {
    open var SubjectName: LiveLinkSubjectName
    open var SnapshotIndex: Number
    open var NumberOfBufferAtSnapshot: Number
    open fun clone(): LiveLinkSourceDebugInfo

    companion object {
        fun C(Other: UObject): LiveLinkSourceDebugInfo
        fun C(Other: Any): LiveLinkSourceDebugInfo
    }
}

external open class LiveLinkSourceSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Mode: String /* "Latest" | "EngineTime" | "Timecode" | "ELiveLinkSourceMode_MAX" */
    open var BufferSettings: LiveLinkSourceBufferManagementSettings
    open var ConnectionString: String
    open var Factory: UnrealEngineClass
    open var SourceDebugInfos: Array<LiveLinkSourceDebugInfo>

    companion object {
        fun Load(ResourceName: String): LiveLinkSourceSettings
        fun Find(Outer: UObject, ResourceName: String): LiveLinkSourceSettings
        fun GetDefaultObject(): LiveLinkSourceSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkSourceSettings
        fun C(Other: UObject): LiveLinkSourceSettings
        fun C(Other: Any): LiveLinkSourceSettings
    }
}

external open class LiveLinkCurveConversionSettings {
    open var CurveConversionAssetMap: Any
    open fun clone(): LiveLinkCurveConversionSettings

    companion object {
        fun C(Other: UObject): LiveLinkCurveConversionSettings
        fun C(Other: Any): LiveLinkCurveConversionSettings
    }
}

external open class LiveLinkCurveRemapSettings : LiveLinkSourceSettings {
    constructor()
    constructor(Outer: UObject)
    open var CurveConversionSettings: LiveLinkCurveConversionSettings

    companion object {
        fun Load(ResourceName: String): LiveLinkCurveRemapSettings
        fun Find(Outer: UObject, ResourceName: String): LiveLinkCurveRemapSettings
        fun GetDefaultObject(): LiveLinkCurveRemapSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkCurveRemapSettings
        fun C(Other: UObject): LiveLinkCurveRemapSettings
        fun C(Other: Any): LiveLinkCurveRemapSettings
    }
}

external open class LiveLinkFrameInterpolationProcessor : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LiveLinkFrameInterpolationProcessor
        fun Find(Outer: UObject, ResourceName: String): LiveLinkFrameInterpolationProcessor
        fun GetDefaultObject(): LiveLinkFrameInterpolationProcessor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkFrameInterpolationProcessor
        fun C(Other: UObject): LiveLinkFrameInterpolationProcessor
        fun C(Other: Any): LiveLinkFrameInterpolationProcessor
    }
}

external open class LiveLinkFramePreProcessor : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LiveLinkFramePreProcessor
        fun Find(Outer: UObject, ResourceName: String): LiveLinkFramePreProcessor
        fun GetDefaultObject(): LiveLinkFramePreProcessor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkFramePreProcessor
        fun C(Other: UObject): LiveLinkFramePreProcessor
        fun C(Other: Any): LiveLinkFramePreProcessor
    }
}

external open class LiveLinkFrameTranslator : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LiveLinkFrameTranslator
        fun Find(Outer: UObject, ResourceName: String): LiveLinkFrameTranslator
        fun GetDefaultObject(): LiveLinkFrameTranslator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkFrameTranslator
        fun C(Other: UObject): LiveLinkFrameTranslator
        fun C(Other: Any): LiveLinkFrameTranslator
    }
}

external open class LiveLinkLightRole : LiveLinkTransformRole {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LiveLinkLightRole
        fun Find(Outer: UObject, ResourceName: String): LiveLinkLightRole
        fun GetDefaultObject(): LiveLinkLightRole
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkLightRole
        fun C(Other: UObject): LiveLinkLightRole
        fun C(Other: Any): LiveLinkLightRole
    }
}

external open class LiveLinkSubjectSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var PreProcessors: Array<LiveLinkFramePreProcessor>
    open var InterpolationProcessor: LiveLinkFrameInterpolationProcessor
    open var Translators: Array<LiveLinkFrameTranslator>
    open var Role: UnrealEngineClass
    open var FrameRate: FrameRate
    open var bRebroadcastSubject: Boolean

    companion object {
        fun Load(ResourceName: String): LiveLinkSubjectSettings
        fun Find(Outer: UObject, ResourceName: String): LiveLinkSubjectSettings
        fun GetDefaultObject(): LiveLinkSubjectSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkSubjectSettings
        fun C(Other: UObject): LiveLinkSubjectSettings
        fun C(Other: Any): LiveLinkSubjectSettings
    }
}

external open class LiveLinkVirtualSubject : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Role: UnrealEngineClass
    open var Subjects: Array<LiveLinkSubjectName>
    open var FrameTranslators: Array<LiveLinkFrameTranslator>
    open var bRebroadcastSubject: Boolean

    companion object {
        fun Load(ResourceName: String): LiveLinkVirtualSubject
        fun Find(Outer: UObject, ResourceName: String): LiveLinkVirtualSubject
        fun GetDefaultObject(): LiveLinkVirtualSubject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LiveLinkVirtualSubject
        fun C(Other: UObject): LiveLinkVirtualSubject
        fun C(Other: Any): LiveLinkVirtualSubject
    }
}

external object EPIEPreviewDeviceType {
    var Unset: String /* "Unset" */
    var Android: String /* "Android" */
    var IOS: String /* "IOS" */
    var TVOS: String /* "TVOS" */
    var Switch: String /* "Switch" */
    var MAX: String /* "MAX" */
}

external open class PIEPreviewDeviceSpecification : UObject {
    constructor()
    constructor(Outer: UObject)
    open var PreviewDeviceType: String /* "Unset" | "Android" | "IOS" | "TVOS" | "Switch" | "MAX" */
    open var GPUFamily: String
    open var GLVersion: String
    open var VulkanVersion: String
    open var AndroidVersion: String
    open var DeviceMake: String
    open var DeviceModel: String
    open var DeviceBuildNumber: String
    open var UsingHoudini: Boolean
    open var Hardware: String
    open var Chipset: String

    companion object {
        fun Load(ResourceName: String): PIEPreviewDeviceSpecification
        fun Find(Outer: UObject, ResourceName: String): PIEPreviewDeviceSpecification
        fun GetDefaultObject(): PIEPreviewDeviceSpecification
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PIEPreviewDeviceSpecification
        fun C(Other: UObject): PIEPreviewDeviceSpecification
        fun C(Other: Any): PIEPreviewDeviceSpecification
    }
}

external open class BlueprintFunctionLibrary : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlueprintFunctionLibrary
        fun Find(Outer: UObject, ResourceName: String): BlueprintFunctionLibrary
        fun GetDefaultObject(): BlueprintFunctionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintFunctionLibrary
        fun C(Other: UObject): BlueprintFunctionLibrary
        fun C(Other: Any): BlueprintFunctionLibrary
    }
}

external interface `T$574` {
    var OutActors: Array<Actor>
}

external interface `T$575` {
    var GameplayTags: Array<GameplayTag>
}

external open class BlueprintGameplayTagLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlueprintGameplayTagLibrary
        fun Find(Outer: UObject, ResourceName: String): BlueprintGameplayTagLibrary
        fun GetDefaultObject(): BlueprintGameplayTagLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintGameplayTagLibrary
        fun RemoveGameplayTag(TagContainer: GameplayTagContainer = definedExternally, Tag: GameplayTag = definedExternally): `T$258`
        fun NotEqual_TagTag(A: GameplayTag, B: String): Boolean
        fun NotEqual_TagContainerTagContainer(A: GameplayTagContainer, B: String): Boolean
        fun NotEqual_GameplayTagContainer(A: GameplayTagContainer, B: GameplayTagContainer): Boolean
        fun NotEqual_GameplayTag(A: GameplayTag, B: GameplayTag): Boolean
        fun MatchesTag(TagOne: GameplayTag, TagTwo: GameplayTag, bExactMatch: Boolean): Boolean
        fun MatchesAnyTags(TagOne: GameplayTag, OtherContainer: GameplayTagContainer, bExactMatch: Boolean): Boolean
        fun MakeLiteralGameplayTagContainer(Value: GameplayTagContainer): GameplayTagContainer
        fun MakeLiteralGameplayTag(Value: GameplayTag): GameplayTag
        fun MakeGameplayTagQuery(TagQuery: GameplayTagQuery): GameplayTagQuery
        fun MakeGameplayTagContainerFromTag(SingleTag: GameplayTag): GameplayTagContainer
        fun MakeGameplayTagContainerFromArray(GameplayTags: Array<GameplayTag>): GameplayTagContainer
        fun IsTagQueryEmpty(TagQuery: GameplayTagQuery): Boolean
        fun IsGameplayTagValid(GameplayTag: GameplayTag): Boolean
        fun HasTag(TagContainer: GameplayTagContainer, Tag: GameplayTag, bExactMatch: Boolean): Boolean
        fun HasAnyTags(TagContainer: GameplayTagContainer, OtherContainer: GameplayTagContainer, bExactMatch: Boolean): Boolean
        fun HasAllTags(TagContainer: GameplayTagContainer, OtherContainer: GameplayTagContainer, bExactMatch: Boolean): Boolean
        fun GetTagName(GameplayTag: GameplayTag): String
        fun GetNumGameplayTagsInContainer(TagContainer: GameplayTagContainer): Number
        fun GetDebugStringFromGameplayTagContainer(TagContainer: GameplayTagContainer): String
        fun GetDebugStringFromGameplayTag(GameplayTag: GameplayTag): String
        fun GetAllActorsOfClassMatchingTagQuery(WorldContextObject: UObject, ActorClass: UnrealEngineClass, GameplayTagQuery: GameplayTagQuery, OutActors: Array<Actor> = definedExternally): `T$574`
        fun EqualEqual_GameplayTagContainer(A: GameplayTagContainer, B: GameplayTagContainer): Boolean
        fun EqualEqual_GameplayTag(A: GameplayTag, B: GameplayTag): Boolean
        fun DoesContainerMatchTagQuery(TagContainer: GameplayTagContainer, TagQuery: GameplayTagQuery): Boolean
        fun BreakGameplayTagContainer(GameplayTagContainer: GameplayTagContainer, GameplayTags: Array<GameplayTag> = definedExternally): `T$575`
        fun AppendGameplayTagContainers(InOutTagContainer: GameplayTagContainer = definedExternally, InTagContainer: GameplayTagContainer = definedExternally): `T$256`
        fun AddGameplayTag(TagContainer: GameplayTagContainer = definedExternally, Tag: GameplayTag = definedExternally): `T$255`
        fun C(Other: UObject): BlueprintGameplayTagLibrary
        fun C(Other: Any): BlueprintGameplayTagLibrary
    }
}

external open class GameplayTagAssetInterface : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun HasMatchingGameplayTag(TagToCheck: GameplayTag): Boolean
    open fun HasAnyMatchingGameplayTags(TagContainer: GameplayTagContainer): Boolean
    open fun HasAllMatchingGameplayTags(TagContainer: GameplayTagContainer): Boolean
    open fun GetOwnedGameplayTags(TagContainer: GameplayTagContainer = definedExternally): `T$255`

    companion object {
        fun Load(ResourceName: String): GameplayTagAssetInterface
        fun Find(Outer: UObject, ResourceName: String): GameplayTagAssetInterface
        fun GetDefaultObject(): GameplayTagAssetInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayTagAssetInterface
        fun C(Other: UObject): GameplayTagAssetInterface
        fun C(Other: Any): GameplayTagAssetInterface
    }
}

external open class EditableGameplayTagQueryExpression : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EditableGameplayTagQueryExpression
        fun Find(Outer: UObject, ResourceName: String): EditableGameplayTagQueryExpression
        fun GetDefaultObject(): EditableGameplayTagQueryExpression
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditableGameplayTagQueryExpression
        fun C(Other: UObject): EditableGameplayTagQueryExpression
        fun C(Other: Any): EditableGameplayTagQueryExpression
    }
}

external open class EditableGameplayTagQuery : UObject {
    constructor()
    constructor(Outer: UObject)
    open var UserDescription: String
    open var RootExpression: EditableGameplayTagQueryExpression
    open var TagQueryExportText_Helper: GameplayTagQuery

    companion object {
        fun Load(ResourceName: String): EditableGameplayTagQuery
        fun Find(Outer: UObject, ResourceName: String): EditableGameplayTagQuery
        fun GetDefaultObject(): EditableGameplayTagQuery
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditableGameplayTagQuery
        fun C(Other: UObject): EditableGameplayTagQuery
        fun C(Other: Any): EditableGameplayTagQuery
    }
}

external open class EditableGameplayTagQueryExpression_AnyTagsMatch : EditableGameplayTagQueryExpression {
    constructor()
    constructor(Outer: UObject)
    open var Tags: GameplayTagContainer

    companion object {
        fun Load(ResourceName: String): EditableGameplayTagQueryExpression_AnyTagsMatch
        fun Find(Outer: UObject, ResourceName: String): EditableGameplayTagQueryExpression_AnyTagsMatch
        fun GetDefaultObject(): EditableGameplayTagQueryExpression_AnyTagsMatch
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditableGameplayTagQueryExpression_AnyTagsMatch
        fun C(Other: UObject): EditableGameplayTagQueryExpression_AnyTagsMatch
        fun C(Other: Any): EditableGameplayTagQueryExpression_AnyTagsMatch
    }
}

external open class EditableGameplayTagQueryExpression_AllTagsMatch : EditableGameplayTagQueryExpression {
    constructor()
    constructor(Outer: UObject)
    open var Tags: GameplayTagContainer

    companion object {
        fun Load(ResourceName: String): EditableGameplayTagQueryExpression_AllTagsMatch
        fun Find(Outer: UObject, ResourceName: String): EditableGameplayTagQueryExpression_AllTagsMatch
        fun GetDefaultObject(): EditableGameplayTagQueryExpression_AllTagsMatch
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditableGameplayTagQueryExpression_AllTagsMatch
        fun C(Other: UObject): EditableGameplayTagQueryExpression_AllTagsMatch
        fun C(Other: Any): EditableGameplayTagQueryExpression_AllTagsMatch
    }
}

external open class EditableGameplayTagQueryExpression_NoTagsMatch : EditableGameplayTagQueryExpression {
    constructor()
    constructor(Outer: UObject)
    open var Tags: GameplayTagContainer

    companion object {
        fun Load(ResourceName: String): EditableGameplayTagQueryExpression_NoTagsMatch
        fun Find(Outer: UObject, ResourceName: String): EditableGameplayTagQueryExpression_NoTagsMatch
        fun GetDefaultObject(): EditableGameplayTagQueryExpression_NoTagsMatch
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditableGameplayTagQueryExpression_NoTagsMatch
        fun C(Other: UObject): EditableGameplayTagQueryExpression_NoTagsMatch
        fun C(Other: Any): EditableGameplayTagQueryExpression_NoTagsMatch
    }
}

external open class EditableGameplayTagQueryExpression_AnyExprMatch : EditableGameplayTagQueryExpression {
    constructor()
    constructor(Outer: UObject)
    open var Expressions: Array<EditableGameplayTagQueryExpression>

    companion object {
        fun Load(ResourceName: String): EditableGameplayTagQueryExpression_AnyExprMatch
        fun Find(Outer: UObject, ResourceName: String): EditableGameplayTagQueryExpression_AnyExprMatch
        fun GetDefaultObject(): EditableGameplayTagQueryExpression_AnyExprMatch
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditableGameplayTagQueryExpression_AnyExprMatch
        fun C(Other: UObject): EditableGameplayTagQueryExpression_AnyExprMatch
        fun C(Other: Any): EditableGameplayTagQueryExpression_AnyExprMatch
    }
}

external open class EditableGameplayTagQueryExpression_AllExprMatch : EditableGameplayTagQueryExpression {
    constructor()
    constructor(Outer: UObject)
    open var Expressions: Array<EditableGameplayTagQueryExpression>

    companion object {
        fun Load(ResourceName: String): EditableGameplayTagQueryExpression_AllExprMatch
        fun Find(Outer: UObject, ResourceName: String): EditableGameplayTagQueryExpression_AllExprMatch
        fun GetDefaultObject(): EditableGameplayTagQueryExpression_AllExprMatch
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditableGameplayTagQueryExpression_AllExprMatch
        fun C(Other: UObject): EditableGameplayTagQueryExpression_AllExprMatch
        fun C(Other: Any): EditableGameplayTagQueryExpression_AllExprMatch
    }
}

external open class EditableGameplayTagQueryExpression_NoExprMatch : EditableGameplayTagQueryExpression {
    constructor()
    constructor(Outer: UObject)
    open var Expressions: Array<EditableGameplayTagQueryExpression>

    companion object {
        fun Load(ResourceName: String): EditableGameplayTagQueryExpression_NoExprMatch
        fun Find(Outer: UObject, ResourceName: String): EditableGameplayTagQueryExpression_NoExprMatch
        fun GetDefaultObject(): EditableGameplayTagQueryExpression_NoExprMatch
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditableGameplayTagQueryExpression_NoExprMatch
        fun C(Other: UObject): EditableGameplayTagQueryExpression_NoExprMatch
        fun C(Other: Any): EditableGameplayTagQueryExpression_NoExprMatch
    }
}

external open class TableRowBase {
    open fun clone(): TableRowBase

    companion object {
        fun C(Other: UObject): TableRowBase
        fun C(Other: Any): TableRowBase
    }
}

external interface `T$576` {
    var OutRow: TableRowBase
    var `$`: Boolean
}

external interface `T$577` {
    var OutRowNames: Array<String>
}

external interface `T$578` {
    var OutRowNames: Array<String>
}

external open class DataTable : UObject {
    constructor()
    constructor(Outer: UObject)
    open var RowStruct: ScriptStruct
    open var bStripFromClientBuilds: Boolean
    open var bIgnoreExtraFields: Boolean
    open var bIgnoreMissingFields: Boolean
    open var ImportKeyField: String
    open var AssetImportData: AssetImportData
    open var ImportPath: String
    open var RowStructName: String
    open var RowsSerializedWithTags: Array<Number>
    open var TemporarilyReferencedObjects: Any
    open fun GetDataTableAsJSON(InDTExportFlags: Number): String
    open fun DoesDataTableRowExist(RowName: String): Boolean
    open fun FillDataTableFromCSVFile(CSVFilePath: String): Boolean
    open fun FillDataTableFromCSVString(CSVString: String): Boolean
    open fun FillDataTableFromJSONFile(JSONFilePath: String, ImportRowStruct: ScriptStruct): Boolean
    open fun FillDataTableFromJSONString(JsonString: String): Boolean
    open fun GetDataTableColumnAsString(PropertyName: String): Array<String>
    open fun GetDataTableRowFromName(RowName: String, OutRow: TableRowBase = definedExternally): `T$576`
    open fun GetDataTableRowNames(OutRowNames: Array<String> = definedExternally): `T$577`

    companion object {
        fun Load(ResourceName: String): DataTable
        fun Find(Outer: UObject, ResourceName: String): DataTable
        fun GetDefaultObject(): DataTable
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DataTable
        fun C(Other: UObject): DataTable
        fun C(Other: Any): DataTable
        fun GetDataTableAsJSON(InDataTable: DataTable, InDTExportFlags: Number): String
        fun DoesDataTableRowExist(Table: DataTable, RowName: String): Boolean
        fun FillDataTableFromCSVFile(DataTable: DataTable, CSVFilePath: String): Boolean
        fun FillDataTableFromCSVString(DataTable: DataTable, CSVString: String): Boolean
        fun FillDataTableFromJSONFile(DataTable: DataTable, JSONFilePath: String, ImportRowStruct: ScriptStruct): Boolean
        fun FillDataTableFromJSONString(DataTable: DataTable, JsonString: String): Boolean
        fun GetDataTableColumnAsString(DataTable: DataTable, PropertyName: String): Array<String>
        fun GetDataTableRowFromName(Table: DataTable, RowName: String, OutRow: TableRowBase = definedExternally): `T$576`
        fun GetDataTableRowNames(Table: DataTable, OutRowNames: Array<String> = definedExternally): `T$578`
    }
}

external open class GameplayTagsManager : UObject {
    constructor()
    constructor(Outer: UObject)
    open var TagSources: Any
    open var GameplayTagTables: Array<DataTable>

    companion object {
        fun Load(ResourceName: String): GameplayTagsManager
        fun Find(Outer: UObject, ResourceName: String): GameplayTagsManager
        fun GetDefaultObject(): GameplayTagsManager
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayTagsManager
        fun C(Other: UObject): GameplayTagsManager
        fun C(Other: Any): GameplayTagsManager
    }
}

external open class GameplayTagTableRow : TableRowBase {
    open var Tag: String
    open var DevComment: String
    override fun clone(): GameplayTagTableRow

    companion object {
        fun C(Other: UObject): GameplayTagTableRow
        fun C(Other: Any): GameplayTagTableRow
    }
}

external open class GameplayTagsList : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ConfigFileName: String
    open var GameplayTagList: Array<GameplayTagTableRow>

    companion object {
        fun Load(ResourceName: String): GameplayTagsList
        fun Find(Outer: UObject, ResourceName: String): GameplayTagsList
        fun GetDefaultObject(): GameplayTagsList
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayTagsList
        fun C(Other: UObject): GameplayTagsList
        fun C(Other: Any): GameplayTagsList
    }
}

external open class RestrictedGameplayTagTableRow : GameplayTagTableRow {
    open var bAllowNonRestrictedChildren: Boolean
    override fun clone(): RestrictedGameplayTagTableRow

    companion object {
        fun C(Other: UObject): RestrictedGameplayTagTableRow
        fun C(Other: Any): RestrictedGameplayTagTableRow
    }
}

external open class RestrictedGameplayTagsList : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ConfigFileName: String
    open var RestrictedGameplayTagList: Array<RestrictedGameplayTagTableRow>

    companion object {
        fun Load(ResourceName: String): RestrictedGameplayTagsList
        fun Find(Outer: UObject, ResourceName: String): RestrictedGameplayTagsList
        fun GetDefaultObject(): RestrictedGameplayTagsList
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RestrictedGameplayTagsList
        fun C(Other: UObject): RestrictedGameplayTagsList
        fun C(Other: Any): RestrictedGameplayTagsList
    }
}

external open class GameplayTagCategoryRemap {
    open var BaseCategory: String
    open var RemapCategories: Array<String>
    open fun clone(): GameplayTagCategoryRemap

    companion object {
        fun C(Other: UObject): GameplayTagCategoryRemap
        fun C(Other: Any): GameplayTagCategoryRemap
    }
}

external open class GameplayTagRedirect {
    open var OldTagName: String
    open var NewTagName: String
    open fun clone(): GameplayTagRedirect

    companion object {
        fun C(Other: UObject): GameplayTagRedirect
        fun C(Other: Any): GameplayTagRedirect
    }
}

external open class RestrictedConfigInfo {
    open var RestrictedConfigName: String
    open var Owners: Array<String>
    open fun clone(): RestrictedConfigInfo

    companion object {
        fun C(Other: UObject): RestrictedConfigInfo
        fun C(Other: Any): RestrictedConfigInfo
    }
}

external open class GameplayTagsSettings : GameplayTagsList {
    constructor()
    constructor(Outer: UObject)
    open var ImportTagsFromConfig: Boolean
    open var WarnOnInvalidTags: Boolean
    open var ClearInvalidTags: Boolean
    open var FastReplication: Boolean
    open var InvalidTagCharacters: String
    open var CategoryRemapping: Array<GameplayTagCategoryRemap>
    open var GameplayTagTableList: Array<SoftObjectPath>
    open var GameplayTagRedirects: Array<GameplayTagRedirect>
    open var CommonlyReplicatedTags: Array<String>
    open var NumBitsForContainerSize: Number
    open var NetIndexFirstBitSegment: Number
    open var RestrictedConfigFiles: Array<RestrictedConfigInfo>
    open var RestrictedTagList: String

    companion object {
        fun Load(ResourceName: String): GameplayTagsSettings
        fun Find(Outer: UObject, ResourceName: String): GameplayTagsSettings
        fun GetDefaultObject(): GameplayTagsSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayTagsSettings
        fun C(Other: UObject): GameplayTagsSettings
        fun C(Other: Any): GameplayTagsSettings
    }
}

external open class GameplayTagsDeveloperSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var DeveloperConfigName: String
    open var FavoriteTagSource: String

    companion object {
        fun Load(ResourceName: String): GameplayTagsDeveloperSettings
        fun Find(Outer: UObject, ResourceName: String): GameplayTagsDeveloperSettings
        fun GetDefaultObject(): GameplayTagsDeveloperSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameplayTagsDeveloperSettings
        fun C(Other: UObject): GameplayTagsDeveloperSettings
        fun C(Other: Any): GameplayTagsDeveloperSettings
    }
}

external open class AbstractNavData(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : NavigationData {
    companion object {
        fun GetDefaultObject(): AbstractNavData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AbstractNavData
        fun C(Other: UObject): AbstractNavData
        fun C(Other: Any): AbstractNavData
    }
}

external open class CrowdManagerBase : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CrowdManagerBase
        fun Find(Outer: UObject, ResourceName: String): CrowdManagerBase
        fun GetDefaultObject(): CrowdManagerBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CrowdManagerBase
        fun C(Other: UObject): CrowdManagerBase
        fun C(Other: Any): CrowdManagerBase
    }
}

external open class NavArea_Default : NavArea {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NavArea_Default
        fun Find(Outer: UObject, ResourceName: String): NavArea_Default
        fun GetDefaultObject(): NavArea_Default
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavArea_Default
        fun C(Other: UObject): NavArea_Default
        fun C(Other: Any): NavArea_Default
    }
}

external open class NavArea_LowHeight : NavArea {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NavArea_LowHeight
        fun Find(Outer: UObject, ResourceName: String): NavArea_LowHeight
        fun GetDefaultObject(): NavArea_LowHeight
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavArea_LowHeight
        fun C(Other: UObject): NavArea_LowHeight
        fun C(Other: Any): NavArea_LowHeight
    }
}

external open class NavArea_Null : NavArea {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NavArea_Null
        fun Find(Outer: UObject, ResourceName: String): NavArea_Null
        fun GetDefaultObject(): NavArea_Null
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavArea_Null
        fun C(Other: UObject): NavArea_Null
        fun C(Other: Any): NavArea_Null
    }
}

external open class NavArea_Obstacle : NavArea {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NavArea_Obstacle
        fun Find(Outer: UObject, ResourceName: String): NavArea_Obstacle
        fun GetDefaultObject(): NavArea_Obstacle
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavArea_Obstacle
        fun C(Other: UObject): NavArea_Obstacle
        fun C(Other: Any): NavArea_Obstacle
    }
}

external open class NavAreaMeta : NavArea {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NavAreaMeta
        fun Find(Outer: UObject, ResourceName: String): NavAreaMeta
        fun GetDefaultObject(): NavAreaMeta
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavAreaMeta
        fun C(Other: UObject): NavAreaMeta
        fun C(Other: Any): NavAreaMeta
    }
}

external open class NavAreaMeta_SwitchByAgent : NavAreaMeta {
    constructor()
    constructor(Outer: UObject)
    open var Agent0Area: UnrealEngineClass
    open var Agent1Area: UnrealEngineClass
    open var Agent2Area: UnrealEngineClass
    open var Agent3Area: UnrealEngineClass
    open var Agent4Area: UnrealEngineClass
    open var Agent5Area: UnrealEngineClass
    open var Agent6Area: UnrealEngineClass
    open var Agent7Area: UnrealEngineClass
    open var Agent8Area: UnrealEngineClass
    open var Agent9Area: UnrealEngineClass
    open var Agent10Area: UnrealEngineClass
    open var Agent11Area: UnrealEngineClass
    open var Agent12Area: UnrealEngineClass
    open var Agent13Area: UnrealEngineClass
    open var Agent14Area: UnrealEngineClass
    open var Agent15Area: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): NavAreaMeta_SwitchByAgent
        fun Find(Outer: UObject, ResourceName: String): NavAreaMeta_SwitchByAgent
        fun GetDefaultObject(): NavAreaMeta_SwitchByAgent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavAreaMeta_SwitchByAgent
        fun C(Other: UObject): NavAreaMeta_SwitchByAgent
        fun C(Other: Any): NavAreaMeta_SwitchByAgent
    }
}

external open class NavCollisionCylinder {
    open var Offset: Vector
    open var Radius: Number
    open var Height: Number
    open fun clone(): NavCollisionCylinder

    companion object {
        fun C(Other: UObject): NavCollisionCylinder
        fun C(Other: Any): NavCollisionCylinder
    }
}

external open class NavCollisionBox {
    open var Offset: Vector
    open var Extent: Vector
    open fun clone(): NavCollisionBox

    companion object {
        fun C(Other: UObject): NavCollisionBox
        fun C(Other: Any): NavCollisionBox
    }
}

external open class NavCollision : NavCollisionBase {
    constructor()
    constructor(Outer: UObject)
    open var CylinderCollision: Array<NavCollisionCylinder>
    open var BoxCollision: Array<NavCollisionBox>
    open var AreaClass: UnrealEngineClass
    open var bGatherConvexGeometry: Boolean
    open var bCreateOnClient: Boolean

    companion object {
        fun Load(ResourceName: String): NavCollision
        fun Find(Outer: UObject, ResourceName: String): NavCollision
        fun GetDefaultObject(): NavCollision
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavCollision
        fun C(Other: UObject): NavCollision
        fun C(Other: Any): NavCollision
    }
}

external open class NavigationGraph(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : NavigationData {
    companion object {
        fun GetDefaultObject(): NavigationGraph
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavigationGraph
        fun C(Other: UObject): NavigationGraph
        fun C(Other: Any): NavigationGraph
    }
}

external open class NavigationGraphNode(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    companion object {
        fun GetDefaultObject(): NavigationGraphNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavigationGraphNode
        fun C(Other: UObject): NavigationGraphNode
        fun C(Other: Any): NavigationGraphNode
    }
}

external open class NavGraphNode {
    open var Owner: UObject
    open fun clone(): NavGraphNode

    companion object {
        fun C(Other: UObject): NavGraphNode
        fun C(Other: Any): NavGraphNode
    }
}

external open class NavigationGraphNodeComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var UNode: NavGraphNode
    open var NextNodeComponent: NavigationGraphNodeComponent
    open var PrevNodeComponent: NavigationGraphNodeComponent

    companion object {
        fun Load(ResourceName: String): NavigationGraphNodeComponent
        fun Find(Outer: UObject, ResourceName: String): NavigationGraphNodeComponent
        fun GetDefaultObject(): NavigationGraphNodeComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavigationGraphNodeComponent
        fun C(Other: UObject): NavigationGraphNodeComponent
        fun C(Other: Any): NavigationGraphNodeComponent
    }
}

external open class NavigationInvokerComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var TileGenerationRadius: Number
    open var TileRemovalRadius: Number

    companion object {
        fun Load(ResourceName: String): NavigationInvokerComponent
        fun Find(Outer: UObject, ResourceName: String): NavigationInvokerComponent
        fun GetDefaultObject(): NavigationInvokerComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavigationInvokerComponent
        fun C(Other: UObject): NavigationInvokerComponent
        fun C(Other: Any): NavigationInvokerComponent
    }
}

external open class NavigationPathGenerator : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NavigationPathGenerator
        fun Find(Outer: UObject, ResourceName: String): NavigationPathGenerator
        fun GetDefaultObject(): NavigationPathGenerator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavigationPathGenerator
        fun C(Other: UObject): NavigationPathGenerator
        fun C(Other: Any): NavigationPathGenerator
    }
}

external object ENavDataGatheringModeConfig {
    var Invalid: String /* "Invalid" */
    var Instant: String /* "Instant" */
    var Lazy: String /* "Lazy" */
    var ENavDataGatheringModeConfig_MAX: String /* "ENavDataGatheringModeConfig_MAX" */
}

external object FNavigationSystemRunMode {
    var InvalidMode: String /* "InvalidMode" */
    var GameMode: String /* "GameMode" */
    var EditorMode: String /* "EditorMode" */
    var SimulationMode: String /* "SimulationMode" */
    var PIEMode: String /* "PIEMode" */
    var InferFromWorldMode: String /* "InferFromWorldMode" */
    var FNavigationSystemRunMode_MAX: String /* "FNavigationSystemRunMode_MAX" */
}

external open class NavMeshBoundsVolume(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Volume {
    open var SupportedAgents: NavAgentSelector

    companion object {
        fun GetDefaultObject(): NavMeshBoundsVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavMeshBoundsVolume
        fun C(Other: UObject): NavMeshBoundsVolume
        fun C(Other: Any): NavMeshBoundsVolume
    }
}

external object ENavigationQueryResult {
    var Invalid: String /* "Invalid" */
    var Error: String /* "Error" */
    var Fail: String /* "Fail" */
    var Success: String /* "Success" */
    var ENavigationQueryResult_MAX: String /* "ENavigationQueryResult_MAX" */
}

external interface `T$579` {
    var HitLocation: Vector
    var `$`: Boolean
}

external interface `T$580` {
    var ProjectedLocation: Vector
    var `$`: Boolean
}

external interface `T$581` {
    var RandomLocation: Vector
    var `$`: Boolean
}

external interface `T$582` {
    var PathLength: Number
    var `$`: String /* "Invalid" | "Error" | "Fail" | "Success" | "ENavigationQueryResult_MAX" */
}

external interface `T$583` {
    var PathCost: Number
    var `$`: String /* "Invalid" | "Error" | "Fail" | "Success" | "ENavigationQueryResult_MAX" */
}

external open class NavigationSystemV1 : NavigationSystemBase {
    constructor()
    constructor(Outer: UObject)
    open var MainNavData: NavigationData
    open var AbstractNavData: NavigationData
    open var DefaultAgentName: String
    open var CrowdManagerClass: Class
    open var bAutoCreateNavigationData: Boolean
    open var bSpawnNavDataInNavBoundsLevel: Boolean
    open var bAllowClientSideNavigation: Boolean
    open var bShouldDiscardSubLevelNavData: Boolean
    open var bTickWhilePaused: Boolean
    open var bSupportRebuilding: Boolean
    open var bInitialBuildingLocked: Boolean
    open var bSkipAgentHeightCheckWhenPickingNavData: Boolean
    open var bGenerateNavigationOnlyAroundNavigationInvokers: Boolean
    open var ActiveTilesUpdateInterval: Number
    open var DataGatheringMode: String /* "Invalid" | "Instant" | "Lazy" | "ENavDataGatheringModeConfig_MAX" */
    open var DirtyAreaWarningSizeThreshold: Number
    open var SupportedAgents: Array<NavDataConfig>
    open var SupportedAgentsMask: NavAgentSelector
    open var NavDataSet: Array<NavigationData>
    open var NavDataRegistrationQueue: Array<NavigationData>
    open var OnNavDataRegisteredEvent: UnrealEngineMulticastDelegate<(NavData: NavigationData) -> Unit>
    open var OnNavigationGenerationFinishedDelegate: UnrealEngineMulticastDelegate<(NavData: NavigationData) -> Unit>
    open var OperationMode: String /* "InvalidMode" | "GameMode" | "EditorMode" | "SimulationMode" | "PIEMode" | "InferFromWorldMode" | "FNavigationSystemRunMode_MAX" */
    open var DirtyAreasUpdateFreq: Number
    open fun UnregisterNavigationInvoker(Invoker: Actor)
    open fun SetMaxSimultaneousTileGenerationJobsCount(MaxNumberOfJobs: Number)
    open fun SetGeometryGatheringMode(NewMode: String /* "Invalid" | "Instant" | "Lazy" | "ENavDataGatheringModeConfig_MAX" */)
    open fun ResetMaxSimultaneousTileGenerationJobsCount()
    open fun RegisterNavigationInvoker(Invoker: Actor, TileGenerationRadius: Number, TileRemovalRadius: Number)
    open fun OnNavigationBoundsUpdated(NavVolume: NavMeshBoundsVolume)
    open fun ReplaceAreaInOctreeData(UObject: UObject, OldArea: UnrealEngineClass, NewArea: UnrealEngineClass): Boolean

    companion object {
        fun Load(ResourceName: String): NavigationSystemV1
        fun Find(Outer: UObject, ResourceName: String): NavigationSystemV1
        fun GetDefaultObject(): NavigationSystemV1
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavigationSystemV1
        fun SimpleMoveToLocation(Controller: Controller, Goal: Vector)
        fun SimpleMoveToActor(Controller: Controller, Goal: Actor)
        fun ProjectPointToNavigation_DEPRECATED(WorldContextObject: UObject, Point: Vector, NavData: NavigationData, FilterClass: UnrealEngineClass, QueryExtent: Vector): Vector
        fun NavigationRaycast(WorldContextObject: UObject, RayStart: Vector, RayEnd: Vector, HitLocation: Vector = definedExternally, FilterClass: UnrealEngineClass = definedExternally, Querier: Controller = definedExternally): `T$579`
        fun ProjectPointToNavigation(WorldContextObject: UObject, Point: Vector, ProjectedLocation: Vector = definedExternally, NavData: NavigationData = definedExternally, FilterClass: UnrealEngineClass = definedExternally, QueryExtent: Vector = definedExternally): `T$580`
        fun GetRandomReachablePointInRadius(WorldContextObject: UObject, Origin: Vector, RandomLocation: Vector = definedExternally, Radius: Number = definedExternally, NavData: NavigationData = definedExternally, FilterClass: UnrealEngineClass = definedExternally): `T$581`
        fun GetRandomPointInNavigableRadius(WorldContextObject: UObject, Origin: Vector, RandomLocation: Vector = definedExternally, Radius: Number = definedExternally, NavData: NavigationData = definedExternally, FilterClass: UnrealEngineClass = definedExternally): `T$581`
        fun GetRandomLocationInNavigableRadius(WorldContextObject: UObject, Origin: Vector, RandomLocation: Vector = definedExternally, Radius: Number = definedExternally, NavData: NavigationData = definedExternally, FilterClass: UnrealEngineClass = definedExternally): `T$581`
        fun IsNavigationBeingBuiltOrLocked(WorldContextObject: UObject): Boolean
        fun IsNavigationBeingBuilt(WorldContextObject: UObject): Boolean
        fun GetRandomReachablePointInRadius_DEPRECATED(WorldContextObject: UObject, Origin: Vector, Radius: Number, NavData: NavigationData, FilterClass: UnrealEngineClass): Vector
        fun GetRandomPointInNavigableRadius_DEPRECATED(WorldContextObject: UObject, Origin: Vector, Radius: Number, NavData: NavigationData, FilterClass: UnrealEngineClass): Vector
        fun GetPathLength(WorldContextObject: UObject, PathStart: Vector, PathEnd: Vector, PathLength: Number = definedExternally, NavData: NavigationData = definedExternally, FilterClass: UnrealEngineClass = definedExternally): `T$582`
        fun GetPathCost(WorldContextObject: UObject, PathStart: Vector, PathEnd: Vector, PathCost: Number = definedExternally, NavData: NavigationData = definedExternally, FilterClass: UnrealEngineClass = definedExternally): `T$583`
        fun GetNavigationSystem(WorldContextObject: UObject): NavigationSystemV1
        fun FindPathToLocationSynchronously(WorldContextObject: UObject, PathStart: Vector, PathEnd: Vector, PathfindingContext: Actor, FilterClass: UnrealEngineClass): NavigationPath
        fun FindPathToActorSynchronously(WorldContextObject: UObject, PathStart: Vector, GoalActor: Actor, TetherDistance: Number, PathfindingContext: Actor, FilterClass: UnrealEngineClass): NavigationPath
        fun C(Other: UObject): NavigationSystemV1
        fun C(Other: Any): NavigationSystemV1
    }
}

external open class NavigationSystemModuleConfig : NavigationSystemConfig {
    constructor()
    constructor(Outer: UObject)
    open var bStrictlyStatic: Boolean
    open var bCreateOnClient: Boolean
    open var bAutoSpawnMissingNavData: Boolean
    open var bSpawnNavDataInNavBoundsLevel: Boolean

    companion object {
        fun Load(ResourceName: String): NavigationSystemModuleConfig
        fun Find(Outer: UObject, ResourceName: String): NavigationSystemModuleConfig
        fun GetDefaultObject(): NavigationSystemModuleConfig
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavigationSystemModuleConfig
        fun C(Other: UObject): NavigationSystemModuleConfig
        fun C(Other: Any): NavigationSystemModuleConfig
    }
}

external open class NavTestRenderingComponent : PrimitiveComponent {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NavTestRenderingComponent
        fun Find(Outer: UObject, ResourceName: String): NavTestRenderingComponent
        fun GetDefaultObject(): NavTestRenderingComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavTestRenderingComponent
        fun C(Other: UObject): NavTestRenderingComponent
        fun C(Other: Any): NavTestRenderingComponent
    }
}

external object ENavCostDisplay {
    var TotalCost: String /* "TotalCost" */
    var HeuristicOnly: String /* "HeuristicOnly" */
    var RealCostOnly: String /* "RealCostOnly" */
    var ENavCostDisplay_MAX: String /* "ENavCostDisplay_MAX" */
}

external open class NavigationTestingActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var CapsuleComponent: CapsuleComponent
    open var EdRenderComp: NavTestRenderingComponent
    open var InvokerComponent: NavigationInvokerComponent
    open var bActAsNavigationInvoker: Boolean
    open var NavAgentProps: NavAgentProperties
    open var QueryingExtent: Vector
    open var MyNavData: NavigationData
    open var ProjectedLocation: Vector
    open var bProjectedLocationValid: Boolean
    open var bSearchStart: Boolean
    open var CostLimitFactor: Number
    open var MinimumCostLimit: Number
    open var bBacktracking: Boolean
    open var bUseHierarchicalPathfinding: Boolean
    open var bGatherDetailedInfo: Boolean
    open var bDrawDistanceToWall: Boolean
    open var bShowNodePool: Boolean
    open var bShowBestPath: Boolean
    open var bShowDiffWithPreviousStep: Boolean
    open var bShouldBeVisibleInGame: Boolean
    open var CostDisplayMode: String /* "TotalCost" | "HeuristicOnly" | "RealCostOnly" | "ENavCostDisplay_MAX" */
    open var TextCanvasOffset: Vector2D
    open var bPathExist: Boolean
    open var bPathIsPartial: Boolean
    open var bPathSearchOutOfNodes: Boolean
    open var PathfindingTime: Number
    open var PathCost: Number
    open var PathfindingSteps: Number
    open var OtherActor: NavigationTestingActor
    open var FilterClass: UnrealEngineClass
    open var ShowStepIndex: Number
    open var OffsetFromCornersDistance: Number

    companion object {
        fun GetDefaultObject(): NavigationTestingActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavigationTestingActor
        fun C(Other: UObject): NavigationTestingActor
        fun C(Other: Any): NavigationTestingActor
    }
}

external object ENavLinkDirection {
    var BothWays: String /* "BothWays" */
    var LeftToRight: String /* "LeftToRight" */
    var RightToLeft: String /* "RightToLeft" */
    var ENavLinkDirection_MAX: String /* "ENavLinkDirection_MAX" */
}

external open class NavigationLinkBase {
    open var LeftProjectHeight: Number
    open var MaxFallDownLength: Number
    open var SnapRadius: Number
    open var SnapHeight: Number
    open var SupportedAgents: NavAgentSelector
    open var bSupportsAgent0: Boolean
    open var bSupportsAgent1: Boolean
    open var bSupportsAgent2: Boolean
    open var bSupportsAgent3: Boolean
    open var bSupportsAgent4: Boolean
    open var bSupportsAgent5: Boolean
    open var bSupportsAgent6: Boolean
    open var bSupportsAgent7: Boolean
    open var bSupportsAgent8: Boolean
    open var bSupportsAgent9: Boolean
    open var bSupportsAgent10: Boolean
    open var bSupportsAgent11: Boolean
    open var bSupportsAgent12: Boolean
    open var bSupportsAgent13: Boolean
    open var bSupportsAgent14: Boolean
    open var bSupportsAgent15: Boolean
    open var Description: String
    open var Direction: String /* "BothWays" | "LeftToRight" | "RightToLeft" | "ENavLinkDirection_MAX" */
    open var bUseSnapHeight: Boolean
    open var bSnapToCheapestArea: Boolean
    open var bCustomFlag0: Boolean
    open var bCustomFlag1: Boolean
    open var bCustomFlag2: Boolean
    open var bCustomFlag3: Boolean
    open var bCustomFlag4: Boolean
    open var bCustomFlag5: Boolean
    open var bCustomFlag6: Boolean
    open var bCustomFlag7: Boolean
    open var AreaClass: UnrealEngineClass
    open fun clone(): NavigationLinkBase

    companion object {
        fun C(Other: UObject): NavigationLinkBase
        fun C(Other: Any): NavigationLinkBase
    }
}

external open class NavigationLink : NavigationLinkBase {
    open var Left: Vector
    open var Right: Vector
    override fun clone(): NavigationLink

    companion object {
        fun C(Other: UObject): NavigationLink
        fun C(Other: Any): NavigationLink
    }
}

external open class NavLinkComponent : PrimitiveComponent {
    constructor()
    constructor(Outer: UObject)
    open var Links: Array<NavigationLink>

    companion object {
        fun Load(ResourceName: String): NavLinkComponent
        fun Find(Outer: UObject, ResourceName: String): NavLinkComponent
        fun GetDefaultObject(): NavLinkComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavLinkComponent
        fun C(Other: UObject): NavLinkComponent
        fun C(Other: Any): NavLinkComponent
    }
}

external open class NavRelevantComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var bAttachToOwnersRoot: Boolean
    open var CachedNavParent: UObject
    open fun SetNavigationRelevancy(bRelevant: Boolean)

    companion object {
        fun Load(ResourceName: String): NavRelevantComponent
        fun Find(Outer: UObject, ResourceName: String): NavRelevantComponent
        fun GetDefaultObject(): NavRelevantComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavRelevantComponent
        fun C(Other: UObject): NavRelevantComponent
        fun C(Other: Any): NavRelevantComponent
    }
}

external open class NavLinkCustomComponent : NavRelevantComponent {
    constructor()
    constructor(Outer: UObject)
    open var NavLinkUserId: Any
    open var EnabledAreaClass: UnrealEngineClass
    open var DisabledAreaClass: UnrealEngineClass
    open var SupportedAgents: NavAgentSelector
    open var LinkRelativeStart: Vector
    open var LinkRelativeEnd: Vector
    open var LinkDirection: String /* "BothWays" | "LeftToRight" | "RightToLeft" | "ENavLinkDirection_MAX" */
    open var bLinkEnabled: Boolean
    open var bNotifyWhenEnabled: Boolean
    open var bNotifyWhenDisabled: Boolean
    open var bCreateBoxObstacle: Boolean
    open var ObstacleOffset: Vector
    open var ObstacleExtent: Vector
    open var ObstacleAreaClass: UnrealEngineClass
    open var BroadcastRadius: Number
    open var BroadcastInterval: Number
    open var BroadcastChannel: String /* "ECC_WorldStatic" | "ECC_WorldDynamic" | "ECC_Pawn" | "ECC_Visibility" | "ECC_Camera" | "ECC_PhysicsBody" | "ECC_Vehicle" | "ECC_Destructible" | "ECC_EngineTraceChannel1" | "ECC_EngineTraceChannel2" | "ECC_EngineTraceChannel3" | "ECC_EngineTraceChannel4" | "ECC_EngineTraceChannel5" | "ECC_EngineTraceChannel6" | "ECC_GameTraceChannel1" | "ECC_GameTraceChannel2" | "ECC_GameTraceChannel3" | "ECC_GameTraceChannel4" | "ECC_GameTraceChannel5" | "ECC_GameTraceChannel6" | "ECC_GameTraceChannel7" | "ECC_GameTraceChannel8" | "ECC_GameTraceChannel9" | "ECC_GameTraceChannel10" | "ECC_GameTraceChannel11" | "ECC_GameTraceChannel12" | "ECC_GameTraceChannel13" | "ECC_GameTraceChannel14" | "ECC_GameTraceChannel15" | "ECC_GameTraceChannel16" | "ECC_GameTraceChannel17" | "ECC_GameTraceChannel18" | "ECC_OverlapAll_Deprecated" | "ECC_MAX" */

    companion object {
        fun Load(ResourceName: String): NavLinkCustomComponent
        fun Find(Outer: UObject, ResourceName: String): NavLinkCustomComponent
        fun GetDefaultObject(): NavLinkCustomComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavLinkCustomComponent
        fun C(Other: UObject): NavLinkCustomComponent
        fun C(Other: Any): NavLinkCustomComponent
    }
}

external open class NavLinkCustomInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NavLinkCustomInterface
        fun Find(Outer: UObject, ResourceName: String): NavLinkCustomInterface
        fun GetDefaultObject(): NavLinkCustomInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavLinkCustomInterface
        fun C(Other: UObject): NavLinkCustomInterface
        fun C(Other: Any): NavLinkCustomInterface
    }
}

external open class NavLinkHostInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NavLinkHostInterface
        fun Find(Outer: UObject, ResourceName: String): NavLinkHostInterface
        fun GetDefaultObject(): NavLinkHostInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavLinkHostInterface
        fun C(Other: UObject): NavLinkHostInterface
        fun C(Other: Any): NavLinkHostInterface
    }
}

external open class NavLinkRenderingComponent : PrimitiveComponent {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NavLinkRenderingComponent
        fun Find(Outer: UObject, ResourceName: String): NavLinkRenderingComponent
        fun GetDefaultObject(): NavLinkRenderingComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavLinkRenderingComponent
        fun C(Other: UObject): NavLinkRenderingComponent
        fun C(Other: Any): NavLinkRenderingComponent
    }
}

external open class NavigationSegmentLink : NavigationLinkBase {
    open var LeftStart: Vector
    open var LeftEnd: Vector
    open var RightStart: Vector
    open var RightEnd: Vector
    override fun clone(): NavigationSegmentLink

    companion object {
        fun C(Other: UObject): NavigationSegmentLink
        fun C(Other: Any): NavigationSegmentLink
    }
}

external open class NavLinkDefinition : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Links: Array<NavigationLink>
    open var SegmentLinks: Array<NavigationSegmentLink>

    companion object {
        fun Load(ResourceName: String): NavLinkDefinition
        fun Find(Outer: UObject, ResourceName: String): NavLinkDefinition
        fun GetDefaultObject(): NavLinkDefinition
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavLinkDefinition
        fun C(Other: UObject): NavLinkDefinition
        fun C(Other: Any): NavLinkDefinition
    }
}

external open class NavLinkTrivial : NavLinkDefinition {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NavLinkTrivial
        fun Find(Outer: UObject, ResourceName: String): NavLinkTrivial
        fun GetDefaultObject(): NavLinkTrivial
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavLinkTrivial
        fun C(Other: UObject): NavLinkTrivial
        fun C(Other: Any): NavLinkTrivial
    }
}

external open class NavMeshRenderingComponent : PrimitiveComponent {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NavMeshRenderingComponent
        fun Find(Outer: UObject, ResourceName: String): NavMeshRenderingComponent
        fun GetDefaultObject(): NavMeshRenderingComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavMeshRenderingComponent
        fun C(Other: UObject): NavMeshRenderingComponent
        fun C(Other: Any): NavMeshRenderingComponent
    }
}

external open class NavModifierComponent : NavRelevantComponent {
    constructor()
    constructor(Outer: UObject)
    open var AreaClass: UnrealEngineClass
    open var FailsafeExtent: Vector
    open var bIncludeAgentHeight: Boolean
    open fun SetAreaClass(NewAreaClass: UnrealEngineClass)

    companion object {
        fun Load(ResourceName: String): NavModifierComponent
        fun Find(Outer: UObject, ResourceName: String): NavModifierComponent
        fun GetDefaultObject(): NavModifierComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavModifierComponent
        fun C(Other: UObject): NavModifierComponent
        fun C(Other: Any): NavModifierComponent
    }
}

external open class NavModifierVolume(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Volume {
    open var AreaClass: UnrealEngineClass
    open var bMaskFillCollisionUnderneathForNavmesh: Boolean
    open fun SetAreaClass(NewAreaClass: UnrealEngineClass)

    companion object {
        fun GetDefaultObject(): NavModifierVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavModifierVolume
        fun C(Other: UObject): NavModifierVolume
        fun C(Other: Any): NavModifierVolume
    }
}

external open class NavNodeInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NavNodeInterface
        fun Find(Outer: UObject, ResourceName: String): NavNodeInterface
        fun GetDefaultObject(): NavNodeInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavNodeInterface
        fun C(Other: UObject): NavNodeInterface
        fun C(Other: Any): NavNodeInterface
    }
}

external object ENavSystemOverridePolicy {
    var Override: String /* "Override" */
    var Append: String /* "Append" */
    var Skip: String /* "Skip" */
    var ENavSystemOverridePolicy_MAX: String /* "ENavSystemOverridePolicy_MAX" */
}

external open class NavSystemConfigOverride(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var SpriteComponent: BillboardComponent
    open var NavigationSystemConfig: NavigationSystemConfig
    open var OverridePolicy: String /* "Override" | "Append" | "Skip" | "ENavSystemOverridePolicy_MAX" */
    open var bLoadOnClient: Boolean
    open fun ApplyChanges()

    companion object {
        fun GetDefaultObject(): NavSystemConfigOverride
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NavSystemConfigOverride
        fun C(Other: UObject): NavSystemConfigOverride
        fun C(Other: Any): NavSystemConfigOverride
    }
}

external open class RecastFilter_UseDefaultArea : NavigationQueryFilter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): RecastFilter_UseDefaultArea
        fun Find(Outer: UObject, ResourceName: String): RecastFilter_UseDefaultArea
        fun GetDefaultObject(): RecastFilter_UseDefaultArea
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RecastFilter_UseDefaultArea
        fun C(Other: UObject): RecastFilter_UseDefaultArea
        fun C(Other: Any): RecastFilter_UseDefaultArea
    }
}

external open class RecastNavMeshDataChunk : NavigationDataChunk {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): RecastNavMeshDataChunk
        fun Find(Outer: UObject, ResourceName: String): RecastNavMeshDataChunk
        fun GetDefaultObject(): RecastNavMeshDataChunk
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RecastNavMeshDataChunk
        fun C(Other: UObject): RecastNavMeshDataChunk
        fun C(Other: Any): RecastNavMeshDataChunk
    }
}

external open class InputBehavior : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InputBehavior
        fun Find(Outer: UObject, ResourceName: String): InputBehavior
        fun GetDefaultObject(): InputBehavior
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InputBehavior
        fun C(Other: UObject): InputBehavior
        fun C(Other: Any): InputBehavior
    }
}

external open class AnyButtonInputBehavior : InputBehavior {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnyButtonInputBehavior
        fun Find(Outer: UObject, ResourceName: String): AnyButtonInputBehavior
        fun GetDefaultObject(): AnyButtonInputBehavior
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnyButtonInputBehavior
        fun C(Other: UObject): AnyButtonInputBehavior
        fun C(Other: Any): AnyButtonInputBehavior
    }
}

external open class InteractiveGizmoBuilder : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InteractiveGizmoBuilder
        fun Find(Outer: UObject, ResourceName: String): InteractiveGizmoBuilder
        fun GetDefaultObject(): InteractiveGizmoBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InteractiveGizmoBuilder
        fun C(Other: UObject): InteractiveGizmoBuilder
        fun C(Other: Any): InteractiveGizmoBuilder
    }
}

external open class AxisAngleGizmoBuilder : InteractiveGizmoBuilder {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AxisAngleGizmoBuilder
        fun Find(Outer: UObject, ResourceName: String): AxisAngleGizmoBuilder
        fun GetDefaultObject(): AxisAngleGizmoBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AxisAngleGizmoBuilder
        fun C(Other: UObject): AxisAngleGizmoBuilder
        fun C(Other: Any): AxisAngleGizmoBuilder
    }
}

external open class BehaviorInfo {
    open var Behavior: InputBehavior
    open fun clone(): BehaviorInfo

    companion object {
        fun C(Other: UObject): BehaviorInfo
        fun C(Other: Any): BehaviorInfo
    }
}

external open class InputBehaviorSet : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Behaviors: Array<BehaviorInfo>

    companion object {
        fun Load(ResourceName: String): InputBehaviorSet
        fun Find(Outer: UObject, ResourceName: String): InputBehaviorSet
        fun GetDefaultObject(): InputBehaviorSet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InputBehaviorSet
        fun C(Other: UObject): InputBehaviorSet
        fun C(Other: Any): InputBehaviorSet
    }
}

external open class InteractiveGizmo : UObject {
    constructor()
    constructor(Outer: UObject)
    open var InputBehaviors: InputBehaviorSet

    companion object {
        fun Load(ResourceName: String): InteractiveGizmo
        fun Find(Outer: UObject, ResourceName: String): InteractiveGizmo
        fun GetDefaultObject(): InteractiveGizmo
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InteractiveGizmo
        fun C(Other: UObject): InteractiveGizmo
        fun C(Other: Any): InteractiveGizmo
    }
}

external open class AxisAngleGizmo : InteractiveGizmo {
    constructor()
    constructor(Outer: UObject)
    open var AxisSource: Any
    open var AngleSource: Any
    open var HitTarget: Any
    open var StateTarget: Any
    open var bInInteraction: Boolean
    open var RotationOrigin: Vector
    open var RotationAxis: Vector
    open var RotationPlaneX: Vector
    open var RotationPlaneY: Vector
    open var InteractionStartPoint: Vector
    open var InteractionCurPoint: Vector
    open var InteractionStartAngle: Number
    open var InteractionCurAngle: Number

    companion object {
        fun Load(ResourceName: String): AxisAngleGizmo
        fun Find(Outer: UObject, ResourceName: String): AxisAngleGizmo
        fun GetDefaultObject(): AxisAngleGizmo
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AxisAngleGizmo
        fun C(Other: UObject): AxisAngleGizmo
        fun C(Other: Any): AxisAngleGizmo
    }
}

external open class AxisPositionGizmoBuilder : InteractiveGizmoBuilder {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AxisPositionGizmoBuilder
        fun Find(Outer: UObject, ResourceName: String): AxisPositionGizmoBuilder
        fun GetDefaultObject(): AxisPositionGizmoBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AxisPositionGizmoBuilder
        fun C(Other: UObject): AxisPositionGizmoBuilder
        fun C(Other: Any): AxisPositionGizmoBuilder
    }
}

external open class AxisPositionGizmo : InteractiveGizmo {
    constructor()
    constructor(Outer: UObject)
    open var AxisSource: Any
    open var ParameterSource: Any
    open var HitTarget: Any
    open var StateTarget: Any
    open var bEnableSignedAxis: Boolean
    open var bInInteraction: Boolean
    open var InteractionOrigin: Vector
    open var InteractionAxis: Vector
    open var InteractionStartPoint: Vector
    open var InteractionCurPoint: Vector
    open var InteractionStartParameter: Number
    open var InteractionCurParameter: Number
    open var ParameterSign: Number

    companion object {
        fun Load(ResourceName: String): AxisPositionGizmo
        fun Find(Outer: UObject, ResourceName: String): AxisPositionGizmo
        fun GetDefaultObject(): AxisPositionGizmo
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AxisPositionGizmo
        fun C(Other: UObject): AxisPositionGizmo
        fun C(Other: Any): AxisPositionGizmo
    }
}

external open class GizmoConstantAxisSource : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Origin: Vector
    open var Direction: Vector

    companion object {
        fun Load(ResourceName: String): GizmoConstantAxisSource
        fun Find(Outer: UObject, ResourceName: String): GizmoConstantAxisSource
        fun GetDefaultObject(): GizmoConstantAxisSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoConstantAxisSource
        fun C(Other: UObject): GizmoConstantAxisSource
        fun C(Other: Any): GizmoConstantAxisSource
    }
}

external open class GizmoConstantFrameAxisSource : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Origin: Vector
    open var Direction: Vector
    open var TangentX: Vector
    open var TangentY: Vector

    companion object {
        fun Load(ResourceName: String): GizmoConstantFrameAxisSource
        fun Find(Outer: UObject, ResourceName: String): GizmoConstantFrameAxisSource
        fun GetDefaultObject(): GizmoConstantFrameAxisSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoConstantFrameAxisSource
        fun C(Other: UObject): GizmoConstantFrameAxisSource
        fun C(Other: Any): GizmoConstantFrameAxisSource
    }
}

external open class GizmoWorldAxisSource : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Origin: Vector
    open var AxisIndex: Number

    companion object {
        fun Load(ResourceName: String): GizmoWorldAxisSource
        fun Find(Outer: UObject, ResourceName: String): GizmoWorldAxisSource
        fun GetDefaultObject(): GizmoWorldAxisSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoWorldAxisSource
        fun C(Other: UObject): GizmoWorldAxisSource
        fun C(Other: Any): GizmoWorldAxisSource
    }
}

external open class GizmoComponentAxisSource : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Component: SceneComponent
    open var AxisIndex: Number
    open var bLocalAxes: Boolean

    companion object {
        fun Load(ResourceName: String): GizmoComponentAxisSource
        fun Find(Outer: UObject, ResourceName: String): GizmoComponentAxisSource
        fun GetDefaultObject(): GizmoComponentAxisSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoComponentAxisSource
        fun C(Other: UObject): GizmoComponentAxisSource
        fun C(Other: Any): GizmoComponentAxisSource
    }
}

external open class InteractiveToolPropertySet : UObject {
    constructor()
    constructor(Outer: UObject)
    open var CachedProperties: InteractiveToolPropertySet
    open var bIsPropertySetEnabled: Boolean

    companion object {
        fun Load(ResourceName: String): InteractiveToolPropertySet
        fun Find(Outer: UObject, ResourceName: String): InteractiveToolPropertySet
        fun GetDefaultObject(): InteractiveToolPropertySet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InteractiveToolPropertySet
        fun C(Other: UObject): InteractiveToolPropertySet
        fun C(Other: Any): InteractiveToolPropertySet
    }
}

external open class BrushBaseProperties : InteractiveToolPropertySet {
    constructor()
    constructor(Outer: UObject)
    open var BrushSize: Number
    open var bSpecifyRadius: Boolean
    open var BrushRadius: Number
    open var BrushStrength: Number
    open var BrushFalloffAmount: Number
    open var bShowStrength: Boolean
    open var bShowFalloff: Boolean

    companion object {
        fun Load(ResourceName: String): BrushBaseProperties
        fun Find(Outer: UObject, ResourceName: String): BrushBaseProperties
        fun GetDefaultObject(): BrushBaseProperties
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BrushBaseProperties
        fun C(Other: UObject): BrushBaseProperties
        fun C(Other: Any): BrushBaseProperties
    }
}

external open class InteractiveTool : UObject {
    constructor()
    constructor(Outer: UObject)
    open var InputBehaviors: InputBehaviorSet
    open var ToolPropertyObjects: Array<UObject>

    companion object {
        fun Load(ResourceName: String): InteractiveTool
        fun Find(Outer: UObject, ResourceName: String): InteractiveTool
        fun GetDefaultObject(): InteractiveTool
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InteractiveTool
        fun C(Other: UObject): InteractiveTool
        fun C(Other: Any): InteractiveTool
    }
}

external open class SingleSelectionTool : InteractiveTool {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SingleSelectionTool
        fun Find(Outer: UObject, ResourceName: String): SingleSelectionTool
        fun GetDefaultObject(): SingleSelectionTool
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SingleSelectionTool
        fun C(Other: UObject): SingleSelectionTool
        fun C(Other: Any): SingleSelectionTool
    }
}

external open class MeshSurfacePointTool : SingleSelectionTool {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MeshSurfacePointTool
        fun Find(Outer: UObject, ResourceName: String): MeshSurfacePointTool
        fun GetDefaultObject(): MeshSurfacePointTool
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MeshSurfacePointTool
        fun C(Other: UObject): MeshSurfacePointTool
        fun C(Other: Any): MeshSurfacePointTool
    }
}

external open class BrushStampData {
    open fun clone(): BrushStampData

    companion object {
        fun C(Other: UObject): BrushStampData
        fun C(Other: Any): BrushStampData
    }
}

external open class BrushStampIndicator : InteractiveGizmo {
    constructor()
    constructor(Outer: UObject)
    open var BrushRadius: Number
    open var BrushFalloff: Number
    open var BrushPosition: Vector
    open var BrushNormal: Vector
    open var bDrawIndicatorLines: Boolean
    open var bDrawRadiusCircle: Boolean
    open var SampleStepCount: Number
    open var LineColor: LinearColor
    open var LineThickness: Number
    open var bDepthTested: Boolean
    open var bDrawSecondaryLines: Boolean
    open var SecondaryLineThickness: Number
    open var SecondaryLineColor: LinearColor
    open var AttachedComponent: PrimitiveComponent

    companion object {
        fun Load(ResourceName: String): BrushStampIndicator
        fun Find(Outer: UObject, ResourceName: String): BrushStampIndicator
        fun GetDefaultObject(): BrushStampIndicator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BrushStampIndicator
        fun C(Other: UObject): BrushStampIndicator
        fun C(Other: Any): BrushStampIndicator
    }
}

external open class BaseBrushTool : MeshSurfacePointTool {
    constructor()
    constructor(Outer: UObject)
    open var BrushProperties: BrushBaseProperties
    open var bInBrushStroke: Boolean
    open var WorldToLocalScale: Number
    open var LastBrushStamp: BrushStampData
    open var PropertyClass: Class
    open var BrushStampIndicator: BrushStampIndicator

    companion object {
        fun Load(ResourceName: String): BaseBrushTool
        fun Find(Outer: UObject, ResourceName: String): BaseBrushTool
        fun GetDefaultObject(): BaseBrushTool
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BaseBrushTool
        fun C(Other: UObject): BaseBrushTool
        fun C(Other: Any): BaseBrushTool
    }
}

external open class BrushStampIndicatorBuilder : InteractiveGizmoBuilder {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BrushStampIndicatorBuilder
        fun Find(Outer: UObject, ResourceName: String): BrushStampIndicatorBuilder
        fun GetDefaultObject(): BrushStampIndicatorBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BrushStampIndicatorBuilder
        fun C(Other: UObject): BrushStampIndicatorBuilder
        fun C(Other: Any): BrushStampIndicatorBuilder
    }
}

external open class ClickDragInputBehavior : AnyButtonInputBehavior {
    constructor()
    constructor(Outer: UObject)
    open var bUpdateModifiersDuringDrag: Boolean

    companion object {
        fun Load(ResourceName: String): ClickDragInputBehavior
        fun Find(Outer: UObject, ResourceName: String): ClickDragInputBehavior
        fun GetDefaultObject(): ClickDragInputBehavior
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClickDragInputBehavior
        fun C(Other: UObject): ClickDragInputBehavior
        fun C(Other: Any): ClickDragInputBehavior
    }
}

external open class LocalClickDragInputBehavior : ClickDragInputBehavior {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LocalClickDragInputBehavior
        fun Find(Outer: UObject, ResourceName: String): LocalClickDragInputBehavior
        fun GetDefaultObject(): LocalClickDragInputBehavior
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LocalClickDragInputBehavior
        fun C(Other: UObject): LocalClickDragInputBehavior
        fun C(Other: Any): LocalClickDragInputBehavior
    }
}

external open class InteractiveToolBuilder : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InteractiveToolBuilder
        fun Find(Outer: UObject, ResourceName: String): InteractiveToolBuilder
        fun GetDefaultObject(): InteractiveToolBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InteractiveToolBuilder
        fun C(Other: UObject): InteractiveToolBuilder
        fun C(Other: Any): InteractiveToolBuilder
    }
}

external open class ClickDragToolBuilder : InteractiveToolBuilder {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ClickDragToolBuilder
        fun Find(Outer: UObject, ResourceName: String): ClickDragToolBuilder
        fun GetDefaultObject(): ClickDragToolBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClickDragToolBuilder
        fun C(Other: UObject): ClickDragToolBuilder
        fun C(Other: Any): ClickDragToolBuilder
    }
}

external open class ClickDragTool : InteractiveTool {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ClickDragTool
        fun Find(Outer: UObject, ResourceName: String): ClickDragTool
        fun GetDefaultObject(): ClickDragTool
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClickDragTool
        fun C(Other: UObject): ClickDragTool
        fun C(Other: Any): ClickDragTool
    }
}

external open class InternalToolFrameworkActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    companion object {
        fun GetDefaultObject(): InternalToolFrameworkActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InternalToolFrameworkActor
        fun C(Other: UObject): InternalToolFrameworkActor
        fun C(Other: Any): InternalToolFrameworkActor
    }
}

external open class GizmoActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : InternalToolFrameworkActor {
    companion object {
        fun GetDefaultObject(): GizmoActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoActor
        fun C(Other: UObject): GizmoActor
        fun C(Other: Any): GizmoActor
    }
}

external open class GizmoBaseComponent : PrimitiveComponent {
    constructor()
    constructor(Outer: UObject)
    open var Color: LinearColor
    open var HoverSizeMultiplier: Number
    open var PixelHitDistanceThreshold: Number
    open fun UpdateWorldLocalState(bWorldIn: Boolean)
    open fun UpdateHoverState(bHoveringIn: Boolean)

    companion object {
        fun Load(ResourceName: String): GizmoBaseComponent
        fun Find(Outer: UObject, ResourceName: String): GizmoBaseComponent
        fun GetDefaultObject(): GizmoBaseComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoBaseComponent
        fun C(Other: UObject): GizmoBaseComponent
        fun C(Other: Any): GizmoBaseComponent
    }
}

external open class GizmoArrowComponent : GizmoBaseComponent {
    constructor()
    constructor(Outer: UObject)
    open var Direction: Vector
    open var Gap: Number
    open var Length: Number
    open var Thickness: Number

    companion object {
        fun Load(ResourceName: String): GizmoArrowComponent
        fun Find(Outer: UObject, ResourceName: String): GizmoArrowComponent
        fun GetDefaultObject(): GizmoArrowComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoArrowComponent
        fun C(Other: UObject): GizmoArrowComponent
        fun C(Other: Any): GizmoArrowComponent
    }
}

external open class GizmoBoxComponent : GizmoBaseComponent {
    constructor()
    constructor(Outer: UObject)
    open var Origin: Vector
    open var Rotation: Quat
    open var Dimensions: Vector
    open var LineThickness: Number
    open var bRemoveHiddenLines: Boolean
    open var bEnableAxisFlip: Boolean

    companion object {
        fun Load(ResourceName: String): GizmoBoxComponent
        fun Find(Outer: UObject, ResourceName: String): GizmoBoxComponent
        fun GetDefaultObject(): GizmoBoxComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoBoxComponent
        fun C(Other: UObject): GizmoBoxComponent
        fun C(Other: Any): GizmoBoxComponent
    }
}

external open class GizmoCircleComponent : GizmoBaseComponent {
    constructor()
    constructor(Outer: UObject)
    open var Normal: Vector
    open var Radius: Number
    open var Thickness: Number
    open var NumSides: Number
    open var bViewAligned: Boolean
    open var bOnlyAllowFrontFacingHits: Boolean

    companion object {
        fun Load(ResourceName: String): GizmoCircleComponent
        fun Find(Outer: UObject, ResourceName: String): GizmoCircleComponent
        fun GetDefaultObject(): GizmoCircleComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoCircleComponent
        fun C(Other: UObject): GizmoCircleComponent
        fun C(Other: Any): GizmoCircleComponent
    }
}

external open class GizmoTransformSource : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun SetTransform(NewTransform: Transform)
    open fun GetTransform(): Transform

    companion object {
        fun Load(ResourceName: String): GizmoTransformSource
        fun Find(Outer: UObject, ResourceName: String): GizmoTransformSource
        fun GetDefaultObject(): GizmoTransformSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoTransformSource
        fun C(Other: UObject): GizmoTransformSource
        fun C(Other: Any): GizmoTransformSource
    }
}

external interface `T$584` {
    var TangentXOut: Vector
    var TangentYOut: Vector
}

external open class GizmoAxisSource : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun HasTangentVectors(): Boolean
    open fun GetTangentVectors(TangentXOut: Vector = definedExternally, TangentYOut: Vector = definedExternally): `T$584`
    open fun GetOrigin(): Vector
    open fun GetDirection(): Vector

    companion object {
        fun Load(ResourceName: String): GizmoAxisSource
        fun Find(Outer: UObject, ResourceName: String): GizmoAxisSource
        fun GetDefaultObject(): GizmoAxisSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoAxisSource
        fun C(Other: UObject): GizmoAxisSource
        fun C(Other: Any): GizmoAxisSource
    }
}

external open class GizmoClickTarget : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun UpdateHoverState(bHovering: Boolean)

    companion object {
        fun Load(ResourceName: String): GizmoClickTarget
        fun Find(Outer: UObject, ResourceName: String): GizmoClickTarget
        fun GetDefaultObject(): GizmoClickTarget
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoClickTarget
        fun C(Other: UObject): GizmoClickTarget
        fun C(Other: Any): GizmoClickTarget
    }
}

external open class GizmoStateTarget : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun EndUpdate()
    open fun BeginUpdate()

    companion object {
        fun Load(ResourceName: String): GizmoStateTarget
        fun Find(Outer: UObject, ResourceName: String): GizmoStateTarget
        fun GetDefaultObject(): GizmoStateTarget
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoStateTarget
        fun C(Other: UObject): GizmoStateTarget
        fun C(Other: Any): GizmoStateTarget
    }
}

external open class GizmoFloatParameterSource : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun SetParameter(NewValue: Number)
    open fun GetParameter(): Number
    open fun EndModify()
    open fun BeginModify()

    companion object {
        fun Load(ResourceName: String): GizmoFloatParameterSource
        fun Find(Outer: UObject, ResourceName: String): GizmoFloatParameterSource
        fun GetDefaultObject(): GizmoFloatParameterSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoFloatParameterSource
        fun C(Other: UObject): GizmoFloatParameterSource
        fun C(Other: Any): GizmoFloatParameterSource
    }
}

external open class GizmoVec2ParameterSource : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun SetParameter(NewValue: Vector2D)
    open fun GetParameter(): Vector2D
    open fun EndModify()
    open fun BeginModify()

    companion object {
        fun Load(ResourceName: String): GizmoVec2ParameterSource
        fun Find(Outer: UObject, ResourceName: String): GizmoVec2ParameterSource
        fun GetDefaultObject(): GizmoVec2ParameterSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoVec2ParameterSource
        fun C(Other: UObject): GizmoVec2ParameterSource
        fun C(Other: Any): GizmoVec2ParameterSource
    }
}

external open class GizmoLineHandleComponent : GizmoBaseComponent {
    constructor()
    constructor(Outer: UObject)
    open var Normal: Vector
    open var HandleSize: Number
    open var Thickness: Number
    open var Direction: Vector
    open var Length: Number
    open var bImageScale: Boolean

    companion object {
        fun Load(ResourceName: String): GizmoLineHandleComponent
        fun Find(Outer: UObject, ResourceName: String): GizmoLineHandleComponent
        fun GetDefaultObject(): GizmoLineHandleComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoLineHandleComponent
        fun C(Other: UObject): GizmoLineHandleComponent
        fun C(Other: Any): GizmoLineHandleComponent
    }
}

external open class GizmoRectangleComponent : GizmoBaseComponent {
    constructor()
    constructor(Outer: UObject)
    open var DirectionX: Vector
    open var DirectionY: Vector
    open var OffsetX: Number
    open var OffsetY: Number
    open var LengthX: Number
    open var LengthY: Number
    open var Thickness: Number
    open var SegmentFlags: Number

    companion object {
        fun Load(ResourceName: String): GizmoRectangleComponent
        fun Find(Outer: UObject, ResourceName: String): GizmoRectangleComponent
        fun GetDefaultObject(): GizmoRectangleComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoRectangleComponent
        fun C(Other: UObject): GizmoRectangleComponent
        fun C(Other: Any): GizmoRectangleComponent
    }
}

external open class GizmoLambdaHitTarget : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GizmoLambdaHitTarget
        fun Find(Outer: UObject, ResourceName: String): GizmoLambdaHitTarget
        fun GetDefaultObject(): GizmoLambdaHitTarget
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoLambdaHitTarget
        fun C(Other: UObject): GizmoLambdaHitTarget
        fun C(Other: Any): GizmoLambdaHitTarget
    }
}

external open class GizmoComponentHitTarget : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Component: PrimitiveComponent

    companion object {
        fun Load(ResourceName: String): GizmoComponentHitTarget
        fun Find(Outer: UObject, ResourceName: String): GizmoComponentHitTarget
        fun GetDefaultObject(): GizmoComponentHitTarget
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoComponentHitTarget
        fun C(Other: UObject): GizmoComponentHitTarget
        fun C(Other: Any): GizmoComponentHitTarget
    }
}

external open class InputBehaviorSource : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InputBehaviorSource
        fun Find(Outer: UObject, ResourceName: String): InputBehaviorSource
        fun GetDefaultObject(): InputBehaviorSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InputBehaviorSource
        fun C(Other: UObject): InputBehaviorSource
        fun C(Other: Any): InputBehaviorSource
    }
}

external open class InputRouter : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bAutoInvalidateOnHover: Boolean
    open var bAutoInvalidateOnCapture: Boolean
    open var ActiveInputBehaviors: InputBehaviorSet

    companion object {
        fun Load(ResourceName: String): InputRouter
        fun Find(Outer: UObject, ResourceName: String): InputRouter
        fun GetDefaultObject(): InputRouter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InputRouter
        fun C(Other: UObject): InputRouter
        fun C(Other: Any): InputRouter
    }
}

external open class InteractionMechanic : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InteractionMechanic
        fun Find(Outer: UObject, ResourceName: String): InteractionMechanic
        fun GetDefaultObject(): InteractionMechanic
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InteractionMechanic
        fun C(Other: UObject): InteractionMechanic
        fun C(Other: Any): InteractionMechanic
    }
}

external open class ActiveGizmo {
    open fun clone(): ActiveGizmo

    companion object {
        fun C(Other: UObject): ActiveGizmo
        fun C(Other: Any): ActiveGizmo
    }
}

external open class InteractiveGizmoManager : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ActiveGizmos: Array<ActiveGizmo>
    open var GizmoBuilders: Any

    companion object {
        fun Load(ResourceName: String): InteractiveGizmoManager
        fun Find(Outer: UObject, ResourceName: String): InteractiveGizmoManager
        fun GetDefaultObject(): InteractiveGizmoManager
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InteractiveGizmoManager
        fun C(Other: UObject): InteractiveGizmoManager
        fun C(Other: Any): InteractiveGizmoManager
    }
}

external open class ToolContextTransactionProvider : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ToolContextTransactionProvider
        fun Find(Outer: UObject, ResourceName: String): ToolContextTransactionProvider
        fun GetDefaultObject(): ToolContextTransactionProvider
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ToolContextTransactionProvider
        fun C(Other: UObject): ToolContextTransactionProvider
        fun C(Other: Any): ToolContextTransactionProvider
    }
}

external open class InteractiveToolManager : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ActiveLeftTool: InteractiveTool
    open var ActiveRightTool: InteractiveTool
    open var ToolBuilders: Any

    companion object {
        fun Load(ResourceName: String): InteractiveToolManager
        fun Find(Outer: UObject, ResourceName: String): InteractiveToolManager
        fun GetDefaultObject(): InteractiveToolManager
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InteractiveToolManager
        fun C(Other: UObject): InteractiveToolManager
        fun C(Other: Any): InteractiveToolManager
    }
}

external open class ToolFrameworkComponent : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ToolFrameworkComponent
        fun Find(Outer: UObject, ResourceName: String): ToolFrameworkComponent
        fun GetDefaultObject(): ToolFrameworkComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ToolFrameworkComponent
        fun C(Other: UObject): ToolFrameworkComponent
        fun C(Other: Any): ToolFrameworkComponent
    }
}

external open class InteractiveToolsContext : UObject {
    constructor()
    constructor(Outer: UObject)
    open var InputRouter: InputRouter
    open var ToolManager: InteractiveToolManager
    open var GizmoManager: InteractiveGizmoManager
    open var ToolManagerClass: Class

    companion object {
        fun Load(ResourceName: String): InteractiveToolsContext
        fun Find(Outer: UObject, ResourceName: String): InteractiveToolsContext
        fun GetDefaultObject(): InteractiveToolsContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InteractiveToolsContext
        fun C(Other: UObject): InteractiveToolsContext
        fun C(Other: Any): InteractiveToolsContext
    }
}

external open class IntervalGizmoActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : GizmoActor {
    open var UpIntervalComponent: GizmoLineHandleComponent
    open var DownIntervalComponent: GizmoLineHandleComponent
    open var ForwardIntervalComponent: GizmoLineHandleComponent

    companion object {
        fun GetDefaultObject(): IntervalGizmoActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): IntervalGizmoActor
        fun C(Other: UObject): IntervalGizmoActor
        fun C(Other: Any): IntervalGizmoActor
    }
}

external open class IntervalGizmoBuilder : InteractiveGizmoBuilder {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): IntervalGizmoBuilder
        fun Find(Outer: UObject, ResourceName: String): IntervalGizmoBuilder
        fun GetDefaultObject(): IntervalGizmoBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): IntervalGizmoBuilder
        fun C(Other: UObject): IntervalGizmoBuilder
        fun C(Other: Any): IntervalGizmoBuilder
    }
}

external open class GizmoTransformChangeStateTarget : UObject {
    constructor()
    constructor(Outer: UObject)
    open var TransactionManager: Any

    companion object {
        fun Load(ResourceName: String): GizmoTransformChangeStateTarget
        fun Find(Outer: UObject, ResourceName: String): GizmoTransformChangeStateTarget
        fun GetDefaultObject(): GizmoTransformChangeStateTarget
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoTransformChangeStateTarget
        fun C(Other: UObject): GizmoTransformChangeStateTarget
        fun C(Other: Any): GizmoTransformChangeStateTarget
    }
}

external open class TransformProxy : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bRotatePerObject: Boolean
    open var bSetPivotMode: Boolean
    open var SharedTransform: Transform
    open var InitialSharedTransform: Transform

    companion object {
        fun Load(ResourceName: String): TransformProxy
        fun Find(Outer: UObject, ResourceName: String): TransformProxy
        fun GetDefaultObject(): TransformProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TransformProxy
        fun C(Other: UObject): TransformProxy
        fun C(Other: Any): TransformProxy
    }
}

external open class IntervalGizmo : InteractiveGizmo {
    constructor()
    constructor(Outer: UObject)
    open var StateTarget: GizmoTransformChangeStateTarget
    open var TransformProxy: TransformProxy
    open var ActiveComponents: Array<PrimitiveComponent>
    open var ActiveGizmos: Array<InteractiveGizmo>
    open var AxisYSource: GizmoComponentAxisSource
    open var AxisZSource: GizmoComponentAxisSource

    companion object {
        fun Load(ResourceName: String): IntervalGizmo
        fun Find(Outer: UObject, ResourceName: String): IntervalGizmo
        fun GetDefaultObject(): IntervalGizmo
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): IntervalGizmo
        fun C(Other: UObject): IntervalGizmo
        fun C(Other: Any): IntervalGizmo
    }
}

external open class GizmoBaseFloatParameterSource : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GizmoBaseFloatParameterSource
        fun Find(Outer: UObject, ResourceName: String): GizmoBaseFloatParameterSource
        fun GetDefaultObject(): GizmoBaseFloatParameterSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoBaseFloatParameterSource
        fun C(Other: UObject): GizmoBaseFloatParameterSource
        fun C(Other: Any): GizmoBaseFloatParameterSource
    }
}

external open class GizmoAxisIntervalParameterSource : GizmoBaseFloatParameterSource {
    constructor()
    constructor(Outer: UObject)
    open var FloatParameterSource: Any
    open var MinParameter: Number
    open var MaxParameter: Number

    companion object {
        fun Load(ResourceName: String): GizmoAxisIntervalParameterSource
        fun Find(Outer: UObject, ResourceName: String): GizmoAxisIntervalParameterSource
        fun GetDefaultObject(): GizmoAxisIntervalParameterSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoAxisIntervalParameterSource
        fun C(Other: UObject): GizmoAxisIntervalParameterSource
        fun C(Other: Any): GizmoAxisIntervalParameterSource
    }
}

external open class KeyAsModifierInputBehavior : InputBehavior {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): KeyAsModifierInputBehavior
        fun Find(Outer: UObject, ResourceName: String): KeyAsModifierInputBehavior
        fun GetDefaultObject(): KeyAsModifierInputBehavior
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): KeyAsModifierInputBehavior
        fun C(Other: UObject): KeyAsModifierInputBehavior
        fun C(Other: Any): KeyAsModifierInputBehavior
    }
}

external open class MeshSurfacePointToolBuilder : InteractiveToolBuilder {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MeshSurfacePointToolBuilder
        fun Find(Outer: UObject, ResourceName: String): MeshSurfacePointToolBuilder
        fun GetDefaultObject(): MeshSurfacePointToolBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MeshSurfacePointToolBuilder
        fun C(Other: UObject): MeshSurfacePointToolBuilder
        fun C(Other: Any): MeshSurfacePointToolBuilder
    }
}

external open class MouseHoverBehavior : InputBehavior {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MouseHoverBehavior
        fun Find(Outer: UObject, ResourceName: String): MouseHoverBehavior
        fun GetDefaultObject(): MouseHoverBehavior
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MouseHoverBehavior
        fun C(Other: UObject): MouseHoverBehavior
        fun C(Other: Any): MouseHoverBehavior
    }
}

external open class MultiClickSequenceInputBehavior : AnyButtonInputBehavior {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MultiClickSequenceInputBehavior
        fun Find(Outer: UObject, ResourceName: String): MultiClickSequenceInputBehavior
        fun GetDefaultObject(): MultiClickSequenceInputBehavior
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MultiClickSequenceInputBehavior
        fun C(Other: UObject): MultiClickSequenceInputBehavior
        fun C(Other: Any): MultiClickSequenceInputBehavior
    }
}

external open class MultiSelectionTool : InteractiveTool {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MultiSelectionTool
        fun Find(Outer: UObject, ResourceName: String): MultiSelectionTool
        fun GetDefaultObject(): MultiSelectionTool
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MultiSelectionTool
        fun C(Other: UObject): MultiSelectionTool
        fun C(Other: Any): MultiSelectionTool
    }
}

external open class GizmoFloatParameterChange {
    open var InitialValue: Number
    open var CurrentValue: Number
    open fun clone(): GizmoFloatParameterChange

    companion object {
        fun C(Other: UObject): GizmoFloatParameterChange
        fun C(Other: Any): GizmoFloatParameterChange
    }
}

external open class GizmoLocalFloatParameterSource : GizmoBaseFloatParameterSource {
    constructor()
    constructor(Outer: UObject)
    open var Value: Number
    open var LastChange: GizmoFloatParameterChange

    companion object {
        fun Load(ResourceName: String): GizmoLocalFloatParameterSource
        fun Find(Outer: UObject, ResourceName: String): GizmoLocalFloatParameterSource
        fun GetDefaultObject(): GizmoLocalFloatParameterSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoLocalFloatParameterSource
        fun C(Other: UObject): GizmoLocalFloatParameterSource
        fun C(Other: Any): GizmoLocalFloatParameterSource
    }
}

external open class GizmoBaseVec2ParameterSource : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GizmoBaseVec2ParameterSource
        fun Find(Outer: UObject, ResourceName: String): GizmoBaseVec2ParameterSource
        fun GetDefaultObject(): GizmoBaseVec2ParameterSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoBaseVec2ParameterSource
        fun C(Other: UObject): GizmoBaseVec2ParameterSource
        fun C(Other: Any): GizmoBaseVec2ParameterSource
    }
}

external open class GizmoVec2ParameterChange {
    open var InitialValue: Vector2D
    open var CurrentValue: Vector2D
    open fun clone(): GizmoVec2ParameterChange

    companion object {
        fun C(Other: UObject): GizmoVec2ParameterChange
        fun C(Other: Any): GizmoVec2ParameterChange
    }
}

external open class GizmoLocalVec2ParameterSource : GizmoBaseVec2ParameterSource {
    constructor()
    constructor(Outer: UObject)
    open var Value: Vector2D
    open var LastChange: GizmoVec2ParameterChange

    companion object {
        fun Load(ResourceName: String): GizmoLocalVec2ParameterSource
        fun Find(Outer: UObject, ResourceName: String): GizmoLocalVec2ParameterSource
        fun GetDefaultObject(): GizmoLocalVec2ParameterSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoLocalVec2ParameterSource
        fun C(Other: UObject): GizmoLocalVec2ParameterSource
        fun C(Other: Any): GizmoLocalVec2ParameterSource
    }
}

external open class GizmoAxisTranslationParameterSource : GizmoBaseFloatParameterSource {
    constructor()
    constructor(Outer: UObject)
    open var AxisSource: Any
    open var TransformSource: Any
    open var Parameter: Number
    open var LastChange: GizmoFloatParameterChange
    open var CurTranslationAxis: Vector
    open var CurTranslationOrigin: Vector
    open var InitialTransform: Transform

    companion object {
        fun Load(ResourceName: String): GizmoAxisTranslationParameterSource
        fun Find(Outer: UObject, ResourceName: String): GizmoAxisTranslationParameterSource
        fun GetDefaultObject(): GizmoAxisTranslationParameterSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoAxisTranslationParameterSource
        fun C(Other: UObject): GizmoAxisTranslationParameterSource
        fun C(Other: Any): GizmoAxisTranslationParameterSource
    }
}

external open class GizmoPlaneTranslationParameterSource : GizmoBaseVec2ParameterSource {
    constructor()
    constructor(Outer: UObject)
    open var AxisSource: Any
    open var TransformSource: Any
    open var Parameter: Vector2D
    open var LastChange: GizmoVec2ParameterChange
    open var CurTranslationOrigin: Vector
    open var CurTranslationNormal: Vector
    open var CurTranslationAxisX: Vector
    open var CurTranslationAxisY: Vector
    open var InitialTransform: Transform

    companion object {
        fun Load(ResourceName: String): GizmoPlaneTranslationParameterSource
        fun Find(Outer: UObject, ResourceName: String): GizmoPlaneTranslationParameterSource
        fun GetDefaultObject(): GizmoPlaneTranslationParameterSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoPlaneTranslationParameterSource
        fun C(Other: UObject): GizmoPlaneTranslationParameterSource
        fun C(Other: Any): GizmoPlaneTranslationParameterSource
    }
}

external open class GizmoAxisRotationParameterSource : GizmoBaseFloatParameterSource {
    constructor()
    constructor(Outer: UObject)
    open var AxisSource: Any
    open var TransformSource: Any
    open var Angle: Number
    open var LastChange: GizmoFloatParameterChange
    open var CurRotationAxis: Vector
    open var CurRotationOrigin: Vector
    open var InitialTransform: Transform

    companion object {
        fun Load(ResourceName: String): GizmoAxisRotationParameterSource
        fun Find(Outer: UObject, ResourceName: String): GizmoAxisRotationParameterSource
        fun GetDefaultObject(): GizmoAxisRotationParameterSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoAxisRotationParameterSource
        fun C(Other: UObject): GizmoAxisRotationParameterSource
        fun C(Other: Any): GizmoAxisRotationParameterSource
    }
}

external open class GizmoUniformScaleParameterSource : GizmoBaseVec2ParameterSource {
    constructor()
    constructor(Outer: UObject)
    open var AxisSource: Any
    open var TransformSource: Any
    open var ScaleMultiplier: Number
    open var Parameter: Vector2D
    open var LastChange: GizmoVec2ParameterChange
    open var CurScaleOrigin: Vector
    open var CurScaleNormal: Vector
    open var CurScaleAxisX: Vector
    open var CurScaleAxisY: Vector
    open var InitialTransform: Transform

    companion object {
        fun Load(ResourceName: String): GizmoUniformScaleParameterSource
        fun Find(Outer: UObject, ResourceName: String): GizmoUniformScaleParameterSource
        fun GetDefaultObject(): GizmoUniformScaleParameterSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoUniformScaleParameterSource
        fun C(Other: UObject): GizmoUniformScaleParameterSource
        fun C(Other: Any): GizmoUniformScaleParameterSource
    }
}

external open class GizmoAxisScaleParameterSource : GizmoBaseFloatParameterSource {
    constructor()
    constructor(Outer: UObject)
    open var AxisSource: Any
    open var TransformSource: Any
    open var ScaleMultiplier: Number
    open var Parameter: Number
    open var LastChange: GizmoFloatParameterChange
    open var CurScaleAxis: Vector
    open var CurScaleOrigin: Vector
    open var InitialTransform: Transform

    companion object {
        fun Load(ResourceName: String): GizmoAxisScaleParameterSource
        fun Find(Outer: UObject, ResourceName: String): GizmoAxisScaleParameterSource
        fun GetDefaultObject(): GizmoAxisScaleParameterSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoAxisScaleParameterSource
        fun C(Other: UObject): GizmoAxisScaleParameterSource
        fun C(Other: Any): GizmoAxisScaleParameterSource
    }
}

external open class GizmoPlaneScaleParameterSource : GizmoBaseVec2ParameterSource {
    constructor()
    constructor(Outer: UObject)
    open var AxisSource: Any
    open var TransformSource: Any
    open var ScaleMultiplier: Number
    open var Parameter: Vector2D
    open var LastChange: GizmoVec2ParameterChange
    open var CurScaleOrigin: Vector
    open var CurScaleNormal: Vector
    open var CurScaleAxisX: Vector
    open var CurScaleAxisY: Vector
    open var InitialTransform: Transform

    companion object {
        fun Load(ResourceName: String): GizmoPlaneScaleParameterSource
        fun Find(Outer: UObject, ResourceName: String): GizmoPlaneScaleParameterSource
        fun GetDefaultObject(): GizmoPlaneScaleParameterSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoPlaneScaleParameterSource
        fun C(Other: UObject): GizmoPlaneScaleParameterSource
        fun C(Other: Any): GizmoPlaneScaleParameterSource
    }
}

external open class PlanePositionGizmoBuilder : InteractiveGizmoBuilder {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PlanePositionGizmoBuilder
        fun Find(Outer: UObject, ResourceName: String): PlanePositionGizmoBuilder
        fun GetDefaultObject(): PlanePositionGizmoBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PlanePositionGizmoBuilder
        fun C(Other: UObject): PlanePositionGizmoBuilder
        fun C(Other: Any): PlanePositionGizmoBuilder
    }
}

external open class PlanePositionGizmo : InteractiveGizmo {
    constructor()
    constructor(Outer: UObject)
    open var AxisSource: Any
    open var ParameterSource: Any
    open var HitTarget: Any
    open var StateTarget: Any
    open var bEnableSignedAxis: Boolean
    open var bFlipX: Boolean
    open var bFlipY: Boolean
    open var bInInteraction: Boolean
    open var InteractionOrigin: Vector
    open var InteractionNormal: Vector
    open var InteractionAxisX: Vector
    open var InteractionAxisY: Vector
    open var InteractionStartPoint: Vector
    open var InteractionCurPoint: Vector
    open var InteractionStartParameter: Vector2D
    open var InteractionCurParameter: Vector2D
    open var ParameterSigns: Vector2D

    companion object {
        fun Load(ResourceName: String): PlanePositionGizmo
        fun Find(Outer: UObject, ResourceName: String): PlanePositionGizmo
        fun GetDefaultObject(): PlanePositionGizmo
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PlanePositionGizmo
        fun C(Other: UObject): PlanePositionGizmo
        fun C(Other: Any): PlanePositionGizmo
    }
}

external open class SelectionSet : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SelectionSet
        fun Find(Outer: UObject, ResourceName: String): SelectionSet
        fun GetDefaultObject(): SelectionSet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SelectionSet
        fun C(Other: UObject): SelectionSet
        fun C(Other: Any): SelectionSet
    }
}

external open class MeshSelectionSet : SelectionSet {
    constructor()
    constructor(Outer: UObject)
    open var Vertices: Array<Number>
    open var Edges: Array<Number>
    open var Faces: Array<Number>
    open var Groups: Array<Number>

    companion object {
        fun Load(ResourceName: String): MeshSelectionSet
        fun Find(Outer: UObject, ResourceName: String): MeshSelectionSet
        fun GetDefaultObject(): MeshSelectionSet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MeshSelectionSet
        fun C(Other: UObject): MeshSelectionSet
        fun C(Other: Any): MeshSelectionSet
    }
}

external open class SingleClickInputBehavior : AnyButtonInputBehavior {
    constructor()
    constructor(Outer: UObject)
    open var HitTestOnRelease: Boolean

    companion object {
        fun Load(ResourceName: String): SingleClickInputBehavior
        fun Find(Outer: UObject, ResourceName: String): SingleClickInputBehavior
        fun GetDefaultObject(): SingleClickInputBehavior
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SingleClickInputBehavior
        fun C(Other: UObject): SingleClickInputBehavior
        fun C(Other: Any): SingleClickInputBehavior
    }
}

external open class SingleClickToolBuilder : InteractiveToolBuilder {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SingleClickToolBuilder
        fun Find(Outer: UObject, ResourceName: String): SingleClickToolBuilder
        fun GetDefaultObject(): SingleClickToolBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SingleClickToolBuilder
        fun C(Other: UObject): SingleClickToolBuilder
        fun C(Other: Any): SingleClickToolBuilder
    }
}

external open class SingleClickTool : InteractiveTool {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SingleClickTool
        fun Find(Outer: UObject, ResourceName: String): SingleClickTool
        fun GetDefaultObject(): SingleClickTool
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SingleClickTool
        fun C(Other: UObject): SingleClickTool
        fun C(Other: Any): SingleClickTool
    }
}

external open class GizmoNilStateTarget : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GizmoNilStateTarget
        fun Find(Outer: UObject, ResourceName: String): GizmoNilStateTarget
        fun GetDefaultObject(): GizmoNilStateTarget
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoNilStateTarget
        fun C(Other: UObject): GizmoNilStateTarget
        fun C(Other: Any): GizmoNilStateTarget
    }
}

external open class GizmoLambdaStateTarget : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GizmoLambdaStateTarget
        fun Find(Outer: UObject, ResourceName: String): GizmoLambdaStateTarget
        fun GetDefaultObject(): GizmoLambdaStateTarget
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoLambdaStateTarget
        fun C(Other: UObject): GizmoLambdaStateTarget
        fun C(Other: Any): GizmoLambdaStateTarget
    }
}

external open class GizmoObjectModifyStateTarget : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GizmoObjectModifyStateTarget
        fun Find(Outer: UObject, ResourceName: String): GizmoObjectModifyStateTarget
        fun GetDefaultObject(): GizmoObjectModifyStateTarget
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoObjectModifyStateTarget
        fun C(Other: UObject): GizmoObjectModifyStateTarget
        fun C(Other: Any): GizmoObjectModifyStateTarget
    }
}

external open class TransformGizmoActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : GizmoActor {
    open var TranslateX: PrimitiveComponent
    open var TranslateY: PrimitiveComponent
    open var TranslateZ: PrimitiveComponent
    open var TranslateYZ: PrimitiveComponent
    open var TranslateXZ: PrimitiveComponent
    open var TranslateXY: PrimitiveComponent
    open var RotateX: PrimitiveComponent
    open var RotateY: PrimitiveComponent
    open var RotateZ: PrimitiveComponent
    open var UniformScale: PrimitiveComponent
    open var AxisScaleX: PrimitiveComponent
    open var AxisScaleY: PrimitiveComponent
    open var AxisScaleZ: PrimitiveComponent
    open var PlaneScaleYZ: PrimitiveComponent
    open var PlaneScaleXZ: PrimitiveComponent
    open var PlaneScaleXY: PrimitiveComponent

    companion object {
        fun GetDefaultObject(): TransformGizmoActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TransformGizmoActor
        fun C(Other: UObject): TransformGizmoActor
        fun C(Other: Any): TransformGizmoActor
    }
}

external open class TransformGizmoBuilder : InteractiveGizmoBuilder {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TransformGizmoBuilder
        fun Find(Outer: UObject, ResourceName: String): TransformGizmoBuilder
        fun GetDefaultObject(): TransformGizmoBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TransformGizmoBuilder
        fun C(Other: UObject): TransformGizmoBuilder
        fun C(Other: Any): TransformGizmoBuilder
    }
}

external object EToolContextCoordinateSystem {
    var World: String /* "World" */
    var Local: String /* "Local" */
    var EToolContextCoordinateSystem_MAX: String /* "EToolContextCoordinateSystem_MAX" */
}

external open class GizmoBaseTransformSource : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GizmoBaseTransformSource
        fun Find(Outer: UObject, ResourceName: String): GizmoBaseTransformSource
        fun GetDefaultObject(): GizmoBaseTransformSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoBaseTransformSource
        fun C(Other: UObject): GizmoBaseTransformSource
        fun C(Other: Any): GizmoBaseTransformSource
    }
}

external open class GizmoScaledTransformSource : GizmoBaseTransformSource {
    constructor()
    constructor(Outer: UObject)
    open var ChildTransformSource: Any

    companion object {
        fun Load(ResourceName: String): GizmoScaledTransformSource
        fun Find(Outer: UObject, ResourceName: String): GizmoScaledTransformSource
        fun GetDefaultObject(): GizmoScaledTransformSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoScaledTransformSource
        fun C(Other: UObject): GizmoScaledTransformSource
        fun C(Other: Any): GizmoScaledTransformSource
    }
}

external open class TransformGizmo : InteractiveGizmo {
    constructor()
    constructor(Outer: UObject)
    open var ActiveTarget: TransformProxy
    open var bSnapToWorldGrid: Boolean
    open var bGridSizeIsExplicit: Boolean
    open var ExplicitGridSize: Vector
    open var bRotationGridSizeIsExplicit: Boolean
    open var ExplicitRotationGridSize: Rotator
    open var bSnapToWorldRotGrid: Boolean
    open var bUseContextCoordinateSystem: Boolean
    open var CurrentCoordinateSystem: String /* "World" | "Local" | "EToolContextCoordinateSystem_MAX" */
    open var ActiveComponents: Array<PrimitiveComponent>
    open var NonuniformScaleComponents: Array<PrimitiveComponent>
    open var ActiveGizmos: Array<InteractiveGizmo>
    open var CameraAxisSource: GizmoConstantFrameAxisSource
    open var AxisXSource: GizmoComponentAxisSource
    open var AxisYSource: GizmoComponentAxisSource
    open var AxisZSource: GizmoComponentAxisSource
    open var UnitAxisXSource: GizmoComponentAxisSource
    open var UnitAxisYSource: GizmoComponentAxisSource
    open var UnitAxisZSource: GizmoComponentAxisSource
    open var StateTarget: GizmoTransformChangeStateTarget
    open var ScaledTransformSource: GizmoScaledTransformSource

    companion object {
        fun Load(ResourceName: String): TransformGizmo
        fun Find(Outer: UObject, ResourceName: String): TransformGizmo
        fun GetDefaultObject(): TransformGizmo
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TransformGizmo
        fun C(Other: UObject): TransformGizmo
        fun C(Other: Any): TransformGizmo
    }
}

external open class GizmoComponentWorldTransformSource : GizmoBaseTransformSource {
    constructor()
    constructor(Outer: UObject)
    open var Component: SceneComponent
    open var bModifyComponentOnTransform: Boolean

    companion object {
        fun Load(ResourceName: String): GizmoComponentWorldTransformSource
        fun Find(Outer: UObject, ResourceName: String): GizmoComponentWorldTransformSource
        fun GetDefaultObject(): GizmoComponentWorldTransformSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoComponentWorldTransformSource
        fun C(Other: UObject): GizmoComponentWorldTransformSource
        fun C(Other: Any): GizmoComponentWorldTransformSource
    }
}

external open class GizmoTransformProxyTransformSource : GizmoBaseTransformSource {
    constructor()
    constructor(Outer: UObject)
    open var Proxy: TransformProxy

    companion object {
        fun Load(ResourceName: String): GizmoTransformProxyTransformSource
        fun Find(Outer: UObject, ResourceName: String): GizmoTransformProxyTransformSource
        fun GetDefaultObject(): GizmoTransformProxyTransformSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoTransformProxyTransformSource
        fun C(Other: UObject): GizmoTransformProxyTransformSource
        fun C(Other: Any): GizmoTransformProxyTransformSource
    }
}

external open class EdModeInteractiveToolsContext : InteractiveToolsContext {
    constructor()
    constructor(Outer: UObject)
    open var StandardVertexColorMaterial: MaterialInterface

    companion object {
        fun Load(ResourceName: String): EdModeInteractiveToolsContext
        fun Find(Outer: UObject, ResourceName: String): EdModeInteractiveToolsContext
        fun GetDefaultObject(): EdModeInteractiveToolsContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EdModeInteractiveToolsContext
        fun C(Other: UObject): EdModeInteractiveToolsContext
        fun C(Other: Any): EdModeInteractiveToolsContext
    }
}

external open class PIEPreviewSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var WindowPosX: Number
    open var WindowPosY: Number
    open var WindowScalingFactor: Number

    companion object {
        fun Load(ResourceName: String): PIEPreviewSettings
        fun Find(Outer: UObject, ResourceName: String): PIEPreviewSettings
        fun GetDefaultObject(): PIEPreviewSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PIEPreviewSettings
        fun C(Other: UObject): PIEPreviewSettings
        fun C(Other: Any): PIEPreviewSettings
    }
}

external open class ClothConfigCommon : ClothConfigBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ClothConfigCommon
        fun Find(Outer: UObject, ResourceName: String): ClothConfigCommon
        fun GetDefaultObject(): ClothConfigCommon
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClothConfigCommon
        fun C(Other: UObject): ClothConfigCommon
        fun C(Other: Any): ClothConfigCommon
    }
}

external object EClothingWindMethodNv {
    var Legacy: String /* "Legacy" */
    var Accurate: String /* "Accurate" */
    var EClothingWindMethodNv_MAX: String /* "EClothingWindMethodNv_MAX" */
}

external open class ClothConstraintSetupNv {
    open var Stiffness: Number
    open var StiffnessMultiplier: Number
    open var StretchLimit: Number
    open var CompressionLimit: Number
    open fun clone(): ClothConstraintSetupNv

    companion object {
        fun C(Other: UObject): ClothConstraintSetupNv
        fun C(Other: Any): ClothConstraintSetupNv
    }
}

external object EClothingWindMethod_Legacy {
    var Legacy: String /* "Legacy" */
    var Accurate: String /* "Accurate" */
    var EClothingWindMethod_MAX: String /* "EClothingWindMethod_MAX" */
}

external open class ClothConstraintSetup_Legacy {
    open var Stiffness: Number
    open var StiffnessMultiplier: Number
    open var StretchLimit: Number
    open var CompressionLimit: Number
    open fun clone(): ClothConstraintSetup_Legacy

    companion object {
        fun C(Other: UObject): ClothConstraintSetup_Legacy
        fun C(Other: Any): ClothConstraintSetup_Legacy
    }
}

external open class ClothConfigNv : ClothConfigCommon {
    constructor()
    constructor(Outer: UObject)
    open var ClothingWindMethod: String /* "Legacy" | "Accurate" | "EClothingWindMethodNv_MAX" */
    open var VerticalConstraint: ClothConstraintSetupNv
    open var HorizontalConstraint: ClothConstraintSetupNv
    open var BendConstraint: ClothConstraintSetupNv
    open var ShearConstraint: ClothConstraintSetupNv
    open var SelfCollisionRadius: Number
    open var SelfCollisionStiffness: Number
    open var SelfCollisionCullScale: Number
    open var Damping: Vector
    open var Friction: Number
    open var WindDragCoefficient: Number
    open var WindLiftCoefficient: Number
    open var LinearDrag: Vector
    open var AngularDrag: Vector
    open var LinearInertiaScale: Vector
    open var AngularInertiaScale: Vector
    open var CentrifugalInertiaScale: Vector
    open var SolverFrequency: Number
    open var StiffnessFrequency: Number
    open var GravityScale: Number
    open var GravityOverride: Vector
    open var bUseGravityOverride: Boolean
    open var TetherStiffness: Number
    open var TetherLimit: Number
    open var CollisionThickness: Number
    open var AnimDriveSpringStiffness: Number
    open var AnimDriveDamperStiffness: Number
    open var WindMethod: String /* "Legacy" | "Accurate" | "EClothingWindMethod_MAX" */
    open var VerticalConstraintConfig: ClothConstraintSetup_Legacy
    open var HorizontalConstraintConfig: ClothConstraintSetup_Legacy
    open var BendConstraintConfig: ClothConstraintSetup_Legacy
    open var ShearConstraintConfig: ClothConstraintSetup_Legacy

    companion object {
        fun Load(ResourceName: String): ClothConfigNv
        fun Find(Outer: UObject, ResourceName: String): ClothConfigNv
        fun GetDefaultObject(): ClothConfigNv
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClothConfigNv
        fun C(Other: UObject): ClothConfigNv
        fun C(Other: Any): ClothConfigNv
    }
}

external open class ClothingSimulationFactoryNv : ClothingSimulationFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ClothingSimulationFactoryNv
        fun Find(Outer: UObject, ResourceName: String): ClothingSimulationFactoryNv
        fun GetDefaultObject(): ClothingSimulationFactoryNv
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClothingSimulationFactoryNv
        fun C(Other: UObject): ClothingSimulationFactoryNv
        fun C(Other: Any): ClothingSimulationFactoryNv
    }
}

external open class ClothingSimulationInteractorNv : ClothingSimulationInteractor {
    constructor()
    constructor(Outer: UObject)
    open fun SetAnimDriveDamperStiffness(InStiffness: Number)

    companion object {
        fun Load(ResourceName: String): ClothingSimulationInteractorNv
        fun Find(Outer: UObject, ResourceName: String): ClothingSimulationInteractorNv
        fun GetDefaultObject(): ClothingSimulationInteractorNv
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClothingSimulationInteractorNv
        fun C(Other: UObject): ClothingSimulationInteractorNv
        fun C(Other: Any): ClothingSimulationInteractorNv
    }
}

external open class ClothPhysicalMeshDataNv_Legacy : ClothPhysicalMeshDataBase_Legacy {
    constructor()
    constructor(Outer: UObject)
    open var MaxDistances: Array<Number>
    open var BackstopDistances: Array<Number>
    open var BackstopRadiuses: Array<Number>
    open var AnimDriveMultipliers: Array<Number>

    companion object {
        fun Load(ResourceName: String): ClothPhysicalMeshDataNv_Legacy
        fun Find(Outer: UObject, ResourceName: String): ClothPhysicalMeshDataNv_Legacy
        fun GetDefaultObject(): ClothPhysicalMeshDataNv_Legacy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClothPhysicalMeshDataNv_Legacy
        fun C(Other: UObject): ClothPhysicalMeshDataNv_Legacy
        fun C(Other: Any): ClothPhysicalMeshDataNv_Legacy
    }
}

external open class ClothingAssetFactory : ClothingAssetFactoryBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ClothingAssetFactory
        fun Find(Outer: UObject, ResourceName: String): ClothingAssetFactory
        fun GetDefaultObject(): ClothingAssetFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClothingAssetFactory
        fun C(Other: UObject): ClothingAssetFactory
        fun C(Other: Any): ClothingAssetFactory
    }
}

external object EMovieSceneCaptureProtocolState {
    var Idle: String /* "Idle" */
    var Initialized: String /* "Initialized" */
    var Capturing: String /* "Capturing" */
    var Finalizing: String /* "Finalizing" */
    var EMovieSceneCaptureProtocolState_MAX: String /* "EMovieSceneCaptureProtocolState_MAX" */
}

external open class MovieSceneCaptureProtocolBase : UObject {
    constructor()
    constructor(Outer: UObject)
    open var State: String /* "Idle" | "Initialized" | "Capturing" | "Finalizing" | "EMovieSceneCaptureProtocolState_MAX" */
    open fun IsCapturing(): Boolean
    open fun GetState(): String /* "Idle" | "Initialized" | "Capturing" | "Finalizing" | "EMovieSceneCaptureProtocolState_MAX" */

    companion object {
        fun Load(ResourceName: String): MovieSceneCaptureProtocolBase
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCaptureProtocolBase
        fun GetDefaultObject(): MovieSceneCaptureProtocolBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCaptureProtocolBase
        fun C(Other: UObject): MovieSceneCaptureProtocolBase
        fun C(Other: Any): MovieSceneCaptureProtocolBase
    }
}

external open class MovieSceneAudioCaptureProtocolBase : MovieSceneCaptureProtocolBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneAudioCaptureProtocolBase
        fun Find(Outer: UObject, ResourceName: String): MovieSceneAudioCaptureProtocolBase
        fun GetDefaultObject(): MovieSceneAudioCaptureProtocolBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneAudioCaptureProtocolBase
        fun C(Other: UObject): MovieSceneAudioCaptureProtocolBase
        fun C(Other: Any): MovieSceneAudioCaptureProtocolBase
    }
}

external open class NullAudioCaptureProtocol : MovieSceneAudioCaptureProtocolBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NullAudioCaptureProtocol
        fun Find(Outer: UObject, ResourceName: String): NullAudioCaptureProtocol
        fun GetDefaultObject(): NullAudioCaptureProtocol
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NullAudioCaptureProtocol
        fun C(Other: UObject): NullAudioCaptureProtocol
        fun C(Other: Any): NullAudioCaptureProtocol
    }
}

external open class MasterAudioSubmixCaptureProtocol : MovieSceneAudioCaptureProtocolBase {
    constructor()
    constructor(Outer: UObject)
    open var Filename: String

    companion object {
        fun Load(ResourceName: String): MasterAudioSubmixCaptureProtocol
        fun Find(Outer: UObject, ResourceName: String): MasterAudioSubmixCaptureProtocol
        fun GetDefaultObject(): MasterAudioSubmixCaptureProtocol
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MasterAudioSubmixCaptureProtocol
        fun C(Other: UObject): MasterAudioSubmixCaptureProtocol
        fun C(Other: Any): MasterAudioSubmixCaptureProtocol
    }
}

external open class MovieSceneImageCaptureProtocolBase : MovieSceneCaptureProtocolBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneImageCaptureProtocolBase
        fun Find(Outer: UObject, ResourceName: String): MovieSceneImageCaptureProtocolBase
        fun GetDefaultObject(): MovieSceneImageCaptureProtocolBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneImageCaptureProtocolBase
        fun C(Other: UObject): MovieSceneImageCaptureProtocolBase
        fun C(Other: Any): MovieSceneImageCaptureProtocolBase
    }
}

external open class CompositionGraphCapturePasses {
    open var Value: Array<String>
    open fun clone(): CompositionGraphCapturePasses

    companion object {
        fun C(Other: UObject): CompositionGraphCapturePasses
        fun C(Other: Any): CompositionGraphCapturePasses
    }
}

external object EHDRCaptureGamut {
    var HCGM_Rec709: String /* "HCGM_Rec709" */
    var HCGM_P3DCI: String /* "HCGM_P3DCI" */
    var HCGM_Rec2020: String /* "HCGM_Rec2020" */
    var HCGM_ACES: String /* "HCGM_ACES" */
    var HCGM_ACEScg: String /* "HCGM_ACEScg" */
    var HCGM_Linear: String /* "HCGM_Linear" */
    var HCGM_MAX: String /* "HCGM_MAX" */
}

external open class CompositionGraphCaptureProtocol : MovieSceneImageCaptureProtocolBase {
    constructor()
    constructor(Outer: UObject)
    open var IncludeRenderPasses: CompositionGraphCapturePasses
    open var bCaptureFramesInHDR: Boolean
    open var HDRCompressionQuality: Number
    open var CaptureGamut: String /* "HCGM_Rec709" | "HCGM_P3DCI" | "HCGM_Rec2020" | "HCGM_ACES" | "HCGM_ACEScg" | "HCGM_Linear" | "HCGM_MAX" */
    open var PostProcessingMaterial: SoftObjectPath
    open var bDisableScreenPercentage: Boolean
    open var PostProcessingMaterialPtr: MaterialInterface

    companion object {
        fun Load(ResourceName: String): CompositionGraphCaptureProtocol
        fun Find(Outer: UObject, ResourceName: String): CompositionGraphCaptureProtocol
        fun GetDefaultObject(): CompositionGraphCaptureProtocol
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CompositionGraphCaptureProtocol
        fun C(Other: UObject): CompositionGraphCaptureProtocol
        fun C(Other: Any): CompositionGraphCaptureProtocol
    }
}

external open class FrameGrabberProtocol : MovieSceneImageCaptureProtocolBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): FrameGrabberProtocol
        fun Find(Outer: UObject, ResourceName: String): FrameGrabberProtocol
        fun GetDefaultObject(): FrameGrabberProtocol
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FrameGrabberProtocol
        fun C(Other: UObject): FrameGrabberProtocol
        fun C(Other: Any): FrameGrabberProtocol
    }
}

external open class ImageSequenceProtocol : FrameGrabberProtocol {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ImageSequenceProtocol
        fun Find(Outer: UObject, ResourceName: String): ImageSequenceProtocol
        fun GetDefaultObject(): ImageSequenceProtocol
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ImageSequenceProtocol
        fun C(Other: UObject): ImageSequenceProtocol
        fun C(Other: Any): ImageSequenceProtocol
    }
}

external open class CompressedImageSequenceProtocol : ImageSequenceProtocol {
    constructor()
    constructor(Outer: UObject)
    open var CompressionQuality: Number

    companion object {
        fun Load(ResourceName: String): CompressedImageSequenceProtocol
        fun Find(Outer: UObject, ResourceName: String): CompressedImageSequenceProtocol
        fun GetDefaultObject(): CompressedImageSequenceProtocol
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CompressedImageSequenceProtocol
        fun C(Other: UObject): CompressedImageSequenceProtocol
        fun C(Other: Any): CompressedImageSequenceProtocol
    }
}

external open class ImageSequenceProtocol_BMP : ImageSequenceProtocol {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ImageSequenceProtocol_BMP
        fun Find(Outer: UObject, ResourceName: String): ImageSequenceProtocol_BMP
        fun GetDefaultObject(): ImageSequenceProtocol_BMP
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ImageSequenceProtocol_BMP
        fun C(Other: UObject): ImageSequenceProtocol_BMP
        fun C(Other: Any): ImageSequenceProtocol_BMP
    }
}

external open class ImageSequenceProtocol_PNG : CompressedImageSequenceProtocol {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ImageSequenceProtocol_PNG
        fun Find(Outer: UObject, ResourceName: String): ImageSequenceProtocol_PNG
        fun GetDefaultObject(): ImageSequenceProtocol_PNG
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ImageSequenceProtocol_PNG
        fun C(Other: UObject): ImageSequenceProtocol_PNG
        fun C(Other: Any): ImageSequenceProtocol_PNG
    }
}

external open class ImageSequenceProtocol_JPG : CompressedImageSequenceProtocol {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ImageSequenceProtocol_JPG
        fun Find(Outer: UObject, ResourceName: String): ImageSequenceProtocol_JPG
        fun GetDefaultObject(): ImageSequenceProtocol_JPG
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ImageSequenceProtocol_JPG
        fun C(Other: UObject): ImageSequenceProtocol_JPG
        fun C(Other: Any): ImageSequenceProtocol_JPG
    }
}

external open class ImageSequenceProtocol_EXR : ImageSequenceProtocol {
    constructor()
    constructor(Outer: UObject)
    open var bCompressed: Boolean
    open var CaptureGamut: String /* "HCGM_Rec709" | "HCGM_P3DCI" | "HCGM_Rec2020" | "HCGM_ACES" | "HCGM_ACEScg" | "HCGM_Linear" | "HCGM_MAX" */

    companion object {
        fun Load(ResourceName: String): ImageSequenceProtocol_EXR
        fun Find(Outer: UObject, ResourceName: String): ImageSequenceProtocol_EXR
        fun GetDefaultObject(): ImageSequenceProtocol_EXR
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ImageSequenceProtocol_EXR
        fun C(Other: UObject): ImageSequenceProtocol_EXR
        fun C(Other: Any): ImageSequenceProtocol_EXR
    }
}

external open class MovieSceneCaptureInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneCaptureInterface
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCaptureInterface
        fun GetDefaultObject(): MovieSceneCaptureInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCaptureInterface
        fun C(Other: UObject): MovieSceneCaptureInterface
        fun C(Other: Any): MovieSceneCaptureInterface
    }
}

external open class DirectoryPath {
    open var Path: String
    open fun clone(): DirectoryPath

    companion object {
        fun C(Other: UObject): DirectoryPath
        fun C(Other: Any): DirectoryPath
    }
}

external open class CaptureResolution {
    open var ResX: Number
    open var ResY: Number
    open fun clone(): CaptureResolution

    companion object {
        fun C(Other: UObject): CaptureResolution
        fun C(Other: Any): CaptureResolution
    }
}

external open class MovieSceneCaptureSettings {
    open var OutputDirectory: DirectoryPath
    open var GameModeOverride: UnrealEngineClass
    open var OutputFormat: String
    open var bOverwriteExisting: Boolean
    open var bUseRelativeFrameNumbers: Boolean
    open var HandleFrames: Number
    open var MovieExtension: String
    open var ZeroPadFrameNumbers: Number
    open var FrameRate: FrameRate
    open var bUseCustomFrameRate: Boolean
    open var CustomFrameRate: FrameRate
    open var Resolution: CaptureResolution
    open var bEnableTextureStreaming: Boolean
    open var bCinematicEngineScalability: Boolean
    open var bCinematicMode: Boolean
    open var bAllowMovement: Boolean
    open var bAllowTurning: Boolean
    open var bShowPlayer: Boolean
    open var bShowHUD: Boolean
    open var bUsePathTracer: Boolean
    open var PathTracerSamplePerPixel: Number
    open fun clone(): MovieSceneCaptureSettings

    companion object {
        fun C(Other: UObject): MovieSceneCaptureSettings
        fun C(Other: Any): MovieSceneCaptureSettings
    }
}

external open class MovieSceneCapture : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ImageCaptureProtocolType: SoftClassPath
    open var AudioCaptureProtocolType: SoftClassPath
    open var ImageCaptureProtocol: MovieSceneImageCaptureProtocolBase
    open var AudioCaptureProtocol: MovieSceneAudioCaptureProtocolBase
    open var Settings: MovieSceneCaptureSettings
    open var bUseSeparateProcess: Boolean
    open var bCloseEditorWhenCaptureStarts: Boolean
    open var AdditionalCommandLineArguments: String
    open var InheritedCommandLineArguments: String
    open fun SetImageCaptureProtocolType(ProtocolType: UnrealEngineClass)
    open fun SetAudioCaptureProtocolType(ProtocolType: UnrealEngineClass)
    open fun GetImageCaptureProtocol(): MovieSceneCaptureProtocolBase
    open fun GetAudioCaptureProtocol(): MovieSceneCaptureProtocolBase

    companion object {
        fun Load(ResourceName: String): MovieSceneCapture
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCapture
        fun GetDefaultObject(): MovieSceneCapture
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCapture
        fun C(Other: UObject): MovieSceneCapture
        fun C(Other: Any): MovieSceneCapture
    }
}

external open class LevelCapture : MovieSceneCapture {
    constructor()
    constructor(Outer: UObject)
    open var bAutoStartCapture: Boolean
    open var PrerequisiteActorId: Guid

    companion object {
        fun Load(ResourceName: String): LevelCapture
        fun Find(Outer: UObject, ResourceName: String): LevelCapture
        fun GetDefaultObject(): LevelCapture
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelCapture
        fun C(Other: UObject): LevelCapture
        fun C(Other: Any): LevelCapture
    }
}

external open class MovieSceneCaptureEnvironment : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneCaptureEnvironment
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCaptureEnvironment
        fun GetDefaultObject(): MovieSceneCaptureEnvironment
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCaptureEnvironment
        fun IsCaptureInProgress(): Boolean
        fun GetCaptureFrameNumber(): Number
        fun GetCaptureElapsedTime(): Number
        fun FindImageCaptureProtocol(): MovieSceneImageCaptureProtocolBase
        fun FindAudioCaptureProtocol(): MovieSceneAudioCaptureProtocolBase
        fun C(Other: UObject): MovieSceneCaptureEnvironment
        fun C(Other: Any): MovieSceneCaptureEnvironment
    }
}

external open class CapturedPixelsID {
    open var Identifiers: Any
    open fun clone(): CapturedPixelsID

    companion object {
        fun C(Other: UObject): CapturedPixelsID
        fun C(Other: Any): CapturedPixelsID
    }
}

external open class CapturedPixels {
    open fun clone(): CapturedPixels

    companion object {
        fun C(Other: UObject): CapturedPixels
        fun C(Other: Any): CapturedPixels
    }
}

external open class FrameMetrics {
    open var TotalElapsedTime: Number
    open var FrameDelta: Number
    open var FrameNumber: Number
    open var NumDroppedFrames: Number
    open fun clone(): FrameMetrics

    companion object {
        fun C(Other: UObject): FrameMetrics
        fun C(Other: Any): FrameMetrics
    }
}

external open class UserDefinedCaptureProtocol : MovieSceneImageCaptureProtocolBase {
    constructor()
    constructor(Outer: UObject)
    open var World: World
    open fun StopCapturingFinalPixels()
    open fun StartCapturingFinalPixels(StreamID: CapturedPixelsID)
    open fun ResolveBuffer(Buffer: Texture, BufferID: CapturedPixelsID)
    open fun OnWarmUp()
    open fun OnTick()
    open fun OnStartCapture()
    open fun OnSetup(): Boolean
    open fun OnPreTick()
    open fun OnPixelsReceived(Pixels: CapturedPixels, ID: CapturedPixelsID, FrameMetrics: FrameMetrics)
    open fun OnPauseCapture()
    open fun OnFinalize()
    open fun OnCaptureFrame()
    open fun OnCanFinalize(): Boolean
    open fun OnBeginFinalize()
    open fun GetCurrentFrameMetrics(): FrameMetrics
    open fun GenerateFilename(InFrameMetrics: FrameMetrics): String

    companion object {
        fun Load(ResourceName: String): UserDefinedCaptureProtocol
        fun Find(Outer: UObject, ResourceName: String): UserDefinedCaptureProtocol
        fun GetDefaultObject(): UserDefinedCaptureProtocol
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UserDefinedCaptureProtocol
        fun C(Other: UObject): UserDefinedCaptureProtocol
        fun C(Other: Any): UserDefinedCaptureProtocol
    }
}

external open class UserDefinedImageCaptureProtocol : UserDefinedCaptureProtocol {
    constructor()
    constructor(Outer: UObject)
    open var Format: String /* "PNG" | "JPG" | "BMP" | "EXR" | "EDesiredImageFormat_MAX" */
    open var bEnableCompression: Boolean
    open var CompressionQuality: Number
    open fun WriteImageToDisk(PixelData: CapturedPixels, StreamID: CapturedPixelsID, FrameMetrics: FrameMetrics, bCopyImageData: Boolean)
    open fun GenerateFilenameForCurrentFrame(): String
    open fun GenerateFilenameForBuffer(Buffer: Texture, StreamID: CapturedPixelsID): String

    companion object {
        fun Load(ResourceName: String): UserDefinedImageCaptureProtocol
        fun Find(Outer: UObject, ResourceName: String): UserDefinedImageCaptureProtocol
        fun GetDefaultObject(): UserDefinedImageCaptureProtocol
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UserDefinedImageCaptureProtocol
        fun C(Other: UObject): UserDefinedImageCaptureProtocol
        fun C(Other: Any): UserDefinedImageCaptureProtocol
    }
}

external open class VideoCaptureProtocol : FrameGrabberProtocol {
    constructor()
    constructor(Outer: UObject)
    open var bUseCompression: Boolean
    open var CompressionQuality: Number

    companion object {
        fun Load(ResourceName: String): VideoCaptureProtocol
        fun Find(Outer: UObject, ResourceName: String): VideoCaptureProtocol
        fun GetDefaultObject(): VideoCaptureProtocol
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VideoCaptureProtocol
        fun C(Other: UObject): VideoCaptureProtocol
        fun C(Other: Any): VideoCaptureProtocol
    }
}

external open class SequenceRecordingBase : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SequenceRecordingBase
        fun Find(Outer: UObject, ResourceName: String): SequenceRecordingBase
        fun GetDefaultObject(): SequenceRecordingBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SequenceRecordingBase
        fun C(Other: UObject): SequenceRecordingBase
        fun C(Other: Any): SequenceRecordingBase
    }
}

external open class ActorRecordingSettings {
    open var Settings: Array<UObject>
    open fun clone(): ActorRecordingSettings

    companion object {
        fun C(Other: UObject): ActorRecordingSettings
        fun C(Other: Any): ActorRecordingSettings
    }
}

external open class LevelSequenceObjectReferenceMap {
    open fun clone(): LevelSequenceObjectReferenceMap

    companion object {
        fun C(Other: UObject): LevelSequenceObjectReferenceMap
        fun C(Other: Any): LevelSequenceObjectReferenceMap
    }
}

external open class LevelSequenceBindingReferences {
    open var BindingIdToReferences: Any
    open var AnimSequenceInstances: Any
    open fun clone(): LevelSequenceBindingReferences

    companion object {
        fun C(Other: UObject): LevelSequenceBindingReferences
        fun C(Other: Any): LevelSequenceBindingReferences
    }
}

external open class TakeRecorderSource : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bEnabled: Boolean
    open var TakeNumber: Number
    open var TrackTint: Color

    companion object {
        fun Load(ResourceName: String): TakeRecorderSource
        fun Find(Outer: UObject, ResourceName: String): TakeRecorderSource
        fun GetDefaultObject(): TakeRecorderSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TakeRecorderSource
        fun C(Other: UObject): TakeRecorderSource
        fun C(Other: Any): TakeRecorderSource
    }
}

external open class MovieSceneSectionParameters {
    open var StartFrameOffset: FrameNumber
    open var bCanLoop: Boolean
    open var EndFrameOffset: FrameNumber
    open var FirstLoopStartFrameOffset: FrameNumber
    open var TimeScale: Number
    open var HierarchicalBias: Number
    open var StartOffset: Number
    open var PrerollTime: Number
    open var PostrollTime: Number
    open fun clone(): MovieSceneSectionParameters

    companion object {
        fun C(Other: UObject): MovieSceneSectionParameters
        fun C(Other: Any): MovieSceneSectionParameters
    }
}

external open class MovieSceneSubSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var Parameters: MovieSceneSectionParameters
    open var StartOffset: Number
    open var TimeScale: Number
    override var PrerollTime: Number
    open var NetworkMask: Number
    open var SubSequence: MovieSceneSequence
    open var ActorToRecord: Any
    open var TargetSequenceName: String
    open var TargetPathToRecordTo: DirectoryPath
    open fun SetSequence(Sequence: MovieSceneSequence)
    open fun GetSequence(): MovieSceneSequence

    companion object {
        fun Load(ResourceName: String): MovieSceneSubSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneSubSection
        fun GetDefaultObject(): MovieSceneSubSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneSubSection
        fun C(Other: UObject): MovieSceneSubSection
        fun C(Other: Any): MovieSceneSubSection
    }
}

external open class TakeRecorderSources : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Sources: Array<TakeRecorderSource>
    open var SourceSubSequenceMap: Any
    open var ActiveSubSections: Array<MovieSceneSubSection>
    open fun StartRecordingSource(InSources: Array<TakeRecorderSource>, CurrentFrameTime: QualifiedFrameTime)
    open fun RemoveSource(InSource: TakeRecorderSource)
    open fun GetSources(): Array<TakeRecorderSource>
    open fun AddSource(InSourceType: UnrealEngineClass): TakeRecorderSource

    companion object {
        fun Load(ResourceName: String): TakeRecorderSources
        fun Find(Outer: UObject, ResourceName: String): TakeRecorderSources
        fun GetDefaultObject(): TakeRecorderSources
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TakeRecorderSources
        fun C(Other: UObject): TakeRecorderSources
        fun C(Other: Any): TakeRecorderSources
    }
}

external interface `T$585` {
    var Year: Number
    var Month: Number
    var Day: Number
    var Hour: Number
    var Minute: Number
    var Second: Number
    var Millisecond: Number
}

external open class DateTime {
    open fun clone(): DateTime
    open fun AsDate(): String
    open fun AsDateTime(): String
    open fun AsTime(): String
    open fun AsDate(InTimeZone: String): String
    open fun AsDateTime(InTimeZone: String): String
    open fun AsTime(InTimeZone: String): String
    open fun Add_DateTimeDateTime(B: DateTime): DateTime
    open fun Add_DateTimeTimespan(B: Timespan): DateTime
    open fun BreakDateTime(Year: Number = definedExternally, Month: Number = definedExternally, Day: Number = definedExternally, Hour: Number = definedExternally, Minute: Number = definedExternally, Second: Number = definedExternally, Millisecond: Number = definedExternally): `T$585`
    open fun Equal(B: DateTime): Boolean
    open fun GetDate(): DateTime
    open fun GetDay(): Number
    open fun GetDayOfYear(): Number
    open fun GetHour(): Number
    open fun GetHour12(): Number
    open fun GetMillisecond(): Number
    open fun GetMinute(): Number
    open fun GetMonth(): Number
    open fun GetSecond(): Number
    open fun GetTimeOfDay(): Timespan
    open fun GetYear(): Number
    open fun Greater_DateTimeDateTime(B: DateTime): Boolean
    open fun GreaterEqual_DateTimeDateTime(B: DateTime): Boolean
    open fun IsAfternoon(): Boolean
    open fun IsMorning(): Boolean
    open fun Less_DateTimeDateTime(B: DateTime): Boolean
    open fun LessEqual_DateTimeDateTime(B: DateTime): Boolean
    open fun NotEqual(B: DateTime): Boolean
    open fun Subtract_DateTimeDateTime(B: DateTime): Timespan
    open fun Subtract_DateTimeTimespan(B: Timespan): DateTime
    open fun ScheduleLocalNotificationAtTime(LocalTime: Boolean, Title: String, Body: String, Action: String, ActivationEvent: String): Number
    open fun ScheduleLocalNotificationBadgeAtTime(LocalTime: Boolean, ActivationEvent: String): Number

    companion object {
        fun C(Other: UObject): DateTime
        fun C(Other: Any): DateTime
        fun AsDate(InDateTime: DateTime): String
        fun AsDateTime(In: DateTime): String
        fun AsTime(In: DateTime): String
        fun AsDate(InDateTime: DateTime, InTimeZone: String): String
        fun AsDateTime(InDateTime: DateTime, InTimeZone: String): String
        fun AsTime(InDateTime: DateTime, InTimeZone: String): String
        fun Add_DateTimeDateTime(A: DateTime, B: DateTime): DateTime
        fun Add_DateTimeTimespan(A: DateTime, B: Timespan): DateTime
        fun BreakDateTime(InDateTime: DateTime, Year: Number = definedExternally, Month: Number = definedExternally, Day: Number = definedExternally, Hour: Number = definedExternally, Minute: Number = definedExternally, Second: Number = definedExternally, Millisecond: Number = definedExternally): `T$585`
        fun Equal(A: DateTime, B: DateTime): Boolean
        fun GetDate(A: DateTime): DateTime
        fun GetDay(A: DateTime): Number
        fun GetDayOfYear(A: DateTime): Number
        fun GetHour(A: DateTime): Number
        fun GetHour12(A: DateTime): Number
        fun GetMillisecond(A: DateTime): Number
        fun GetMinute(A: DateTime): Number
        fun GetMonth(A: DateTime): Number
        fun GetSecond(A: DateTime): Number
        fun GetTimeOfDay(A: DateTime): Timespan
        fun GetYear(A: DateTime): Number
        fun Greater_DateTimeDateTime(A: DateTime, B: DateTime): Boolean
        fun GreaterEqual_DateTimeDateTime(A: DateTime, B: DateTime): Boolean
        fun IsAfternoon(A: DateTime): Boolean
        fun IsMorning(A: DateTime): Boolean
        fun Less_DateTimeDateTime(A: DateTime, B: DateTime): Boolean
        fun LessEqual_DateTimeDateTime(A: DateTime, B: DateTime): Boolean
        fun NotEqual(A: DateTime, B: DateTime): Boolean
        fun Subtract_DateTimeDateTime(A: DateTime, B: DateTime): Timespan
        fun Subtract_DateTimeTimespan(A: DateTime, B: Timespan): DateTime
        fun ScheduleLocalNotificationAtTime(FireDateTime: DateTime, LocalTime: Boolean, Title: String, Body: String, Action: String, ActivationEvent: String): Number
        fun ScheduleLocalNotificationBadgeAtTime(FireDateTime: DateTime, LocalTime: Boolean, ActivationEvent: String): Number
        fun MaxValue(): DateTime
        fun MinValue(): DateTime
        fun MakeDateTime(Year: Number, Month: Number, Day: Number, Hour: Number, Minute: Number, Second: Number, Millisecond: Number): DateTime
        fun Now(): DateTime
        fun Today(): DateTime
        fun UtcNow(): DateTime
    }
}

external open class TakePreset : UObject {
    constructor()
    constructor(Outer: UObject)
    open var LevelSequence: LevelSequence

    companion object {
        fun Load(ResourceName: String): TakePreset
        fun Find(Outer: UObject, ResourceName: String): TakePreset
        fun GetDefaultObject(): TakePreset
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TakePreset
        fun C(Other: UObject): TakePreset
        fun C(Other: Any): TakePreset
    }
}

external open class TakeMetaData : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bIsLocked: Boolean
    open var Slate: String
    open var TakeNumber: Number
    open var Timestamp: DateTime
    open var TimecodeIn: Timecode
    open var TimecodeOut: Timecode
    open var Duration: FrameTime
    open var FrameRate: FrameRate
    open var Description: String
    open var PresetOrigin: TakePreset
    open var LevelOrigin: Level
    open var bFrameRateFromTimecode: Boolean
    open fun Unlock()
    open fun SetTimestamp(InTimestamp: DateTime)
    open fun SetTimecodeOut(InTimecodeOut: Timecode)
    open fun SetTimecodeIn(InTimecodeIn: Timecode)
    open fun SetTakeNumber(InTakeNumber: Number, bEmitChanged: Boolean)
    open fun SetSlate(InSlate: String, bEmitChanged: Boolean)
    open fun SetPresetOrigin(InPresetOrigin: TakePreset)
    open fun SetLevelOrigin(InLevelOrigin: Level)
    open fun SetFrameRateFromTimecode(InFromTimecode: Boolean)
    open fun SetFrameRate(InFrameRate: FrameRate)
    open fun SetDuration(InDuration: FrameTime)
    open fun SetDescription(InDescription: String)
    open fun Recorded(): Boolean
    open fun Lock()
    open fun IsLocked(): Boolean
    open fun GetTimestamp(): DateTime
    open fun GetTimecodeOut(): Timecode
    open fun GetTimecodeIn(): Timecode
    open fun GetTakeNumber(): Number
    open fun GetSlate(): String
    open fun GetPresetOrigin(): TakePreset
    open fun GetLevelPath(): String
    open fun GetLevelOrigin(): Level
    open fun GetFrameRateFromTimecode(): Boolean
    open fun GetFrameRate(): FrameRate
    open fun GetDuration(): FrameTime
    open fun GetDescription(): String
    open fun GenerateAssetPath(PathFormatString: String): String

    companion object {
        fun Load(ResourceName: String): TakeMetaData
        fun Find(Outer: UObject, ResourceName: String): TakeMetaData
        fun GetDefaultObject(): TakeMetaData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TakeMetaData
        fun C(Other: UObject): TakeMetaData
        fun C(Other: Any): TakeMetaData
    }
}

external open class TakeRecorderUserParameters {
    open var bMaximizeViewport: Boolean
    open var CountdownSeconds: Number
    open var EngineTimeDilation: Number
    open var bStopAtPlaybackEnd: Boolean
    open var bRemoveRedundantTracks: Boolean
    open var ReduceKeysTolerance: Number
    open var bSaveRecordedAssets: Boolean
    open var bAutoLock: Boolean
    open var bAutoSerialize: Boolean
    open fun clone(): TakeRecorderUserParameters

    companion object {
        fun C(Other: UObject): TakeRecorderUserParameters
        fun C(Other: Any): TakeRecorderUserParameters
    }
}

external open class TakeRecorderPropertyTrackSettings {
    open var ComponentPath: String
    open var PropertyPath: String
    open fun clone(): TakeRecorderPropertyTrackSettings

    companion object {
        fun C(Other: UObject): TakeRecorderPropertyTrackSettings
        fun C(Other: Any): TakeRecorderPropertyTrackSettings
    }
}

external open class TakeRecorderTrackSettings {
    open var MatchingActorClass: SoftClassPath
    open var DefaultPropertyTracks: Array<TakeRecorderPropertyTrackSettings>
    open var ExcludePropertyTracks: Array<TakeRecorderPropertyTrackSettings>
    open fun clone(): TakeRecorderTrackSettings

    companion object {
        fun C(Other: UObject): TakeRecorderTrackSettings
        fun C(Other: Any): TakeRecorderTrackSettings
    }
}

external open class TakeRecorderProjectParameters {
    open var RootTakeSaveDir: DirectoryPath
    open var TakeSaveDir: String
    open var DefaultSlate: String
    open var bStartAtCurrentTimecode: Boolean
    open var bRecordTimecode: Boolean
    open var bRecordSourcesIntoSubSequences: Boolean
    open var bRecordToPossessable: Boolean
    open var DefaultTracks: Array<TakeRecorderTrackSettings>
    open var bShowNotifications: Boolean
    open fun clone(): TakeRecorderProjectParameters

    companion object {
        fun C(Other: UObject): TakeRecorderProjectParameters
        fun C(Other: Any): TakeRecorderProjectParameters
    }
}

external object ETakeRecorderMode {
    var RecordNewSequence: String /* "RecordNewSequence" */
    var RecordIntoSequence: String /* "RecordIntoSequence" */
    var ETakeRecorderMode_MAX: String /* "ETakeRecorderMode_MAX" */
}

external open class TakeRecorderParameters {
    open var User: TakeRecorderUserParameters
    open var Project: TakeRecorderProjectParameters
    open var TakeRecorderMode: String /* "RecordNewSequence" | "RecordIntoSequence" | "ETakeRecorderMode_MAX" */
    open var bDisableRecordingAndSave: Boolean
    open fun clone(): TakeRecorderParameters

    companion object {
        fun C(Other: UObject): TakeRecorderParameters
        fun C(Other: Any): TakeRecorderParameters
        fun GetDefaultParameters(): TakeRecorderParameters
    }
}

external open class TakeRecorderOverlayWidget : UserWidget {
    constructor()
    constructor(Outer: UObject)
    open var Recorder: TakeRecorder

    companion object {
        fun Load(ResourceName: String): TakeRecorderOverlayWidget
        fun Find(Outer: UObject, ResourceName: String): TakeRecorderOverlayWidget
        fun GetDefaultObject(): TakeRecorderOverlayWidget
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TakeRecorderOverlayWidget
        fun C(Other: UObject): TakeRecorderOverlayWidget
        fun C(Other: Any): TakeRecorderOverlayWidget
    }
}

external object ETakeRecorderState {
    var CountingDown: String /* "CountingDown" */
    var PreRecord: String /* "PreRecord" */
    var TickingAfterPre: String /* "TickingAfterPre" */
    var Started: String /* "Started" */
    var Stopped: String /* "Stopped" */
    var Cancelled: String /* "Cancelled" */
    var ETakeRecorderState_MAX: String /* "ETakeRecorderState_MAX" */
}

external open class TakeRecorder : UObject {
    constructor()
    constructor(Outer: UObject)
    open var SequenceAsset: LevelSequence
    open var OverlayWidget: TakeRecorderOverlayWidget
    open var WeakWorld: Any
    open var Parameters: TakeRecorderParameters
    open fun GetState(): String /* "CountingDown" | "PreRecord" | "TickingAfterPre" | "Started" | "Stopped" | "Cancelled" | "ETakeRecorderState_MAX" */
    open fun GetSequence(): LevelSequence
    open fun GetCountdownSeconds(): Number

    companion object {
        fun Load(ResourceName: String): TakeRecorder
        fun Find(Outer: UObject, ResourceName: String): TakeRecorder
        fun GetDefaultObject(): TakeRecorder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TakeRecorder
        fun C(Other: UObject): TakeRecorder
        fun C(Other: Any): TakeRecorder
    }
}

external open class LevelSequence : MovieSceneSequence {
    constructor()
    constructor(Outer: UObject)
    open var MovieScene: MovieScene
    open var ObjectReferences: LevelSequenceObjectReferenceMap
    open var BindingReferences: LevelSequenceBindingReferences
    open var PossessedObjects: Any
    open var DirectorBlueprint: Blueprint
    open var DirectorClass: UnrealEngineClass
    open var MetaDataObjects: Array<UObject>
    open var AssetUserData: Array<AssetUserData>
    open fun RemoveMetaDataByClass(InClass: UnrealEngineClass)
    open fun FindOrAddMetaDataByClass(InClass: UnrealEngineClass): UObject
    open fun FindMetaDataByClass(InClass: UnrealEngineClass): UObject
    open fun CopyMetaData(InMetaData: UObject): UObject
    open fun StartRecording(Sources: TakeRecorderSources, MetaData: TakeMetaData, Parameters: TakeRecorderParameters): TakeRecorder

    companion object {
        fun Load(ResourceName: String): LevelSequence
        fun Find(Outer: UObject, ResourceName: String): LevelSequence
        fun GetDefaultObject(): LevelSequence
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelSequence
        fun C(Other: UObject): LevelSequence
        fun C(Other: Any): LevelSequence
        fun StartRecording(LevelSequence: LevelSequence, Sources: TakeRecorderSources, MetaData: TakeMetaData, Parameters: TakeRecorderParameters): TakeRecorder
    }
}

external open class AnimationRecordingSettings {
    open var bRecordInWorldSpace: Boolean
    open var bRemoveRootAnimation: Boolean
    open var bAutoSaveAsset: Boolean
    open var SampleRate: Number
    open var Length: Number
    open var InterpMode: String /* "RCIM_Linear" | "RCIM_Constant" | "RCIM_Cubic" | "RCIM_None" | "RCIM_MAX" */
    open var TangentMode: String /* "RCTM_Auto" | "RCTM_User" | "RCTM_Break" | "RCTM_None" | "RCTM_MAX" */
    open var bRecordTransforms: Boolean
    open var bRecordCurves: Boolean
    open fun clone(): AnimationRecordingSettings

    companion object {
        fun C(Other: UObject): AnimationRecordingSettings
        fun C(Other: Any): AnimationRecordingSettings
    }
}

external open class ActorRecording : SequenceRecordingBase {
    constructor()
    constructor(Outer: UObject)
    open var ActorSettings: ActorRecordingSettings
    open var bActive: Boolean
    open var bCreateLevelSequence: Boolean
    open var TargetLevelSequence: LevelSequence
    open var TargetName: String
    open var TakeNumber: Any
    open var bSpecifyTargetAnimation: Boolean
    open var TargetAnimation: AnimSequence
    open var AnimationSettings: AnimationRecordingSettings
    open var bRecordToPossessable: Boolean
    open var ActorToRecord: Actor

    companion object {
        fun Load(ResourceName: String): ActorRecording
        fun Find(Outer: UObject, ResourceName: String): ActorRecording
        fun GetDefaultObject(): ActorRecording
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorRecording
        fun C(Other: UObject): ActorRecording
        fun C(Other: Any): ActorRecording
    }
}

external open class MovieScene3DTransformSectionRecorderSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bRecordTransforms: Boolean

    companion object {
        fun Load(ResourceName: String): MovieScene3DTransformSectionRecorderSettings
        fun Find(Outer: UObject, ResourceName: String): MovieScene3DTransformSectionRecorderSettings
        fun GetDefaultObject(): MovieScene3DTransformSectionRecorderSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScene3DTransformSectionRecorderSettings
        fun C(Other: UObject): MovieScene3DTransformSectionRecorderSettings
        fun C(Other: Any): MovieScene3DTransformSectionRecorderSettings
    }
}

external open class SequenceRecorderActorGroup : UObject {
    constructor()
    constructor(Outer: UObject)
    open var GroupName: String
    open var SequenceName: String
    open var SequenceRecordingBasePath: DirectoryPath
    open var bSpecifyTargetLevelSequence: Boolean
    open var TargetLevelSequence: LevelSequence
    open var bDuplicateTargetLevelSequence: Boolean
    open var bRecordTargetLevelSequenceLength: Boolean
    open var RecordedActors: Array<ActorRecording>

    companion object {
        fun Load(ResourceName: String): SequenceRecorderActorGroup
        fun Find(Outer: UObject, ResourceName: String): SequenceRecorderActorGroup
        fun GetDefaultObject(): SequenceRecorderActorGroup
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SequenceRecorderActorGroup
        fun C(Other: UObject): SequenceRecorderActorGroup
        fun C(Other: Any): SequenceRecorderActorGroup
    }
}

external open class SequenceRecorderGroup(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var ActorGroups: Array<SequenceRecorderActorGroup>

    companion object {
        fun GetDefaultObject(): SequenceRecorderGroup
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SequenceRecorderGroup
        fun C(Other: UObject): SequenceRecorderGroup
        fun C(Other: Any): SequenceRecorderGroup
    }
}

external open class SequenceRecorderBlueprintLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SequenceRecorderBlueprintLibrary
        fun Find(Outer: UObject, ResourceName: String): SequenceRecorderBlueprintLibrary
        fun GetDefaultObject(): SequenceRecorderBlueprintLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SequenceRecorderBlueprintLibrary
        fun StopRecordingSequence()
        fun StartRecordingSequence(ActorsToRecord: Array<Actor>)
        fun IsRecordingSequence(): Boolean
        fun C(Other: UObject): SequenceRecorderBlueprintLibrary
        fun C(Other: Any): SequenceRecorderBlueprintLibrary
    }
}

external object EAudioRecordingMode {
    var None: String /* "None" */
    var AudioTrack: String /* "AudioTrack" */
    var EAudioRecordingMode_MAX: String /* "EAudioRecordingMode_MAX" */
}

external open class SequenceRecorderActorFilter {
    open var ActorClassesToRecord: Array<UnrealEngineClass>
    open fun clone(): SequenceRecorderActorFilter

    companion object {
        fun C(Other: UObject): SequenceRecorderActorFilter
        fun C(Other: Any): SequenceRecorderActorFilter
    }
}

external open class PropertiesToRecordForClass {
    open var Class: UnrealEngineClass
    open var Properties: Array<String>
    open fun clone(): PropertiesToRecordForClass

    companion object {
        fun C(Other: UObject): PropertiesToRecordForClass
        fun C(Other: Any): PropertiesToRecordForClass
    }
}

external open class PropertiesToRecordForActorClass {
    open var Class: UnrealEngineClass
    open var Properties: Array<String>
    open fun clone(): PropertiesToRecordForActorClass

    companion object {
        fun C(Other: UObject): PropertiesToRecordForActorClass
        fun C(Other: Any): PropertiesToRecordForActorClass
    }
}

external open class SettingsForActorClass {
    open var Class: UnrealEngineClass
    open var bRecordToPossessable: Boolean
    open fun clone(): SettingsForActorClass

    companion object {
        fun C(Other: UObject): SettingsForActorClass
        fun C(Other: Any): SettingsForActorClass
    }
}

external open class SequenceRecorderSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bCreateLevelSequence: Boolean
    open var bImmersiveMode: Boolean
    open var SequenceLength: Number
    open var RecordingDelay: Number
    open var bAllowLooping: Boolean
    open var GlobalTimeDilation: Number
    open var bIgnoreTimeDilation: Boolean
    open var AnimationSubDirectory: String
    open var RecordAudio: String /* "None" | "AudioTrack" | "EAudioRecordingMode_MAX" */
    open var AudioGain: Number
    open var bSplitAudioChannelsIntoSeparateTracks: Boolean
    open var bReplaceRecordedAudio: Boolean
    open var AudioTrackName: String
    open var AudioSubDirectory: String
    open var bRecordNearbySpawnedActors: Boolean
    open var NearbyActorRecordingProximity: Number
    open var bRecordWorldSettingsActor: Boolean
    open var bReduceKeys: Boolean
    open var bAutoSaveAsset: Boolean
    open var ActorFilter: SequenceRecorderActorFilter
    open var LevelSequenceActorsToTrigger: Array<Any>
    open var DefaultAnimationSettings: AnimationRecordingSettings
    open var bRecordSequencerSpawnedActors: Boolean
    open var ClassesAndPropertiesToRecord: Array<PropertiesToRecordForClass>
    open var ActorsAndPropertiesToRecord: Array<PropertiesToRecordForActorClass>
    open var PerActorSettings: Array<SettingsForActorClass>

    companion object {
        fun Load(ResourceName: String): SequenceRecorderSettings
        fun Find(Outer: UObject, ResourceName: String): SequenceRecorderSettings
        fun GetDefaultObject(): SequenceRecorderSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SequenceRecorderSettings
        fun C(Other: UObject): SequenceRecorderSettings
        fun C(Other: Any): SequenceRecorderSettings
    }
}

external open class LevelSequenceBurnInInitSettings : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LevelSequenceBurnInInitSettings
        fun Find(Outer: UObject, ResourceName: String): LevelSequenceBurnInInitSettings
        fun GetDefaultObject(): LevelSequenceBurnInInitSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelSequenceBurnInInitSettings
        fun C(Other: UObject): LevelSequenceBurnInInitSettings
        fun C(Other: Any): LevelSequenceBurnInInitSettings
    }
}

external open class LevelSequenceBurnInOptions : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bUseBurnIn: Boolean
    open var BurnInClass: SoftClassPath
    open var Settings: LevelSequenceBurnInInitSettings
    open fun SetBurnIn(InBurnInClass: SoftClassPath)

    companion object {
        fun Load(ResourceName: String): LevelSequenceBurnInOptions
        fun Find(Outer: UObject, ResourceName: String): LevelSequenceBurnInOptions
        fun GetDefaultObject(): LevelSequenceBurnInOptions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelSequenceBurnInOptions
        fun C(Other: UObject): LevelSequenceBurnInOptions
        fun C(Other: Any): LevelSequenceBurnInOptions
    }
}

external open class AutomatedLevelSequenceCapture : MovieSceneCapture {
    constructor()
    constructor(Outer: UObject)
    open var LevelSequenceAsset: SoftObjectPath
    open var ShotName: String
    open var bUseCustomStartFrame: Boolean
    open var CustomStartFrame: FrameNumber
    open var bUseCustomEndFrame: Boolean
    open var CustomEndFrame: FrameNumber
    open var WarmUpFrameCount: Number
    open var DelayBeforeWarmUp: Number
    open var DelayBeforeShotWarmUp: Number
    open var DelayEveryFrame: Number
    open var BurnInOptions: LevelSequenceBurnInOptions
    open var bWriteEditDecisionList: Boolean
    open var bWriteFinalCutProXML: Boolean
    open var LevelSequenceActor: Any

    companion object {
        fun Load(ResourceName: String): AutomatedLevelSequenceCapture
        fun Find(Outer: UObject, ResourceName: String): AutomatedLevelSequenceCapture
        fun GetDefaultObject(): AutomatedLevelSequenceCapture
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AutomatedLevelSequenceCapture
        fun C(Other: UObject): AutomatedLevelSequenceCapture
        fun C(Other: Any): AutomatedLevelSequenceCapture
    }
}

external open class BoolChannelKeyProxy : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Time: FrameNumber
    open var bValue: Boolean

    companion object {
        fun Load(ResourceName: String): BoolChannelKeyProxy
        fun Find(Outer: UObject, ResourceName: String): BoolChannelKeyProxy
        fun GetDefaultObject(): BoolChannelKeyProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BoolChannelKeyProxy
        fun C(Other: UObject): BoolChannelKeyProxy
        fun C(Other: Any): BoolChannelKeyProxy
    }
}

external open class MovieSceneTangentData {
    open var ArriveTangent: Number
    open var LeaveTangent: Number
    open var ArriveTangentWeight: Number
    open var LeaveTangentWeight: Number
    open var TangentWeightMode: String /* "RCTWM_WeightedNone" | "RCTWM_WeightedArrive" | "RCTWM_WeightedLeave" | "RCTWM_WeightedBoth" | "RCTWM_MAX" */
    open fun clone(): MovieSceneTangentData

    companion object {
        fun C(Other: UObject): MovieSceneTangentData
        fun C(Other: Any): MovieSceneTangentData
    }
}

external open class MovieSceneFloatValue {
    open var Value: Number
    open var Tangent: MovieSceneTangentData
    open var InterpMode: String /* "RCIM_Linear" | "RCIM_Constant" | "RCIM_Cubic" | "RCIM_None" | "RCIM_MAX" */
    open var TangentMode: String /* "RCTM_Auto" | "RCTM_User" | "RCTM_Break" | "RCTM_None" | "RCTM_MAX" */
    open var PaddingByte: Number
    open fun clone(): MovieSceneFloatValue

    companion object {
        fun C(Other: UObject): MovieSceneFloatValue
        fun C(Other: Any): MovieSceneFloatValue
    }
}

external open class FloatChannelKeyProxy : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Time: FrameNumber
    open var Value: MovieSceneFloatValue

    companion object {
        fun Load(ResourceName: String): FloatChannelKeyProxy
        fun Find(Outer: UObject, ResourceName: String): FloatChannelKeyProxy
        fun GetDefaultObject(): FloatChannelKeyProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FloatChannelKeyProxy
        fun C(Other: UObject): FloatChannelKeyProxy
        fun C(Other: Any): FloatChannelKeyProxy
    }
}

external open class IntegerChannelKeyProxy : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Time: FrameNumber
    open var Value: Number

    companion object {
        fun Load(ResourceName: String): IntegerChannelKeyProxy
        fun Find(Outer: UObject, ResourceName: String): IntegerChannelKeyProxy
        fun GetDefaultObject(): IntegerChannelKeyProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): IntegerChannelKeyProxy
        fun C(Other: UObject): IntegerChannelKeyProxy
        fun C(Other: Any): IntegerChannelKeyProxy
    }
}

external open class K2Node : EdGraphNode {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node
        fun Find(Outer: UObject, ResourceName: String): K2Node
        fun GetDefaultObject(): K2Node
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node
        fun C(Other: UObject): K2Node
        fun C(Other: Any): K2Node
    }
}

external open class K2Node_GetSequenceBinding : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var SourceSequence: SoftObjectPath
    open var Binding: MovieSceneObjectBindingID

    companion object {
        fun Load(ResourceName: String): K2Node_GetSequenceBinding
        fun Find(Outer: UObject, ResourceName: String): K2Node_GetSequenceBinding
        fun GetDefaultObject(): K2Node_GetSequenceBinding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_GetSequenceBinding
        fun C(Other: UObject): K2Node_GetSequenceBinding
        fun C(Other: Any): K2Node_GetSequenceBinding
    }
}

external open class MovieSceneEventSectionBase : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneEventSectionBase
        fun Find(Outer: UObject, ResourceName: String): MovieSceneEventSectionBase
        fun GetDefaultObject(): MovieSceneEventSectionBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneEventSectionBase
        fun C(Other: UObject): MovieSceneEventSectionBase
        fun C(Other: Any): MovieSceneEventSectionBase
    }
}

external open class MovieSceneEventBlueprintExtension : BlueprintExtension {
    constructor()
    constructor(Outer: UObject)
    open var EventSections: Array<MovieSceneEventSectionBase>

    companion object {
        fun Load(ResourceName: String): MovieSceneEventBlueprintExtension
        fun Find(Outer: UObject, ResourceName: String): MovieSceneEventBlueprintExtension
        fun GetDefaultObject(): MovieSceneEventBlueprintExtension
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneEventBlueprintExtension
        fun C(Other: UObject): MovieSceneEventBlueprintExtension
        fun C(Other: Any): MovieSceneEventBlueprintExtension
    }
}

external open class MovieSceneToolsPropertyTrackSettings {
    open var ComponentName: String
    open var PropertyName: String
    open fun clone(): MovieSceneToolsPropertyTrackSettings

    companion object {
        fun C(Other: UObject): MovieSceneToolsPropertyTrackSettings
        fun C(Other: Any): MovieSceneToolsPropertyTrackSettings
    }
}

external open class MovieSceneToolsFbxSettings {
    open var FbxPropertyName: String
    open var PropertyPath: MovieSceneToolsPropertyTrackSettings
    open fun clone(): MovieSceneToolsFbxSettings

    companion object {
        fun C(Other: UObject): MovieSceneToolsFbxSettings
        fun C(Other: Any): MovieSceneToolsFbxSettings
    }
}

external open class MovieSceneToolsProjectSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var DefaultStartTime: Number
    open var DefaultDuration: Number
    open var ShotDirectory: String
    open var ShotPrefix: String
    open var FirstShotNumber: Any
    open var ShotIncrement: Any
    open var ShotNumDigits: Any
    open var TakeNumDigits: Any
    open var FirstTakeNumber: Any
    open var TakeSeparator: String
    open var SubSequenceSeparator: String
    open var FbxSettings: Array<MovieSceneToolsFbxSettings>

    companion object {
        fun Load(ResourceName: String): MovieSceneToolsProjectSettings
        fun Find(Outer: UObject, ResourceName: String): MovieSceneToolsProjectSettings
        fun GetDefaultObject(): MovieSceneToolsProjectSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneToolsProjectSettings
        fun C(Other: UObject): MovieSceneToolsProjectSettings
        fun C(Other: Any): MovieSceneToolsProjectSettings
    }
}

external object EThumbnailQuality {
    var Draft: String /* "Draft" */
    var Normal: String /* "Normal" */
    var Best: String /* "Best" */
    var EThumbnailQuality_MAX: String /* "EThumbnailQuality_MAX" */
}

external open class MovieSceneUserThumbnailSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bDrawThumbnails: Boolean
    open var bDrawSingleThumbnails: Boolean
    open var ThumbnailSize: IntPoint
    open var Quality: String /* "Draft" | "Normal" | "Best" | "EThumbnailQuality_MAX" */

    companion object {
        fun Load(ResourceName: String): MovieSceneUserThumbnailSettings
        fun Find(Outer: UObject, ResourceName: String): MovieSceneUserThumbnailSettings
        fun GetDefaultObject(): MovieSceneUserThumbnailSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneUserThumbnailSettings
        fun C(Other: UObject): MovieSceneUserThumbnailSettings
        fun C(Other: Any): MovieSceneUserThumbnailSettings
    }
}

external open class MovieSceneUserImportFBXSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bMatchByNameOnly: Boolean
    open var bForceFrontXAxis: Boolean
    open var bConvertSceneUnit: Boolean
    open var ImportUniformScale: Number
    open var bCreateCameras: Boolean
    open var bReplaceTransformTrack: Boolean
    open var bReduceKeys: Boolean
    open var ReduceKeysTolerance: Number

    companion object {
        fun Load(ResourceName: String): MovieSceneUserImportFBXSettings
        fun Find(Outer: UObject, ResourceName: String): MovieSceneUserImportFBXSettings
        fun GetDefaultObject(): MovieSceneUserImportFBXSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneUserImportFBXSettings
        fun C(Other: UObject): MovieSceneUserImportFBXSettings
        fun C(Other: Any): MovieSceneUserImportFBXSettings
    }
}

external open class ControlFindReplaceString {
    open var Find: String
    open var Replace: String
    open fun clone(): ControlFindReplaceString

    companion object {
        fun C(Other: UObject): ControlFindReplaceString
        fun C(Other: Any): ControlFindReplaceString
    }
}

external object FControlRigChannelEnum {
    var Bool: String /* "Bool" */
    var Enum: String /* "Enum" */
    var Integer: String /* "Integer" */
    var Float: String /* "Float" */
    var Vector2DX: String /* "Vector2DX" */
    var Vector2DY: String /* "Vector2DY" */
    var PositionX: String /* "PositionX" */
    var PositionY: String /* "PositionY" */
    var PositionZ: String /* "PositionZ" */
    var RotatorX: String /* "RotatorX" */
    var RotatorY: String /* "RotatorY" */
    var RotatorZ: String /* "RotatorZ" */
    var ScaleX: String /* "ScaleX" */
    var ScaleY: String /* "ScaleY" */
    var ScaleZ: String /* "ScaleZ" */
    var FControlRigChannelEnum_MAX: String /* "FControlRigChannelEnum_MAX" */
}

external object FTransformChannelEnum {
    var TranslateX: String /* "TranslateX" */
    var TranslateY: String /* "TranslateY" */
    var TranslateZ: String /* "TranslateZ" */
    var RotateX: String /* "RotateX" */
    var RotateY: String /* "RotateY" */
    var RotateZ: String /* "RotateZ" */
    var ScaleX: String /* "ScaleX" */
    var ScaleY: String /* "ScaleY" */
    var ScaleZ: String /* "ScaleZ" */
    var FTransformChannelEnum_MAX: String /* "FTransformChannelEnum_MAX" */
}

external open class ControlToTransformMappings {
    open var ControlChannel: String /* "Bool" | "Enum" | "Integer" | "Float" | "Vector2DX" | "Vector2DY" | "PositionX" | "PositionY" | "PositionZ" | "RotatorX" | "RotatorY" | "RotatorZ" | "ScaleX" | "ScaleY" | "ScaleZ" | "FControlRigChannelEnum_MAX" */
    open var FBXChannel: String /* "TranslateX" | "TranslateY" | "TranslateZ" | "RotateX" | "RotateY" | "RotateZ" | "ScaleX" | "ScaleY" | "ScaleZ" | "FTransformChannelEnum_MAX" */
    open var bNegate: Boolean
    open fun clone(): ControlToTransformMappings

    companion object {
        fun C(Other: UObject): ControlToTransformMappings
        fun C(Other: Any): ControlToTransformMappings
    }
}

external open class MovieSceneUserImportFBXControlRigSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ImportedFileName: String
    open var ImportedStartTime: FrameNumber
    open var ImportedEndTime: FrameNumber
    open var ImportedNodeNames: Array<String>
    open var ImportedFrameRate: String
    open var FindAndReplaceStrings: Array<ControlFindReplaceString>
    open var bForceFrontXAxis: Boolean
    open var bConvertSceneUnit: Boolean
    open var ImportUniformScale: Number
    open var bImportOntoSelectedControls: Boolean
    open var TimeToInsertOrReplaceAnimation: FrameNumber
    open var bInsertAnimation: Boolean
    open var bSpecifyTimeRange: Boolean
    open var StartTimeRange: FrameNumber
    open var EndTimeRange: FrameNumber
    open var ControlChannelMappings: Array<ControlToTransformMappings>

    companion object {
        fun Load(ResourceName: String): MovieSceneUserImportFBXControlRigSettings
        fun Find(Outer: UObject, ResourceName: String): MovieSceneUserImportFBXControlRigSettings
        fun GetDefaultObject(): MovieSceneUserImportFBXControlRigSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneUserImportFBXControlRigSettings
        fun C(Other: UObject): MovieSceneUserImportFBXControlRigSettings
        fun C(Other: Any): MovieSceneUserImportFBXControlRigSettings
    }
}

external open class AdvancedCopyCustomization : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AdvancedCopyCustomization
        fun Find(Outer: UObject, ResourceName: String): AdvancedCopyCustomization
        fun GetDefaultObject(): AdvancedCopyCustomization
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AdvancedCopyCustomization
        fun C(Other: UObject): AdvancedCopyCustomization
        fun C(Other: Any): AdvancedCopyCustomization
    }
}

external open class AssetToolsImpl : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AssetToolsImpl
        fun Find(Outer: UObject, ResourceName: String): AssetToolsImpl
        fun GetDefaultObject(): AssetToolsImpl
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AssetToolsImpl
        fun C(Other: UObject): AssetToolsImpl
        fun C(Other: Any): AssetToolsImpl
    }
}

external open class AdvancedCopyMap {
    open var ClassToCopy: SoftClassPath
    open var AdvancedCopyCustomization: SoftClassPath
    open fun clone(): AdvancedCopyMap

    companion object {
        fun C(Other: UObject): AdvancedCopyMap
        fun C(Other: Any): AdvancedCopyMap
    }
}

external open class AssetToolsSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var AdvancedCopyCustomizations: Array<AdvancedCopyMap>

    companion object {
        fun Load(ResourceName: String): AssetToolsSettings
        fun Find(Outer: UObject, ResourceName: String): AssetToolsSettings
        fun GetDefaultObject(): AssetToolsSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AssetToolsSettings
        fun C(Other: UObject): AssetToolsSettings
        fun C(Other: Any): AssetToolsSettings
    }
}

external open class AssetRenameData {
    open var Asset: Any
    open var NewPackagePath: String
    open var NewName: String
    open var OldObjectPath: SoftObjectPath
    open var NewObjectPath: SoftObjectPath
    open var bOnlyFixSoftReferences: Boolean
    open fun clone(): AssetRenameData

    companion object {
        fun C(Other: UObject): AssetRenameData
        fun C(Other: Any): AssetRenameData
    }
}

external object EAssetRenameResult {
    var Failure: String /* "Failure" */
    var Success: String /* "Success" */
    var Pending: String /* "Pending" */
    var EAssetRenameResult_MAX: String /* "EAssetRenameResult_MAX" */
}

external open class AutomatedAssetImportData : UObject {
    constructor()
    constructor(Outer: UObject)
    open var GroupName: String
    open var Filenames: Array<String>
    open var DestinationPath: String
    open var FactoryName: String
    open var bReplaceExisting: Boolean
    open var bSkipReadOnly: Boolean
    open var Factory: Factory
    open var LevelToLoad: String

    companion object {
        fun Load(ResourceName: String): AutomatedAssetImportData
        fun Find(Outer: UObject, ResourceName: String): AutomatedAssetImportData
        fun GetDefaultObject(): AutomatedAssetImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AutomatedAssetImportData
        fun C(Other: UObject): AutomatedAssetImportData
        fun C(Other: Any): AutomatedAssetImportData
    }
}

external open class Factory : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bCreateNew: Boolean
    open var SupportedClass: UnrealEngineClass
    open var ContextClass: UnrealEngineClass
    open var Formats: Array<String>
    open var bEditAfterNew: Boolean
    open var bEditorImport: Boolean
    open var bText: Boolean
    open var ImportPriority: Number
    open var AutomatedImportData: AutomatedAssetImportData
    open var AssetImportTask: AssetImportTask
    open var OverwriteYesOrNoToAllState: Number
    open fun ScriptFactoryCreateFile(InTask: AssetImportTask): Boolean
    open fun ScriptFactoryCanImport(Filename: String): Boolean

    companion object {
        fun Load(ResourceName: String): Factory
        fun Find(Outer: UObject, ResourceName: String): Factory
        fun GetDefaultObject(): Factory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Factory
        fun C(Other: UObject): Factory
        fun C(Other: Any): Factory
    }
}

external open class AssetImportTask : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Filename: String
    open var DestinationPath: String
    open var DestinationName: String
    open var bReplaceExisting: Boolean
    open var bReplaceExistingSettings: Boolean
    open var bAutomated: Boolean
    open var bSave: Boolean
    open var Factory: Factory
    open var Options: UObject
    open var ImportedObjectPaths: Array<String>
    open var Result: Array<UObject>

    companion object {
        fun Load(ResourceName: String): AssetImportTask
        fun Find(Outer: UObject, ResourceName: String): AssetImportTask
        fun GetDefaultObject(): AssetImportTask
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AssetImportTask
        fun C(Other: UObject): AssetImportTask
        fun C(Other: Any): AssetImportTask
    }
}

external interface `T$586` {
    var ReferencingObjects: Array<UObject>
}

external interface `T$587` {
    var OutPackageName: String
    var OutAssetName: String
}

external open class AssetTools : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun RenameReferencingSoftObjectPaths(PackagesToCheck: Array<Package>, AssetRedirectorMap: Any)
    open fun RenameAssetsWithDialog(AssetsAndNames: Array<AssetRenameData>, bAutoCheckout: Boolean): String /* "Failure" | "Success" | "Pending" | "EAssetRenameResult_MAX" */
    open fun RenameAssets(AssetsAndNames: Array<AssetRenameData>): Boolean
    open fun OpenEditorForAssets(Assets: Array<UObject>)
    open fun ImportAssetTasks(ImportTasks: Array<AssetImportTask>)
    open fun ImportAssetsWithDialog(DestinationPath: String): Array<UObject>
    open fun ImportAssetsAutomated(ImportData: AutomatedAssetImportData): Array<UObject>
    open fun FindSoftReferencesToObject(TargetObject: SoftObjectPath, ReferencingObjects: Array<UObject> = definedExternally): `T$586`
    open fun ExportAssetsWithDialog(AssetsToExport: Array<String>, bPromptForIndividualFilenames: Boolean)
    open fun ExportAssets(AssetsToExport: Array<String>, ExportPath: String)
    open fun DuplicateAssetWithDialogAndTitle(AssetName: String, PackagePath: String, OriginalObject: UObject, DialogTitle: String): UObject
    open fun DuplicateAssetWithDialog(AssetName: String, PackagePath: String, OriginalObject: UObject): UObject
    open fun DuplicateAsset(AssetName: String, PackagePath: String, OriginalObject: UObject): UObject
    open fun CreateUniqueAssetName(InBasePackageName: String, InSuffix: String, OutPackageName: String = definedExternally, OutAssetName: String = definedExternally): `T$587`
    open fun CreateAssetWithDialog(AssetName: String, PackagePath: String, AssetClass: UnrealEngineClass, Factory: Factory, CallingContext: String): UObject
    open fun CreateAsset(AssetName: String, PackagePath: String, AssetClass: UnrealEngineClass, Factory: Factory, CallingContext: String): UObject

    companion object {
        fun Load(ResourceName: String): AssetTools
        fun Find(Outer: UObject, ResourceName: String): AssetTools
        fun GetDefaultObject(): AssetTools
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AssetTools
        fun C(Other: UObject): AssetTools
        fun C(Other: Any): AssetTools
    }
}

external open class AssetToolsHelpers : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AssetToolsHelpers
        fun Find(Outer: UObject, ResourceName: String): AssetToolsHelpers
        fun GetDefaultObject(): AssetToolsHelpers
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AssetToolsHelpers
        fun C(Other: UObject): AssetToolsHelpers
        fun C(Other: Any): AssetToolsHelpers
    }
}

external open class ContentBrowserFrontEndFilterExtension : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ContentBrowserFrontEndFilterExtension
        fun Find(Outer: UObject, ResourceName: String): ContentBrowserFrontEndFilterExtension
        fun GetDefaultObject(): ContentBrowserFrontEndFilterExtension
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ContentBrowserFrontEndFilterExtension
        fun C(Other: UObject): ContentBrowserFrontEndFilterExtension
        fun C(Other: Any): ContentBrowserFrontEndFilterExtension
    }
}

external open class ContentBrowserAssetContextMenuContext : UObject {
    constructor()
    constructor(Outer: UObject)
    open var SelectedObjects: Array<Any>
    open var CommonClass: UnrealEngineClass
    open var bCanBeModified: Boolean
    open fun GetSelectedObjects(): Array<UObject>

    companion object {
        fun Load(ResourceName: String): ContentBrowserAssetContextMenuContext
        fun Find(Outer: UObject, ResourceName: String): ContentBrowserAssetContextMenuContext
        fun GetDefaultObject(): ContentBrowserAssetContextMenuContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ContentBrowserAssetContextMenuContext
        fun C(Other: UObject): ContentBrowserAssetContextMenuContext
        fun C(Other: Any): ContentBrowserAssetContextMenuContext
    }
}

external open class ContentBrowserAssetViewContextMenuContext : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ContentBrowserAssetViewContextMenuContext
        fun Find(Outer: UObject, ResourceName: String): ContentBrowserAssetViewContextMenuContext
        fun GetDefaultObject(): ContentBrowserAssetViewContextMenuContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ContentBrowserAssetViewContextMenuContext
        fun C(Other: UObject): ContentBrowserAssetViewContextMenuContext
        fun C(Other: Any): ContentBrowserAssetViewContextMenuContext
    }
}

external open class ContentBrowserMenuContext : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ContentBrowserMenuContext
        fun Find(Outer: UObject, ResourceName: String): ContentBrowserMenuContext
        fun GetDefaultObject(): ContentBrowserMenuContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ContentBrowserMenuContext
        fun C(Other: UObject): ContentBrowserMenuContext
        fun C(Other: Any): ContentBrowserMenuContext
    }
}

external open class ContentBrowserFolderContext : ContentBrowserMenuContext {
    constructor()
    constructor(Outer: UObject)
    open var bCanBeModified: Boolean
    open var bNoFolderOnDisk: Boolean
    open var NumAssetPaths: Number
    open var NumClassPaths: Number

    companion object {
        fun Load(ResourceName: String): ContentBrowserFolderContext
        fun Find(Outer: UObject, ResourceName: String): ContentBrowserFolderContext
        fun GetDefaultObject(): ContentBrowserFolderContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ContentBrowserFolderContext
        fun C(Other: UObject): ContentBrowserFolderContext
        fun C(Other: Any): ContentBrowserFolderContext
    }
}

external open class MovieSceneCopyableBinding : UObject {
    constructor()
    constructor(Outer: UObject)
    open var SpawnableObjectTemplate: UObject
    open var Tracks: Array<MovieSceneTrack>
    open var Binding: MovieSceneBinding
    open var Spawnable: MovieSceneSpawnable
    open var Possessable: MovieScenePossessable
    open var FolderPath: Array<String>

    companion object {
        fun Load(ResourceName: String): MovieSceneCopyableBinding
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCopyableBinding
        fun GetDefaultObject(): MovieSceneCopyableBinding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCopyableBinding
        fun C(Other: UObject): MovieSceneCopyableBinding
        fun C(Other: Any): MovieSceneCopyableBinding
    }
}

external open class MovieSceneCopyableTrack : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Track: MovieSceneTrack
    open var bIsAMasterTrack: Boolean
    open var FolderPath: Array<String>

    companion object {
        fun Load(ResourceName: String): MovieSceneCopyableTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCopyableTrack
        fun GetDefaultObject(): MovieSceneCopyableTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCopyableTrack
        fun C(Other: UObject): MovieSceneCopyableTrack
        fun C(Other: Any): MovieSceneCopyableTrack
    }
}

external open class Exporter : UObject {
    constructor()
    constructor(Outer: UObject)
    open var SupportedClass: UnrealEngineClass
    open var ExportRootScope: UObject
    open var FormatExtension: Array<String>
    open var FormatDescription: Array<String>
    open var PreferredFormatIndex: Number
    open var TextIndent: Number
    open var bText: Boolean
    open var bSelectedOnly: Boolean
    open var bForceFileOperations: Boolean
    open var ExportTask: AssetExportTask
    open fun ScriptRunAssetExportTask(Task: AssetExportTask): Boolean

    companion object {
        fun Load(ResourceName: String): Exporter
        fun Find(Outer: UObject, ResourceName: String): Exporter
        fun GetDefaultObject(): Exporter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Exporter
        fun RunAssetExportTasks(ExportTasks: Array<AssetExportTask>): Boolean
        fun RunAssetExportTask(Task: AssetExportTask): Boolean
        fun C(Other: UObject): Exporter
        fun C(Other: Any): Exporter
    }
}

external open class AssetExportTask : UObject {
    constructor()
    constructor(Outer: UObject)
    open var UObject: UObject
    open var Exporter: Exporter
    open var Filename: String
    open var bSelected: Boolean
    open var bReplaceIdentical: Boolean
    open var bPrompt: Boolean
    open var bAutomated: Boolean
    open var bUseFileArchive: Boolean
    open var bWriteEmptyFiles: Boolean
    open var IgnoreObjectList: Array<UObject>
    open var Options: UObject
    open var Errors: Array<String>

    companion object {
        fun Load(ResourceName: String): AssetExportTask
        fun Find(Outer: UObject, ResourceName: String): AssetExportTask
        fun GetDefaultObject(): AssetExportTask
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AssetExportTask
        fun C(Other: UObject): AssetExportTask
        fun C(Other: Any): AssetExportTask
    }
}

external open class SequencerExportTask : AssetExportTask {
    constructor()
    constructor(Outer: UObject)
    open var SequencerContext: UObject

    companion object {
        fun Load(ResourceName: String): SequencerExportTask
        fun Find(Outer: UObject, ResourceName: String): SequencerExportTask
        fun GetDefaultObject(): SequencerExportTask
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SequencerExportTask
        fun C(Other: UObject): SequencerExportTask
        fun C(Other: Any): SequencerExportTask
    }
}

external open class MovieSceneTransformMask {
    open var mask: Any
    open fun clone(): MovieSceneTransformMask

    companion object {
        fun C(Other: UObject): MovieSceneTransformMask
        fun C(Other: Any): MovieSceneTransformMask
    }
}

external open class MovieSceneChannel {
    open fun clone(): MovieSceneChannel

    companion object {
        fun C(Other: UObject): MovieSceneChannel
        fun C(Other: Any): MovieSceneChannel
    }
}

external open class KeyHandleLookupTable {
    open fun clone(): KeyHandleLookupTable

    companion object {
        fun C(Other: UObject): KeyHandleLookupTable
        fun C(Other: Any): KeyHandleLookupTable
    }
}

external open class MovieSceneKeyHandleMap : KeyHandleLookupTable {
    override fun clone(): MovieSceneKeyHandleMap

    companion object {
        fun C(Other: UObject): MovieSceneKeyHandleMap
        fun C(Other: Any): MovieSceneKeyHandleMap
    }
}

external open class MovieSceneFloatChannel : MovieSceneChannel {
    open var PreInfinityExtrap: String /* "RCCE_Cycle" | "RCCE_CycleWithOffset" | "RCCE_Oscillate" | "RCCE_Linear" | "RCCE_Constant" | "RCCE_None" | "RCCE_MAX" */
    open var PostInfinityExtrap: String /* "RCCE_Cycle" | "RCCE_CycleWithOffset" | "RCCE_Oscillate" | "RCCE_Linear" | "RCCE_Constant" | "RCCE_None" | "RCCE_MAX" */
    open var Times: Array<FrameNumber>
    open var Values: Array<MovieSceneFloatValue>
    open var DefaultValue: Number
    open var bHasDefaultValue: Boolean
    open var KeyHandles: MovieSceneKeyHandleMap
    open var TickResolution: FrameRate
    override fun clone(): MovieSceneFloatChannel

    companion object {
        fun C(Other: UObject): MovieSceneFloatChannel
        fun C(Other: Any): MovieSceneFloatChannel
    }
}

external object EShow3DTrajectory {
    var EST_OnlyWhenSelected: String /* "EST_OnlyWhenSelected" */
    var EST_Always: String /* "EST_Always" */
    var EST_Never: String /* "EST_Never" */
    var EST_MAX: String /* "EST_MAX" */
}

external open class MovieScene3DTransformSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var TransformMask: MovieSceneTransformMask
    open var Translation: MovieSceneFloatChannel
    open var Rotation: MovieSceneFloatChannel
    open var Scale: MovieSceneFloatChannel
    open var ManualWeight: MovieSceneFloatChannel
    open var bUseQuaternionInterpolation: Boolean
    open var Show3DTrajectory: String /* "EST_OnlyWhenSelected" | "EST_Always" | "EST_Never" | "EST_MAX" */

    companion object {
        fun Load(ResourceName: String): MovieScene3DTransformSection
        fun Find(Outer: UObject, ResourceName: String): MovieScene3DTransformSection
        fun GetDefaultObject(): MovieScene3DTransformSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScene3DTransformSection
        fun C(Other: UObject): MovieScene3DTransformSection
        fun C(Other: Any): MovieScene3DTransformSection
    }
}

external open class SequencerKeyActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var KeyMeshComponent: StaticMeshComponent
    open var AssociatedActor: Actor
    open var TrackSection: MovieScene3DTransformSection
    open var KeyTime: Number

    companion object {
        fun GetDefaultObject(): SequencerKeyActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SequencerKeyActor
        fun C(Other: UObject): SequencerKeyActor
        fun C(Other: Any): SequencerKeyActor
    }
}

external open class MovieSceneKeyStructType : ScriptStruct {
    constructor()
    constructor(Outer: UObject)
    open var SourceTimesProperty: Any
    open var SourceValuesProperty: Any
    open var DestTimeProperty: Any
    open var DestValueProperty: Any

    companion object {
        fun Load(ResourceName: String): MovieSceneKeyStructType
        fun Find(Outer: UObject, ResourceName: String): MovieSceneKeyStructType
        fun GetDefaultObject(): MovieSceneKeyStructType
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneKeyStructType
        fun C(Other: UObject): MovieSceneKeyStructType
        fun C(Other: Any): MovieSceneKeyStructType
    }
}

external open class SequencerMeshTrail(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    companion object {
        fun GetDefaultObject(): SequencerMeshTrail
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SequencerMeshTrail
        fun C(Other: UObject): SequencerMeshTrail
        fun C(Other: Any): SequencerMeshTrail
    }
}

external open class SequencerSettingsContainer : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SequencerSettingsContainer
        fun Find(Outer: UObject, ResourceName: String): SequencerSettingsContainer
        fun GetDefaultObject(): SequencerSettingsContainer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SequencerSettingsContainer
        fun C(Other: UObject): SequencerSettingsContainer
        fun C(Other: Any): SequencerSettingsContainer
    }
}

external object EAutoChangeMode {
    var AutoKey: String /* "AutoKey" */
    var AutoTrack: String /* "AutoTrack" */
    var All: String /* "All" */
    var None: String /* "None" */
    var EAutoChangeMode_MAX: String /* "EAutoChangeMode_MAX" */
}

external object EAllowEditsMode {
    var AllEdits: String /* "AllEdits" */
    var AllowSequencerEditsOnly: String /* "AllowSequencerEditsOnly" */
    var AllowLevelEditsOnly: String /* "AllowLevelEditsOnly" */
    var EAllowEditsMode_MAX: String /* "EAllowEditsMode_MAX" */
}

external object EKeyGroupMode {
    var KeyChanged: String /* "KeyChanged" */
    var KeyGroup: String /* "KeyGroup" */
    var KeyAll: String /* "KeyAll" */
    var EKeyGroupMode_MAX: String /* "EKeyGroupMode_MAX" */
}

external object EMovieSceneKeyInterpolation {
    var Auto: String /* "Auto" */
    var User: String /* "User" */
    var Break: String /* "Break" */
    var Linear: String /* "Linear" */
    var Constant: String /* "Constant" */
    var EMovieSceneKeyInterpolation_MAX: String /* "EMovieSceneKeyInterpolation_MAX" */
}

external object ESequencerSpawnPosition {
    var SSP_Origin: String /* "SSP_Origin" */
    var SSP_PlaceInFrontOfCamera: String /* "SSP_PlaceInFrontOfCamera" */
    var SSP_MAX: String /* "SSP_MAX" */
}

external object ESequencerZoomPosition {
    var SZP_CurrentTime: String /* "SZP_CurrentTime" */
    var SZP_MousePosition: String /* "SZP_MousePosition" */
    var SZP_MAX: String /* "SZP_MAX" */
}

external object ESequencerLoopMode {
    var SLM_NoLoop: String /* "SLM_NoLoop" */
    var SLM_Loop: String /* "SLM_Loop" */
    var SLM_LoopSelectionRange: String /* "SLM_LoopSelectionRange" */
    var SLM_MAX: String /* "SLM_MAX" */
}

external object EFrameNumberDisplayFormats {
    var NonDropFrameTimecode: String /* "NonDropFrameTimecode" */
    var DropFrameTimecode: String /* "DropFrameTimecode" */
    var Seconds: String /* "Seconds" */
    var Frames: String /* "Frames" */
    var MAX_Count: String /* "MAX_Count" */
    var EFrameNumberDisplayFormats_MAX: String /* "EFrameNumberDisplayFormats_MAX" */
}

external open class SequencerSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var AutoChangeMode: String /* "AutoKey" | "AutoTrack" | "All" | "None" | "EAutoChangeMode_MAX" */
    open var AllowEditsMode: String /* "AllEdits" | "AllowSequencerEditsOnly" | "AllowLevelEditsOnly" | "EAllowEditsMode_MAX" */
    open var KeyGroupMode: String /* "KeyChanged" | "KeyGroup" | "KeyAll" | "EKeyGroupMode_MAX" */
    open var KeyInterpolation: String /* "Auto" | "User" | "Break" | "Linear" | "Constant" | "EMovieSceneKeyInterpolation_MAX" */
    open var bAutoSetTrackDefaults: Boolean
    open var SpawnPosition: String /* "SSP_Origin" | "SSP_PlaceInFrontOfCamera" | "SSP_MAX" */
    open var bCreateSpawnableCameras: Boolean
    open var bShowRangeSlider: Boolean
    open var bIsSnapEnabled: Boolean
    open var bSnapKeyTimesToInterval: Boolean
    open var bSnapKeyTimesToKeys: Boolean
    open var bSnapSectionTimesToInterval: Boolean
    open var bSnapSectionTimesToSections: Boolean
    open var bSnapKeysAndSectionsToPlayRange: Boolean
    open var bSnapPlayTimeToKeys: Boolean
    open var bSnapPlayTimeToInterval: Boolean
    open var bSnapPlayTimeToPressedKey: Boolean
    open var bSnapPlayTimeToDraggedKey: Boolean
    open var bSnapCurveValueToInterval: Boolean
    open var bShowSelectedNodesOnly: Boolean
    open var bRewindOnRecord: Boolean
    open var ZoomPosition: String /* "SZP_CurrentTime" | "SZP_MousePosition" | "SZP_MAX" */
    open var bAutoScrollEnabled: Boolean
    open var bLinkCurveEditorTimeRange: Boolean
    open var bSynchronizeCurveEditorSelection: Boolean
    open var bIsolateCurveEditorToSelection: Boolean
    open var LoopMode: String /* "SLM_NoLoop" | "SLM_Loop" | "SLM_LoopSelectionRange" | "SLM_MAX" */
    open var bKeepCursorInPlayRangeWhileScrubbing: Boolean
    open var bKeepPlayRangeInSectionBounds: Boolean
    open var ZeroPadFrames: Number
    open var JumpFrameIncrement: FrameNumber
    open var bShowCombinedKeyframes: Boolean
    open var bInfiniteKeyAreas: Boolean
    open var bShowChannelColors: Boolean
    open var ReduceKeysTolerance: Number
    open var bDeleteKeysWhenTrimming: Boolean
    open var bDisableSectionsAfterBaking: Boolean
    open var bCleanPlaybackMode: Boolean
    open var bActivateRealtimeViewports: Boolean
    open var bEvaluateSubSequencesInIsolation: Boolean
    open var bRerunConstructionScripts: Boolean
    open var bShowDebugVisualization: Boolean
    open var bVisualizePreAndPostRoll: Boolean
    open var bCompileDirectorOnEvaluate: Boolean
    open var TrajectoryPathCap: Any
    open var bShowOutlinerInfoColumn: Boolean
    open var FrameNumberDisplayFormat: String /* "NonDropFrameTimecode" | "DropFrameTimecode" | "Seconds" | "Frames" | "MAX_Count" | "EFrameNumberDisplayFormats_MAX" */
    open var MovieRendererName: String

    companion object {
        fun Load(ResourceName: String): SequencerSettings
        fun Find(Outer: UObject, ResourceName: String): SequencerSettings
        fun GetDefaultObject(): SequencerSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SequencerSettings
        fun C(Other: UObject): SequencerSettings
        fun C(Other: Any): SequencerSettings
    }
}

external open class SequencerTrackFilterExtension : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SequencerTrackFilterExtension
        fun Find(Outer: UObject, ResourceName: String): SequencerTrackFilterExtension
        fun GetDefaultObject(): SequencerTrackFilterExtension
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SequencerTrackFilterExtension
        fun C(Other: UObject): SequencerTrackFilterExtension
        fun C(Other: Any): SequencerTrackFilterExtension
    }
}

external open class MeshReconstructorBase : UObject {
    constructor()
    constructor(Outer: UObject)
    open fun StopReconstruction()
    open fun StartReconstruction()
    open fun PauseReconstruction()
    open fun IsReconstructionStarted(): Boolean
    open fun IsReconstructionPaused(): Boolean
    open fun DisconnectMRMesh()
    open fun ConnectMRMesh(Mesh: MRMeshComponent)

    companion object {
        fun Load(ResourceName: String): MeshReconstructorBase
        fun Find(Outer: UObject, ResourceName: String): MeshReconstructorBase
        fun GetDefaultObject(): MeshReconstructorBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MeshReconstructorBase
        fun C(Other: UObject): MeshReconstructorBase
        fun C(Other: Any): MeshReconstructorBase
    }
}

external object EMeshTrackerVertexColorMode {
    var None: String /* "None" */
    var Confidence: String /* "Confidence" */
    var Block: String /* "Block" */
    var EMeshTrackerVertexColorMode_MAX: String /* "EMeshTrackerVertexColorMode_MAX" */
}

external open class MockDataMeshTrackerComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var OnMeshTrackerUpdated: UnrealEngineMulticastDelegate<(index: Number, Vertices: Array<Vector>, Triangles: Array<Number>, Normals: Array<Vector>, Confidence: Array<Number>) -> Unit>
    open var ScanWorld: Boolean
    open var RequestNormals: Boolean
    open var RequestVertexConfidence: Boolean
    open var VertexColorMode: String /* "None" | "Confidence" | "Block" | "EMeshTrackerVertexColorMode_MAX" */
    open var BlockVertexColors: Array<Color>
    open var VertexColorFromConfidenceZero: LinearColor
    open var VertexColorFromConfidenceOne: LinearColor
    open var UpdateInterval: Number
    open var MRMesh: MRMeshComponent
    open fun DisconnectMRMesh(InMRMeshPtr: MRMeshComponent)
    open fun ConnectMRMesh(InMRMeshPtr: MRMeshComponent)

    companion object {
        fun Load(ResourceName: String): MockDataMeshTrackerComponent
        fun Find(Outer: UObject, ResourceName: String): MockDataMeshTrackerComponent
        fun GetDefaultObject(): MockDataMeshTrackerComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MockDataMeshTrackerComponent
        fun C(Other: UObject): MockDataMeshTrackerComponent
        fun C(Other: Any): MockDataMeshTrackerComponent
    }
}

external open class ARActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open fun AddARComponent(InComponentClass: UnrealEngineClass, NativeID: Guid): ARComponent

    companion object {
        fun GetDefaultObject(): ARActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARActor
        fun C(Other: UObject): ARActor
        fun C(Other: Any): ARActor
    }
}

external object EARCaptureType {
    var Camera: String /* "Camera" */
    var QRCode: String /* "QRCode" */
    var SpatialMapping: String /* "SpatialMapping" */
    var SceneUnderstanding: String /* "SceneUnderstanding" */
    var HandMesh: String /* "HandMesh" */
    var EARCaptureType_MAX: String /* "EARCaptureType_MAX" */
}

external object EARWorldMappingState {
    var NotAvailable: String /* "NotAvailable" */
    var StillMappingNotRelocalizable: String /* "StillMappingNotRelocalizable" */
    var StillMappingRelocalizable: String /* "StillMappingRelocalizable" */
    var Mapped: String /* "Mapped" */
    var EARWorldMappingState_MAX: String /* "EARWorldMappingState_MAX" */
}

external object EARTrackingQualityReason {
    var None: String /* "None" */
    var Initializing: String /* "Initializing" */
    var Relocalizing: String /* "Relocalizing" */
    var ExcessiveMotion: String /* "ExcessiveMotion" */
    var InsufficientFeatures: String /* "InsufficientFeatures" */
    var InsufficientLight: String /* "InsufficientLight" */
    var BadState: String /* "BadState" */
    var EARTrackingQualityReason_MAX: String /* "EARTrackingQualityReason_MAX" */
}

external object EARTrackingQuality {
    var NotTracking: String /* "NotTracking" */
    var OrientationOnly: String /* "OrientationOnly" */
    var OrientationAndPosition: String /* "OrientationAndPosition" */
    var EARTrackingQuality_MAX: String /* "EARTrackingQuality_MAX" */
}

external object EARTextureType {
    var Unknown: String /* "Unknown" */
    var CameraImage: String /* "CameraImage" */
    var CameraDepth: String /* "CameraDepth" */
    var EnvironmentCapture: String /* "EnvironmentCapture" */
    var PersonSegmentationImage: String /* "PersonSegmentationImage" */
    var PersonSegmentationDepth: String /* "PersonSegmentationDepth" */
    var SceneDepthMap: String /* "SceneDepthMap" */
    var SceneDepthConfidenceMap: String /* "SceneDepthConfidenceMap" */
    var EARTextureType_MAX: String /* "EARTextureType_MAX" */
}

external open class ARTexture : Texture {
    constructor()
    constructor(Outer: UObject)
    open var TextureType: String /* "Unknown" | "CameraImage" | "CameraDepth" | "EnvironmentCapture" | "PersonSegmentationImage" | "PersonSegmentationDepth" | "SceneDepthMap" | "SceneDepthConfidenceMap" | "EARTextureType_MAX" */
    open var Timestamp: Number
    open var ExternalTextureGuid: Guid
    open var Size: Vector2D

    companion object {
        fun Load(ResourceName: String): ARTexture
        fun Find(Outer: UObject, ResourceName: String): ARTexture
        fun GetDefaultObject(): ARTexture
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARTexture
        fun C(Other: UObject): ARTexture
        fun C(Other: Any): ARTexture
    }
}

external open class ARLightEstimate : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ARLightEstimate
        fun Find(Outer: UObject, ResourceName: String): ARLightEstimate
        fun GetDefaultObject(): ARLightEstimate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARLightEstimate
        fun C(Other: UObject): ARLightEstimate
        fun C(Other: Any): ARLightEstimate
    }
}

external interface `T$588` {
    var OutCameraIntrinsics: ARCameraIntrinsics
    var `$`: Boolean
}

external open class ARCameraIntrinsics {
    open var ImageResolution: IntPoint
    open var FocalLength: Vector2D
    open var PrincipalPoint: Vector2D
    open fun clone(): ARCameraIntrinsics
    open fun GetCameraIntrinsics(): `T$588`

    companion object {
        fun C(Other: UObject): ARCameraIntrinsics
        fun C(Other: Any): ARCameraIntrinsics
        fun GetCameraIntrinsics(OutCameraIntrinsics: ARCameraIntrinsics = definedExternally): `T$588`
    }
}

external open class ARTextureCameraImage : ARTexture {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ARTextureCameraImage
        fun Find(Outer: UObject, ResourceName: String): ARTextureCameraImage
        fun GetDefaultObject(): ARTextureCameraImage
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARTextureCameraImage
        fun C(Other: UObject): ARTextureCameraImage
        fun C(Other: Any): ARTextureCameraImage
    }
}

external object EARDepthQuality {
    var Unkown: String /* "Unkown" */
    var Low: String /* "Low" */
    var High: String /* "High" */
    var EARDepthQuality_MAX: String /* "EARDepthQuality_MAX" */
}

external object EARDepthAccuracy {
    var Unkown: String /* "Unkown" */
    var Approximate: String /* "Approximate" */
    var Accurate: String /* "Accurate" */
    var EARDepthAccuracy_MAX: String /* "EARDepthAccuracy_MAX" */
}

external open class ARTextureCameraDepth : ARTexture {
    constructor()
    constructor(Outer: UObject)
    open var DepthQuality: String /* "Unkown" | "Low" | "High" | "EARDepthQuality_MAX" */
    open var DepthAccuracy: String /* "Unkown" | "Approximate" | "Accurate" | "EARDepthAccuracy_MAX" */
    open var bIsTemporallySmoothed: Boolean

    companion object {
        fun Load(ResourceName: String): ARTextureCameraDepth
        fun Find(Outer: UObject, ResourceName: String): ARTextureCameraDepth
        fun GetDefaultObject(): ARTextureCameraDepth
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARTextureCameraDepth
        fun C(Other: UObject): ARTextureCameraDepth
        fun C(Other: Any): ARTextureCameraDepth
    }
}

external object EARSessionStatus {
    var NotStarted: String /* "NotStarted" */
    var Running: String /* "Running" */
    var NotSupported: String /* "NotSupported" */
    var FatalError: String /* "FatalError" */
    var PermissionNotGranted: String /* "PermissionNotGranted" */
    var UnsupportedConfiguration: String /* "UnsupportedConfiguration" */
    var Other: String /* "Other" */
    var EARSessionStatus_MAX: String /* "EARSessionStatus_MAX" */
}

external open class ARSessionStatus {
    open var AdditionalInfo: String
    open var Status: String /* "NotStarted" | "Running" | "NotSupported" | "FatalError" | "PermissionNotGranted" | "UnsupportedConfiguration" | "Other" | "EARSessionStatus_MAX" */
    open fun clone(): ARSessionStatus

    companion object {
        fun C(Other: UObject): ARSessionStatus
        fun C(Other: Any): ARSessionStatus
        fun GetARSessionStatus(): ARSessionStatus
    }
}

external open class ARSkeletonDefinition {
    open var NumJoints: Number
    open var JointNames: Array<String>
    open var ParentIndices: Array<Number>
    open fun clone(): ARSkeletonDefinition

    companion object {
        fun C(Other: UObject): ARSkeletonDefinition
        fun C(Other: Any): ARSkeletonDefinition
    }
}

external object EARJointTransformSpace {
    var Model: String /* "Model" */
    var ParentJoint: String /* "ParentJoint" */
    var EARJointTransformSpace_MAX: String /* "EARJointTransformSpace_MAX" */
}

external open class ARPose3D {
    open var SkeletonDefinition: ARSkeletonDefinition
    open var JointTransforms: Array<Transform>
    open var IsJointTracked: Array<Boolean>
    open var JointTransformSpace: String /* "Model" | "ParentJoint" | "EARJointTransformSpace_MAX" */
    open fun clone(): ARPose3D

    companion object {
        fun C(Other: UObject): ARPose3D
        fun C(Other: Any): ARPose3D
    }
}

external open class ARTrackedPose : ARTrackedGeometry {
    constructor()
    constructor(Outer: UObject)
    open var TrackedPose: ARPose3D
    open fun GetTrackedPoseData(): ARPose3D

    companion object {
        fun Load(ResourceName: String): ARTrackedPose
        fun Find(Outer: UObject, ResourceName: String): ARTrackedPose
        fun GetDefaultObject(): ARTrackedPose
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARTrackedPose
        fun C(Other: UObject): ARTrackedPose
        fun C(Other: Any): ARTrackedPose
    }
}

external open class ARTrackedPoint : ARTrackedGeometry {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ARTrackedPoint
        fun Find(Outer: UObject, ResourceName: String): ARTrackedPoint
        fun GetDefaultObject(): ARTrackedPoint
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARTrackedPoint
        fun C(Other: UObject): ARTrackedPoint
        fun C(Other: Any): ARTrackedPoint
    }
}

external object EARPlaneOrientation {
    var Horizontal: String /* "Horizontal" */
    var Vertical: String /* "Vertical" */
    var Diagonal: String /* "Diagonal" */
    var EARPlaneOrientation_MAX: String /* "EARPlaneOrientation_MAX" */
}

external open class ARPlaneGeometry : ARTrackedGeometry {
    constructor()
    constructor(Outer: UObject)
    open var Orientation: String /* "Horizontal" | "Vertical" | "Diagonal" | "EARPlaneOrientation_MAX" */
    open var Center: Vector
    open var Extent: Vector
    open var BoundaryPolygon: Array<Vector>
    open var SubsumedBy: ARPlaneGeometry
    open fun GetSubsumedBy(): ARPlaneGeometry
    open fun GetOrientation(): String /* "Horizontal" | "Vertical" | "Diagonal" | "EARPlaneOrientation_MAX" */
    open fun GetExtent(): Vector
    open fun GetCenter(): Vector
    open fun GetBoundaryPolygonInLocalSpace(): Array<Vector>

    companion object {
        fun Load(ResourceName: String): ARPlaneGeometry
        fun Find(Outer: UObject, ResourceName: String): ARPlaneGeometry
        fun GetDefaultObject(): ARPlaneGeometry
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARPlaneGeometry
        fun C(Other: UObject): ARPlaneGeometry
        fun C(Other: Any): ARPlaneGeometry
    }
}

external open class ARTrackedImage : ARTrackedGeometry {
    constructor()
    constructor(Outer: UObject)
    open var DetectedImage: ARCandidateImage
    open var EstimatedSize: Vector2D
    open fun GetEstimateSize(): Vector2D
    open fun GetDetectedImage(): ARCandidateImage

    companion object {
        fun Load(ResourceName: String): ARTrackedImage
        fun Find(Outer: UObject, ResourceName: String): ARTrackedImage
        fun GetDefaultObject(): ARTrackedImage
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARTrackedImage
        fun C(Other: UObject): ARTrackedImage
        fun C(Other: Any): ARTrackedImage
    }
}

external open class AREnvironmentCaptureProbeTexture : TextureCube {
    constructor()
    constructor(Outer: UObject)
    open var TextureType: String /* "Unknown" | "CameraImage" | "CameraDepth" | "EnvironmentCapture" | "PersonSegmentationImage" | "PersonSegmentationDepth" | "SceneDepthMap" | "SceneDepthConfidenceMap" | "EARTextureType_MAX" */
    open var Timestamp: Number
    open var ExternalTextureGuid: Guid
    open var Size: Vector2D

    companion object {
        fun Load(ResourceName: String): AREnvironmentCaptureProbeTexture
        fun Find(Outer: UObject, ResourceName: String): AREnvironmentCaptureProbeTexture
        fun GetDefaultObject(): AREnvironmentCaptureProbeTexture
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AREnvironmentCaptureProbeTexture
        fun C(Other: UObject): AREnvironmentCaptureProbeTexture
        fun C(Other: Any): AREnvironmentCaptureProbeTexture
    }
}

external open class AREnvironmentCaptureProbe : ARTrackedGeometry {
    constructor()
    constructor(Outer: UObject)
    open var Extent: Vector
    open var EnvironmentCaptureTexture: AREnvironmentCaptureProbeTexture
    open fun GetExtent(): Vector
    open fun GetEnvironmentCaptureTexture(): AREnvironmentCaptureProbeTexture

    companion object {
        fun Load(ResourceName: String): AREnvironmentCaptureProbe
        fun Find(Outer: UObject, ResourceName: String): AREnvironmentCaptureProbe
        fun GetDefaultObject(): AREnvironmentCaptureProbe
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AREnvironmentCaptureProbe
        fun C(Other: UObject): AREnvironmentCaptureProbe
        fun C(Other: Any): AREnvironmentCaptureProbe
    }
}

external open class ARPose2D {
    open var SkeletonDefinition: ARSkeletonDefinition
    open var JointLocations: Array<Vector2D>
    open var IsJointTracked: Array<Boolean>
    open fun clone(): ARPose2D

    companion object {
        fun C(Other: UObject): ARPose2D
        fun C(Other: Any): ARPose2D
    }
}

external interface `T$589` {
    var ClosestIntersection: Vector
}

external open class ARBlueprintLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ARBlueprintLibrary
        fun Find(Outer: UObject, ResourceName: String): ARBlueprintLibrary
        fun GetDefaultObject(): ARBlueprintLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARBlueprintLibrary
        fun UnpinComponent(ComponentToUnpin: SceneComponent)
        fun ToggleARCapture(bOnOff: Boolean, CaptureType: String /* "Camera" | "QRCode" | "SpatialMapping" | "SceneUnderstanding" | "HandMesh" | "EARCaptureType_MAX" */): Boolean
        fun StopARSession()
        fun StartARSession(SessionConfig: ARSessionConfig)
        fun SetEnabledXRCamera(bOnOff: Boolean)
        fun SetARWorldScale(InWorldScale: Number)
        fun SetARWorldOriginLocationAndRotation(OriginLocation: Vector, OriginRotation: Rotator, bIsTransformInWorldSpace: Boolean, bMaintainUpDirection: Boolean)
        fun SetAlignmentTransform(InAlignmentTransform: Transform)
        fun SaveARPinToLocalStore(InSaveName: String, InPin: ARPin): Boolean
        fun ResizeXRCamera(InSize: IntPoint): IntPoint
        fun RemovePin(PinToRemove: ARPin)
        fun RemoveARPinFromLocalStore(InSaveName: String)
        fun RemoveAllARPinsFromLocalStore()
        fun PinComponentToTraceResult(ComponentToPin: SceneComponent, TraceResult: ARTraceResult, DebugName: String): ARPin
        fun PinComponentToARPin(ComponentToPin: SceneComponent, Pin: ARPin): Boolean
        fun PinComponent(ComponentToPin: SceneComponent, PinToWorldTransform: Transform, TrackedGeometry: ARTrackedGeometry, DebugName: String): ARPin
        fun PauseARSession()
        fun LoadARPinsFromLocalStore(): Any
        fun LineTraceTrackedObjects3D(Start: Vector, End: Vector, bTestFeaturePoints: Boolean, bTestGroundPlane: Boolean, bTestPlaneExtents: Boolean, bTestPlaneBoundaryPolygon: Boolean): Array<ARTraceResult>
        fun LineTraceTrackedObjects(ScreenCoord: Vector2D, bTestFeaturePoints: Boolean, bTestGroundPlane: Boolean, bTestPlaneExtents: Boolean, bTestPlaneBoundaryPolygon: Boolean): Array<ARTraceResult>
        fun IsARSessionTypeSupported(SessionType: String /* "None" | "Orientation" | "World" | "Face" | "Image" | "ObjectScanning" | "PoseTracking" | "GeoTracking" | "EARSessionType_MAX" */): Boolean
        fun IsARSessionTrackingFeatureSupported(SessionType: String /* "None" | "Orientation" | "World" | "Face" | "Image" | "ObjectScanning" | "PoseTracking" | "GeoTracking" | "EARSessionType_MAX" */, SessionTrackingFeature: String /* "None" | "PoseDetection2D" | "PersonSegmentation" | "PersonSegmentationWithDepth" | "SceneDepth" | "SmoothedSceneDepth" | "EARSessionTrackingFeature_MAX" */): Boolean
        fun IsARSceneReconstructionSupported(SessionType: String /* "None" | "Orientation" | "World" | "Face" | "Image" | "ObjectScanning" | "PoseTracking" | "GeoTracking" | "EARSessionType_MAX" */, SceneReconstructionMethod: String /* "None" | "MeshOnly" | "MeshWithClassification" | "EARSceneReconstruction_MAX" */): Boolean
        fun IsARSupported(): Boolean
        fun IsARPinLocalStoreSupported(): Boolean
        fun IsARPinLocalStoreReady(): Boolean
        fun GetARWorldMappingStatus(): String /* "NotAvailable" | "StillMappingNotRelocalizable" | "StillMappingRelocalizable" | "Mapped" | "EARWorldMappingState_MAX" */
        fun GetARTrackingQualityReason(): String /* "None" | "Initializing" | "Relocalizing" | "ExcessiveMotion" | "InsufficientFeatures" | "InsufficientLight" | "BadState" | "EARTrackingQualityReason_MAX" */
        fun GetARTrackingQuality(): String /* "NotTracking" | "OrientationOnly" | "OrientationAndPosition" | "EARTrackingQuality_MAX" */
        fun GetSupportedARVideoFormats(SessionType: String /* "None" | "Orientation" | "World" | "Face" | "Image" | "ObjectScanning" | "PoseTracking" | "GeoTracking" | "EARSessionType_MAX" */): Array<ARVideoFormat>
        fun GetARSessionConfig(): ARSessionConfig
        fun GetARPointCloud(): Array<Vector>
        fun GetARPersonSegmentationImage(): ARTexture
        fun GetARPersonSegmentationDepthImage(): ARTexture
        fun GetObjectClassificationAtLocation(InWorldLocation: Vector, OutClassification: String /* "NotApplicable" | "Unknown" | "Wall" | "Ceiling" | "Floor" | "Table" | "Seat" | "Face" | "Image" | "World" | "SceneObject" | "HandMesh" | "Door" | "Window" | "EARObjectClassification_MAX" */ = definedExternally, OutClassificationLocation: Vector = definedExternally, MaxLocationDiff: Number = definedExternally): `T$250`
        fun GetNumberOfTrackedFacesSupported(): Number
        fun GetCurrentLightEstimate(): ARLightEstimate
        fun GetCameraIntrinsics(OutCameraIntrinsics: ARCameraIntrinsics = definedExternally): `T$588`
        fun GetARCameraImage(): ARTextureCameraImage
        fun GetARCameraDepth(): ARTextureCameraDepth
        fun GetARWorldScale(): Number
        fun GetARTexture(TextureType: String /* "Unknown" | "CameraImage" | "CameraDepth" | "EnvironmentCapture" | "PersonSegmentationImage" | "PersonSegmentationDepth" | "SceneDepthMap" | "SceneDepthConfidenceMap" | "EARTextureType_MAX" */): ARTexture
        fun GetARSessionStatus(): ARSessionStatus
        fun GetAllARTracked3DPoses(): Array<ARTrackedPose>
        fun GetAllTrackedPoints(): Array<ARTrackedPoint>
        fun GetAllARTrackedPlanes(): Array<ARPlaneGeometry>
        fun GetAllARTrackedImages(): Array<ARTrackedImage>
        fun GetAllARTrackedEnvironmentProbes(): Array<AREnvironmentCaptureProbe>
        fun GetAllARTracked2DPoses(): Array<ARPose2D>
        fun GetAllPins(): Array<ARPin>
        fun GetAllGeometriesByClass(GeometryClass: UnrealEngineClass): Array<ARTrackedGeometry>
        fun GetAllARGeometries(): Array<ARTrackedGeometry>
        fun GetAlignmentTransform(): Transform
        fun FindTrackedPointsByName(PointName: String): Array<ARTrackedPoint>
        fun DebugDrawTrackedGeometry(TrackedGeometry: ARTrackedGeometry, WorldContextObject: UObject, Color: LinearColor, OutlineThickness: Number, PersistForSeconds: Number)
        fun DebugDrawPin(ARPin: ARPin, WorldContextObject: UObject, Color: LinearColor, Scale: Number, PersistForSeconds: Number)
        fun CalculateClosestIntersection(StartPoints: Array<Vector>, EndPoints: Array<Vector>, ClosestIntersection: Vector = definedExternally): `T$589`
        fun CalculateAlignmentTransform(TransformInFirstCoordinateSystem: Transform, TransformInSecondCoordinateSystem: Transform, AlignmentTransform: Transform = definedExternally): `T$9`
        fun AddTrackedPointWithName(WorldTransform: Transform, PointName: String, bDeletePointsWithSameName: Boolean): Boolean
        fun AddRuntimeCandidateImage(SessionConfig: ARSessionConfig, CandidateTexture: Texture2D, FriendlyName: String, PhysicalWidth: Number): ARCandidateImage
        fun AddManualEnvironmentCaptureProbe(Location: Vector, Extent: Vector): Boolean
        fun C(Other: UObject): ARBlueprintLibrary
        fun C(Other: Any): ARBlueprintLibrary
    }
}

external open class ARTraceResultLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ARTraceResultLibrary
        fun Find(Outer: UObject, ResourceName: String): ARTraceResultLibrary
        fun GetDefaultObject(): ARTraceResultLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARTraceResultLibrary
        fun GetTrackedGeometry(TraceResult: ARTraceResult): ARTrackedGeometry
        fun GetTraceChannel(TraceResult: ARTraceResult): String /* "None" | "FeaturePoint" | "GroundPlane" | "PlaneUsingExtent" | "PlaneUsingBoundaryPolygon" | "EARLineTraceChannels_MAX" */
        fun GetLocalTransform(TraceResult: ARTraceResult): Transform
        fun GetLocalToWorldTransform(TraceResult: ARTraceResult): Transform
        fun GetLocalToTrackingTransform(TraceResult: ARTraceResult): Transform
        fun GetDistanceFromCamera(TraceResult: ARTraceResult): Number
        fun C(Other: UObject): ARTraceResultLibrary
        fun C(Other: Any): ARTraceResultLibrary
    }
}

external open class BlueprintAsyncActionBase : UObject {
    constructor()
    constructor(Outer: UObject)
    open fun Activate()

    companion object {
        fun Load(ResourceName: String): BlueprintAsyncActionBase
        fun Find(Outer: UObject, ResourceName: String): BlueprintAsyncActionBase
        fun GetDefaultObject(): BlueprintAsyncActionBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintAsyncActionBase
        fun C(Other: UObject): BlueprintAsyncActionBase
        fun C(Other: Any): BlueprintAsyncActionBase
    }
}

external open class ARBaseAsyncTaskBlueprintProxy : BlueprintAsyncActionBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ARBaseAsyncTaskBlueprintProxy
        fun Find(Outer: UObject, ResourceName: String): ARBaseAsyncTaskBlueprintProxy
        fun GetDefaultObject(): ARBaseAsyncTaskBlueprintProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARBaseAsyncTaskBlueprintProxy
        fun C(Other: UObject): ARBaseAsyncTaskBlueprintProxy
        fun C(Other: Any): ARBaseAsyncTaskBlueprintProxy
    }
}

external open class ARSaveWorldAsyncTaskBlueprintProxy : ARBaseAsyncTaskBlueprintProxy {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<(SavedWorld: Array<Number>) -> Unit>
    open var OnFailed: UnrealEngineMulticastDelegate<(SavedWorld: Array<Number>) -> Unit>

    companion object {
        fun Load(ResourceName: String): ARSaveWorldAsyncTaskBlueprintProxy
        fun Find(Outer: UObject, ResourceName: String): ARSaveWorldAsyncTaskBlueprintProxy
        fun GetDefaultObject(): ARSaveWorldAsyncTaskBlueprintProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARSaveWorldAsyncTaskBlueprintProxy
        fun SaveARWorld(WorldContextObject: UObject): ARSaveWorldAsyncTaskBlueprintProxy
        fun C(Other: UObject): ARSaveWorldAsyncTaskBlueprintProxy
        fun C(Other: Any): ARSaveWorldAsyncTaskBlueprintProxy
    }
}

external open class ARGetCandidateObjectAsyncTaskBlueprintProxy : ARBaseAsyncTaskBlueprintProxy {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<(SavedObject: ARCandidateObject) -> Unit>
    open var OnFailed: UnrealEngineMulticastDelegate<(SavedObject: ARCandidateObject) -> Unit>

    companion object {
        fun Load(ResourceName: String): ARGetCandidateObjectAsyncTaskBlueprintProxy
        fun Find(Outer: UObject, ResourceName: String): ARGetCandidateObjectAsyncTaskBlueprintProxy
        fun GetDefaultObject(): ARGetCandidateObjectAsyncTaskBlueprintProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARGetCandidateObjectAsyncTaskBlueprintProxy
        fun GetARCandidateObject(WorldContextObject: UObject, Location: Vector, Extent: Vector): ARGetCandidateObjectAsyncTaskBlueprintProxy
        fun C(Other: UObject): ARGetCandidateObjectAsyncTaskBlueprintProxy
        fun C(Other: Any): ARGetCandidateObjectAsyncTaskBlueprintProxy
    }
}

external object EARServicePermissionRequestResult {
    var Granted: String /* "Granted" */
    var Denied: String /* "Denied" */
    var EARServicePermissionRequestResult_MAX: String /* "EARServicePermissionRequestResult_MAX" */
}

external object EARServiceInstallRequestResult {
    var Installed: String /* "Installed" */
    var DeviceNotCompatible: String /* "DeviceNotCompatible" */
    var UserDeclinedInstallation: String /* "UserDeclinedInstallation" */
    var FatalError: String /* "FatalError" */
    var EARServiceInstallRequestResult_MAX: String /* "EARServiceInstallRequestResult_MAX" */
}

external object EARServiceAvailability {
    var UnknownError: String /* "UnknownError" */
    var UnknownChecking: String /* "UnknownChecking" */
    var UnknownTimedOut: String /* "UnknownTimedOut" */
    var UnsupportedDeviceNotCapable: String /* "UnsupportedDeviceNotCapable" */
    var SupportedNotInstalled: String /* "SupportedNotInstalled" */
    var SupportedVersionTooOld: String /* "SupportedVersionTooOld" */
    var SupportedInstalled: String /* "SupportedInstalled" */
    var EARServiceAvailability_MAX: String /* "EARServiceAvailability_MAX" */
}

external interface `T$590` {
    var OutPermissionResult: String /* "Granted" | "Denied" | "EARServicePermissionRequestResult_MAX" */
}

external interface `T$591` {
    var OutInstallResult: String /* "Installed" | "DeviceNotCompatible" | "UserDeclinedInstallation" | "FatalError" | "EARServiceInstallRequestResult_MAX" */
}

external interface `T$592` {
    var OutAvailability: String /* "UnknownError" | "UnknownChecking" | "UnknownTimedOut" | "UnsupportedDeviceNotCapable" | "SupportedNotInstalled" | "SupportedVersionTooOld" | "SupportedInstalled" | "EARServiceAvailability_MAX" */
}

external open class ARDependencyHandler : UObject {
    constructor()
    constructor(Outer: UObject)
    open fun StartARSessionLatent(WorldContextObject: UObject, SessionConfig: ARSessionConfig, LatentInfo: LatentActionInfo)
    open fun RequestARSessionPermission(WorldContextObject: UObject, SessionConfig: ARSessionConfig, LatentInfo: LatentActionInfo, OutPermissionResult: String /* "Granted" | "Denied" | "EARServicePermissionRequestResult_MAX" */ = definedExternally): `T$590`
    open fun InstallARService(WorldContextObject: UObject, LatentInfo: LatentActionInfo, OutInstallResult: String /* "Installed" | "DeviceNotCompatible" | "UserDeclinedInstallation" | "FatalError" | "EARServiceInstallRequestResult_MAX" */ = definedExternally): `T$591`
    open fun CheckARServiceAvailability(WorldContextObject: UObject, LatentInfo: LatentActionInfo, OutAvailability: String /* "UnknownError" | "UnknownChecking" | "UnknownTimedOut" | "UnsupportedDeviceNotCapable" | "SupportedNotInstalled" | "SupportedVersionTooOld" | "SupportedInstalled" | "EARServiceAvailability_MAX" */ = definedExternally): `T$592`

    companion object {
        fun Load(ResourceName: String): ARDependencyHandler
        fun Find(Outer: UObject, ResourceName: String): ARDependencyHandler
        fun GetDefaultObject(): ARDependencyHandler
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARDependencyHandler
        fun GetARDependencyHandler(): ARDependencyHandler
        fun C(Other: UObject): ARDependencyHandler
        fun C(Other: Any): ARDependencyHandler
    }
}

external object EARGeoTrackingStateReason {
    var None: String /* "None" */
    var NotAvailableAtLocation: String /* "NotAvailableAtLocation" */
    var NeedLocationPermissions: String /* "NeedLocationPermissions" */
    var DevicePointedTooLow: String /* "DevicePointedTooLow" */
    var WorldTrackingUnstable: String /* "WorldTrackingUnstable" */
    var WaitingForLocation: String /* "WaitingForLocation" */
    var GeoDataNotLoaded: String /* "GeoDataNotLoaded" */
    var VisualLocalizationFailed: String /* "VisualLocalizationFailed" */
    var WaitingForAvailabilityCheck: String /* "WaitingForAvailabilityCheck" */
    var EARGeoTrackingStateReason_MAX: String /* "EARGeoTrackingStateReason_MAX" */
}

external object EARGeoTrackingState {
    var Initializing: String /* "Initializing" */
    var Localized: String /* "Localized" */
    var Localizing: String /* "Localizing" */
    var NotAvailable: String /* "NotAvailable" */
    var EARGeoTrackingState_MAX: String /* "EARGeoTrackingState_MAX" */
}

external object EARGeoTrackingAccuracy {
    var Undetermined: String /* "Undetermined" */
    var Low: String /* "Low" */
    var Medium: String /* "Medium" */
    var High: String /* "High" */
    var EARGeoTrackingAccuracy_MAX: String /* "EARGeoTrackingAccuracy_MAX" */
}

external open class ARGeoTrackingSupport : UObject {
    constructor()
    constructor(Outer: UObject)
    open fun GetGeoTrackingStateReason(): String /* "None" | "NotAvailableAtLocation" | "NeedLocationPermissions" | "DevicePointedTooLow" | "WorldTrackingUnstable" | "WaitingForLocation" | "GeoDataNotLoaded" | "VisualLocalizationFailed" | "WaitingForAvailabilityCheck" | "EARGeoTrackingStateReason_MAX" */
    open fun GetGeoTrackingState(): String /* "Initializing" | "Localized" | "Localizing" | "NotAvailable" | "EARGeoTrackingState_MAX" */
    open fun GetGeoTrackingAccuracy(): String /* "Undetermined" | "Low" | "Medium" | "High" | "EARGeoTrackingAccuracy_MAX" */
    open fun AddGeoAnchorAtLocationWithAltitude(Longitude: Number, Latitude: Number, AltitudeMeters: Number, OptionalAnchorName: String): Boolean
    open fun AddGeoAnchorAtLocation(Longitude: Number, Latitude: Number, OptionalAnchorName: String): Boolean

    companion object {
        fun Load(ResourceName: String): ARGeoTrackingSupport
        fun Find(Outer: UObject, ResourceName: String): ARGeoTrackingSupport
        fun GetDefaultObject(): ARGeoTrackingSupport
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARGeoTrackingSupport
        fun GetGeoTrackingSupport(): ARGeoTrackingSupport
        fun C(Other: UObject): ARGeoTrackingSupport
        fun C(Other: Any): ARGeoTrackingSupport
    }
}

external open class CheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy : ARBaseAsyncTaskBlueprintProxy {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<(bIsAvailable: Boolean, Error: String) -> Unit>
    open var OnFailed: UnrealEngineMulticastDelegate<(bIsAvailable: Boolean, Error: String) -> Unit>

    companion object {
        fun Load(ResourceName: String): CheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy
        fun Find(Outer: UObject, ResourceName: String): CheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy
        fun GetDefaultObject(): CheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy
        fun CheckGeoTrackingAvailabilityAtLocation(WorldContextObject: UObject, Longitude: Number, Latitude: Number): CheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy
        fun CheckGeoTrackingAvailability(WorldContextObject: UObject): CheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy
        fun C(Other: UObject): CheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy
        fun C(Other: Any): CheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy
    }
}

external open class GetGeoLocationAsyncTaskBlueprintProxy : ARBaseAsyncTaskBlueprintProxy {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<(Longitude: Number, Latitude: Number, Altitude: Number, Error: String) -> Unit>
    open var OnFailed: UnrealEngineMulticastDelegate<(Longitude: Number, Latitude: Number, Altitude: Number, Error: String) -> Unit>

    companion object {
        fun Load(ResourceName: String): GetGeoLocationAsyncTaskBlueprintProxy
        fun Find(Outer: UObject, ResourceName: String): GetGeoLocationAsyncTaskBlueprintProxy
        fun GetDefaultObject(): GetGeoLocationAsyncTaskBlueprintProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GetGeoLocationAsyncTaskBlueprintProxy
        fun GetGeoLocationAtWorldPosition(WorldContextObject: UObject, WorldPosition: Vector): GetGeoLocationAsyncTaskBlueprintProxy
        fun C(Other: UObject): GetGeoLocationAsyncTaskBlueprintProxy
        fun C(Other: Any): GetGeoLocationAsyncTaskBlueprintProxy
    }
}

external open class ARLifeCycleComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var OnARActorSpawnedDelegate: UnrealEngineMulticastDelegate<(ComponentClass: UnrealEngineClass, NativeID: Guid, SpawnedActor: ARActor) -> Unit>
    open var OnARActorToBeDestroyedDelegate: UnrealEngineMulticastDelegate<(Actor: ARActor) -> Unit>
    open fun ServerSpawnARActor(ComponentClass: UnrealEngineClass, NativeID: Guid)
    open fun ServerDestroyARActor(Actor: ARActor)

    companion object {
        fun Load(ResourceName: String): ARLifeCycleComponent
        fun Find(Outer: UObject, ResourceName: String): ARLifeCycleComponent
        fun GetDefaultObject(): ARLifeCycleComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARLifeCycleComponent
        fun C(Other: UObject): ARLifeCycleComponent
        fun C(Other: Any): ARLifeCycleComponent
    }
}

external open class ARBasicLightEstimate : ARLightEstimate {
    constructor()
    constructor(Outer: UObject)
    open var AmbientIntensityLumens: Number
    open var AmbientColorTemperatureKelvin: Number
    open var AmbientColor: LinearColor
    open fun GetAmbientIntensityLumens(): Number
    open fun GetAmbientColorTemperatureKelvin(): Number
    open fun GetAmbientColor(): LinearColor

    companion object {
        fun Load(ResourceName: String): ARBasicLightEstimate
        fun Find(Outer: UObject, ResourceName: String): ARBasicLightEstimate
        fun GetDefaultObject(): ARBasicLightEstimate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARBasicLightEstimate
        fun C(Other: UObject): ARBasicLightEstimate
        fun C(Other: Any): ARBasicLightEstimate
    }
}

external open class AROriginActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    companion object {
        fun GetDefaultObject(): AROriginActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AROriginActor
        fun C(Other: UObject): AROriginActor
        fun C(Other: Any): AROriginActor
    }
}

external open class GameMode(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : GameModeBase {
    open var MatchState: String
    open var bDelayedStart: Boolean
    open var NumSpectators: Number
    open var NumPlayers: Number
    open var NumBots: Number
    open var MinRespawnDelay: Number
    open var NumTravellingPlayers: Number
    open var EngineMessageClass: UnrealEngineClass
    open var InactivePlayerArray: Array<PlayerState>
    open var InactivePlayerStateLifeSpan: Number
    open var MaxInactivePlayers: Number
    open var bHandleDedicatedServerReplays: Boolean
    open fun StartMatch()
    open fun SetBandwidthLimit(AsyncIOBandwidthLimit: Number)
    open fun Say(Msg: String)
    open fun RestartGame()
    open fun ReadyToStartMatch(): Boolean
    open fun ReadyToEndMatch(): Boolean
    open fun OnSetMatchState(NewState: String)
    open fun IsMatchInProgress(): Boolean
    open fun GetMatchState(): String
    open fun EndMatch()
    open fun AbortMatch()

    companion object {
        fun GetDefaultObject(): GameMode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameMode
        fun C(Other: UObject): GameMode
        fun C(Other: Any): GameMode
    }
}

external open class GameState(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : GameStateBase {
    open var MatchState: String
    open var PreviousMatchState: String
    open var ElapsedTime: Number
    open fun OnRep_MatchState()
    open fun OnRep_ElapsedTime()

    companion object {
        fun GetDefaultObject(): GameState
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameState
        fun C(Other: UObject): GameState
        fun C(Other: Any): GameState
    }
}

external open class ARSharedWorldGameState(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : GameState {
    open var PreviewImageData: Array<Number>
    open var ARWorldData: Array<Number>
    open var PreviewImageBytesTotal: Number
    open var ARWorldBytesTotal: Number
    open var PreviewImageBytesDelivered: Number
    open var ARWorldBytesDelivered: Number
    open fun OnARWorldMapIsReady()

    companion object {
        fun GetDefaultObject(): ARSharedWorldGameState
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARSharedWorldGameState
        fun C(Other: UObject): ARSharedWorldGameState
        fun C(Other: Any): ARSharedWorldGameState
    }
}

external open class ARSharedWorldGameMode(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : GameMode {
    open var BufferSizePerChunk: Number
    open fun SetARPreviewImageData(ImageData: Array<Number>)
    open fun SetARWorldSharingIsReady()
    open fun SetARSharedWorldData(ARWorldData: Array<Number>)
    open fun GetARSharedWorldGameState(): ARSharedWorldGameState

    companion object {
        fun GetDefaultObject(): ARSharedWorldGameMode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARSharedWorldGameMode
        fun C(Other: UObject): ARSharedWorldGameMode
        fun C(Other: Any): ARSharedWorldGameMode
    }
}

external open class ARSharedWorldPlayerController(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : PlayerController {
    open fun ServerMarkReadyForReceiving()
    open fun ClientUpdatePreviewImageData(Offset: Number, Buffer: Array<Number>)
    open fun ClientUpdateARWorldData(Offset: Number, Buffer: Array<Number>)
    open fun ClientInitSharedWorld(PreviewImageSize: Number, ARWorldDataSize: Number)

    companion object {
        fun GetDefaultObject(): ARSharedWorldPlayerController
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARSharedWorldPlayerController
        fun C(Other: UObject): ARSharedWorldPlayerController
        fun C(Other: Any): ARSharedWorldPlayerController
    }
}

external open class LightComponentBase : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var LightGuid: Guid
    open var Brightness: Number
    open var Intensity: Number
    open var LightColor: Color
    open var bAffectsWorld: Boolean
    open var CastShadows: Boolean
    open var CastStaticShadows: Boolean
    open var CastDynamicShadows: Boolean
    open var bAffectTranslucentLighting: Boolean
    open var bTransmission: Boolean
    open var bCastVolumetricShadow: Boolean
    open var bCastDeepShadow: Boolean
    open var bCastRaytracedShadow: Boolean
    open var bAffectReflection: Boolean
    open var bAffectGlobalIllumination: Boolean
    open var DeepShadowLayerDistribution: Number
    open var IndirectLightingIntensity: Number
    open var VolumetricScatteringIntensity: Number
    open var SamplesPerPixel: Number
    open var StaticEditorTexture: Texture2D
    open var StaticEditorTextureScale: Number
    open var DynamicEditorTexture: Texture2D
    open var DynamicEditorTextureScale: Number
    open fun SetSamplesPerPixel(NewValue: Number)
    open fun SetCastVolumetricShadow(bNewValue: Boolean)
    open fun SetCastShadows(bNewValue: Boolean)
    open fun SetCastRaytracedShadow(bNewValue: Boolean)
    open fun SetCastDeepShadow(bNewValue: Boolean)
    open fun SetAffectReflection(bNewValue: Boolean)
    open fun SetAffectGlobalIllumination(bNewValue: Boolean)
    open fun GetLightColor(): LinearColor

    companion object {
        fun Load(ResourceName: String): LightComponentBase
        fun Find(Outer: UObject, ResourceName: String): LightComponentBase
        fun GetDefaultObject(): LightComponentBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LightComponentBase
        fun C(Other: UObject): LightComponentBase
        fun C(Other: Any): LightComponentBase
    }
}

external object ESkyLightSourceType {
    var SLS_CapturedScene: String /* "SLS_CapturedScene" */
    var SLS_SpecifiedCubemap: String /* "SLS_SpecifiedCubemap" */
    var SLS_MAX: String /* "SLS_MAX" */
}

external object EOcclusionCombineMode {
    var OCM_Minimum: String /* "OCM_Minimum" */
    var OCM_Multiply: String /* "OCM_Multiply" */
    var OCM_MAX: String /* "OCM_MAX" */
}

external open class SkyLightComponent : LightComponentBase {
    constructor()
    constructor(Outer: UObject)
    open var bRealTimeCapture: Boolean
    open var SourceType: String /* "SLS_CapturedScene" | "SLS_SpecifiedCubemap" | "SLS_MAX" */
    open var Cubemap: TextureCube
    open var SourceCubemapAngle: Number
    open var CubemapResolution: Number
    open var SkyDistanceThreshold: Number
    open var bCaptureEmissiveOnly: Boolean
    open var bLowerHemisphereIsBlack: Boolean
    open var LowerHemisphereColor: LinearColor
    open var OcclusionMaxDistance: Number
    open var Contrast: Number
    open var OcclusionExponent: Number
    open var MinOcclusion: Number
    open var OcclusionTint: Color
    open var bCloudAmbientOcclusion: Boolean
    open var CloudAmbientOcclusionStrength: Number
    open var CloudAmbientOcclusionExtent: Number
    open var CloudAmbientOcclusionMapResolutionScale: Number
    open var CloudAmbientOcclusionApertureScale: Number
    open var OcclusionCombineMode: String /* "OCM_Minimum" | "OCM_Multiply" | "OCM_MAX" */
    open var BlendDestinationCubemap: TextureCube
    open fun SetVolumetricScatteringIntensity(NewIntensity: Number)
    open fun SetOcclusionTint(InTint: Color)
    open fun SetOcclusionExponent(InOcclusionExponent: Number)
    open fun SetOcclusionContrast(InOcclusionContrast: Number)
    open fun SetMinOcclusion(InMinOcclusion: Number)
    open fun SetLowerHemisphereColor(InLowerHemisphereColor: LinearColor)
    open fun SetLightColor(NewLightColor: LinearColor)
    open fun SetIntensity(NewIntensity: Number)
    open fun SetIndirectLightingIntensity(NewIntensity: Number)
    open fun SetCubemapBlend(SourceCubemap: TextureCube, DestinationCubemap: TextureCube, InBlendFraction: Number)
    open fun SetCubemap(NewCubemap: TextureCube)
    open fun RecaptureSky()

    companion object {
        fun Load(ResourceName: String): SkyLightComponent
        fun Find(Outer: UObject, ResourceName: String): SkyLightComponent
        fun GetDefaultObject(): SkyLightComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SkyLightComponent
        fun C(Other: UObject): SkyLightComponent
        fun C(Other: Any): SkyLightComponent
    }
}

external open class SkyLight(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Info {
    open var LightComponent: SkyLightComponent
    open var bEnabled: Boolean
    open fun OnRep_bEnabled()

    companion object {
        fun GetDefaultObject(): SkyLight
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SkyLight
        fun C(Other: UObject): SkyLight
        fun C(Other: Any): SkyLight
    }
}

external open class ARSkyLight(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : SkyLight {
    open var CaptureProbe: AREnvironmentCaptureProbe
    open fun SetEnvironmentCaptureProbe(InCaptureProbe: AREnvironmentCaptureProbe)

    companion object {
        fun GetDefaultObject(): ARSkyLight
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARSkyLight
        fun C(Other: UObject): ARSkyLight
        fun C(Other: Any): ARSkyLight
    }
}

external open class ARTraceResultDummy : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ARTraceResultDummy
        fun Find(Outer: UObject, ResourceName: String): ARTraceResultDummy
        fun GetDefaultObject(): ARTraceResultDummy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARTraceResultDummy
        fun C(Other: UObject): ARTraceResultDummy
        fun C(Other: Any): ARTraceResultDummy
    }
}

external open class ARTrackedQRCode : ARTrackedImage {
    constructor()
    constructor(Outer: UObject)
    open var QRCode: String
    open var Version: Number

    companion object {
        fun Load(ResourceName: String): ARTrackedQRCode
        fun Find(Outer: UObject, ResourceName: String): ARTrackedQRCode
        fun GetDefaultObject(): ARTrackedQRCode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARTrackedQRCode
        fun C(Other: UObject): ARTrackedQRCode
        fun C(Other: Any): ARTrackedQRCode
    }
}

external object EAREye {
    var LeftEye: String /* "LeftEye" */
    var RightEye: String /* "RightEye" */
    var EAREye_MAX: String /* "EAREye_MAX" */
}

external object EARFaceBlendShape {
    var EyeBlinkLeft: String /* "EyeBlinkLeft" */
    var EyeLookDownLeft: String /* "EyeLookDownLeft" */
    var EyeLookInLeft: String /* "EyeLookInLeft" */
    var EyeLookOutLeft: String /* "EyeLookOutLeft" */
    var EyeLookUpLeft: String /* "EyeLookUpLeft" */
    var EyeSquintLeft: String /* "EyeSquintLeft" */
    var EyeWideLeft: String /* "EyeWideLeft" */
    var EyeBlinkRight: String /* "EyeBlinkRight" */
    var EyeLookDownRight: String /* "EyeLookDownRight" */
    var EyeLookInRight: String /* "EyeLookInRight" */
    var EyeLookOutRight: String /* "EyeLookOutRight" */
    var EyeLookUpRight: String /* "EyeLookUpRight" */
    var EyeSquintRight: String /* "EyeSquintRight" */
    var EyeWideRight: String /* "EyeWideRight" */
    var JawForward: String /* "JawForward" */
    var JawLeft: String /* "JawLeft" */
    var JawRight: String /* "JawRight" */
    var JawOpen: String /* "JawOpen" */
    var MouthClose: String /* "MouthClose" */
    var MouthFunnel: String /* "MouthFunnel" */
    var MouthPucker: String /* "MouthPucker" */
    var MouthLeft: String /* "MouthLeft" */
    var MouthRight: String /* "MouthRight" */
    var MouthSmileLeft: String /* "MouthSmileLeft" */
    var MouthSmileRight: String /* "MouthSmileRight" */
    var MouthFrownLeft: String /* "MouthFrownLeft" */
    var MouthFrownRight: String /* "MouthFrownRight" */
    var MouthDimpleLeft: String /* "MouthDimpleLeft" */
    var MouthDimpleRight: String /* "MouthDimpleRight" */
    var MouthStretchLeft: String /* "MouthStretchLeft" */
    var MouthStretchRight: String /* "MouthStretchRight" */
    var MouthRollLower: String /* "MouthRollLower" */
    var MouthRollUpper: String /* "MouthRollUpper" */
    var MouthShrugLower: String /* "MouthShrugLower" */
    var MouthShrugUpper: String /* "MouthShrugUpper" */
    var MouthPressLeft: String /* "MouthPressLeft" */
    var MouthPressRight: String /* "MouthPressRight" */
    var MouthLowerDownLeft: String /* "MouthLowerDownLeft" */
    var MouthLowerDownRight: String /* "MouthLowerDownRight" */
    var MouthUpperUpLeft: String /* "MouthUpperUpLeft" */
    var MouthUpperUpRight: String /* "MouthUpperUpRight" */
    var BrowDownLeft: String /* "BrowDownLeft" */
    var BrowDownRight: String /* "BrowDownRight" */
    var BrowInnerUp: String /* "BrowInnerUp" */
    var BrowOuterUpLeft: String /* "BrowOuterUpLeft" */
    var BrowOuterUpRight: String /* "BrowOuterUpRight" */
    var CheekPuff: String /* "CheekPuff" */
    var CheekSquintLeft: String /* "CheekSquintLeft" */
    var CheekSquintRight: String /* "CheekSquintRight" */
    var NoseSneerLeft: String /* "NoseSneerLeft" */
    var NoseSneerRight: String /* "NoseSneerRight" */
    var TongueOut: String /* "TongueOut" */
    var HeadYaw: String /* "HeadYaw" */
    var HeadPitch: String /* "HeadPitch" */
    var HeadRoll: String /* "HeadRoll" */
    var LeftEyeYaw: String /* "LeftEyeYaw" */
    var LeftEyePitch: String /* "LeftEyePitch" */
    var LeftEyeRoll: String /* "LeftEyeRoll" */
    var RightEyeYaw: String /* "RightEyeYaw" */
    var RightEyePitch: String /* "RightEyePitch" */
    var RightEyeRoll: String /* "RightEyeRoll" */
    var MAX: String /* "MAX" */
}

external open class ARFaceGeometry : ARTrackedGeometry {
    constructor()
    constructor(Outer: UObject)
    open var LookAtTarget: Vector
    open var bIsTracked: Boolean
    open var BlendShapes: Any
    open var LeftEyeTransform: Transform
    open var RightEyeTransform: Transform
    open fun GetWorldSpaceEyeTransform(Eye: String /* "LeftEye" | "RightEye" | "EAREye_MAX" */): Transform
    open fun GetLocalSpaceEyeTransform(Eye: String /* "LeftEye" | "RightEye" | "EAREye_MAX" */): Transform
    open fun GetBlendShapeValue(BlendShape: String /* "EyeBlinkLeft" | "EyeLookDownLeft" | "EyeLookInLeft" | "EyeLookOutLeft" | "EyeLookUpLeft" | "EyeSquintLeft" | "EyeWideLeft" | "EyeBlinkRight" | "EyeLookDownRight" | "EyeLookInRight" | "EyeLookOutRight" | "EyeLookUpRight" | "EyeSquintRight" | "EyeWideRight" | "JawForward" | "JawLeft" | "JawRight" | "JawOpen" | "MouthClose" | "MouthFunnel" | "MouthPucker" | "MouthLeft" | "MouthRight" | "MouthSmileLeft" | "MouthSmileRight" | "MouthFrownLeft" | "MouthFrownRight" | "MouthDimpleLeft" | "MouthDimpleRight" | "MouthStretchLeft" | "MouthStretchRight" | "MouthRollLower" | "MouthRollUpper" | "MouthShrugLower" | "MouthShrugUpper" | "MouthPressLeft" | "MouthPressRight" | "MouthLowerDownLeft" | "MouthLowerDownRight" | "MouthUpperUpLeft" | "MouthUpperUpRight" | "BrowDownLeft" | "BrowDownRight" | "BrowInnerUp" | "BrowOuterUpLeft" | "BrowOuterUpRight" | "CheekPuff" | "CheekSquintLeft" | "CheekSquintRight" | "NoseSneerLeft" | "NoseSneerRight" | "TongueOut" | "HeadYaw" | "HeadPitch" | "HeadRoll" | "LeftEyeYaw" | "LeftEyePitch" | "LeftEyeRoll" | "RightEyeYaw" | "RightEyePitch" | "RightEyeRoll" | "MAX" */): Number
    open fun GetBlendShapes(): Any

    companion object {
        fun Load(ResourceName: String): ARFaceGeometry
        fun Find(Outer: UObject, ResourceName: String): ARFaceGeometry
        fun GetDefaultObject(): ARFaceGeometry
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARFaceGeometry
        fun C(Other: UObject): ARFaceGeometry
        fun C(Other: Any): ARFaceGeometry
    }
}

external open class ARTrackedObject : ARTrackedGeometry {
    constructor()
    constructor(Outer: UObject)
    open var DetectedObject: ARCandidateObject
    open fun GetDetectedObject(): ARCandidateObject

    companion object {
        fun Load(ResourceName: String): ARTrackedObject
        fun Find(Outer: UObject, ResourceName: String): ARTrackedObject
        fun GetDefaultObject(): ARTrackedObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARTrackedObject
        fun C(Other: UObject): ARTrackedObject
        fun C(Other: Any): ARTrackedObject
    }
}

external open class ARMeshGeometry : ARTrackedGeometry {
    constructor()
    constructor(Outer: UObject)
    open fun GetObjectClassificationAtLocation(InWorldLocation: Vector, OutClassification: String /* "NotApplicable" | "Unknown" | "Wall" | "Ceiling" | "Floor" | "Table" | "Seat" | "Face" | "Image" | "World" | "SceneObject" | "HandMesh" | "Door" | "Window" | "EARObjectClassification_MAX" */ = definedExternally, OutClassificationLocation: Vector = definedExternally, MaxLocationDiff: Number = definedExternally): `T$250`

    companion object {
        fun Load(ResourceName: String): ARMeshGeometry
        fun Find(Outer: UObject, ResourceName: String): ARMeshGeometry
        fun GetDefaultObject(): ARMeshGeometry
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARMeshGeometry
        fun C(Other: UObject): ARMeshGeometry
        fun C(Other: Any): ARMeshGeometry
    }
}

external open class ARGeoAnchor : ARTrackedGeometry {
    constructor()
    constructor(Outer: UObject)
    open fun GetLongitude(): Number
    open fun GetLatitude(): Number
    open fun GetAltitudeSource(): String /* "Precise" | "Coarse" | "UserDefined" | "Unknown" | "EARAltitudeSource_MAX" */
    open fun GetAltitudeMeters(): Number

    companion object {
        fun Load(ResourceName: String): ARGeoAnchor
        fun Find(Outer: UObject, ResourceName: String): ARGeoAnchor
        fun GetDefaultObject(): ARGeoAnchor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARGeoAnchor
        fun C(Other: UObject): ARGeoAnchor
        fun C(Other: Any): ARGeoAnchor
    }
}

external open class ARTrackableNotifyComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var OnAddTrackedGeometry: UnrealEngineMulticastDelegate<(TrackedGeometry: ARTrackedGeometry) -> Unit>
    open var OnUpdateTrackedGeometry: UnrealEngineMulticastDelegate<(TrackedGeometry: ARTrackedGeometry) -> Unit>
    open var OnRemoveTrackedGeometry: UnrealEngineMulticastDelegate<(TrackedGeometry: ARTrackedGeometry) -> Unit>
    open var OnAddTrackedPlane: UnrealEngineMulticastDelegate<(TrackedPlane: ARPlaneGeometry) -> Unit>
    open var OnUpdateTrackedPlane: UnrealEngineMulticastDelegate<(TrackedPlane: ARPlaneGeometry) -> Unit>
    open var OnRemoveTrackedPlane: UnrealEngineMulticastDelegate<(TrackedPlane: ARPlaneGeometry) -> Unit>
    open var OnAddTrackedPoint: UnrealEngineMulticastDelegate<(TrackedPoint: ARTrackedPoint) -> Unit>
    open var OnUpdateTrackedPoint: UnrealEngineMulticastDelegate<(TrackedPoint: ARTrackedPoint) -> Unit>
    open var OnRemoveTrackedPoint: UnrealEngineMulticastDelegate<(TrackedPoint: ARTrackedPoint) -> Unit>
    open var OnAddTrackedImage: UnrealEngineMulticastDelegate<(TrackedImage: ARTrackedImage) -> Unit>
    open var OnUpdateTrackedImage: UnrealEngineMulticastDelegate<(TrackedImage: ARTrackedImage) -> Unit>
    open var OnRemoveTrackedImage: UnrealEngineMulticastDelegate<(TrackedImage: ARTrackedImage) -> Unit>
    open var OnAddTrackedFace: UnrealEngineMulticastDelegate<(TrackedFace: ARFaceGeometry) -> Unit>
    open var OnUpdateTrackedFace: UnrealEngineMulticastDelegate<(TrackedFace: ARFaceGeometry) -> Unit>
    open var OnRemoveTrackedFace: UnrealEngineMulticastDelegate<(TrackedFace: ARFaceGeometry) -> Unit>
    open var OnAddTrackedEnvProbe: UnrealEngineMulticastDelegate<(TrackedEnvProbe: AREnvironmentCaptureProbe) -> Unit>
    open var OnUpdateTrackedEnvProbe: UnrealEngineMulticastDelegate<(TrackedEnvProbe: AREnvironmentCaptureProbe) -> Unit>
    open var OnRemoveTrackedEnvProbe: UnrealEngineMulticastDelegate<(TrackedEnvProbe: AREnvironmentCaptureProbe) -> Unit>
    open var OnAddTrackedObject: UnrealEngineMulticastDelegate<(TrackedObject: ARTrackedObject) -> Unit>
    open var OnUpdateTrackedObject: UnrealEngineMulticastDelegate<(TrackedObject: ARTrackedObject) -> Unit>
    open var OnRemoveTrackedObject: UnrealEngineMulticastDelegate<(TrackedObject: ARTrackedObject) -> Unit>

    companion object {
        fun Load(ResourceName: String): ARTrackableNotifyComponent
        fun Find(Outer: UObject, ResourceName: String): ARTrackableNotifyComponent
        fun GetDefaultObject(): ARTrackableNotifyComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARTrackableNotifyComponent
        fun C(Other: UObject): ARTrackableNotifyComponent
        fun C(Other: Any): ARTrackableNotifyComponent
    }
}

external open class ARTypesDummyClass : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ARTypesDummyClass
        fun Find(Outer: UObject, ResourceName: String): ARTypesDummyClass
        fun GetDefaultObject(): ARTypesDummyClass
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ARTypesDummyClass
        fun C(Other: UObject): ARTypesDummyClass
        fun C(Other: Any): ARTypesDummyClass
    }
}

external object ESpectatorScreenMode {
    var Disabled: String /* "Disabled" */
    var SingleEyeLetterboxed: String /* "SingleEyeLetterboxed" */
    var Undistorted: String /* "Undistorted" */
    var Distorted: String /* "Distorted" */
    var SingleEye: String /* "SingleEye" */
    var SingleEyeCroppedToFill: String /* "SingleEyeCroppedToFill" */
    var Texture: String /* "Texture" */
    var TexturePlusEye: String /* "TexturePlusEye" */
    var ESpectatorScreenMode_MAX: String /* "ESpectatorScreenMode_MAX" */
}

external object EHMDWornState {
    var Unknown: String /* "Unknown" */
    var Worn: String /* "Worn" */
    var NotWorn: String /* "NotWorn" */
    var EHMDWornState_MAX: String /* "EHMDWornState_MAX" */
}

external object EXRTrackedDeviceType {
    var HeadMountedDisplay: String /* "HeadMountedDisplay" */
    var Controller: String /* "Controller" */
    var TrackingReference: String /* "TrackingReference" */
    var Other: String /* "Other" */
    var Invalid: String /* "Invalid" */
    var Any: String /* "Any" */
    var EXRTrackedDeviceType_MAX: String /* "EXRTrackedDeviceType_MAX" */
}

external object EXRDeviceConnectionResult {
    var NoTrackingSystem: String /* "NoTrackingSystem" */
    var FeatureNotSupported: String /* "FeatureNotSupported" */
    var NoValidViewport: String /* "NoValidViewport" */
    var MiscFailure: String /* "MiscFailure" */
    var Success: String /* "Success" */
    var EXRDeviceConnectionResult_MAX: String /* "EXRDeviceConnectionResult_MAX" */
}

external object ESpatialInputGestureAxis {
    var None: String /* "None" */
    var Manipulation: String /* "Manipulation" */
    var Navigation: String /* "Navigation" */
    var NavigationRails: String /* "NavigationRails" */
    var ESpatialInputGestureAxis_MAX: String /* "ESpatialInputGestureAxis_MAX" */
}

external open class XRGestureConfig {
    open var bTap: Boolean
    open var bHold: Boolean
    open var AxisGesture: String /* "None" | "Manipulation" | "Navigation" | "NavigationRails" | "ESpatialInputGestureAxis_MAX" */
    open var bNavigationAxisX: Boolean
    open var bNavigationAxisY: Boolean
    open var bNavigationAxisZ: Boolean
    open fun clone(): XRGestureConfig
    open fun ConfigureGestures(): Boolean

    companion object {
        fun C(Other: UObject): XRGestureConfig
        fun C(Other: Any): XRGestureConfig
        fun ConfigureGestures(GestureConfig: XRGestureConfig): Boolean
    }
}

external interface `T$593` {
    var bUseFocus: Boolean
    var bHasFocus: Boolean
}

external open class HeadMountedDisplayFunctionLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): HeadMountedDisplayFunctionLibrary
        fun Find(Outer: UObject, ResourceName: String): HeadMountedDisplayFunctionLibrary
        fun GetDefaultObject(): HeadMountedDisplayFunctionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): HeadMountedDisplayFunctionLibrary
        fun UpdateExternalTrackingHMDPosition(ExternalTrackingTransform: Transform)
        fun SetWorldToMetersScale(WorldContext: UObject, NewScale: Number)
        fun SetTrackingOrigin(Origin: String /* "Floor" | "Eye" | "Stage" | "EHMDTrackingOrigin_MAX" */)
        fun SetSpectatorScreenTexture(InTexture: Texture)
        fun SetSpectatorScreenModeTexturePlusEyeLayout(EyeRectMin: Vector2D, EyeRectMax: Vector2D, TextureRectMin: Vector2D, TextureRectMax: Vector2D, bDrawEyeFirst: Boolean, bClearBlack: Boolean, bUseAlpha: Boolean)
        fun SetSpectatorScreenMode(Mode: String /* "Disabled" | "SingleEyeLetterboxed" | "Undistorted" | "Distorted" | "SingleEye" | "SingleEyeCroppedToFill" | "Texture" | "TexturePlusEye" | "ESpectatorScreenMode_MAX" */)
        fun SetClippingPlanes(Near: Number, Far: Number)
        fun ResetOrientationAndPosition(Yaw: Number, Options: String /* "Orientation" | "Position" | "OrientationAndPosition" | "EOrientPositionSelector_MAX" */)
        fun IsSpectatorScreenModeControllable(): Boolean
        fun IsInLowPersistenceMode(): Boolean
        fun IsHeadMountedDisplayEnabled(): Boolean
        fun IsHeadMountedDisplayConnected(): Boolean
        fun IsDeviceTracking(XRDeviceId: XRDeviceId): Boolean
        fun HasValidTrackingPosition(): Boolean
        fun GetXRSystemFlags(): Number
        fun GetWorldToMetersScale(WorldContext: UObject): Number
        fun GetVRFocusState(bUseFocus: Boolean = definedExternally, bHasFocus: Boolean = definedExternally): `T$593`
        fun GetVersionString(): String
        fun GetTrackingToWorldTransform(WorldContext: UObject): Transform
        fun GetTrackingSensorParameters(Origin: Vector = definedExternally, Rotation: Rotator = definedExternally, LeftFOV: Number = definedExternally, RightFOV: Number = definedExternally, TopFOV: Number = definedExternally, BottomFOV: Number = definedExternally, Distance: Number = definedExternally, NearPlane: Number = definedExternally, FarPlane: Number = definedExternally, IsActive: Boolean = definedExternally, index: Number = definedExternally): `T$249`
        fun GetTrackingOrigin(): String /* "Floor" | "Eye" | "Stage" | "EHMDTrackingOrigin_MAX" */
        fun GetScreenPercentage(): Number
        fun GetPositionalTrackingCameraParameters(CameraOrigin: Vector = definedExternally, CameraRotation: Rotator = definedExternally, HFOV: Number = definedExternally, VFOV: Number = definedExternally, CameraDistance: Number = definedExternally, NearPlane: Number = definedExternally, FarPlane: Number = definedExternally): `T$248`
        fun GetPlayAreaBounds(Origin: String /* "Floor" | "Eye" | "Stage" | "EHMDTrackingOrigin_MAX" */): Vector2D
        fun GetPixelDensity(): Number
        fun GetOrientationAndPosition(DeviceRotation: Rotator = definedExternally, DevicePosition: Vector = definedExternally): `T$16`
        fun GetNumOfTrackingSensors(): Number
        fun GetMotionControllerData(WorldContext: UObject, hand: String /* "Left" | "Right" | "AnyHand" | "Pad" | "ExternalCamera" | "Gun" | "Special_1" | "Special_2" | "Special_3" | "Special_4" | "Special_5" | "Special_6" | "Special_7" | "Special_8" | "Special_9" | "Special_10" | "Special_11" | "ControllerHand_Count" | "EControllerHand_MAX" */, MotionControllerData: XRMotionControllerData = definedExternally): `T$332`
        fun GetHMDWornState(): String /* "Unknown" | "Worn" | "NotWorn" | "EHMDWornState_MAX" */
        fun GetHMDDeviceName(): String
        fun GetHMDData(WorldContext: UObject, HMDData: XRHMDData = definedExternally): `T$331`
        fun GetDeviceWorldPose(WorldContext: UObject, XRDeviceId: XRDeviceId, bIsTracked: Boolean = definedExternally, Orientation: Rotator = definedExternally, bHasPositionalTracking: Boolean = definedExternally, Position: Vector = definedExternally): `T$270`
        fun GetDevicePose(XRDeviceId: XRDeviceId, bIsTracked: Boolean = definedExternally, Orientation: Rotator = definedExternally, bHasPositionalTracking: Boolean = definedExternally, Position: Vector = definedExternally): `T$270`
        fun GetControllerTransformForTime(WorldContext: UObject, ControllerIndex: Number, MotionSource: String, Time: Timespan, bTimeWasUsed: Boolean = definedExternally, Orientation: Rotator = definedExternally, Position: Vector = definedExternally, bProvidedLinearVelocity: Boolean = definedExternally, LinearVelocity: Vector = definedExternally, bProvidedAngularVelocity: Boolean = definedExternally, AngularVelocityRadPerSec: Vector = definedExternally): `T$330`
        fun EnumerateTrackedDevices(SystemId: String, DeviceType: String /* "HeadMountedDisplay" | "Controller" | "TrackingReference" | "Other" | "Invalid" | "Any" | "EXRTrackedDeviceType_MAX" */): Array<XRDeviceId>
        fun EnableLowPersistenceMode(bEnable: Boolean)
        fun EnableHMD(bEnable: Boolean): Boolean
        fun DisconnectRemoteXRDevice()
        fun ConnectRemoteXRDevice(IpAddress: String, BitRate: Number): String /* "NoTrackingSystem" | "FeatureNotSupported" | "NoValidViewport" | "MiscFailure" | "Success" | "EXRDeviceConnectionResult_MAX" */
        fun ConfigureGestures(GestureConfig: XRGestureConfig): Boolean
        fun ClearXRTimedInputActionDelegate(ActionPath: String)
        fun CalibrateExternalTrackingToHMD(ExternalTrackingTransform: Transform)
        fun BreakKey(InKey: Key, InteractionProfile: String = definedExternally, hand: String /* "Left" | "Right" | "AnyHand" | "Pad" | "ExternalCamera" | "Gun" | "Special_1" | "Special_2" | "Special_3" | "Special_4" | "Special_5" | "Special_6" | "Special_7" | "Special_8" | "Special_9" | "Special_10" | "Special_11" | "ControllerHand_Count" | "EControllerHand_MAX" */ = definedExternally, MotionSource: String = definedExternally, Indentifier: String = definedExternally, Component: String = definedExternally): `T$89`
        fun C(Other: UObject): HeadMountedDisplayFunctionLibrary
        fun C(Other: Any): HeadMountedDisplayFunctionLibrary
    }
}

external object EHandKeypoint {
    var Palm: String /* "Palm" */
    var Wrist: String /* "Wrist" */
    var ThumbMetacarpal: String /* "ThumbMetacarpal" */
    var ThumbProximal: String /* "ThumbProximal" */
    var ThumbDistal: String /* "ThumbDistal" */
    var ThumbTip: String /* "ThumbTip" */
    var IndexMetacarpal: String /* "IndexMetacarpal" */
    var IndexProximal: String /* "IndexProximal" */
    var IndexIntermediate: String /* "IndexIntermediate" */
    var IndexDistal: String /* "IndexDistal" */
    var IndexTip: String /* "IndexTip" */
    var MiddleMetacarpal: String /* "MiddleMetacarpal" */
    var MiddleProximal: String /* "MiddleProximal" */
    var MiddleIntermediate: String /* "MiddleIntermediate" */
    var MiddleDistal: String /* "MiddleDistal" */
    var MiddleTip: String /* "MiddleTip" */
    var RingMetacarpal: String /* "RingMetacarpal" */
    var RingProximal: String /* "RingProximal" */
    var RingIntermediate: String /* "RingIntermediate" */
    var RingDistal: String /* "RingDistal" */
    var RingTip: String /* "RingTip" */
    var LittleMetacarpal: String /* "LittleMetacarpal" */
    var LittleProximal: String /* "LittleProximal" */
    var LittleIntermediate: String /* "LittleIntermediate" */
    var LittleDistal: String /* "LittleDistal" */
    var LittleTip: String /* "LittleTip" */
    var EHandKeypoint_MAX: String /* "EHandKeypoint_MAX" */
}

external open class HandKeypointConversion : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): HandKeypointConversion
        fun Find(Outer: UObject, ResourceName: String): HandKeypointConversion
        fun GetDefaultObject(): HandKeypointConversion
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): HandKeypointConversion
        fun Conv_HandKeypointToInt32(Input: String /* "Palm" | "Wrist" | "ThumbMetacarpal" | "ThumbProximal" | "ThumbDistal" | "ThumbTip" | "IndexMetacarpal" | "IndexProximal" | "IndexIntermediate" | "IndexDistal" | "IndexTip" | "MiddleMetacarpal" | "MiddleProximal" | "MiddleIntermediate" | "MiddleDistal" | "MiddleTip" | "RingMetacarpal" | "RingProximal" | "RingIntermediate" | "RingDistal" | "RingTip" | "LittleMetacarpal" | "LittleProximal" | "LittleIntermediate" | "LittleDistal" | "LittleTip" | "EHandKeypoint_MAX" */): Number
        fun C(Other: UObject): HandKeypointConversion
        fun C(Other: Any): HandKeypointConversion
    }
}

external interface `T$594` {
    var bValueFound: Boolean
    var `$`: Number
}

external interface `T$595` {
    var bValueFound: Boolean
    var `$`: Vector
}

external open class MotionControllerComponent : PrimitiveComponent {
    constructor()
    constructor(Outer: UObject)
    open var PlayerIndex: Number
    open var hand: String /* "Left" | "Right" | "AnyHand" | "Pad" | "ExternalCamera" | "Gun" | "Special_1" | "Special_2" | "Special_3" | "Special_4" | "Special_5" | "Special_6" | "Special_7" | "Special_8" | "Special_9" | "Special_10" | "Special_11" | "ControllerHand_Count" | "EControllerHand_MAX" */
    open var MotionSource: String
    open var bDisableLowLatencyUpdate: Boolean
    open var CurrentTrackingStatus: String /* "NotTracked" | "InertialOnly" | "Tracked" | "ETrackingStatus_MAX" */
    open var bDisplayDeviceModel: Boolean
    open var DisplayModelSource: String
    open var CustomDisplayMesh: StaticMesh
    open var DisplayMeshMaterialOverrides: Array<MaterialInterface>
    open var DisplayComponent: PrimitiveComponent
    open fun SetTrackingSource(NewSource: String /* "Left" | "Right" | "AnyHand" | "Pad" | "ExternalCamera" | "Gun" | "Special_1" | "Special_2" | "Special_3" | "Special_4" | "Special_5" | "Special_6" | "Special_7" | "Special_8" | "Special_9" | "Special_10" | "Special_11" | "ControllerHand_Count" | "EControllerHand_MAX" */)
    open fun SetTrackingMotionSource(NewSource: String)
    open fun SetShowDeviceModel(bShowControllerModel: Boolean)
    open fun SetDisplayModelSource(NewDisplayModelSource: String)
    open fun SetCustomDisplayMesh(NewDisplayMesh: StaticMesh)
    open fun SetAssociatedPlayerIndex(NewPlayer: Number)
    open fun OnMotionControllerUpdated()
    open fun IsTracked(): Boolean
    open fun GetTrackingSource(): String /* "Left" | "Right" | "AnyHand" | "Pad" | "ExternalCamera" | "Gun" | "Special_1" | "Special_2" | "Special_3" | "Special_4" | "Special_5" | "Special_6" | "Special_7" | "Special_8" | "Special_9" | "Special_10" | "Special_11" | "ControllerHand_Count" | "EControllerHand_MAX" */
    open fun GetParameterValue(InName: String, bValueFound: Boolean = definedExternally): `T$594`
    open fun GetHandJointPosition(jointIndex: Number, bValueFound: Boolean = definedExternally): `T$595`
    open fun DisableMotionTrackingForComponent()
    open fun EnableMotionTrackingForComponent(): Boolean
    open fun IsMotionTrackingEnabledForComponent(): Boolean

    companion object {
        fun Load(ResourceName: String): MotionControllerComponent
        fun Find(Outer: UObject, ResourceName: String): MotionControllerComponent
        fun GetDefaultObject(): MotionControllerComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MotionControllerComponent
        fun C(Other: UObject): MotionControllerComponent
        fun C(Other: Any): MotionControllerComponent
        fun DisableMotionTrackingForComponent(MotionControllerComponent: MotionControllerComponent)
        fun EnableMotionTrackingForComponent(MotionControllerComponent: MotionControllerComponent): Boolean
        fun IsMotionTrackingEnabledForComponent(MotionControllerComponent: MotionControllerComponent): Boolean
    }
}

external open class MotionTrackedDeviceFunctionLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MotionTrackedDeviceFunctionLibrary
        fun Find(Outer: UObject, ResourceName: String): MotionTrackedDeviceFunctionLibrary
        fun GetDefaultObject(): MotionTrackedDeviceFunctionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MotionTrackedDeviceFunctionLibrary
        fun SetIsControllerMotionTrackingEnabledByDefault(Enable: Boolean)
        fun IsMotionTrackingEnabledForSource(PlayerIndex: Number, SourceName: String): Boolean
        fun IsMotionTrackingEnabledForDevice(PlayerIndex: Number, hand: String /* "Left" | "Right" | "AnyHand" | "Pad" | "ExternalCamera" | "Gun" | "Special_1" | "Special_2" | "Special_3" | "Special_4" | "Special_5" | "Special_6" | "Special_7" | "Special_8" | "Special_9" | "Special_10" | "Special_11" | "ControllerHand_Count" | "EControllerHand_MAX" */): Boolean
        fun IsMotionTrackingEnabledForComponent(MotionControllerComponent: MotionControllerComponent): Boolean
        fun IsMotionTrackedDeviceCountManagementNecessary(): Boolean
        fun IsMotionSourceTracking(PlayerIndex: Number, SourceName: String): Boolean
        fun GetMotionTrackingEnabledControllerCount(): Number
        fun GetMaximumMotionTrackedControllerCount(): Number
        fun GetActiveTrackingSystemName(): String
        fun EnumerateMotionSources(): Array<String>
        fun EnableMotionTrackingOfSource(PlayerIndex: Number, SourceName: String): Boolean
        fun EnableMotionTrackingOfDevice(PlayerIndex: Number, hand: String /* "Left" | "Right" | "AnyHand" | "Pad" | "ExternalCamera" | "Gun" | "Special_1" | "Special_2" | "Special_3" | "Special_4" | "Special_5" | "Special_6" | "Special_7" | "Special_8" | "Special_9" | "Special_10" | "Special_11" | "ControllerHand_Count" | "EControllerHand_MAX" */): Boolean
        fun EnableMotionTrackingForComponent(MotionControllerComponent: MotionControllerComponent): Boolean
        fun DisableMotionTrackingOfSource(PlayerIndex: Number, SourceName: String)
        fun DisableMotionTrackingOfDevice(PlayerIndex: Number, hand: String /* "Left" | "Right" | "AnyHand" | "Pad" | "ExternalCamera" | "Gun" | "Special_1" | "Special_2" | "Special_3" | "Special_4" | "Special_5" | "Special_6" | "Special_7" | "Special_8" | "Special_9" | "Special_10" | "Special_11" | "ControllerHand_Count" | "EControllerHand_MAX" */)
        fun DisableMotionTrackingOfControllersForPlayer(PlayerIndex: Number)
        fun DisableMotionTrackingOfAllControllers()
        fun DisableMotionTrackingForComponent(MotionControllerComponent: MotionControllerComponent)
        fun C(Other: UObject): MotionTrackedDeviceFunctionLibrary
        fun C(Other: Any): MotionTrackedDeviceFunctionLibrary
    }
}

external open class VRNotificationsComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var HMDTrackingInitializingAndNeedsHMDToBeTrackedDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var HMDTrackingInitializedDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var HMDRecenteredDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var HMDLostDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var HMDReconnectedDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var HMDConnectCanceledDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var HMDPutOnHeadDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var HMDRemovedFromHeadDelegate: UnrealEngineMulticastDelegate<() -> Unit>
    open var VRControllerRecenteredDelegate: UnrealEngineMulticastDelegate<() -> Unit>

    companion object {
        fun Load(ResourceName: String): VRNotificationsComponent
        fun Find(Outer: UObject, ResourceName: String): VRNotificationsComponent
        fun GetDefaultObject(): VRNotificationsComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VRNotificationsComponent
        fun C(Other: UObject): VRNotificationsComponent
        fun C(Other: Any): VRNotificationsComponent
    }
}

external open class XRAssetFunctionLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): XRAssetFunctionLibrary
        fun Find(Outer: UObject, ResourceName: String): XRAssetFunctionLibrary
        fun GetDefaultObject(): XRAssetFunctionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): XRAssetFunctionLibrary
        fun AddNamedDeviceVisualizationComponentBlocking(Target: Actor, SystemName: String, DeviceName: String, bManualAttachment: Boolean, RelativeTransform: Transform, XRDeviceId: XRDeviceId = definedExternally): `T$278`
        fun AddDeviceVisualizationComponentBlocking(Target: Actor, XRDeviceId: XRDeviceId, bManualAttachment: Boolean, RelativeTransform: Transform): PrimitiveComponent
        fun C(Other: UObject): XRAssetFunctionLibrary
        fun C(Other: Any): XRAssetFunctionLibrary
    }
}

external interface `T$596` {
    var XRDeviceId: XRDeviceId
    var NewComponent: PrimitiveComponent
    var `$`: AsyncTask_LoadXRDeviceVisComponent
}

external interface `T$597` {
    var NewComponent: PrimitiveComponent
    var `$`: AsyncTask_LoadXRDeviceVisComponent
}

external open class AsyncTask_LoadXRDeviceVisComponent : BlueprintAsyncActionBase {
    constructor()
    constructor(Outer: UObject)
    open var OnModelLoaded: UnrealEngineMulticastDelegate<(LoadedComponent: PrimitiveComponent) -> Unit>
    open var OnLoadFailure: UnrealEngineMulticastDelegate<(LoadedComponent: PrimitiveComponent) -> Unit>
    open var SpawnedComponent: PrimitiveComponent

    companion object {
        fun Load(ResourceName: String): AsyncTask_LoadXRDeviceVisComponent
        fun Find(Outer: UObject, ResourceName: String): AsyncTask_LoadXRDeviceVisComponent
        fun GetDefaultObject(): AsyncTask_LoadXRDeviceVisComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AsyncTask_LoadXRDeviceVisComponent
        fun AddNamedDeviceVisualizationComponentAsync(Target: Actor, SystemName: String, DeviceName: String, bManualAttachment: Boolean, RelativeTransform: Transform, XRDeviceId: XRDeviceId = definedExternally, NewComponent: PrimitiveComponent = definedExternally): `T$596`
        fun AddDeviceVisualizationComponentAsync(Target: Actor, XRDeviceId: XRDeviceId, bManualAttachment: Boolean, RelativeTransform: Transform, NewComponent: PrimitiveComponent = definedExternally): `T$597`
        fun C(Other: UObject): AsyncTask_LoadXRDeviceVisComponent
        fun C(Other: Any): AsyncTask_LoadXRDeviceVisComponent
    }
}

external open class XRLoadingScreenFunctionLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): XRLoadingScreenFunctionLibrary
        fun Find(Outer: UObject, ResourceName: String): XRLoadingScreenFunctionLibrary
        fun GetDefaultObject(): XRLoadingScreenFunctionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): XRLoadingScreenFunctionLibrary
        fun ShowLoadingScreen()
        fun SetLoadingScreen(Texture: Texture, Scale: Vector2D, Offset: Vector, bShowLoadingMovie: Boolean, bShowOnSet: Boolean)
        fun HideLoadingScreen()
        fun ClearLoadingScreenSplashes()
        fun AddLoadingScreenSplash(Texture: Texture, Translation: Vector, Rotation: Rotator, Size: Vector2D, DeltaRotation: Rotator, bClearBeforeAdd: Boolean)
        fun C(Other: UObject): XRLoadingScreenFunctionLibrary
        fun C(Other: Any): XRLoadingScreenFunctionLibrary
    }
}

external open class SoundNode : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ChildNodes: Array<SoundNode>
    open var GraphNode: EdGraphNode

    companion object {
        fun Load(ResourceName: String): SoundNode
        fun Find(Outer: UObject, ResourceName: String): SoundNode
        fun GetDefaultObject(): SoundNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundNode
        fun C(Other: UObject): SoundNode
        fun C(Other: Any): SoundNode
    }
}

external open class SoundCue : SoundBase {
    constructor()
    constructor(Outer: UObject)
    open var bPrimeOnLoad: Boolean
    open var FirstNode: SoundNode
    open var VolumeMultiplier: Number
    open var PitchMultiplier: Number
    open var AttenuationOverrides: SoundAttenuationSettings
    open var AllNodes: Array<SoundNode>
    open var SoundCueGraph: EdGraph
    open var SubtitlePriority: Number
    open var bOverrideAttenuation: Boolean
    open var bExcludeFromRandomNodeBranchCulling: Boolean
    open var CookedQualityIndex: Number
    open var bHasPlayWhenSilent: Boolean
    open fun PrimeSoundCueForPlayback()

    companion object {
        fun Load(ResourceName: String): SoundCue
        fun Find(Outer: UObject, ResourceName: String): SoundCue
        fun GetDefaultObject(): SoundCue
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundCue
        fun C(Other: UObject): SoundCue
        fun C(Other: Any): SoundCue
        fun PrimeSoundCueForPlayback(SoundCue: SoundCue)
    }
}

external open class VREditorAssetContainer : DataAsset {
    constructor()
    constructor(Outer: UObject)
    open var DockableWindowCloseSound: SoundBase
    open var DockableWindowOpenSound: SoundBase
    open var DockableWindowDropSound: SoundBase
    open var DockableWindowDragSound: SoundBase
    open var DropFromContentBrowserSound: SoundBase
    open var RadialMenuOpenSound: SoundBase
    open var RadialMenuCloseSound: SoundBase
    open var TeleportSound: SoundBase
    open var ButtonPressSound: SoundCue
    open var AutoScaleSound: SoundBase
    open var GenericHMDMesh: StaticMesh
    open var PlaneMesh: StaticMesh
    open var CylinderMesh: StaticMesh
    open var LaserPointerStartMesh: StaticMesh
    open var LaserPointerMesh: StaticMesh
    open var LaserPointerEndMesh: StaticMesh
    open var LaserPointerHoverMesh: StaticMesh
    open var VivePreControllerMesh: StaticMesh
    open var OculusControllerMesh: StaticMesh
    open var GenericControllerMesh: StaticMesh
    open var TeleportRootMesh: StaticMesh
    open var WindowMesh: StaticMesh
    open var WindowSelectionBarMesh: StaticMesh
    open var WindowCloseButtonMesh: StaticMesh
    open var RadialMenuMainMesh: StaticMesh
    open var RadialMenuPointerMesh: StaticMesh
    open var PointerCursorMesh: StaticMesh
    open var LineSegmentCylinderMesh: StaticMesh
    open var JointSphereMesh: StaticMesh
    open var DockingButtonMesh: StaticMesh
    open var GridMaterial: MaterialInterface
    open var LaserPointerMaterial: MaterialInterface
    open var LaserPointerTranslucentMaterial: MaterialInterface
    open var WorldMovementPostProcessMaterial: Material
    open var TextMaterial: MaterialInterface
    open var VivePreControllerMaterial: MaterialInterface
    open var OculusControllerMaterial: MaterialInterface
    open var TeleportMaterial: MaterialInterface
    open var WindowMaterial: MaterialInterface
    open var WindowTranslucentMaterial: MaterialInterface
    open var LineMaterial: Material
    open var TranslucentTextMaterial: MaterialInterface
    open var TextFont: Font

    companion object {
        fun Load(ResourceName: String): VREditorAssetContainer
        fun Find(Outer: UObject, ResourceName: String): VREditorAssetContainer
        fun GetDefaultObject(): VREditorAssetContainer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VREditorAssetContainer
        fun C(Other: UObject): VREditorAssetContainer
        fun C(Other: Any): VREditorAssetContainer
    }
}

external open class EditorWorldExtensionActorData {
    open var Actor: Actor
    open var bValidForPIE: Boolean
    open fun clone(): EditorWorldExtensionActorData

    companion object {
        fun C(Other: UObject): EditorWorldExtensionActorData
        fun C(Other: Any): EditorWorldExtensionActorData
    }
}

external open class EditorWorldExtension : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ExtensionActors: Array<EditorWorldExtensionActorData>

    companion object {
        fun Load(ResourceName: String): EditorWorldExtension
        fun Find(Outer: UObject, ResourceName: String): EditorWorldExtension
        fun GetDefaultObject(): EditorWorldExtension
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorWorldExtension
        fun C(Other: UObject): EditorWorldExtension
        fun C(Other: Any): EditorWorldExtension
    }
}

external open class PostProcessComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var Settings: PostProcessSettings
    open var Priority: Number
    open var BlendRadius: Number
    open var BlendWeight: Number
    open var bEnabled: Boolean
    open var bUnbound: Boolean

    companion object {
        fun Load(ResourceName: String): PostProcessComponent
        fun Find(Outer: UObject, ResourceName: String): PostProcessComponent
        fun GetDefaultObject(): PostProcessComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PostProcessComponent
        fun C(Other: UObject): PostProcessComponent
        fun C(Other: Any): PostProcessComponent
    }
}

external open class VREditorAvatarActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var HeadMeshComponent: StaticMeshComponent
    open var WorldMovementGridMeshComponent: StaticMeshComponent
    open var WorldMovementGridMID: MaterialInstanceDynamic
    open var WorldMovementGridOpacity: Number
    open var bIsDrawingWorldMovementPostProcess: Boolean
    open var WorldMovementPostProcessMaterial: MaterialInstanceDynamic
    open var ScaleProgressMeshComponent: StaticMeshComponent
    open var CurrentScaleProgressMeshComponent: StaticMeshComponent
    open var UserScaleIndicatorText: TextRenderComponent
    open var FixedUserScaleMID: MaterialInstanceDynamic
    open var TranslucentFixedUserScaleMID: MaterialInstanceDynamic
    open var CurrentUserScaleMID: MaterialInstanceDynamic
    open var TranslucentCurrentUserScaleMID: MaterialInstanceDynamic
    open var PostProcessComponent: PostProcessComponent
    open var VRMode: VREditorMode

    companion object {
        fun GetDefaultObject(): VREditorAvatarActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VREditorAvatarActor
        fun C(Other: UObject): VREditorAvatarActor
        fun C(Other: Any): VREditorAvatarActor
    }
}

external open class VREditorBaseActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var VRMode: VREditorMode

    companion object {
        fun GetDefaultObject(): VREditorBaseActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VREditorBaseActor
        fun C(Other: UObject): VREditorBaseActor
        fun C(Other: Any): VREditorBaseActor
    }
}

external open class VREditorFloatingUICreationContext {
    open var WidgetClass: UnrealEngineClass
    open var PanelID: String
    open var ParentActor: Actor
    open var PanelSpawnOffset: Transform
    open var PanelSize: Vector2D
    open var PanelMesh: StaticMesh
    open var EditorUISize: Number
    open var bHideWindowHandles: Boolean
    open var bMaskOutWidgetBackground: Boolean
    open var bNoCloseButton: Boolean
    open fun clone(): VREditorFloatingUICreationContext

    companion object {
        fun C(Other: UObject): VREditorFloatingUICreationContext
        fun C(Other: Any): VREditorFloatingUICreationContext
    }
}

external object EWidgetSpace {
    var World: String /* "World" */
    var Screen: String /* "Screen" */
    var EWidgetSpace_MAX: String /* "EWidgetSpace_MAX" */
}

external object EWidgetTimingPolicy {
    var RealTime: String /* "RealTime" */
    var GameTime: String /* "GameTime" */
    var EWidgetTimingPolicy_MAX: String /* "EWidgetTimingPolicy_MAX" */
}

external object EWindowVisibility {
    var Visible: String /* "Visible" */
    var SelfHitTestInvisible: String /* "SelfHitTestInvisible" */
    var EWindowVisibility_MAX: String /* "EWindowVisibility_MAX" */
}

external object EWidgetBlendMode {
    var Opaque: String /* "Opaque" */
    var Masked: String /* "Masked" */
    var Transparent: String /* "Transparent" */
    var EWidgetBlendMode_MAX: String /* "EWidgetBlendMode_MAX" */
}

external object EWidgetGeometryMode {
    var Plane: String /* "Plane" */
    var Cylinder: String /* "Cylinder" */
    var EWidgetGeometryMode_MAX: String /* "EWidgetGeometryMode_MAX" */
}

external object ETickMode {
    var Disabled: String /* "Disabled" */
    var Enabled: String /* "Enabled" */
    var Automatic: String /* "Automatic" */
    var ETickMode_MAX: String /* "ETickMode_MAX" */
}

external open class WidgetComponent : MeshComponent {
    constructor()
    constructor(Outer: UObject)
    open var Space: String /* "World" | "Screen" | "EWidgetSpace_MAX" */
    open var TimingPolicy: String /* "RealTime" | "GameTime" | "EWidgetTimingPolicy_MAX" */
    open var WidgetClass: UnrealEngineClass
    open var DrawSize: IntPoint
    open var bManuallyRedraw: Boolean
    open var bRedrawRequested: Boolean
    open var RedrawTime: Number
    open var CurrentDrawSize: IntPoint
    open var bDrawAtDesiredSize: Boolean
    open var Pivot: Vector2D
    open var bReceiveHardwareInput: Boolean
    open var bWindowFocusable: Boolean
    open var WindowVisibility: String /* "Visible" | "SelfHitTestInvisible" | "EWindowVisibility_MAX" */
    open var bApplyGammaCorrection: Boolean
    open var OwnerPlayer: LocalPlayer
    open var BackgroundColor: LinearColor
    open var TintColorAndOpacity: LinearColor
    open var OpacityFromTexture: Number
    open var BlendMode: String /* "Opaque" | "Masked" | "Transparent" | "EWidgetBlendMode_MAX" */
    open var bIsTwoSided: Boolean
    open var TickWhenOffscreen: Boolean
    open var BodySetup: BodySetup
    open var TranslucentMaterial: MaterialInterface
    open var TranslucentMaterial_OneSided: MaterialInterface
    open var OpaqueMaterial: MaterialInterface
    open var OpaqueMaterial_OneSided: MaterialInterface
    open var MaskedMaterial: MaterialInterface
    open var MaskedMaterial_OneSided: MaterialInterface
    open var RenderTarget: TextureRenderTarget2D
    open var MaterialInstance: MaterialInstanceDynamic
    open var bAddedToScreen: Boolean
    open var bEditTimeUsable: Boolean
    open var SharedLayerName: String
    open var LayerZOrder: Number
    open var GeometryMode: String /* "Plane" | "Cylinder" | "EWidgetGeometryMode_MAX" */
    open var CylinderArcAngle: Number
    open var TickMode: String /* "Disabled" | "Enabled" | "Automatic" | "ETickMode_MAX" */
    open var Widget: UserWidget
    open fun SetWindowVisibility(InVisibility: String /* "Visible" | "SelfHitTestInvisible" | "EWindowVisibility_MAX" */)
    open fun SetWindowFocusable(bInWindowFocusable: Boolean)
    open fun SetWidgetSpace(NewSpace: String /* "World" | "Screen" | "EWidgetSpace_MAX" */)
    open fun SetWidget(Widget: UserWidget)
    open fun SetTwoSided(bWantTwoSided: Boolean)
    open fun SetTintColorAndOpacity(NewTintColorAndOpacity: LinearColor)
    open fun SetTickWhenOffscreen(bWantTickWhenOffscreen: Boolean)
    open fun SetTickMode(InTickMode: String /* "Disabled" | "Enabled" | "Automatic" | "ETickMode_MAX" */)
    open fun SetRedrawTime(InRedrawTime: Number)
    open fun SetPivot(InPivot: Vector2D)
    open fun SetOwnerPlayer(LocalPlayer: LocalPlayer)
    open fun SetManuallyRedraw(bUseManualRedraw: Boolean)
    open fun SetGeometryMode(InGeometryMode: String /* "Plane" | "Cylinder" | "EWidgetGeometryMode_MAX" */)
    open fun SetDrawSize(Size: Vector2D)
    open fun SetDrawAtDesiredSize(bInDrawAtDesiredSize: Boolean)
    open fun SetCylinderArcAngle(InCylinderArcAngle: Number)
    open fun SetBackgroundColor(NewBackgroundColor: LinearColor)
    open fun RequestRenderUpdate()
    open fun RequestRedraw()
    open fun IsWidgetVisible(): Boolean
    open fun GetWindowVisiblility(): String /* "Visible" | "SelfHitTestInvisible" | "EWindowVisibility_MAX" */
    open fun GetWindowFocusable(): Boolean
    open fun GetWidgetSpace(): String /* "World" | "Screen" | "EWidgetSpace_MAX" */
    open fun GetWidget(): UserWidget
    open fun GetUserWidgetObject(): UserWidget
    open fun GetTwoSided(): Boolean
    open fun GetTickWhenOffscreen(): Boolean
    open fun GetRenderTarget(): TextureRenderTarget2D
    open fun GetRedrawTime(): Number
    open fun GetPivot(): Vector2D
    open fun GetOwnerPlayer(): LocalPlayer
    open fun GetMaterialInstance(): MaterialInstanceDynamic
    open fun GetManuallyRedraw(): Boolean
    open fun GetGeometryMode(): String /* "Plane" | "Cylinder" | "EWidgetGeometryMode_MAX" */
    open fun GetDrawSize(): Vector2D
    open fun GetDrawAtDesiredSize(): Boolean
    open fun GetCylinderArcAngle(): Number
    open fun GetCurrentDrawSize(): Vector2D

    companion object {
        fun Load(ResourceName: String): WidgetComponent
        fun Find(Outer: UObject, ResourceName: String): WidgetComponent
        fun GetDefaultObject(): WidgetComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WidgetComponent
        fun C(Other: UObject): WidgetComponent
        fun C(Other: Any): WidgetComponent
    }
}

external object EVREditorWidgetDrawingPolicy {
    var Always: String /* "Always" */
    var Hovering: String /* "Hovering" */
    var EVREditorWidgetDrawingPolicy_MAX: String /* "EVREditorWidgetDrawingPolicy_MAX" */
}

external open class VREditorWidgetComponent : WidgetComponent {
    constructor()
    constructor(Outer: UObject)
    open var DrawingPolicy: String /* "Always" | "Hovering" | "EVREditorWidgetDrawingPolicy_MAX" */
    open var bIsHovering: Boolean
    open var bHasEverDrawn: Boolean

    companion object {
        fun Load(ResourceName: String): VREditorWidgetComponent
        fun Find(Outer: UObject, ResourceName: String): VREditorWidgetComponent
        fun GetDefaultObject(): VREditorWidgetComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VREditorWidgetComponent
        fun C(Other: UObject): VREditorWidgetComponent
        fun C(Other: Any): VREditorWidgetComponent
    }
}

external open class VREditorFloatingUI(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : VREditorBaseActor {
    open var CreationContext: VREditorFloatingUICreationContext
    open var UserWidget: UserWidget
    open var WidgetComponent: VREditorWidgetComponent
    open var WindowMeshComponent: StaticMeshComponent
    open var UserWidgetClass: UnrealEngineClass

    companion object {
        fun GetDefaultObject(): VREditorFloatingUI
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VREditorFloatingUI
        fun C(Other: UObject): VREditorFloatingUI
        fun C(Other: Any): VREditorFloatingUI
    }
}

external open class VREditorRadialFloatingUI(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : VREditorBaseActor {
    open var WidgetComponents: Array<VREditorWidgetComponent>
    open var WindowMeshComponent: StaticMeshComponent
    open var ArrowMeshComponent: StaticMeshComponent
    open var CentralWidgetComponent: VREditorWidgetComponent

    companion object {
        fun GetDefaultObject(): VREditorRadialFloatingUI
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VREditorRadialFloatingUI
        fun C(Other: UObject): VREditorRadialFloatingUI
        fun C(Other: Any): VREditorRadialFloatingUI
    }
}

external open class ViewportDragOperation : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ViewportDragOperation
        fun Find(Outer: UObject, ResourceName: String): ViewportDragOperation
        fun GetDefaultObject(): ViewportDragOperation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ViewportDragOperation
        fun C(Other: UObject): ViewportDragOperation
        fun C(Other: Any): ViewportDragOperation
    }
}

external open class ViewportDragOperationComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var DragOperation: ViewportDragOperation
    open var DragOperationSubclass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): ViewportDragOperationComponent
        fun Find(Outer: UObject, ResourceName: String): ViewportDragOperationComponent
        fun GetDefaultObject(): ViewportDragOperationComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ViewportDragOperationComponent
        fun C(Other: UObject): ViewportDragOperationComponent
        fun C(Other: Any): ViewportDragOperationComponent
    }
}

external open class VREditorDockableWindow(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : VREditorFloatingUI {
    open var DockButtonMeshComponent: StaticMeshComponent
    open var SelectionBarMeshComponent: StaticMeshComponent
    open var CloseButtonMeshComponent: StaticMeshComponent
    open var DockButtonMID: MaterialInstanceDynamic
    open var SelectionBarMID: MaterialInstanceDynamic
    open var SelectionBarTranslucentMID: MaterialInstanceDynamic
    open var CloseButtonMID: MaterialInstanceDynamic
    open var CloseButtonTranslucentMID: MaterialInstanceDynamic
    open var DragOperationComponent: ViewportDragOperationComponent

    companion object {
        fun GetDefaultObject(): VREditorDockableWindow
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VREditorDockableWindow
        fun C(Other: UObject): VREditorDockableWindow
        fun C(Other: Any): VREditorDockableWindow
    }
}

external open class ViewportTransformer : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ViewportWorldInteraction: ViewportWorldInteraction
    open fun Shutdown()
    open fun ShouldCenterTransformGizmoPivot(): Boolean
    open fun OnStopDragging(Interactor: ViewportInteractor)
    open fun OnStartDragging(Interactor: ViewportInteractor)
    open fun Init(InitViewportWorldInteraction: ViewportWorldInteraction)
    open fun CanAlignToActors(): Boolean

    companion object {
        fun Load(ResourceName: String): ViewportTransformer
        fun Find(Outer: UObject, ResourceName: String): ViewportTransformer
        fun GetDefaultObject(): ViewportTransformer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ViewportTransformer
        fun C(Other: UObject): ViewportTransformer
        fun C(Other: Any): ViewportTransformer
    }
}

external open class GizmoHandle {
    open fun clone(): GizmoHandle

    companion object {
        fun C(Other: UObject): GizmoHandle
        fun C(Other: Any): GizmoHandle
    }
}

external open class GizmoHandleGroup : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var GizmoMaterial: MaterialInterface
    open var TranslucentGizmoMaterial: MaterialInterface
    open var Handles: Array<GizmoHandle>
    open var OwningTransformGizmoActor: BaseTransformGizmo
    open var DragOperationComponent: ViewportDragOperationComponent

    companion object {
        fun Load(ResourceName: String): GizmoHandleGroup
        fun Find(Outer: UObject, ResourceName: String): GizmoHandleGroup
        fun GetDefaultObject(): GizmoHandleGroup
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoHandleGroup
        fun C(Other: UObject): GizmoHandleGroup
        fun C(Other: Any): GizmoHandleGroup
    }
}

external open class BaseTransformGizmo(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var SceneComponent: SceneComponent
    open var AllHandleGroups: Array<GizmoHandleGroup>
    open var WorldInteraction: ViewportWorldInteraction

    companion object {
        fun GetDefaultObject(): BaseTransformGizmo
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BaseTransformGizmo
        fun C(Other: UObject): BaseTransformGizmo
        fun C(Other: Any): BaseTransformGizmo
    }
}

external open class MouseCursorInteractor : ViewportInteractor {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MouseCursorInteractor
        fun Find(Outer: UObject, ResourceName: String): MouseCursorInteractor
        fun GetDefaultObject(): MouseCursorInteractor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MouseCursorInteractor
        fun C(Other: UObject): MouseCursorInteractor
        fun C(Other: Any): MouseCursorInteractor
    }
}

external open class ViewportInteractionAssetContainer : DataAsset {
    constructor()
    constructor(Outer: UObject)
    open var GizmoHandleSelectedSound: SoundBase
    open var GizmoHandleDropSound: SoundBase
    open var SelectionChangeSound: SoundBase
    open var SelectionDropSound: SoundBase
    open var SelectionStartDragSound: SoundBase
    open var GridSnapSound: SoundBase
    open var ActorSnapSound: SoundBase
    open var UndoSound: SoundBase
    open var RedoSound: SoundBase
    open var GridMesh: StaticMesh
    open var TranslationHandleMesh: StaticMesh
    open var UniformScaleHandleMesh: StaticMesh
    open var ScaleHandleMesh: StaticMesh
    open var PlaneTranslationHandleMesh: StaticMesh
    open var RotationHandleMesh: StaticMesh
    open var RotationHandleSelectedMesh: StaticMesh
    open var StartRotationIndicatorMesh: StaticMesh
    open var CurrentRotationIndicatorMesh: StaticMesh
    open var FreeRotationHandleMesh: StaticMesh
    open var GridMaterial: MaterialInterface
    open var TransformGizmoMaterial: MaterialInterface
    open var TranslucentTransformGizmoMaterial: MaterialInterface

    companion object {
        fun Load(ResourceName: String): ViewportInteractionAssetContainer
        fun Find(Outer: UObject, ResourceName: String): ViewportInteractionAssetContainer
        fun GetDefaultObject(): ViewportInteractionAssetContainer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ViewportInteractionAssetContainer
        fun C(Other: UObject): ViewportInteractionAssetContainer
        fun C(Other: Any): ViewportInteractionAssetContainer
    }
}

external open class ViewportWorldInteraction : EditorWorldExtension {
    constructor()
    constructor(Outer: UObject)
    open var Interactors: Array<ViewportInteractor>
    open var ViewportTransformer: ViewportTransformer
    open var TransformGizmoActor: BaseTransformGizmo
    open var SnapGridActor: Actor
    open var SnapGridMeshComponent: StaticMeshComponent
    open var SnapGridMID: MaterialInstanceDynamic
    open var DefaultMouseCursorInteractor: MouseCursorInteractor
    open var ActorsToExcludeFromHitTest: Array<Any>
    open var AssetContainer: ViewportInteractionAssetContainer
    open fun SetWorldToMetersScale(NewWorldToMetersScale: Number, bCompensateRoomWorldScale: Boolean)
    open fun SetRoomTransformForNextFrame(NewRoomTransform: Transform)
    open fun SetHeadTransform(NewHeadTransform: Transform)
    open fun RemoveInteractor(Interactor: ViewportInteractor)
    open fun GetWorldScaleFactor(): Number
    open fun GetTransformGizmoActor(): BaseTransformGizmo
    open fun GetRoomTransform(): Transform
    open fun GetRoomSpaceHeadTransform(): Transform
    open fun GetInteractors(): Array<ViewportInteractor>
    open fun GetHeadTransform(): Transform
    open fun AddInteractor(Interactor: ViewportInteractor)
    open fun AddActorToExcludeFromHitTests(ActorToExcludeFromHitTests: Actor)

    companion object {
        fun Load(ResourceName: String): ViewportWorldInteraction
        fun Find(Outer: UObject, ResourceName: String): ViewportWorldInteraction
        fun GetDefaultObject(): ViewportWorldInteraction
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ViewportWorldInteraction
        fun C(Other: UObject): ViewportWorldInteraction
        fun C(Other: Any): ViewportWorldInteraction
    }
}

external object EHitResultGizmoFilterMode {
    var All: String /* "All" */
    var NoGizmos: String /* "NoGizmos" */
    var GizmosOnly: String /* "GizmosOnly" */
    var EHitResultGizmoFilterMode_MAX: String /* "EHitResultGizmoFilterMode_MAX" */
}

external object EViewportInteractionDraggingMode {
    var Nothing: String /* "Nothing" */
    var TransformablesWithGizmo: String /* "TransformablesWithGizmo" */
    var TransformablesAtLaserImpact: String /* "TransformablesAtLaserImpact" */
    var AssistingDrag: String /* "AssistingDrag" */
    var TransformablesFreely: String /* "TransformablesFreely" */
    var World: String /* "World" */
    var Interactable: String /* "Interactable" */
    var Material: String /* "Material" */
    var EViewportInteractionDraggingMode_MAX: String /* "EViewportInteractionDraggingMode_MAX" */
}

external open class ViewportActionKeyInput {
    open var ActionType: String
    open var Event: String /* "IE_Pressed" | "IE_Released" | "IE_Repeat" | "IE_DoubleClick" | "IE_Axis" | "IE_MAX" */
    open var bIsInputCaptured: Boolean
    open fun clone(): ViewportActionKeyInput

    companion object {
        fun C(Other: UObject): ViewportActionKeyInput
        fun C(Other: Any): ViewportActionKeyInput
    }
}

external interface `T$598` {
    var bOutWasHandled: Boolean
}

external interface `T$599` {
    var OutHandTransform: Transform
    var OutForwardVector: Vector
    var `$`: Boolean
}

external interface `T$600` {
    var LaserPointerStart: Vector
    var LaserPointerEnd: Vector
    var `$`: Boolean
}

external open class ViewportInteractor : UObject {
    constructor()
    constructor(Outer: UObject)
    open var KeyToActionMap: Any
    open var WorldInteraction: ViewportWorldInteraction
    open var OtherInteractor: ViewportInteractor
    open fun Tick(DeltaTime: Number)
    open fun Shutdown()
    open fun SetHitResultGizmoFilterMode(newFilter: String /* "All" | "NoGizmos" | "GizmosOnly" | "EHitResultGizmoFilterMode_MAX" */)
    open fun SetDraggingMode(NewDraggingMode: String /* "Nothing" | "TransformablesWithGizmo" | "TransformablesAtLaserImpact" | "AssistingDrag" | "TransformablesFreely" | "World" | "Interactable" | "Material" | "EViewportInteractionDraggingMode_MAX" */)
    open fun SetCanCarry(bInCanCarry: Boolean)
    open fun IsHoveringOverGizmo(): Boolean
    open fun HandleInputKey(Action: ViewportActionKeyInput, Key: Key, Event: String /* "IE_Pressed" | "IE_Released" | "IE_Repeat" | "IE_DoubleClick" | "IE_Axis" | "IE_MAX" */, bOutWasHandled: Boolean = definedExternally): `T$598`
    open fun HandleInputAxis(Action: ViewportActionKeyInput, Key: Key, Delta: Number, DeltaTime: Number, bOutWasHandled: Boolean = definedExternally): `T$598`
    open fun GetWorldInteraction(): ViewportWorldInteraction
    open fun GetTransformAndForwardVector(OutHandTransform: Transform = definedExternally, OutForwardVector: Vector = definedExternally): `T$599`
    open fun GetTransform(): Transform
    open fun GetRoomSpaceTransform(): Transform
    open fun GetOtherInteractor(): ViewportInteractor
    open fun GetLastTransform(): Transform
    open fun GetLastRoomSpaceTransform(): Transform
    open fun GetLaserPointer(LaserPointerStart: Vector = definedExternally, LaserPointerEnd: Vector = definedExternally, bEvenIfBlocked: Boolean = definedExternally, LaserLengthOverride: Number = definedExternally): `T$600`
    open fun GetHoverLocation(): Vector
    open fun GetHitResultGizmoFilterMode(): String /* "All" | "NoGizmos" | "GizmosOnly" | "EHitResultGizmoFilterMode_MAX" */
    open fun GetDraggingMode(): String /* "Nothing" | "TransformablesWithGizmo" | "TransformablesAtLaserImpact" | "AssistingDrag" | "TransformablesFreely" | "World" | "Interactable" | "Material" | "EViewportInteractionDraggingMode_MAX" */
    open fun CanCarry(): Boolean

    companion object {
        fun Load(ResourceName: String): ViewportInteractor
        fun Find(Outer: UObject, ResourceName: String): ViewportInteractor
        fun GetDefaultObject(): ViewportInteractor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ViewportInteractor
        fun C(Other: UObject): ViewportInteractor
        fun C(Other: Any): ViewportInteractor
    }
}

external open class InterpCurvePointQuat {
    open var InVal: Number
    open var OutVal: Quat
    open var ArriveTangent: Quat
    open var LeaveTangent: Quat
    open var InterpMode: String /* "CIM_Linear" | "CIM_CurveAuto" | "CIM_Constant" | "CIM_CurveUser" | "CIM_CurveBreak" | "CIM_CurveAutoClamped" | "CIM_MAX" */
    open fun clone(): InterpCurvePointQuat

    companion object {
        fun C(Other: UObject): InterpCurvePointQuat
        fun C(Other: Any): InterpCurvePointQuat
    }
}

external open class InterpCurveQuat {
    open var Points: Array<InterpCurvePointQuat>
    open var bIsLooped: Boolean
    open var LoopKeyOffset: Number
    open fun clone(): InterpCurveQuat

    companion object {
        fun C(Other: UObject): InterpCurveQuat
        fun C(Other: Any): InterpCurveQuat
    }
}

external open class InterpCurvePointFloat {
    open var InVal: Number
    open var OutVal: Number
    open var ArriveTangent: Number
    open var LeaveTangent: Number
    open var InterpMode: String /* "CIM_Linear" | "CIM_CurveAuto" | "CIM_Constant" | "CIM_CurveUser" | "CIM_CurveBreak" | "CIM_CurveAutoClamped" | "CIM_MAX" */
    open fun clone(): InterpCurvePointFloat

    companion object {
        fun C(Other: UObject): InterpCurvePointFloat
        fun C(Other: Any): InterpCurvePointFloat
    }
}

external open class InterpCurveFloat {
    open var Points: Array<InterpCurvePointFloat>
    open var bIsLooped: Boolean
    open var LoopKeyOffset: Number
    open fun clone(): InterpCurveFloat

    companion object {
        fun C(Other: UObject): InterpCurveFloat
        fun C(Other: Any): InterpCurveFloat
    }
}

external open class SplineMetadata : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SplineMetadata
        fun Find(Outer: UObject, ResourceName: String): SplineMetadata
        fun GetDefaultObject(): SplineMetadata
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SplineMetadata
        fun C(Other: UObject): SplineMetadata
        fun C(Other: Any): SplineMetadata
    }
}

external open class SplineCurves {
    open var Position: InterpCurveVector
    open var Rotation: InterpCurveQuat
    open var Scale: InterpCurveVector
    open var ReparamTable: InterpCurveFloat
    open var MetaData: SplineMetadata
    open var Version: Any
    open fun clone(): SplineCurves

    companion object {
        fun C(Other: UObject): SplineCurves
        fun C(Other: Any): SplineCurves
    }
}

external object ESplineCoordinateSpace {
    var Local: String /* "Local" */
    var World: String /* "World" */
    var ESplineCoordinateSpace_MAX: String /* "ESplineCoordinateSpace_MAX" */
}

external object ESplinePointType {
    var Linear: String /* "Linear" */
    var Curve: String /* "Curve" */
    var Constant: String /* "Constant" */
    var CurveClamped: String /* "CurveClamped" */
    var CurveCustomTangent: String /* "CurveCustomTangent" */
    var ESplinePointType_MAX: String /* "ESplinePointType_MAX" */
}

external open class SplinePoint {
    open var InputKey: Number
    open var Position: Vector
    open var ArriveTangent: Vector
    open var LeaveTangent: Vector
    open var Rotation: Rotator
    open var Scale: Vector
    open var Type: String /* "Linear" | "Curve" | "Constant" | "CurveClamped" | "CurveCustomTangent" | "ESplinePointType_MAX" */
    open fun clone(): SplinePoint

    companion object {
        fun C(Other: UObject): SplinePoint
        fun C(Other: Any): SplinePoint
    }
}

external interface `T$601` {
    var Location: Vector
    var Tangent: Vector
}

external interface `T$602` {
    var LocalLocation: Vector
    var LocalTangent: Vector
}

external open class SplineComponent : PrimitiveComponent {
    constructor()
    constructor(Outer: UObject)
    open var SplineCurves: SplineCurves
    open var SplineInfo: InterpCurveVector
    open var SplineRotInfo: InterpCurveQuat
    open var SplineScaleInfo: InterpCurveVector
    open var SplineReparamTable: InterpCurveFloat
    open var bAllowSplineEditingPerInstance: Boolean
    open var ReparamStepsPerSegment: Number
    open var Duration: Number
    open var bStationaryEndpoints: Boolean
    open var bSplineHasBeenEdited: Boolean
    open var bModifiedByConstructionScript: Boolean
    open var bInputSplinePointsToConstructionScript: Boolean
    open var bDrawDebug: Boolean
    open var bClosedLoop: Boolean
    open var bLoopPositionOverride: Boolean
    open var LoopPosition: Number
    open var DefaultUpVector: Vector
    open var EditorUnselectedSplineSegmentColor: LinearColor
    open var EditorSelectedSplineSegmentColor: LinearColor
    open var EditorTangentColor: LinearColor
    open var bAllowDiscontinuousSpline: Boolean
    open var bShouldVisualizeScale: Boolean
    open var ScaleVisualizationWidth: Number
    open fun UpdateSpline()
    open fun SetWorldLocationAtSplinePoint(PointIndex: Number, InLocation: Vector)
    open fun SetUpVectorAtSplinePoint(PointIndex: Number, InUpVector: Vector, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */, bUpdateSpline: Boolean)
    open fun SetUnselectedSplineSegmentColor(SegmentColor: LinearColor)
    open fun SetTangentsAtSplinePoint(PointIndex: Number, InArriveTangent: Vector, InLeaveTangent: Vector, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */, bUpdateSpline: Boolean)
    open fun SetTangentColor(TangentColor: LinearColor)
    open fun SetTangentAtSplinePoint(PointIndex: Number, InTangent: Vector, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */, bUpdateSpline: Boolean)
    open fun SetSplineWorldPoints(Points: Array<Vector>)
    open fun SetSplinePointType(PointIndex: Number, Type: String /* "Linear" | "Curve" | "Constant" | "CurveClamped" | "CurveCustomTangent" | "ESplinePointType_MAX" */, bUpdateSpline: Boolean)
    open fun SetSplinePoints(Points: Array<Vector>, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */, bUpdateSpline: Boolean)
    open fun SetSplineLocalPoints(Points: Array<Vector>)
    open fun SetSelectedSplineSegmentColor(SegmentColor: LinearColor)
    open fun SetScaleAtSplinePoint(PointIndex: Number, InScaleVector: Vector, bUpdateSpline: Boolean)
    open fun SetRotationAtSplinePoint(PointIndex: Number, InRotation: Rotator, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */, bUpdateSpline: Boolean)
    open fun SetLocationAtSplinePoint(PointIndex: Number, InLocation: Vector, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */, bUpdateSpline: Boolean)
    open fun SetDrawDebug(bShow: Boolean)
    open fun SetDefaultUpVector(UpVector: Vector, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */)
    open fun SetClosedLoopAtPosition(bInClosedLoop: Boolean, Key: Number, bUpdateSpline: Boolean)
    open fun SetClosedLoop(bInClosedLoop: Boolean, bUpdateSpline: Boolean)
    open fun RemoveSplinePoint(index: Number, bUpdateSpline: Boolean)
    open fun IsClosedLoop(): Boolean
    open fun GetWorldTangentAtDistanceAlongSpline(Distance: Number): Vector
    open fun GetWorldRotationAtTime(Time: Number, bUseConstantVelocity: Boolean): Rotator
    open fun GetWorldRotationAtDistanceAlongSpline(Distance: Number): Rotator
    open fun GetWorldLocationAtTime(Time: Number, bUseConstantVelocity: Boolean): Vector
    open fun GetWorldLocationAtSplinePoint(PointIndex: Number): Vector
    open fun GetWorldLocationAtDistanceAlongSpline(Distance: Number): Vector
    open fun GetWorldDirectionAtTime(Time: Number, bUseConstantVelocity: Boolean): Vector
    open fun GetWorldDirectionAtDistanceAlongSpline(Distance: Number): Vector
    open fun GetVectorPropertyAtSplinePoint(index: Number, PropertyName: String): Vector
    open fun GetVectorPropertyAtSplineInputKey(InKey: Number, PropertyName: String): Vector
    open fun GetUpVectorAtTime(Time: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */, bUseConstantVelocity: Boolean): Vector
    open fun GetUpVectorAtSplinePoint(PointIndex: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Vector
    open fun GetUpVectorAtSplineInputKey(InKey: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Vector
    open fun GetUpVectorAtDistanceAlongSpline(Distance: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Vector
    open fun GetTransformAtTime(Time: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */, bUseConstantVelocity: Boolean, bUseScale: Boolean): Transform
    open fun GetTransformAtSplinePoint(PointIndex: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */, bUseScale: Boolean): Transform
    open fun GetTransformAtSplineInputKey(InKey: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */, bUseScale: Boolean): Transform
    open fun GetTransformAtDistanceAlongSpline(Distance: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */, bUseScale: Boolean): Transform
    open fun GetTangentAtTime(Time: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */, bUseConstantVelocity: Boolean): Vector
    open fun GetTangentAtSplinePoint(PointIndex: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Vector
    open fun GetTangentAtSplineInputKey(InKey: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Vector
    open fun GetTangentAtDistanceAlongSpline(Distance: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Vector
    open fun GetSplinePointType(PointIndex: Number): String /* "Linear" | "Curve" | "Constant" | "CurveClamped" | "CurveCustomTangent" | "ESplinePointType_MAX" */
    open fun GetSplineLength(): Number
    open fun GetScaleAtTime(Time: Number, bUseConstantVelocity: Boolean): Vector
    open fun GetScaleAtSplinePoint(PointIndex: Number): Vector
    open fun GetScaleAtSplineInputKey(InKey: Number): Vector
    open fun GetScaleAtDistanceAlongSpline(Distance: Number): Vector
    open fun GetRotationAtTime(Time: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */, bUseConstantVelocity: Boolean): Rotator
    open fun GetRotationAtSplinePoint(PointIndex: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Rotator
    open fun GetRotationAtSplineInputKey(InKey: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Rotator
    open fun GetRotationAtDistanceAlongSpline(Distance: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Rotator
    open fun GetRollAtTime(Time: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */, bUseConstantVelocity: Boolean): Number
    open fun GetRollAtSplinePoint(PointIndex: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Number
    open fun GetRollAtSplineInputKey(InKey: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Number
    open fun GetRollAtDistanceAlongSpline(Distance: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Number
    open fun GetRightVectorAtTime(Time: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */, bUseConstantVelocity: Boolean): Vector
    open fun GetRightVectorAtSplinePoint(PointIndex: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Vector
    open fun GetRightVectorAtSplineInputKey(InKey: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Vector
    open fun GetRightVectorAtDistanceAlongSpline(Distance: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Vector
    open fun GetNumberOfSplineSegments(): Number
    open fun GetNumberOfSplinePoints(): Number
    open fun GetLocationAtTime(Time: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */, bUseConstantVelocity: Boolean): Vector
    open fun GetLocationAtSplinePoint(PointIndex: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Vector
    open fun GetLocationAtSplineInputKey(InKey: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Vector
    open fun GetLocationAtDistanceAlongSpline(Distance: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Vector
    open fun GetLocationAndTangentAtSplinePoint(PointIndex: Number, Location: Vector = definedExternally, Tangent: Vector = definedExternally, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */ = definedExternally): `T$601`
    open fun GetLocalLocationAndTangentAtSplinePoint(PointIndex: Number, LocalLocation: Vector = definedExternally, LocalTangent: Vector = definedExternally): `T$602`
    open fun GetLeaveTangentAtSplinePoint(PointIndex: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Vector
    open fun GetInputKeyAtDistanceAlongSpline(Distance: Number): Number
    open fun GetFloatPropertyAtSplinePoint(index: Number, PropertyName: String): Number
    open fun GetFloatPropertyAtSplineInputKey(InKey: Number, PropertyName: String): Number
    open fun GetDistanceAlongSplineAtSplinePoint(PointIndex: Number): Number
    open fun GetDistanceAlongSplineAtSplineInputKey(InKey: Number): Number
    open fun GetDirectionAtTime(Time: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */, bUseConstantVelocity: Boolean): Vector
    open fun GetDirectionAtSplinePoint(PointIndex: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Vector
    open fun GetDirectionAtSplineInputKey(InKey: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Vector
    open fun GetDirectionAtDistanceAlongSpline(Distance: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Vector
    open fun GetDefaultUpVector(CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Vector
    open fun GetArriveTangentAtSplinePoint(PointIndex: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Vector
    open fun FindUpVectorClosestToWorldLocation(WorldLocation: Vector, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Vector
    open fun FindTransformClosestToWorldLocation(WorldLocation: Vector, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */, bUseScale: Boolean): Transform
    open fun FindTangentClosestToWorldLocation(WorldLocation: Vector, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Vector
    open fun FindScaleClosestToWorldLocation(WorldLocation: Vector): Vector
    open fun FindRotationClosestToWorldLocation(WorldLocation: Vector, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Rotator
    open fun FindRollClosestToWorldLocation(WorldLocation: Vector, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Number
    open fun FindRightVectorClosestToWorldLocation(WorldLocation: Vector, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Vector
    open fun FindLocationClosestToWorldLocation(WorldLocation: Vector, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Vector
    open fun FindInputKeyClosestToWorldLocation(WorldLocation: Vector): Number
    open fun FindDirectionClosestToWorldLocation(WorldLocation: Vector, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */): Vector
    open fun ClearSplinePoints(bUpdateSpline: Boolean)
    open fun AddSplineWorldPoint(Position: Vector)
    open fun AddSplinePointAtIndex(Position: Vector, index: Number, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */, bUpdateSpline: Boolean)
    open fun AddSplinePoint(Position: Vector, CoordinateSpace: String /* "Local" | "World" | "ESplineCoordinateSpace_MAX" */, bUpdateSpline: Boolean)
    open fun AddSplineLocalPoint(Position: Vector)
    open fun AddPoints(Points: Array<SplinePoint>, bUpdateSpline: Boolean)
    open fun AddPoint(Point: SplinePoint, bUpdateSpline: Boolean)

    companion object {
        fun Load(ResourceName: String): SplineComponent
        fun Find(Outer: UObject, ResourceName: String): SplineComponent
        fun GetDefaultObject(): SplineComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SplineComponent
        fun C(Other: UObject): SplineComponent
        fun C(Other: Any): SplineComponent
    }
}

external open class SplineMeshParams {
    open var StartPos: Vector
    open var StartTangent: Vector
    open var StartScale: Vector2D
    open var StartRoll: Number
    open var StartOffset: Vector2D
    open var EndPos: Vector
    open var EndScale: Vector2D
    open var EndTangent: Vector
    open var EndRoll: Number
    open var EndOffset: Vector2D
    open fun clone(): SplineMeshParams

    companion object {
        fun C(Other: UObject): SplineMeshParams
        fun C(Other: Any): SplineMeshParams
    }
}

external object ESplineMeshAxis {
    var X: String /* "X" */
    var Y: String /* "Y" */
    var Z: String /* "Z" */
    var ESplineMeshAxis_MAX: String /* "ESplineMeshAxis_MAX" */
}

external open class SplineMeshComponent : StaticMeshComponent {
    constructor()
    constructor(Outer: UObject)
    open var SplineParams: SplineMeshParams
    open var SplineUpDir: Vector
    open var SplineBoundaryMin: Number
    open var CachedMeshBodySetupGuid: Guid
    open var BodySetup: BodySetup
    open var SplineBoundaryMax: Number
    open var bAllowSplineEditingPerInstance: Boolean
    open var bSmoothInterpRollScale: Boolean
    open var bMeshDirty: Boolean
    open var ForwardAxis: String /* "X" | "Y" | "Z" | "ESplineMeshAxis_MAX" */
    open var VirtualTextureMainPassMaxDrawDistance: Number
    open var bSelected: Boolean
    open fun UpdateMesh()
    open fun SetStartTangent(StartTangent: Vector, bUpdateMesh: Boolean)
    open fun SetStartScale(StartScale: Vector2D, bUpdateMesh: Boolean)
    open fun SetStartRoll(StartRoll: Number, bUpdateMesh: Boolean)
    open fun SetStartPosition(StartPos: Vector, bUpdateMesh: Boolean)
    open fun SetStartOffset(StartOffset: Vector2D, bUpdateMesh: Boolean)
    open fun SetStartAndEnd(StartPos: Vector, StartTangent: Vector, EndPos: Vector, EndTangent: Vector, bUpdateMesh: Boolean)
    open fun SetSplineUpDir(InSplineUpDir: Vector, bUpdateMesh: Boolean)
    open fun SetForwardAxis(InForwardAxis: String /* "X" | "Y" | "Z" | "ESplineMeshAxis_MAX" */, bUpdateMesh: Boolean)
    open fun SetEndTangent(EndTangent: Vector, bUpdateMesh: Boolean)
    open fun SetEndScale(EndScale: Vector2D, bUpdateMesh: Boolean)
    open fun SetEndRoll(EndRoll: Number, bUpdateMesh: Boolean)
    open fun SetEndPosition(EndPos: Vector, bUpdateMesh: Boolean)
    open fun SetEndOffset(EndOffset: Vector2D, bUpdateMesh: Boolean)
    open fun SetBoundaryMin(InBoundaryMin: Number, bUpdateMesh: Boolean)
    open fun SetBoundaryMax(InBoundaryMax: Number, bUpdateMesh: Boolean)
    open fun GetStartTangent(): Vector
    open fun GetStartScale(): Vector2D
    open fun GetStartRoll(): Number
    open fun GetStartPosition(): Vector
    open fun GetStartOffset(): Vector2D
    open fun GetSplineUpDir(): Vector
    open fun GetForwardAxis(): String /* "X" | "Y" | "Z" | "ESplineMeshAxis_MAX" */
    open fun GetEndTangent(): Vector
    open fun GetEndScale(): Vector2D
    open fun GetEndRoll(): Number
    open fun GetEndPosition(): Vector
    open fun GetEndOffset(): Vector2D
    open fun GetBoundaryMin(): Number
    open fun GetBoundaryMax(): Number

    companion object {
        fun Load(ResourceName: String): SplineMeshComponent
        fun Find(Outer: UObject, ResourceName: String): SplineMeshComponent
        fun GetDefaultObject(): SplineMeshComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SplineMeshComponent
        fun C(Other: UObject): SplineMeshComponent
        fun C(Other: Any): SplineMeshComponent
    }
}

external open class TextureLightProfile : Texture2D {
    constructor()
    constructor(Outer: UObject)
    open var Brightness: Number
    open var TextureMultiplier: Number

    companion object {
        fun Load(ResourceName: String): TextureLightProfile
        fun Find(Outer: UObject, ResourceName: String): TextureLightProfile
        fun GetDefaultObject(): TextureLightProfile
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextureLightProfile
        fun C(Other: UObject): TextureLightProfile
        fun C(Other: Any): TextureLightProfile
    }
}

external open class LightComponent : LightComponentBase {
    constructor()
    constructor(Outer: UObject)
    open var Temperature: Number
    open var MaxDrawDistance: Number
    open var MaxDistanceFadeRange: Number
    open var bUseTemperature: Boolean
    open var ShadowMapChannel: Number
    open var MinRoughness: Number
    open var SpecularScale: Number
    open var ShadowResolutionScale: Number
    open var ShadowBias: Number
    open var ShadowSlopeBias: Number
    open var ShadowSharpen: Number
    open var ContactShadowLength: Number
    open var ContactShadowLengthInWS: Boolean
    open var InverseSquaredFalloff: Boolean
    open var CastTranslucentShadows: Boolean
    open var bCastShadowsFromCinematicObjectsOnly: Boolean
    open var bAffectDynamicIndirectLighting: Boolean
    open var bForceCachedShadowsForMovablePrimitives: Boolean
    open var LightingChannels: LightingChannels
    open var LightFunctionMaterial: MaterialInterface
    open var LightFunctionScale: Vector
    open var IESTexture: TextureLightProfile
    open var bUseIESBrightness: Boolean
    open var IESBrightnessScale: Number
    open var LightFunctionFadeDistance: Number
    open var DisabledBrightness: Number
    open var bEnableLightShaftBloom: Boolean
    open var BloomScale: Number
    open var BloomThreshold: Number
    open var BloomMaxBrightness: Number
    open var BloomTint: Color
    open var bUseRayTracedDistanceFieldShadows: Boolean
    open var RayStartOffsetDepthScale: Number
    open fun SetVolumetricScatteringIntensity(NewIntensity: Number)
    open fun SetUseTemperature(bNewValue: Boolean)
    open fun SetUseIESIntensity(bNewValue: Boolean)
    open fun SetTransmission(bNewValue: Boolean)
    open fun SetTemperature(NewTemperature: Number)
    open fun SetSpecularScale(NewValue: Number)
    open fun SetShadowSlopeBias(NewValue: Number)
    open fun SetShadowBias(NewValue: Number)
    open fun SetLightingChannels(bChannel0: Boolean, bChannel1: Boolean, bChannel2: Boolean)
    open fun SetLightFunctionScale(NewLightFunctionScale: Vector)
    open fun SetLightFunctionMaterial(NewLightFunctionMaterial: MaterialInterface)
    open fun SetLightFunctionFadeDistance(NewLightFunctionFadeDistance: Number)
    open fun SetLightFunctionDisabledBrightness(NewValue: Number)
    open fun SetLightColor(NewLightColor: LinearColor, bSRGB: Boolean)
    open fun SetIntensity(NewIntensity: Number)
    open fun SetIndirectLightingIntensity(NewIntensity: Number)
    open fun SetIESTexture(NewValue: TextureLightProfile)
    open fun SetIESIntensityScale(NewValue: Number)
    open fun SetForceCachedShadowsForMovablePrimitives(bNewValue: Boolean)
    open fun SetEnableLightShaftBloom(bNewValue: Boolean)
    open fun SetBloomTint(NewValue: Color)
    open fun SetBloomThreshold(NewValue: Number)
    open fun SetBloomScale(NewValue: Number)
    open fun SetBloomMaxBrightness(NewValue: Number)
    open fun SetAffectTranslucentLighting(bNewValue: Boolean)
    open fun SetAffectDynamicIndirectLighting(bNewValue: Boolean)

    companion object {
        fun Load(ResourceName: String): LightComponent
        fun Find(Outer: UObject, ResourceName: String): LightComponent
        fun GetDefaultObject(): LightComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LightComponent
        fun C(Other: UObject): LightComponent
        fun C(Other: Any): LightComponent
    }
}

external object ELightUnits {
    var Unitless: String /* "Unitless" */
    var Candelas: String /* "Candelas" */
    var Lumens: String /* "Lumens" */
    var ELightUnits_MAX: String /* "ELightUnits_MAX" */
}

external open class LightmassLightSettings {
    open var IndirectLightingSaturation: Number
    open var ShadowExponent: Number
    open var bUseAreaShadowsForStationaryLight: Boolean
    open fun clone(): LightmassLightSettings

    companion object {
        fun C(Other: UObject): LightmassLightSettings
        fun C(Other: Any): LightmassLightSettings
    }
}

external open class LightmassPointLightSettings : LightmassLightSettings {
    override fun clone(): LightmassPointLightSettings

    companion object {
        fun C(Other: UObject): LightmassPointLightSettings
        fun C(Other: Any): LightmassPointLightSettings
    }
}

external open class LocalLightComponent : LightComponent {
    constructor()
    constructor(Outer: UObject)
    open var IntensityUnits: String /* "Unitless" | "Candelas" | "Lumens" | "ELightUnits_MAX" */
    open var Radius: Number
    open var AttenuationRadius: Number
    open var LightmassSettings: LightmassPointLightSettings
    open fun SetIntensityUnits(NewIntensityUnits: String /* "Unitless" | "Candelas" | "Lumens" | "ELightUnits_MAX" */)
    open fun SetAttenuationRadius(NewRadius: Number)

    companion object {
        fun Load(ResourceName: String): LocalLightComponent
        fun Find(Outer: UObject, ResourceName: String): LocalLightComponent
        fun GetDefaultObject(): LocalLightComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LocalLightComponent
        fun GetUnitsConversionFactor(SrcUnits: String /* "Unitless" | "Candelas" | "Lumens" | "ELightUnits_MAX" */, TargetUnits: String /* "Unitless" | "Candelas" | "Lumens" | "ELightUnits_MAX" */, CosHalfConeAngle: Number): Number
        fun C(Other: UObject): LocalLightComponent
        fun C(Other: Any): LocalLightComponent
    }
}

external open class PointLightComponent : LocalLightComponent {
    constructor()
    constructor(Outer: UObject)
    open var bUseInverseSquaredFalloff: Boolean
    open var LightFalloffExponent: Number
    open var SourceRadius: Number
    open var SoftSourceRadius: Number
    open var SourceLength: Number
    open fun SetSourceRadius(bNewValue: Number)
    open fun SetSourceLength(NewValue: Number)
    open fun SetSoftSourceRadius(bNewValue: Number)
    open fun SetLightFalloffExponent(NewLightFalloffExponent: Number)

    companion object {
        fun Load(ResourceName: String): PointLightComponent
        fun Find(Outer: UObject, ResourceName: String): PointLightComponent
        fun GetDefaultObject(): PointLightComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PointLightComponent
        fun C(Other: UObject): PointLightComponent
        fun C(Other: Any): PointLightComponent
    }
}

external object EControllerType {
    var Laser: String /* "Laser" */
    var AssistingLaser: String /* "AssistingLaser" */
    var UI: String /* "UI" */
    var Navigation: String /* "Navigation" */
    var Unknown: String /* "Unknown" */
    var EControllerType_MAX: String /* "EControllerType_MAX" */
}

external open class VREditorTeleporter(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var VRMode: VREditorMode
    open var TeleportDirectionMeshComponent: StaticMeshComponent
    open var HMDMeshComponent: StaticMeshComponent
    open var LeftMotionControllerMeshComponent: StaticMeshComponent
    open var RightMotionControllerMeshComponent: StaticMeshComponent
    open var TeleportMID: MaterialInstanceDynamic
    open var InteractorTryingTeleport: ViewportInteractor
    open fun TeleportDone()
    open fun StopAiming()
    open fun StartTeleport()
    open fun StartAiming(Interactor: ViewportInteractor)
    open fun Shutdown()
    open fun SetVisibility(bVisible: Boolean)
    open fun SetColor(Color: LinearColor)
    open fun IsTeleporting(): Boolean
    open fun IsAiming(): Boolean
    open fun Init(InMode: VREditorMode)
    open fun GetVRMode(): VREditorMode
    open fun GetSlideDelta(Interactor: VREditorInteractor, Axis: Boolean): Number
    open fun GetInteractorTryingTeleport(): ViewportInteractor
    open fun DoTeleport()

    companion object {
        fun GetDefaultObject(): VREditorTeleporter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VREditorTeleporter
        fun C(Other: UObject): VREditorTeleporter
        fun C(Other: Any): VREditorTeleporter
    }
}

external open class VREditorInteractor : ViewportInteractor {
    constructor()
    constructor(Outer: UObject)
    open var bIsUndoRedoSwipeEnabled: Boolean
    open var MotionControllerComponent: MotionControllerComponent
    open var HandMeshComponent: StaticMeshComponent
    open var LaserSplineComponent: SplineComponent
    open var LaserSplineMeshComponents: Array<SplineMeshComponent>
    open var LaserPointerMID: MaterialInstanceDynamic
    open var TranslucentLaserPointerMID: MaterialInstanceDynamic
    open var HoverMeshComponent: StaticMeshComponent
    open var HoverPointLightComponent: PointLightComponent
    open var HandMeshMID: MaterialInstanceDynamic
    open var OwningAvatar: Actor
    open var ControllerType: String /* "Laser" | "AssistingLaser" | "UI" | "Navigation" | "Unknown" | "EControllerType_MAX" */
    open var OverrideControllerType: String /* "Laser" | "AssistingLaser" | "UI" | "Navigation" | "Unknown" | "EControllerType_MAX" */
    open var ControllerMotionSource: String
    open var VRMode: VREditorMode
    open fun TryOverrideControllerType(InControllerType: String /* "Laser" | "AssistingLaser" | "UI" | "Navigation" | "Unknown" | "EControllerType_MAX" */): Boolean
    open fun SetupComponent(OwningActor: Actor)
    open fun SetForceShowLaser(bInForceShow: Boolean)
    open fun SetForceLaserColor(InColor: LinearColor)
    open fun SetControllerType(InControllerType: String /* "Laser" | "AssistingLaser" | "UI" | "Navigation" | "Unknown" | "EControllerType_MAX" */)
    open fun SetControllerHandSide(InControllerHandSide: String)
    open fun ReplaceHandMeshComponent(NewMesh: StaticMesh)
    open fun IsTouchingTrackpad(): Boolean
    open fun IsHoveringOverUI(): Boolean
    open fun IsClickingOnUI(): Boolean
    open fun Init(InVRMode: VREditorMode)
    open fun GetTrackpadPosition(): Vector2D
    open fun GetTeleportActor(): VREditorTeleporter
    open fun GetSlideDelta(): Number
    open fun GetSelectAndMoveTriggerValue(): Number
    open fun GetMotionControllerComponent(): MotionControllerComponent
    open fun GetLastTrackpadPosition(): Vector2D
    open fun GetLaserStart(): Vector
    open fun GetLaserEnd(): Vector
    open fun GetHMDDeviceType(): String
    open fun GetControllerType(): String /* "Laser" | "AssistingLaser" | "UI" | "Navigation" | "Unknown" | "EControllerType_MAX" */
    open fun GetControllerSide(): String /* "Left" | "Right" | "AnyHand" | "Pad" | "ExternalCamera" | "Gun" | "Special_1" | "Special_2" | "Special_3" | "Special_4" | "Special_5" | "Special_6" | "Special_7" | "Special_8" | "Special_9" | "Special_10" | "Special_11" | "ControllerHand_Count" | "EControllerHand_MAX" */
    open fun GetControllerHandSide(): String

    companion object {
        fun Load(ResourceName: String): VREditorInteractor
        fun Find(Outer: UObject, ResourceName: String): VREditorInteractor
        fun GetDefaultObject(): VREditorInteractor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VREditorInteractor
        fun C(Other: UObject): VREditorInteractor
        fun C(Other: Any): VREditorInteractor
    }
}

external open class VRButton {
    open var ButtonWidget: VREditorWidgetComponent
    open fun clone(): VRButton

    companion object {
        fun C(Other: UObject): VRButton
        fun C(Other: Any): VRButton
    }
}

external open class VRRadialMenuHandler : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): VRRadialMenuHandler
        fun Find(Outer: UObject, ResourceName: String): VRRadialMenuHandler
        fun GetDefaultObject(): VRRadialMenuHandler
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VRRadialMenuHandler
        fun C(Other: UObject): VRRadialMenuHandler
        fun C(Other: Any): VRRadialMenuHandler
    }
}

external open class VREditorUISystem : UObject {
    constructor()
    constructor(Outer: UObject)
    open var VRMode: VREditorMode
    open var FloatingUIs: Any
    open var PreviewWindowInfo: Any
    open var InfoDisplayPanel: VREditorFloatingUI
    open var QuickRadialMenu: VREditorRadialFloatingUI
    open var DraggingUI: VREditorDockableWindow
    open var ColorPickerUI: VREditorDockableWindow
    open var LaserInteractor: VREditorInteractor
    open var UIInteractor: VREditorInteractor
    open var VRButtons: Array<VRButton>
    open var RadialMenuHandler: VRRadialMenuHandler

    companion object {
        fun Load(ResourceName: String): VREditorUISystem
        fun Find(Outer: UObject, ResourceName: String): VREditorUISystem
        fun GetDefaultObject(): VREditorUISystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VREditorUISystem
        fun C(Other: UObject): VREditorUISystem
        fun C(Other: Any): VREditorUISystem
    }
}

external open class VREditorPlacement : UObject {
    constructor()
    constructor(Outer: UObject)
    open var VRMode: VREditorMode
    open var ViewportWorldInteraction: ViewportWorldInteraction
    open var FloatingUIAssetDraggedFrom: WidgetComponent
    open var PlacingMaterialOrTextureAsset: UObject

    companion object {
        fun Load(ResourceName: String): VREditorPlacement
        fun Find(Outer: UObject, ResourceName: String): VREditorPlacement
        fun GetDefaultObject(): VREditorPlacement
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VREditorPlacement
        fun C(Other: UObject): VREditorPlacement
        fun C(Other: Any): VREditorPlacement
    }
}

external open class VREditorMode : EditorWorldExtension {
    constructor()
    constructor(Outer: UObject)
    open var AvatarActor: VREditorAvatarActor
    open var UISystem: VREditorUISystem
    open var TeleportActor: VREditorTeleporter
    open var AutoScalerSystem: VREditorAutoScaler
    open var WorldInteraction: ViewportWorldInteraction
    open var PlacementSystem: VREditorPlacement
    open var Interactors: Array<VREditorInteractor>
    open var AssetContainer: VREditorAssetContainer
    open fun GetWorldScaleFactor(): Number

    companion object {
        fun Load(ResourceName: String): VREditorMode
        fun Find(Outer: UObject, ResourceName: String): VREditorMode
        fun GetDefaultObject(): VREditorMode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VREditorMode
        fun C(Other: UObject): VREditorMode
        fun C(Other: Any): VREditorMode
    }
}

external open class VREditorAutoScaler : UObject {
    constructor()
    constructor(Outer: UObject)
    open var VRMode: VREditorMode

    companion object {
        fun Load(ResourceName: String): VREditorAutoScaler
        fun Find(Outer: UObject, ResourceName: String): VREditorAutoScaler
        fun GetDefaultObject(): VREditorAutoScaler
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VREditorAutoScaler
        fun C(Other: UObject): VREditorAutoScaler
        fun C(Other: Any): VREditorAutoScaler
    }
}

external open class VREditorBaseUserWidget : UserWidget {
    constructor()
    constructor(Outer: UObject)
    open var Owner: Any

    companion object {
        fun Load(ResourceName: String): VREditorBaseUserWidget
        fun Find(Outer: UObject, ResourceName: String): VREditorBaseUserWidget
        fun GetDefaultObject(): VREditorBaseUserWidget
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VREditorBaseUserWidget
        fun C(Other: UObject): VREditorBaseUserWidget
        fun C(Other: Any): VREditorBaseUserWidget
    }
}

external open class VREditorCameraWidgetComponent : VREditorWidgetComponent {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): VREditorCameraWidgetComponent
        fun Find(Outer: UObject, ResourceName: String): VREditorCameraWidgetComponent
        fun GetDefaultObject(): VREditorCameraWidgetComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VREditorCameraWidgetComponent
        fun C(Other: UObject): VREditorCameraWidgetComponent
        fun C(Other: Any): VREditorCameraWidgetComponent
    }
}

external open class VREditorDockableCameraWindow(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : VREditorDockableWindow {
    companion object {
        fun GetDefaultObject(): VREditorDockableCameraWindow
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VREditorDockableCameraWindow
        fun C(Other: UObject): VREditorDockableCameraWindow
        fun C(Other: Any): VREditorDockableCameraWindow
    }
}

external open class DockableWindowDragOperation : ViewportDragOperation {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DockableWindowDragOperation
        fun Find(Outer: UObject, ResourceName: String): DockableWindowDragOperation
        fun GetDefaultObject(): DockableWindowDragOperation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DockableWindowDragOperation
        fun C(Other: UObject): DockableWindowDragOperation
        fun C(Other: Any): DockableWindowDragOperation
    }
}

external open class VREditorFloatingCameraUI(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : VREditorFloatingUI {
    open var OffsetFromCamera: Vector
    open var LinkedActor: Any

    companion object {
        fun GetDefaultObject(): VREditorFloatingCameraUI
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VREditorFloatingCameraUI
        fun C(Other: UObject): VREditorFloatingCameraUI
        fun C(Other: Any): VREditorFloatingCameraUI
    }
}

external open class FloatingText(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var SceneComponent: SceneComponent
    open var FirstLineComponent: StaticMeshComponent
    open var JointSphereComponent: StaticMeshComponent
    open var SecondLineComponent: StaticMeshComponent
    open var TextComponent: TextRenderComponent
    open var MaskedTextMaterial: MaterialInterface
    open var TranslucentTextMaterial: MaterialInterface
    open var LineMaterial: MaterialInterface
    open var LineMaterialMID: MaterialInstanceDynamic

    companion object {
        fun GetDefaultObject(): FloatingText
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FloatingText
        fun C(Other: UObject): FloatingText
        fun C(Other: Any): FloatingText
    }
}

external open class VISettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bScaleWorldFromFloor: Boolean
    open var bScaleWorldWithDynamicPivot: Boolean
    open var bAllowSimultaneousWorldScalingAndRotation: Boolean

    companion object {
        fun Load(ResourceName: String): VISettings
        fun Find(Outer: UObject, ResourceName: String): VISettings
        fun GetDefaultObject(): VISettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VISettings
        fun C(Other: UObject): VISettings
        fun C(Other: Any): VISettings
    }
}

external object EInteractorHand {
    var Right: String /* "Right" */
    var Left: String /* "Left" */
    var EInteractorHand_MAX: String /* "EInteractorHand_MAX" */
}

external open class VRModeSettings : VISettings {
    constructor()
    constructor(Outer: UObject)
    open var bEnableAutoVREditMode: Boolean
    open var bAutokeySequences: Boolean
    open var InteractorHand: String /* "Right" | "Left" | "EInteractorHand_MAX" */
    open var bShowWorldMovementGrid: Boolean
    open var bShowWorldMovementPostProcess: Boolean
    open var bShowWorldScaleProgressBar: Boolean
    open var UIBrightness: Number
    open var GizmoScale: Number
    open var DoubleClickTime: Number
    open var TriggerPressedThreshold_Vive: Number
    open var TriggerPressedThreshold_Rift: Number
    open var InteractorClass: Class
    open var TeleporterClass: Class

    companion object {
        fun Load(ResourceName: String): VRModeSettings
        fun Find(Outer: UObject, ResourceName: String): VRModeSettings
        fun GetDefaultObject(): VRModeSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VRModeSettings
        fun C(Other: UObject): VRModeSettings
        fun C(Other: Any): VRModeSettings
    }
}

external object EGizmoHandleTypes {
    var All: String /* "All" */
    var Translate: String /* "Translate" */
    var Rotate: String /* "Rotate" */
    var Scale: String /* "Scale" */
    var EGizmoHandleTypes_MAX: String /* "EGizmoHandleTypes_MAX" */
}

external open class VRScoutingInteractor : VREditorInteractor {
    constructor()
    constructor(Outer: UObject)
    open var FlyingIndicatorComponent: StaticMeshComponent
    open fun SetGizmoMode(InGizmoMode: String /* "All" | "Translate" | "Rotate" | "Scale" | "EGizmoHandleTypes_MAX" */)
    open fun GetGizmoMode(): String /* "All" | "Translate" | "Rotate" | "Scale" | "EGizmoHandleTypes_MAX" */

    companion object {
        fun Load(ResourceName: String): VRScoutingInteractor
        fun Find(Outer: UObject, ResourceName: String): VRScoutingInteractor
        fun GetDefaultObject(): VRScoutingInteractor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VRScoutingInteractor
        fun GetSelectedActors(): Array<Actor>
        fun C(Other: UObject): VRScoutingInteractor
        fun C(Other: Any): VRScoutingInteractor
    }
}

external open class LevelEditorMenuContext : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LevelEditorMenuContext
        fun Find(Outer: UObject, ResourceName: String): LevelEditorMenuContext
        fun GetDefaultObject(): LevelEditorMenuContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelEditorMenuContext
        fun C(Other: UObject): LevelEditorMenuContext
        fun C(Other: Any): LevelEditorMenuContext
    }
}

external open class LevelEditorContextMenuContext : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LevelEditorContextMenuContext
        fun Find(Outer: UObject, ResourceName: String): LevelEditorContextMenuContext
        fun GetDefaultObject(): LevelEditorContextMenuContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelEditorContextMenuContext
        fun C(Other: UObject): LevelEditorContextMenuContext
        fun C(Other: Any): LevelEditorContextMenuContext
    }
}

external open class LevelViewportToolBarContext : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LevelViewportToolBarContext
        fun Find(Outer: UObject, ResourceName: String): LevelViewportToolBarContext
        fun GetDefaultObject(): LevelViewportToolBarContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelViewportToolBarContext
        fun C(Other: UObject): LevelViewportToolBarContext
        fun C(Other: Any): LevelViewportToolBarContext
    }
}

external open class ActorTransformer : ViewportTransformer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorTransformer
        fun Find(Outer: UObject, ResourceName: String): ActorTransformer
        fun GetDefaultObject(): ActorTransformer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorTransformer
        fun C(Other: UObject): ActorTransformer
        fun C(Other: Any): ActorTransformer
    }
}

external open class ViewportInteractableInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ViewportInteractableInterface
        fun Find(Outer: UObject, ResourceName: String): ViewportInteractableInterface
        fun GetDefaultObject(): ViewportInteractableInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ViewportInteractableInterface
        fun C(Other: UObject): ViewportInteractableInterface
        fun C(Other: Any): ViewportInteractableInterface
    }
}

external open class TranslationDragOperation : ViewportDragOperation {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TranslationDragOperation
        fun Find(Outer: UObject, ResourceName: String): TranslationDragOperation
        fun GetDefaultObject(): TranslationDragOperation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TranslationDragOperation
        fun C(Other: UObject): TranslationDragOperation
        fun C(Other: Any): TranslationDragOperation
    }
}

external open class PlaneTranslationDragOperation : ViewportDragOperation {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PlaneTranslationDragOperation
        fun Find(Outer: UObject, ResourceName: String): PlaneTranslationDragOperation
        fun GetDefaultObject(): PlaneTranslationDragOperation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PlaneTranslationDragOperation
        fun C(Other: UObject): PlaneTranslationDragOperation
        fun C(Other: Any): PlaneTranslationDragOperation
    }
}

external open class RotateOnAngleDragOperation : ViewportDragOperation {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): RotateOnAngleDragOperation
        fun Find(Outer: UObject, ResourceName: String): RotateOnAngleDragOperation
        fun GetDefaultObject(): RotateOnAngleDragOperation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RotateOnAngleDragOperation
        fun C(Other: UObject): RotateOnAngleDragOperation
        fun C(Other: Any): RotateOnAngleDragOperation
    }
}

external open class ScaleDragOperation : ViewportDragOperation {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ScaleDragOperation
        fun Find(Outer: UObject, ResourceName: String): ScaleDragOperation
        fun GetDefaultObject(): ScaleDragOperation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ScaleDragOperation
        fun C(Other: UObject): ScaleDragOperation
        fun C(Other: Any): ScaleDragOperation
    }
}

external open class UniformScaleDragOperation : ViewportDragOperation {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): UniformScaleDragOperation
        fun Find(Outer: UObject, ResourceName: String): UniformScaleDragOperation
        fun GetDefaultObject(): UniformScaleDragOperation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UniformScaleDragOperation
        fun C(Other: UObject): UniformScaleDragOperation
        fun C(Other: Any): UniformScaleDragOperation
    }
}

external open class AxisGizmoHandleGroup : GizmoHandleGroup {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AxisGizmoHandleGroup
        fun Find(Outer: UObject, ResourceName: String): AxisGizmoHandleGroup
        fun GetDefaultObject(): AxisGizmoHandleGroup
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AxisGizmoHandleGroup
        fun C(Other: UObject): AxisGizmoHandleGroup
        fun C(Other: Any): AxisGizmoHandleGroup
    }
}

external open class GizmoHandleMeshComponent : StaticMeshComponent {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GizmoHandleMeshComponent
        fun Find(Outer: UObject, ResourceName: String): GizmoHandleMeshComponent
        fun GetDefaultObject(): GizmoHandleMeshComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GizmoHandleMeshComponent
        fun C(Other: UObject): GizmoHandleMeshComponent
        fun C(Other: Any): GizmoHandleMeshComponent
    }
}

external open class UniformScaleGizmoHandleGroup : GizmoHandleGroup {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): UniformScaleGizmoHandleGroup
        fun Find(Outer: UObject, ResourceName: String): UniformScaleGizmoHandleGroup
        fun GetDefaultObject(): UniformScaleGizmoHandleGroup
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UniformScaleGizmoHandleGroup
        fun C(Other: UObject): UniformScaleGizmoHandleGroup
        fun C(Other: Any): UniformScaleGizmoHandleGroup
    }
}

external open class PivotTranslationGizmoHandleGroup : AxisGizmoHandleGroup {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PivotTranslationGizmoHandleGroup
        fun Find(Outer: UObject, ResourceName: String): PivotTranslationGizmoHandleGroup
        fun GetDefaultObject(): PivotTranslationGizmoHandleGroup
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PivotTranslationGizmoHandleGroup
        fun C(Other: UObject): PivotTranslationGizmoHandleGroup
        fun C(Other: Any): PivotTranslationGizmoHandleGroup
    }
}

external open class PivotScaleGizmoHandleGroup : AxisGizmoHandleGroup {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PivotScaleGizmoHandleGroup
        fun Find(Outer: UObject, ResourceName: String): PivotScaleGizmoHandleGroup
        fun GetDefaultObject(): PivotScaleGizmoHandleGroup
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PivotScaleGizmoHandleGroup
        fun C(Other: UObject): PivotScaleGizmoHandleGroup
        fun C(Other: Any): PivotScaleGizmoHandleGroup
    }
}

external open class PivotPlaneTranslationGizmoHandleGroup : AxisGizmoHandleGroup {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PivotPlaneTranslationGizmoHandleGroup
        fun Find(Outer: UObject, ResourceName: String): PivotPlaneTranslationGizmoHandleGroup
        fun GetDefaultObject(): PivotPlaneTranslationGizmoHandleGroup
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PivotPlaneTranslationGizmoHandleGroup
        fun C(Other: UObject): PivotPlaneTranslationGizmoHandleGroup
        fun C(Other: Any): PivotPlaneTranslationGizmoHandleGroup
    }
}

external open class PivotRotationGizmoHandleGroup : AxisGizmoHandleGroup {
    constructor()
    constructor(Outer: UObject)
    open var RootFullRotationHandleComponent: SceneComponent
    open var FullRotationHandleMeshComponent: GizmoHandleMeshComponent
    open var StartRotationIndicatorMeshComponent: GizmoHandleMeshComponent
    open var RootStartRotationIdicatorComponent: SceneComponent
    open var DeltaRotationIndicatorMeshComponent: GizmoHandleMeshComponent
    open var RootDeltaRotationIndicatorComponent: SceneComponent

    companion object {
        fun Load(ResourceName: String): PivotRotationGizmoHandleGroup
        fun Find(Outer: UObject, ResourceName: String): PivotRotationGizmoHandleGroup
        fun GetDefaultObject(): PivotRotationGizmoHandleGroup
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PivotRotationGizmoHandleGroup
        fun C(Other: UObject): PivotRotationGizmoHandleGroup
        fun C(Other: Any): PivotRotationGizmoHandleGroup
    }
}

external open class StretchGizmoHandleGroup : GizmoHandleGroup {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): StretchGizmoHandleGroup
        fun Find(Outer: UObject, ResourceName: String): StretchGizmoHandleGroup
        fun GetDefaultObject(): StretchGizmoHandleGroup
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): StretchGizmoHandleGroup
        fun C(Other: UObject): StretchGizmoHandleGroup
        fun C(Other: Any): StretchGizmoHandleGroup
    }
}

external open class PivotTransformGizmo(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : BaseTransformGizmo {
    open var UniformScaleGizmoHandleGroup: UniformScaleGizmoHandleGroup
    open var TranslationGizmoHandleGroup: PivotTranslationGizmoHandleGroup
    open var ScaleGizmoHandleGroup: PivotScaleGizmoHandleGroup
    open var PlaneTranslationGizmoHandleGroup: PivotPlaneTranslationGizmoHandleGroup
    open var RotationGizmoHandleGroup: PivotRotationGizmoHandleGroup
    open var StretchGizmoHandleGroup: StretchGizmoHandleGroup
    open var LastDraggingHandle: ActorComponent

    companion object {
        fun GetDefaultObject(): PivotTransformGizmo
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PivotTransformGizmo
        fun C(Other: UObject): PivotTransformGizmo
        fun C(Other: Any): PivotTransformGizmo
    }
}

external open class StretchGizmoHandleDragOperation : ViewportDragOperation {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): StretchGizmoHandleDragOperation
        fun Find(Outer: UObject, ResourceName: String): StretchGizmoHandleDragOperation
        fun GetDefaultObject(): StretchGizmoHandleDragOperation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): StretchGizmoHandleDragOperation
        fun C(Other: UObject): StretchGizmoHandleDragOperation
        fun C(Other: Any): StretchGizmoHandleDragOperation
    }
}

external object ELocalizationTargetConflictStatus {
    var Unknown: String /* "Unknown" */
    var ConflictsPresent: String /* "ConflictsPresent" */
    var Clear: String /* "Clear" */
    var ELocalizationTargetConflictStatus_MAX: String /* "ELocalizationTargetConflictStatus_MAX" */
}

external object ELocalizationGatherPathRoot {
    var Auto: String /* "Auto" */
    var Engine: String /* "Engine" */
    var Project: String /* "Project" */
    var ELocalizationGatherPathRoot_MAX: String /* "ELocalizationGatherPathRoot_MAX" */
}

external open class GatherTextSearchDirectory {
    open var PathRoot: String /* "Auto" | "Engine" | "Project" | "ELocalizationGatherPathRoot_MAX" */
    open var Path: String
    open fun clone(): GatherTextSearchDirectory

    companion object {
        fun C(Other: UObject): GatherTextSearchDirectory
        fun C(Other: Any): GatherTextSearchDirectory
    }
}

external open class GatherTextExcludePath {
    open var PathRoot: String /* "Auto" | "Engine" | "Project" | "ELocalizationGatherPathRoot_MAX" */
    open var Pattern: String
    open fun clone(): GatherTextExcludePath

    companion object {
        fun C(Other: UObject): GatherTextExcludePath
        fun C(Other: Any): GatherTextExcludePath
    }
}

external open class GatherTextFileExtension {
    open var Pattern: String
    open fun clone(): GatherTextFileExtension

    companion object {
        fun C(Other: UObject): GatherTextFileExtension
        fun C(Other: Any): GatherTextFileExtension
    }
}

external open class GatherTextFromTextFilesConfiguration {
    open var IsEnabled: Boolean
    open var SearchDirectories: Array<GatherTextSearchDirectory>
    open var ExcludePathWildcards: Array<GatherTextExcludePath>
    open var FileExtensions: Array<GatherTextFileExtension>
    open var ShouldGatherFromEditorOnlyData: Boolean
    open fun clone(): GatherTextFromTextFilesConfiguration

    companion object {
        fun C(Other: UObject): GatherTextFromTextFilesConfiguration
        fun C(Other: Any): GatherTextFromTextFilesConfiguration
    }
}

external open class GatherTextIncludePath {
    open var PathRoot: String /* "Auto" | "Engine" | "Project" | "ELocalizationGatherPathRoot_MAX" */
    open var Pattern: String
    open fun clone(): GatherTextIncludePath

    companion object {
        fun C(Other: UObject): GatherTextIncludePath
        fun C(Other: Any): GatherTextIncludePath
    }
}

external open class GatherTextFromPackagesConfiguration {
    open var IsEnabled: Boolean
    open var IncludePathWildcards: Array<GatherTextIncludePath>
    open var ExcludePathWildcards: Array<GatherTextExcludePath>
    open var FileExtensions: Array<GatherTextFileExtension>
    open var Collections: Array<String>
    open var ExcludeClasses: Array<SoftClassPath>
    open var ShouldExcludeDerivedClasses: Boolean
    open var ShouldGatherFromEditorOnlyData: Boolean
    open var SkipGatherCache: Boolean
    open fun clone(): GatherTextFromPackagesConfiguration

    companion object {
        fun C(Other: UObject): GatherTextFromPackagesConfiguration
        fun C(Other: Any): GatherTextFromPackagesConfiguration
    }
}

external open class MetaDataKeyName {
    open var Name: String
    open fun clone(): MetaDataKeyName

    companion object {
        fun C(Other: UObject): MetaDataKeyName
        fun C(Other: Any): MetaDataKeyName
    }
}

external open class MetaDataTextKeyPattern {
    open var Pattern: String
    open fun clone(): MetaDataTextKeyPattern

    companion object {
        fun C(Other: UObject): MetaDataTextKeyPattern
        fun C(Other: Any): MetaDataTextKeyPattern
    }
}

external open class MetaDataKeyGatherSpecification {
    open var MetaDataKey: MetaDataKeyName
    open var TextNamespace: String
    open var TextKeyPattern: MetaDataTextKeyPattern
    open fun clone(): MetaDataKeyGatherSpecification

    companion object {
        fun C(Other: UObject): MetaDataKeyGatherSpecification
        fun C(Other: Any): MetaDataKeyGatherSpecification
    }
}

external open class GatherTextFromMetaDataConfiguration {
    open var IsEnabled: Boolean
    open var IncludePathWildcards: Array<GatherTextIncludePath>
    open var ExcludePathWildcards: Array<GatherTextExcludePath>
    open var KeySpecifications: Array<MetaDataKeyGatherSpecification>
    open var ShouldGatherFromEditorOnlyData: Boolean
    open fun clone(): GatherTextFromMetaDataConfiguration

    companion object {
        fun C(Other: UObject): GatherTextFromMetaDataConfiguration
        fun C(Other: Any): GatherTextFromMetaDataConfiguration
    }
}

external object ELocalizedTextCollapseMode {
    var IdenticalTextIdAndSource: String /* "IdenticalTextIdAndSource" */
    var IdenticalPackageIdTextIdAndSource: String /* "IdenticalPackageIdTextIdAndSource" */
    var IdenticalNamespaceAndSource: String /* "IdenticalNamespaceAndSource" */
    var ELocalizedTextCollapseMode_MAX: String /* "ELocalizedTextCollapseMode_MAX" */
}

external object EPortableObjectFormat {
    var Unreal: String /* "Unreal" */
    var Crowdin: String /* "Crowdin" */
    var EPortableObjectFormat_MAX: String /* "EPortableObjectFormat_MAX" */
}

external open class LocalizationExportingSettings {
    open var CollapseMode: String /* "IdenticalTextIdAndSource" | "IdenticalPackageIdTextIdAndSource" | "IdenticalNamespaceAndSource" | "ELocalizedTextCollapseMode_MAX" */
    open var POFormat: String /* "Unreal" | "Crowdin" | "EPortableObjectFormat_MAX" */
    open var ShouldPersistCommentsOnExport: Boolean
    open var ShouldAddSourceLocationsAsComments: Boolean
    open fun clone(): LocalizationExportingSettings

    companion object {
        fun C(Other: UObject): LocalizationExportingSettings
        fun C(Other: Any): LocalizationExportingSettings
    }
}

external open class LocalizationCompilationSettings {
    open var SkipSourceCheck: Boolean
    open var ValidateFormatPatterns: Boolean
    open var ValidateSafeWhitespace: Boolean
    open fun clone(): LocalizationCompilationSettings

    companion object {
        fun C(Other: UObject): LocalizationCompilationSettings
        fun C(Other: Any): LocalizationCompilationSettings
    }
}

external open class LocalizationImportDialogueSettings {
    open var RawAudioPath: DirectoryPath
    open var ImportedDialogueFolder: String
    open var bImportNativeAsSource: Boolean
    open fun clone(): LocalizationImportDialogueSettings

    companion object {
        fun C(Other: UObject): LocalizationImportDialogueSettings
        fun C(Other: Any): LocalizationImportDialogueSettings
    }
}

external open class CultureStatistics {
    open var CultureName: String
    open var WordCount: Any
    open fun clone(): CultureStatistics

    companion object {
        fun C(Other: UObject): CultureStatistics
        fun C(Other: Any): CultureStatistics
    }
}

external open class LocalizationTargetSettings {
    open var Name: String
    open var Guid: Guid
    open var ConflictStatus: String /* "Unknown" | "ConflictsPresent" | "Clear" | "ELocalizationTargetConflictStatus_MAX" */
    open var TargetDependencies: Array<Guid>
    open var AdditionalManifestDependencies: Array<FilePath>
    open var RequiredModuleNames: Array<String>
    open var GatherFromTextFiles: GatherTextFromTextFilesConfiguration
    open var GatherFromPackages: GatherTextFromPackagesConfiguration
    open var GatherFromMetaData: GatherTextFromMetaDataConfiguration
    open var ExportSettings: LocalizationExportingSettings
    open var CompileSettings: LocalizationCompilationSettings
    open var ImportDialogueSettings: LocalizationImportDialogueSettings
    open var NativeCultureIndex: Number
    open var SupportedCulturesStatistics: Array<CultureStatistics>
    open fun clone(): LocalizationTargetSettings

    companion object {
        fun C(Other: UObject): LocalizationTargetSettings
        fun C(Other: Any): LocalizationTargetSettings
    }
}

external open class LocalizationTarget : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Settings: LocalizationTargetSettings

    companion object {
        fun Load(ResourceName: String): LocalizationTarget
        fun Find(Outer: UObject, ResourceName: String): LocalizationTarget
        fun GetDefaultObject(): LocalizationTarget
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LocalizationTarget
        fun C(Other: UObject): LocalizationTarget
        fun C(Other: Any): LocalizationTarget
    }
}

external open class LocalizationTargetSet : UObject {
    constructor()
    constructor(Outer: UObject)
    open var TargetObjects: Array<LocalizationTarget>

    companion object {
        fun Load(ResourceName: String): LocalizationTargetSet
        fun Find(Outer: UObject, ResourceName: String): LocalizationTargetSet
        fun GetDefaultObject(): LocalizationTargetSet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LocalizationTargetSet
        fun C(Other: UObject): LocalizationTargetSet
        fun C(Other: Any): LocalizationTargetSet
    }
}

external open class LocalizationSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var EngineTargetSet: LocalizationTargetSet
    open var EngineTargetsSettings: Array<LocalizationTargetSettings>
    open var GameTargetSet: LocalizationTargetSet
    open var GameTargetsSettings: Array<LocalizationTargetSettings>

    companion object {
        fun Load(ResourceName: String): LocalizationSettings
        fun Find(Outer: UObject, ResourceName: String): LocalizationSettings
        fun GetDefaultObject(): LocalizationSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LocalizationSettings
        fun C(Other: UObject): LocalizationSettings
        fun C(Other: Any): LocalizationSettings
    }
}

external open class CookerStats : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Assets: Array<Any>
    open var SizeBefore: Number
    open var SizeAfter: Number
    open var Path: String

    companion object {
        fun Load(ResourceName: String): CookerStats
        fun Find(Outer: UObject, ResourceName: String): CookerStats
        fun GetDefaultObject(): CookerStats
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CookerStats
        fun C(Other: UObject): CookerStats
        fun C(Other: Any): CookerStats
    }
}

external open class LightingBuildInfo : UObject {
    constructor()
    constructor(Outer: UObject)
    open var UObject: Any
    open var LightingTime: Number
    open var UnmappedTexelsPercentage: Number
    open var UnmappedTexelsMemory: Number
    open var TotalTexelMemory: Number
    open var LevelName: String

    companion object {
        fun Load(ResourceName: String): LightingBuildInfo
        fun Find(Outer: UObject, ResourceName: String): LightingBuildInfo
        fun GetDefaultObject(): LightingBuildInfo
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LightingBuildInfo
        fun C(Other: UObject): LightingBuildInfo
        fun C(Other: Any): LightingBuildInfo
    }
}

external open class PrimitiveStats : UObject {
    constructor()
    constructor(Outer: UObject)
    open var UObject: Any
    open var Actors: Array<Any>
    open var Type: String
    open var Count: Number
    open var Sections: Number
    open var HWInstances: Number
    open var InstSections: Number
    open var Triangles: Number
    open var InstTriangles: Number
    open var ResourceSize: Number
    open var VertexColorMem: Number
    open var InstVertexColorMem: Number
    open var LightsLM: Number
    open var LightsOther: Number
    open var LightsTotal: Number
    open var ObjLightCost: Number
    open var LightMapData: Number
    open var LMSMResolution: Number
    open var RadiusMin: Number
    open var RadiusMax: Number
    open var RadiusAvg: Number

    companion object {
        fun Load(ResourceName: String): PrimitiveStats
        fun Find(Outer: UObject, ResourceName: String): PrimitiveStats
        fun GetDefaultObject(): PrimitiveStats
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PrimitiveStats
        fun C(Other: UObject): PrimitiveStats
        fun C(Other: Any): PrimitiveStats
    }
}

external open class ShaderCookerStats : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Name: String
    open var Platform: String
    open var Category: String
    open var Compiled: Number
    open var Cooked: Number
    open var Permutations: Number
    open var CompileTime: Number
    open var Path: String

    companion object {
        fun Load(ResourceName: String): ShaderCookerStats
        fun Find(Outer: UObject, ResourceName: String): ShaderCookerStats
        fun GetDefaultObject(): ShaderCookerStats
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ShaderCookerStats
        fun C(Other: UObject): ShaderCookerStats
        fun C(Other: Any): ShaderCookerStats
    }
}

external open class StaticMeshLightingInfo : UObject {
    constructor()
    constructor(Outer: UObject)
    open var StaticMeshActor: Any
    open var StaticMesh: Any
    open var LevelName: String
    open var TextureMapping: String
    open var bTextureMapping: Boolean
    open var bHasLightmapTexCoords: Boolean
    open var StaticLightingResolution: Number
    open var TextureLightMapMemoryUsage: Number
    open var VertexLightMapMemoryUsage: Number
    open var LightMapLightCount: Number
    open var TextureShadowMapMemoryUsage: Number
    open var VertexShadowMapMemoryUsage: Number
    open var ShadowMapLightCount: Number

    companion object {
        fun Load(ResourceName: String): StaticMeshLightingInfo
        fun Find(Outer: UObject, ResourceName: String): StaticMeshLightingInfo
        fun GetDefaultObject(): StaticMeshLightingInfo
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): StaticMeshLightingInfo
        fun C(Other: UObject): StaticMeshLightingInfo
        fun C(Other: Any): StaticMeshLightingInfo
    }
}

external open class TextureStats : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Texture: Any
    open var Actors: Array<Any>
    open var Type: String
    open var MaxDim: Vector2D
    open var CurrentDim: Vector2D
    open var Format: String /* "PF_Unknown" | "PF_A32B32G32R32F" | "PF_B8G8R8A8" | "PF_G8" | "PF_G16" | "PF_DXT1" | "PF_DXT3" | "PF_DXT5" | "PF_UYVY" | "PF_FloatRGB" | "PF_FloatRGBA" | "PF_DepthStencil" | "PF_ShadowDepth" | "PF_R32_FLOAT" | "PF_G16R16" | "PF_G16R16F" | "PF_G16R16F_FILTER" | "PF_G32R32F" | "PF_A2B10G10R10" | "PF_A16B16G16R16" | "PF_D24" | "PF_R16F" | "PF_R16F_FILTER" | "PF_BC5" | "PF_V8U8" | "PF_A1" | "PF_FloatR11G11B10" | "PF_A8" | "PF_R32_UINT" | "PF_R32_SINT" | "PF_PVRTC2" | "PF_PVRTC4" | "PF_R16_UINT" | "PF_R16_SINT" | "PF_R16G16B16A16_UINT" | "PF_R16G16B16A16_SINT" | "PF_R5G6B5_UNORM" | "PF_R8G8B8A8" | "PF_A8R8G8B8" | "PF_BC4" | "PF_R8G8" | "PF_ATC_RGB" | "PF_ATC_RGBA_E" | "PF_ATC_RGBA_I" | "PF_X24_G8" | "PF_ETC1" | "PF_ETC2_RGB" | "PF_ETC2_RGBA" | "PF_R32G32B32A32_UINT" | "PF_R16G16_UINT" | "PF_ASTC_4x4" | "PF_ASTC_6x6" | "PF_ASTC_8x8" | "PF_ASTC_10x10" | "PF_ASTC_12x12" | "PF_BC6H" | "PF_BC7" | "PF_R8_UINT" | "PF_L8" | "PF_XGXR8" | "PF_R8G8B8A8_UINT" | "PF_R8G8B8A8_SNORM" | "PF_R16G16B16A16_UNORM" | "PF_R16G16B16A16_SNORM" | "PF_PLATFORM_HDR_0" | "PF_PLATFORM_HDR_1" | "PF_PLATFORM_HDR_2" | "PF_NV12" | "PF_R32G32_UINT" | "PF_ETC2_R11_EAC" | "PF_ETC2_RG11_EAC" | "PF_MAX" */
    open var Group: String /* "TEXTUREGROUP_World" | "TEXTUREGROUP_WorldNormalMap" | "TEXTUREGROUP_WorldSpecular" | "TEXTUREGROUP_Character" | "TEXTUREGROUP_CharacterNormalMap" | "TEXTUREGROUP_CharacterSpecular" | "TEXTUREGROUP_Weapon" | "TEXTUREGROUP_WeaponNormalMap" | "TEXTUREGROUP_WeaponSpecular" | "TEXTUREGROUP_Vehicle" | "TEXTUREGROUP_VehicleNormalMap" | "TEXTUREGROUP_VehicleSpecular" | "TEXTUREGROUP_Cinematic" | "TEXTUREGROUP_Effects" | "TEXTUREGROUP_EffectsNotFiltered" | "TEXTUREGROUP_Skybox" | "TEXTUREGROUP_UI" | "TEXTUREGROUP_Lightmap" | "TEXTUREGROUP_RenderTarget" | "TEXTUREGROUP_MobileFlattened" | "TEXTUREGROUP_ProcBuilding_Face" | "TEXTUREGROUP_ProcBuilding_LightMap" | "TEXTUREGROUP_Shadowmap" | "TEXTUREGROUP_ColorLookupTable" | "TEXTUREGROUP_Terrain_Heightmap" | "TEXTUREGROUP_Terrain_Weightmap" | "TEXTUREGROUP_Bokeh" | "TEXTUREGROUP_IESLightProfile" | "TEXTUREGROUP_Pixels2D" | "TEXTUREGROUP_HierarchicalLOD" | "TEXTUREGROUP_Impostor" | "TEXTUREGROUP_ImpostorNormalDepth" | "TEXTUREGROUP_8BitData" | "TEXTUREGROUP_16BitData" | "TEXTUREGROUP_Project01" | "TEXTUREGROUP_Project02" | "TEXTUREGROUP_Project03" | "TEXTUREGROUP_Project04" | "TEXTUREGROUP_Project05" | "TEXTUREGROUP_Project06" | "TEXTUREGROUP_Project07" | "TEXTUREGROUP_Project08" | "TEXTUREGROUP_Project09" | "TEXTUREGROUP_Project10" | "TEXTUREGROUP_Project11" | "TEXTUREGROUP_Project12" | "TEXTUREGROUP_Project13" | "TEXTUREGROUP_Project14" | "TEXTUREGROUP_Project15" | "TEXTUREGROUP_MAX" */
    open var LODBias: Number
    open var CurrentKB: Number
    open var FullyLoadedKB: Number
    open var NumUses: Number
    open var LastTimeRendered: Number
    open var Path: String

    companion object {
        fun Load(ResourceName: String): TextureStats
        fun Find(Outer: UObject, ResourceName: String): TextureStats
        fun GetDefaultObject(): TextureStats
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextureStats
        fun C(Other: UObject): TextureStats
        fun C(Other: Any): TextureStats
    }
}

external open class ClothSharedConfigCommon : ClothConfigCommon {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ClothSharedConfigCommon
        fun Find(Outer: UObject, ResourceName: String): ClothSharedConfigCommon
        fun GetDefaultObject(): ClothSharedConfigCommon
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClothSharedConfigCommon
        fun C(Other: UObject): ClothSharedConfigCommon
        fun C(Other: Any): ClothSharedConfigCommon
    }
}

external open class ClothingAssetCustomData : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ClothingAssetCustomData
        fun Find(Outer: UObject, ResourceName: String): ClothingAssetCustomData
        fun GetDefaultObject(): ClothingAssetCustomData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClothingAssetCustomData
        fun C(Other: UObject): ClothingAssetCustomData
        fun C(Other: Any): ClothingAssetCustomData
    }
}

external open class ClothPhysicalMeshData {
    open var Vertices: Array<Vector>
    open var Normals: Array<Vector>
    open var VertexColors: Array<Color>
    open var Indices: Array<Any>
    open var WeightMaps: Any
    open var InverseMasses: Array<Number>
    open var BoneData: Array<ClothVertBoneData>
    open var MaxBoneWeights: Number
    open var NumFixedVerts: Number
    open var SelfCollisionIndices: Array<Any>
    open var MaxDistances: Array<Number>
    open var BackstopDistances: Array<Number>
    open var BackstopRadiuses: Array<Number>
    open var AnimDriveMultipliers: Array<Number>
    open fun clone(): ClothPhysicalMeshData

    companion object {
        fun C(Other: UObject): ClothPhysicalMeshData
        fun C(Other: Any): ClothPhysicalMeshData
    }
}

external open class ClothCollisionPrim_Sphere {
    open var BoneIndex: Number
    open var Radius: Number
    open var LocalPosition: Vector
    open fun clone(): ClothCollisionPrim_Sphere

    companion object {
        fun C(Other: UObject): ClothCollisionPrim_Sphere
        fun C(Other: Any): ClothCollisionPrim_Sphere
    }
}

external open class ClothCollisionPrim_SphereConnection {
    open var SphereIndices: Number
    open fun clone(): ClothCollisionPrim_SphereConnection

    companion object {
        fun C(Other: UObject): ClothCollisionPrim_SphereConnection
        fun C(Other: Any): ClothCollisionPrim_SphereConnection
    }
}

external open class ClothCollisionPrim_ConvexFace {
    open var Plane: Plane
    open var Indices: Array<Number>
    open fun clone(): ClothCollisionPrim_ConvexFace

    companion object {
        fun C(Other: UObject): ClothCollisionPrim_ConvexFace
        fun C(Other: Any): ClothCollisionPrim_ConvexFace
    }
}

external open class ClothCollisionPrim_Convex {
    open var planes: Array<Plane>
    open var Faces: Array<ClothCollisionPrim_ConvexFace>
    open var SurfacePoints: Array<Vector>
    open var BoneIndex: Number
    open fun clone(): ClothCollisionPrim_Convex

    companion object {
        fun C(Other: UObject): ClothCollisionPrim_Convex
        fun C(Other: Any): ClothCollisionPrim_Convex
    }
}

external open class ClothCollisionPrim_Box {
    open var LocalPosition: Vector
    open var LocalRotation: Quat
    open var HalfExtents: Vector
    open var BoneIndex: Number
    open fun clone(): ClothCollisionPrim_Box

    companion object {
        fun C(Other: UObject): ClothCollisionPrim_Box
        fun C(Other: Any): ClothCollisionPrim_Box
    }
}

external open class ClothCollisionData {
    open var Spheres: Array<ClothCollisionPrim_Sphere>
    open var SphereConnections: Array<ClothCollisionPrim_SphereConnection>
    open var Convexes: Array<ClothCollisionPrim_Convex>
    open var Boxes: Array<ClothCollisionPrim_Box>
    open fun clone(): ClothCollisionData

    companion object {
        fun C(Other: UObject): ClothCollisionData
        fun C(Other: Any): ClothCollisionData
    }
}

external open class PointWeightMap {
    open var Values: Array<Number>
    open var Name: String
    open var CurrentTarget: Number
    open var bEnabled: Boolean
    open fun clone(): PointWeightMap

    companion object {
        fun C(Other: UObject): PointWeightMap
        fun C(Other: Any): PointWeightMap
    }
}

external open class ClothLODDataCommon_Legacy : UObject {
    constructor()
    constructor(Outer: UObject)
    open var PhysicalMeshData: ClothPhysicalMeshDataBase_Legacy
    open var ClothPhysicalMeshData: ClothPhysicalMeshData
    open var CollisionData: ClothCollisionData
    open var ParameterMasks: Array<PointWeightMap>

    companion object {
        fun Load(ResourceName: String): ClothLODDataCommon_Legacy
        fun Find(Outer: UObject, ResourceName: String): ClothLODDataCommon_Legacy
        fun GetDefaultObject(): ClothLODDataCommon_Legacy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClothLODDataCommon_Legacy
        fun C(Other: UObject): ClothLODDataCommon_Legacy
        fun C(Other: Any): ClothLODDataCommon_Legacy
    }
}

external object EWeightMapTargetCommon {
    var None: String /* "None" */
    var MaxDistance: String /* "MaxDistance" */
    var BackstopDistance: String /* "BackstopDistance" */
    var BackstopRadius: String /* "BackstopRadius" */
    var AnimDriveStiffness: String /* "AnimDriveStiffness" */
    var AnimDriveDamping: String /* "AnimDriveDamping" */
    var EWeightMapTargetCommon_MAX: String /* "EWeightMapTargetCommon_MAX" */
}

external open class ClothParameterMask_Legacy {
    open var MaskName: String
    open var CurrentTarget: String /* "None" | "MaxDistance" | "BackstopDistance" | "BackstopRadius" | "AnimDriveStiffness" | "AnimDriveDamping" | "EWeightMapTargetCommon_MAX" */
    open var MaxValue: Number
    open var MinValue: Number
    open var Values: Array<Number>
    open var bEnabled: Boolean
    open fun clone(): ClothParameterMask_Legacy

    companion object {
        fun C(Other: UObject): ClothParameterMask_Legacy
        fun C(Other: Any): ClothParameterMask_Legacy
    }
}

external open class ClothLODDataCommon {
    open var PhysicalMeshData: ClothPhysicalMeshData
    open var CollisionData: ClothCollisionData
    open var bUseMultipleInfluences: Boolean
    open var SkinningKernelRadius: Number
    open var ParameterMasks: Array<ClothParameterMask_Legacy>
    open var PointWeightMaps: Array<PointWeightMap>
    open fun clone(): ClothLODDataCommon

    companion object {
        fun C(Other: UObject): ClothLODDataCommon
        fun C(Other: Any): ClothLODDataCommon
    }
}

external open class ClothConfig_Legacy {
    open var WindMethod: String /* "Legacy" | "Accurate" | "EClothingWindMethod_MAX" */
    open var VerticalConstraintConfig: ClothConstraintSetup_Legacy
    open var HorizontalConstraintConfig: ClothConstraintSetup_Legacy
    open var BendConstraintConfig: ClothConstraintSetup_Legacy
    open var ShearConstraintConfig: ClothConstraintSetup_Legacy
    open var SelfCollisionRadius: Number
    open var SelfCollisionStiffness: Number
    open var SelfCollisionCullScale: Number
    open var Damping: Vector
    open var Friction: Number
    open var WindDragCoefficient: Number
    open var WindLiftCoefficient: Number
    open var LinearDrag: Vector
    open var AngularDrag: Vector
    open var LinearInertiaScale: Vector
    open var AngularInertiaScale: Vector
    open var CentrifugalInertiaScale: Vector
    open var SolverFrequency: Number
    open var StiffnessFrequency: Number
    open var GravityScale: Number
    open var GravityOverride: Vector
    open var bUseGravityOverride: Boolean
    open var TetherStiffness: Number
    open var TetherLimit: Number
    open var CollisionThickness: Number
    open var AnimDriveSpringStiffness: Number
    open var AnimDriveDamperStiffness: Number
    open fun clone(): ClothConfig_Legacy

    companion object {
        fun C(Other: UObject): ClothConfig_Legacy
        fun C(Other: Any): ClothConfig_Legacy
    }
}

external open class ClothingAssetCommon : ClothingAssetBase {
    constructor()
    constructor(Outer: UObject)
    open var PhysicsAsset: PhysicsAsset
    open var ClothConfigs: Any
    open var ClothSharedSimConfig: ClothConfigBase
    open var ClothSimConfig: ClothConfigBase
    open var ChaosClothSimConfig: ClothConfigBase
    open var ClothLODData: Array<ClothLODDataCommon_Legacy>
    open var LODData: Array<ClothLODDataCommon>
    open var LodMap: Array<Number>
    open var UsedBoneNames: Array<String>
    open var UsedBoneIndices: Array<Number>
    open var ReferenceBoneIndex: Number
    open var CustomData: ClothingAssetCustomData
    open var ClothConfig: ClothConfig_Legacy

    companion object {
        fun Load(ResourceName: String): ClothingAssetCommon
        fun Find(Outer: UObject, ResourceName: String): ClothingAssetCommon
        fun GetDefaultObject(): ClothingAssetCommon
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClothingAssetCommon
        fun C(Other: UObject): ClothingAssetCommon
        fun C(Other: Any): ClothingAssetCommon
    }
}

external open class PreviewSceneProfile {
    open var ProfileName: String
    open var bSharedProfile: Boolean
    open var bUseSkyLighting: Boolean
    open var DirectionalLightIntensity: Number
    open var DirectionalLightColor: LinearColor
    open var SkyLightIntensity: Number
    open var bRotateLightingRig: Boolean
    open var bShowEnvironment: Boolean
    open var bShowFloor: Boolean
    open var EnvironmentColor: LinearColor
    open var EnvironmentIntensity: Number
    open var EnvironmentCubeMap: TextureCube
    open var EnvironmentCubeMapPath: String
    open var bPostProcessingEnabled: Boolean
    open var PostProcessingSettings: PostProcessSettings
    open var LightingRigRotation: Number
    open var RotationSpeed: Number
    open var DirectionalLightRotation: Rotator
    open fun clone(): PreviewSceneProfile

    companion object {
        fun C(Other: UObject): PreviewSceneProfile
        fun C(Other: Any): PreviewSceneProfile
    }
}

external open class LocalProfiles : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Profiles: Array<PreviewSceneProfile>

    companion object {
        fun Load(ResourceName: String): LocalProfiles
        fun Find(Outer: UObject, ResourceName: String): LocalProfiles
        fun GetDefaultObject(): LocalProfiles
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LocalProfiles
        fun C(Other: UObject): LocalProfiles
        fun C(Other: Any): LocalProfiles
    }
}

external open class SharedProfiles : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Profiles: Array<PreviewSceneProfile>

    companion object {
        fun Load(ResourceName: String): SharedProfiles
        fun Find(Outer: UObject, ResourceName: String): SharedProfiles
        fun GetDefaultObject(): SharedProfiles
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SharedProfiles
        fun C(Other: UObject): SharedProfiles
        fun C(Other: Any): SharedProfiles
    }
}

external open class AssetViewerSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Profiles: Array<PreviewSceneProfile>

    companion object {
        fun Load(ResourceName: String): AssetViewerSettings
        fun Find(Outer: UObject, ResourceName: String): AssetViewerSettings
        fun GetDefaultObject(): AssetViewerSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AssetViewerSettings
        fun C(Other: UObject): AssetViewerSettings
        fun C(Other: Any): AssetViewerSettings
    }
}

external open class PropertyEntry {
    open var Property: String /* "MP_EmissiveColor" | "MP_Opacity" | "MP_OpacityMask" | "MP_DiffuseColor" | "MP_SpecularColor" | "MP_BaseColor" | "MP_Metallic" | "MP_Specular" | "MP_Roughness" | "MP_Anisotropy" | "MP_Normal" | "MP_Tangent" | "MP_WorldPositionOffset" | "MP_WorldDisplacement" | "MP_TessellationMultiplier" | "MP_SubsurfaceColor" | "MP_CustomData0" | "MP_CustomData1" | "MP_AmbientOcclusion" | "MP_Refraction" | "MP_CustomizedUVs0" | "MP_CustomizedUVs1" | "MP_CustomizedUVs2" | "MP_CustomizedUVs3" | "MP_CustomizedUVs4" | "MP_CustomizedUVs5" | "MP_CustomizedUVs6" | "MP_CustomizedUVs7" | "MP_PixelDepthOffset" | "MP_ShadingModel" | "MP_MaterialAttributes" | "MP_CustomOutput" | "MP_MAX" */
    open var bUseCustomSize: Boolean
    open var CustomSize: IntPoint
    open var bUseConstantValue: Boolean
    open var ConstantValue: Number
    open fun clone(): PropertyEntry

    companion object {
        fun C(Other: UObject): PropertyEntry
        fun C(Other: Any): PropertyEntry
    }
}

external open class MaterialOptions : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Properties: Array<PropertyEntry>
    open var TextureSize: IntPoint
    open var LODIndices: Array<Number>
    open var bUseMeshData: Boolean
    open var bUseSpecificUVIndex: Boolean
    open var TextureCoordinateIndex: Number

    companion object {
        fun Load(ResourceName: String): MaterialOptions
        fun Find(Outer: UObject, ResourceName: String): MaterialOptions
        fun GetDefaultObject(): MaterialOptions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialOptions
        fun C(Other: UObject): MaterialOptions
        fun C(Other: Any): MaterialOptions
    }
}

external open class AssetBakeOptions : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AssetBakeOptions
        fun Find(Outer: UObject, ResourceName: String): AssetBakeOptions
        fun GetDefaultObject(): AssetBakeOptions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AssetBakeOptions
        fun C(Other: UObject): AssetBakeOptions
        fun C(Other: Any): AssetBakeOptions
    }
}

external object EMaterialBakeMethod {
    var IndividualMaterial: String /* "IndividualMaterial" */
    var AtlasMaterial: String /* "AtlasMaterial" */
    var BinnedMaterial: String /* "BinnedMaterial" */
    var EMaterialBakeMethod_MAX: String /* "EMaterialBakeMethod_MAX" */
}

external open class MaterialMergeOptions : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Method: String /* "IndividualMaterial" | "AtlasMaterial" | "BinnedMaterial" | "EMaterialBakeMethod_MAX" */
    open var BlendMode: String /* "BLEND_Opaque" | "BLEND_Masked" | "BLEND_Translucent" | "BLEND_Additive" | "BLEND_Modulate" | "BLEND_AlphaComposite" | "BLEND_AlphaHoldout" | "BLEND_MAX" */

    companion object {
        fun Load(ResourceName: String): MaterialMergeOptions
        fun Find(Outer: UObject, ResourceName: String): MaterialMergeOptions
        fun GetDefaultObject(): MaterialMergeOptions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialMergeOptions
        fun C(Other: UObject): MaterialMergeOptions
        fun C(Other: Any): MaterialMergeOptions
    }
}

external open class MaterialInstanceConstant : MaterialInstance {
    constructor()
    constructor(Outer: UObject)
    open var ParameterStateId: Guid
    open var PhysMaterialMask: PhysicalMaterialMask
    open fun GetVectorParameterValue(ParameterName: String): LinearColor
    open fun GetTextureParameterValue(ParameterName: String): Texture
    open fun GetScalarParameterValue(ParameterName: String): Number
    open fun ClearAllMaterialInstanceParameters()
    open fun GetMaterialInstanceScalarParameterValue(ParameterName: String): Number
    open fun GetMaterialInstanceStaticSwitchParameterValue(ParameterName: String): Boolean
    open fun GetMaterialInstanceTextureParameterValue(ParameterName: String): Texture
    open fun GetMaterialInstanceVectorParameterValue(ParameterName: String): LinearColor
    open fun SetMaterialInstanceParent(NewParent: MaterialInterface)
    open fun SetMaterialInstanceScalarParameterValue(ParameterName: String, Value: Number): Boolean
    open fun SetMaterialInstanceTextureParameterValue(ParameterName: String, Value: Texture): Boolean
    open fun SetMaterialInstanceVectorParameterValue(ParameterName: String, Value: LinearColor): Boolean
    open fun UpdateMaterialInstance()

    companion object {
        fun Load(ResourceName: String): MaterialInstanceConstant
        fun Find(Outer: UObject, ResourceName: String): MaterialInstanceConstant
        fun GetDefaultObject(): MaterialInstanceConstant
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialInstanceConstant
        fun C(Other: UObject): MaterialInstanceConstant
        fun C(Other: Any): MaterialInstanceConstant
        fun ClearAllMaterialInstanceParameters(Instance: MaterialInstanceConstant)
        fun GetMaterialInstanceScalarParameterValue(Instance: MaterialInstanceConstant, ParameterName: String): Number
        fun GetMaterialInstanceStaticSwitchParameterValue(Instance: MaterialInstanceConstant, ParameterName: String): Boolean
        fun GetMaterialInstanceTextureParameterValue(Instance: MaterialInstanceConstant, ParameterName: String): Texture
        fun GetMaterialInstanceVectorParameterValue(Instance: MaterialInstanceConstant, ParameterName: String): LinearColor
        fun SetMaterialInstanceParent(Instance: MaterialInstanceConstant, NewParent: MaterialInterface)
        fun SetMaterialInstanceScalarParameterValue(Instance: MaterialInstanceConstant, ParameterName: String, Value: Number): Boolean
        fun SetMaterialInstanceTextureParameterValue(Instance: MaterialInstanceConstant, ParameterName: String, Value: Texture): Boolean
        fun SetMaterialInstanceVectorParameterValue(Instance: MaterialInstanceConstant, ParameterName: String, Value: LinearColor): Boolean
        fun UpdateMaterialInstance(Instance: MaterialInstanceConstant)
    }
}

external interface `T$603` {
    var ParameterNames: Array<String>
}

external interface `T$604` {
    var ParameterNames: Array<String>
}

external interface `T$605` {
    var ParameterNames: Array<String>
}

external interface `T$606` {
    var ParameterNames: Array<String>
}

external interface `T$607` {
    var ChildInstances: Array<AssetData>
}

external open class MaterialEditingLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialEditingLibrary
        fun Find(Outer: UObject, ResourceName: String): MaterialEditingLibrary
        fun GetDefaultObject(): MaterialEditingLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialEditingLibrary
        fun UpdateMaterialInstance(Instance: MaterialInstanceConstant)
        fun UpdateMaterialFunction(MaterialFunction: MaterialFunctionInterface, PreviewMaterial: Material)
        fun SetMaterialUsage(Material: Material, Usage: String /* "MATUSAGE_SkeletalMesh" | "MATUSAGE_ParticleSprites" | "MATUSAGE_BeamTrails" | "MATUSAGE_MeshParticles" | "MATUSAGE_StaticLighting" | "MATUSAGE_MorphTargets" | "MATUSAGE_SplineMesh" | "MATUSAGE_InstancedStaticMeshes" | "MATUSAGE_GeometryCollections" | "MATUSAGE_Clothing" | "MATUSAGE_NiagaraSprites" | "MATUSAGE_NiagaraRibbons" | "MATUSAGE_NiagaraMeshParticles" | "MATUSAGE_GeometryCache" | "MATUSAGE_Water" | "MATUSAGE_HairStrands" | "MATUSAGE_LidarPointCloud" | "MATUSAGE_VirtualHeightfieldMesh" | "MATUSAGE_MAX" */, bNeedsRecompile: Boolean = definedExternally): `T$75`
        fun SetMaterialInstanceVectorParameterValue(Instance: MaterialInstanceConstant, ParameterName: String, Value: LinearColor): Boolean
        fun SetMaterialInstanceTextureParameterValue(Instance: MaterialInstanceConstant, ParameterName: String, Value: Texture): Boolean
        fun SetMaterialInstanceScalarParameterValue(Instance: MaterialInstanceConstant, ParameterName: String, Value: Number): Boolean
        fun SetMaterialInstanceParent(Instance: MaterialInstanceConstant, NewParent: MaterialInterface)
        fun RecompileMaterial(Material: Material)
        fun LayoutMaterialFunctionExpressions(MaterialFunction: MaterialFunction)
        fun LayoutMaterialExpressions(Material: Material)
        fun HasMaterialUsage(Material: Material, Usage: String /* "MATUSAGE_SkeletalMesh" | "MATUSAGE_ParticleSprites" | "MATUSAGE_BeamTrails" | "MATUSAGE_MeshParticles" | "MATUSAGE_StaticLighting" | "MATUSAGE_MorphTargets" | "MATUSAGE_SplineMesh" | "MATUSAGE_InstancedStaticMeshes" | "MATUSAGE_GeometryCollections" | "MATUSAGE_Clothing" | "MATUSAGE_NiagaraSprites" | "MATUSAGE_NiagaraRibbons" | "MATUSAGE_NiagaraMeshParticles" | "MATUSAGE_GeometryCache" | "MATUSAGE_Water" | "MATUSAGE_HairStrands" | "MATUSAGE_LidarPointCloud" | "MATUSAGE_VirtualHeightfieldMesh" | "MATUSAGE_MAX" */): Boolean
        fun GetVectorParameterSource(Material: MaterialInterface, ParameterName: String, ParameterSource: SoftObjectPath = definedExternally): `T$78`
        fun GetVectorParameterNames(Material: MaterialInterface, ParameterNames: Array<String> = definedExternally): `T$603`
        fun GetUsedTextures(Material: Material): Array<Texture>
        fun GetTextureParameterSource(Material: MaterialInterface, ParameterName: String, ParameterSource: SoftObjectPath = definedExternally): `T$78`
        fun GetTextureParameterNames(Material: MaterialInterface, ParameterNames: Array<String> = definedExternally): `T$604`
        fun GetStatistics(Material: MaterialInterface): MaterialStatistics
        fun GetStaticSwitchParameterSource(Material: MaterialInterface, ParameterName: String, ParameterSource: SoftObjectPath = definedExternally): `T$78`
        fun GetStaticSwitchParameterNames(Material: MaterialInterface, ParameterNames: Array<String> = definedExternally): `T$605`
        fun GetScalarParameterSource(Material: MaterialInterface, ParameterName: String, ParameterSource: SoftObjectPath = definedExternally): `T$78`
        fun GetScalarParameterNames(Material: MaterialInterface, ParameterNames: Array<String> = definedExternally): `T$606`
        fun GetNumMaterialExpressionsInFunction(MaterialFunction: MaterialFunction): Number
        fun GetNumMaterialExpressions(Material: Material): Number
        fun GetMaterialSelectedNodes(Material: Material): Any
        fun GetMaterialPropertyInputNode(Material: Material, Property: String /* "MP_EmissiveColor" | "MP_Opacity" | "MP_OpacityMask" | "MP_DiffuseColor" | "MP_SpecularColor" | "MP_BaseColor" | "MP_Metallic" | "MP_Specular" | "MP_Roughness" | "MP_Anisotropy" | "MP_Normal" | "MP_Tangent" | "MP_WorldPositionOffset" | "MP_WorldDisplacement" | "MP_TessellationMultiplier" | "MP_SubsurfaceColor" | "MP_CustomData0" | "MP_CustomData1" | "MP_AmbientOcclusion" | "MP_Refraction" | "MP_CustomizedUVs0" | "MP_CustomizedUVs1" | "MP_CustomizedUVs2" | "MP_CustomizedUVs3" | "MP_CustomizedUVs4" | "MP_CustomizedUVs5" | "MP_CustomizedUVs6" | "MP_CustomizedUVs7" | "MP_PixelDepthOffset" | "MP_ShadingModel" | "MP_MaterialAttributes" | "MP_CustomOutput" | "MP_MAX" */): MaterialExpression
        fun GetMaterialInstanceVectorParameterValue(Instance: MaterialInstanceConstant, ParameterName: String): LinearColor
        fun GetMaterialInstanceTextureParameterValue(Instance: MaterialInstanceConstant, ParameterName: String): Texture
        fun GetMaterialInstanceStaticSwitchParameterValue(Instance: MaterialInstanceConstant, ParameterName: String): Boolean
        fun GetMaterialInstanceScalarParameterValue(Instance: MaterialInstanceConstant, ParameterName: String): Number
        fun GetMaterialDefaultVectorParameterValue(Material: Material, ParameterName: String): LinearColor
        fun GetMaterialDefaultTextureParameterValue(Material: Material, ParameterName: String): Texture
        fun GetMaterialDefaultStaticSwitchParameterValue(Material: Material, ParameterName: String): Boolean
        fun GetMaterialDefaultScalarParameterValue(Material: Material, ParameterName: String): Number
        fun GetInputsForMaterialExpression(Material: Material, MaterialExpression: MaterialExpression): Array<MaterialExpression>
        fun GetChildInstances(Parent: MaterialInterface, ChildInstances: Array<AssetData> = definedExternally): `T$607`
        fun DeleteMaterialExpressionInFunction(MaterialFunction: MaterialFunction, Expression: MaterialExpression)
        fun DeleteMaterialExpression(Material: Material, Expression: MaterialExpression)
        fun DeleteAllMaterialExpressionsInFunction(MaterialFunction: MaterialFunction)
        fun DeleteAllMaterialExpressions(Material: Material)
        fun CreateMaterialExpressionInFunction(MaterialFunction: MaterialFunction, ExpressionClass: UnrealEngineClass, NodePosX: Number, NodePosY: Number): MaterialExpression
        fun CreateMaterialExpression(Material: Material, ExpressionClass: UnrealEngineClass, NodePosX: Number, NodePosY: Number): MaterialExpression
        fun ConnectMaterialProperty(FromExpression: MaterialExpression, FromOutputName: String, Property: String /* "MP_EmissiveColor" | "MP_Opacity" | "MP_OpacityMask" | "MP_DiffuseColor" | "MP_SpecularColor" | "MP_BaseColor" | "MP_Metallic" | "MP_Specular" | "MP_Roughness" | "MP_Anisotropy" | "MP_Normal" | "MP_Tangent" | "MP_WorldPositionOffset" | "MP_WorldDisplacement" | "MP_TessellationMultiplier" | "MP_SubsurfaceColor" | "MP_CustomData0" | "MP_CustomData1" | "MP_AmbientOcclusion" | "MP_Refraction" | "MP_CustomizedUVs0" | "MP_CustomizedUVs1" | "MP_CustomizedUVs2" | "MP_CustomizedUVs3" | "MP_CustomizedUVs4" | "MP_CustomizedUVs5" | "MP_CustomizedUVs6" | "MP_CustomizedUVs7" | "MP_PixelDepthOffset" | "MP_ShadingModel" | "MP_MaterialAttributes" | "MP_CustomOutput" | "MP_MAX" */): Boolean
        fun ConnectMaterialExpressions(FromExpression: MaterialExpression, FromOutputName: String, ToExpression: MaterialExpression, ToInputName: String): Boolean
        fun ClearAllMaterialInstanceParameters(Instance: MaterialInstanceConstant)
        fun C(Other: UObject): MaterialEditingLibrary
        fun C(Other: Any): MaterialEditingLibrary
    }
}

external open class MaterialEditorMenuContext : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialEditorMenuContext
        fun Find(Outer: UObject, ResourceName: String): MaterialEditorMenuContext
        fun GetDefaultObject(): MaterialEditorMenuContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialEditorMenuContext
        fun C(Other: UObject): MaterialEditorMenuContext
        fun C(Other: Any): MaterialEditorMenuContext
    }
}

external open class MaterialEditorSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var MaliOfflineCompilerPath: FilePath
    open var DefaultPreviewWidth: Number
    open var DefaultPreviewHeight: Number

    companion object {
        fun Load(ResourceName: String): MaterialEditorSettings
        fun Find(Outer: UObject, ResourceName: String): MaterialEditorSettings
        fun GetDefaultObject(): MaterialEditorSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialEditorSettings
        fun C(Other: UObject): MaterialEditorSettings
        fun C(Other: Any): MaterialEditorSettings
    }
}

external open class CurveEditorFilterBase : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CurveEditorFilterBase
        fun Find(Outer: UObject, ResourceName: String): CurveEditorFilterBase
        fun GetDefaultObject(): CurveEditorFilterBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CurveEditorFilterBase
        fun C(Other: UObject): CurveEditorFilterBase
        fun C(Other: Any): CurveEditorFilterBase
    }
}

external open class CurveEditorBakeFilter : CurveEditorFilterBase {
    constructor()
    constructor(Outer: UObject)
    open var bUseFrameBake: Boolean
    open var BakeIntervalInFrames: FrameNumber
    open var BakeIntervalInSeconds: Number

    companion object {
        fun Load(ResourceName: String): CurveEditorBakeFilter
        fun Find(Outer: UObject, ResourceName: String): CurveEditorBakeFilter
        fun GetDefaultObject(): CurveEditorBakeFilter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CurveEditorBakeFilter
        fun C(Other: UObject): CurveEditorBakeFilter
        fun C(Other: Any): CurveEditorBakeFilter
    }
}

external open class KeyPosition {
    open var InputValue: Any
    open var OutputValue: Any
    open fun clone(): KeyPosition

    companion object {
        fun C(Other: UObject): KeyPosition
        fun C(Other: Any): KeyPosition
    }
}

external open class KeyAttributes {
    open var bHasArriveTangent: Boolean
    open var bHasLeaveTangent: Boolean
    open var bHasInterpMode: Boolean
    open var bHasTangentMode: Boolean
    open var bHasTangentWeightMode: Boolean
    open var bHasArriveTangentWeight: Boolean
    open var bHasLeaveTangentWeight: Boolean
    open var ArriveTangent: Number
    open var LeaveTangent: Number
    open var InterpMode: String /* "RCIM_Linear" | "RCIM_Constant" | "RCIM_Cubic" | "RCIM_None" | "RCIM_MAX" */
    open var TangentMode: String /* "RCTM_Auto" | "RCTM_User" | "RCTM_Break" | "RCTM_None" | "RCTM_MAX" */
    open var TangentWeightMode: String /* "RCTWM_WeightedNone" | "RCTWM_WeightedArrive" | "RCTWM_WeightedLeave" | "RCTWM_WeightedBoth" | "RCTWM_MAX" */
    open var ArriveTangentWeight: Number
    open var LeaveTangentWeight: Number
    open fun clone(): KeyAttributes

    companion object {
        fun C(Other: UObject): KeyAttributes
        fun C(Other: Any): KeyAttributes
    }
}

external open class CurveEditorCopyableCurveKeys : UObject {
    constructor()
    constructor(Outer: UObject)
    open var KeyPositions: Array<KeyPosition>
    open var KeyAttributes: Array<KeyAttributes>
    open var ShortDisplayName: String
    open var LongDisplayName: String
    open var IntentionName: String

    companion object {
        fun Load(ResourceName: String): CurveEditorCopyableCurveKeys
        fun Find(Outer: UObject, ResourceName: String): CurveEditorCopyableCurveKeys
        fun GetDefaultObject(): CurveEditorCopyableCurveKeys
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CurveEditorCopyableCurveKeys
        fun C(Other: UObject): CurveEditorCopyableCurveKeys
        fun C(Other: Any): CurveEditorCopyableCurveKeys
    }
}

external open class CurveEditorCopyBuffer : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Curves: Array<CurveEditorCopyableCurveKeys>
    open var TimeOffset: Any
    open var bAbsolutePosition: Boolean

    companion object {
        fun Load(ResourceName: String): CurveEditorCopyBuffer
        fun Find(Outer: UObject, ResourceName: String): CurveEditorCopyBuffer
        fun GetDefaultObject(): CurveEditorCopyBuffer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CurveEditorCopyBuffer
        fun C(Other: UObject): CurveEditorCopyBuffer
        fun C(Other: Any): CurveEditorCopyBuffer
    }
}

external open class CurveEditorEulerFilter : CurveEditorFilterBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CurveEditorEulerFilter
        fun Find(Outer: UObject, ResourceName: String): CurveEditorEulerFilter
        fun GetDefaultObject(): CurveEditorEulerFilter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CurveEditorEulerFilter
        fun C(Other: UObject): CurveEditorEulerFilter
        fun C(Other: Any): CurveEditorEulerFilter
    }
}

external open class CurveEditorKeyProxy : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CurveEditorKeyProxy
        fun Find(Outer: UObject, ResourceName: String): CurveEditorKeyProxy
        fun GetDefaultObject(): CurveEditorKeyProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CurveEditorKeyProxy
        fun C(Other: UObject): CurveEditorKeyProxy
        fun C(Other: Any): CurveEditorKeyProxy
    }
}

external open class CurveEditorReduceFilter : CurveEditorFilterBase {
    constructor()
    constructor(Outer: UObject)
    open var Tolerance: Number

    companion object {
        fun Load(ResourceName: String): CurveEditorReduceFilter
        fun Find(Outer: UObject, ResourceName: String): CurveEditorReduceFilter
        fun GetDefaultObject(): CurveEditorReduceFilter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CurveEditorReduceFilter
        fun C(Other: UObject): CurveEditorReduceFilter
        fun C(Other: Any): CurveEditorReduceFilter
    }
}

external object ECurveEditorTangentVisibility {
    var AllTangents: String /* "AllTangents" */
    var SelectedKeys: String /* "SelectedKeys" */
    var NoTangents: String /* "NoTangents" */
    var ECurveEditorTangentVisibility_MAX: String /* "ECurveEditorTangentVisibility_MAX" */
}

external object ECurveEditorZoomPosition {
    var CurrentTime: String /* "CurrentTime" */
    var MousePosition: String /* "MousePosition" */
    var ECurveEditorZoomPosition_MAX: String /* "ECurveEditorZoomPosition_MAX" */
}

external open class CurveEditorSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bAutoFrameCurveEditor: Boolean
    open var bShowCurveEditorCurveToolTips: Boolean
    open var TangentVisibility: String /* "AllTangents" | "SelectedKeys" | "NoTangents" | "ECurveEditorTangentVisibility_MAX" */
    open var ZoomPosition: String /* "CurrentTime" | "MousePosition" | "ECurveEditorZoomPosition_MAX" */

    companion object {
        fun Load(ResourceName: String): CurveEditorSettings
        fun Find(Outer: UObject, ResourceName: String): CurveEditorSettings
        fun GetDefaultObject(): CurveEditorSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CurveEditorSettings
        fun C(Other: UObject): CurveEditorSettings
        fun C(Other: Any): CurveEditorSettings
    }
}

external open class RichCurveKeyProxy : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Value: RichCurveKey

    companion object {
        fun Load(ResourceName: String): RichCurveKeyProxy
        fun Find(Outer: UObject, ResourceName: String): RichCurveKeyProxy
        fun GetDefaultObject(): RichCurveKeyProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RichCurveKeyProxy
        fun C(Other: UObject): RichCurveKeyProxy
        fun C(Other: Any): RichCurveKeyProxy
    }
}

external open class CameraRig_Crane(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var CranePitch: Number
    open var CraneYaw: Number
    open var CraneArmLength: Number
    open var bLockMountPitch: Boolean
    open var bLockMountYaw: Boolean
    open var TransformComponent: SceneComponent
    open var CraneYawControl: SceneComponent
    open var CranePitchControl: SceneComponent
    open var CraneCameraMount: SceneComponent
    open var PreviewMesh_CraneArm: StaticMeshComponent
    open var PreviewMesh_CraneBase: StaticMeshComponent
    open var PreviewMesh_CraneMount: StaticMeshComponent
    open var PreviewMesh_CraneCounterWeight: StaticMeshComponent

    companion object {
        fun GetDefaultObject(): CameraRig_Crane
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CameraRig_Crane
        fun C(Other: UObject): CameraRig_Crane
        fun C(Other: Any): CameraRig_Crane
    }
}

external open class CameraRig_Rail(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var CurrentPositionOnRail: Number
    open var bLockOrientationToRail: Boolean
    open var bShowRailVisualization: Boolean
    open var PreviewMeshScale: Number
    open var TransformComponent: SceneComponent
    open var RailSplineComponent: SplineComponent
    open var RailCameraMount: SceneComponent
    open var PreviewMesh_Rail: SplineMeshComponent
    open var PreviewRailMeshSegments: Array<SplineMeshComponent>
    open var PreviewRailStaticMesh: StaticMesh
    open var PreviewMesh_Mount: StaticMeshComponent
    open fun GetRailSplineComponent(): SplineComponent

    companion object {
        fun GetDefaultObject(): CameraRig_Rail
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CameraRig_Rail
        fun C(Other: UObject): CameraRig_Rail
        fun C(Other: Any): CameraRig_Rail
    }
}

external open class CameraLookatTrackingSettings {
    open var bEnableLookAtTracking: Boolean
    open var bDrawDebugLookAtTrackingPosition: Boolean
    open var LookAtTrackingInterpSpeed: Number
    open var ActorToTrack: Actor
    open var RelativeOffset: Vector
    open var bAllowRoll: Boolean
    open fun clone(): CameraLookatTrackingSettings

    companion object {
        fun C(Other: UObject): CameraLookatTrackingSettings
        fun C(Other: Any): CameraLookatTrackingSettings
    }
}

external open class NamedFilmbackPreset {
    open var Name: String
    open var FilmbackSettings: CameraFilmbackSettings
    open fun clone(): NamedFilmbackPreset

    companion object {
        fun C(Other: UObject): NamedFilmbackPreset
        fun C(Other: Any): NamedFilmbackPreset
    }
}

external open class NamedLensPreset {
    open var Name: String
    open var LensSettings: CameraLensSettings
    open fun clone(): NamedLensPreset

    companion object {
        fun C(Other: UObject): NamedLensPreset
        fun C(Other: Any): NamedLensPreset
    }
}

external open class CineCameraComponent : CameraComponent {
    constructor()
    constructor(Outer: UObject)
    open var FilmbackSettings: CameraFilmbackSettings
    open var Filmback: CameraFilmbackSettings
    open var LensSettings: CameraLensSettings
    open var FocusSettings: CameraFocusSettings
    open var CurrentFocalLength: Number
    open var CurrentAperture: Number
    open var CurrentFocusDistance: Number
    open var CurrentHorizontalFOV: Number
    open var FocusPlaneVisualizationMesh: StaticMesh
    open var FocusPlaneVisualizationMaterial: Material
    open var DebugFocusPlaneComponent: StaticMeshComponent
    open var DebugFocusPlaneMID: MaterialInstanceDynamic
    open var FilmbackPresets: Array<NamedFilmbackPreset>
    open var LensPresets: Array<NamedLensPreset>
    open var DefaultFilmbackPresetName: String
    open var DefaultFilmbackPreset: String
    open var DefaultLensPresetName: String
    open var DefaultLensFocalLength: Number
    open var DefaultLensFStop: Number
    open fun SetLensPresetByName(InPresetName: String)
    open fun SetFilmbackPresetByName(InPresetName: String)
    open fun SetCurrentFocalLength(InFocalLength: Number)
    open fun GetVerticalFieldOfView(): Number
    open fun GetLensPresetName(): String
    open fun GetHorizontalFieldOfView(): Number
    open fun GetFilmbackPresetName(): String
    open fun GetDefaultFilmbackPresetName(): String

    companion object {
        fun Load(ResourceName: String): CineCameraComponent
        fun Find(Outer: UObject, ResourceName: String): CineCameraComponent
        fun GetDefaultObject(): CineCameraComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CineCameraComponent
        fun GetLensPresetsCopy(): Array<NamedLensPreset>
        fun GetFilmbackPresetsCopy(): Array<NamedFilmbackPreset>
        fun C(Other: UObject): CineCameraComponent
        fun C(Other: Any): CineCameraComponent
    }
}

external open class CineCameraActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : CameraActor {
    open var LookatTrackingSettings: CameraLookatTrackingSettings
    open fun GetCineCameraComponent(): CineCameraComponent

    companion object {
        fun GetDefaultObject(): CineCameraActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CineCameraActor
        fun C(Other: UObject): CineCameraActor
        fun C(Other: Any): CineCameraActor
    }
}

external object EHardwareClass {
    var Unspecified: String /* "Unspecified" */
    var Desktop: String /* "Desktop" */
    var Mobile: String /* "Mobile" */
    var EHardwareClass_MAX: String /* "EHardwareClass_MAX" */
}

external object EGraphicsPreset {
    var Unspecified: String /* "Unspecified" */
    var Maximum: String /* "Maximum" */
    var Scalable: String /* "Scalable" */
    var EGraphicsPreset_MAX: String /* "EGraphicsPreset_MAX" */
}

external open class HardwareTargetingSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var TargetedHardwareClass: String /* "Unspecified" | "Desktop" | "Mobile" | "EHardwareClass_MAX" */
    open var AppliedTargetedHardwareClass: String /* "Unspecified" | "Desktop" | "Mobile" | "EHardwareClass_MAX" */
    open var DefaultGraphicsPerformance: String /* "Unspecified" | "Maximum" | "Scalable" | "EGraphicsPreset_MAX" */
    open var AppliedDefaultGraphicsPerformance: String /* "Unspecified" | "Maximum" | "Scalable" | "EGraphicsPreset_MAX" */

    companion object {
        fun Load(ResourceName: String): HardwareTargetingSettings
        fun Find(Outer: UObject, ResourceName: String): HardwareTargetingSettings
        fun GetDefaultObject(): HardwareTargetingSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): HardwareTargetingSettings
        fun C(Other: UObject): HardwareTargetingSettings
        fun C(Other: Any): HardwareTargetingSettings
    }
}

external object EContentBrowserDataMenuContext_AddNewMenuDomain {
    var Toolbar: String /* "Toolbar" */
    var AssetView: String /* "AssetView" */
    var PathView: String /* "PathView" */
    var EContentBrowserDataMenuContext_MAX: String /* "EContentBrowserDataMenuContext_MAX" */
}

external open class ContentBrowserDataMenuContext_AddNewMenu : UObject {
    constructor()
    constructor(Outer: UObject)
    open var SelectedPaths: Array<String>
    open var OwnerDomain: String /* "Toolbar" | "AssetView" | "PathView" | "EContentBrowserDataMenuContext_MAX" */

    companion object {
        fun Load(ResourceName: String): ContentBrowserDataMenuContext_AddNewMenu
        fun Find(Outer: UObject, ResourceName: String): ContentBrowserDataMenuContext_AddNewMenu
        fun GetDefaultObject(): ContentBrowserDataMenuContext_AddNewMenu
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ContentBrowserDataMenuContext_AddNewMenu
        fun C(Other: UObject): ContentBrowserDataMenuContext_AddNewMenu
        fun C(Other: Any): ContentBrowserDataMenuContext_AddNewMenu
    }
}

external open class ContentBrowserItem {
    open fun clone(): ContentBrowserItem
    open fun GetDisplayName(): String
    open fun GetVirtualPath(): String
    open fun IsFile(): Boolean
    open fun IsFolder(): Boolean

    companion object {
        fun C(Other: UObject): ContentBrowserItem
        fun C(Other: Any): ContentBrowserItem
        fun GetDisplayName(Item: ContentBrowserItem): String
        fun GetVirtualPath(Item: ContentBrowserItem): String
        fun IsFile(Item: ContentBrowserItem): Boolean
        fun IsFolder(Item: ContentBrowserItem): Boolean
    }
}

external open class ContentBrowserDataMenuContext_FolderMenu : UObject {
    constructor()
    constructor(Outer: UObject)
    open var SelectedItems: Array<ContentBrowserItem>
    open var bCanBeModified: Boolean

    companion object {
        fun Load(ResourceName: String): ContentBrowserDataMenuContext_FolderMenu
        fun Find(Outer: UObject, ResourceName: String): ContentBrowserDataMenuContext_FolderMenu
        fun GetDefaultObject(): ContentBrowserDataMenuContext_FolderMenu
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ContentBrowserDataMenuContext_FolderMenu
        fun C(Other: UObject): ContentBrowserDataMenuContext_FolderMenu
        fun C(Other: Any): ContentBrowserDataMenuContext_FolderMenu
    }
}

external open class ContentBrowserDataMenuContext_FileMenu : UObject {
    constructor()
    constructor(Outer: UObject)
    open var SelectedItems: Array<ContentBrowserItem>
    open var bCanBeModified: Boolean

    companion object {
        fun Load(ResourceName: String): ContentBrowserDataMenuContext_FileMenu
        fun Find(Outer: UObject, ResourceName: String): ContentBrowserDataMenuContext_FileMenu
        fun GetDefaultObject(): ContentBrowserDataMenuContext_FileMenu
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ContentBrowserDataMenuContext_FileMenu
        fun C(Other: UObject): ContentBrowserDataMenuContext_FileMenu
        fun C(Other: Any): ContentBrowserDataMenuContext_FileMenu
    }
}

external open class ContentBrowserDataMenuContext_DragDropMenu : UObject {
    constructor()
    constructor(Outer: UObject)
    open var DropTargetItem: ContentBrowserItem
    open var DraggedItems: Array<ContentBrowserItem>
    open var bCanMove: Boolean
    open var bCanCopy: Boolean

    companion object {
        fun Load(ResourceName: String): ContentBrowserDataMenuContext_DragDropMenu
        fun Find(Outer: UObject, ResourceName: String): ContentBrowserDataMenuContext_DragDropMenu
        fun GetDefaultObject(): ContentBrowserDataMenuContext_DragDropMenu
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ContentBrowserDataMenuContext_DragDropMenu
        fun C(Other: UObject): ContentBrowserDataMenuContext_DragDropMenu
        fun C(Other: Any): ContentBrowserDataMenuContext_DragDropMenu
    }
}

external open class ContentBrowserDataSource : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ContentBrowserDataSource
        fun Find(Outer: UObject, ResourceName: String): ContentBrowserDataSource
        fun GetDefaultObject(): ContentBrowserDataSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ContentBrowserDataSource
        fun C(Other: UObject): ContentBrowserDataSource
        fun C(Other: Any): ContentBrowserDataSource
    }
}

external object EContentBrowserItemTypeFilter {
    var IncludeNone: String /* "IncludeNone" */
    var IncludeFolders: String /* "IncludeFolders" */
    var IncludeFiles: String /* "IncludeFiles" */
    var IncludeAll: String /* "IncludeAll" */
    var EContentBrowserItemTypeFilter_MAX: String /* "EContentBrowserItemTypeFilter_MAX" */
}

external object EContentBrowserItemCategoryFilter {
    var IncludeNone: String /* "IncludeNone" */
    var IncludeAssets: String /* "IncludeAssets" */
    var IncludeClasses: String /* "IncludeClasses" */
    var IncludeCollections: String /* "IncludeCollections" */
    var IncludeMisc: String /* "IncludeMisc" */
    var IncludeAll: String /* "IncludeAll" */
    var EContentBrowserItemCategoryFilter_MAX: String /* "EContentBrowserItemCategoryFilter_MAX" */
}

external object EContentBrowserItemAttributeFilter {
    var IncludeNone: String /* "IncludeNone" */
    var IncludeProject: String /* "IncludeProject" */
    var IncludeEngine: String /* "IncludeEngine" */
    var IncludePlugins: String /* "IncludePlugins" */
    var IncludeDeveloper: String /* "IncludeDeveloper" */
    var IncludeLocalized: String /* "IncludeLocalized" */
    var IncludeAll: String /* "IncludeAll" */
    var EContentBrowserItemAttributeFilter_MAX: String /* "EContentBrowserItemAttributeFilter_MAX" */
}

external open class ContentBrowserDataFilter {
    open var bRecursivePaths: Boolean
    open var ItemTypeFilter: String /* "IncludeNone" | "IncludeFolders" | "IncludeFiles" | "IncludeAll" | "EContentBrowserItemTypeFilter_MAX" */
    open var ItemCategoryFilter: String /* "IncludeNone" | "IncludeAssets" | "IncludeClasses" | "IncludeCollections" | "IncludeMisc" | "IncludeAll" | "EContentBrowserItemCategoryFilter_MAX" */
    open var ItemAttributeFilter: String /* "IncludeNone" | "IncludeProject" | "IncludeEngine" | "IncludePlugins" | "IncludeDeveloper" | "IncludeLocalized" | "IncludeAll" | "EContentBrowserItemAttributeFilter_MAX" */
    open fun clone(): ContentBrowserDataFilter

    companion object {
        fun C(Other: UObject): ContentBrowserDataFilter
        fun C(Other: Any): ContentBrowserDataFilter
    }
}

external open class ContentBrowserDataSubsystem : EditorSubsystem {
    constructor()
    constructor(Outer: UObject)
    open var EnabledDataSources: Array<String>
    open fun GetItemsUnderPath(InPath: String, InFilter: ContentBrowserDataFilter): Array<ContentBrowserItem>
    open fun GetItemsAtPath(InPath: String, InItemTypeFilter: String /* "IncludeNone" | "IncludeFolders" | "IncludeFiles" | "IncludeAll" | "EContentBrowserItemTypeFilter_MAX" */): Array<ContentBrowserItem>
    open fun GetItemAtPath(InPath: String, InItemTypeFilter: String /* "IncludeNone" | "IncludeFolders" | "IncludeFiles" | "IncludeAll" | "EContentBrowserItemTypeFilter_MAX" */): ContentBrowserItem
    open fun GetAvailableDataSources(): Array<String>
    open fun GetActiveDataSources(): Array<String>
    open fun DeactivateDataSource(Name: String): Boolean
    open fun DeactivateAllDataSources()
    open fun ActivateDataSource(Name: String): Boolean
    open fun ActivateAllDataSources()

    companion object {
        fun Load(ResourceName: String): ContentBrowserDataSubsystem
        fun Find(Outer: UObject, ResourceName: String): ContentBrowserDataSubsystem
        fun GetDefaultObject(): ContentBrowserDataSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ContentBrowserDataSubsystem
        fun C(Other: UObject): ContentBrowserDataSubsystem
        fun C(Other: Any): ContentBrowserDataSubsystem
    }
}

external open class ContentBrowserItemLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ContentBrowserItemLibrary
        fun Find(Outer: UObject, ResourceName: String): ContentBrowserItemLibrary
        fun GetDefaultObject(): ContentBrowserItemLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ContentBrowserItemLibrary
        fun IsFolder(Item: ContentBrowserItem): Boolean
        fun IsFile(Item: ContentBrowserItem): Boolean
        fun GetVirtualPath(Item: ContentBrowserItem): String
        fun GetDisplayName(Item: ContentBrowserItem): String
        fun C(Other: UObject): ContentBrowserItemLibrary
        fun C(Other: Any): ContentBrowserItemLibrary
    }
}

external open class ClassViewerProjectSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var InternalOnlyPaths: Array<DirectoryPath>
    open var InternalOnlyClasses: Array<SoftClassPath>

    companion object {
        fun Load(ResourceName: String): ClassViewerProjectSettings
        fun Find(Outer: UObject, ResourceName: String): ClassViewerProjectSettings
        fun GetDefaultObject(): ClassViewerProjectSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClassViewerProjectSettings
        fun C(Other: UObject): ClassViewerProjectSettings
        fun C(Other: Any): ClassViewerProjectSettings
    }
}

external open class ClassTemplate : UObject {
    constructor()
    constructor(Outer: UObject)
    open var GeneratedBaseClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): ClassTemplate
        fun Find(Outer: UObject, ResourceName: String): ClassTemplate
        fun GetDefaultObject(): ClassTemplate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClassTemplate
        fun C(Other: UObject): ClassTemplate
        fun C(Other: Any): ClassTemplate
    }
}

external open class PluginClassTemplate : ClassTemplate {
    constructor()
    constructor(Outer: UObject)
    open var PluginName: String

    companion object {
        fun Load(ResourceName: String): PluginClassTemplate
        fun Find(Outer: UObject, ResourceName: String): PluginClassTemplate
        fun GetDefaultObject(): PluginClassTemplate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PluginClassTemplate
        fun C(Other: UObject): PluginClassTemplate
        fun C(Other: Any): PluginClassTemplate
    }
}

external open class ClassTemplateEditorSubsystem : EditorSubsystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ClassTemplateEditorSubsystem
        fun Find(Outer: UObject, ResourceName: String): ClassTemplateEditorSubsystem
        fun GetDefaultObject(): ClassTemplateEditorSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClassTemplateEditorSubsystem
        fun C(Other: UObject): ClassTemplateEditorSubsystem
        fun C(Other: Any): ClassTemplateEditorSubsystem
    }
}

external open class LocalizedTemplateString {
    open var Language: String
    open var text: String
    open fun clone(): LocalizedTemplateString

    companion object {
        fun C(Other: UObject): LocalizedTemplateString
        fun C(Other: Any): LocalizedTemplateString
    }
}

external open class TemplateFolderRename {
    open var From: String
    open var To: String
    open fun clone(): TemplateFolderRename

    companion object {
        fun C(Other: UObject): TemplateFolderRename
        fun C(Other: Any): TemplateFolderRename
    }
}

external open class TemplateReplacement {
    open var Extensions: Array<String>
    open var From: String
    open var To: String
    open var bCaseSensitive: Boolean
    open fun clone(): TemplateReplacement

    companion object {
        fun C(Other: UObject): TemplateReplacement
        fun C(Other: Any): TemplateReplacement
    }
}

external object ETemplateSetting {
    var Languages: String /* "Languages" */
    var HardwareTarget: String /* "HardwareTarget" */
    var GraphicsPreset: String /* "GraphicsPreset" */
    var StarterContent: String /* "StarterContent" */
    var XR: String /* "XR" */
    var Raytracing: String /* "Raytracing" */
    var All: String /* "All" */
    var ETemplateSetting_MAX: String /* "ETemplateSetting_MAX" */
}

external object EFeaturePackDetailLevel {
    var Standard: String /* "Standard" */
    var High: String /* "High" */
    var EFeaturePackDetailLevel_MAX: String /* "EFeaturePackDetailLevel_MAX" */
}

external open class FeaturePackLevelSet {
    open var DetailLevels: Array<String /* "Standard" | "High" | "EFeaturePackDetailLevel_MAX" */>
    open var MountName: String
    open fun clone(): FeaturePackLevelSet

    companion object {
        fun C(Other: UObject): FeaturePackLevelSet
        fun C(Other: Any): FeaturePackLevelSet
    }
}

external open class TemplateProjectDefs : UObject {
    constructor()
    constructor(Outer: UObject)
    open var LocalizedDisplayNames: Array<LocalizedTemplateString>
    open var LocalizedDescriptions: Array<LocalizedTemplateString>
    open var FoldersToIgnore: Array<String>
    open var FilesToIgnore: Array<String>
    open var FolderRenames: Array<TemplateFolderRename>
    open var FilenameReplacements: Array<TemplateReplacement>
    open var ReplacementsInFiles: Array<TemplateReplacement>
    open var SortKey: String
    open var Categories: Array<String>
    open var ClassTypes: String
    open var AssetTypes: String
    open var bAllowProjectCreation: Boolean
    open var bIsEnterprise: Boolean
    open var bIsBlank: Boolean
    open var HiddenSettings: Array<String /* "Languages" | "HardwareTarget" | "GraphicsPreset" | "StarterContent" | "XR" | "Raytracing" | "All" | "ETemplateSetting_MAX" */>
    open var PacksToInclude: Array<String>
    open var EditDetailLevelPreference: String /* "Standard" | "High" | "EFeaturePackDetailLevel_MAX" */
    open var SharedContentPacks: Array<FeaturePackLevelSet>
    open var StarterContent: String

    companion object {
        fun Load(ResourceName: String): TemplateProjectDefs
        fun Find(Outer: UObject, ResourceName: String): TemplateProjectDefs
        fun GetDefaultObject(): TemplateProjectDefs
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TemplateProjectDefs
        fun C(Other: UObject): TemplateProjectDefs
        fun C(Other: Any): TemplateProjectDefs
    }
}

external open class DefaultTemplateProjectDefs : TemplateProjectDefs {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DefaultTemplateProjectDefs
        fun Find(Outer: UObject, ResourceName: String): DefaultTemplateProjectDefs
        fun GetDefaultObject(): DefaultTemplateProjectDefs
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DefaultTemplateProjectDefs
        fun C(Other: UObject): DefaultTemplateProjectDefs
        fun C(Other: Any): DefaultTemplateProjectDefs
    }
}

external open class TemplateCategoryDef {
    open var Key: String
    open var LocalizedDisplayNames: Array<LocalizedTemplateString>
    open var LocalizedDescriptions: Array<LocalizedTemplateString>
    open var Icon: String
    open var IsMajorCategory: Boolean
    open fun clone(): TemplateCategoryDef

    companion object {
        fun C(Other: UObject): TemplateCategoryDef
        fun C(Other: Any): TemplateCategoryDef
    }
}

external open class TemplateCategories : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Categories: Array<TemplateCategoryDef>

    companion object {
        fun Load(ResourceName: String): TemplateCategories
        fun Find(Outer: UObject, ResourceName: String): TemplateCategories
        fun GetDefaultObject(): TemplateCategories
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TemplateCategories
        fun C(Other: UObject): TemplateCategories
        fun C(Other: Any): TemplateCategories
    }
}

external open class SourceControlState {
    open var Filename: String
    open var bIsValid: Boolean
    open var bIsUnknown: Boolean
    open var bCanCheckIn: Boolean
    open var bCanCheckOut: Boolean
    open var bIsCheckedOut: Boolean
    open var bIsCurrent: Boolean
    open var bIsSourceControlled: Boolean
    open var bIsAdded: Boolean
    open var bIsDeleted: Boolean
    open var bIsIgnored: Boolean
    open var bCanEdit: Boolean
    open var bCanDelete: Boolean
    open var bIsModified: Boolean
    open var bCanAdd: Boolean
    open var bIsConflicted: Boolean
    open var bCanRevert: Boolean
    open var bIsCheckedOutOther: Boolean
    open var CheckedOutOther: String
    open fun clone(): SourceControlState

    companion object {
        fun C(Other: UObject): SourceControlState
        fun C(Other: Any): SourceControlState
    }
}

external open class SourceControlHelpers : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SourceControlHelpers
        fun Find(Outer: UObject, ResourceName: String): SourceControlHelpers
        fun GetDefaultObject(): SourceControlHelpers
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SourceControlHelpers
        fun SyncFiles(InFiles: Array<String>, bSilent: Boolean): Boolean
        fun SyncFile(InFile: String, bSilent: Boolean): Boolean
        fun RevertUnchangedFiles(InFiles: Array<String>, bSilent: Boolean): Boolean
        fun RevertUnchangedFile(InFile: String, bSilent: Boolean): Boolean
        fun RevertFiles(InFiles: Array<String>, bSilent: Boolean): Boolean
        fun RevertFile(InFile: String, bSilent: Boolean): Boolean
        fun QueryFileState(InFile: String, bSilent: Boolean): SourceControlState
        fun MarkFilesForDelete(InFiles: Array<String>, bSilent: Boolean): Boolean
        fun MarkFilesForAdd(InFiles: Array<String>, bSilent: Boolean): Boolean
        fun MarkFileForDelete(InFile: String, bSilent: Boolean): Boolean
        fun MarkFileForAdd(InFile: String, bSilent: Boolean): Boolean
        fun LastErrorMsg(): String
        fun IsEnabled(): Boolean
        fun IsAvailable(): Boolean
        fun CurrentProvider(): String
        fun CopyFile(InSourceFile: String, InDestFile: String, bSilent: Boolean): Boolean
        fun CheckOutOrAddFiles(InFiles: Array<String>, bSilent: Boolean): Boolean
        fun CheckOutOrAddFile(InFile: String, bSilent: Boolean): Boolean
        fun CheckOutFiles(InFiles: Array<String>, bSilent: Boolean): Boolean
        fun CheckOutFile(InFile: String, bSilent: Boolean): Boolean
        fun CheckInFiles(InFiles: Array<String>, InDescription: String, bSilent: Boolean): Boolean
        fun CheckInFile(InFile: String, InDescription: String, bSilent: Boolean): Boolean
        fun C(Other: UObject): SourceControlHelpers
        fun C(Other: Any): SourceControlHelpers
    }
}

external object EditConditionTestEnum {
    var First: String /* "First" */
    var Second: String /* "Second" */
    var EditConditionTestEnum_MAX: String /* "EditConditionTestEnum_MAX" */
}

external object EditConditionByteEnum {
    var First: String /* "First" */
    var Second: String /* "Second" */
    var EditConditionByteEnum_MAX: String /* "EditConditionByteEnum_MAX" */
}

external open class EditConditionTestObject : UObject {
    constructor()
    constructor(Outer: UObject)
    open var BoolProperty: Boolean
    open var EnumProperty: String /* "First" | "Second" | "EditConditionTestEnum_MAX" */
    open var ByteEnumProperty: String /* "First" | "Second" | "EditConditionByteEnum_MAX" */
    open var DoubleProperty: Any
    open var IntegerProperty: Number
    open var UintBitfieldProperty: Boolean
    open var UObjectPtr: UObject
    open var SoftClassPtr: Class
    open var WeakObjectPtr: Any

    companion object {
        fun Load(ResourceName: String): EditConditionTestObject
        fun Find(Outer: UObject, ResourceName: String): EditConditionTestObject
        fun GetDefaultObject(): EditConditionTestObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditConditionTestObject
        fun C(Other: UObject): EditConditionTestObject
        fun C(Other: Any): EditConditionTestObject
    }
}

external open class BlueprintCompilerExtension : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlueprintCompilerExtension
        fun Find(Outer: UObject, ResourceName: String): BlueprintCompilerExtension
        fun GetDefaultObject(): BlueprintCompilerExtension
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintCompilerExtension
        fun C(Other: UObject): BlueprintCompilerExtension
        fun C(Other: Any): BlueprintCompilerExtension
    }
}

external open class BlueprintEditorToolMenuContext : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlueprintEditorToolMenuContext
        fun Find(Outer: UObject, ResourceName: String): BlueprintEditorToolMenuContext
        fun GetDefaultObject(): BlueprintEditorToolMenuContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintEditorToolMenuContext
        fun C(Other: UObject): BlueprintEditorToolMenuContext
        fun C(Other: Any): BlueprintEditorToolMenuContext
    }
}

external open class FavoritedBlueprintPaletteItem {
    open fun clone(): FavoritedBlueprintPaletteItem

    companion object {
        fun C(Other: UObject): FavoritedBlueprintPaletteItem
        fun C(Other: Any): FavoritedBlueprintPaletteItem
    }
}

external open class BlueprintPaletteFavorites : UObject {
    constructor()
    constructor(Outer: UObject)
    open var CustomFavorites: Array<String>
    open var CurrentFavorites: Array<FavoritedBlueprintPaletteItem>
    open var CurrentProfile: String

    companion object {
        fun Load(ResourceName: String): BlueprintPaletteFavorites
        fun Find(Outer: UObject, ResourceName: String): BlueprintPaletteFavorites
        fun GetDefaultObject(): BlueprintPaletteFavorites
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintPaletteFavorites
        fun C(Other: UObject): BlueprintPaletteFavorites
        fun C(Other: Any): BlueprintPaletteFavorites
    }
}

external open class SCSEditorExtensionContext : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SCSEditorExtensionContext
        fun Find(Outer: UObject, ResourceName: String): SCSEditorExtensionContext
        fun GetDefaultObject(): SCSEditorExtensionContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SCSEditorExtensionContext
        fun C(Other: UObject): SCSEditorExtensionContext
        fun C(Other: Any): SCSEditorExtensionContext
    }
}

external open class SSCSEditorMenuContext : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SSCSEditorMenuContext
        fun Find(Outer: UObject, ResourceName: String): SSCSEditorMenuContext
        fun GetDefaultObject(): SSCSEditorMenuContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SSCSEditorMenuContext
        fun C(Other: UObject): SSCSEditorMenuContext
        fun C(Other: Any): SSCSEditorMenuContext
    }
}

external open class BlueprintNodeSpawner : UObject {
    constructor()
    constructor(Outer: UObject)
    open var NodeClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): BlueprintNodeSpawner
        fun Find(Outer: UObject, ResourceName: String): BlueprintNodeSpawner
        fun GetDefaultObject(): BlueprintNodeSpawner
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintNodeSpawner
        fun C(Other: UObject): BlueprintNodeSpawner
        fun C(Other: Any): BlueprintNodeSpawner
    }
}

external open class BlueprintEventNodeSpawner : BlueprintNodeSpawner {
    constructor()
    constructor(Outer: UObject)
    open var EventFunc: UFunction
    open var CustomEventName: String

    companion object {
        fun Load(ResourceName: String): BlueprintEventNodeSpawner
        fun Find(Outer: UObject, ResourceName: String): BlueprintEventNodeSpawner
        fun GetDefaultObject(): BlueprintEventNodeSpawner
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintEventNodeSpawner
        fun C(Other: UObject): BlueprintEventNodeSpawner
        fun C(Other: Any): BlueprintEventNodeSpawner
    }
}

external open class BlueprintBoundEventNodeSpawner : BlueprintEventNodeSpawner {
    constructor()
    constructor(Outer: UObject)
    open var EventDelegate: Any

    companion object {
        fun Load(ResourceName: String): BlueprintBoundEventNodeSpawner
        fun Find(Outer: UObject, ResourceName: String): BlueprintBoundEventNodeSpawner
        fun GetDefaultObject(): BlueprintBoundEventNodeSpawner
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintBoundEventNodeSpawner
        fun C(Other: UObject): BlueprintBoundEventNodeSpawner
        fun C(Other: Any): BlueprintBoundEventNodeSpawner
    }
}

external open class BlueprintBoundNodeSpawner : BlueprintNodeSpawner {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlueprintBoundNodeSpawner
        fun Find(Outer: UObject, ResourceName: String): BlueprintBoundNodeSpawner
        fun GetDefaultObject(): BlueprintBoundNodeSpawner
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintBoundNodeSpawner
        fun C(Other: UObject): BlueprintBoundNodeSpawner
        fun C(Other: Any): BlueprintBoundNodeSpawner
    }
}

external open class BlueprintComponentNodeSpawner : BlueprintNodeSpawner {
    constructor()
    constructor(Outer: UObject)
    open var ComponentClass: UnrealEngineClass
    open var ComponentName: String
    open var ComponentAssetName: String

    companion object {
        fun Load(ResourceName: String): BlueprintComponentNodeSpawner
        fun Find(Outer: UObject, ResourceName: String): BlueprintComponentNodeSpawner
        fun GetDefaultObject(): BlueprintComponentNodeSpawner
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintComponentNodeSpawner
        fun C(Other: UObject): BlueprintComponentNodeSpawner
        fun C(Other: Any): BlueprintComponentNodeSpawner
    }
}

external open class BlueprintFieldNodeSpawner : BlueprintNodeSpawner {
    constructor()
    constructor(Outer: UObject)
    open var OwnerClass: UnrealEngineClass
    open var Field: Field
    open var Property: Any

    companion object {
        fun Load(ResourceName: String): BlueprintFieldNodeSpawner
        fun Find(Outer: UObject, ResourceName: String): BlueprintFieldNodeSpawner
        fun GetDefaultObject(): BlueprintFieldNodeSpawner
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintFieldNodeSpawner
        fun C(Other: UObject): BlueprintFieldNodeSpawner
        fun C(Other: Any): BlueprintFieldNodeSpawner
    }
}

external open class BlueprintDelegateNodeSpawner : BlueprintFieldNodeSpawner {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlueprintDelegateNodeSpawner
        fun Find(Outer: UObject, ResourceName: String): BlueprintDelegateNodeSpawner
        fun GetDefaultObject(): BlueprintDelegateNodeSpawner
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintDelegateNodeSpawner
        fun C(Other: UObject): BlueprintDelegateNodeSpawner
        fun C(Other: Any): BlueprintDelegateNodeSpawner
    }
}

external object ESaveOnCompile {
    var SoC_Never: String /* "SoC_Never" */
    var SoC_SuccessOnly: String /* "SoC_SuccessOnly" */
    var SoC_Always: String /* "SoC_Always" */
    var SoC_MAX: String /* "SoC_MAX" */
}

external open class BlueprintEditorSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bDrawMidpointArrowsInBlueprints: Boolean
    open var bShowGraphInstructionText: Boolean
    open var bHideUnrelatedNodes: Boolean
    open var bShowShortTooltips: Boolean
    open var bSplitContextTargetSettings: Boolean
    open var bExposeAllMemberComponentFunctions: Boolean
    open var bShowContextualFavorites: Boolean
    open var bExposeDeprecatedFunctions: Boolean
    open var bCompactCallOnMemberNodes: Boolean
    open var bFlattenFavoritesMenus: Boolean
    open var bFavorPureCastNodes: Boolean
    open var bAutoCastObjectConnections: Boolean
    open var bShowViewportOnSimulate: Boolean
    open var bShowInheritedVariables: Boolean
    open var bAlwaysShowInterfacesInOverrides: Boolean
    open var bShowParentClassInOverrides: Boolean
    open var bShowEmptySections: Boolean
    open var bShowAccessSpecifier: Boolean
    open var bSpawnDefaultBlueprintNodes: Boolean
    open var bHideConstructionScriptComponentsInDetailsView: Boolean
    open var bHostFindInBlueprintsInGlobalTab: Boolean
    open var bNavigateToNativeFunctionsFromCallNodes: Boolean
    open var Bookmarks: Any
    open var BookmarkNodes: Array<BPEditorBookmarkNode>
    open var bIncludeCommentNodesInBookmarksTab: Boolean
    open var bShowBookmarksForCurrentDocumentOnlyInTab: Boolean
    open var GraphEditorQuickJumps: Any
    open var SaveOnCompile: String /* "SoC_Never" | "SoC_SuccessOnly" | "SoC_Always" | "SoC_MAX" */
    open var bJumpToNodeErrors: Boolean
    open var bAllowExplicitImpureNodeDisabling: Boolean
    open var bShowActionMenuItemSignatures: Boolean
    open var bBlueprintNodeUniqueNames: Boolean
    open var NamespacesToAlwaysInclude: Array<String>
    open var bShowDetailedCompileResults: Boolean
    open var CompileEventDisplayThresholdMs: Number
    open var NodeTemplateCacheCapMB: Number

    companion object {
        fun Load(ResourceName: String): BlueprintEditorSettings
        fun Find(Outer: UObject, ResourceName: String): BlueprintEditorSettings
        fun GetDefaultObject(): BlueprintEditorSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintEditorSettings
        fun C(Other: UObject): BlueprintEditorSettings
        fun C(Other: Any): BlueprintEditorSettings
    }
}

external open class BlueprintFunctionNodeSpawner : BlueprintFieldNodeSpawner {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlueprintFunctionNodeSpawner
        fun Find(Outer: UObject, ResourceName: String): BlueprintFunctionNodeSpawner
        fun GetDefaultObject(): BlueprintFunctionNodeSpawner
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintFunctionNodeSpawner
        fun C(Other: UObject): BlueprintFunctionNodeSpawner
        fun C(Other: Any): BlueprintFunctionNodeSpawner
    }
}

external open class BlueprintVariableNodeSpawner : BlueprintFieldNodeSpawner {
    constructor()
    constructor(Outer: UObject)
    open var LocalVarOuter: EdGraph
    open var LocalVarDesc: BPVariableDescription

    companion object {
        fun Load(ResourceName: String): BlueprintVariableNodeSpawner
        fun Find(Outer: UObject, ResourceName: String): BlueprintVariableNodeSpawner
        fun GetDefaultObject(): BlueprintVariableNodeSpawner
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintVariableNodeSpawner
        fun C(Other: UObject): BlueprintVariableNodeSpawner
        fun C(Other: Any): BlueprintVariableNodeSpawner
    }
}

external open class BlueprintCallableFunctionRedirect {
    open var ClassName: String
    open var OldFunctionName: String
    open var NewFunctionName: String
    open var BlueprintParamName: String
    open var ClassParamName: String
    open fun clone(): BlueprintCallableFunctionRedirect

    companion object {
        fun C(Other: UObject): BlueprintCallableFunctionRedirect
        fun C(Other: Any): BlueprintCallableFunctionRedirect
    }
}

external open class EdGraphSchema_K2 : EdGraphSchema {
    constructor()
    constructor(Outer: UObject)
    open var EditoronlyBPFunctionRedirects: Array<BlueprintCallableFunctionRedirect>

    companion object {
        fun Load(ResourceName: String): EdGraphSchema_K2
        fun Find(Outer: UObject, ResourceName: String): EdGraphSchema_K2
        fun GetDefaultObject(): EdGraphSchema_K2
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EdGraphSchema_K2
        fun C(Other: UObject): EdGraphSchema_K2
        fun C(Other: Any): EdGraphSchema_K2
    }
}

external open class K2Node_EditablePinBase : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var bIsEditable: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_EditablePinBase
        fun Find(Outer: UObject, ResourceName: String): K2Node_EditablePinBase
        fun GetDefaultObject(): K2Node_EditablePinBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_EditablePinBase
        fun C(Other: UObject): K2Node_EditablePinBase
        fun C(Other: Any): K2Node_EditablePinBase
    }
}

external open class MemberReference {
    open var MemberParent: UObject
    open var MemberScope: String
    open var MemberName: String
    open var MemberGuid: Guid
    open var bSelfContext: Boolean
    open var bWasDeprecated: Boolean
    open fun clone(): MemberReference

    companion object {
        fun C(Other: UObject): MemberReference
        fun C(Other: Any): MemberReference
    }
}

external open class K2Node_Event : K2Node_EditablePinBase {
    constructor()
    constructor(Outer: UObject)
    open var EventSignatureName: String
    open var EventSignatureClass: UnrealEngineClass
    open var EventReference: MemberReference
    open var bOverrideFunction: Boolean
    open var bInternalEvent: Boolean
    open var CustomFunctionName: String
    open var FunctionFlags: Any

    companion object {
        fun Load(ResourceName: String): K2Node_Event
        fun Find(Outer: UObject, ResourceName: String): K2Node_Event
        fun GetDefaultObject(): K2Node_Event
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_Event
        fun C(Other: UObject): K2Node_Event
        fun C(Other: Any): K2Node_Event
    }
}

external open class K2Node_ActorBoundEvent : K2Node_Event {
    constructor()
    constructor(Outer: UObject)
    open var DelegatePropertyName: String
    open var DelegateOwnerClass: UnrealEngineClass
    open var EventOwner: Actor

    companion object {
        fun Load(ResourceName: String): K2Node_ActorBoundEvent
        fun Find(Outer: UObject, ResourceName: String): K2Node_ActorBoundEvent
        fun GetDefaultObject(): K2Node_ActorBoundEvent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_ActorBoundEvent
        fun C(Other: UObject): K2Node_ActorBoundEvent
        fun C(Other: Any): K2Node_ActorBoundEvent
    }
}

external open class K2Node_CallFunction : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var bIsPureFunc: Boolean
    open var bIsConstFunc: Boolean
    open var bWantsEnumToExecExpansion: Boolean
    open var bIsInterfaceCall: Boolean
    open var bIsFinalFunction: Boolean
    open var bIsBeadFunction: Boolean
    open var FunctionReference: MemberReference
    open var CallFunctionName: String
    open var CallFunctionClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): K2Node_CallFunction
        fun Find(Outer: UObject, ResourceName: String): K2Node_CallFunction
        fun GetDefaultObject(): K2Node_CallFunction
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_CallFunction
        fun C(Other: UObject): K2Node_CallFunction
        fun C(Other: Any): K2Node_CallFunction
    }
}

external open class K2Node_AddComponent : K2Node_CallFunction {
    constructor()
    constructor(Outer: UObject)
    open var bHasExposedVariable: Boolean
    open var TemplateBlueprint: String
    open var TemplateType: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): K2Node_AddComponent
        fun Find(Outer: UObject, ResourceName: String): K2Node_AddComponent
        fun GetDefaultObject(): K2Node_AddComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_AddComponent
        fun C(Other: UObject): K2Node_AddComponent
        fun C(Other: Any): K2Node_AddComponent
    }
}

external open class K2Node_ConstructObjectFromClass : K2Node {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_ConstructObjectFromClass
        fun Find(Outer: UObject, ResourceName: String): K2Node_ConstructObjectFromClass
        fun GetDefaultObject(): K2Node_ConstructObjectFromClass
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_ConstructObjectFromClass
        fun C(Other: UObject): K2Node_ConstructObjectFromClass
        fun C(Other: Any): K2Node_ConstructObjectFromClass
    }
}

external open class K2Node_AddComponentByClass : K2Node_ConstructObjectFromClass {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_AddComponentByClass
        fun Find(Outer: UObject, ResourceName: String): K2Node_AddComponentByClass
        fun GetDefaultObject(): K2Node_AddComponentByClass
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_AddComponentByClass
        fun C(Other: UObject): K2Node_AddComponentByClass
        fun C(Other: Any): K2Node_AddComponentByClass
    }
}

external open class K2Node_BaseMCDelegate : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var DelegateReference: MemberReference

    companion object {
        fun Load(ResourceName: String): K2Node_BaseMCDelegate
        fun Find(Outer: UObject, ResourceName: String): K2Node_BaseMCDelegate
        fun GetDefaultObject(): K2Node_BaseMCDelegate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_BaseMCDelegate
        fun C(Other: UObject): K2Node_BaseMCDelegate
        fun C(Other: Any): K2Node_BaseMCDelegate
    }
}

external open class K2Node_AddDelegate : K2Node_BaseMCDelegate {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_AddDelegate
        fun Find(Outer: UObject, ResourceName: String): K2Node_AddDelegate
        fun GetDefaultObject(): K2Node_AddDelegate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_AddDelegate
        fun C(Other: UObject): K2Node_AddDelegate
        fun C(Other: Any): K2Node_AddDelegate
    }
}

external open class K2Node_AddPinInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_AddPinInterface
        fun Find(Outer: UObject, ResourceName: String): K2Node_AddPinInterface
        fun GetDefaultObject(): K2Node_AddPinInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_AddPinInterface
        fun C(Other: UObject): K2Node_AddPinInterface
        fun C(Other: Any): K2Node_AddPinInterface
    }
}

external open class K2Node_AssignDelegate : K2Node_AddDelegate {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_AssignDelegate
        fun Find(Outer: UObject, ResourceName: String): K2Node_AssignDelegate
        fun GetDefaultObject(): K2Node_AssignDelegate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_AssignDelegate
        fun C(Other: UObject): K2Node_AssignDelegate
        fun C(Other: Any): K2Node_AssignDelegate
    }
}

external open class K2Node_AssignmentStatement : K2Node {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_AssignmentStatement
        fun Find(Outer: UObject, ResourceName: String): K2Node_AssignmentStatement
        fun GetDefaultObject(): K2Node_AssignmentStatement
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_AssignmentStatement
        fun C(Other: UObject): K2Node_AssignmentStatement
        fun C(Other: Any): K2Node_AssignmentStatement
    }
}

external open class K2Node_BaseAsyncTask : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var ProxyFactoryFunctionName: String
    open var ProxyFactoryClass: UnrealEngineClass
    open var ProxyClass: UnrealEngineClass
    open var ProxyActivateFunctionName: String

    companion object {
        fun Load(ResourceName: String): K2Node_BaseAsyncTask
        fun Find(Outer: UObject, ResourceName: String): K2Node_BaseAsyncTask
        fun GetDefaultObject(): K2Node_BaseAsyncTask
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_BaseAsyncTask
        fun C(Other: UObject): K2Node_BaseAsyncTask
        fun C(Other: Any): K2Node_BaseAsyncTask
    }
}

external open class K2Node_AsyncAction : K2Node_BaseAsyncTask {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_AsyncAction
        fun Find(Outer: UObject, ResourceName: String): K2Node_AsyncAction
        fun GetDefaultObject(): K2Node_AsyncAction
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_AsyncAction
        fun C(Other: UObject): K2Node_AsyncAction
        fun C(Other: Any): K2Node_AsyncAction
    }
}

external open class K2Node_BitmaskLiteral : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var BitflagsEnum: Enum

    companion object {
        fun Load(ResourceName: String): K2Node_BitmaskLiteral
        fun Find(Outer: UObject, ResourceName: String): K2Node_BitmaskLiteral
        fun GetDefaultObject(): K2Node_BitmaskLiteral
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_BitmaskLiteral
        fun C(Other: UObject): K2Node_BitmaskLiteral
        fun C(Other: Any): K2Node_BitmaskLiteral
    }
}

external object ESelfContextInfo {
    var Unspecified: String /* "Unspecified" */
    var NotSelfContext: String /* "NotSelfContext" */
    var ESelfContextInfo_MAX: String /* "ESelfContextInfo_MAX" */
}

external open class K2Node_Variable : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var VariableReference: MemberReference
    open var SelfContextInfo: String /* "Unspecified" | "NotSelfContext" | "ESelfContextInfo_MAX" */
    open var VariableSourceClass: UnrealEngineClass
    open var VariableName: String
    open var bSelfContext: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_Variable
        fun Find(Outer: UObject, ResourceName: String): K2Node_Variable
        fun GetDefaultObject(): K2Node_Variable
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_Variable
        fun C(Other: UObject): K2Node_Variable
        fun C(Other: Any): K2Node_Variable
    }
}

external open class K2Node_StructOperation : K2Node_Variable {
    constructor()
    constructor(Outer: UObject)
    open var StructType: ScriptStruct

    companion object {
        fun Load(ResourceName: String): K2Node_StructOperation
        fun Find(Outer: UObject, ResourceName: String): K2Node_StructOperation
        fun GetDefaultObject(): K2Node_StructOperation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_StructOperation
        fun C(Other: UObject): K2Node_StructOperation
        fun C(Other: Any): K2Node_StructOperation
    }
}

external open class OptionalPinFromProperty {
    open var PropertyName: String
    open var PropertyFriendlyName: String
    open var PropertyTooltip: String
    open var CategoryName: String
    open var bShowPin: Boolean
    open var bCanToggleVisibility: Boolean
    open var bPropertyIsCustomized: Boolean
    open var bHasOverridePin: Boolean
    open var bIsMarkedForAdvancedDisplay: Boolean
    open var bIsOverrideEnabled: Boolean
    open var bIsSetValuePinVisible: Boolean
    open var bIsOverridePinVisible: Boolean
    open fun clone(): OptionalPinFromProperty

    companion object {
        fun C(Other: UObject): OptionalPinFromProperty
        fun C(Other: Any): OptionalPinFromProperty
    }
}

external open class K2Node_StructMemberGet : K2Node_StructOperation {
    constructor()
    constructor(Outer: UObject)
    open var ShowPinForProperties: Array<OptionalPinFromProperty>

    companion object {
        fun Load(ResourceName: String): K2Node_StructMemberGet
        fun Find(Outer: UObject, ResourceName: String): K2Node_StructMemberGet
        fun GetDefaultObject(): K2Node_StructMemberGet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_StructMemberGet
        fun C(Other: UObject): K2Node_StructMemberGet
        fun C(Other: Any): K2Node_StructMemberGet
    }
}

external open class K2Node_BreakStruct : K2Node_StructMemberGet {
    constructor()
    constructor(Outer: UObject)
    open var bMadeAfterOverridePinRemoval: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_BreakStruct
        fun Find(Outer: UObject, ResourceName: String): K2Node_BreakStruct
        fun GetDefaultObject(): K2Node_BreakStruct
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_BreakStruct
        fun C(Other: UObject): K2Node_BreakStruct
        fun C(Other: Any): K2Node_BreakStruct
    }
}

external open class K2Node_CallArrayFunction : K2Node_CallFunction {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_CallArrayFunction
        fun Find(Outer: UObject, ResourceName: String): K2Node_CallArrayFunction
        fun GetDefaultObject(): K2Node_CallArrayFunction
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_CallArrayFunction
        fun C(Other: UObject): K2Node_CallArrayFunction
        fun C(Other: Any): K2Node_CallArrayFunction
    }
}

external open class K2Node_CallDataTableFunction : K2Node_CallFunction {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_CallDataTableFunction
        fun Find(Outer: UObject, ResourceName: String): K2Node_CallDataTableFunction
        fun GetDefaultObject(): K2Node_CallDataTableFunction
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_CallDataTableFunction
        fun C(Other: UObject): K2Node_CallDataTableFunction
        fun C(Other: Any): K2Node_CallDataTableFunction
    }
}

external open class K2Node_CallDelegate : K2Node_BaseMCDelegate {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_CallDelegate
        fun Find(Outer: UObject, ResourceName: String): K2Node_CallDelegate
        fun GetDefaultObject(): K2Node_CallDelegate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_CallDelegate
        fun C(Other: UObject): K2Node_CallDelegate
        fun C(Other: Any): K2Node_CallDelegate
    }
}

external open class K2Node_CallFunctionOnMember : K2Node_CallFunction {
    constructor()
    constructor(Outer: UObject)
    open var MemberVariableToCallOn: MemberReference

    companion object {
        fun Load(ResourceName: String): K2Node_CallFunctionOnMember
        fun Find(Outer: UObject, ResourceName: String): K2Node_CallFunctionOnMember
        fun GetDefaultObject(): K2Node_CallFunctionOnMember
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_CallFunctionOnMember
        fun C(Other: UObject): K2Node_CallFunctionOnMember
        fun C(Other: Any): K2Node_CallFunctionOnMember
    }
}

external open class K2Node_CallMaterialParameterCollectionFunction : K2Node_CallFunction {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_CallMaterialParameterCollectionFunction
        fun Find(Outer: UObject, ResourceName: String): K2Node_CallMaterialParameterCollectionFunction
        fun GetDefaultObject(): K2Node_CallMaterialParameterCollectionFunction
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_CallMaterialParameterCollectionFunction
        fun C(Other: UObject): K2Node_CallMaterialParameterCollectionFunction
        fun C(Other: Any): K2Node_CallMaterialParameterCollectionFunction
    }
}

external open class K2Node_CallParentFunction : K2Node_CallFunction {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_CallParentFunction
        fun Find(Outer: UObject, ResourceName: String): K2Node_CallParentFunction
        fun GetDefaultObject(): K2Node_CallParentFunction
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_CallParentFunction
        fun C(Other: UObject): K2Node_CallParentFunction
        fun C(Other: Any): K2Node_CallParentFunction
    }
}

external open class K2Node_CastByteToEnum : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var Enum: Enum
    open var bSafe: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_CastByteToEnum
        fun Find(Outer: UObject, ResourceName: String): K2Node_CastByteToEnum
        fun GetDefaultObject(): K2Node_CastByteToEnum
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_CastByteToEnum
        fun C(Other: UObject): K2Node_CastByteToEnum
        fun C(Other: Any): K2Node_CastByteToEnum
    }
}

external open class K2Node_DynamicCast : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var TargetType: UnrealEngineClass
    open var bIsPureCast: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_DynamicCast
        fun Find(Outer: UObject, ResourceName: String): K2Node_DynamicCast
        fun GetDefaultObject(): K2Node_DynamicCast
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_DynamicCast
        fun C(Other: UObject): K2Node_DynamicCast
        fun C(Other: Any): K2Node_DynamicCast
    }
}

external open class K2Node_ClassDynamicCast : K2Node_DynamicCast {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_ClassDynamicCast
        fun Find(Outer: UObject, ResourceName: String): K2Node_ClassDynamicCast
        fun GetDefaultObject(): K2Node_ClassDynamicCast
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_ClassDynamicCast
        fun C(Other: UObject): K2Node_ClassDynamicCast
        fun C(Other: Any): K2Node_ClassDynamicCast
    }
}

external open class K2Node_ClearDelegate : K2Node_BaseMCDelegate {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_ClearDelegate
        fun Find(Outer: UObject, ResourceName: String): K2Node_ClearDelegate
        fun GetDefaultObject(): K2Node_ClearDelegate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_ClearDelegate
        fun C(Other: UObject): K2Node_ClearDelegate
        fun C(Other: Any): K2Node_ClearDelegate
    }
}

external open class K2Node_CommutativeAssociativeBinaryOperator : K2Node_CallFunction {
    constructor()
    constructor(Outer: UObject)
    open var NumAdditionalInputs: Number

    companion object {
        fun Load(ResourceName: String): K2Node_CommutativeAssociativeBinaryOperator
        fun Find(Outer: UObject, ResourceName: String): K2Node_CommutativeAssociativeBinaryOperator
        fun GetDefaultObject(): K2Node_CommutativeAssociativeBinaryOperator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_CommutativeAssociativeBinaryOperator
        fun C(Other: UObject): K2Node_CommutativeAssociativeBinaryOperator
        fun C(Other: Any): K2Node_CommutativeAssociativeBinaryOperator
    }
}

external open class K2Node_ComponentBoundEvent : K2Node_Event {
    constructor()
    constructor(Outer: UObject)
    open var DelegatePropertyName: String
    open var DelegateOwnerClass: UnrealEngineClass
    open var ComponentPropertyName: String
    open var DelegatePropertyDisplayName: String

    companion object {
        fun Load(ResourceName: String): K2Node_ComponentBoundEvent
        fun Find(Outer: UObject, ResourceName: String): K2Node_ComponentBoundEvent
        fun GetDefaultObject(): K2Node_ComponentBoundEvent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_ComponentBoundEvent
        fun C(Other: UObject): K2Node_ComponentBoundEvent
        fun C(Other: Any): K2Node_ComponentBoundEvent
    }
}

external open class KismetUserDeclaredFunctionMetadata {
    open var Tooltip: String
    open var Category: String
    open var Keywords: String
    open var CompactNodeTitle: String
    open var InstanceTitleColor: LinearColor
    open var DeprecationMessage: String
    open var bIsDeprecated: Boolean
    open var bCallInEditor: Boolean
    open var HasLatentFunctions: Any
    open fun clone(): KismetUserDeclaredFunctionMetadata

    companion object {
        fun C(Other: UObject): KismetUserDeclaredFunctionMetadata
        fun C(Other: Any): KismetUserDeclaredFunctionMetadata
    }
}

external open class K2Node_Tunnel : K2Node_EditablePinBase {
    constructor()
    constructor(Outer: UObject)
    open var OutputSourceNode: K2Node_Tunnel
    open var InputSinkNode: K2Node_Tunnel
    open var bCanHaveInputs: Boolean
    open var bCanHaveOutputs: Boolean
    open var MetaData: KismetUserDeclaredFunctionMetadata

    companion object {
        fun Load(ResourceName: String): K2Node_Tunnel
        fun Find(Outer: UObject, ResourceName: String): K2Node_Tunnel
        fun GetDefaultObject(): K2Node_Tunnel
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_Tunnel
        fun C(Other: UObject): K2Node_Tunnel
        fun C(Other: Any): K2Node_Tunnel
    }
}

external open class K2Node_Composite : K2Node_Tunnel {
    constructor()
    constructor(Outer: UObject)
    open var BoundGraph: EdGraph

    companion object {
        fun Load(ResourceName: String): K2Node_Composite
        fun Find(Outer: UObject, ResourceName: String): K2Node_Composite
        fun GetDefaultObject(): K2Node_Composite
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_Composite
        fun C(Other: UObject): K2Node_Composite
        fun C(Other: Any): K2Node_Composite
    }
}

external open class K2Node_ConvertAsset : K2Node {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_ConvertAsset
        fun Find(Outer: UObject, ResourceName: String): K2Node_ConvertAsset
        fun GetDefaultObject(): K2Node_ConvertAsset
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_ConvertAsset
        fun C(Other: UObject): K2Node_ConvertAsset
        fun C(Other: Any): K2Node_ConvertAsset
    }
}

external open class K2Node_Copy : K2Node {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_Copy
        fun Find(Outer: UObject, ResourceName: String): K2Node_Copy
        fun GetDefaultObject(): K2Node_Copy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_Copy
        fun C(Other: UObject): K2Node_Copy
        fun C(Other: Any): K2Node_Copy
    }
}

external open class K2Node_CreateDelegate : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var SelectedFunctionName: String
    open var SelectedFunctionGuid: Guid

    companion object {
        fun Load(ResourceName: String): K2Node_CreateDelegate
        fun Find(Outer: UObject, ResourceName: String): K2Node_CreateDelegate
        fun GetDefaultObject(): K2Node_CreateDelegate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_CreateDelegate
        fun C(Other: UObject): K2Node_CreateDelegate
        fun C(Other: Any): K2Node_CreateDelegate
    }
}

external open class K2Node_CustomEvent : K2Node_Event {
    constructor()
    constructor(Outer: UObject)
    open var DeprecationMessage: String
    open var bIsDeprecated: Boolean
    open var bCallInEditor: Boolean
    open var MetaData: KismetUserDeclaredFunctionMetadata

    companion object {
        fun Load(ResourceName: String): K2Node_CustomEvent
        fun Find(Outer: UObject, ResourceName: String): K2Node_CustomEvent
        fun GetDefaultObject(): K2Node_CustomEvent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_CustomEvent
        fun C(Other: UObject): K2Node_CustomEvent
        fun C(Other: Any): K2Node_CustomEvent
    }
}

external open class K2Node_DeadClass : K2Node {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_DeadClass
        fun Find(Outer: UObject, ResourceName: String): K2Node_DeadClass
        fun GetDefaultObject(): K2Node_DeadClass
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_DeadClass
        fun C(Other: UObject): K2Node_DeadClass
        fun C(Other: Any): K2Node_DeadClass
    }
}

external open class K2Node_DelegateSet : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var DelegatePropertyName: String
    open var DelegatePropertyClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): K2Node_DelegateSet
        fun Find(Outer: UObject, ResourceName: String): K2Node_DelegateSet
        fun GetDefaultObject(): K2Node_DelegateSet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_DelegateSet
        fun C(Other: UObject): K2Node_DelegateSet
        fun C(Other: Any): K2Node_DelegateSet
    }
}

external open class K2Node_TemporaryVariable : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var VariableType: EdGraphPinType
    open var bIsPersistent: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_TemporaryVariable
        fun Find(Outer: UObject, ResourceName: String): K2Node_TemporaryVariable
        fun GetDefaultObject(): K2Node_TemporaryVariable
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_TemporaryVariable
        fun C(Other: UObject): K2Node_TemporaryVariable
        fun C(Other: Any): K2Node_TemporaryVariable
    }
}

external open class K2Node_DoOnceMultiInput : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var NumAdditionalInputs: Number
    open var DataNode: K2Node_TemporaryVariable

    companion object {
        fun Load(ResourceName: String): K2Node_DoOnceMultiInput
        fun Find(Outer: UObject, ResourceName: String): K2Node_DoOnceMultiInput
        fun GetDefaultObject(): K2Node_DoOnceMultiInput
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_DoOnceMultiInput
        fun C(Other: UObject): K2Node_DoOnceMultiInput
        fun C(Other: Any): K2Node_DoOnceMultiInput
    }
}

external open class K2Node_EaseFunction : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var EaseFunctionName: String

    companion object {
        fun Load(ResourceName: String): K2Node_EaseFunction
        fun Find(Outer: UObject, ResourceName: String): K2Node_EaseFunction
        fun GetDefaultObject(): K2Node_EaseFunction
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_EaseFunction
        fun C(Other: UObject): K2Node_EaseFunction
        fun C(Other: Any): K2Node_EaseFunction
    }
}

external open class K2Node_EditorPropertyAccessBase : K2Node_CallFunction {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_EditorPropertyAccessBase
        fun Find(Outer: UObject, ResourceName: String): K2Node_EditorPropertyAccessBase
        fun GetDefaultObject(): K2Node_EditorPropertyAccessBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_EditorPropertyAccessBase
        fun C(Other: UObject): K2Node_EditorPropertyAccessBase
        fun C(Other: Any): K2Node_EditorPropertyAccessBase
    }
}

external open class K2Node_GetEditorProperty : K2Node_EditorPropertyAccessBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_GetEditorProperty
        fun Find(Outer: UObject, ResourceName: String): K2Node_GetEditorProperty
        fun GetDefaultObject(): K2Node_GetEditorProperty
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_GetEditorProperty
        fun C(Other: UObject): K2Node_GetEditorProperty
        fun C(Other: Any): K2Node_GetEditorProperty
    }
}

external open class K2Node_SetEditorProperty : K2Node_EditorPropertyAccessBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_SetEditorProperty
        fun Find(Outer: UObject, ResourceName: String): K2Node_SetEditorProperty
        fun GetDefaultObject(): K2Node_SetEditorProperty
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_SetEditorProperty
        fun C(Other: UObject): K2Node_SetEditorProperty
        fun C(Other: Any): K2Node_SetEditorProperty
    }
}

external open class K2Node_EnumEquality : K2Node {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_EnumEquality
        fun Find(Outer: UObject, ResourceName: String): K2Node_EnumEquality
        fun GetDefaultObject(): K2Node_EnumEquality
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_EnumEquality
        fun C(Other: UObject): K2Node_EnumEquality
        fun C(Other: Any): K2Node_EnumEquality
    }
}

external open class K2Node_EnumInequality : K2Node_EnumEquality {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_EnumInequality
        fun Find(Outer: UObject, ResourceName: String): K2Node_EnumInequality
        fun GetDefaultObject(): K2Node_EnumInequality
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_EnumInequality
        fun C(Other: UObject): K2Node_EnumInequality
        fun C(Other: Any): K2Node_EnumInequality
    }
}

external open class K2Node_EnumLiteral : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var Enum: Enum

    companion object {
        fun Load(ResourceName: String): K2Node_EnumLiteral
        fun Find(Outer: UObject, ResourceName: String): K2Node_EnumLiteral
        fun GetDefaultObject(): K2Node_EnumLiteral
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_EnumLiteral
        fun C(Other: UObject): K2Node_EnumLiteral
        fun C(Other: Any): K2Node_EnumLiteral
    }
}

external open class K2Node_EventNodeInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_EventNodeInterface
        fun Find(Outer: UObject, ResourceName: String): K2Node_EventNodeInterface
        fun GetDefaultObject(): K2Node_EventNodeInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_EventNodeInterface
        fun C(Other: UObject): K2Node_EventNodeInterface
        fun C(Other: Any): K2Node_EventNodeInterface
    }
}

external open class K2Node_ExecutionSequence : K2Node {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_ExecutionSequence
        fun Find(Outer: UObject, ResourceName: String): K2Node_ExecutionSequence
        fun GetDefaultObject(): K2Node_ExecutionSequence
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_ExecutionSequence
        fun C(Other: UObject): K2Node_ExecutionSequence
        fun C(Other: Any): K2Node_ExecutionSequence
    }
}

external open class K2Node_ForEachElementInEnum : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var Enum: Enum

    companion object {
        fun Load(ResourceName: String): K2Node_ForEachElementInEnum
        fun Find(Outer: UObject, ResourceName: String): K2Node_ForEachElementInEnum
        fun GetDefaultObject(): K2Node_ForEachElementInEnum
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_ForEachElementInEnum
        fun C(Other: UObject): K2Node_ForEachElementInEnum
        fun C(Other: Any): K2Node_ForEachElementInEnum
    }
}

external open class K2Node_FormatText : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var PinNames: Array<String>

    companion object {
        fun Load(ResourceName: String): K2Node_FormatText
        fun Find(Outer: UObject, ResourceName: String): K2Node_FormatText
        fun GetDefaultObject(): K2Node_FormatText
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_FormatText
        fun C(Other: UObject): K2Node_FormatText
        fun C(Other: Any): K2Node_FormatText
    }
}

external open class K2Node_FunctionTerminator : K2Node_EditablePinBase {
    constructor()
    constructor(Outer: UObject)
    open var FunctionReference: MemberReference
    open var SignatureClass: UnrealEngineClass
    open var SignatureName: String

    companion object {
        fun Load(ResourceName: String): K2Node_FunctionTerminator
        fun Find(Outer: UObject, ResourceName: String): K2Node_FunctionTerminator
        fun GetDefaultObject(): K2Node_FunctionTerminator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_FunctionTerminator
        fun C(Other: UObject): K2Node_FunctionTerminator
        fun C(Other: Any): K2Node_FunctionTerminator
    }
}

external open class K2Node_FunctionEntry : K2Node_FunctionTerminator {
    constructor()
    constructor(Outer: UObject)
    open var CustomGeneratedFunctionName: String
    open var MetaData: KismetUserDeclaredFunctionMetadata
    open var LocalVariables: Array<BPVariableDescription>
    open var bEnforceConstCorrectness: Boolean
    open var ExtraFlags: Number

    companion object {
        fun Load(ResourceName: String): K2Node_FunctionEntry
        fun Find(Outer: UObject, ResourceName: String): K2Node_FunctionEntry
        fun GetDefaultObject(): K2Node_FunctionEntry
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_FunctionEntry
        fun C(Other: UObject): K2Node_FunctionEntry
        fun C(Other: Any): K2Node_FunctionEntry
    }
}

external open class K2Node_FunctionResult : K2Node_FunctionTerminator {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_FunctionResult
        fun Find(Outer: UObject, ResourceName: String): K2Node_FunctionResult
        fun GetDefaultObject(): K2Node_FunctionResult
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_FunctionResult
        fun C(Other: UObject): K2Node_FunctionResult
        fun C(Other: Any): K2Node_FunctionResult
    }
}

external open class K2Node_GenericCreateObject : K2Node_ConstructObjectFromClass {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_GenericCreateObject
        fun Find(Outer: UObject, ResourceName: String): K2Node_GenericCreateObject
        fun GetDefaultObject(): K2Node_GenericCreateObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_GenericCreateObject
        fun C(Other: UObject): K2Node_GenericCreateObject
        fun C(Other: Any): K2Node_GenericCreateObject
    }
}

external open class K2Node_GetArrayItem : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var bReturnByRefDesired: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_GetArrayItem
        fun Find(Outer: UObject, ResourceName: String): K2Node_GetArrayItem
        fun GetDefaultObject(): K2Node_GetArrayItem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_GetArrayItem
        fun C(Other: UObject): K2Node_GetArrayItem
        fun C(Other: Any): K2Node_GetArrayItem
    }
}

external open class K2Node_GetClassDefaults : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var BlueprintSubscribedTo: Blueprint
    open var ShowPinForProperties: Array<OptionalPinFromProperty>
    open var bExcludeObjectContainers: Boolean
    open var bExcludeObjectArrays: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_GetClassDefaults
        fun Find(Outer: UObject, ResourceName: String): K2Node_GetClassDefaults
        fun GetDefaultObject(): K2Node_GetClassDefaults
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_GetClassDefaults
        fun C(Other: UObject): K2Node_GetClassDefaults
        fun C(Other: Any): K2Node_GetClassDefaults
    }
}

external open class K2Node_GetDataTableRow : K2Node {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_GetDataTableRow
        fun Find(Outer: UObject, ResourceName: String): K2Node_GetDataTableRow
        fun GetDefaultObject(): K2Node_GetDataTableRow
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_GetDataTableRow
        fun C(Other: UObject): K2Node_GetDataTableRow
        fun C(Other: Any): K2Node_GetDataTableRow
    }
}

external open class K2Node_GetEnumeratorName : K2Node {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_GetEnumeratorName
        fun Find(Outer: UObject, ResourceName: String): K2Node_GetEnumeratorName
        fun GetDefaultObject(): K2Node_GetEnumeratorName
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_GetEnumeratorName
        fun C(Other: UObject): K2Node_GetEnumeratorName
        fun C(Other: Any): K2Node_GetEnumeratorName
    }
}

external open class K2Node_GetEnumeratorNameAsString : K2Node_GetEnumeratorName {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_GetEnumeratorNameAsString
        fun Find(Outer: UObject, ResourceName: String): K2Node_GetEnumeratorNameAsString
        fun GetDefaultObject(): K2Node_GetEnumeratorNameAsString
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_GetEnumeratorNameAsString
        fun C(Other: UObject): K2Node_GetEnumeratorNameAsString
        fun C(Other: Any): K2Node_GetEnumeratorNameAsString
    }
}

external open class K2Node_GetInputAxisKeyValue : K2Node_CallFunction {
    constructor()
    constructor(Outer: UObject)
    open var InputAxisKey: Key
    open var bConsumeInput: Boolean
    open var bExecuteWhenPaused: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_GetInputAxisKeyValue
        fun Find(Outer: UObject, ResourceName: String): K2Node_GetInputAxisKeyValue
        fun GetDefaultObject(): K2Node_GetInputAxisKeyValue
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_GetInputAxisKeyValue
        fun C(Other: UObject): K2Node_GetInputAxisKeyValue
        fun C(Other: Any): K2Node_GetInputAxisKeyValue
    }
}

external open class K2Node_GetInputAxisValue : K2Node_CallFunction {
    constructor()
    constructor(Outer: UObject)
    open var InputAxisName: String
    open var bConsumeInput: Boolean
    open var bExecuteWhenPaused: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_GetInputAxisValue
        fun Find(Outer: UObject, ResourceName: String): K2Node_GetInputAxisValue
        fun GetDefaultObject(): K2Node_GetInputAxisValue
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_GetInputAxisValue
        fun C(Other: UObject): K2Node_GetInputAxisValue
        fun C(Other: Any): K2Node_GetInputAxisValue
    }
}

external open class K2Node_GetInputVectorAxisValue : K2Node_GetInputAxisKeyValue {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_GetInputVectorAxisValue
        fun Find(Outer: UObject, ResourceName: String): K2Node_GetInputVectorAxisValue
        fun GetDefaultObject(): K2Node_GetInputVectorAxisValue
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_GetInputVectorAxisValue
        fun C(Other: UObject): K2Node_GetInputVectorAxisValue
        fun C(Other: Any): K2Node_GetInputVectorAxisValue
    }
}

external open class K2Node_GetNumEnumEntries : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var Enum: Enum

    companion object {
        fun Load(ResourceName: String): K2Node_GetNumEnumEntries
        fun Find(Outer: UObject, ResourceName: String): K2Node_GetNumEnumEntries
        fun GetDefaultObject(): K2Node_GetNumEnumEntries
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_GetNumEnumEntries
        fun C(Other: UObject): K2Node_GetNumEnumEntries
        fun C(Other: Any): K2Node_GetNumEnumEntries
    }
}

external open class K2Node_GetSubsystem : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var CustomClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): K2Node_GetSubsystem
        fun Find(Outer: UObject, ResourceName: String): K2Node_GetSubsystem
        fun GetDefaultObject(): K2Node_GetSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_GetSubsystem
        fun C(Other: UObject): K2Node_GetSubsystem
        fun C(Other: Any): K2Node_GetSubsystem
    }
}

external open class K2Node_GetSubsystemFromPC : K2Node_GetSubsystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_GetSubsystemFromPC
        fun Find(Outer: UObject, ResourceName: String): K2Node_GetSubsystemFromPC
        fun GetDefaultObject(): K2Node_GetSubsystemFromPC
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_GetSubsystemFromPC
        fun C(Other: UObject): K2Node_GetSubsystemFromPC
        fun C(Other: Any): K2Node_GetSubsystemFromPC
    }
}

external open class K2Node_GetEngineSubsystem : K2Node_GetSubsystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_GetEngineSubsystem
        fun Find(Outer: UObject, ResourceName: String): K2Node_GetEngineSubsystem
        fun GetDefaultObject(): K2Node_GetEngineSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_GetEngineSubsystem
        fun C(Other: UObject): K2Node_GetEngineSubsystem
        fun C(Other: Any): K2Node_GetEngineSubsystem
    }
}

external open class K2Node_GetEditorSubsystem : K2Node_GetSubsystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_GetEditorSubsystem
        fun Find(Outer: UObject, ResourceName: String): K2Node_GetEditorSubsystem
        fun GetDefaultObject(): K2Node_GetEditorSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_GetEditorSubsystem
        fun C(Other: UObject): K2Node_GetEditorSubsystem
        fun C(Other: Any): K2Node_GetEditorSubsystem
    }
}

external open class K2Node_IfThenElse : K2Node {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_IfThenElse
        fun Find(Outer: UObject, ResourceName: String): K2Node_IfThenElse
        fun GetDefaultObject(): K2Node_IfThenElse
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_IfThenElse
        fun C(Other: UObject): K2Node_IfThenElse
        fun C(Other: Any): K2Node_IfThenElse
    }
}

external open class K2Node_InputAction : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var InputActionName: String
    open var bConsumeInput: Boolean
    open var bExecuteWhenPaused: Boolean
    open var bOverrideParentBinding: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_InputAction
        fun Find(Outer: UObject, ResourceName: String): K2Node_InputAction
        fun GetDefaultObject(): K2Node_InputAction
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_InputAction
        fun C(Other: UObject): K2Node_InputAction
        fun C(Other: Any): K2Node_InputAction
    }
}

external open class K2Node_InputActionEvent : K2Node_Event {
    constructor()
    constructor(Outer: UObject)
    open var InputActionName: String
    open var InputKeyEvent: String /* "IE_Pressed" | "IE_Released" | "IE_Repeat" | "IE_DoubleClick" | "IE_Axis" | "IE_MAX" */
    open var bConsumeInput: Boolean
    open var bExecuteWhenPaused: Boolean
    open var bOverrideParentBinding: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_InputActionEvent
        fun Find(Outer: UObject, ResourceName: String): K2Node_InputActionEvent
        fun GetDefaultObject(): K2Node_InputActionEvent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_InputActionEvent
        fun C(Other: UObject): K2Node_InputActionEvent
        fun C(Other: Any): K2Node_InputActionEvent
    }
}

external open class K2Node_InputAxisEvent : K2Node_Event {
    constructor()
    constructor(Outer: UObject)
    open var InputAxisName: String
    open var bConsumeInput: Boolean
    open var bExecuteWhenPaused: Boolean
    open var bOverrideParentBinding: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_InputAxisEvent
        fun Find(Outer: UObject, ResourceName: String): K2Node_InputAxisEvent
        fun GetDefaultObject(): K2Node_InputAxisEvent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_InputAxisEvent
        fun C(Other: UObject): K2Node_InputAxisEvent
        fun C(Other: Any): K2Node_InputAxisEvent
    }
}

external open class K2Node_InputAxisKeyEvent : K2Node_Event {
    constructor()
    constructor(Outer: UObject)
    open var AxisKey: Key
    open var bConsumeInput: Boolean
    open var bExecuteWhenPaused: Boolean
    open var bOverrideParentBinding: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_InputAxisKeyEvent
        fun Find(Outer: UObject, ResourceName: String): K2Node_InputAxisKeyEvent
        fun GetDefaultObject(): K2Node_InputAxisKeyEvent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_InputAxisKeyEvent
        fun C(Other: UObject): K2Node_InputAxisKeyEvent
        fun C(Other: Any): K2Node_InputAxisKeyEvent
    }
}

external open class K2Node_InputKey : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var InputKey: Key
    open var bConsumeInput: Boolean
    open var bExecuteWhenPaused: Boolean
    open var bOverrideParentBinding: Boolean
    open var bControl: Boolean
    open var bAlt: Boolean
    open var bShift: Boolean
    open var bCommand: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_InputKey
        fun Find(Outer: UObject, ResourceName: String): K2Node_InputKey
        fun GetDefaultObject(): K2Node_InputKey
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_InputKey
        fun C(Other: UObject): K2Node_InputKey
        fun C(Other: Any): K2Node_InputKey
    }
}

external open class InputChord {
    open var Key: Key
    open var bShift: Boolean
    open var bCtrl: Boolean
    open var bAlt: Boolean
    open var bCmd: Boolean
    open fun clone(): InputChord
    open fun Equal(B: InputChord): Boolean
    open fun GetInputChordDisplayName(): String

    companion object {
        fun C(Other: UObject): InputChord
        fun C(Other: Any): InputChord
        fun Equal(A: InputChord, B: InputChord): Boolean
        fun GetInputChordDisplayName(Key: InputChord): String
    }
}

external open class K2Node_InputKeyEvent : K2Node_Event {
    constructor()
    constructor(Outer: UObject)
    open var InputChord: InputChord
    open var InputKeyEvent: String /* "IE_Pressed" | "IE_Released" | "IE_Repeat" | "IE_DoubleClick" | "IE_Axis" | "IE_MAX" */
    open var bConsumeInput: Boolean
    open var bExecuteWhenPaused: Boolean
    open var bOverrideParentBinding: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_InputKeyEvent
        fun Find(Outer: UObject, ResourceName: String): K2Node_InputKeyEvent
        fun GetDefaultObject(): K2Node_InputKeyEvent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_InputKeyEvent
        fun C(Other: UObject): K2Node_InputKeyEvent
        fun C(Other: Any): K2Node_InputKeyEvent
    }
}

external open class K2Node_InputTouch : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var bConsumeInput: Boolean
    open var bExecuteWhenPaused: Boolean
    open var bOverrideParentBinding: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_InputTouch
        fun Find(Outer: UObject, ResourceName: String): K2Node_InputTouch
        fun GetDefaultObject(): K2Node_InputTouch
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_InputTouch
        fun C(Other: UObject): K2Node_InputTouch
        fun C(Other: Any): K2Node_InputTouch
    }
}

external open class K2Node_InputTouchEvent : K2Node_Event {
    constructor()
    constructor(Outer: UObject)
    open var InputKeyEvent: String /* "IE_Pressed" | "IE_Released" | "IE_Repeat" | "IE_DoubleClick" | "IE_Axis" | "IE_MAX" */
    open var bConsumeInput: Boolean
    open var bExecuteWhenPaused: Boolean
    open var bOverrideParentBinding: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_InputTouchEvent
        fun Find(Outer: UObject, ResourceName: String): K2Node_InputTouchEvent
        fun GetDefaultObject(): K2Node_InputTouchEvent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_InputTouchEvent
        fun C(Other: UObject): K2Node_InputTouchEvent
        fun C(Other: Any): K2Node_InputTouchEvent
    }
}

external open class K2Node_InputVectorAxisEvent : K2Node_InputAxisKeyEvent {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_InputVectorAxisEvent
        fun Find(Outer: UObject, ResourceName: String): K2Node_InputVectorAxisEvent
        fun GetDefaultObject(): K2Node_InputVectorAxisEvent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_InputVectorAxisEvent
        fun C(Other: UObject): K2Node_InputVectorAxisEvent
        fun C(Other: Any): K2Node_InputVectorAxisEvent
    }
}

external open class K2Node_Knot : K2Node {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_Knot
        fun Find(Outer: UObject, ResourceName: String): K2Node_Knot
        fun GetDefaultObject(): K2Node_Knot
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_Knot
        fun C(Other: UObject): K2Node_Knot
        fun C(Other: Any): K2Node_Knot
    }
}

external open class K2Node_Literal : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var ObjectRef: UObject

    companion object {
        fun Load(ResourceName: String): K2Node_Literal
        fun Find(Outer: UObject, ResourceName: String): K2Node_Literal
        fun GetDefaultObject(): K2Node_Literal
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_Literal
        fun C(Other: UObject): K2Node_Literal
        fun C(Other: Any): K2Node_Literal
    }
}

external open class K2Node_LoadAsset : K2Node {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_LoadAsset
        fun Find(Outer: UObject, ResourceName: String): K2Node_LoadAsset
        fun GetDefaultObject(): K2Node_LoadAsset
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_LoadAsset
        fun C(Other: UObject): K2Node_LoadAsset
        fun C(Other: Any): K2Node_LoadAsset
    }
}

external open class K2Node_LoadAssetClass : K2Node_LoadAsset {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_LoadAssetClass
        fun Find(Outer: UObject, ResourceName: String): K2Node_LoadAssetClass
        fun GetDefaultObject(): K2Node_LoadAssetClass
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_LoadAssetClass
        fun C(Other: UObject): K2Node_LoadAssetClass
        fun C(Other: Any): K2Node_LoadAssetClass
    }
}

external open class K2Node_LocalVariable : K2Node_TemporaryVariable {
    constructor()
    constructor(Outer: UObject)
    open var CustomVariableName: String
    open var VariableTooltip: String

    companion object {
        fun Load(ResourceName: String): K2Node_LocalVariable
        fun Find(Outer: UObject, ResourceName: String): K2Node_LocalVariable
        fun GetDefaultObject(): K2Node_LocalVariable
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_LocalVariable
        fun C(Other: UObject): K2Node_LocalVariable
        fun C(Other: Any): K2Node_LocalVariable
    }
}

external open class GraphReference {
    open var MacroGraph: EdGraph
    open var GraphBlueprint: Blueprint
    open var GraphGuid: Guid
    open fun clone(): GraphReference

    companion object {
        fun C(Other: UObject): GraphReference
        fun C(Other: Any): GraphReference
    }
}

external open class K2Node_MacroInstance : K2Node_Tunnel {
    constructor()
    constructor(Outer: UObject)
    open var MacroGraph: EdGraph
    open var MacroGraphReference: GraphReference
    open var ResolvedWildcardType: EdGraphPinType

    companion object {
        fun Load(ResourceName: String): K2Node_MacroInstance
        fun Find(Outer: UObject, ResourceName: String): K2Node_MacroInstance
        fun GetDefaultObject(): K2Node_MacroInstance
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_MacroInstance
        fun C(Other: UObject): K2Node_MacroInstance
        fun C(Other: Any): K2Node_MacroInstance
    }
}

external open class K2Node_MakeContainer : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var NumInputs: Number

    companion object {
        fun Load(ResourceName: String): K2Node_MakeContainer
        fun Find(Outer: UObject, ResourceName: String): K2Node_MakeContainer
        fun GetDefaultObject(): K2Node_MakeContainer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_MakeContainer
        fun C(Other: UObject): K2Node_MakeContainer
        fun C(Other: Any): K2Node_MakeContainer
    }
}

external open class K2Node_MakeArray : K2Node_MakeContainer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_MakeArray
        fun Find(Outer: UObject, ResourceName: String): K2Node_MakeArray
        fun GetDefaultObject(): K2Node_MakeArray
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_MakeArray
        fun C(Other: UObject): K2Node_MakeArray
        fun C(Other: Any): K2Node_MakeArray
    }
}

external open class K2Node_MakeMap : K2Node_MakeContainer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_MakeMap
        fun Find(Outer: UObject, ResourceName: String): K2Node_MakeMap
        fun GetDefaultObject(): K2Node_MakeMap
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_MakeMap
        fun C(Other: UObject): K2Node_MakeMap
        fun C(Other: Any): K2Node_MakeMap
    }
}

external open class K2Node_MakeSet : K2Node_MakeContainer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_MakeSet
        fun Find(Outer: UObject, ResourceName: String): K2Node_MakeSet
        fun GetDefaultObject(): K2Node_MakeSet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_MakeSet
        fun C(Other: UObject): K2Node_MakeSet
        fun C(Other: Any): K2Node_MakeSet
    }
}

external open class K2Node_StructMemberSet : K2Node_StructOperation {
    constructor()
    constructor(Outer: UObject)
    open var ShowPinForProperties: Array<OptionalPinFromProperty>

    companion object {
        fun Load(ResourceName: String): K2Node_StructMemberSet
        fun Find(Outer: UObject, ResourceName: String): K2Node_StructMemberSet
        fun GetDefaultObject(): K2Node_StructMemberSet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_StructMemberSet
        fun C(Other: UObject): K2Node_StructMemberSet
        fun C(Other: Any): K2Node_StructMemberSet
    }
}

external open class K2Node_MakeStruct : K2Node_StructMemberSet {
    constructor()
    constructor(Outer: UObject)
    open var bMadeAfterOverridePinRemoval: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_MakeStruct
        fun Find(Outer: UObject, ResourceName: String): K2Node_MakeStruct
        fun GetDefaultObject(): K2Node_MakeStruct
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_MakeStruct
        fun C(Other: UObject): K2Node_MakeStruct
        fun C(Other: Any): K2Node_MakeStruct
    }
}

external open class K2Node_MakeVariable : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var VariableType: BPVariableDescription

    companion object {
        fun Load(ResourceName: String): K2Node_MakeVariable
        fun Find(Outer: UObject, ResourceName: String): K2Node_MakeVariable
        fun GetDefaultObject(): K2Node_MakeVariable
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_MakeVariable
        fun C(Other: UObject): K2Node_MakeVariable
        fun C(Other: Any): K2Node_MakeVariable
    }
}

external open class K2Node_MathExpression : K2Node_Composite {
    constructor()
    constructor(Outer: UObject)
    open var Expression: String
    open var bMadeAfterRotChange: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_MathExpression
        fun Find(Outer: UObject, ResourceName: String): K2Node_MathExpression
        fun GetDefaultObject(): K2Node_MathExpression
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_MathExpression
        fun C(Other: UObject): K2Node_MathExpression
        fun C(Other: Any): K2Node_MathExpression
    }
}

external open class K2Node_MatineeController : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var MatineeActor: MatineeActor

    companion object {
        fun Load(ResourceName: String): K2Node_MatineeController
        fun Find(Outer: UObject, ResourceName: String): K2Node_MatineeController
        fun GetDefaultObject(): K2Node_MatineeController
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_MatineeController
        fun C(Other: UObject): K2Node_MatineeController
        fun C(Other: Any): K2Node_MatineeController
    }
}

external open class K2Node_Message : K2Node_CallFunction {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_Message
        fun Find(Outer: UObject, ResourceName: String): K2Node_Message
        fun GetDefaultObject(): K2Node_Message
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_Message
        fun C(Other: UObject): K2Node_Message
        fun C(Other: Any): K2Node_Message
    }
}

external open class K2Node_MultiGate : K2Node_ExecutionSequence {
    constructor()
    constructor(Outer: UObject)
    open var DataNode: K2Node_TemporaryVariable

    companion object {
        fun Load(ResourceName: String): K2Node_MultiGate
        fun Find(Outer: UObject, ResourceName: String): K2Node_MultiGate
        fun GetDefaultObject(): K2Node_MultiGate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_MultiGate
        fun C(Other: UObject): K2Node_MultiGate
        fun C(Other: Any): K2Node_MultiGate
    }
}

external open class K2Node_PureAssignmentStatement : K2Node {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_PureAssignmentStatement
        fun Find(Outer: UObject, ResourceName: String): K2Node_PureAssignmentStatement
        fun GetDefaultObject(): K2Node_PureAssignmentStatement
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_PureAssignmentStatement
        fun C(Other: UObject): K2Node_PureAssignmentStatement
        fun C(Other: Any): K2Node_PureAssignmentStatement
    }
}

external open class K2Node_RemoveDelegate : K2Node_BaseMCDelegate {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_RemoveDelegate
        fun Find(Outer: UObject, ResourceName: String): K2Node_RemoveDelegate
        fun GetDefaultObject(): K2Node_RemoveDelegate
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_RemoveDelegate
        fun C(Other: UObject): K2Node_RemoveDelegate
        fun C(Other: Any): K2Node_RemoveDelegate
    }
}

external open class K2Node_Select : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var NumOptionPins: Number
    open var IndexPinType: EdGraphPinType
    open var Enum: Enum
    open var EnumEntries: Array<String>
    open var EnumEntryFriendlyNames: Array<String>
    open var bReconstructNode: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_Select
        fun Find(Outer: UObject, ResourceName: String): K2Node_Select
        fun GetDefaultObject(): K2Node_Select
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_Select
        fun C(Other: UObject): K2Node_Select
        fun C(Other: Any): K2Node_Select
    }
}

external open class K2Node_Self : K2Node {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_Self
        fun Find(Outer: UObject, ResourceName: String): K2Node_Self
        fun GetDefaultObject(): K2Node_Self
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_Self
        fun C(Other: UObject): K2Node_Self
        fun C(Other: Any): K2Node_Self
    }
}

external open class K2Node_SetFieldsInStruct : K2Node_MakeStruct {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_SetFieldsInStruct
        fun Find(Outer: UObject, ResourceName: String): K2Node_SetFieldsInStruct
        fun GetDefaultObject(): K2Node_SetFieldsInStruct
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_SetFieldsInStruct
        fun C(Other: UObject): K2Node_SetFieldsInStruct
        fun C(Other: Any): K2Node_SetFieldsInStruct
    }
}

external open class K2Node_SetVariableOnPersistentFrame : K2Node {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_SetVariableOnPersistentFrame
        fun Find(Outer: UObject, ResourceName: String): K2Node_SetVariableOnPersistentFrame
        fun GetDefaultObject(): K2Node_SetVariableOnPersistentFrame
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_SetVariableOnPersistentFrame
        fun C(Other: UObject): K2Node_SetVariableOnPersistentFrame
        fun C(Other: Any): K2Node_SetVariableOnPersistentFrame
    }
}

external open class K2Node_SpawnActor : K2Node {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_SpawnActor
        fun Find(Outer: UObject, ResourceName: String): K2Node_SpawnActor
        fun GetDefaultObject(): K2Node_SpawnActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_SpawnActor
        fun C(Other: UObject): K2Node_SpawnActor
        fun C(Other: Any): K2Node_SpawnActor
    }
}

external open class K2Node_SpawnActorFromClass : K2Node_ConstructObjectFromClass {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_SpawnActorFromClass
        fun Find(Outer: UObject, ResourceName: String): K2Node_SpawnActorFromClass
        fun GetDefaultObject(): K2Node_SpawnActorFromClass
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_SpawnActorFromClass
        fun C(Other: UObject): K2Node_SpawnActorFromClass
        fun C(Other: Any): K2Node_SpawnActorFromClass
    }
}

external open class K2Node_Switch : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var bHasDefaultPin: Boolean
    open var FunctionName: String
    open var FunctionClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): K2Node_Switch
        fun Find(Outer: UObject, ResourceName: String): K2Node_Switch
        fun GetDefaultObject(): K2Node_Switch
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_Switch
        fun C(Other: UObject): K2Node_Switch
        fun C(Other: Any): K2Node_Switch
    }
}

external open class K2Node_SwitchEnum : K2Node_Switch {
    constructor()
    constructor(Outer: UObject)
    open var Enum: Enum
    open var EnumEntries: Array<String>
    open var EnumFriendlyNames: Array<String>

    companion object {
        fun Load(ResourceName: String): K2Node_SwitchEnum
        fun Find(Outer: UObject, ResourceName: String): K2Node_SwitchEnum
        fun GetDefaultObject(): K2Node_SwitchEnum
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_SwitchEnum
        fun C(Other: UObject): K2Node_SwitchEnum
        fun C(Other: Any): K2Node_SwitchEnum
    }
}

external open class K2Node_SwitchInteger : K2Node_Switch {
    constructor()
    constructor(Outer: UObject)
    open var StartIndex: Number

    companion object {
        fun Load(ResourceName: String): K2Node_SwitchInteger
        fun Find(Outer: UObject, ResourceName: String): K2Node_SwitchInteger
        fun GetDefaultObject(): K2Node_SwitchInteger
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_SwitchInteger
        fun C(Other: UObject): K2Node_SwitchInteger
        fun C(Other: Any): K2Node_SwitchInteger
    }
}

external open class K2Node_SwitchName : K2Node_Switch {
    constructor()
    constructor(Outer: UObject)
    open var PinNames: Array<String>

    companion object {
        fun Load(ResourceName: String): K2Node_SwitchName
        fun Find(Outer: UObject, ResourceName: String): K2Node_SwitchName
        fun GetDefaultObject(): K2Node_SwitchName
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_SwitchName
        fun C(Other: UObject): K2Node_SwitchName
        fun C(Other: Any): K2Node_SwitchName
    }
}

external open class K2Node_SwitchString : K2Node_Switch {
    constructor()
    constructor(Outer: UObject)
    open var PinNames: Array<String>
    open var bIsCaseSensitive: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_SwitchString
        fun Find(Outer: UObject, ResourceName: String): K2Node_SwitchString
        fun GetDefaultObject(): K2Node_SwitchString
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_SwitchString
        fun C(Other: UObject): K2Node_SwitchString
        fun C(Other: Any): K2Node_SwitchString
    }
}

external open class K2Node_Timeline : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var TimelineName: String
    open var bAutoPlay: Boolean
    open var TimelineGuid: Guid
    open var bLoop: Boolean
    open var bReplicated: Boolean
    open var bIgnoreTimeDilation: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_Timeline
        fun Find(Outer: UObject, ResourceName: String): K2Node_Timeline
        fun GetDefaultObject(): K2Node_Timeline
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_Timeline
        fun C(Other: UObject): K2Node_Timeline
        fun C(Other: Any): K2Node_Timeline
    }
}

external object ETunnelBoundaryType {
    var Unknown: String /* "Unknown" */
    var EntrySite: String /* "EntrySite" */
    var InputSite: String /* "InputSite" */
    var OutputSite: String /* "OutputSite" */
    var ETunnelBoundaryType_MAX: String /* "ETunnelBoundaryType_MAX" */
}

external open class K2Node_TunnelBoundary : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var BaseName: String
    open var TunnelBoundaryType: String /* "Unknown" | "EntrySite" | "InputSite" | "OutputSite" | "ETunnelBoundaryType_MAX" */

    companion object {
        fun Load(ResourceName: String): K2Node_TunnelBoundary
        fun Find(Outer: UObject, ResourceName: String): K2Node_TunnelBoundary
        fun GetDefaultObject(): K2Node_TunnelBoundary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_TunnelBoundary
        fun C(Other: UObject): K2Node_TunnelBoundary
        fun C(Other: Any): K2Node_TunnelBoundary
    }
}

external open class K2Node_VariableGet : K2Node_Variable {
    constructor()
    constructor(Outer: UObject)
    open var bIsPureGet: Boolean

    companion object {
        fun Load(ResourceName: String): K2Node_VariableGet
        fun Find(Outer: UObject, ResourceName: String): K2Node_VariableGet
        fun GetDefaultObject(): K2Node_VariableGet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_VariableGet
        fun C(Other: UObject): K2Node_VariableGet
        fun C(Other: Any): K2Node_VariableGet
    }
}

external open class K2Node_VariableSet : K2Node_Variable {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_VariableSet
        fun Find(Outer: UObject, ResourceName: String): K2Node_VariableSet
        fun GetDefaultObject(): K2Node_VariableSet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_VariableSet
        fun C(Other: UObject): K2Node_VariableSet
        fun C(Other: Any): K2Node_VariableSet
    }
}

external open class K2Node_VariableSetRef : K2Node {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_VariableSetRef
        fun Find(Outer: UObject, ResourceName: String): K2Node_VariableSetRef
        fun GetDefaultObject(): K2Node_VariableSetRef
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_VariableSetRef
        fun C(Other: UObject): K2Node_VariableSetRef
        fun C(Other: Any): K2Node_VariableSetRef
    }
}

external open class NodeDependingOnEnumInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NodeDependingOnEnumInterface
        fun Find(Outer: UObject, ResourceName: String): NodeDependingOnEnumInterface
        fun GetDefaultObject(): NodeDependingOnEnumInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NodeDependingOnEnumInterface
        fun C(Other: UObject): NodeDependingOnEnumInterface
        fun C(Other: Any): NodeDependingOnEnumInterface
    }
}

external object EBlueprintPinStyleType {
    var BPST_Original: String /* "BPST_Original" */
    var BPST_VariantA: String /* "BPST_VariantA" */
    var BPST_MAX: String /* "BPST_MAX" */
}

external object EGraphPanningMouseButton {
    var Right: String /* "Right" */
    var Middle: String /* "Middle" */
    var Both: String /* "Both" */
    var EGraphPanningMouseButton_MAX: String /* "EGraphPanningMouseButton_MAX" */
}

external object ECommentBoxMode {
    var GroupMovement: String /* "GroupMovement" */
    var NoGroupMovement: String /* "NoGroupMovement" */
    var ECommentBoxMode_MAX: String /* "ECommentBoxMode_MAX" */
}

external open class GraphEditorSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var DataPinStyle: String /* "BPST_Original" | "BPST_VariantA" | "BPST_MAX" */
    open var PanningMouseButton: String /* "Right" | "Middle" | "Both" | "EGraphPanningMouseButton_MAX" */
    open var PaddingAbovePin: Number
    open var PaddingBelowPin: Number
    open var PaddingRightOfInput: Number
    open var PaddingLeftOfOutput: Number
    open var PaddingTowardsNodeEdge: Number
    open var bTreatSplinesLikePins: Boolean
    open var SplineHoverTolerance: Number
    open var ForwardSplineHorizontalDeltaRange: Number
    open var ForwardSplineVerticalDeltaRange: Number
    open var ForwardSplineTangentFromHorizontalDelta: Vector2D
    open var ForwardSplineTangentFromVerticalDelta: Vector2D
    open var BackwardSplineHorizontalDeltaRange: Number
    open var BackwardSplineVerticalDeltaRange: Number
    open var BackwardSplineTangentFromHorizontalDelta: Vector2D
    open var BackwardSplineTangentFromVerticalDelta: Vector2D
    open var DefaultPinTypeColor: LinearColor
    open var ExecutionPinTypeColor: LinearColor
    open var BooleanPinTypeColor: LinearColor
    open var BytePinTypeColor: LinearColor
    open var ClassPinTypeColor: LinearColor
    open var IntPinTypeColor: LinearColor
    open var Int64PinTypeColor: LinearColor
    open var FloatPinTypeColor: LinearColor
    open var NamePinTypeColor: LinearColor
    open var SoftObjectPinTypeColor: LinearColor
    open var SoftClassPinTypeColor: LinearColor
    open var DelegatePinTypeColor: LinearColor
    open var ObjectPinTypeColor: LinearColor
    open var InterfacePinTypeColor: LinearColor
    open var StringPinTypeColor: LinearColor
    open var TextPinTypeColor: LinearColor
    open var StructPinTypeColor: LinearColor
    open var WildcardPinTypeColor: LinearColor
    open var VectorPinTypeColor: LinearColor
    open var RotatorPinTypeColor: LinearColor
    open var TransformPinTypeColor: LinearColor
    open var IndexPinTypeColor: LinearColor
    open var EventNodeTitleColor: LinearColor
    open var FunctionCallNodeTitleColor: LinearColor
    open var PureFunctionCallNodeTitleColor: LinearColor
    open var ParentFunctionCallNodeTitleColor: LinearColor
    open var FunctionTerminatorNodeTitleColor: LinearColor
    open var ExecBranchNodeTitleColor: LinearColor
    open var ExecSequenceNodeTitleColor: LinearColor
    open var ResultNodeTitleColor: LinearColor
    open var DefaultCommentNodeTitleColor: LinearColor
    open var PreviewNodeTitleColor: LinearColor
    open var DefaultDataWireThickness: Number
    open var DefaultExecutionWireThickness: Number
    open var TraceAttackColor: LinearColor
    open var TraceAttackWireThickness: Number
    open var TraceAttackHoldPeriod: Number
    open var TraceDecayPeriod: Number
    open var TraceDecayExponent: Number
    open var TraceSustainColor: LinearColor
    open var TraceSustainWireThickness: Number
    open var TraceSustainHoldPeriod: Number
    open var TraceReleaseColor: LinearColor
    open var TraceReleaseWireThickness: Number
    open var TraceReleasePeriod: Number
    open var TraceReleaseExponent: Number
    open var TracePositionBonusPeriod: Number
    open var TracePositionExponent: Number
    open var PaddingAutoCollateIncrement: Number
    open var bOpenCreateMenuOnBlankGraphAreas: Boolean
    open var DefaultCommentNodeMoveMode: String /* "GroupMovement" | "NoGroupMovement" | "ECommentBoxMode_MAX" */
    open var bShowCommentBubbleWhenZoomedOut: Boolean

    companion object {
        fun Load(ResourceName: String): GraphEditorSettings
        fun Find(Outer: UObject, ResourceName: String): GraphEditorSettings
        fun GetDefaultObject(): GraphEditorSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GraphEditorSettings
        fun C(Other: UObject): GraphEditorSettings
        fun C(Other: Any): GraphEditorSettings
    }
}

external open class AnimationConduitGraphSchema : EdGraphSchema_K2 {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimationConduitGraphSchema
        fun Find(Outer: UObject, ResourceName: String): AnimationConduitGraphSchema
        fun GetDefaultObject(): AnimationConduitGraphSchema
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationConduitGraphSchema
        fun C(Other: UObject): AnimationConduitGraphSchema
        fun C(Other: Any): AnimationConduitGraphSchema
    }
}

external open class AnimGraphBlendOptions {
    open var BlendInTime: Number
    open var BlendOutTime: Number
    open fun clone(): AnimGraphBlendOptions

    companion object {
        fun C(Other: UObject): AnimGraphBlendOptions
        fun C(Other: Any): AnimGraphBlendOptions
    }
}

external open class AnimationGraph : EdGraph {
    constructor()
    constructor(Outer: UObject)
    open var BlendOptions: AnimGraphBlendOptions

    companion object {
        fun Load(ResourceName: String): AnimationGraph
        fun Find(Outer: UObject, ResourceName: String): AnimationGraph
        fun GetDefaultObject(): AnimationGraph
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationGraph
        fun C(Other: UObject): AnimationGraph
        fun C(Other: Any): AnimationGraph
    }
}

external object EBlueprintUsage {
    var NoProperties: String /* "NoProperties" */
    var DoesNotUseBlueprint: String /* "DoesNotUseBlueprint" */
    var UsesBlueprint: String /* "UsesBlueprint" */
    var EBlueprintUsage_MAX: String /* "EBlueprintUsage_MAX" */
}

external open class AnimGraphNode_Base : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var ShowPinForProperties: Array<OptionalPinFromProperty>
    open var PropertyBindings: Any
    open var BlueprintUsage: String /* "NoProperties" | "DoesNotUseBlueprint" | "UsesBlueprint" | "EBlueprintUsage_MAX" */

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_Base
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_Base
        fun GetDefaultObject(): AnimGraphNode_Base
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_Base
        fun C(Other: UObject): AnimGraphNode_Base
        fun C(Other: Any): AnimGraphNode_Base
    }
}

external open class AnimNode_Base {
    open fun clone(): AnimNode_Base

    companion object {
        fun C(Other: UObject): AnimNode_Base
        fun C(Other: Any): AnimNode_Base
    }
}

external open class PoseLinkBase {
    open var LinkID: Number
    open var SourceLinkID: Number
    open fun clone(): PoseLinkBase

    companion object {
        fun C(Other: UObject): PoseLinkBase
        fun C(Other: Any): PoseLinkBase
    }
}

external open class PoseLink : PoseLinkBase {
    override fun clone(): PoseLink

    companion object {
        fun C(Other: UObject): PoseLink
        fun C(Other: Any): PoseLink
    }
}

external open class AnimNode_Root : AnimNode_Base {
    open var Result: PoseLink
    open var Name: String
    open var Group: String
    override fun clone(): AnimNode_Root

    companion object {
        fun C(Other: UObject): AnimNode_Root
        fun C(Other: Any): AnimNode_Root
    }
}

external open class AnimNode_StateResult : AnimNode_Root {
    override fun clone(): AnimNode_StateResult

    companion object {
        fun C(Other: UObject): AnimNode_StateResult
        fun C(Other: Any): AnimNode_StateResult
    }
}

external open class AnimGraphNode_StateResult : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_StateResult

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_StateResult
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_StateResult
        fun GetDefaultObject(): AnimGraphNode_StateResult
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_StateResult
        fun C(Other: UObject): AnimGraphNode_StateResult
        fun C(Other: Any): AnimGraphNode_StateResult
    }
}

external open class AnimGraphNode_CustomTransitionResult : AnimGraphNode_StateResult {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_CustomTransitionResult
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_CustomTransitionResult
        fun GetDefaultObject(): AnimGraphNode_CustomTransitionResult
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_CustomTransitionResult
        fun C(Other: UObject): AnimGraphNode_CustomTransitionResult
        fun C(Other: Any): AnimGraphNode_CustomTransitionResult
    }
}

external open class AnimationCustomTransitionGraph : AnimationGraph {
    constructor()
    constructor(Outer: UObject)
    open var MyResultNode: AnimGraphNode_CustomTransitionResult

    companion object {
        fun Load(ResourceName: String): AnimationCustomTransitionGraph
        fun Find(Outer: UObject, ResourceName: String): AnimationCustomTransitionGraph
        fun GetDefaultObject(): AnimationCustomTransitionGraph
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationCustomTransitionGraph
        fun C(Other: UObject): AnimationCustomTransitionGraph
        fun C(Other: Any): AnimationCustomTransitionGraph
    }
}

external open class AnimationGraphSchema : EdGraphSchema_K2 {
    constructor()
    constructor(Outer: UObject)
    open var PN_SequenceName: String
    open var NAME_NeverAsPin: String
    open var NAME_PinHiddenByDefault: String
    open var NAME_PinShownByDefault: String
    open var NAME_AlwaysAsPin: String
    open var NAME_CustomizeProperty: String
    open var NAME_OnEvaluate: String
    open var DefaultEvaluationHandlerName: String

    companion object {
        fun Load(ResourceName: String): AnimationGraphSchema
        fun Find(Outer: UObject, ResourceName: String): AnimationGraphSchema
        fun GetDefaultObject(): AnimationGraphSchema
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationGraphSchema
        fun C(Other: UObject): AnimationGraphSchema
        fun C(Other: Any): AnimationGraphSchema
    }
}

external open class AnimationCustomTransitionSchema : AnimationGraphSchema {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimationCustomTransitionSchema
        fun Find(Outer: UObject, ResourceName: String): AnimationCustomTransitionSchema
        fun GetDefaultObject(): AnimationCustomTransitionSchema
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationCustomTransitionSchema
        fun C(Other: UObject): AnimationCustomTransitionSchema
        fun C(Other: Any): AnimationCustomTransitionSchema
    }
}

external open class AnimationStateGraph : AnimationGraph {
    constructor()
    constructor(Outer: UObject)
    open var MyResultNode: AnimGraphNode_StateResult

    companion object {
        fun Load(ResourceName: String): AnimationStateGraph
        fun Find(Outer: UObject, ResourceName: String): AnimationStateGraph
        fun GetDefaultObject(): AnimationStateGraph
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationStateGraph
        fun C(Other: UObject): AnimationStateGraph
        fun C(Other: Any): AnimationStateGraph
    }
}

external open class AnimationStateGraphSchema : AnimationGraphSchema {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimationStateGraphSchema
        fun Find(Outer: UObject, ResourceName: String): AnimationStateGraphSchema
        fun GetDefaultObject(): AnimationStateGraphSchema
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationStateGraphSchema
        fun C(Other: UObject): AnimationStateGraphSchema
        fun C(Other: Any): AnimationStateGraphSchema
    }
}

external open class AnimStateEntryNode : EdGraphNode {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimStateEntryNode
        fun Find(Outer: UObject, ResourceName: String): AnimStateEntryNode
        fun GetDefaultObject(): AnimStateEntryNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimStateEntryNode
        fun C(Other: UObject): AnimStateEntryNode
        fun C(Other: Any): AnimStateEntryNode
    }
}

external open class AnimGraphNode_StateMachineBase : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var EditorStateMachineGraph: AnimationStateMachineGraph

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_StateMachineBase
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_StateMachineBase
        fun GetDefaultObject(): AnimGraphNode_StateMachineBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_StateMachineBase
        fun C(Other: UObject): AnimGraphNode_StateMachineBase
        fun C(Other: Any): AnimGraphNode_StateMachineBase
    }
}

external open class AnimationStateMachineGraph : EdGraph {
    constructor()
    constructor(Outer: UObject)
    open var EntryNode: AnimStateEntryNode
    open var OwnerAnimGraphNode: AnimGraphNode_StateMachineBase

    companion object {
        fun Load(ResourceName: String): AnimationStateMachineGraph
        fun Find(Outer: UObject, ResourceName: String): AnimationStateMachineGraph
        fun GetDefaultObject(): AnimationStateMachineGraph
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationStateMachineGraph
        fun C(Other: UObject): AnimationStateMachineGraph
        fun C(Other: Any): AnimationStateMachineGraph
    }
}

external open class AnimationStateMachineSchema : EdGraphSchema {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimationStateMachineSchema
        fun Find(Outer: UObject, ResourceName: String): AnimationStateMachineSchema
        fun GetDefaultObject(): AnimationStateMachineSchema
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationStateMachineSchema
        fun C(Other: UObject): AnimationStateMachineSchema
        fun C(Other: Any): AnimationStateMachineSchema
    }
}

external open class AnimNode_TransitionResult : AnimNode_Base {
    open var bCanEnterTransition: Boolean
    override fun clone(): AnimNode_TransitionResult

    companion object {
        fun C(Other: UObject): AnimNode_TransitionResult
        fun C(Other: Any): AnimNode_TransitionResult
    }
}

external open class AnimGraphNode_TransitionResult : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_TransitionResult

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_TransitionResult
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_TransitionResult
        fun GetDefaultObject(): AnimGraphNode_TransitionResult
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_TransitionResult
        fun C(Other: UObject): AnimGraphNode_TransitionResult
        fun C(Other: Any): AnimGraphNode_TransitionResult
    }
}

external open class AnimationTransitionGraph : AnimationGraph {
    constructor()
    constructor(Outer: UObject)
    open var MyResultNode: AnimGraphNode_TransitionResult

    companion object {
        fun Load(ResourceName: String): AnimationTransitionGraph
        fun Find(Outer: UObject, ResourceName: String): AnimationTransitionGraph
        fun GetDefaultObject(): AnimationTransitionGraph
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationTransitionGraph
        fun C(Other: UObject): AnimationTransitionGraph
        fun C(Other: Any): AnimationTransitionGraph
    }
}

external open class AnimationTransitionSchema : EdGraphSchema_K2 {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimationTransitionSchema
        fun Find(Outer: UObject, ResourceName: String): AnimationTransitionSchema
        fun GetDefaultObject(): AnimationTransitionSchema
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationTransitionSchema
        fun C(Other: UObject): AnimationTransitionSchema
        fun C(Other: Any): AnimationTransitionSchema
    }
}

external open class AnimBlueprintPostCompileValidation : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimBlueprintPostCompileValidation
        fun Find(Outer: UObject, ResourceName: String): AnimBlueprintPostCompileValidation
        fun GetDefaultObject(): AnimBlueprintPostCompileValidation
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimBlueprintPostCompileValidation
        fun C(Other: UObject): AnimBlueprintPostCompileValidation
        fun C(Other: Any): AnimBlueprintPostCompileValidation
    }
}

external object EAnimGroupRole {
    var CanBeLeader: String /* "CanBeLeader" */
    var AlwaysFollower: String /* "AlwaysFollower" */
    var AlwaysLeader: String /* "AlwaysLeader" */
    var TransitionLeader: String /* "TransitionLeader" */
    var TransitionFollower: String /* "TransitionFollower" */
    var EAnimGroupRole_MAX: String /* "EAnimGroupRole_MAX" */
}

external object EAnimSyncGroupScope {
    var Local: String /* "Local" */
    var Component: String /* "Component" */
    var EAnimSyncGroupScope_MAX: String /* "EAnimSyncGroupScope_MAX" */
}

external open class AnimationGroupReference {
    open var GroupName: String
    open var GroupRole: String /* "CanBeLeader" | "AlwaysFollower" | "AlwaysLeader" | "TransitionLeader" | "TransitionFollower" | "EAnimGroupRole_MAX" */
    open var GroupScope: String /* "Local" | "Component" | "EAnimSyncGroupScope_MAX" */
    open fun clone(): AnimationGroupReference

    companion object {
        fun C(Other: UObject): AnimationGroupReference
        fun C(Other: Any): AnimationGroupReference
    }
}

external open class AnimGraphNode_AssetPlayerBase : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var SyncGroup: AnimationGroupReference

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_AssetPlayerBase
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_AssetPlayerBase
        fun GetDefaultObject(): AnimGraphNode_AssetPlayerBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_AssetPlayerBase
        fun C(Other: UObject): AnimGraphNode_AssetPlayerBase
        fun C(Other: Any): AnimGraphNode_AssetPlayerBase
    }
}

external open class AnimGraphNode_BlendSpaceBase : AnimGraphNode_AssetPlayerBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_BlendSpaceBase
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_BlendSpaceBase
        fun GetDefaultObject(): AnimGraphNode_BlendSpaceBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_BlendSpaceBase
        fun C(Other: UObject): AnimGraphNode_BlendSpaceBase
        fun C(Other: Any): AnimGraphNode_BlendSpaceBase
    }
}

external open class AnimNode_AssetPlayerBase : AnimNode_Base {
    open var GroupName: String
    open var GroupIndex: Number
    open var GroupRole: String /* "CanBeLeader" | "AlwaysFollower" | "AlwaysLeader" | "TransitionLeader" | "TransitionFollower" | "EAnimGroupRole_MAX" */
    open var GroupScope: String /* "Local" | "Component" | "EAnimSyncGroupScope_MAX" */
    open var bIgnoreForRelevancyTest: Boolean
    open var BlendWeight: Number
    open var InternalTimeAccumulator: Number
    override fun clone(): AnimNode_AssetPlayerBase

    companion object {
        fun C(Other: UObject): AnimNode_AssetPlayerBase
        fun C(Other: Any): AnimNode_AssetPlayerBase
    }
}

external object EFilterInterpolationType {
    var BSIT_Average: String /* "BSIT_Average" */
    var BSIT_Linear: String /* "BSIT_Linear" */
    var BSIT_Cubic: String /* "BSIT_Cubic" */
    var BSIT_MAX: String /* "BSIT_MAX" */
}

external open class InterpolationParameter {
    open var InterpolationTime: Number
    open var InterpolationType: String /* "BSIT_Average" | "BSIT_Linear" | "BSIT_Cubic" | "BSIT_MAX" */
    open fun clone(): InterpolationParameter

    companion object {
        fun C(Other: UObject): InterpolationParameter
        fun C(Other: Any): InterpolationParameter
    }
}

external object ENotifyTriggerMode {
    var AllAnimations: String /* "AllAnimations" */
    var HighestWeightedAnimation: String /* "HighestWeightedAnimation" */
    var None: String /* "None" */
    var ENotifyTriggerMode_MAX: String /* "ENotifyTriggerMode_MAX" */
}

external open class PerBoneInterpolation {
    open var BoneReference: BoneReference
    open var InterpolationSpeedPerSec: Number
    open fun clone(): PerBoneInterpolation

    companion object {
        fun C(Other: UObject): PerBoneInterpolation
        fun C(Other: Any): PerBoneInterpolation
    }
}

external open class BlendSample {
    open var Animation: AnimSequence
    open var SampleValue: Vector
    open var RateScale: Number
    open var bSnapToGrid: Boolean
    open var bIsValid: Boolean
    open fun clone(): BlendSample

    companion object {
        fun C(Other: UObject): BlendSample
        fun C(Other: Any): BlendSample
    }
}

external open class EditorElement {
    open var Indices: Number
    open var Weights: Number
    open fun clone(): EditorElement

    companion object {
        fun C(Other: UObject): EditorElement
        fun C(Other: Any): EditorElement
    }
}

external open class BlendParameter {
    open var DisplayName: String
    open var Min: Number
    open var Max: Number
    open var GridNum: Number
    open fun clone(): BlendParameter

    companion object {
        fun C(Other: UObject): BlendParameter
        fun C(Other: Any): BlendParameter
    }
}

external open class BlendSpaceBase : AnimationAsset {
    constructor()
    constructor(Outer: UObject)
    open var bRotationBlendInMeshSpace: Boolean
    open var PreviewBasePose: AnimSequence
    open var AnimLength: Number
    open var InterpolationParam: InterpolationParameter
    open var TargetWeightInterpolationSpeedPerSec: Number
    open var NotifyTriggerMode: String /* "AllAnimations" | "HighestWeightedAnimation" | "None" | "ENotifyTriggerMode_MAX" */
    open var PerBoneBlend: Array<PerBoneInterpolation>
    open var SampleIndexWithMarkers: Number
    open var SampleData: Array<BlendSample>
    open var GridSamples: Array<EditorElement>
    open var BlendParameters: BlendParameter

    companion object {
        fun Load(ResourceName: String): BlendSpaceBase
        fun Find(Outer: UObject, ResourceName: String): BlendSpaceBase
        fun GetDefaultObject(): BlendSpaceBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlendSpaceBase
        fun C(Other: UObject): BlendSpaceBase
        fun C(Other: Any): BlendSpaceBase
    }
}

external open class AnimNode_BlendSpacePlayer : AnimNode_AssetPlayerBase {
    open var X: Number
    open var Y: Number
    open var Z: Number
    open var PlayRate: Number
    open var bLoop: Boolean
    open var bResetPlayTimeWhenBlendSpaceChanges: Boolean
    open var StartPosition: Number
    open var BlendSpace: BlendSpaceBase
    open var PreviousBlendSpace: BlendSpaceBase
    override fun clone(): AnimNode_BlendSpacePlayer

    companion object {
        fun C(Other: UObject): AnimNode_BlendSpacePlayer
        fun C(Other: Any): AnimNode_BlendSpacePlayer
    }
}

external open class AnimNode_AimOffsetLookAt : AnimNode_BlendSpacePlayer {
    open var BasePose: PoseLink
    open var LODThreshold: Number
    open var SourceSocketName: String
    open var PivotSocketName: String
    open var LookAtLocation: Vector
    open var SocketAxis: Vector
    open var Alpha: Number
    override fun clone(): AnimNode_AimOffsetLookAt

    companion object {
        fun C(Other: UObject): AnimNode_AimOffsetLookAt
        fun C(Other: Any): AnimNode_AimOffsetLookAt
    }
}

external open class AnimGraphNode_AimOffsetLookAt : AnimGraphNode_BlendSpaceBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_AimOffsetLookAt

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_AimOffsetLookAt
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_AimOffsetLookAt
        fun GetDefaultObject(): AnimGraphNode_AimOffsetLookAt
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_AimOffsetLookAt
        fun C(Other: UObject): AnimGraphNode_AimOffsetLookAt
        fun C(Other: Any): AnimGraphNode_AimOffsetLookAt
    }
}

external open class AnimGraphNode_SkeletalControlBase : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_SkeletalControlBase
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_SkeletalControlBase
        fun GetDefaultObject(): AnimGraphNode_SkeletalControlBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_SkeletalControlBase
        fun C(Other: UObject): AnimGraphNode_SkeletalControlBase
        fun C(Other: Any): AnimGraphNode_SkeletalControlBase
    }
}

external open class ComponentSpacePoseLink : PoseLinkBase {
    override fun clone(): ComponentSpacePoseLink

    companion object {
        fun C(Other: UObject): ComponentSpacePoseLink
        fun C(Other: Any): ComponentSpacePoseLink
    }
}

external object EAnimAlphaInputType {
    var Float: String /* "Float" */
    var Bool: String /* "Bool" */
    var Curve: String /* "Curve" */
    var EAnimAlphaInputType_MAX: String /* "EAnimAlphaInputType_MAX" */
}

external open class InputScaleBias {
    open var Scale: Number
    open var Bias: Number
    open fun clone(): InputScaleBias

    companion object {
        fun C(Other: UObject): InputScaleBias
        fun C(Other: Any): InputScaleBias
    }
}

external open class InputAlphaBoolBlend {
    open var BlendInTime: Number
    open var BlendOutTime: Number
    open var BlendOption: String /* "Linear" | "Cubic" | "HermiteCubic" | "Sinusoidal" | "QuadraticInOut" | "CubicInOut" | "QuarticInOut" | "QuinticInOut" | "CircularIn" | "CircularOut" | "CircularInOut" | "ExpIn" | "ExpOut" | "ExpInOut" | "Custom" | "EAlphaBlendOption_MAX" */
    open var bInitialized: Boolean
    open var CustomCurve: CurveFloat
    open var AlphaBlend: AlphaBlend
    open fun clone(): InputAlphaBoolBlend

    companion object {
        fun C(Other: UObject): InputAlphaBoolBlend
        fun C(Other: Any): InputAlphaBoolBlend
    }
}

external open class InputRange {
    open var Min: Number
    open var Max: Number
    open fun clone(): InputRange

    companion object {
        fun C(Other: UObject): InputRange
        fun C(Other: Any): InputRange
    }
}

external open class InputScaleBiasClamp {
    open var bMapRange: Boolean
    open var bClampResult: Boolean
    open var bInterpResult: Boolean
    open var InRange: InputRange
    open var OutRange: InputRange
    open var Scale: Number
    open var Bias: Number
    open var ClampMin: Number
    open var ClampMax: Number
    open var InterpSpeedIncreasing: Number
    open var InterpSpeedDecreasing: Number
    open fun clone(): InputScaleBiasClamp

    companion object {
        fun C(Other: UObject): InputScaleBiasClamp
        fun C(Other: Any): InputScaleBiasClamp
    }
}

external open class AnimNode_SkeletalControlBase : AnimNode_Base {
    open var ComponentPose: ComponentSpacePoseLink
    open var LODThreshold: Number
    open var ActualAlpha: Number
    open var AlphaInputType: String /* "Float" | "Bool" | "Curve" | "EAnimAlphaInputType_MAX" */
    open var bAlphaBoolEnabled: Boolean
    open var Alpha: Number
    open var AlphaScaleBias: InputScaleBias
    open var AlphaBoolBlend: InputAlphaBoolBlend
    open var AlphaCurveName: String
    open var AlphaScaleBiasClamp: InputScaleBiasClamp
    override fun clone(): AnimNode_SkeletalControlBase

    companion object {
        fun C(Other: UObject): AnimNode_SkeletalControlBase
        fun C(Other: Any): AnimNode_SkeletalControlBase
    }
}

external object AnimPhysLinearConstraintType {
    var Free: String /* "Free" */
    var Limited: String /* "Limited" */
    var AnimPhysLinearConstraintType_MAX: String /* "AnimPhysLinearConstraintType_MAX" */
}

external object AnimPhysAngularConstraintType {
    var Angular: String /* "Angular" */
    var Cone: String /* "Cone" */
    var AnimPhysAngularConstraintType_MAX: String /* "AnimPhysAngularConstraintType_MAX" */
}

external object AnimPhysTwistAxis {
    var AxisX: String /* "AxisX" */
    var AxisY: String /* "AxisY" */
    var AxisZ: String /* "AxisZ" */
    var AnimPhysTwistAxis_MAX: String /* "AnimPhysTwistAxis_MAX" */
}

external open class AnimPhysConstraintSetup {
    open var LinearXLimitType: String /* "Free" | "Limited" | "AnimPhysLinearConstraintType_MAX" */
    open var LinearYLimitType: String /* "Free" | "Limited" | "AnimPhysLinearConstraintType_MAX" */
    open var LinearZLimitType: String /* "Free" | "Limited" | "AnimPhysLinearConstraintType_MAX" */
    open var LinearAxesMin: Vector
    open var LinearAxesMax: Vector
    open var AngularConstraintType: String /* "Angular" | "Cone" | "AnimPhysAngularConstraintType_MAX" */
    open var TwistAxis: String /* "AxisX" | "AxisY" | "AxisZ" | "AnimPhysTwistAxis_MAX" */
    open var AngularTargetAxis: String /* "AxisX" | "AxisY" | "AxisZ" | "AnimPhysTwistAxis_MAX" */
    open var ConeAngle: Number
    open var AngularXAngle: Number
    open var AngularYAngle: Number
    open var AngularZAngle: Number
    open var AngularLimitsMin: Vector
    open var AngularLimitsMax: Vector
    open var AngularTarget: Vector
    open fun clone(): AnimPhysConstraintSetup

    companion object {
        fun C(Other: UObject): AnimPhysConstraintSetup
        fun C(Other: Any): AnimPhysConstraintSetup
    }
}

external object ESphericalLimitType {
    var Inner: String /* "Inner" */
    var Outer: String /* "Outer" */
    var ESphericalLimitType_MAX: String /* "ESphericalLimitType_MAX" */
}

external open class AnimPhysSphericalLimit {
    open var DrivingBone: BoneReference
    open var SphereLocalOffset: Vector
    open var LimitRadius: Number
    open var LimitType: String /* "Inner" | "Outer" | "ESphericalLimitType_MAX" */
    open fun clone(): AnimPhysSphericalLimit

    companion object {
        fun C(Other: UObject): AnimPhysSphericalLimit
        fun C(Other: Any): AnimPhysSphericalLimit
    }
}

external open class AnimPhysPlanarLimit {
    open var DrivingBone: BoneReference
    open var PlaneTransform: Transform
    open fun clone(): AnimPhysPlanarLimit

    companion object {
        fun C(Other: UObject): AnimPhysPlanarLimit
        fun C(Other: Any): AnimPhysPlanarLimit
    }
}

external object AnimPhysCollisionType {
    var CoM: String /* "CoM" */
    var CustomSphere: String /* "CustomSphere" */
    var InnerSphere: String /* "InnerSphere" */
    var OuterSphere: String /* "OuterSphere" */
    var AnimPhysCollisionType_MAX: String /* "AnimPhysCollisionType_MAX" */
}

external object AnimPhysSimSpaceType {
    var Component: String /* "Component" */
    var Actor: String /* "Actor" */
    var World: String /* "World" */
    var RootRelative: String /* "RootRelative" */
    var BoneRelative: String /* "BoneRelative" */
    var AnimPhysSimSpaceType_MAX: String /* "AnimPhysSimSpaceType_MAX" */
}

external object ERotationComponent {
    var EulerX: String /* "EulerX" */
    var EulerY: String /* "EulerY" */
    var EulerZ: String /* "EulerZ" */
    var QuaternionAngle: String /* "QuaternionAngle" */
    var SwingAngle: String /* "SwingAngle" */
    var TwistAngle: String /* "TwistAngle" */
    var ERotationComponent_MAX: String /* "ERotationComponent_MAX" */
}

external object EEasingFuncType {
    var Linear: String /* "Linear" */
    var Sinusoidal: String /* "Sinusoidal" */
    var Cubic: String /* "Cubic" */
    var QuadraticInOut: String /* "QuadraticInOut" */
    var CubicInOut: String /* "CubicInOut" */
    var HermiteCubic: String /* "HermiteCubic" */
    var QuarticInOut: String /* "QuarticInOut" */
    var QuinticInOut: String /* "QuinticInOut" */
    var CircularIn: String /* "CircularIn" */
    var CircularOut: String /* "CircularOut" */
    var CircularInOut: String /* "CircularInOut" */
    var ExpIn: String /* "ExpIn" */
    var ExpOut: String /* "ExpOut" */
    var ExpInOut: String /* "ExpInOut" */
    var CustomCurve: String /* "CustomCurve" */
    var EEasingFuncType_MAX: String /* "EEasingFuncType_MAX" */
}

external open class RotationRetargetingInfo {
    open var bEnabled: Boolean
    open var Source: Transform
    open var Target: Transform
    open var RotationComponent: String /* "EulerX" | "EulerY" | "EulerZ" | "QuaternionAngle" | "SwingAngle" | "TwistAngle" | "ERotationComponent_MAX" */
    open var TwistAxis: Vector
    open var bUseAbsoluteAngle: Boolean
    open var SourceMinimum: Number
    open var SourceMaximum: Number
    open var TargetMinimum: Number
    open var TargetMaximum: Number
    open var EasingType: String /* "Linear" | "Sinusoidal" | "Cubic" | "QuadraticInOut" | "CubicInOut" | "HermiteCubic" | "QuarticInOut" | "QuinticInOut" | "CircularIn" | "CircularOut" | "CircularInOut" | "ExpIn" | "ExpOut" | "ExpInOut" | "CustomCurve" | "EEasingFuncType_MAX" */
    open var CustomCurve: RuntimeFloatCurve
    open var bFlipEasing: Boolean
    open var EasingWeight: Number
    open var bClamp: Boolean
    open fun clone(): RotationRetargetingInfo

    companion object {
        fun C(Other: UObject): RotationRetargetingInfo
        fun C(Other: Any): RotationRetargetingInfo
    }
}

external open class AnimNode_AnimDynamics : AnimNode_SkeletalControlBase {
    open var LinearDampingOverride: Number
    open var AngularDampingOverride: Number
    open var RelativeSpaceBone: BoneReference
    open var BoundBone: BoneReference
    open var ChainEnd: BoneReference
    open var BoxExtents: Vector
    open var LocalJointOffset: Vector
    open var GravityScale: Number
    open var GravityOverride: Vector
    open var LinearSpringConstant: Number
    open var AngularSpringConstant: Number
    open var WindScale: Number
    open var ComponentLinearAccScale: Vector
    open var ComponentLinearVelScale: Vector
    open var ComponentAppliedLinearAccClamp: Vector
    open var AngularBiasOverride: Number
    open var NumSolverIterationsPreUpdate: Number
    open var NumSolverIterationsPostUpdate: Number
    open var ConstraintSetup: AnimPhysConstraintSetup
    open var SphericalLimits: Array<AnimPhysSphericalLimit>
    open var SphereCollisionRadius: Number
    open var ExternalForce: Vector
    open var PlanarLimits: Array<AnimPhysPlanarLimit>
    open var CollisionType: String /* "CoM" | "CustomSphere" | "InnerSphere" | "OuterSphere" | "AnimPhysCollisionType_MAX" */
    open var SimulationSpace: String /* "Component" | "Actor" | "World" | "RootRelative" | "BoneRelative" | "AnimPhysSimSpaceType_MAX" */
    open var bUseSphericalLimits: Boolean
    open var bUsePlanarLimit: Boolean
    open var bDoUpdate: Boolean
    open var bDoEval: Boolean
    open var bOverrideLinearDamping: Boolean
    open var bOverrideAngularBias: Boolean
    open var bOverrideAngularDamping: Boolean
    open var bEnableWind: Boolean
    open var bUseGravityOverride: Boolean
    open var bLinearSpring: Boolean
    open var bAngularSpring: Boolean
    open var bChain: Boolean
    open var RetargetingSettings: RotationRetargetingInfo
    override fun clone(): AnimNode_AnimDynamics

    companion object {
        fun C(Other: UObject): AnimNode_AnimDynamics
        fun C(Other: Any): AnimNode_AnimDynamics
    }
}

external open class AnimGraphNode_AnimDynamics : AnimGraphNode_SkeletalControlBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_AnimDynamics
    open var bPreviewLive: Boolean
    open var bShowLinearLimits: Boolean
    open var bShowAngularLimits: Boolean
    open var bShowPlanarLimit: Boolean
    open var bShowSphericalLimit: Boolean
    open var bShowCollisionSpheres: Boolean
    open var LastPreviewComponent: SkeletalMeshComponent

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_AnimDynamics
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_AnimDynamics
        fun GetDefaultObject(): AnimGraphNode_AnimDynamics
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_AnimDynamics
        fun C(Other: UObject): AnimGraphNode_AnimDynamics
        fun C(Other: Any): AnimGraphNode_AnimDynamics
    }
}

external open class AnimNode_ApplyAdditive : AnimNode_Base {
    open var Base: PoseLink
    open var Additive: PoseLink
    open var Alpha: Number
    open var AlphaScaleBias: InputScaleBias
    open var LODThreshold: Number
    open var AlphaBoolBlend: InputAlphaBoolBlend
    open var AlphaCurveName: String
    open var AlphaScaleBiasClamp: InputScaleBiasClamp
    open var AlphaInputType: String /* "Float" | "Bool" | "Curve" | "EAnimAlphaInputType_MAX" */
    open var bAlphaBoolEnabled: Boolean
    override fun clone(): AnimNode_ApplyAdditive

    companion object {
        fun C(Other: UObject): AnimNode_ApplyAdditive
        fun C(Other: Any): AnimNode_ApplyAdditive
    }
}

external open class AnimGraphNode_ApplyAdditive : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_ApplyAdditive

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_ApplyAdditive
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_ApplyAdditive
        fun GetDefaultObject(): AnimGraphNode_ApplyAdditive
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_ApplyAdditive
        fun C(Other: UObject): AnimGraphNode_ApplyAdditive
        fun C(Other: Any): AnimGraphNode_ApplyAdditive
    }
}

external open class AngularRangeLimit {
    open var LimitMin: Vector
    open var LimitMax: Vector
    open var Bone: BoneReference
    open fun clone(): AngularRangeLimit

    companion object {
        fun C(Other: UObject): AngularRangeLimit
        fun C(Other: Any): AngularRangeLimit
    }
}

external open class AnimNode_ApplyLimits : AnimNode_SkeletalControlBase {
    open var AngularRangeLimits: Array<AngularRangeLimit>
    open var AngularOffsets: Array<Vector>
    override fun clone(): AnimNode_ApplyLimits

    companion object {
        fun C(Other: UObject): AnimNode_ApplyLimits
        fun C(Other: Any): AnimNode_ApplyLimits
    }
}

external open class AnimGraphNode_ApplyLimits : AnimGraphNode_SkeletalControlBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_ApplyLimits

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_ApplyLimits
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_ApplyLimits
        fun GetDefaultObject(): AnimGraphNode_ApplyLimits
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_ApplyLimits
        fun C(Other: UObject): AnimGraphNode_ApplyLimits
        fun C(Other: Any): AnimGraphNode_ApplyLimits
    }
}

external open class AnimNode_ApplyMeshSpaceAdditive : AnimNode_Base {
    open var Base: PoseLink
    open var Additive: PoseLink
    open var AlphaInputType: String /* "Float" | "Bool" | "Curve" | "EAnimAlphaInputType_MAX" */
    open var Alpha: Number
    open var bAlphaBoolEnabled: Boolean
    open var AlphaBoolBlend: InputAlphaBoolBlend
    open var AlphaCurveName: String
    open var AlphaScaleBias: InputScaleBias
    open var AlphaScaleBiasClamp: InputScaleBiasClamp
    open var LODThreshold: Number
    override fun clone(): AnimNode_ApplyMeshSpaceAdditive

    companion object {
        fun C(Other: UObject): AnimNode_ApplyMeshSpaceAdditive
        fun C(Other: Any): AnimNode_ApplyMeshSpaceAdditive
    }
}

external open class AnimGraphNode_ApplyMeshSpaceAdditive : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_ApplyMeshSpaceAdditive

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_ApplyMeshSpaceAdditive
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_ApplyMeshSpaceAdditive
        fun GetDefaultObject(): AnimGraphNode_ApplyMeshSpaceAdditive
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_ApplyMeshSpaceAdditive
        fun C(Other: UObject): AnimGraphNode_ApplyMeshSpaceAdditive
        fun C(Other: Any): AnimGraphNode_ApplyMeshSpaceAdditive
    }
}

external open class BlendBoneByChannelEntry {
    open var SourceBone: BoneReference
    open var TargetBone: BoneReference
    open var bBlendTranslation: Boolean
    open var bBlendRotation: Boolean
    open var bBlendScale: Boolean
    open fun clone(): BlendBoneByChannelEntry

    companion object {
        fun C(Other: UObject): BlendBoneByChannelEntry
        fun C(Other: Any): BlendBoneByChannelEntry
    }
}

external object EBoneControlSpace {
    var BCS_WorldSpace: String /* "BCS_WorldSpace" */
    var BCS_ComponentSpace: String /* "BCS_ComponentSpace" */
    var BCS_ParentBoneSpace: String /* "BCS_ParentBoneSpace" */
    var BCS_BoneSpace: String /* "BCS_BoneSpace" */
    var BCS_MAX: String /* "BCS_MAX" */
}

external open class AnimNode_BlendBoneByChannel : AnimNode_Base {
    open var A: PoseLink
    open var B: PoseLink
    open var BoneDefinitions: Array<BlendBoneByChannelEntry>
    open var Alpha: Number
    open var AlphaScaleBias: InputScaleBias
    open var TransformsSpace: String /* "BCS_WorldSpace" | "BCS_ComponentSpace" | "BCS_ParentBoneSpace" | "BCS_BoneSpace" | "BCS_MAX" */
    override fun clone(): AnimNode_BlendBoneByChannel

    companion object {
        fun C(Other: UObject): AnimNode_BlendBoneByChannel
        fun C(Other: Any): AnimNode_BlendBoneByChannel
    }
}

external open class AnimGraphNode_BlendBoneByChannel : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var BlendNode: AnimNode_BlendBoneByChannel

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_BlendBoneByChannel
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_BlendBoneByChannel
        fun GetDefaultObject(): AnimGraphNode_BlendBoneByChannel
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_BlendBoneByChannel
        fun C(Other: UObject): AnimGraphNode_BlendBoneByChannel
        fun C(Other: Any): AnimGraphNode_BlendBoneByChannel
    }
}

external open class AnimGraphNode_BlendListBase : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_BlendListBase
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_BlendListBase
        fun GetDefaultObject(): AnimGraphNode_BlendListBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_BlendListBase
        fun C(Other: UObject): AnimGraphNode_BlendListBase
        fun C(Other: Any): AnimGraphNode_BlendListBase
    }
}

external object EBlendListTransitionType {
    var StandardBlend: String /* "StandardBlend" */
    var Inertialization: String /* "Inertialization" */
    var EBlendListTransitionType_MAX: String /* "EBlendListTransitionType_MAX" */
}

external open class AnimNode_BlendListBase : AnimNode_Base {
    open var BlendPose: Array<PoseLink>
    open var BlendTime: Array<Number>
    open var TransitionType: String /* "StandardBlend" | "Inertialization" | "EBlendListTransitionType_MAX" */
    open var BlendType: String /* "Linear" | "Cubic" | "HermiteCubic" | "Sinusoidal" | "QuadraticInOut" | "CubicInOut" | "QuarticInOut" | "QuinticInOut" | "CircularIn" | "CircularOut" | "CircularInOut" | "ExpIn" | "ExpOut" | "ExpInOut" | "Custom" | "EAlphaBlendOption_MAX" */
    open var bResetChildOnActivation: Boolean
    open var CustomBlendCurve: CurveFloat
    open var BlendProfile: BlendProfile
    override fun clone(): AnimNode_BlendListBase

    companion object {
        fun C(Other: UObject): AnimNode_BlendListBase
        fun C(Other: Any): AnimNode_BlendListBase
    }
}

external open class AnimNode_BlendListByBool : AnimNode_BlendListBase {
    open var bActiveValue: Boolean
    override fun clone(): AnimNode_BlendListByBool

    companion object {
        fun C(Other: UObject): AnimNode_BlendListByBool
        fun C(Other: Any): AnimNode_BlendListByBool
    }
}

external open class AnimGraphNode_BlendListByBool : AnimGraphNode_BlendListBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_BlendListByBool

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_BlendListByBool
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_BlendListByBool
        fun GetDefaultObject(): AnimGraphNode_BlendListByBool
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_BlendListByBool
        fun C(Other: UObject): AnimGraphNode_BlendListByBool
        fun C(Other: Any): AnimGraphNode_BlendListByBool
    }
}

external open class AnimNode_BlendListByEnum : AnimNode_BlendListBase {
    open var EnumToPoseIndex: Array<Number>
    open var ActiveEnumValue: Number
    override fun clone(): AnimNode_BlendListByEnum

    companion object {
        fun C(Other: UObject): AnimNode_BlendListByEnum
        fun C(Other: Any): AnimNode_BlendListByEnum
    }
}

external open class AnimGraphNode_BlendListByEnum : AnimGraphNode_BlendListBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_BlendListByEnum
    open var BoundEnum: Enum
    open var VisibleEnumEntries: Array<String>

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_BlendListByEnum
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_BlendListByEnum
        fun GetDefaultObject(): AnimGraphNode_BlendListByEnum
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_BlendListByEnum
        fun C(Other: UObject): AnimGraphNode_BlendListByEnum
        fun C(Other: Any): AnimGraphNode_BlendListByEnum
    }
}

external open class AnimNode_BlendListByInt : AnimNode_BlendListBase {
    open var ActiveChildIndex: Number
    override fun clone(): AnimNode_BlendListByInt

    companion object {
        fun C(Other: UObject): AnimNode_BlendListByInt
        fun C(Other: Any): AnimNode_BlendListByInt
    }
}

external open class AnimGraphNode_BlendListByInt : AnimGraphNode_BlendListBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_BlendListByInt

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_BlendListByInt
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_BlendListByInt
        fun GetDefaultObject(): AnimGraphNode_BlendListByInt
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_BlendListByInt
        fun C(Other: UObject): AnimGraphNode_BlendListByInt
        fun C(Other: Any): AnimGraphNode_BlendListByInt
    }
}

external open class AnimNode_BlendSpaceEvaluator : AnimNode_BlendSpacePlayer {
    open var NormalizedTime: Number
    override fun clone(): AnimNode_BlendSpaceEvaluator

    companion object {
        fun C(Other: UObject): AnimNode_BlendSpaceEvaluator
        fun C(Other: Any): AnimNode_BlendSpaceEvaluator
    }
}

external open class AnimGraphNode_BlendSpaceEvaluator : AnimGraphNode_BlendSpaceBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_BlendSpaceEvaluator

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_BlendSpaceEvaluator
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_BlendSpaceEvaluator
        fun GetDefaultObject(): AnimGraphNode_BlendSpaceEvaluator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_BlendSpaceEvaluator
        fun C(Other: UObject): AnimGraphNode_BlendSpaceEvaluator
        fun C(Other: Any): AnimGraphNode_BlendSpaceEvaluator
    }
}

external open class AnimGraphNode_BlendSpacePlayer : AnimGraphNode_BlendSpaceBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_BlendSpacePlayer

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_BlendSpacePlayer
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_BlendSpacePlayer
        fun GetDefaultObject(): AnimGraphNode_BlendSpacePlayer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_BlendSpacePlayer
        fun C(Other: UObject): AnimGraphNode_BlendSpacePlayer
        fun C(Other: Any): AnimGraphNode_BlendSpacePlayer
    }
}

external object EComponentType {
    var None: String /* "None" */
    var TranslationX: String /* "TranslationX" */
    var TranslationY: String /* "TranslationY" */
    var TranslationZ: String /* "TranslationZ" */
    var RotationX: String /* "RotationX" */
    var RotationY: String /* "RotationY" */
    var RotationZ: String /* "RotationZ" */
    var Scale: String /* "Scale" */
    var ScaleX: String /* "ScaleX" */
    var ScaleY: String /* "ScaleY" */
    var ScaleZ: String /* "ScaleZ" */
    var EComponentType_MAX: String /* "EComponentType_MAX" */
}

external object EDrivenDestinationMode {
    var Bone: String /* "Bone" */
    var MorphTarget: String /* "MorphTarget" */
    var MaterialParameter: String /* "MaterialParameter" */
    var EDrivenDestinationMode_MAX: String /* "EDrivenDestinationMode_MAX" */
}

external object EDrivenBoneModificationMode {
    var AddToInput: String /* "AddToInput" */
    var ReplaceComponent: String /* "ReplaceComponent" */
    var AddToRefPose: String /* "AddToRefPose" */
    var EDrivenBoneModificationMode_MAX: String /* "EDrivenBoneModificationMode_MAX" */
}

external open class AnimNode_BoneDrivenController : AnimNode_SkeletalControlBase {
    open var SourceBone: BoneReference
    open var DrivingCurve: CurveFloat
    open var Multiplier: Number
    open var RangeMin: Number
    open var RangeMax: Number
    open var RemappedMin: Number
    open var RemappedMax: Number
    open var ParameterName: String
    open var TargetBone: BoneReference
    open var TargetComponent: String /* "None" | "TranslationX" | "TranslationY" | "TranslationZ" | "RotationX" | "RotationY" | "RotationZ" | "Scale" | "ScaleX" | "ScaleY" | "ScaleZ" | "EComponentType_MAX" */
    open var DestinationMode: String /* "Bone" | "MorphTarget" | "MaterialParameter" | "EDrivenDestinationMode_MAX" */
    open var ModificationMode: String /* "AddToInput" | "ReplaceComponent" | "AddToRefPose" | "EDrivenBoneModificationMode_MAX" */
    open var SourceComponent: String /* "None" | "TranslationX" | "TranslationY" | "TranslationZ" | "RotationX" | "RotationY" | "RotationZ" | "Scale" | "ScaleX" | "ScaleY" | "ScaleZ" | "EComponentType_MAX" */
    open var bUseRange: Boolean
    open var bAffectTargetTranslationX: Boolean
    open var bAffectTargetTranslationY: Boolean
    open var bAffectTargetTranslationZ: Boolean
    open var bAffectTargetRotationX: Boolean
    open var bAffectTargetRotationY: Boolean
    open var bAffectTargetRotationZ: Boolean
    open var bAffectTargetScaleX: Boolean
    open var bAffectTargetScaleY: Boolean
    open var bAffectTargetScaleZ: Boolean
    override fun clone(): AnimNode_BoneDrivenController

    companion object {
        fun C(Other: UObject): AnimNode_BoneDrivenController
        fun C(Other: Any): AnimNode_BoneDrivenController
    }
}

external open class AnimGraphNode_BoneDrivenController : AnimGraphNode_SkeletalControlBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_BoneDrivenController

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_BoneDrivenController
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_BoneDrivenController
        fun GetDefaultObject(): AnimGraphNode_BoneDrivenController
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_BoneDrivenController
        fun C(Other: UObject): AnimGraphNode_BoneDrivenController
        fun C(Other: Any): AnimGraphNode_BoneDrivenController
    }
}

external open class SocketReference {
    open var SocketName: String
    open fun clone(): SocketReference

    companion object {
        fun C(Other: UObject): SocketReference
        fun C(Other: Any): SocketReference
    }
}

external open class BoneSocketTarget {
    open var bUseSocket: Boolean
    open var BoneReference: BoneReference
    open var SocketReference: SocketReference
    open fun clone(): BoneSocketTarget

    companion object {
        fun C(Other: UObject): BoneSocketTarget
        fun C(Other: Any): BoneSocketTarget
    }
}

external open class AnimNode_CCDIK : AnimNode_SkeletalControlBase {
    open var EffectorLocation: Vector
    open var EffectorLocationSpace: String /* "BCS_WorldSpace" | "BCS_ComponentSpace" | "BCS_ParentBoneSpace" | "BCS_BoneSpace" | "BCS_MAX" */
    open var EffectorTarget: BoneSocketTarget
    open var TipBone: BoneReference
    open var RootBone: BoneReference
    open var Precision: Number
    open var MaxIterations: Number
    open var bStartFromTail: Boolean
    open var bEnableRotationLimit: Boolean
    open var RotationLimitPerJoints: Array<Number>
    override fun clone(): AnimNode_CCDIK

    companion object {
        fun C(Other: UObject): AnimNode_CCDIK
        fun C(Other: Any): AnimNode_CCDIK
    }
}

external open class AnimGraphNode_CCDIK : AnimGraphNode_SkeletalControlBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_CCDIK

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_CCDIK
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_CCDIK
        fun GetDefaultObject(): AnimGraphNode_CCDIK
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_CCDIK
        fun C(Other: UObject): AnimGraphNode_CCDIK
        fun C(Other: Any): AnimGraphNode_CCDIK
    }
}

external open class AnimNode_ConvertComponentToLocalSpace : AnimNode_Base {
    open var ComponentPose: ComponentSpacePoseLink
    override fun clone(): AnimNode_ConvertComponentToLocalSpace

    companion object {
        fun C(Other: UObject): AnimNode_ConvertComponentToLocalSpace
        fun C(Other: Any): AnimNode_ConvertComponentToLocalSpace
    }
}

external open class AnimGraphNode_ComponentToLocalSpace : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_ConvertComponentToLocalSpace

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_ComponentToLocalSpace
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_ComponentToLocalSpace
        fun GetDefaultObject(): AnimGraphNode_ComponentToLocalSpace
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_ComponentToLocalSpace
        fun C(Other: UObject): AnimGraphNode_ComponentToLocalSpace
        fun C(Other: Any): AnimGraphNode_ComponentToLocalSpace
    }
}

external object EConstraintOffsetOption {
    var None: String /* "None" */
    var Offset_RefPose: String /* "Offset_RefPose" */
    var EConstraintOffsetOption_MAX: String /* "EConstraintOffsetOption_MAX" */
}

external object ETransformConstraintType {
    var Translation: String /* "Translation" */
    var Rotation: String /* "Rotation" */
    var Scale: String /* "Scale" */
    var Parent: String /* "Parent" */
    var ETransformConstraintType_MAX: String /* "ETransformConstraintType_MAX" */
}

external open class FilterOptionPerAxis {
    open var bX: Boolean
    open var bY: Boolean
    open var bZ: Boolean
    open fun clone(): FilterOptionPerAxis

    companion object {
        fun C(Other: UObject): FilterOptionPerAxis
        fun C(Other: Any): FilterOptionPerAxis
    }
}

external open class Constraint {
    open var TargetBone: BoneReference
    open var OffsetOption: String /* "None" | "Offset_RefPose" | "EConstraintOffsetOption_MAX" */
    open var TransformType: String /* "Translation" | "Rotation" | "Scale" | "Parent" | "ETransformConstraintType_MAX" */
    open var PerAxis: FilterOptionPerAxis
    open fun clone(): Constraint

    companion object {
        fun C(Other: UObject): Constraint
        fun C(Other: Any): Constraint
    }
}

external open class AnimNode_Constraint : AnimNode_SkeletalControlBase {
    open var BoneToModify: BoneReference
    open var ConstraintSetup: Array<Constraint>
    open var ConstraintWeights: Array<Number>
    override fun clone(): AnimNode_Constraint

    companion object {
        fun C(Other: UObject): AnimNode_Constraint
        fun C(Other: Any): AnimNode_Constraint
    }
}

external open class AnimGraphNode_Constraint : AnimGraphNode_SkeletalControlBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_Constraint

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_Constraint
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_Constraint
        fun GetDefaultObject(): AnimGraphNode_Constraint
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_Constraint
        fun C(Other: UObject): AnimGraphNode_Constraint
        fun C(Other: Any): AnimGraphNode_Constraint
    }
}

external open class AnimNode_CopyBone : AnimNode_SkeletalControlBase {
    open var SourceBone: BoneReference
    open var TargetBone: BoneReference
    open var bCopyTranslation: Boolean
    open var bCopyRotation: Boolean
    open var bCopyScale: Boolean
    open var ControlSpace: String /* "BCS_WorldSpace" | "BCS_ComponentSpace" | "BCS_ParentBoneSpace" | "BCS_BoneSpace" | "BCS_MAX" */
    override fun clone(): AnimNode_CopyBone

    companion object {
        fun C(Other: UObject): AnimNode_CopyBone
        fun C(Other: Any): AnimNode_CopyBone
    }
}

external open class AnimGraphNode_CopyBone : AnimGraphNode_SkeletalControlBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_CopyBone

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_CopyBone
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_CopyBone
        fun GetDefaultObject(): AnimGraphNode_CopyBone
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_CopyBone
        fun C(Other: UObject): AnimGraphNode_CopyBone
        fun C(Other: Any): AnimGraphNode_CopyBone
    }
}

external object CopyBoneDeltaMode {
    var Accumulate: String /* "Accumulate" */
    var Copy: String /* "Copy" */
    var CopyBoneDeltaMode_MAX: String /* "CopyBoneDeltaMode_MAX" */
}

external open class AnimNode_CopyBoneDelta : AnimNode_SkeletalControlBase {
    open var SourceBone: BoneReference
    open var TargetBone: BoneReference
    open var bCopyTranslation: Boolean
    open var bCopyRotation: Boolean
    open var bCopyScale: Boolean
    open var CopyMode: String /* "Accumulate" | "Copy" | "CopyBoneDeltaMode_MAX" */
    open var TranslationMultiplier: Number
    open var RotationMultiplier: Number
    open var ScaleMultiplier: Number
    override fun clone(): AnimNode_CopyBoneDelta

    companion object {
        fun C(Other: UObject): AnimNode_CopyBoneDelta
        fun C(Other: Any): AnimNode_CopyBoneDelta
    }
}

external open class AnimGraphNode_CopyBoneDelta : AnimGraphNode_SkeletalControlBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_CopyBoneDelta

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_CopyBoneDelta
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_CopyBoneDelta
        fun GetDefaultObject(): AnimGraphNode_CopyBoneDelta
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_CopyBoneDelta
        fun C(Other: UObject): AnimGraphNode_CopyBoneDelta
        fun C(Other: Any): AnimGraphNode_CopyBoneDelta
    }
}

external open class AnimNode_CopyPoseFromMesh : AnimNode_Base {
    open var SourceMeshComponent: Any
    open var bUseAttachedParent: Boolean
    open var bCopyCurves: Boolean
    open var bCopyCustomAttributes: Boolean
    open var bUseMeshPose: Boolean
    open var RootBoneToCopy: String
    override fun clone(): AnimNode_CopyPoseFromMesh

    companion object {
        fun C(Other: UObject): AnimNode_CopyPoseFromMesh
        fun C(Other: Any): AnimNode_CopyPoseFromMesh
    }
}

external open class AnimGraphNode_CopyPoseFromMesh : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_CopyPoseFromMesh

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_CopyPoseFromMesh
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_CopyPoseFromMesh
        fun GetDefaultObject(): AnimGraphNode_CopyPoseFromMesh
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_CopyPoseFromMesh
        fun C(Other: UObject): AnimGraphNode_CopyPoseFromMesh
        fun C(Other: Any): AnimGraphNode_CopyPoseFromMesh
    }
}

external open class AnimNode_CurveSource : AnimNode_Base {
    open var SourcePose: PoseLink
    open var SourceBinding: String
    open var Alpha: Number
    open var CurveSource: Any
    override fun clone(): AnimNode_CurveSource

    companion object {
        fun C(Other: UObject): AnimNode_CurveSource
        fun C(Other: Any): AnimNode_CurveSource
    }
}

external open class AnimGraphNode_CurveSource : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_CurveSource

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_CurveSource
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_CurveSource
        fun GetDefaultObject(): AnimGraphNode_CurveSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_CurveSource
        fun C(Other: UObject): AnimGraphNode_CurveSource
        fun C(Other: Any): AnimGraphNode_CurveSource
    }
}

external open class AnimGraphNode_CustomProperty : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var KnownExposableProperties: Array<String>
    open var ExposedPropertyNames: Array<String>

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_CustomProperty
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_CustomProperty
        fun GetDefaultObject(): AnimGraphNode_CustomProperty
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_CustomProperty
        fun C(Other: UObject): AnimGraphNode_CustomProperty
        fun C(Other: Any): AnimGraphNode_CustomProperty
    }
}

external object EBoneRotationSource {
    var BRS_KeepComponentSpaceRotation: String /* "BRS_KeepComponentSpaceRotation" */
    var BRS_KeepLocalSpaceRotation: String /* "BRS_KeepLocalSpaceRotation" */
    var BRS_CopyFromTarget: String /* "BRS_CopyFromTarget" */
    var BRS_MAX: String /* "BRS_MAX" */
}

external open class AnimNode_Fabrik : AnimNode_SkeletalControlBase {
    open var EffectorTransform: Transform
    open var EffectorTarget: BoneSocketTarget
    open var TipBone: BoneReference
    open var RootBone: BoneReference
    open var Precision: Number
    open var MaxIterations: Number
    open var EffectorTransformSpace: String /* "BCS_WorldSpace" | "BCS_ComponentSpace" | "BCS_ParentBoneSpace" | "BCS_BoneSpace" | "BCS_MAX" */
    open var EffectorRotationSource: String /* "BRS_KeepComponentSpaceRotation" | "BRS_KeepLocalSpaceRotation" | "BRS_CopyFromTarget" | "BRS_MAX" */
    open var bEnableDebugDraw: Boolean
    open var EffectorTransformBone: BoneReference
    override fun clone(): AnimNode_Fabrik

    companion object {
        fun C(Other: UObject): AnimNode_Fabrik
        fun C(Other: Any): AnimNode_Fabrik
    }
}

external open class AnimGraphNode_Fabrik : AnimGraphNode_SkeletalControlBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_Fabrik

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_Fabrik
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_Fabrik
        fun GetDefaultObject(): AnimGraphNode_Fabrik
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_Fabrik
        fun C(Other: UObject): AnimGraphNode_Fabrik
        fun C(Other: Any): AnimGraphNode_Fabrik
    }
}

external open class AnimNode_HandIKRetargeting : AnimNode_SkeletalControlBase {
    open var RightHandFK: BoneReference
    open var LeftHandFK: BoneReference
    open var RightHandIK: BoneReference
    open var LeftHandIK: BoneReference
    open var IKBonesToMove: Array<BoneReference>
    open var HandFKWeight: Number
    override fun clone(): AnimNode_HandIKRetargeting

    companion object {
        fun C(Other: UObject): AnimNode_HandIKRetargeting
        fun C(Other: Any): AnimNode_HandIKRetargeting
    }
}

external open class AnimGraphNode_HandIKRetargeting : AnimGraphNode_SkeletalControlBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_HandIKRetargeting

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_HandIKRetargeting
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_HandIKRetargeting
        fun GetDefaultObject(): AnimGraphNode_HandIKRetargeting
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_HandIKRetargeting
        fun C(Other: UObject): AnimGraphNode_HandIKRetargeting
        fun C(Other: Any): AnimGraphNode_HandIKRetargeting
    }
}

external object ERefPoseType {
    var EIT_LocalSpace: String /* "EIT_LocalSpace" */
    var EIT_Additive: String /* "EIT_Additive" */
    var EIT_MAX: String /* "EIT_MAX" */
}

external open class AnimNode_RefPose : AnimNode_Base {
    open var RefPoseType: String /* "EIT_LocalSpace" | "EIT_Additive" | "EIT_MAX" */
    override fun clone(): AnimNode_RefPose

    companion object {
        fun C(Other: UObject): AnimNode_RefPose
        fun C(Other: Any): AnimNode_RefPose
    }
}

external open class AnimGraphNode_RefPoseBase : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_RefPose

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_RefPoseBase
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_RefPoseBase
        fun GetDefaultObject(): AnimGraphNode_RefPoseBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_RefPoseBase
        fun C(Other: UObject): AnimGraphNode_RefPoseBase
        fun C(Other: Any): AnimGraphNode_RefPoseBase
    }
}

external open class AnimGraphNode_IdentityPose : AnimGraphNode_RefPoseBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_IdentityPose
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_IdentityPose
        fun GetDefaultObject(): AnimGraphNode_IdentityPose
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_IdentityPose
        fun C(Other: UObject): AnimGraphNode_IdentityPose
        fun C(Other: Any): AnimGraphNode_IdentityPose
    }
}

external open class AnimNode_Inertialization : AnimNode_Base {
    open var Source: PoseLink
    override fun clone(): AnimNode_Inertialization

    companion object {
        fun C(Other: UObject): AnimNode_Inertialization
        fun C(Other: Any): AnimNode_Inertialization
    }
}

external open class AnimGraphNode_Inertialization : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_Inertialization

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_Inertialization
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_Inertialization
        fun GetDefaultObject(): AnimGraphNode_Inertialization
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_Inertialization
        fun C(Other: UObject): AnimGraphNode_Inertialization
        fun C(Other: Any): AnimGraphNode_Inertialization
    }
}

external open class BranchFilter {
    open var BoneName: String
    open var BlendDepth: Number
    open fun clone(): BranchFilter

    companion object {
        fun C(Other: UObject): BranchFilter
        fun C(Other: Any): BranchFilter
    }
}

external open class InputBlendPose {
    open var BranchFilters: Array<BranchFilter>
    open fun clone(): InputBlendPose

    companion object {
        fun C(Other: UObject): InputBlendPose
        fun C(Other: Any): InputBlendPose
    }
}

external object ECurveBlendOption {
    var Override: String /* "Override" */
    var DoNotOverride: String /* "DoNotOverride" */
    var NormalizeByWeight: String /* "NormalizeByWeight" */
    var BlendByWeight: String /* "BlendByWeight" */
    var UseBasePose: String /* "UseBasePose" */
    var UseMaxValue: String /* "UseMaxValue" */
    var UseMinValue: String /* "UseMinValue" */
    var ECurveBlendOption_MAX: String /* "ECurveBlendOption_MAX" */
}

external open class PerBoneBlendWeight {
    open var SourceIndex: Number
    open var BlendWeight: Number
    open fun clone(): PerBoneBlendWeight

    companion object {
        fun C(Other: UObject): PerBoneBlendWeight
        fun C(Other: Any): PerBoneBlendWeight
    }
}

external open class AnimNode_LayeredBoneBlend : AnimNode_Base {
    open var BasePose: PoseLink
    open var BlendPoses: Array<PoseLink>
    open var LayerSetup: Array<InputBlendPose>
    open var BlendWeights: Array<Number>
    open var bMeshSpaceRotationBlend: Boolean
    open var bMeshSpaceScaleBlend: Boolean
    open var CurveBlendOption: String /* "Override" | "DoNotOverride" | "NormalizeByWeight" | "BlendByWeight" | "UseBasePose" | "UseMaxValue" | "UseMinValue" | "ECurveBlendOption_MAX" */
    open var bBlendRootMotionBasedOnRootBone: Boolean
    open var LODThreshold: Number
    open var PerBoneBlendWeights: Array<PerBoneBlendWeight>
    open var SkeletonGuid: Guid
    open var VirtualBoneGuid: Guid
    override fun clone(): AnimNode_LayeredBoneBlend

    companion object {
        fun C(Other: UObject): AnimNode_LayeredBoneBlend
        fun C(Other: Any): AnimNode_LayeredBoneBlend
    }
}

external open class AnimGraphNode_LayeredBoneBlend : AnimGraphNode_BlendListBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_LayeredBoneBlend

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_LayeredBoneBlend
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_LayeredBoneBlend
        fun GetDefaultObject(): AnimGraphNode_LayeredBoneBlend
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_LayeredBoneBlend
        fun C(Other: UObject): AnimGraphNode_LayeredBoneBlend
        fun C(Other: Any): AnimGraphNode_LayeredBoneBlend
    }
}

external open class AnimLegIKDefinition {
    open var IKFootBone: BoneReference
    open var FKFootBone: BoneReference
    open var NumBonesInLimb: Number
    open var MinRotationAngle: Number
    open var FootBoneForwardAxis: String /* "None" | "X" | "Y" | "Z" | "EAxis_MAX" */
    open var HingeRotationAxis: String /* "None" | "X" | "Y" | "Z" | "EAxis_MAX" */
    open var bEnableRotationLimit: Boolean
    open var bEnableKneeTwistCorrection: Boolean
    open fun clone(): AnimLegIKDefinition

    companion object {
        fun C(Other: UObject): AnimLegIKDefinition
        fun C(Other: Any): AnimLegIKDefinition
    }
}

external open class AnimNode_LegIK : AnimNode_SkeletalControlBase {
    open var ReachPrecision: Number
    open var MaxIterations: Number
    open var LegsDefinition: Array<AnimLegIKDefinition>
    override fun clone(): AnimNode_LegIK

    companion object {
        fun C(Other: UObject): AnimNode_LegIK
        fun C(Other: Any): AnimNode_LegIK
    }
}

external open class AnimGraphNode_LegIK : AnimGraphNode_SkeletalControlBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_LegIK

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_LegIK
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_LegIK
        fun GetDefaultObject(): AnimGraphNode_LegIK
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_LegIK
        fun C(Other: UObject): AnimGraphNode_LegIK
        fun C(Other: Any): AnimGraphNode_LegIK
    }
}

external open class AnimGraphNode_LinkedAnimGraphBase : AnimGraphNode_CustomProperty {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_LinkedAnimGraphBase
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_LinkedAnimGraphBase
        fun GetDefaultObject(): AnimGraphNode_LinkedAnimGraphBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_LinkedAnimGraphBase
        fun C(Other: UObject): AnimGraphNode_LinkedAnimGraphBase
        fun C(Other: Any): AnimGraphNode_LinkedAnimGraphBase
    }
}

external open class AnimNode_CustomProperty : AnimNode_Base {
    open var SourcePropertyNames: Array<String>
    open var DestPropertyNames: Array<String>
    open var TargetInstance: UObject
    override fun clone(): AnimNode_CustomProperty

    companion object {
        fun C(Other: UObject): AnimNode_CustomProperty
        fun C(Other: Any): AnimNode_CustomProperty
    }
}

external open class AnimNode_LinkedAnimGraph : AnimNode_CustomProperty {
    open var InputPoses: Array<PoseLink>
    open var InputPoseNames: Array<String>
    open var InstanceClass: UnrealEngineClass
    open var Tag: String
    open var bReceiveNotifiesFromLinkedInstances: Boolean
    open var bPropagateNotifiesToLinkedInstances: Boolean
    override fun clone(): AnimNode_LinkedAnimGraph

    companion object {
        fun C(Other: UObject): AnimNode_LinkedAnimGraph
        fun C(Other: Any): AnimNode_LinkedAnimGraph
    }
}

external open class AnimGraphNode_LinkedAnimGraph : AnimGraphNode_LinkedAnimGraphBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_LinkedAnimGraph

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_LinkedAnimGraph
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_LinkedAnimGraph
        fun GetDefaultObject(): AnimGraphNode_LinkedAnimGraph
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_LinkedAnimGraph
        fun C(Other: UObject): AnimGraphNode_LinkedAnimGraph
        fun C(Other: Any): AnimGraphNode_LinkedAnimGraph
    }
}

external open class AnimLayerInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimLayerInterface
        fun Find(Outer: UObject, ResourceName: String): AnimLayerInterface
        fun GetDefaultObject(): AnimLayerInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimLayerInterface
        fun C(Other: UObject): AnimLayerInterface
        fun C(Other: Any): AnimLayerInterface
    }
}

external open class AnimNode_LinkedAnimLayer : AnimNode_LinkedAnimGraph {
    open var Interface: UnrealEngineClass
    open var Layer: String
    override fun clone(): AnimNode_LinkedAnimLayer

    companion object {
        fun C(Other: UObject): AnimNode_LinkedAnimLayer
        fun C(Other: Any): AnimNode_LinkedAnimLayer
    }
}

external open class AnimGraphNode_LinkedAnimLayer : AnimGraphNode_LinkedAnimGraphBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_LinkedAnimLayer
    open var InterfaceGuid: Guid

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_LinkedAnimLayer
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_LinkedAnimLayer
        fun GetDefaultObject(): AnimGraphNode_LinkedAnimLayer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_LinkedAnimLayer
        fun C(Other: UObject): AnimGraphNode_LinkedAnimLayer
        fun C(Other: Any): AnimGraphNode_LinkedAnimLayer
    }
}

external open class AnimNode_LinkedInputPose : AnimNode_Base {
    open var Name: String
    open var Graph: String
    open var InputPose: PoseLink
    override fun clone(): AnimNode_LinkedInputPose

    companion object {
        fun C(Other: UObject): AnimNode_LinkedInputPose
        fun C(Other: Any): AnimNode_LinkedInputPose
    }
}

external open class AnimBlueprintFunctionPinInfo {
    open var Name: String
    open var Type: EdGraphPinType
    open fun clone(): AnimBlueprintFunctionPinInfo

    companion object {
        fun C(Other: UObject): AnimBlueprintFunctionPinInfo
        fun C(Other: Any): AnimBlueprintFunctionPinInfo
    }
}

external open class AnimGraphNode_LinkedInputPose : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_LinkedInputPose
    open var Inputs: Array<AnimBlueprintFunctionPinInfo>
    open var FunctionReference: MemberReference
    open var InputPoseIndex: Number

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_LinkedInputPose
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_LinkedInputPose
        fun GetDefaultObject(): AnimGraphNode_LinkedInputPose
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_LinkedInputPose
        fun C(Other: UObject): AnimGraphNode_LinkedInputPose
        fun C(Other: Any): AnimGraphNode_LinkedInputPose
    }
}

external open class AnimGraphNode_LocalRefPose : AnimGraphNode_RefPoseBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_LocalRefPose
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_LocalRefPose
        fun GetDefaultObject(): AnimGraphNode_LocalRefPose
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_LocalRefPose
        fun C(Other: UObject): AnimGraphNode_LocalRefPose
        fun C(Other: Any): AnimGraphNode_LocalRefPose
    }
}

external open class AnimNode_ConvertLocalToComponentSpace : AnimNode_Base {
    open var LocalPose: PoseLink
    override fun clone(): AnimNode_ConvertLocalToComponentSpace

    companion object {
        fun C(Other: UObject): AnimNode_ConvertLocalToComponentSpace
        fun C(Other: Any): AnimNode_ConvertLocalToComponentSpace
    }
}

external open class AnimGraphNode_LocalToComponentSpace : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_ConvertLocalToComponentSpace

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_LocalToComponentSpace
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_LocalToComponentSpace
        fun GetDefaultObject(): AnimGraphNode_LocalToComponentSpace
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_LocalToComponentSpace
        fun C(Other: UObject): AnimGraphNode_LocalToComponentSpace
        fun C(Other: Any): AnimGraphNode_LocalToComponentSpace
    }
}

external open class Axis {
    open var Axis: Vector
    open var bInLocalSpace: Boolean
    open fun clone(): Axis

    companion object {
        fun C(Other: UObject): Axis
        fun C(Other: Any): Axis
    }
}

external object EInterpolationBlend {
    var Linear: String /* "Linear" */
    var Cubic: String /* "Cubic" */
    var Sinusoidal: String /* "Sinusoidal" */
    var EaseInOutExponent2: String /* "EaseInOutExponent2" */
    var EaseInOutExponent3: String /* "EaseInOutExponent3" */
    var EaseInOutExponent4: String /* "EaseInOutExponent4" */
    var EaseInOutExponent5: String /* "EaseInOutExponent5" */
    var MAX: String /* "MAX" */
}

external object EAxisOption {
    var X: String /* "X" */
    var Y: String /* "Y" */
    var Z: String /* "Z" */
    var X_Neg: String /* "X_Neg" */
    var Y_Neg: String /* "Y_Neg" */
    var Z_Neg: String /* "Z_Neg" */
    var Custom: String /* "Custom" */
    var EAxisOption_MAX: String /* "EAxisOption_MAX" */
}

external open class AnimNode_LookAt : AnimNode_SkeletalControlBase {
    open var BoneToModify: BoneReference
    open var LookAtTarget: BoneSocketTarget
    open var LookAtLocation: Vector
    open var LookAt_Axis: Axis
    open var bUseLookUpAxis: Boolean
    open var InterpolationType: String /* "Linear" | "Cubic" | "Sinusoidal" | "EaseInOutExponent2" | "EaseInOutExponent3" | "EaseInOutExponent4" | "EaseInOutExponent5" | "MAX" */
    open var LookUp_Axis: Axis
    open var LookAtClamp: Number
    open var InterpolationTime: Number
    open var InterpolationTriggerThreashold: Number
    open var LookAtBone: BoneReference
    open var LookAtSocket: String
    open var LookAtAxis: String /* "X" | "Y" | "Z" | "X_Neg" | "Y_Neg" | "Z_Neg" | "Custom" | "EAxisOption_MAX" */
    open var CustomLookAtAxis: Vector
    open var LookUpAxis: String /* "X" | "Y" | "Z" | "X_Neg" | "Y_Neg" | "Z_Neg" | "Custom" | "EAxisOption_MAX" */
    open var CustomLookUpAxis: Vector
    override fun clone(): AnimNode_LookAt

    companion object {
        fun C(Other: UObject): AnimNode_LookAt
        fun C(Other: Any): AnimNode_LookAt
    }
}

external open class AnimGraphNode_LookAt : AnimGraphNode_SkeletalControlBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_LookAt

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_LookAt
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_LookAt
        fun GetDefaultObject(): AnimGraphNode_LookAt
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_LookAt
        fun C(Other: UObject): AnimGraphNode_LookAt
        fun C(Other: Any): AnimGraphNode_LookAt
    }
}

external open class AnimNode_MakeDynamicAdditive : AnimNode_Base {
    open var Base: PoseLink
    open var Additive: PoseLink
    open var bMeshSpaceAdditive: Boolean
    override fun clone(): AnimNode_MakeDynamicAdditive

    companion object {
        fun C(Other: UObject): AnimNode_MakeDynamicAdditive
        fun C(Other: Any): AnimNode_MakeDynamicAdditive
    }
}

external open class AnimGraphNode_MakeDynamicAdditive : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_MakeDynamicAdditive

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_MakeDynamicAdditive
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_MakeDynamicAdditive
        fun GetDefaultObject(): AnimGraphNode_MakeDynamicAdditive
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_MakeDynamicAdditive
        fun C(Other: UObject): AnimGraphNode_MakeDynamicAdditive
        fun C(Other: Any): AnimGraphNode_MakeDynamicAdditive
    }
}

external open class AnimNode_MeshSpaceRefPose : AnimNode_Base {
    override fun clone(): AnimNode_MeshSpaceRefPose

    companion object {
        fun C(Other: UObject): AnimNode_MeshSpaceRefPose
        fun C(Other: Any): AnimNode_MeshSpaceRefPose
    }
}

external open class AnimGraphNode_MeshRefPose : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_MeshSpaceRefPose

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_MeshRefPose
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_MeshRefPose
        fun GetDefaultObject(): AnimGraphNode_MeshRefPose
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_MeshRefPose
        fun C(Other: UObject): AnimGraphNode_MeshRefPose
        fun C(Other: Any): AnimGraphNode_MeshRefPose
    }
}

external object EBoneModificationMode {
    var BMM_Ignore: String /* "BMM_Ignore" */
    var BMM_Replace: String /* "BMM_Replace" */
    var BMM_Additive: String /* "BMM_Additive" */
    var BMM_MAX: String /* "BMM_MAX" */
}

external open class AnimNode_ModifyBone : AnimNode_SkeletalControlBase {
    open var BoneToModify: BoneReference
    open var Translation: Vector
    open var Rotation: Rotator
    open var Scale: Vector
    open var TranslationMode: String /* "BMM_Ignore" | "BMM_Replace" | "BMM_Additive" | "BMM_MAX" */
    open var RotationMode: String /* "BMM_Ignore" | "BMM_Replace" | "BMM_Additive" | "BMM_MAX" */
    open var ScaleMode: String /* "BMM_Ignore" | "BMM_Replace" | "BMM_Additive" | "BMM_MAX" */
    open var TranslationSpace: String /* "BCS_WorldSpace" | "BCS_ComponentSpace" | "BCS_ParentBoneSpace" | "BCS_BoneSpace" | "BCS_MAX" */
    open var RotationSpace: String /* "BCS_WorldSpace" | "BCS_ComponentSpace" | "BCS_ParentBoneSpace" | "BCS_BoneSpace" | "BCS_MAX" */
    open var ScaleSpace: String /* "BCS_WorldSpace" | "BCS_ComponentSpace" | "BCS_ParentBoneSpace" | "BCS_BoneSpace" | "BCS_MAX" */
    override fun clone(): AnimNode_ModifyBone

    companion object {
        fun C(Other: UObject): AnimNode_ModifyBone
        fun C(Other: Any): AnimNode_ModifyBone
    }
}

external open class AnimGraphNode_ModifyBone : AnimGraphNode_SkeletalControlBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_ModifyBone

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_ModifyBone
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_ModifyBone
        fun GetDefaultObject(): AnimGraphNode_ModifyBone
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_ModifyBone
        fun C(Other: UObject): AnimGraphNode_ModifyBone
        fun C(Other: Any): AnimGraphNode_ModifyBone
    }
}

external object EModifyCurveApplyMode {
    var Add: String /* "Add" */
    var Scale: String /* "Scale" */
    var Blend: String /* "Blend" */
    var WeightedMovingAverage: String /* "WeightedMovingAverage" */
    var RemapCurve: String /* "RemapCurve" */
    var EModifyCurveApplyMode_MAX: String /* "EModifyCurveApplyMode_MAX" */
}

external open class AnimNode_ModifyCurve : AnimNode_Base {
    open var SourcePose: PoseLink
    open var CurveValues: Array<Number>
    open var CurveNames: Array<String>
    open var Alpha: Number
    open var ApplyMode: String /* "Add" | "Scale" | "Blend" | "WeightedMovingAverage" | "RemapCurve" | "EModifyCurveApplyMode_MAX" */
    override fun clone(): AnimNode_ModifyCurve

    companion object {
        fun C(Other: UObject): AnimNode_ModifyCurve
        fun C(Other: Any): AnimNode_ModifyCurve
    }
}

external open class AnimGraphNode_ModifyCurve : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_ModifyCurve

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_ModifyCurve
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_ModifyCurve
        fun GetDefaultObject(): AnimGraphNode_ModifyCurve
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_ModifyCurve
        fun C(Other: UObject): AnimGraphNode_ModifyCurve
        fun C(Other: Any): AnimGraphNode_ModifyCurve
    }
}

external open class AnimNode_MultiWayBlend : AnimNode_Base {
    open var Poses: Array<PoseLink>
    open var DesiredAlphas: Array<Number>
    open var AlphaScaleBias: InputScaleBias
    open var bAdditiveNode: Boolean
    open var bNormalizeAlpha: Boolean
    override fun clone(): AnimNode_MultiWayBlend

    companion object {
        fun C(Other: UObject): AnimNode_MultiWayBlend
        fun C(Other: Any): AnimNode_MultiWayBlend
    }
}

external open class AnimGraphNode_MultiWayBlend : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_MultiWayBlend

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_MultiWayBlend
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_MultiWayBlend
        fun GetDefaultObject(): AnimGraphNode_MultiWayBlend
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_MultiWayBlend
        fun C(Other: UObject): AnimGraphNode_MultiWayBlend
        fun C(Other: Any): AnimGraphNode_MultiWayBlend
    }
}

external open class AnimNode_ObserveBone : AnimNode_SkeletalControlBase {
    open var BoneToObserve: BoneReference
    open var DisplaySpace: String /* "BCS_WorldSpace" | "BCS_ComponentSpace" | "BCS_ParentBoneSpace" | "BCS_BoneSpace" | "BCS_MAX" */
    open var bRelativeToRefPose: Boolean
    open var Translation: Vector
    open var Rotation: Rotator
    open var Scale: Vector
    override fun clone(): AnimNode_ObserveBone

    companion object {
        fun C(Other: UObject): AnimNode_ObserveBone
        fun C(Other: Any): AnimNode_ObserveBone
    }
}

external open class AnimGraphNode_ObserveBone : AnimGraphNode_SkeletalControlBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_ObserveBone

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_ObserveBone
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_ObserveBone
        fun GetDefaultObject(): AnimGraphNode_ObserveBone
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_ObserveBone
        fun C(Other: UObject): AnimGraphNode_ObserveBone
        fun C(Other: Any): AnimGraphNode_ObserveBone
    }
}

external open class AnimGraphNode_PoseHandler : AnimGraphNode_AssetPlayerBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_PoseHandler
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_PoseHandler
        fun GetDefaultObject(): AnimGraphNode_PoseHandler
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_PoseHandler
        fun C(Other: UObject): AnimGraphNode_PoseHandler
        fun C(Other: Any): AnimGraphNode_PoseHandler
    }
}

external open class AnimNode_PoseHandler : AnimNode_AssetPlayerBase {
    open var PoseAsset: PoseAsset
    override fun clone(): AnimNode_PoseHandler

    companion object {
        fun C(Other: UObject): AnimNode_PoseHandler
        fun C(Other: Any): AnimNode_PoseHandler
    }
}

external open class AnimNode_PoseBlendNode : AnimNode_PoseHandler {
    open var SourcePose: PoseLink
    open var BlendOption: String /* "Linear" | "Cubic" | "HermiteCubic" | "Sinusoidal" | "QuadraticInOut" | "CubicInOut" | "QuarticInOut" | "QuinticInOut" | "CircularIn" | "CircularOut" | "CircularInOut" | "ExpIn" | "ExpOut" | "ExpInOut" | "Custom" | "EAlphaBlendOption_MAX" */
    open var CustomCurve: CurveFloat
    override fun clone(): AnimNode_PoseBlendNode

    companion object {
        fun C(Other: UObject): AnimNode_PoseBlendNode
        fun C(Other: Any): AnimNode_PoseBlendNode
    }
}

external open class AnimGraphNode_PoseBlendNode : AnimGraphNode_PoseHandler {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_PoseBlendNode

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_PoseBlendNode
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_PoseBlendNode
        fun GetDefaultObject(): AnimGraphNode_PoseBlendNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_PoseBlendNode
        fun C(Other: UObject): AnimGraphNode_PoseBlendNode
        fun C(Other: Any): AnimGraphNode_PoseBlendNode
    }
}

external open class AnimNode_PoseByName : AnimNode_PoseHandler {
    open var PoseName: String
    open var PoseWeight: Number
    override fun clone(): AnimNode_PoseByName

    companion object {
        fun C(Other: UObject): AnimNode_PoseByName
        fun C(Other: Any): AnimNode_PoseByName
    }
}

external open class AnimGraphNode_PoseByName : AnimGraphNode_AssetPlayerBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_PoseByName

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_PoseByName
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_PoseByName
        fun GetDefaultObject(): AnimGraphNode_PoseByName
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_PoseByName
        fun C(Other: UObject): AnimGraphNode_PoseByName
        fun C(Other: Any): AnimGraphNode_PoseByName
    }
}

external open class PoseDriverTransform {
    open var TargetTranslation: Vector
    open var TargetRotation: Rotator
    open fun clone(): PoseDriverTransform

    companion object {
        fun C(Other: UObject): PoseDriverTransform
        fun C(Other: Any): PoseDriverTransform
    }
}

external object ERBFDistanceMethod {
    var Euclidean: String /* "Euclidean" */
    var Quaternion: String /* "Quaternion" */
    var SwingAngle: String /* "SwingAngle" */
    var TwistAngle: String /* "TwistAngle" */
    var DefaultMethod: String /* "DefaultMethod" */
    var ERBFDistanceMethod_MAX: String /* "ERBFDistanceMethod_MAX" */
}

external object ERBFFunctionType {
    var Gaussian: String /* "Gaussian" */
    var Exponential: String /* "Exponential" */
    var Linear: String /* "Linear" */
    var Cubic: String /* "Cubic" */
    var Quintic: String /* "Quintic" */
    var DefaultFunction: String /* "DefaultFunction" */
    var ERBFFunctionType_MAX: String /* "ERBFFunctionType_MAX" */
}

external open class PoseDriverTarget {
    open var BoneTransforms: Array<PoseDriverTransform>
    open var TargetRotation: Rotator
    open var TargetScale: Number
    open var DistanceMethod: String /* "Euclidean" | "Quaternion" | "SwingAngle" | "TwistAngle" | "DefaultMethod" | "ERBFDistanceMethod_MAX" */
    open var FunctionType: String /* "Gaussian" | "Exponential" | "Linear" | "Cubic" | "Quintic" | "DefaultFunction" | "ERBFFunctionType_MAX" */
    open var bApplyCustomCurve: Boolean
    open var CustomCurve: RichCurve
    open var DrivenName: String
    open var bIsHidden: Boolean
    open fun clone(): PoseDriverTarget

    companion object {
        fun C(Other: UObject): PoseDriverTarget
        fun C(Other: Any): PoseDriverTarget
    }
}

external object ERBFSolverType {
    var Additive: String /* "Additive" */
    var Interpolative: String /* "Interpolative" */
    var ERBFSolverType_MAX: String /* "ERBFSolverType_MAX" */
}

external object EBoneAxis {
    var BA_X: String /* "BA_X" */
    var BA_Y: String /* "BA_Y" */
    var BA_Z: String /* "BA_Z" */
    var BA_MAX: String /* "BA_MAX" */
}

external object ERBFNormalizeMethod {
    var OnlyNormalizeAboveOne: String /* "OnlyNormalizeAboveOne" */
    var AlwaysNormalize: String /* "AlwaysNormalize" */
    var NormalizeWithinMedian: String /* "NormalizeWithinMedian" */
    var NoNormalization: String /* "NoNormalization" */
    var ERBFNormalizeMethod_MAX: String /* "ERBFNormalizeMethod_MAX" */
}

external open class RBFParams {
    open var TargetDimensions: Number
    open var SolverType: String /* "Additive" | "Interpolative" | "ERBFSolverType_MAX" */
    open var Radius: Number
    open var bAutomaticRadius: Boolean
    open var UFunction: String /* "Gaussian" | "Exponential" | "Linear" | "Cubic" | "Quintic" | "DefaultFunction" | "ERBFFunctionType_MAX" */
    open var DistanceMethod: String /* "Euclidean" | "Quaternion" | "SwingAngle" | "TwistAngle" | "DefaultMethod" | "ERBFDistanceMethod_MAX" */
    open var TwistAxis: String /* "BA_X" | "BA_Y" | "BA_Z" | "BA_MAX" */
    open var WeightThreshold: Number
    open var NormalizeMethod: String /* "OnlyNormalizeAboveOne" | "AlwaysNormalize" | "NormalizeWithinMedian" | "NoNormalization" | "ERBFNormalizeMethod_MAX" */
    open var MedianReference: Vector
    open var MedianMin: Number
    open var MedianMax: Number
    open fun clone(): RBFParams

    companion object {
        fun C(Other: UObject): RBFParams
        fun C(Other: Any): RBFParams
    }
}

external object EPoseDriverType {
    var SwingAndTwist: String /* "SwingAndTwist" */
    var SwingOnly: String /* "SwingOnly" */
    var Translation: String /* "Translation" */
    var EPoseDriverType_MAX: String /* "EPoseDriverType_MAX" */
}

external object EPoseDriverSource {
    var Rotation: String /* "Rotation" */
    var Translation: String /* "Translation" */
    var EPoseDriverSource_MAX: String /* "EPoseDriverSource_MAX" */
}

external object EPoseDriverOutput {
    var DrivePoses: String /* "DrivePoses" */
    var DriveCurves: String /* "DriveCurves" */
    var EPoseDriverOutput_MAX: String /* "EPoseDriverOutput_MAX" */
}

external open class AnimNode_PoseDriver : AnimNode_PoseHandler {
    open var SourcePose: PoseLink
    open var SourceBones: Array<BoneReference>
    open var OnlyDriveBones: Array<BoneReference>
    open var PoseTargets: Array<PoseDriverTarget>
    open var EvalSpaceBone: BoneReference
    open var RBFParams: RBFParams
    open var SourceBone: BoneReference
    open var TwistAxis: String /* "BA_X" | "BA_Y" | "BA_Z" | "BA_MAX" */
    open var Type: String /* "SwingAndTwist" | "SwingOnly" | "Translation" | "EPoseDriverType_MAX" */
    open var RadialScaling: Number
    open var DriveSource: String /* "Rotation" | "Translation" | "EPoseDriverSource_MAX" */
    open var DriveOutput: String /* "DrivePoses" | "DriveCurves" | "EPoseDriverOutput_MAX" */
    open var bOnlyDriveSelectedBones: Boolean
    open var bSoloDrivenOnly: Boolean
    open var LODThreshold: Number
    override fun clone(): AnimNode_PoseDriver

    companion object {
        fun C(Other: UObject): AnimNode_PoseDriver
        fun C(Other: Any): AnimNode_PoseDriver
    }
}

external open class AnimGraphNode_PoseDriver : AnimGraphNode_PoseHandler {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_PoseDriver
    open var AxisLength: Number
    open var ConeSubdivision: Number
    open var bDrawDebugCones: Boolean
    open var LastPreviewComponent: SkeletalMeshComponent

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_PoseDriver
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_PoseDriver
        fun GetDefaultObject(): AnimGraphNode_PoseDriver
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_PoseDriver
        fun C(Other: UObject): AnimGraphNode_PoseDriver
        fun C(Other: Any): AnimGraphNode_PoseDriver
    }
}

external object ESnapshotSourceMode {
    var NamedSnapshot: String /* "NamedSnapshot" */
    var SnapshotPin: String /* "SnapshotPin" */
    var ESnapshotSourceMode_MAX: String /* "ESnapshotSourceMode_MAX" */
}

external open class AnimNode_PoseSnapshot : AnimNode_Base {
    open var SnapshotName: String
    open var Snapshot: PoseSnapshot
    open var Mode: String /* "NamedSnapshot" | "SnapshotPin" | "ESnapshotSourceMode_MAX" */
    override fun clone(): AnimNode_PoseSnapshot

    companion object {
        fun C(Other: UObject): AnimNode_PoseSnapshot
        fun C(Other: Any): AnimNode_PoseSnapshot
    }
}

external open class AnimGraphNode_PoseSnapshot : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_PoseSnapshot

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_PoseSnapshot
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_PoseSnapshot
        fun GetDefaultObject(): AnimGraphNode_PoseSnapshot
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_PoseSnapshot
        fun C(Other: UObject): AnimGraphNode_PoseSnapshot
        fun C(Other: Any): AnimGraphNode_PoseSnapshot
    }
}

external open class RandomPlayerSequenceEntry {
    open var Sequence: AnimSequence
    open var ChanceToPlay: Number
    open var MinLoopCount: Number
    open var MaxLoopCount: Number
    open var MinPlayRate: Number
    open var MaxPlayRate: Number
    open var BlendIn: AlphaBlend
    open fun clone(): RandomPlayerSequenceEntry

    companion object {
        fun C(Other: UObject): RandomPlayerSequenceEntry
        fun C(Other: Any): RandomPlayerSequenceEntry
    }
}

external open class AnimNode_RandomPlayer : AnimNode_Base {
    open var Entries: Array<RandomPlayerSequenceEntry>
    open var bShuffleMode: Boolean
    override fun clone(): AnimNode_RandomPlayer

    companion object {
        fun C(Other: UObject): AnimNode_RandomPlayer
        fun C(Other: Any): AnimNode_RandomPlayer
    }
}

external open class AnimGraphNode_RandomPlayer : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_RandomPlayer

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_RandomPlayer
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_RandomPlayer
        fun GetDefaultObject(): AnimGraphNode_RandomPlayer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_RandomPlayer
        fun C(Other: UObject): AnimGraphNode_RandomPlayer
        fun C(Other: Any): AnimGraphNode_RandomPlayer
    }
}

external open class AnimNode_ResetRoot : AnimNode_SkeletalControlBase {
    override fun clone(): AnimNode_ResetRoot

    companion object {
        fun C(Other: UObject): AnimNode_ResetRoot
        fun C(Other: Any): AnimNode_ResetRoot
    }
}

external open class AnimGraphNode_ResetRoot : AnimGraphNode_SkeletalControlBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_ResetRoot

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_ResetRoot
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_ResetRoot
        fun GetDefaultObject(): AnimGraphNode_ResetRoot
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_ResetRoot
        fun C(Other: UObject): AnimGraphNode_ResetRoot
        fun C(Other: Any): AnimGraphNode_ResetRoot
    }
}

external open class SimSpaceSettings {
    open var MasterAlpha: Number
    open var VelocityScaleZ: Number
    open var MaxLinearVelocity: Number
    open var MaxAngularVelocity: Number
    open var MaxLinearAcceleration: Number
    open var MaxAngularAcceleration: Number
    open var ExternalLinearDrag: Number
    open var ExternalLinearDragV: Vector
    open var ExternalLinearVelocity: Vector
    open var ExternalAngularVelocity: Vector
    open fun clone(): SimSpaceSettings

    companion object {
        fun C(Other: UObject): SimSpaceSettings
        fun C(Other: Any): SimSpaceSettings
    }
}

external object ESimulationSpace {
    var ComponentSpace: String /* "ComponentSpace" */
    var WorldSpace: String /* "WorldSpace" */
    var BaseBoneSpace: String /* "BaseBoneSpace" */
    var ESimulationSpace_MAX: String /* "ESimulationSpace_MAX" */
}

external open class AnimNode_RigidBody : AnimNode_SkeletalControlBase {
    open var OverridePhysicsAsset: PhysicsAsset
    open var OverrideWorldGravity: Vector
    open var ExternalForce: Vector
    open var ComponentLinearAccScale: Vector
    open var ComponentLinearVelScale: Vector
    open var ComponentAppliedLinearAccClamp: Vector
    open var SimSpaceSettings: SimSpaceSettings
    open var CachedBoundsScale: Number
    open var BaseBoneRef: BoneReference
    open var OverlapChannel: String /* "ECC_WorldStatic" | "ECC_WorldDynamic" | "ECC_Pawn" | "ECC_Visibility" | "ECC_Camera" | "ECC_PhysicsBody" | "ECC_Vehicle" | "ECC_Destructible" | "ECC_EngineTraceChannel1" | "ECC_EngineTraceChannel2" | "ECC_EngineTraceChannel3" | "ECC_EngineTraceChannel4" | "ECC_EngineTraceChannel5" | "ECC_EngineTraceChannel6" | "ECC_GameTraceChannel1" | "ECC_GameTraceChannel2" | "ECC_GameTraceChannel3" | "ECC_GameTraceChannel4" | "ECC_GameTraceChannel5" | "ECC_GameTraceChannel6" | "ECC_GameTraceChannel7" | "ECC_GameTraceChannel8" | "ECC_GameTraceChannel9" | "ECC_GameTraceChannel10" | "ECC_GameTraceChannel11" | "ECC_GameTraceChannel12" | "ECC_GameTraceChannel13" | "ECC_GameTraceChannel14" | "ECC_GameTraceChannel15" | "ECC_GameTraceChannel16" | "ECC_GameTraceChannel17" | "ECC_GameTraceChannel18" | "ECC_OverlapAll_Deprecated" | "ECC_MAX" */
    open var SimulationSpace: String /* "ComponentSpace" | "WorldSpace" | "BaseBoneSpace" | "ESimulationSpace_MAX" */
    open var bForceDisableCollisionBetweenConstraintBodies: Boolean
    open var bEnableWorldGeometry: Boolean
    open var bOverrideWorldGravity: Boolean
    open var bTransferBoneVelocities: Boolean
    open var bFreezeIncomingPoseOnStart: Boolean
    open var bClampLinearTranslationLimitToRefPose: Boolean
    open var WorldSpaceMinimumScale: Number
    open var EvaluationResetTime: Number
    open var bComponentSpaceSimulation: Boolean
    override fun clone(): AnimNode_RigidBody

    companion object {
        fun C(Other: UObject): AnimNode_RigidBody
        fun C(Other: Any): AnimNode_RigidBody
    }
}

external open class AnimGraphNode_RigidBody : AnimGraphNode_SkeletalControlBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_RigidBody

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_RigidBody
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_RigidBody
        fun GetDefaultObject(): AnimGraphNode_RigidBody
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_RigidBody
        fun C(Other: UObject): AnimGraphNode_RigidBody
        fun C(Other: Any): AnimGraphNode_RigidBody
    }
}

external open class AnimGraphNode_Root : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_Root

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_Root
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_Root
        fun GetDefaultObject(): AnimGraphNode_Root
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_Root
        fun C(Other: UObject): AnimGraphNode_Root
        fun C(Other: Any): AnimGraphNode_Root
    }
}

external open class AnimNode_RotateRootBone : AnimNode_Base {
    open var BasePose: PoseLink
    open var Pitch: Number
    open var Yaw: Number
    open var PitchScaleBiasClamp: InputScaleBiasClamp
    open var YawScaleBiasClamp: InputScaleBiasClamp
    open var MeshToComponent: Rotator
    override fun clone(): AnimNode_RotateRootBone

    companion object {
        fun C(Other: UObject): AnimNode_RotateRootBone
        fun C(Other: Any): AnimNode_RotateRootBone
    }
}

external open class AnimGraphNode_RotateRootBone : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_RotateRootBone

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_RotateRootBone
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_RotateRootBone
        fun GetDefaultObject(): AnimGraphNode_RotateRootBone
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_RotateRootBone
        fun C(Other: UObject): AnimGraphNode_RotateRootBone
        fun C(Other: Any): AnimGraphNode_RotateRootBone
    }
}

external open class AnimNode_RotationMultiplier : AnimNode_SkeletalControlBase {
    open var TargetBone: BoneReference
    open var SourceBone: BoneReference
    open var Multiplier: Number
    open var RotationAxisToRefer: String /* "BA_X" | "BA_Y" | "BA_Z" | "BA_MAX" */
    open var bIsAdditive: Boolean
    override fun clone(): AnimNode_RotationMultiplier

    companion object {
        fun C(Other: UObject): AnimNode_RotationMultiplier
        fun C(Other: Any): AnimNode_RotationMultiplier
    }
}

external open class AnimGraphNode_RotationMultiplier : AnimGraphNode_SkeletalControlBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_RotationMultiplier

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_RotationMultiplier
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_RotationMultiplier
        fun GetDefaultObject(): AnimGraphNode_RotationMultiplier
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_RotationMultiplier
        fun C(Other: UObject): AnimGraphNode_RotationMultiplier
        fun C(Other: Any): AnimGraphNode_RotationMultiplier
    }
}

external open class AnimNode_RotationOffsetBlendSpace : AnimNode_BlendSpacePlayer {
    open var BasePose: PoseLink
    open var LODThreshold: Number
    open var Alpha: Number
    open var AlphaScaleBias: InputScaleBias
    open var AlphaBoolBlend: InputAlphaBoolBlend
    open var AlphaCurveName: String
    open var AlphaScaleBiasClamp: InputScaleBiasClamp
    open var AlphaInputType: String /* "Float" | "Bool" | "Curve" | "EAnimAlphaInputType_MAX" */
    open var bAlphaBoolEnabled: Boolean
    override fun clone(): AnimNode_RotationOffsetBlendSpace

    companion object {
        fun C(Other: UObject): AnimNode_RotationOffsetBlendSpace
        fun C(Other: Any): AnimNode_RotationOffsetBlendSpace
    }
}

external open class AnimGraphNode_RotationOffsetBlendSpace : AnimGraphNode_BlendSpaceBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_RotationOffsetBlendSpace

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_RotationOffsetBlendSpace
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_RotationOffsetBlendSpace
        fun GetDefaultObject(): AnimGraphNode_RotationOffsetBlendSpace
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_RotationOffsetBlendSpace
        fun C(Other: UObject): AnimGraphNode_RotationOffsetBlendSpace
        fun C(Other: Any): AnimGraphNode_RotationOffsetBlendSpace
    }
}

external open class AnimNode_SaveCachedPose : AnimNode_Base {
    open var Pose: PoseLink
    open var CachePoseName: String
    override fun clone(): AnimNode_SaveCachedPose

    companion object {
        fun C(Other: UObject): AnimNode_SaveCachedPose
        fun C(Other: Any): AnimNode_SaveCachedPose
    }
}

external open class AnimGraphNode_SaveCachedPose : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_SaveCachedPose
    open var CacheName: String

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_SaveCachedPose
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_SaveCachedPose
        fun GetDefaultObject(): AnimGraphNode_SaveCachedPose
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_SaveCachedPose
        fun C(Other: UObject): AnimGraphNode_SaveCachedPose
        fun C(Other: Any): AnimGraphNode_SaveCachedPose
    }
}

external object EScaleChainInitialLength {
    var FixedDefaultLengthValue: String /* "FixedDefaultLengthValue" */
    var Distance: String /* "Distance" */
    var ChainLength: String /* "ChainLength" */
    var EScaleChainInitialLength_MAX: String /* "EScaleChainInitialLength_MAX" */
}

external open class AnimNode_ScaleChainLength : AnimNode_Base {
    open var InputPose: PoseLink
    open var DefaultChainLength: Number
    open var ChainStartBone: BoneReference
    open var ChainEndBone: BoneReference
    open var TargetLocation: Vector
    open var Alpha: Number
    open var AlphaScaleBias: InputScaleBias
    open var ChainInitialLength: String /* "FixedDefaultLengthValue" | "Distance" | "ChainLength" | "EScaleChainInitialLength_MAX" */
    override fun clone(): AnimNode_ScaleChainLength

    companion object {
        fun C(Other: UObject): AnimNode_ScaleChainLength
        fun C(Other: Any): AnimNode_ScaleChainLength
    }
}

external open class AnimGraphNode_ScaleChainLength : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_ScaleChainLength

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_ScaleChainLength
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_ScaleChainLength
        fun GetDefaultObject(): AnimGraphNode_ScaleChainLength
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_ScaleChainLength
        fun C(Other: UObject): AnimGraphNode_ScaleChainLength
        fun C(Other: Any): AnimGraphNode_ScaleChainLength
    }
}

external object ESequenceEvalReinit {
    var NoReset: String /* "NoReset" */
    var StartPosition: String /* "StartPosition" */
    var ExplicitTime: String /* "ExplicitTime" */
    var ESequenceEvalReinit_MAX: String /* "ESequenceEvalReinit_MAX" */
}

external open class AnimNode_SequenceEvaluator : AnimNode_AssetPlayerBase {
    open var Sequence: AnimSequenceBase
    open var ExplicitTime: Number
    open var bShouldLoop: Boolean
    open var bTeleportToExplicitTime: Boolean
    open var ReinitializationBehavior: String /* "NoReset" | "StartPosition" | "ExplicitTime" | "ESequenceEvalReinit_MAX" */
    open var StartPosition: Number
    override fun clone(): AnimNode_SequenceEvaluator

    companion object {
        fun C(Other: UObject): AnimNode_SequenceEvaluator
        fun C(Other: Any): AnimNode_SequenceEvaluator
    }
}

external open class AnimGraphNode_SequenceEvaluator : AnimGraphNode_AssetPlayerBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_SequenceEvaluator

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_SequenceEvaluator
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_SequenceEvaluator
        fun GetDefaultObject(): AnimGraphNode_SequenceEvaluator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_SequenceEvaluator
        fun C(Other: UObject): AnimGraphNode_SequenceEvaluator
        fun C(Other: Any): AnimGraphNode_SequenceEvaluator
    }
}

external open class AnimNode_SequencePlayer : AnimNode_AssetPlayerBase {
    open var Sequence: AnimSequenceBase
    open var PlayRateBasis: Number
    open var PlayRate: Number
    open var PlayRateScaleBiasClamp: InputScaleBiasClamp
    open var StartPosition: Number
    open var bLoopAnimation: Boolean
    override fun clone(): AnimNode_SequencePlayer

    companion object {
        fun C(Other: UObject): AnimNode_SequencePlayer
        fun C(Other: Any): AnimNode_SequencePlayer
    }
}

external open class AnimGraphNode_SequencePlayer : AnimGraphNode_AssetPlayerBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_SequencePlayer

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_SequencePlayer
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_SequencePlayer
        fun GetDefaultObject(): AnimGraphNode_SequencePlayer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_SequencePlayer
        fun C(Other: UObject): AnimGraphNode_SequencePlayer
        fun C(Other: Any): AnimGraphNode_SequencePlayer
    }
}

external open class AnimNode_Slot : AnimNode_Base {
    open var Source: PoseLink
    open var SlotName: String
    open var bAlwaysUpdateSourcePose: Boolean
    override fun clone(): AnimNode_Slot

    companion object {
        fun C(Other: UObject): AnimNode_Slot
        fun C(Other: Any): AnimNode_Slot
    }
}

external open class AnimGraphNode_Slot : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_Slot

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_Slot
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_Slot
        fun GetDefaultObject(): AnimGraphNode_Slot
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_Slot
        fun C(Other: UObject): AnimGraphNode_Slot
        fun C(Other: Any): AnimGraphNode_Slot
    }
}

external object ESplineBoneAxis {
    var None: String /* "None" */
    var X: String /* "X" */
    var Y: String /* "Y" */
    var Z: String /* "Z" */
    var ESplineBoneAxis_MAX: String /* "ESplineBoneAxis_MAX" */
}

external open class AnimNode_SplineIK : AnimNode_SkeletalControlBase {
    open var StartBone: BoneReference
    open var EndBone: BoneReference
    open var BoneAxis: String /* "None" | "X" | "Y" | "Z" | "ESplineBoneAxis_MAX" */
    open var bAutoCalculateSpline: Boolean
    open var PointCount: Number
    open var ControlPoints: Array<Transform>
    open var Roll: Number
    open var TwistStart: Number
    open var TwistEnd: Number
    open var TwistBlend: AlphaBlend
    open var Stretch: Number
    open var Offset: Number
    override fun clone(): AnimNode_SplineIK

    companion object {
        fun C(Other: UObject): AnimNode_SplineIK
        fun C(Other: Any): AnimNode_SplineIK
    }
}

external open class AnimGraphNode_SplineIK : AnimGraphNode_SkeletalControlBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_SplineIK

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_SplineIK
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_SplineIK
        fun GetDefaultObject(): AnimGraphNode_SplineIK
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_SplineIK
        fun C(Other: UObject): AnimGraphNode_SplineIK
        fun C(Other: Any): AnimGraphNode_SplineIK
    }
}

external open class AnimNode_SpringBone : AnimNode_SkeletalControlBase {
    open var SpringBone: BoneReference
    open var MaxDisplacement: Number
    open var SpringStiffness: Number
    open var SpringDamping: Number
    open var ErrorResetThresh: Number
    open var bNoZSpring: Boolean
    open var bLimitDisplacement: Boolean
    open var bTranslateX: Boolean
    open var bTranslateY: Boolean
    open var bTranslateZ: Boolean
    open var bRotateX: Boolean
    open var bRotateY: Boolean
    open var bRotateZ: Boolean
    override fun clone(): AnimNode_SpringBone

    companion object {
        fun C(Other: UObject): AnimNode_SpringBone
        fun C(Other: Any): AnimNode_SpringBone
    }
}

external open class AnimGraphNode_SpringBone : AnimGraphNode_SkeletalControlBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_SpringBone

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_SpringBone
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_SpringBone
        fun GetDefaultObject(): AnimGraphNode_SpringBone
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_SpringBone
        fun C(Other: UObject): AnimGraphNode_SpringBone
        fun C(Other: Any): AnimGraphNode_SpringBone
    }
}

external open class AnimNode_StateMachine : AnimNode_Base {
    open var StateMachineIndexInClass: Number
    open var MaxTransitionsPerFrame: Number
    open var bSkipFirstUpdateTransition: Boolean
    open var bReinitializeOnBecomingRelevant: Boolean
    override fun clone(): AnimNode_StateMachine

    companion object {
        fun C(Other: UObject): AnimNode_StateMachine
        fun C(Other: Any): AnimNode_StateMachine
    }
}

external open class AnimGraphNode_StateMachine : AnimGraphNode_StateMachineBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_StateMachine

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_StateMachine
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_StateMachine
        fun GetDefaultObject(): AnimGraphNode_StateMachine
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_StateMachine
        fun C(Other: UObject): AnimGraphNode_StateMachine
        fun C(Other: Any): AnimGraphNode_StateMachine
    }
}

external open class RotationLimit {
    open var LimitMin: Vector
    open var LimitMax: Vector
    open fun clone(): RotationLimit

    companion object {
        fun C(Other: UObject): RotationLimit
        fun C(Other: Any): RotationLimit
    }
}

external open class AnimNode_Trail : AnimNode_SkeletalControlBase {
    open var TrailBone: BoneReference
    open var ChainLength: Number
    open var ChainBoneAxis: String /* "None" | "X" | "Y" | "Z" | "EAxis_MAX" */
    open var bInvertChainBoneAxis: Boolean
    open var bLimitStretch: Boolean
    open var bLimitRotation: Boolean
    open var bUsePlanarLimit: Boolean
    open var bActorSpaceFakeVel: Boolean
    open var bReorientParentToChild: Boolean
    open var bEnableDebug: Boolean
    open var bShowBaseMotion: Boolean
    open var bShowTrailLocation: Boolean
    open var bShowLimit: Boolean
    open var DebugLifeTime: Number
    open var TrailRelaxation: Number
    open var MaxDeltaTime: Number
    open var RelaxationSpeedScale: Number
    open var TrailRelaxationSpeed: RuntimeFloatCurve
    open var RelaxationSpeedScaleInputProcessor: InputScaleBiasClamp
    open var RotationLimits: Array<RotationLimit>
    open var RotationOffsets: Array<Vector>
    open var PlanarLimits: Array<AnimPhysPlanarLimit>
    open var StretchLimit: Number
    open var FakeVelocity: Vector
    open var BaseJoint: BoneReference
    open var TrailBoneRotationBlendAlpha: Number
    open var LastBoneRotationAnimAlphaBlend: Number
    override fun clone(): AnimNode_Trail

    companion object {
        fun C(Other: UObject): AnimNode_Trail
        fun C(Other: Any): AnimNode_Trail
    }
}

external open class AnimGraphNode_Trail : AnimGraphNode_SkeletalControlBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_Trail

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_Trail
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_Trail
        fun GetDefaultObject(): AnimGraphNode_Trail
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_Trail
        fun C(Other: UObject): AnimGraphNode_Trail
        fun C(Other: Any): AnimGraphNode_Trail
    }
}

external object EEvaluatorDataSource {
    var EDS_SourcePose: String /* "EDS_SourcePose" */
    var EDS_DestinationPose: String /* "EDS_DestinationPose" */
    var EDS_MAX: String /* "EDS_MAX" */
}

external object EEvaluatorMode {
    var EM_Standard: String /* "EM_Standard" */
    var EM_Freeze: String /* "EM_Freeze" */
    var EM_DelayedFreeze: String /* "EM_DelayedFreeze" */
    var EM_MAX: String /* "EM_MAX" */
}

external open class AnimNode_TransitionPoseEvaluator : AnimNode_Base {
    open var FramesToCachePose: Number
    open var DataSource: String /* "EDS_SourcePose" | "EDS_DestinationPose" | "EDS_MAX" */
    open var EvaluatorMode: String /* "EM_Standard" | "EM_Freeze" | "EM_DelayedFreeze" | "EM_MAX" */
    override fun clone(): AnimNode_TransitionPoseEvaluator

    companion object {
        fun C(Other: UObject): AnimNode_TransitionPoseEvaluator
        fun C(Other: Any): AnimNode_TransitionPoseEvaluator
    }
}

external open class AnimGraphNode_TransitionPoseEvaluator : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_TransitionPoseEvaluator

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_TransitionPoseEvaluator
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_TransitionPoseEvaluator
        fun GetDefaultObject(): AnimGraphNode_TransitionPoseEvaluator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_TransitionPoseEvaluator
        fun C(Other: UObject): AnimGraphNode_TransitionPoseEvaluator
        fun C(Other: Any): AnimGraphNode_TransitionPoseEvaluator
    }
}

external open class ReferenceBoneFrame {
    open var Bone: BoneReference
    open var Axis: Axis
    open fun clone(): ReferenceBoneFrame

    companion object {
        fun C(Other: UObject): ReferenceBoneFrame
        fun C(Other: Any): ReferenceBoneFrame
    }
}

external open class AnimCurveParam {
    open var Name: String
    open fun clone(): AnimCurveParam

    companion object {
        fun C(Other: UObject): AnimCurveParam
        fun C(Other: Any): AnimCurveParam
    }
}

external open class AnimNode_TwistCorrectiveNode : AnimNode_SkeletalControlBase {
    open var BaseFrame: ReferenceBoneFrame
    open var TwistFrame: ReferenceBoneFrame
    open var TwistPlaneNormalAxis: Axis
    open var RangeMax: Number
    open var RemappedMin: Number
    open var RemappedMax: Number
    open var Curve: AnimCurveParam
    override fun clone(): AnimNode_TwistCorrectiveNode

    companion object {
        fun C(Other: UObject): AnimNode_TwistCorrectiveNode
        fun C(Other: Any): AnimNode_TwistCorrectiveNode
    }
}

external open class AnimGraphNode_TwistCorrectiveNode : AnimGraphNode_SkeletalControlBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_TwistCorrectiveNode

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_TwistCorrectiveNode
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_TwistCorrectiveNode
        fun GetDefaultObject(): AnimGraphNode_TwistCorrectiveNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_TwistCorrectiveNode
        fun C(Other: UObject): AnimGraphNode_TwistCorrectiveNode
        fun C(Other: Any): AnimGraphNode_TwistCorrectiveNode
    }
}

external open class AnimNode_TwoBoneIK : AnimNode_SkeletalControlBase {
    open var IKBone: BoneReference
    open var StartStretchRatio: Number
    open var MaxStretchScale: Number
    open var StretchLimits: Vector2D
    open var bNoTwist: Boolean
    open var JointTargetSpaceBoneName: String
    open var EffectorSpaceBoneName: String
    open var EffectorLocation: Vector
    open var EffectorTarget: BoneSocketTarget
    open var JointTargetLocation: Vector
    open var JointTarget: BoneSocketTarget
    open var TwistAxis: Axis
    open var EffectorLocationSpace: String /* "BCS_WorldSpace" | "BCS_ComponentSpace" | "BCS_ParentBoneSpace" | "BCS_BoneSpace" | "BCS_MAX" */
    open var JointTargetLocationSpace: String /* "BCS_WorldSpace" | "BCS_ComponentSpace" | "BCS_ParentBoneSpace" | "BCS_BoneSpace" | "BCS_MAX" */
    open var bAllowStretching: Boolean
    open var bTakeRotationFromEffectorSpace: Boolean
    open var bMaintainEffectorRelRot: Boolean
    open var bAllowTwist: Boolean
    override fun clone(): AnimNode_TwoBoneIK

    companion object {
        fun C(Other: UObject): AnimNode_TwoBoneIK
        fun C(Other: Any): AnimNode_TwoBoneIK
    }
}

external open class AnimGraphNode_TwoBoneIK : AnimGraphNode_SkeletalControlBase {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_TwoBoneIK
    open var bEnableDebugDraw: Boolean

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_TwoBoneIK
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_TwoBoneIK
        fun GetDefaultObject(): AnimGraphNode_TwoBoneIK
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_TwoBoneIK
        fun C(Other: UObject): AnimGraphNode_TwoBoneIK
        fun C(Other: Any): AnimGraphNode_TwoBoneIK
    }
}

external open class AnimNode_TwoWayBlend : AnimNode_Base {
    open var A: PoseLink
    open var B: PoseLink
    open var AlphaInputType: String /* "Float" | "Bool" | "Curve" | "EAnimAlphaInputType_MAX" */
    open var bAlphaBoolEnabled: Boolean
    open var bResetChildOnActivation: Boolean
    open var Alpha: Number
    open var AlphaScaleBias: InputScaleBias
    open var AlphaBoolBlend: InputAlphaBoolBlend
    open var AlphaCurveName: String
    open var AlphaScaleBiasClamp: InputScaleBiasClamp
    override fun clone(): AnimNode_TwoWayBlend

    companion object {
        fun C(Other: UObject): AnimNode_TwoWayBlend
        fun C(Other: Any): AnimNode_TwoWayBlend
    }
}

external open class AnimGraphNode_TwoWayBlend : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var BlendNode: AnimNode_TwoWayBlend

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_TwoWayBlend
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_TwoWayBlend
        fun GetDefaultObject(): AnimGraphNode_TwoWayBlend
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_TwoWayBlend
        fun C(Other: UObject): AnimGraphNode_TwoWayBlend
        fun C(Other: Any): AnimGraphNode_TwoWayBlend
    }
}

external open class AnimNode_UseCachedPose : AnimNode_Base {
    open var LinkToCachingNode: PoseLink
    open var CachePoseName: String
    override fun clone(): AnimNode_UseCachedPose

    companion object {
        fun C(Other: UObject): AnimNode_UseCachedPose
        fun C(Other: Any): AnimNode_UseCachedPose
    }
}

external open class AnimGraphNode_UseCachedPose : AnimGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var UNode: AnimNode_UseCachedPose
    open var SaveCachedPoseNode: Any
    open var NameOfCache: String

    companion object {
        fun Load(ResourceName: String): AnimGraphNode_UseCachedPose
        fun Find(Outer: UObject, ResourceName: String): AnimGraphNode_UseCachedPose
        fun GetDefaultObject(): AnimGraphNode_UseCachedPose
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimGraphNode_UseCachedPose
        fun C(Other: UObject): AnimGraphNode_UseCachedPose
        fun C(Other: Any): AnimGraphNode_UseCachedPose
    }
}

external open class AnimPreviewAttacheInstance : AnimInstance {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimPreviewAttacheInstance
        fun Find(Outer: UObject, ResourceName: String): AnimPreviewAttacheInstance
        fun GetDefaultObject(): AnimPreviewAttacheInstance
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimPreviewAttacheInstance
        fun C(Other: UObject): AnimPreviewAttacheInstance
        fun C(Other: Any): AnimPreviewAttacheInstance
    }
}

external open class AnimSingleNodeInstance : AnimInstance {
    constructor()
    constructor(Outer: UObject)
    open var CurrentAsset: AnimationAsset
    open var PostEvaluateAnimEvent: UnrealEngineDelegate<() -> Unit>
    open fun StopAnim()
    open fun SetReverse(bInReverse: Boolean)
    open fun SetPreviewCurveOverride(PoseName: String, Value: Number, bRemoveIfZero: Boolean)
    open fun SetPositionWithPreviousTime(InPosition: Number, InPreviousTime: Number, bFireNotifies: Boolean)
    open fun SetPosition(InPosition: Number, bFireNotifies: Boolean)
    open fun SetPlayRate(InPlayRate: Number)
    open fun SetPlaying(bIsPlaying: Boolean)
    open fun SetLooping(bIsLooping: Boolean)
    open fun SetBlendSpaceInput(InBlendInput: Vector)
    open fun SetAnimationAsset(NewAsset: AnimationAsset, bIsLooping: Boolean, InPlayRate: Number)
    open fun PlayAnim(bIsLooping: Boolean, InPlayRate: Number, InStartPosition: Number)
    open fun GetLength(): Number
    open fun GetAnimationAsset(): AnimationAsset

    companion object {
        fun Load(ResourceName: String): AnimSingleNodeInstance
        fun Find(Outer: UObject, ResourceName: String): AnimSingleNodeInstance
        fun GetDefaultObject(): AnimSingleNodeInstance
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimSingleNodeInstance
        fun C(Other: UObject): AnimSingleNodeInstance
        fun C(Other: Any): AnimSingleNodeInstance
    }
}

external object EMontagePreviewType {
    var EMPT_Normal: String /* "EMPT_Normal" */
    var EMPT_AllSections: String /* "EMPT_AllSections" */
    var EMPT_MAX: String /* "EMPT_MAX" */
}

external open class AnimPreviewInstance : AnimSingleNodeInstance {
    constructor()
    constructor(Outer: UObject)
    open var MontagePreviewType: String /* "EMPT_Normal" | "EMPT_AllSections" | "EMPT_MAX" */
    open var MontagePreviewStartSectionIdx: Number

    companion object {
        fun Load(ResourceName: String): AnimPreviewInstance
        fun Find(Outer: UObject, ResourceName: String): AnimPreviewInstance
        fun GetDefaultObject(): AnimPreviewInstance
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimPreviewInstance
        fun C(Other: UObject): AnimPreviewInstance
        fun C(Other: Any): AnimPreviewInstance
    }
}

external open class AnimStateNodeBase : EdGraphNode {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimStateNodeBase
        fun Find(Outer: UObject, ResourceName: String): AnimStateNodeBase
        fun GetDefaultObject(): AnimStateNodeBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimStateNodeBase
        fun C(Other: UObject): AnimStateNodeBase
        fun C(Other: Any): AnimStateNodeBase
    }
}

external open class AnimStateConduitNode : AnimStateNodeBase {
    constructor()
    constructor(Outer: UObject)
    open var BoundGraph: EdGraph

    companion object {
        fun Load(ResourceName: String): AnimStateConduitNode
        fun Find(Outer: UObject, ResourceName: String): AnimStateConduitNode
        fun GetDefaultObject(): AnimStateConduitNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimStateConduitNode
        fun C(Other: UObject): AnimStateConduitNode
        fun C(Other: Any): AnimStateConduitNode
    }
}

external object EAnimStateType {
    var AST_SingleAnimation: String /* "AST_SingleAnimation" */
    var AST_BlendGraph: String /* "AST_BlendGraph" */
    var AST_MAX: String /* "AST_MAX" */
}

external open class AnimStateNode : AnimStateNodeBase {
    constructor()
    constructor(Outer: UObject)
    open var BoundGraph: EdGraph
    open var StateType: String /* "AST_SingleAnimation" | "AST_BlendGraph" | "AST_MAX" */
    open var StateEntered: AnimNotifyEvent
    open var StateLeft: AnimNotifyEvent
    open var StateFullyBlended: AnimNotifyEvent
    open var bAlwaysResetOnEntry: Boolean

    companion object {
        fun Load(ResourceName: String): AnimStateNode
        fun Find(Outer: UObject, ResourceName: String): AnimStateNode
        fun GetDefaultObject(): AnimStateNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimStateNode
        fun C(Other: UObject): AnimStateNode
        fun C(Other: Any): AnimStateNode
    }
}

external object ETransitionBlendMode {
    var TBM_Linear: String /* "TBM_Linear" */
    var TBM_Cubic: String /* "TBM_Cubic" */
    var TBM_MAX: String /* "TBM_MAX" */
}

external object ETransitionLogicType {
    var TLT_StandardBlend: String /* "TLT_StandardBlend" */
    var TLT_Inertialization: String /* "TLT_Inertialization" */
    var TLT_Custom: String /* "TLT_Custom" */
    var TLT_MAX: String /* "TLT_MAX" */
}

external open class AnimStateTransitionNode : AnimStateNodeBase {
    constructor()
    constructor(Outer: UObject)
    open var BoundGraph: EdGraph
    open var CustomTransitionGraph: EdGraph
    open var PriorityOrder: Number
    open var CrossfadeDuration: Number
    open var CrossfadeMode: String /* "TBM_Linear" | "TBM_Cubic" | "TBM_MAX" */
    open var BlendMode: String /* "Linear" | "Cubic" | "HermiteCubic" | "Sinusoidal" | "QuadraticInOut" | "CubicInOut" | "QuarticInOut" | "QuinticInOut" | "CircularIn" | "CircularOut" | "CircularInOut" | "ExpIn" | "ExpOut" | "ExpInOut" | "Custom" | "EAlphaBlendOption_MAX" */
    open var CustomBlendCurve: CurveFloat
    open var BlendProfile: BlendProfile
    open var bAutomaticRuleBasedOnSequencePlayerInState: Boolean
    open var LogicType: String /* "TLT_StandardBlend" | "TLT_Inertialization" | "TLT_Custom" | "TLT_MAX" */
    open var TransitionStart: AnimNotifyEvent
    open var TransitionEnd: AnimNotifyEvent
    open var TransitionInterrupt: AnimNotifyEvent
    open var Bidirectional: Boolean
    open var bSharedRules: Boolean
    open var bSharedCrossfade: Boolean
    open var SharedRulesName: String
    open var SharedRulesGuid: Guid
    open var SharedColor: LinearColor
    open var SharedCrossfadeName: String
    open var SharedCrossfadeGuid: Guid
    open var SharedCrossfadeIdx: Number

    companion object {
        fun Load(ResourceName: String): AnimStateTransitionNode
        fun Find(Outer: UObject, ResourceName: String): AnimStateTransitionNode
        fun GetDefaultObject(): AnimStateTransitionNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimStateTransitionNode
        fun C(Other: UObject): AnimStateTransitionNode
        fun C(Other: Any): AnimStateTransitionNode
    }
}

external open class ClassVariableCreator : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ClassVariableCreator
        fun Find(Outer: UObject, ResourceName: String): ClassVariableCreator
        fun GetDefaultObject(): ClassVariableCreator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClassVariableCreator
        fun C(Other: UObject): ClassVariableCreator
        fun C(Other: Any): ClassVariableCreator
    }
}

external open class K2Node_AnimGetter : K2Node_CallFunction {
    constructor()
    constructor(Outer: UObject)
    open var SourceNode: AnimGraphNode_Base
    open var SourceStateNode: AnimStateNodeBase
    open var GetterClass: UnrealEngineClass
    open var SourceAnimBlueprint: AnimBlueprint
    open var CachedTitle: String
    open var Contexts: Array<String>

    companion object {
        fun Load(ResourceName: String): K2Node_AnimGetter
        fun Find(Outer: UObject, ResourceName: String): K2Node_AnimGetter
        fun GetDefaultObject(): K2Node_AnimGetter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_AnimGetter
        fun C(Other: UObject): K2Node_AnimGetter
        fun C(Other: Any): K2Node_AnimGetter
    }
}

external open class K2Node_PlayMontage : K2Node_BaseAsyncTask {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): K2Node_PlayMontage
        fun Find(Outer: UObject, ResourceName: String): K2Node_PlayMontage
        fun GetDefaultObject(): K2Node_PlayMontage
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_PlayMontage
        fun C(Other: UObject): K2Node_PlayMontage
        fun C(Other: Any): K2Node_PlayMontage
    }
}

external object ETransitionGetter {
    var AnimationAsset_GetCurrentTime: String /* "AnimationAsset_GetCurrentTime" */
    var AnimationAsset_GetLength: String /* "AnimationAsset_GetLength" */
    var AnimationAsset_GetCurrentTimeFraction: String /* "AnimationAsset_GetCurrentTimeFraction" */
    var AnimationAsset_GetTimeFromEnd: String /* "AnimationAsset_GetTimeFromEnd" */
    var AnimationAsset_GetTimeFromEndFraction: String /* "AnimationAsset_GetTimeFromEndFraction" */
    var CurrentState_ElapsedTime: String /* "CurrentState_ElapsedTime" */
    var CurrentState_GetBlendWeight: String /* "CurrentState_GetBlendWeight" */
    var CurrentTransitionDuration: String /* "CurrentTransitionDuration" */
    var ArbitraryState_GetBlendWeight: String /* "ArbitraryState_GetBlendWeight" */
    var ETransitionGetter_MAX: String /* "ETransitionGetter_MAX" */
}

external open class K2Node_TransitionRuleGetter : K2Node {
    constructor()
    constructor(Outer: UObject)
    open var GetterType: String /* "AnimationAsset_GetCurrentTime" | "AnimationAsset_GetLength" | "AnimationAsset_GetCurrentTimeFraction" | "AnimationAsset_GetTimeFromEnd" | "AnimationAsset_GetTimeFromEndFraction" | "CurrentState_ElapsedTime" | "CurrentState_GetBlendWeight" | "CurrentTransitionDuration" | "ArbitraryState_GetBlendWeight" | "ETransitionGetter_MAX" */
    open var AssociatedAnimAssetPlayerNode: AnimGraphNode_Base
    open var AssociatedStateNode: AnimStateNode

    companion object {
        fun Load(ResourceName: String): K2Node_TransitionRuleGetter
        fun Find(Outer: UObject, ResourceName: String): K2Node_TransitionRuleGetter
        fun GetDefaultObject(): K2Node_TransitionRuleGetter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): K2Node_TransitionRuleGetter
        fun C(Other: UObject): K2Node_TransitionRuleGetter
        fun C(Other: Any): K2Node_TransitionRuleGetter
    }
}

external open class Texture2DDynamic : Texture {
    constructor()
    constructor(Outer: UObject)
    open var Format: String /* "PF_Unknown" | "PF_A32B32G32R32F" | "PF_B8G8R8A8" | "PF_G8" | "PF_G16" | "PF_DXT1" | "PF_DXT3" | "PF_DXT5" | "PF_UYVY" | "PF_FloatRGB" | "PF_FloatRGBA" | "PF_DepthStencil" | "PF_ShadowDepth" | "PF_R32_FLOAT" | "PF_G16R16" | "PF_G16R16F" | "PF_G16R16F_FILTER" | "PF_G32R32F" | "PF_A2B10G10R10" | "PF_A16B16G16R16" | "PF_D24" | "PF_R16F" | "PF_R16F_FILTER" | "PF_BC5" | "PF_V8U8" | "PF_A1" | "PF_FloatR11G11B10" | "PF_A8" | "PF_R32_UINT" | "PF_R32_SINT" | "PF_PVRTC2" | "PF_PVRTC4" | "PF_R16_UINT" | "PF_R16_SINT" | "PF_R16G16B16A16_UINT" | "PF_R16G16B16A16_SINT" | "PF_R5G6B5_UNORM" | "PF_R8G8B8A8" | "PF_A8R8G8B8" | "PF_BC4" | "PF_R8G8" | "PF_ATC_RGB" | "PF_ATC_RGBA_E" | "PF_ATC_RGBA_I" | "PF_X24_G8" | "PF_ETC1" | "PF_ETC2_RGB" | "PF_ETC2_RGBA" | "PF_R32G32B32A32_UINT" | "PF_R16G16_UINT" | "PF_ASTC_4x4" | "PF_ASTC_6x6" | "PF_ASTC_8x8" | "PF_ASTC_10x10" | "PF_ASTC_12x12" | "PF_BC6H" | "PF_BC7" | "PF_R8_UINT" | "PF_L8" | "PF_XGXR8" | "PF_R8G8B8A8_UINT" | "PF_R8G8B8A8_SNORM" | "PF_R16G16B16A16_UNORM" | "PF_R16G16B16A16_SNORM" | "PF_PLATFORM_HDR_0" | "PF_PLATFORM_HDR_1" | "PF_PLATFORM_HDR_2" | "PF_NV12" | "PF_R32G32_UINT" | "PF_ETC2_R11_EAC" | "PF_ETC2_RG11_EAC" | "PF_MAX" */

    companion object {
        fun Load(ResourceName: String): Texture2DDynamic
        fun Find(Outer: UObject, ResourceName: String): Texture2DDynamic
        fun GetDefaultObject(): Texture2DDynamic
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Texture2DDynamic
        fun C(Other: UObject): Texture2DDynamic
        fun C(Other: Any): Texture2DDynamic
    }
}

external open class AsyncTaskDownloadImage : BlueprintAsyncActionBase {
    constructor()
    constructor(Outer: UObject)
    open var OnSuccess: UnrealEngineMulticastDelegate<(Texture: Texture2DDynamic) -> Unit>
    open var OnFail: UnrealEngineMulticastDelegate<(Texture: Texture2DDynamic) -> Unit>

    companion object {
        fun Load(ResourceName: String): AsyncTaskDownloadImage
        fun Find(Outer: UObject, ResourceName: String): AsyncTaskDownloadImage
        fun GetDefaultObject(): AsyncTaskDownloadImage
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AsyncTaskDownloadImage
        fun DownloadImage(URL: String): AsyncTaskDownloadImage
        fun C(Other: UObject): AsyncTaskDownloadImage
        fun C(Other: Any): AsyncTaskDownloadImage
    }
}

external open class ContentWidget : PanelWidget {
    constructor()
    constructor(Outer: UObject)
    open fun SetContent(Content: Widget): PanelSlot
    open fun GetContentSlot(): PanelSlot
    open fun GetContent(): Widget

    companion object {
        fun Load(ResourceName: String): ContentWidget
        fun Find(Outer: UObject, ResourceName: String): ContentWidget
        fun GetDefaultObject(): ContentWidget
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ContentWidget
        fun C(Other: UObject): ContentWidget
        fun C(Other: Any): ContentWidget
    }
}

external open class BackgroundBlur : ContentWidget {
    constructor()
    constructor(Outer: UObject)
    open var Padding: Margin
    open var HorizontalAlignment: String /* "HAlign_Fill" | "HAlign_Left" | "HAlign_Center" | "HAlign_Right" | "HAlign_MAX" */
    open var VerticalAlignment: String /* "VAlign_Fill" | "VAlign_Top" | "VAlign_Center" | "VAlign_Bottom" | "VAlign_MAX" */
    open var bApplyAlphaToBlur: Boolean
    open var BlurStrength: Number
    open var bOverrideAutoRadiusCalculation: Boolean
    open var BlurRadius: Number
    open var LowQualityFallbackBrush: SlateBrush
    open fun SetVerticalAlignment(InVerticalAlignment: String /* "VAlign_Fill" | "VAlign_Top" | "VAlign_Center" | "VAlign_Bottom" | "VAlign_MAX" */)
    open fun SetPadding(InPadding: Margin)
    open fun SetLowQualityFallbackBrush(InBrush: SlateBrush)
    open fun SetHorizontalAlignment(InHorizontalAlignment: String /* "HAlign_Fill" | "HAlign_Left" | "HAlign_Center" | "HAlign_Right" | "HAlign_MAX" */)
    open fun SetBlurStrength(InStrength: Number)
    open fun SetBlurRadius(InBlurRadius: Number)
    open fun SetApplyAlphaToBlur(bInApplyAlphaToBlur: Boolean)

    companion object {
        fun Load(ResourceName: String): BackgroundBlur
        fun Find(Outer: UObject, ResourceName: String): BackgroundBlur
        fun GetDefaultObject(): BackgroundBlur
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BackgroundBlur
        fun C(Other: UObject): BackgroundBlur
        fun C(Other: Any): BackgroundBlur
    }
}

external open class BackgroundBlurSlot : PanelSlot {
    constructor()
    constructor(Outer: UObject)
    open var Padding: Margin
    open var HorizontalAlignment: String /* "HAlign_Fill" | "HAlign_Left" | "HAlign_Center" | "HAlign_Right" | "HAlign_MAX" */
    open var VerticalAlignment: String /* "VAlign_Fill" | "VAlign_Top" | "VAlign_Center" | "VAlign_Bottom" | "VAlign_MAX" */
    open fun SetVerticalAlignment(InVerticalAlignment: String /* "VAlign_Fill" | "VAlign_Top" | "VAlign_Center" | "VAlign_Bottom" | "VAlign_MAX" */)
    open fun SetPadding(InPadding: Margin)
    open fun SetHorizontalAlignment(InHorizontalAlignment: String /* "HAlign_Fill" | "HAlign_Left" | "HAlign_Center" | "HAlign_Right" | "HAlign_MAX" */)

    companion object {
        fun Load(ResourceName: String): BackgroundBlurSlot
        fun Find(Outer: UObject, ResourceName: String): BackgroundBlurSlot
        fun GetDefaultObject(): BackgroundBlurSlot
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BackgroundBlurSlot
        fun C(Other: UObject): BackgroundBlurSlot
        fun C(Other: Any): BackgroundBlurSlot
    }
}

external open class BoolBinding : PropertyBinding {
    constructor()
    constructor(Outer: UObject)
    open fun GetValue(): Boolean

    companion object {
        fun Load(ResourceName: String): BoolBinding
        fun Find(Outer: UObject, ResourceName: String): BoolBinding
        fun GetDefaultObject(): BoolBinding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BoolBinding
        fun C(Other: UObject): BoolBinding
        fun C(Other: Any): BoolBinding
    }
}

external open class Border : ContentWidget {
    constructor()
    constructor(Outer: UObject)
    open var HorizontalAlignment: String /* "HAlign_Fill" | "HAlign_Left" | "HAlign_Center" | "HAlign_Right" | "HAlign_MAX" */
    open var VerticalAlignment: String /* "VAlign_Fill" | "VAlign_Top" | "VAlign_Center" | "VAlign_Bottom" | "VAlign_MAX" */
    open var bShowEffectWhenDisabled: Boolean
    open var ContentColorAndOpacity: LinearColor
    open var ContentColorAndOpacityDelegate: UnrealEngineDelegate<() -> LinearColor>
    open var Padding: Margin
    open var Background: SlateBrush
    open var BackgroundDelegate: UnrealEngineDelegate<() -> SlateBrush>
    open var BrushColor: LinearColor
    open var BrushColorDelegate: UnrealEngineDelegate<() -> LinearColor>
    open var DesiredSizeScale: Vector2D
    open var bFlipForRightToLeftFlowDirection: Boolean
    open var OnMouseButtonDownEvent: UnrealEngineDelegate<(MyGeometry: Geometry, MouseEvent: UPointerEvent) -> EventReply>
    open var OnMouseButtonUpEvent: UnrealEngineDelegate<(MyGeometry: Geometry, MouseEvent: UPointerEvent) -> EventReply>
    open var OnMouseMoveEvent: UnrealEngineDelegate<(MyGeometry: Geometry, MouseEvent: UPointerEvent) -> EventReply>
    open var OnMouseDoubleClickEvent: UnrealEngineDelegate<(MyGeometry: Geometry, MouseEvent: UPointerEvent) -> EventReply>
    open var Brush: SlateBrushAsset
    open fun SetVerticalAlignment(InVerticalAlignment: String /* "VAlign_Fill" | "VAlign_Top" | "VAlign_Center" | "VAlign_Bottom" | "VAlign_MAX" */)
    open fun SetPadding(InPadding: Margin)
    open fun SetHorizontalAlignment(InHorizontalAlignment: String /* "HAlign_Fill" | "HAlign_Left" | "HAlign_Center" | "HAlign_Right" | "HAlign_MAX" */)
    open fun SetDesiredSizeScale(InScale: Vector2D)
    open fun SetContentColorAndOpacity(InContentColorAndOpacity: LinearColor)
    open fun SetBrushFromTexture(Texture: Texture2D)
    open fun SetBrushFromMaterial(Material: MaterialInterface)
    open fun SetBrushFromAsset(Asset: SlateBrushAsset)
    open fun SetBrushColor(InBrushColor: LinearColor)
    open fun SetBrush(InBrush: SlateBrush)
    open fun GetDynamicMaterial(): MaterialInstanceDynamic

    companion object {
        fun Load(ResourceName: String): Border
        fun Find(Outer: UObject, ResourceName: String): Border
        fun GetDefaultObject(): Border
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Border
        fun C(Other: UObject): Border
        fun C(Other: Any): Border
    }
}

external open class BrushBinding : PropertyBinding {
    constructor()
    constructor(Outer: UObject)
    open fun GetValue(): SlateBrush

    companion object {
        fun Load(ResourceName: String): BrushBinding
        fun Find(Outer: UObject, ResourceName: String): BrushBinding
        fun GetDefaultObject(): BrushBinding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BrushBinding
        fun C(Other: UObject): BrushBinding
        fun C(Other: Any): BrushBinding
    }
}

external object EButtonClickMethod {
    var DownAndUp: String /* "DownAndUp" */
    var MouseDown: String /* "MouseDown" */
    var MouseUp: String /* "MouseUp" */
    var PreciseClick: String /* "PreciseClick" */
    var EButtonClickMethod_MAX: String /* "EButtonClickMethod_MAX" */
}

external object EButtonTouchMethod {
    var DownAndUp: String /* "DownAndUp" */
    var Down: String /* "Down" */
    var PreciseTap: String /* "PreciseTap" */
    var EButtonTouchMethod_MAX: String /* "EButtonTouchMethod_MAX" */
}

external object EButtonPressMethod {
    var DownAndUp: String /* "DownAndUp" */
    var ButtonPress: String /* "ButtonPress" */
    var ButtonRelease: String /* "ButtonRelease" */
    var EButtonPressMethod_MAX: String /* "EButtonPressMethod_MAX" */
}

external open class Button : ContentWidget {
    constructor()
    constructor(Outer: UObject)
    open var Style: SlateWidgetStyleAsset
    open var WidgetStyle: ButtonStyle
    open var ColorAndOpacity: LinearColor
    open var BackgroundColor: LinearColor
    open var ClickMethod: String /* "DownAndUp" | "MouseDown" | "MouseUp" | "PreciseClick" | "EButtonClickMethod_MAX" */
    open var TouchMethod: String /* "DownAndUp" | "Down" | "PreciseTap" | "EButtonTouchMethod_MAX" */
    open var PressMethod: String /* "DownAndUp" | "ButtonPress" | "ButtonRelease" | "EButtonPressMethod_MAX" */
    open var IsFocusable: Boolean
    open var OnClicked: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnPressed: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnReleased: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnHovered: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnUnhovered: UnrealEngineMulticastDelegate<() -> Unit>
    open fun SetTouchMethod(InTouchMethod: String /* "DownAndUp" | "Down" | "PreciseTap" | "EButtonTouchMethod_MAX" */)
    open fun SetStyle(InStyle: ButtonStyle)
    open fun SetPressMethod(InPressMethod: String /* "DownAndUp" | "ButtonPress" | "ButtonRelease" | "EButtonPressMethod_MAX" */)
    open fun SetColorAndOpacity(InColorAndOpacity: LinearColor)
    open fun SetClickMethod(InClickMethod: String /* "DownAndUp" | "MouseDown" | "MouseUp" | "PreciseClick" | "EButtonClickMethod_MAX" */)
    open fun SetBackgroundColor(InBackgroundColor: LinearColor)
    open fun IsPressed(): Boolean

    companion object {
        fun Load(ResourceName: String): Button
        fun Find(Outer: UObject, ResourceName: String): Button
        fun GetDefaultObject(): Button
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Button
        fun C(Other: UObject): Button
        fun C(Other: Any): Button
    }
}

external open class ButtonSlot : PanelSlot {
    constructor()
    constructor(Outer: UObject)
    open var Padding: Margin
    open var HorizontalAlignment: String /* "HAlign_Fill" | "HAlign_Left" | "HAlign_Center" | "HAlign_Right" | "HAlign_MAX" */
    open var VerticalAlignment: String /* "VAlign_Fill" | "VAlign_Top" | "VAlign_Center" | "VAlign_Bottom" | "VAlign_MAX" */
    open fun SetVerticalAlignment(InVerticalAlignment: String /* "VAlign_Fill" | "VAlign_Top" | "VAlign_Center" | "VAlign_Bottom" | "VAlign_MAX" */)
    open fun SetPadding(InPadding: Margin)
    open fun SetHorizontalAlignment(InHorizontalAlignment: String /* "HAlign_Fill" | "HAlign_Left" | "HAlign_Center" | "HAlign_Right" | "HAlign_MAX" */)

    companion object {
        fun Load(ResourceName: String): ButtonSlot
        fun Find(Outer: UObject, ResourceName: String): ButtonSlot
        fun GetDefaultObject(): ButtonSlot
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ButtonSlot
        fun C(Other: UObject): ButtonSlot
        fun C(Other: Any): ButtonSlot
    }
}

external open class CanvasPanel : PanelWidget {
    constructor()
    constructor(Outer: UObject)
    open fun AddChildToCanvas(Content: Widget): CanvasPanelSlot

    companion object {
        fun Load(ResourceName: String): CanvasPanel
        fun Find(Outer: UObject, ResourceName: String): CanvasPanel
        fun GetDefaultObject(): CanvasPanel
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CanvasPanel
        fun C(Other: UObject): CanvasPanel
        fun C(Other: Any): CanvasPanel
    }
}

external open class CheckBox : ContentWidget {
    constructor()
    constructor(Outer: UObject)
    open var CheckedState: String /* "Unchecked" | "Checked" | "Undetermined" | "ECheckBoxState_MAX" */
    open var CheckedStateDelegate: UnrealEngineDelegate<() -> String>
    open var WidgetStyle: CheckBoxStyle
    open var Style: SlateWidgetStyleAsset
    open var UncheckedImage: SlateBrushAsset
    open var UncheckedHoveredImage: SlateBrushAsset
    open var UncheckedPressedImage: SlateBrushAsset
    open var CheckedImage: SlateBrushAsset
    open var CheckedHoveredImage: SlateBrushAsset
    open var CheckedPressedImage: SlateBrushAsset
    open var UndeterminedImage: SlateBrushAsset
    open var UndeterminedHoveredImage: SlateBrushAsset
    open var UndeterminedPressedImage: SlateBrushAsset
    open var HorizontalAlignment: String /* "HAlign_Fill" | "HAlign_Left" | "HAlign_Center" | "HAlign_Right" | "HAlign_MAX" */
    open var Padding: Margin
    open var BorderBackgroundColor: SlateColor
    open var ClickMethod: String /* "DownAndUp" | "MouseDown" | "MouseUp" | "PreciseClick" | "EButtonClickMethod_MAX" */
    open var TouchMethod: String /* "DownAndUp" | "Down" | "PreciseTap" | "EButtonTouchMethod_MAX" */
    open var PressMethod: String /* "DownAndUp" | "ButtonPress" | "ButtonRelease" | "EButtonPressMethod_MAX" */
    open var IsFocusable: Boolean
    open var OnCheckStateChanged: UnrealEngineMulticastDelegate<(bIsChecked: Boolean) -> Unit>
    open fun SetTouchMethod(InTouchMethod: String /* "DownAndUp" | "Down" | "PreciseTap" | "EButtonTouchMethod_MAX" */)
    open fun SetPressMethod(InPressMethod: String /* "DownAndUp" | "ButtonPress" | "ButtonRelease" | "EButtonPressMethod_MAX" */)
    open fun SetIsChecked(InIsChecked: Boolean)
    open fun SetClickMethod(InClickMethod: String /* "DownAndUp" | "MouseDown" | "MouseUp" | "PreciseClick" | "EButtonClickMethod_MAX" */)
    open fun SetCheckedState(InCheckedState: String /* "Unchecked" | "Checked" | "Undetermined" | "ECheckBoxState_MAX" */)
    open fun IsPressed(): Boolean
    open fun IsChecked(): Boolean
    open fun GetCheckedState(): String /* "Unchecked" | "Checked" | "Undetermined" | "ECheckBoxState_MAX" */

    companion object {
        fun Load(ResourceName: String): CheckBox
        fun Find(Outer: UObject, ResourceName: String): CheckBox
        fun GetDefaultObject(): CheckBox
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CheckBox
        fun C(Other: UObject): CheckBox
        fun C(Other: Any): CheckBox
    }
}

external open class CheckedStateBinding : PropertyBinding {
    constructor()
    constructor(Outer: UObject)
    open fun GetValue(): String /* "Unchecked" | "Checked" | "Undetermined" | "ECheckBoxState_MAX" */

    companion object {
        fun Load(ResourceName: String): CheckedStateBinding
        fun Find(Outer: UObject, ResourceName: String): CheckedStateBinding
        fun GetDefaultObject(): CheckedStateBinding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CheckedStateBinding
        fun C(Other: UObject): CheckedStateBinding
        fun C(Other: Any): CheckedStateBinding
    }
}

external open class CircularThrobber : Widget {
    constructor()
    constructor(Outer: UObject)
    open var NumberOfPieces: Number
    open var Period: Number
    open var Radius: Number
    open var PieceImage: SlateBrushAsset
    open var UImage: SlateBrush
    open var bEnableRadius: Boolean
    open fun SetRadius(InRadius: Number)
    open fun SetPeriod(InPeriod: Number)
    open fun SetNumberOfPieces(InNumberOfPieces: Number)

    companion object {
        fun Load(ResourceName: String): CircularThrobber
        fun Find(Outer: UObject, ResourceName: String): CircularThrobber
        fun GetDefaultObject(): CircularThrobber
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CircularThrobber
        fun C(Other: UObject): CircularThrobber
        fun C(Other: Any): CircularThrobber
    }
}

external open class ColorBinding : PropertyBinding {
    constructor()
    constructor(Outer: UObject)
    open fun GetSlateValue(): SlateColor
    open fun GetLinearValue(): LinearColor

    companion object {
        fun Load(ResourceName: String): ColorBinding
        fun Find(Outer: UObject, ResourceName: String): ColorBinding
        fun GetDefaultObject(): ColorBinding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ColorBinding
        fun C(Other: UObject): ColorBinding
        fun C(Other: Any): ColorBinding
    }
}

external open class ComboBox : Widget {
    constructor()
    constructor(Outer: UObject)
    open var Items: Array<UObject>
    open var OnGenerateWidgetEvent: UnrealEngineDelegate<(Item: UObject) -> Widget>
    open var bIsFocusable: Boolean

    companion object {
        fun Load(ResourceName: String): ComboBox
        fun Find(Outer: UObject, ResourceName: String): ComboBox
        fun GetDefaultObject(): ComboBox
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ComboBox
        fun C(Other: UObject): ComboBox
        fun C(Other: Any): ComboBox
    }
}

external open class TableRowStyle : SlateWidgetStyle {
    open var SelectorFocusedBrush: SlateBrush
    open var ActiveHoveredBrush: SlateBrush
    open var ActiveBrush: SlateBrush
    open var InactiveHoveredBrush: SlateBrush
    open var InactiveBrush: SlateBrush
    open var EvenRowBackgroundHoveredBrush: SlateBrush
    open var EvenRowBackgroundBrush: SlateBrush
    open var OddRowBackgroundHoveredBrush: SlateBrush
    open var OddRowBackgroundBrush: SlateBrush
    open var TextColor: SlateColor
    open var SelectedTextColor: SlateColor
    open var DropIndicator_Above: SlateBrush
    open var DropIndicator_Onto: SlateBrush
    open var DropIndicator_Below: SlateBrush
    open var ActiveHighlightedBrush: SlateBrush
    open var InactiveHighlightedBrush: SlateBrush
    override fun clone(): TableRowStyle

    companion object {
        fun C(Other: UObject): TableRowStyle
        fun C(Other: Any): TableRowStyle
    }
}

external object ESelectInfo {
    var OnKeyPress: String /* "OnKeyPress" */
    var OnNavigation: String /* "OnNavigation" */
    var OnMouseClick: String /* "OnMouseClick" */
    var Direct: String /* "Direct" */
    var ESelectInfo_MAX: String /* "ESelectInfo_MAX" */
}

external open class ComboBoxString : Widget {
    constructor()
    constructor(Outer: UObject)
    open var DefaultOptions: Array<String>
    open var SelectedOption: String
    open var WidgetStyle: ComboBoxStyle
    open var ItemStyle: TableRowStyle
    open var ContentPadding: Margin
    open var MaxListHeight: Number
    open var HasDownArrow: Boolean
    open var EnableGamepadNavigationMode: Boolean
    open var Font: SlateFontInfo
    open var ForegroundColor: SlateColor
    open var bIsFocusable: Boolean
    open var OnGenerateWidgetEvent: UnrealEngineDelegate<(Item: String) -> Widget>
    open var OnSelectionChanged: UnrealEngineMulticastDelegate<(SelectedItem: String, SelectionType: String /* "OnKeyPress" | "OnNavigation" | "OnMouseClick" | "Direct" | "ESelectInfo_MAX" */) -> Unit>
    open var OnOpening: UnrealEngineMulticastDelegate<() -> Unit>
    open fun SetSelectedOption(Option: String)
    open fun SetSelectedIndex(index: Number)
    open fun RemoveOption(Option: String): Boolean
    open fun RefreshOptions()
    open fun IsOpen(): Boolean
    open fun GetSelectedOption(): String
    open fun GetSelectedIndex(): Number
    open fun GetOptionCount(): Number
    open fun GetOptionAtIndex(index: Number): String
    open fun FindOptionIndex(Option: String): Number
    open fun ClearSelection()
    open fun ClearOptions()
    open fun AddOption(Option: String)

    companion object {
        fun Load(ResourceName: String): ComboBoxString
        fun Find(Outer: UObject, ResourceName: String): ComboBoxString
        fun GetDefaultObject(): ComboBoxString
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ComboBoxString
        fun C(Other: UObject): ComboBoxString
        fun C(Other: Any): ComboBoxString
    }
}

external object EDynamicBoxType {
    var Horizontal: String /* "Horizontal" */
    var Vertical: String /* "Vertical" */
    var Wrap: String /* "Wrap" */
    var VerticalWrap: String /* "VerticalWrap" */
    var Radial: String /* "Radial" */
    var Overlay: String /* "Overlay" */
    var EDynamicBoxType_MAX: String /* "EDynamicBoxType_MAX" */
}

external open class RadialBoxSettings {
    open var StartingAngle: Number
    open var bDistributeItemsEvenly: Boolean
    open var AngleBetweenItems: Number
    open var SectorCentralAngle: Number
    open fun clone(): RadialBoxSettings

    companion object {
        fun C(Other: UObject): RadialBoxSettings
        fun C(Other: Any): RadialBoxSettings
    }
}

external open class UserWidgetPool {
    open var ActiveWidgets: Array<UserWidget>
    open var InactiveWidgets: Array<UserWidget>
    open fun clone(): UserWidgetPool

    companion object {
        fun C(Other: UObject): UserWidgetPool
        fun C(Other: Any): UserWidgetPool
    }
}

external open class DynamicEntryBoxBase : Widget {
    constructor()
    constructor(Outer: UObject)
    open var EntryBoxType: String /* "Horizontal" | "Vertical" | "Wrap" | "VerticalWrap" | "Radial" | "Overlay" | "EDynamicBoxType_MAX" */
    open var EntrySpacing: Vector2D
    open var SpacingPattern: Array<Vector2D>
    open var EntrySizeRule: SlateChildSize
    open var EntryHorizontalAlignment: String /* "HAlign_Fill" | "HAlign_Left" | "HAlign_Center" | "HAlign_Right" | "HAlign_MAX" */
    open var EntryVerticalAlignment: String /* "VAlign_Fill" | "VAlign_Top" | "VAlign_Center" | "VAlign_Bottom" | "VAlign_MAX" */
    open var MaxElementSize: Number
    open var RadialBoxSettings: RadialBoxSettings
    open var EntryWidgetPool: UserWidgetPool
    open fun SetRadialSettings(InSettings: RadialBoxSettings)
    open fun SetEntrySpacing(InEntrySpacing: Vector2D)
    open fun GetNumEntries(): Number
    open fun GetAllEntries(): Array<UserWidget>

    companion object {
        fun Load(ResourceName: String): DynamicEntryBoxBase
        fun Find(Outer: UObject, ResourceName: String): DynamicEntryBoxBase
        fun GetDefaultObject(): DynamicEntryBoxBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DynamicEntryBoxBase
        fun C(Other: UObject): DynamicEntryBoxBase
        fun C(Other: Any): DynamicEntryBoxBase
    }
}

external open class DynamicEntryBox : DynamicEntryBoxBase {
    constructor()
    constructor(Outer: UObject)
    open var NumDesignerPreviewEntries: Number
    open var EntryWidgetClass: UnrealEngineClass
    open fun Reset(bDeleteWidgets: Boolean)
    open fun RemoveEntry(EntryWidget: UserWidget)
    open fun CreateEntryofClass(EntryClass: UnrealEngineClass): UserWidget
    open fun CreateEntry(): UserWidget

    companion object {
        fun Load(ResourceName: String): DynamicEntryBox
        fun Find(Outer: UObject, ResourceName: String): DynamicEntryBox
        fun GetDefaultObject(): DynamicEntryBox
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DynamicEntryBox
        fun C(Other: UObject): DynamicEntryBox
        fun C(Other: Any): DynamicEntryBox
    }
}

external object EVirtualKeyboardType {
    var Default: String /* "Default" */
    var Number: String /* "Number" */
    var Web: String /* "Web" */
    var Email: String /* "Email" */
    var Password: String /* "Password" */
    var AlphaNumeric: String /* "AlphaNumeric" */
    var EVirtualKeyboardType_MAX: String /* "EVirtualKeyboardType_MAX" */
}

external open class VirtualKeyboardOptions {
    open var bEnableAutocorrect: Boolean
    open fun clone(): VirtualKeyboardOptions

    companion object {
        fun C(Other: UObject): VirtualKeyboardOptions
        fun C(Other: Any): VirtualKeyboardOptions
    }
}

external object EVirtualKeyboardTrigger {
    var OnFocusByPointer: String /* "OnFocusByPointer" */
    var OnAllFocusEvents: String /* "OnAllFocusEvents" */
    var EVirtualKeyboardTrigger_MAX: String /* "EVirtualKeyboardTrigger_MAX" */
}

external object EVirtualKeyboardDismissAction {
    var TextChangeOnDismiss: String /* "TextChangeOnDismiss" */
    var TextCommitOnAccept: String /* "TextCommitOnAccept" */
    var TextCommitOnDismiss: String /* "TextCommitOnDismiss" */
    var EVirtualKeyboardDismissAction_MAX: String /* "EVirtualKeyboardDismissAction_MAX" */
}

external object ETextJustify {
    var Left: String /* "Left" */
    var Center: String /* "Center" */
    var Right: String /* "Right" */
    var ETextJustify_MAX: String /* "ETextJustify_MAX" */
}

external object ETextShapingMethod {
    var Auto: String /* "Auto" */
    var KerningOnly: String /* "KerningOnly" */
    var FullShaping: String /* "FullShaping" */
    var ETextShapingMethod_MAX: String /* "ETextShapingMethod_MAX" */
}

external object ETextFlowDirection {
    var Auto: String /* "Auto" */
    var LeftToRight: String /* "LeftToRight" */
    var RightToLeft: String /* "RightToLeft" */
    var ETextFlowDirection_MAX: String /* "ETextFlowDirection_MAX" */
}

external open class ShapedTextOptions {
    open var bOverride_TextShapingMethod: Boolean
    open var bOverride_TextFlowDirection: Boolean
    open var TextShapingMethod: String /* "Auto" | "KerningOnly" | "FullShaping" | "ETextShapingMethod_MAX" */
    open var TextFlowDirection: String /* "Auto" | "LeftToRight" | "RightToLeft" | "ETextFlowDirection_MAX" */
    open fun clone(): ShapedTextOptions

    companion object {
        fun C(Other: UObject): ShapedTextOptions
        fun C(Other: Any): ShapedTextOptions
    }
}

external object ETextCommit {
    var Default: String /* "Default" */
    var OnEnter: String /* "OnEnter" */
    var OnUserMovedFocus: String /* "OnUserMovedFocus" */
    var OnCleared: String /* "OnCleared" */
    var ETextCommit_MAX: String /* "ETextCommit_MAX" */
}

external open class EditableText : Widget {
    constructor()
    constructor(Outer: UObject)
    open var text: String
    open var TextDelegate: UnrealEngineDelegate<() -> String>
    open var HintText: String
    open var HintTextDelegate: UnrealEngineDelegate<() -> String>
    open var WidgetStyle: EditableTextStyle
    open var Style: SlateWidgetStyleAsset
    open var BackgroundImageSelected: SlateBrushAsset
    open var BackgroundImageComposing: SlateBrushAsset
    open var CaretImage: SlateBrushAsset
    open var Font: SlateFontInfo
    open var ColorAndOpacity: SlateColor
    open var IsReadOnly: Boolean
    open var IsPassword: Boolean
    open var MinimumDesiredWidth: Number
    open var IsCaretMovedWhenGainFocus: Boolean
    open var SelectAllTextWhenFocused: Boolean
    open var RevertTextOnEscape: Boolean
    open var ClearKeyboardFocusOnCommit: Boolean
    open var SelectAllTextOnCommit: Boolean
    open var AllowContextMenu: Boolean
    open var KeyboardType: String /* "Default" | "Number" | "Web" | "Email" | "Password" | "AlphaNumeric" | "EVirtualKeyboardType_MAX" */
    open var VirtualKeyboardOptions: VirtualKeyboardOptions
    open var VirtualKeyboardTrigger: String /* "OnFocusByPointer" | "OnAllFocusEvents" | "EVirtualKeyboardTrigger_MAX" */
    open var VirtualKeyboardDismissAction: String /* "TextChangeOnDismiss" | "TextCommitOnAccept" | "TextCommitOnDismiss" | "EVirtualKeyboardDismissAction_MAX" */
    open var Justification: String /* "Left" | "Center" | "Right" | "ETextJustify_MAX" */
    open var ShapedTextOptions: ShapedTextOptions
    open var OnTextChanged: UnrealEngineMulticastDelegate<(text: String) -> Unit>
    open var OnTextCommitted: UnrealEngineMulticastDelegate<(text: String, CommitMethod: String /* "Default" | "OnEnter" | "OnUserMovedFocus" | "OnCleared" | "ETextCommit_MAX" */) -> Unit>
    open fun SetText(InText: String)
    open fun SetJustification(InJustification: String /* "Left" | "Center" | "Right" | "ETextJustify_MAX" */)
    open fun SetIsReadOnly(InbIsReadyOnly: Boolean)
    open fun SetIsPassword(InbIsPassword: Boolean)
    open fun SetHintText(InHintText: String)
    open fun GetText(): String

    companion object {
        fun Load(ResourceName: String): EditableText
        fun Find(Outer: UObject, ResourceName: String): EditableText
        fun GetDefaultObject(): EditableText
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditableText
        fun C(Other: UObject): EditableText
        fun C(Other: Any): EditableText
    }
}

external open class EditableTextBox : Widget {
    constructor()
    constructor(Outer: UObject)
    open var text: String
    open var TextDelegate: UnrealEngineDelegate<() -> String>
    open var WidgetStyle: EditableTextBoxStyle
    open var Style: SlateWidgetStyleAsset
    open var HintText: String
    open var HintTextDelegate: UnrealEngineDelegate<() -> String>
    open var Font: SlateFontInfo
    open var ForegroundColor: LinearColor
    open var BackgroundColor: LinearColor
    open var ReadOnlyForegroundColor: LinearColor
    open var IsReadOnly: Boolean
    open var IsPassword: Boolean
    open var MinimumDesiredWidth: Number
    open var Padding: Margin
    open var IsCaretMovedWhenGainFocus: Boolean
    open var SelectAllTextWhenFocused: Boolean
    open var RevertTextOnEscape: Boolean
    open var ClearKeyboardFocusOnCommit: Boolean
    open var SelectAllTextOnCommit: Boolean
    open var AllowContextMenu: Boolean
    open var KeyboardType: String /* "Default" | "Number" | "Web" | "Email" | "Password" | "AlphaNumeric" | "EVirtualKeyboardType_MAX" */
    open var VirtualKeyboardOptions: VirtualKeyboardOptions
    open var VirtualKeyboardTrigger: String /* "OnFocusByPointer" | "OnAllFocusEvents" | "EVirtualKeyboardTrigger_MAX" */
    open var VirtualKeyboardDismissAction: String /* "TextChangeOnDismiss" | "TextCommitOnAccept" | "TextCommitOnDismiss" | "EVirtualKeyboardDismissAction_MAX" */
    open var Justification: String /* "Left" | "Center" | "Right" | "ETextJustify_MAX" */
    open var ShapedTextOptions: ShapedTextOptions
    open var OnTextChanged: UnrealEngineMulticastDelegate<(text: String) -> Unit>
    open var OnTextCommitted: UnrealEngineMulticastDelegate<(text: String, CommitMethod: String /* "Default" | "OnEnter" | "OnUserMovedFocus" | "OnCleared" | "ETextCommit_MAX" */) -> Unit>
    open fun SetText(InText: String)
    open fun SetJustification(InJustification: String /* "Left" | "Center" | "Right" | "ETextJustify_MAX" */)
    open fun SetIsReadOnly(bReadOnly: Boolean)
    open fun SetIsPassword(bIsPassword: Boolean)
    open fun SetHintText(InText: String)
    open fun SetError(InError: String)
    open fun HasError(): Boolean
    open fun GetText(): String
    open fun ClearError()

    companion object {
        fun Load(ResourceName: String): EditableTextBox
        fun Find(Outer: UObject, ResourceName: String): EditableTextBox
        fun GetDefaultObject(): EditableTextBox
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditableTextBox
        fun C(Other: UObject): EditableTextBox
        fun C(Other: Any): EditableTextBox
    }
}

external open class ExpandableAreaStyle : SlateWidgetStyle {
    open var CollapsedImage: SlateBrush
    open var ExpandedImage: SlateBrush
    open var RolloutAnimationSeconds: Number
    override fun clone(): ExpandableAreaStyle

    companion object {
        fun C(Other: UObject): ExpandableAreaStyle
        fun C(Other: Any): ExpandableAreaStyle
    }
}

external open class ExpandableArea : Widget {
    constructor()
    constructor(Outer: UObject)
    open var Style: ExpandableAreaStyle
    open var BorderBrush: SlateBrush
    open var BorderColor: SlateColor
    open var bIsExpanded: Boolean
    open var MaxHeight: Number
    open var HeaderPadding: Margin
    open var AreaPadding: Margin
    open var OnExpansionChanged: UnrealEngineMulticastDelegate<(Area: ExpandableArea, bIsExpanded: Boolean) -> Unit>
    open var HeaderContent: Widget
    open var BodyContent: Widget
    open fun SetIsExpanded_Animated(IsExpanded: Boolean)
    open fun SetIsExpanded(IsExpanded: Boolean)
    open fun GetIsExpanded(): Boolean

    companion object {
        fun Load(ResourceName: String): ExpandableArea
        fun Find(Outer: UObject, ResourceName: String): ExpandableArea
        fun GetDefaultObject(): ExpandableArea
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ExpandableArea
        fun C(Other: UObject): ExpandableArea
        fun C(Other: Any): ExpandableArea
    }
}

external open class FloatBinding : PropertyBinding {
    constructor()
    constructor(Outer: UObject)
    open fun GetValue(): Number

    companion object {
        fun Load(ResourceName: String): FloatBinding
        fun Find(Outer: UObject, ResourceName: String): FloatBinding
        fun GetDefaultObject(): FloatBinding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FloatBinding
        fun C(Other: UObject): FloatBinding
        fun C(Other: Any): FloatBinding
    }
}

external open class GridPanel : PanelWidget {
    constructor()
    constructor(Outer: UObject)
    open var ColumnFill: Array<Number>
    open var RowFill: Array<Number>
    open fun SetRowFill(ColumnIndex: Number, Coefficient: Number)
    open fun SetColumnFill(ColumnIndex: Number, Coefficient: Number)
    open fun AddChildToGrid(Content: Widget, InRow: Number, InColumn: Number): GridSlot

    companion object {
        fun Load(ResourceName: String): GridPanel
        fun Find(Outer: UObject, ResourceName: String): GridPanel
        fun GetDefaultObject(): GridPanel
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GridPanel
        fun C(Other: UObject): GridPanel
        fun C(Other: Any): GridPanel
    }
}

external open class HorizontalBox : PanelWidget {
    constructor()
    constructor(Outer: UObject)
    open fun AddChildToHorizontalBox(Content: Widget): HorizontalBoxSlot

    companion object {
        fun Load(ResourceName: String): HorizontalBox
        fun Find(Outer: UObject, ResourceName: String): HorizontalBox
        fun GetDefaultObject(): HorizontalBox
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): HorizontalBox
        fun C(Other: UObject): HorizontalBox
        fun C(Other: Any): HorizontalBox
    }
}

external open class UImage : Widget {
    constructor()
    constructor(Outer: UObject)
    open var UImage: SlateBrushAsset
    open var Brush: SlateBrush
    open var BrushDelegate: UnrealEngineDelegate<() -> SlateBrush>
    open var ColorAndOpacity: LinearColor
    open var ColorAndOpacityDelegate: UnrealEngineDelegate<() -> LinearColor>
    open var bFlipForRightToLeftFlowDirection: Boolean
    open var OnMouseButtonDownEvent: UnrealEngineDelegate<(MyGeometry: Geometry, MouseEvent: UPointerEvent) -> EventReply>
    open fun SetOpacity(InOpacity: Number)
    open fun SetColorAndOpacity(InColorAndOpacity: LinearColor)
    open fun SetBrushTintColor(TintColor: SlateColor)
    open fun SetBrushSize(DesiredSize: Vector2D)
    open fun SetBrushResourceObject(ResourceObject: UObject)
    open fun SetBrushFromTextureDynamic(Texture: Texture2DDynamic, bMatchSize: Boolean)
    open fun SetBrushFromTexture(Texture: Texture2D, bMatchSize: Boolean)
    open fun SetBrushFromSoftTexture(SoftTexture: Texture2D, bMatchSize: Boolean)
    open fun SetBrushFromSoftMaterial(SoftMaterial: MaterialInterface)
    open fun SetBrushFromMaterial(Material: MaterialInterface)
    open fun SetBrushFromAsset(Asset: SlateBrushAsset)
    open fun SetBrush(InBrush: SlateBrush)
    open fun GetDynamicMaterial(): MaterialInstanceDynamic

    companion object {
        fun Load(ResourceName: String): UImage
        fun Find(Outer: UObject, ResourceName: String): UImage
        fun GetDefaultObject(): UImage
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UImage
        fun C(Other: UObject): UImage
        fun C(Other: Any): UImage
    }
}

external open class InputKeySelector : Widget {
    constructor()
    constructor(Outer: UObject)
    open var WidgetStyle: ButtonStyle
    open var TextStyle: TextBlockStyle
    open var SelectedKey: InputChord
    open var Font: SlateFontInfo
    open var Margin: Margin
    open var ColorAndOpacity: LinearColor
    open var KeySelectionText: String
    open var NoKeySpecifiedText: String
    open var bAllowModifierKeys: Boolean
    open var bAllowGamepadKeys: Boolean
    open var EscapeKeys: Array<Key>
    open var OnKeySelected: UnrealEngineMulticastDelegate<(SelectedKey: InputChord) -> Unit>
    open var OnIsSelectingKeyChanged: UnrealEngineMulticastDelegate<() -> Unit>
    open fun SetTextBlockVisibility(InVisibility: String /* "Visible" | "Collapsed" | "Hidden" | "HitTestInvisible" | "SelfHitTestInvisible" | "ESlateVisibility_MAX" */)
    open fun SetSelectedKey(InSelectedKey: InputChord)
    open fun SetNoKeySpecifiedText(InNoKeySpecifiedText: String)
    open fun SetKeySelectionText(InKeySelectionText: String)
    open fun SetEscapeKeys(InKeys: Array<Key>)
    open fun SetAllowModifierKeys(bInAllowModifierKeys: Boolean)
    open fun SetAllowGamepadKeys(bInAllowGamepadKeys: Boolean)
    open fun GetIsSelectingKey(): Boolean

    companion object {
        fun Load(ResourceName: String): InputKeySelector
        fun Find(Outer: UObject, ResourceName: String): InputKeySelector
        fun GetDefaultObject(): InputKeySelector
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InputKeySelector
        fun C(Other: UObject): InputKeySelector
        fun C(Other: Any): InputKeySelector
    }
}

external open class Int32Binding : PropertyBinding {
    constructor()
    constructor(Outer: UObject)
    open fun GetValue(): Number

    companion object {
        fun Load(ResourceName: String): Int32Binding
        fun Find(Outer: UObject, ResourceName: String): Int32Binding
        fun GetDefaultObject(): Int32Binding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Int32Binding
        fun C(Other: UObject): Int32Binding
        fun C(Other: Any): Int32Binding
    }
}

external open class InvalidationBox : ContentWidget {
    constructor()
    constructor(Outer: UObject)
    open var bCanCache: Boolean
    open var CacheRelativeTransforms: Boolean
    open fun SetCanCache(CanCache: Boolean)
    open fun InvalidateCache()
    open fun GetCanCache(): Boolean

    companion object {
        fun Load(ResourceName: String): InvalidationBox
        fun Find(Outer: UObject, ResourceName: String): InvalidationBox
        fun GetDefaultObject(): InvalidationBox
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InvalidationBox
        fun C(Other: UObject): InvalidationBox
        fun C(Other: Any): InvalidationBox
    }
}

external open class UserListEntry : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun OnItemSelectionChanged(bIsSelected: Boolean)
    open fun OnItemExpansionChanged(bIsExpanded: Boolean)
    open fun OnEntryReleased()

    companion object {
        fun Load(ResourceName: String): UserListEntry
        fun Find(Outer: UObject, ResourceName: String): UserListEntry
        fun GetDefaultObject(): UserListEntry
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UserListEntry
        fun C(Other: UObject): UserListEntry
        fun C(Other: Any): UserListEntry
    }
}

external open class UserListEntryLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): UserListEntryLibrary
        fun Find(Outer: UObject, ResourceName: String): UserListEntryLibrary
        fun GetDefaultObject(): UserListEntryLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UserListEntryLibrary
        fun C(Other: UObject): UserListEntryLibrary
        fun C(Other: Any): UserListEntryLibrary
    }
}

external open class UserObjectListEntry : UserListEntry {
    constructor()
    constructor(Outer: UObject)
    open fun OnListItemObjectSet(ListItemObject: UObject)

    companion object {
        fun Load(ResourceName: String): UserObjectListEntry
        fun Find(Outer: UObject, ResourceName: String): UserObjectListEntry
        fun GetDefaultObject(): UserObjectListEntry
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UserObjectListEntry
        fun C(Other: UObject): UserObjectListEntry
        fun C(Other: Any): UserObjectListEntry
    }
}

external open class UserObjectListEntryLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): UserObjectListEntryLibrary
        fun Find(Outer: UObject, ResourceName: String): UserObjectListEntryLibrary
        fun GetDefaultObject(): UserObjectListEntryLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UserObjectListEntryLibrary
        fun C(Other: UObject): UserObjectListEntryLibrary
        fun C(Other: Any): UserObjectListEntryLibrary
    }
}

external open class ListViewBase : Widget {
    constructor()
    constructor(Outer: UObject)
    open var EntryWidgetClass: UnrealEngineClass
    open var WheelScrollMultiplier: Number
    open var bEnableScrollAnimation: Boolean
    open var bEnableFixedLineOffset: Boolean
    open var FixedLineScrollOffset: Number
    open var BP_OnEntryGenerated: UnrealEngineMulticastDelegate<(Widget: UserWidget) -> Unit>
    open var BP_OnEntryReleased: UnrealEngineMulticastDelegate<(Widget: UserWidget) -> Unit>
    open var NumDesignerPreviewEntries: Number
    open var EntryWidgetPool: UserWidgetPool
    open fun SetWheelScrollMultiplier(NewWheelScrollMultiplier: Number)
    open fun SetScrollOffset(InScrollOffset: Number)
    open fun SetScrollbarVisibility(InVisibility: String /* "Visible" | "Collapsed" | "Hidden" | "HitTestInvisible" | "SelfHitTestInvisible" | "ESlateVisibility_MAX" */)
    open fun ScrollToTop()
    open fun ScrollToBottom()
    open fun RequestRefresh()
    open fun RegenerateAllEntries()
    open fun GetDisplayedEntryWidgets(): Array<UserWidget>

    companion object {
        fun Load(ResourceName: String): ListViewBase
        fun Find(Outer: UObject, ResourceName: String): ListViewBase
        fun GetDefaultObject(): ListViewBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ListViewBase
        fun C(Other: UObject): ListViewBase
        fun C(Other: Any): ListViewBase
    }
}

external object EOrientation {
    var Orient_Horizontal: String /* "Orient_Horizontal" */
    var Orient_Vertical: String /* "Orient_Vertical" */
    var Orient_MAX: String /* "Orient_MAX" */
}

external object ESelectionMode {
    var None: String /* "None" */
    var Single: String /* "Single" */
    var SingleToggle: String /* "SingleToggle" */
    var Multi: String /* "Multi" */
    var ESelectionMode_MAX: String /* "ESelectionMode_MAX" */
}

external object EConsumeMouseWheel {
    var WhenScrollingPossible: String /* "WhenScrollingPossible" */
    var Always: String /* "Always" */
    var Never: String /* "Never" */
    var EConsumeMouseWheel_MAX: String /* "EConsumeMouseWheel_MAX" */
}

external interface `T$608` {
    var Items: Array<UObject>
    var `$`: Boolean
}

external open class ListView : ListViewBase {
    constructor()
    constructor(Outer: UObject)
    open var Orientation: String /* "Orient_Horizontal" | "Orient_Vertical" | "Orient_MAX" */
    open var SelectionMode: String /* "None" | "Single" | "SingleToggle" | "Multi" | "ESelectionMode_MAX" */
    open var ConsumeMouseWheel: String /* "WhenScrollingPossible" | "Always" | "Never" | "EConsumeMouseWheel_MAX" */
    open var bClearSelectionOnClick: Boolean
    open var bIsFocusable: Boolean
    open var EntrySpacing: Number
    open var bReturnFocusToSelection: Boolean
    open var ListItems: Array<UObject>
    open var BP_OnEntryInitialized: UnrealEngineMulticastDelegate<(Item: UObject, Widget: UserWidget) -> Unit>
    open var BP_OnItemClicked: UnrealEngineMulticastDelegate<(Item: UObject) -> Unit>
    open var BP_OnItemDoubleClicked: UnrealEngineMulticastDelegate<(Item: UObject) -> Unit>
    open var BP_OnItemIsHoveredChanged: UnrealEngineMulticastDelegate<(Item: UObject, bIsHovered: Boolean) -> Unit>
    open var BP_OnItemSelectionChanged: UnrealEngineMulticastDelegate<(Item: UObject, bIsSelected: Boolean) -> Unit>
    open var BP_OnItemScrolledIntoView: UnrealEngineMulticastDelegate<(Item: UObject, Widget: UserWidget) -> Unit>
    open fun SetSelectionMode(SelectionMode: String /* "None" | "Single" | "SingleToggle" | "Multi" | "ESelectionMode_MAX" */)
    open fun SetSelectedIndex(index: Number)
    open fun ScrollIndexIntoView(index: Number)
    open fun RemoveItem(Item: UObject)
    open fun NavigateToIndex(index: Number)
    open fun IsRefreshPending(): Boolean
    open fun GetNumItems(): Number
    open fun GetListItems(): Array<UObject>
    open fun GetItemAt(index: Number): UObject
    open fun GetIndexForItem(Item: UObject): Number
    open fun ClearListItems()
    open fun SetSelectedItem(Item: UObject)
    open fun SetListItems(InListItems: Array<UObject>)
    open fun SetItemSelection(Item: UObject, bSelected: Boolean)
    open fun ScrollItemIntoView(Item: UObject)
    open fun NavigateToItem(Item: UObject)
    open fun IsItemVisible(Item: UObject): Boolean
    open fun GetSelectedItems(Items: Array<UObject> = definedExternally): `T$608`
    open fun GetSelectedItem(): UObject
    open fun GetNumItemsSelected(): Number
    open fun ClearSelection()
    open fun CancelScrollIntoView()
    open fun AddItem(Item: UObject)

    companion object {
        fun Load(ResourceName: String): ListView
        fun Find(Outer: UObject, ResourceName: String): ListView
        fun GetDefaultObject(): ListView
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ListView
        fun C(Other: UObject): ListView
        fun C(Other: Any): ListView
    }
}

external open class ListViewDesignerPreviewItem : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ListViewDesignerPreviewItem
        fun Find(Outer: UObject, ResourceName: String): ListViewDesignerPreviewItem
        fun GetDefaultObject(): ListViewDesignerPreviewItem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ListViewDesignerPreviewItem
        fun C(Other: UObject): ListViewDesignerPreviewItem
        fun C(Other: Any): ListViewDesignerPreviewItem
    }
}

external object EMenuPlacement {
    var MenuPlacement_BelowAnchor: String /* "MenuPlacement_BelowAnchor" */
    var MenuPlacement_CenteredBelowAnchor: String /* "MenuPlacement_CenteredBelowAnchor" */
    var MenuPlacement_BelowRightAnchor: String /* "MenuPlacement_BelowRightAnchor" */
    var MenuPlacement_ComboBox: String /* "MenuPlacement_ComboBox" */
    var MenuPlacement_ComboBoxRight: String /* "MenuPlacement_ComboBoxRight" */
    var MenuPlacement_MenuRight: String /* "MenuPlacement_MenuRight" */
    var MenuPlacement_AboveAnchor: String /* "MenuPlacement_AboveAnchor" */
    var MenuPlacement_CenteredAboveAnchor: String /* "MenuPlacement_CenteredAboveAnchor" */
    var MenuPlacement_AboveRightAnchor: String /* "MenuPlacement_AboveRightAnchor" */
    var MenuPlacement_MenuLeft: String /* "MenuPlacement_MenuLeft" */
    var MenuPlacement_Center: String /* "MenuPlacement_Center" */
    var MenuPlacement_RightLeftCenter: String /* "MenuPlacement_RightLeftCenter" */
    var MenuPlacement_MatchBottomLeft: String /* "MenuPlacement_MatchBottomLeft" */
    var MenuPlacement_MAX: String /* "MenuPlacement_MAX" */
}

external open class MenuAnchor : ContentWidget {
    constructor()
    constructor(Outer: UObject)
    open var MenuClass: UnrealEngineClass
    open var OnGetMenuContentEvent: UnrealEngineDelegate<() -> Widget>
    open var OnGetUserMenuContentEvent: UnrealEngineDelegate<() -> UserWidget>
    open var PLACEMENT: String /* "MenuPlacement_BelowAnchor" | "MenuPlacement_CenteredBelowAnchor" | "MenuPlacement_BelowRightAnchor" | "MenuPlacement_ComboBox" | "MenuPlacement_ComboBoxRight" | "MenuPlacement_MenuRight" | "MenuPlacement_AboveAnchor" | "MenuPlacement_CenteredAboveAnchor" | "MenuPlacement_AboveRightAnchor" | "MenuPlacement_MenuLeft" | "MenuPlacement_Center" | "MenuPlacement_RightLeftCenter" | "MenuPlacement_MatchBottomLeft" | "MenuPlacement_MAX" */
    open var bFitInWindow: Boolean
    open var ShouldDeferPaintingAfterWindowContent: Boolean
    open var UseApplicationMenuStack: Boolean
    open var OnMenuOpenChanged: UnrealEngineMulticastDelegate<(bIsOpen: Boolean) -> Unit>
    open fun ToggleOpen(bFocusOnOpen: Boolean)
    open fun ShouldOpenDueToClick(): Boolean
    open fun SetPlacement(InPlacement: String /* "MenuPlacement_BelowAnchor" | "MenuPlacement_CenteredBelowAnchor" | "MenuPlacement_BelowRightAnchor" | "MenuPlacement_ComboBox" | "MenuPlacement_ComboBoxRight" | "MenuPlacement_MenuRight" | "MenuPlacement_AboveAnchor" | "MenuPlacement_CenteredAboveAnchor" | "MenuPlacement_AboveRightAnchor" | "MenuPlacement_MenuLeft" | "MenuPlacement_Center" | "MenuPlacement_RightLeftCenter" | "MenuPlacement_MatchBottomLeft" | "MenuPlacement_MAX" */)
    open fun Open(bFocusMenu: Boolean)
    open fun IsOpen(): Boolean
    open fun HasOpenSubMenus(): Boolean
    open fun GetMenuPosition(): Vector2D
    open fun FitInWindow(bFit: Boolean)
    open fun Close()

    companion object {
        fun Load(ResourceName: String): MenuAnchor
        fun Find(Outer: UObject, ResourceName: String): MenuAnchor
        fun GetDefaultObject(): MenuAnchor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MenuAnchor
        fun C(Other: UObject): MenuAnchor
        fun C(Other: Any): MenuAnchor
    }
}

external open class MouseCursorBinding : PropertyBinding {
    constructor()
    constructor(Outer: UObject)
    open fun GetValue(): String /* "None" | "Default" | "TextEditBeam" | "ResizeLeftRight" | "ResizeUpDown" | "ResizeSouthEast" | "ResizeSouthWest" | "CardinalCross" | "Crosshairs" | "Hand" | "GrabHand" | "GrabHandClosed" | "SlashedCircle" | "EyeDropper" | "EMouseCursor_MAX" */

    companion object {
        fun Load(ResourceName: String): MouseCursorBinding
        fun Find(Outer: UObject, ResourceName: String): MouseCursorBinding
        fun GetDefaultObject(): MouseCursorBinding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MouseCursorBinding
        fun C(Other: UObject): MouseCursorBinding
        fun C(Other: Any): MouseCursorBinding
    }
}

external open class MovieSceneEntitySystem : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Linker: MovieSceneEntitySystemLinker

    companion object {
        fun Load(ResourceName: String): MovieSceneEntitySystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneEntitySystem
        fun GetDefaultObject(): MovieSceneEntitySystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneEntitySystem
        fun C(Other: UObject): MovieSceneEntitySystem
        fun C(Other: Any): MovieSceneEntitySystem
    }
}

external open class MovieSceneEntityInstantiatorSystem : MovieSceneEntitySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneEntityInstantiatorSystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneEntityInstantiatorSystem
        fun GetDefaultObject(): MovieSceneEntityInstantiatorSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneEntityInstantiatorSystem
        fun C(Other: UObject): MovieSceneEntityInstantiatorSystem
        fun C(Other: Any): MovieSceneEntityInstantiatorSystem
    }
}

external open class MovieScenePropertyInstantiatorSystem : MovieSceneEntityInstantiatorSystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieScenePropertyInstantiatorSystem
        fun Find(Outer: UObject, ResourceName: String): MovieScenePropertyInstantiatorSystem
        fun GetDefaultObject(): MovieScenePropertyInstantiatorSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScenePropertyInstantiatorSystem
        fun C(Other: UObject): MovieScenePropertyInstantiatorSystem
        fun C(Other: Any): MovieScenePropertyInstantiatorSystem
    }
}

external open class MovieScenePropertySystem : MovieSceneEntitySystem {
    constructor()
    constructor(Outer: UObject)
    open var InstantiatorSystem: MovieScenePropertyInstantiatorSystem

    companion object {
        fun Load(ResourceName: String): MovieScenePropertySystem
        fun Find(Outer: UObject, ResourceName: String): MovieScenePropertySystem
        fun GetDefaultObject(): MovieScenePropertySystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScenePropertySystem
        fun C(Other: UObject): MovieScenePropertySystem
        fun C(Other: Any): MovieScenePropertySystem
    }
}

external open class MovieScene2DTransformPropertySystem : MovieScenePropertySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieScene2DTransformPropertySystem
        fun Find(Outer: UObject, ResourceName: String): MovieScene2DTransformPropertySystem
        fun GetDefaultObject(): MovieScene2DTransformPropertySystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScene2DTransformPropertySystem
        fun C(Other: UObject): MovieScene2DTransformPropertySystem
        fun C(Other: Any): MovieScene2DTransformPropertySystem
    }
}

external open class MovieScene2DTransformMask {
    open var mask: Any
    open fun clone(): MovieScene2DTransformMask

    companion object {
        fun C(Other: UObject): MovieScene2DTransformMask
        fun C(Other: Any): MovieScene2DTransformMask
    }
}

external open class MovieScene2DTransformSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var TransformMask: MovieScene2DTransformMask
    open var Translation: MovieSceneFloatChannel
    open var Rotation: MovieSceneFloatChannel
    open var Scale: MovieSceneFloatChannel
    open var Shear: MovieSceneFloatChannel

    companion object {
        fun Load(ResourceName: String): MovieScene2DTransformSection
        fun Find(Outer: UObject, ResourceName: String): MovieScene2DTransformSection
        fun GetDefaultObject(): MovieScene2DTransformSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScene2DTransformSection
        fun C(Other: UObject): MovieScene2DTransformSection
        fun C(Other: Any): MovieScene2DTransformSection
    }
}

external open class MovieSceneNameableTrack : MovieSceneTrack {
    constructor()
    constructor(Outer: UObject)
    open var DisplayName: String

    companion object {
        fun Load(ResourceName: String): MovieSceneNameableTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneNameableTrack
        fun GetDefaultObject(): MovieSceneNameableTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneNameableTrack
        fun C(Other: UObject): MovieSceneNameableTrack
        fun C(Other: Any): MovieSceneNameableTrack
    }
}

external open class MovieScenePropertyBinding {
    open var PropertyName: String
    open var PropertyPath: String
    open var bCanUseClassLookup: Boolean
    open fun clone(): MovieScenePropertyBinding

    companion object {
        fun C(Other: UObject): MovieScenePropertyBinding
        fun C(Other: Any): MovieScenePropertyBinding
    }
}

external open class MovieScenePropertyTrack : MovieSceneNameableTrack {
    constructor()
    constructor(Outer: UObject)
    open var UniqueTrackName: String
    open var PropertyName: String
    open var PropertyPath: String
    open var SectionToKey: MovieSceneSection
    open var PropertyBinding: MovieScenePropertyBinding
    open var Sections: Array<MovieSceneSection>

    companion object {
        fun Load(ResourceName: String): MovieScenePropertyTrack
        fun Find(Outer: UObject, ResourceName: String): MovieScenePropertyTrack
        fun GetDefaultObject(): MovieScenePropertyTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScenePropertyTrack
        fun C(Other: UObject): MovieScenePropertyTrack
        fun C(Other: Any): MovieScenePropertyTrack
    }
}

external open class MovieScene2DTransformTrack : MovieScenePropertyTrack {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieScene2DTransformTrack
        fun Find(Outer: UObject, ResourceName: String): MovieScene2DTransformTrack
        fun GetDefaultObject(): MovieScene2DTransformTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScene2DTransformTrack
        fun C(Other: UObject): MovieScene2DTransformTrack
        fun C(Other: Any): MovieScene2DTransformTrack
    }
}

external open class MovieSceneMarginPropertySystem : MovieScenePropertySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneMarginPropertySystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneMarginPropertySystem
        fun GetDefaultObject(): MovieSceneMarginPropertySystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneMarginPropertySystem
        fun C(Other: UObject): MovieSceneMarginPropertySystem
        fun C(Other: Any): MovieSceneMarginPropertySystem
    }
}

external open class MovieSceneMarginSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var TopCurve: MovieSceneFloatChannel
    open var LeftCurve: MovieSceneFloatChannel
    open var RightCurve: MovieSceneFloatChannel
    open var BottomCurve: MovieSceneFloatChannel

    companion object {
        fun Load(ResourceName: String): MovieSceneMarginSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneMarginSection
        fun GetDefaultObject(): MovieSceneMarginSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneMarginSection
        fun C(Other: UObject): MovieSceneMarginSection
        fun C(Other: Any): MovieSceneMarginSection
    }
}

external open class MovieSceneMarginTrack : MovieScenePropertyTrack {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneMarginTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneMarginTrack
        fun GetDefaultObject(): MovieSceneMarginTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneMarginTrack
        fun C(Other: UObject): MovieSceneMarginTrack
        fun C(Other: Any): MovieSceneMarginTrack
    }
}

external open class MovieSceneMaterialTrack : MovieSceneNameableTrack {
    constructor()
    constructor(Outer: UObject)
    open var Sections: Array<MovieSceneSection>

    companion object {
        fun Load(ResourceName: String): MovieSceneMaterialTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneMaterialTrack
        fun GetDefaultObject(): MovieSceneMaterialTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneMaterialTrack
        fun C(Other: UObject): MovieSceneMaterialTrack
        fun C(Other: Any): MovieSceneMaterialTrack
    }
}

external open class MovieSceneWidgetMaterialTrack : MovieSceneMaterialTrack {
    constructor()
    constructor(Outer: UObject)
    open var BrushPropertyNamePath: Array<String>
    open var TrackName: String

    companion object {
        fun Load(ResourceName: String): MovieSceneWidgetMaterialTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneWidgetMaterialTrack
        fun GetDefaultObject(): MovieSceneWidgetMaterialTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneWidgetMaterialTrack
        fun C(Other: UObject): MovieSceneWidgetMaterialTrack
        fun C(Other: Any): MovieSceneWidgetMaterialTrack
    }
}

external object ETextWrappingPolicy {
    var DefaultWrapping: String /* "DefaultWrapping" */
    var AllowPerCharacterWrapping: String /* "AllowPerCharacterWrapping" */
    var ETextWrappingPolicy_MAX: String /* "ETextWrappingPolicy_MAX" */
}

external open class TextLayoutWidget : Widget {
    constructor()
    constructor(Outer: UObject)
    open var ShapedTextOptions: ShapedTextOptions
    open var Justification: String /* "Left" | "Center" | "Right" | "ETextJustify_MAX" */
    open var WrappingPolicy: String /* "DefaultWrapping" | "AllowPerCharacterWrapping" | "ETextWrappingPolicy_MAX" */
    open var AutoWrapText: Boolean
    open var WrapTextAt: Number
    open var Margin: Margin
    open var LineHeightPercentage: Number
    open fun SetJustification(InJustification: String /* "Left" | "Center" | "Right" | "ETextJustify_MAX" */)

    companion object {
        fun Load(ResourceName: String): TextLayoutWidget
        fun Find(Outer: UObject, ResourceName: String): TextLayoutWidget
        fun GetDefaultObject(): TextLayoutWidget
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextLayoutWidget
        fun C(Other: UObject): TextLayoutWidget
        fun C(Other: Any): TextLayoutWidget
    }
}

external open class MultiLineEditableText : TextLayoutWidget {
    constructor()
    constructor(Outer: UObject)
    open var text: String
    open var HintText: String
    open var HintTextDelegate: UnrealEngineDelegate<() -> String>
    open var WidgetStyle: TextBlockStyle
    open var bIsReadOnly: Boolean
    open var Font: SlateFontInfo
    open var SelectAllTextWhenFocused: Boolean
    open var ClearTextSelectionOnFocusLoss: Boolean
    open var RevertTextOnEscape: Boolean
    open var ClearKeyboardFocusOnCommit: Boolean
    open var AllowContextMenu: Boolean
    open var VirtualKeyboardOptions: VirtualKeyboardOptions
    open var VirtualKeyboardDismissAction: String /* "TextChangeOnDismiss" | "TextCommitOnAccept" | "TextCommitOnDismiss" | "EVirtualKeyboardDismissAction_MAX" */
    open var OnTextChanged: UnrealEngineMulticastDelegate<(text: String) -> Unit>
    open var OnTextCommitted: UnrealEngineMulticastDelegate<(text: String, CommitMethod: String /* "Default" | "OnEnter" | "OnUserMovedFocus" | "OnCleared" | "ETextCommit_MAX" */) -> Unit>
    open fun SetWidgetStyle(InWidgetStyle: TextBlockStyle)
    open fun SetText(InText: String)
    open fun SetIsReadOnly(bReadOnly: Boolean)
    open fun SetHintText(InHintText: String)
    open fun GetText(): String
    open fun GetHintText(): String

    companion object {
        fun Load(ResourceName: String): MultiLineEditableText
        fun Find(Outer: UObject, ResourceName: String): MultiLineEditableText
        fun GetDefaultObject(): MultiLineEditableText
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MultiLineEditableText
        fun C(Other: UObject): MultiLineEditableText
        fun C(Other: Any): MultiLineEditableText
    }
}

external open class MultiLineEditableTextBox : TextLayoutWidget {
    constructor()
    constructor(Outer: UObject)
    open var text: String
    open var HintText: String
    open var HintTextDelegate: UnrealEngineDelegate<() -> String>
    open var WidgetStyle: EditableTextBoxStyle
    open var TextStyle: TextBlockStyle
    open var bIsReadOnly: Boolean
    open var AllowContextMenu: Boolean
    open var VirtualKeyboardOptions: VirtualKeyboardOptions
    open var VirtualKeyboardDismissAction: String /* "TextChangeOnDismiss" | "TextCommitOnAccept" | "TextCommitOnDismiss" | "EVirtualKeyboardDismissAction_MAX" */
    open var Style: SlateWidgetStyleAsset
    open var Font: SlateFontInfo
    open var ForegroundColor: LinearColor
    open var BackgroundColor: LinearColor
    open var ReadOnlyForegroundColor: LinearColor
    open var OnTextChanged: UnrealEngineMulticastDelegate<(text: String) -> Unit>
    open var OnTextCommitted: UnrealEngineMulticastDelegate<(text: String, CommitMethod: String /* "Default" | "OnEnter" | "OnUserMovedFocus" | "OnCleared" | "ETextCommit_MAX" */) -> Unit>
    open fun SetTextStyle(InTextStyle: TextBlockStyle)
    open fun SetText(InText: String)
    open fun SetIsReadOnly(bReadOnly: Boolean)
    open fun SetHintText(InHintText: String)
    open fun SetError(InError: String)
    open fun GetText(): String
    open fun GetHintText(): String

    companion object {
        fun Load(ResourceName: String): MultiLineEditableTextBox
        fun Find(Outer: UObject, ResourceName: String): MultiLineEditableTextBox
        fun GetDefaultObject(): MultiLineEditableTextBox
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MultiLineEditableTextBox
        fun C(Other: UObject): MultiLineEditableTextBox
        fun C(Other: Any): MultiLineEditableTextBox
    }
}

external open class NamedSlot : ContentWidget {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NamedSlot
        fun Find(Outer: UObject, ResourceName: String): NamedSlot
        fun GetDefaultObject(): NamedSlot
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NamedSlot
        fun C(Other: UObject): NamedSlot
        fun C(Other: Any): NamedSlot
    }
}

external open class NamedSlotInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NamedSlotInterface
        fun Find(Outer: UObject, ResourceName: String): NamedSlotInterface
        fun GetDefaultObject(): NamedSlotInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NamedSlotInterface
        fun C(Other: UObject): NamedSlotInterface
        fun C(Other: Any): NamedSlotInterface
    }
}

external open class NativeWidgetHost : Widget {
    constructor()
    constructor(Outer: UObject)
    open fun SetContent(SlateWidget: JavascriptSlateWidget): Widget

    companion object {
        fun Load(ResourceName: String): NativeWidgetHost
        fun Find(Outer: UObject, ResourceName: String): NativeWidgetHost
        fun GetDefaultObject(): NativeWidgetHost
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NativeWidgetHost
        fun C(Other: UObject): NativeWidgetHost
        fun C(Other: Any): NativeWidgetHost
        fun SetContent(TargetWidget: NativeWidgetHost, SlateWidget: JavascriptSlateWidget): Widget
    }
}

external open class Overlay : PanelWidget {
    constructor()
    constructor(Outer: UObject)
    open fun AddChildToOverlay(Content: Widget): OverlaySlot

    companion object {
        fun Load(ResourceName: String): Overlay
        fun Find(Outer: UObject, ResourceName: String): Overlay
        fun GetDefaultObject(): Overlay
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Overlay
        fun C(Other: UObject): Overlay
        fun C(Other: Any): Overlay
    }
}

external object EProgressBarFillType {
    var LeftToRight: String /* "LeftToRight" */
    var RightToLeft: String /* "RightToLeft" */
    var FillFromCenter: String /* "FillFromCenter" */
    var TopToBottom: String /* "TopToBottom" */
    var BottomToTop: String /* "BottomToTop" */
    var EProgressBarFillType_MAX: String /* "EProgressBarFillType_MAX" */
}

external open class ProgressBar : Widget {
    constructor()
    constructor(Outer: UObject)
    open var WidgetStyle: ProgressBarStyle
    open var Style: SlateWidgetStyleAsset
    open var BackgroundImage: SlateBrushAsset
    open var FillImage: SlateBrushAsset
    open var MarqueeImage: SlateBrushAsset
    open var Percent: Number
    open var BarFillType: String /* "LeftToRight" | "RightToLeft" | "FillFromCenter" | "TopToBottom" | "BottomToTop" | "EProgressBarFillType_MAX" */
    open var bIsMarquee: Boolean
    open var BorderPadding: Vector2D
    open var PercentDelegate: UnrealEngineDelegate<() -> Number>
    open var FillColorAndOpacity: LinearColor
    open var FillColorAndOpacityDelegate: UnrealEngineDelegate<() -> LinearColor>
    open fun SetPercent(InPercent: Number)
    open fun SetIsMarquee(InbIsMarquee: Boolean)
    open fun SetFillColorAndOpacity(InColor: LinearColor)

    companion object {
        fun Load(ResourceName: String): ProgressBar
        fun Find(Outer: UObject, ResourceName: String): ProgressBar
        fun GetDefaultObject(): ProgressBar
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ProgressBar
        fun C(Other: UObject): ProgressBar
        fun C(Other: Any): ProgressBar
    }
}

external open class RetainerBox : ContentWidget {
    constructor()
    constructor(Outer: UObject)
    open var bRetainRender: Boolean
    open var RenderOnInvalidation: Boolean
    open var RenderOnPhase: Boolean
    open var Phase: Number
    open var PhaseCount: Number
    open var EffectMaterial: MaterialInterface
    open var TextureParameter: String
    open fun SetTextureParameter(TextureParameter: String)
    open fun SetRetainRendering(bInRetainRendering: Boolean)
    open fun SetRenderingPhase(RenderPhase: Number, TotalPhases: Number)
    open fun SetEffectMaterial(EffectMaterial: MaterialInterface)
    open fun RequestRender()
    open fun GetEffectMaterial(): MaterialInstanceDynamic

    companion object {
        fun Load(ResourceName: String): RetainerBox
        fun Find(Outer: UObject, ResourceName: String): RetainerBox
        fun GetDefaultObject(): RetainerBox
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RetainerBox
        fun C(Other: UObject): RetainerBox
        fun C(Other: Any): RetainerBox
    }
}

external open class RichTextBlockDecorator : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): RichTextBlockDecorator
        fun Find(Outer: UObject, ResourceName: String): RichTextBlockDecorator
        fun GetDefaultObject(): RichTextBlockDecorator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RichTextBlockDecorator
        fun C(Other: UObject): RichTextBlockDecorator
        fun C(Other: Any): RichTextBlockDecorator
    }
}

external object ETextTransformPolicy {
    var None: String /* "None" */
    var ToLower: String /* "ToLower" */
    var ToUpper: String /* "ToUpper" */
    var ETextTransformPolicy_MAX: String /* "ETextTransformPolicy_MAX" */
}

external interface `T$609` {
    var InStrikeBrush: SlateBrush
}

external open class RichTextBlock : TextLayoutWidget {
    constructor()
    constructor(Outer: UObject)
    open var text: String
    open var TextStyleSet: DataTable
    open var DecoratorClasses: Array<UnrealEngineClass>
    open var bOverrideDefaultStyle: Boolean
    open var DefaultTextStyleOverride: TextBlockStyle
    open var MinDesiredWidth: Number
    open var TextTransformPolicy: String /* "None" | "ToLower" | "ToUpper" | "ETextTransformPolicy_MAX" */
    open var DefaultTextStyle: TextBlockStyle
    open var InstanceDecorators: Array<RichTextBlockDecorator>
    open fun SetTextTransformPolicy(InTransformPolicy: String /* "None" | "ToLower" | "ToUpper" | "ETextTransformPolicy_MAX" */)
    open fun SetTextStyleSet(NewTextStyleSet: DataTable)
    open fun SetText(InText: String)
    open fun SetMinDesiredWidth(InMinDesiredWidth: Number)
    open fun SetDefaultTextStyle(InDefaultTextStyle: TextBlockStyle)
    open fun SetDefaultStrikeBrush(InStrikeBrush: SlateBrush = definedExternally): `T$609`
    open fun SetDefaultShadowOffset(InShadowOffset: Vector2D)
    open fun SetDefaultShadowColorAndOpacity(InShadowColorAndOpacity: LinearColor)
    open fun SetDefaultFont(InFontInfo: SlateFontInfo)
    open fun SetDefaultColorAndOpacity(InColorAndOpacity: SlateColor)
    open fun SetAutoWrapText(InAutoTextWrap: Boolean)
    open fun GetText(): String
    open fun GetDecoratorByClass(DecoratorClass: UnrealEngineClass): RichTextBlockDecorator
    open fun ClearAllDefaultStyleOverrides()

    companion object {
        fun Load(ResourceName: String): RichTextBlock
        fun Find(Outer: UObject, ResourceName: String): RichTextBlock
        fun GetDefaultObject(): RichTextBlock
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RichTextBlock
        fun C(Other: UObject): RichTextBlock
        fun C(Other: Any): RichTextBlock
    }
}

external open class RichTextBlockImageDecorator : RichTextBlockDecorator {
    constructor()
    constructor(Outer: UObject)
    open var ImageSet: DataTable

    companion object {
        fun Load(ResourceName: String): RichTextBlockImageDecorator
        fun Find(Outer: UObject, ResourceName: String): RichTextBlockImageDecorator
        fun GetDefaultObject(): RichTextBlockImageDecorator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RichTextBlockImageDecorator
        fun C(Other: UObject): RichTextBlockImageDecorator
        fun C(Other: Any): RichTextBlockImageDecorator
    }
}

external open class SafeZone : ContentWidget {
    constructor()
    constructor(Outer: UObject)
    open var PadLeft: Boolean
    open var PadRight: Boolean
    open var PadTop: Boolean
    open var PadBottom: Boolean
    open fun SetSidesToPad(InPadLeft: Boolean, InPadRight: Boolean, InPadTop: Boolean, InPadBottom: Boolean)

    companion object {
        fun Load(ResourceName: String): SafeZone
        fun Find(Outer: UObject, ResourceName: String): SafeZone
        fun GetDefaultObject(): SafeZone
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SafeZone
        fun C(Other: UObject): SafeZone
        fun C(Other: Any): SafeZone
    }
}

external object EStretch {
    var None: String /* "None" */
    var Fill: String /* "Fill" */
    var ScaleToFit: String /* "ScaleToFit" */
    var ScaleToFitX: String /* "ScaleToFitX" */
    var ScaleToFitY: String /* "ScaleToFitY" */
    var ScaleToFill: String /* "ScaleToFill" */
    var ScaleBySafeZone: String /* "ScaleBySafeZone" */
    var UserSpecified: String /* "UserSpecified" */
    var EStretch_MAX: String /* "EStretch_MAX" */
}

external object EStretchDirection {
    var Both: String /* "Both" */
    var DownOnly: String /* "DownOnly" */
    var UpOnly: String /* "UpOnly" */
    var EStretchDirection_MAX: String /* "EStretchDirection_MAX" */
}

external open class ScaleBox : ContentWidget {
    constructor()
    constructor(Outer: UObject)
    open var Stretch: String /* "None" | "Fill" | "ScaleToFit" | "ScaleToFitX" | "ScaleToFitY" | "ScaleToFill" | "ScaleBySafeZone" | "UserSpecified" | "EStretch_MAX" */
    open var StretchDirection: String /* "Both" | "DownOnly" | "UpOnly" | "EStretchDirection_MAX" */
    open var UserSpecifiedScale: Number
    open var IgnoreInheritedScale: Boolean
    open fun SetUserSpecifiedScale(InUserSpecifiedScale: Number)
    open fun SetStretchDirection(InStretchDirection: String /* "Both" | "DownOnly" | "UpOnly" | "EStretchDirection_MAX" */)
    open fun SetStretch(InStretch: String /* "None" | "Fill" | "ScaleToFit" | "ScaleToFitX" | "ScaleToFitY" | "ScaleToFill" | "ScaleBySafeZone" | "UserSpecified" | "EStretch_MAX" */)
    open fun SetIgnoreInheritedScale(bInIgnoreInheritedScale: Boolean)

    companion object {
        fun Load(ResourceName: String): ScaleBox
        fun Find(Outer: UObject, ResourceName: String): ScaleBox
        fun GetDefaultObject(): ScaleBox
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ScaleBox
        fun C(Other: UObject): ScaleBox
        fun C(Other: Any): ScaleBox
    }
}

external open class ScrollBar : Widget {
    constructor()
    constructor(Outer: UObject)
    open var WidgetStyle: ScrollBarStyle
    open var Style: SlateWidgetStyleAsset
    open var bAlwaysShowScrollbar: Boolean
    open var bAlwaysShowScrollbarTrack: Boolean
    open var Orientation: String /* "Orient_Horizontal" | "Orient_Vertical" | "Orient_MAX" */
    open var Thickness: Vector2D
    open var Padding: Margin
    open fun SetState(InOffsetFraction: Number, InThumbSizeFraction: Number)

    companion object {
        fun Load(ResourceName: String): ScrollBar
        fun Find(Outer: UObject, ResourceName: String): ScrollBar
        fun GetDefaultObject(): ScrollBar
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ScrollBar
        fun C(Other: UObject): ScrollBar
        fun C(Other: Any): ScrollBar
    }
}

external object EDescendantScrollDestination {
    var IntoView: String /* "IntoView" */
    var TopOrLeft: String /* "TopOrLeft" */
    var Center: String /* "Center" */
    var BottomOrRight: String /* "BottomOrRight" */
    var EDescendantScrollDestination_MAX: String /* "EDescendantScrollDestination_MAX" */
}

external object EScrollWhenFocusChanges {
    var NoScroll: String /* "NoScroll" */
    var InstantScroll: String /* "InstantScroll" */
    var AnimatedScroll: String /* "AnimatedScroll" */
    var EScrollWhenFocusChanges_MAX: String /* "EScrollWhenFocusChanges_MAX" */
}

external open class ScrollBox : PanelWidget {
    constructor()
    constructor(Outer: UObject)
    open var WidgetStyle: ScrollBoxStyle
    open var WidgetBarStyle: ScrollBarStyle
    open var Style: SlateWidgetStyleAsset
    open var BarStyle: SlateWidgetStyleAsset
    open var Orientation: String /* "Orient_Horizontal" | "Orient_Vertical" | "Orient_MAX" */
    open var ScrollBarVisibility: String /* "Visible" | "Collapsed" | "Hidden" | "HitTestInvisible" | "SelfHitTestInvisible" | "ESlateVisibility_MAX" */
    open var ConsumeMouseWheel: String /* "WhenScrollingPossible" | "Always" | "Never" | "EConsumeMouseWheel_MAX" */
    open var ScrollbarThickness: Vector2D
    open var ScrollbarPadding: Margin
    open var AlwaysShowScrollbar: Boolean
    open var AlwaysShowScrollbarTrack: Boolean
    open var AllowOverscroll: Boolean
    open var bAnimateWheelScrolling: Boolean
    open var NavigationDestination: String /* "IntoView" | "TopOrLeft" | "Center" | "BottomOrRight" | "EDescendantScrollDestination_MAX" */
    open var NavigationScrollPadding: Number
    open var ScrollWhenFocusChanges: String /* "NoScroll" | "InstantScroll" | "AnimatedScroll" | "EScrollWhenFocusChanges_MAX" */
    open var bAllowRightClickDragScrolling: Boolean
    open var WheelScrollMultiplier: Number
    open var OnUserScrolled: UnrealEngineMulticastDelegate<(CurrentOffset: Number) -> Unit>
    open fun SetWheelScrollMultiplier(NewWheelScrollMultiplier: Number)
    open fun SetScrollWhenFocusChanges(NewScrollWhenFocusChanges: String /* "NoScroll" | "InstantScroll" | "AnimatedScroll" | "EScrollWhenFocusChanges_MAX" */)
    open fun SetScrollOffset(NewScrollOffset: Number)
    open fun SetScrollBarVisibility(NewScrollBarVisibility: String /* "Visible" | "Collapsed" | "Hidden" | "HitTestInvisible" | "SelfHitTestInvisible" | "ESlateVisibility_MAX" */)
    open fun SetScrollbarThickness(NewScrollbarThickness: Vector2D)
    open fun SetScrollbarPadding(NewScrollbarPadding: Margin)
    open fun SetOrientation(NewOrientation: String /* "Orient_Horizontal" | "Orient_Vertical" | "Orient_MAX" */)
    open fun SetConsumeMouseWheel(NewConsumeMouseWheel: String /* "WhenScrollingPossible" | "Always" | "Never" | "EConsumeMouseWheel_MAX" */)
    open fun SetAnimateWheelScrolling(bShouldAnimateWheelScrolling: Boolean)
    open fun SetAlwaysShowScrollbar(NewAlwaysShowScrollbar: Boolean)
    open fun SetAllowOverscroll(NewAllowOverscroll: Boolean)
    open fun ScrollWidgetIntoView(WidgetToFind: Widget, AnimateScroll: Boolean, ScrollDestination: String /* "IntoView" | "TopOrLeft" | "Center" | "BottomOrRight" | "EDescendantScrollDestination_MAX" */, Padding: Number)
    open fun ScrollToStart()
    open fun ScrollToEnd()
    open fun GetViewOffsetFraction(): Number
    open fun GetScrollOffsetOfEnd(): Number
    open fun GetScrollOffset(): Number
    open fun EndInertialScrolling()

    companion object {
        fun Load(ResourceName: String): ScrollBox
        fun Find(Outer: UObject, ResourceName: String): ScrollBox
        fun GetDefaultObject(): ScrollBox
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ScrollBox
        fun C(Other: UObject): ScrollBox
        fun C(Other: Any): ScrollBox
    }
}

external open class SizeBox : ContentWidget {
    constructor()
    constructor(Outer: UObject)
    open var WidthOverride: Number
    open var HeightOverride: Number
    open var MinDesiredWidth: Number
    open var MinDesiredHeight: Number
    open var MaxDesiredWidth: Number
    open var MaxDesiredHeight: Number
    open var MinAspectRatio: Number
    open var MaxAspectRatio: Number
    open var bOverride_WidthOverride: Boolean
    open var bOverride_HeightOverride: Boolean
    open var bOverride_MinDesiredWidth: Boolean
    open var bOverride_MinDesiredHeight: Boolean
    open var bOverride_MaxDesiredWidth: Boolean
    open var bOverride_MaxDesiredHeight: Boolean
    open var bOverride_MinAspectRatio: Boolean
    open var bOverride_MaxAspectRatio: Boolean
    open fun SetWidthOverride(InWidthOverride: Number)
    open fun SetMinDesiredWidth(InMinDesiredWidth: Number)
    open fun SetMinDesiredHeight(InMinDesiredHeight: Number)
    open fun SetMinAspectRatio(InMinAspectRatio: Number)
    open fun SetMaxDesiredWidth(InMaxDesiredWidth: Number)
    open fun SetMaxDesiredHeight(InMaxDesiredHeight: Number)
    open fun SetMaxAspectRatio(InMaxAspectRatio: Number)
    open fun SetHeightOverride(InHeightOverride: Number)
    open fun ClearWidthOverride()
    open fun ClearMinDesiredWidth()
    open fun ClearMinDesiredHeight()
    open fun ClearMinAspectRatio()
    open fun ClearMaxDesiredWidth()
    open fun ClearMaxDesiredHeight()
    open fun ClearMaxAspectRatio()
    open fun ClearHeightOverride()

    companion object {
        fun Load(ResourceName: String): SizeBox
        fun Find(Outer: UObject, ResourceName: String): SizeBox
        fun GetDefaultObject(): SizeBox
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SizeBox
        fun C(Other: UObject): SizeBox
        fun C(Other: Any): SizeBox
    }
}

external open class SlateBlueprintLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SlateBlueprintLibrary
        fun Find(Outer: UObject, ResourceName: String): SlateBlueprintLibrary
        fun GetDefaultObject(): SlateBlueprintLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SlateBlueprintLibrary
        fun TransformVectorLocalToAbsolute(Geometry: Geometry, LocalVector: Vector2D): Vector2D
        fun TransformVectorAbsoluteToLocal(Geometry: Geometry, AbsoluteVector: Vector2D): Vector2D
        fun TransformScalarLocalToAbsolute(Geometry: Geometry, LocalScalar: Number): Number
        fun TransformScalarAbsoluteToLocal(Geometry: Geometry, AbsoluteScalar: Number): Number
        fun ScreenToWidgetLocal(WorldContextObject: UObject, Geometry: Geometry, ScreenPosition: Vector2D, LocalCoordinate: Vector2D = definedExternally, bIncludeWindowPosition: Boolean = definedExternally): `T$329`
        fun ScreenToWidgetAbsolute(WorldContextObject: UObject, ScreenPosition: Vector2D, AbsoluteCoordinate: Vector2D = definedExternally, bIncludeWindowPosition: Boolean = definedExternally): `T$328`
        fun ScreenToViewport(WorldContextObject: UObject, ScreenPosition: Vector2D, ViewportPosition: Vector2D = definedExternally): `T$327`
        fun LocalToViewport(WorldContextObject: UObject, Geometry: Geometry, LocalCoordinate: Vector2D, PixelPosition: Vector2D = definedExternally, ViewportPosition: Vector2D = definedExternally): `T$326`
        fun LocalToAbsolute(Geometry: Geometry, LocalCoordinate: Vector2D): Vector2D
        fun IsUnderLocation(Geometry: Geometry, AbsoluteCoordinate: Vector2D): Boolean
        fun GetLocalTopLeft(Geometry: Geometry): Vector2D
        fun GetLocalSize(Geometry: Geometry): Vector2D
        fun GetAbsoluteSize(Geometry: Geometry): Vector2D
        fun EqualEqual_SlateBrush(A: SlateBrush, B: SlateBrush): Boolean
        fun AbsoluteToViewport(WorldContextObject: UObject, AbsoluteDesktopCoordinate: Vector2D, PixelPosition: Vector2D = definedExternally, ViewportPosition: Vector2D = definedExternally): `T$326`
        fun AbsoluteToLocal(Geometry: Geometry, AbsoluteCoordinate: Vector2D): Vector2D
        fun C(Other: UObject): SlateBlueprintLibrary
        fun C(Other: Any): SlateBlueprintLibrary
    }
}

external open class SlateMeshVertex {
    open var Position: Vector2D
    open var Color: Color
    open var UV0: Vector2D
    open var UV1: Vector2D
    open var UV2: Vector2D
    open var UV3: Vector2D
    open var UV4: Vector2D
    open var UV5: Vector2D
    open fun clone(): SlateMeshVertex

    companion object {
        fun C(Other: UObject): SlateMeshVertex
        fun C(Other: Any): SlateMeshVertex
    }
}

external open class SlateVectorArtData : UObject {
    constructor()
    constructor(Outer: UObject)
    open var MeshAsset: StaticMesh
    open var SourceMaterial: MaterialInterface
    open var VertexData: Array<SlateMeshVertex>
    open var IndexData: Array<Any>
    open var Material: MaterialInterface
    open var ExtentMin: Vector2D
    open var ExtentMax: Vector2D

    companion object {
        fun Load(ResourceName: String): SlateVectorArtData
        fun Find(Outer: UObject, ResourceName: String): SlateVectorArtData
        fun GetDefaultObject(): SlateVectorArtData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SlateVectorArtData
        fun C(Other: UObject): SlateVectorArtData
        fun C(Other: Any): SlateVectorArtData
    }
}

external open class SliderStyle : SlateWidgetStyle {
    open var NormalBarImage: SlateBrush
    open var HoveredBarImage: SlateBrush
    open var DisabledBarImage: SlateBrush
    open var NormalThumbImage: SlateBrush
    open var HoveredThumbImage: SlateBrush
    open var DisabledThumbImage: SlateBrush
    open var BarThickness: Number
    override fun clone(): SliderStyle

    companion object {
        fun C(Other: UObject): SliderStyle
        fun C(Other: Any): SliderStyle
    }
}

external open class Slider : Widget {
    constructor()
    constructor(Outer: UObject)
    open var Value: Number
    open var ValueDelegate: UnrealEngineDelegate<() -> Number>
    open var MinValue: Number
    open var MaxValue: Number
    open var WidgetStyle: SliderStyle
    open var Orientation: String /* "Orient_Horizontal" | "Orient_Vertical" | "Orient_MAX" */
    open var SliderBarColor: LinearColor
    open var SliderHandleColor: LinearColor
    open var IndentHandle: Boolean
    open var Locked: Boolean
    open var MouseUsesStep: Boolean
    open var RequiresControllerLock: Boolean
    open var StepSize: Number
    open var IsFocusable: Boolean
    open var OnMouseCaptureBegin: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnMouseCaptureEnd: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnControllerCaptureBegin: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnControllerCaptureEnd: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnValueChanged: UnrealEngineMulticastDelegate<(Value: Number) -> Unit>
    open fun SetValue(InValue: Number)
    open fun SetStepSize(InValue: Number)
    open fun SetSliderHandleColor(InValue: LinearColor)
    open fun SetSliderBarColor(InValue: LinearColor)
    open fun SetMinValue(InValue: Number)
    open fun SetMaxValue(InValue: Number)
    open fun SetLocked(InValue: Boolean)
    open fun SetIndentHandle(InValue: Boolean)
    open fun GetValue(): Number
    open fun GetNormalizedValue(): Number

    companion object {
        fun Load(ResourceName: String): Slider
        fun Find(Outer: UObject, ResourceName: String): Slider
        fun GetDefaultObject(): Slider
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Slider
        fun C(Other: UObject): Slider
        fun C(Other: Any): Slider
    }
}

external open class Spacer : Widget {
    constructor()
    constructor(Outer: UObject)
    open var Size: Vector2D
    open fun SetSize(InSize: Vector2D)

    companion object {
        fun Load(ResourceName: String): Spacer
        fun Find(Outer: UObject, ResourceName: String): Spacer
        fun GetDefaultObject(): Spacer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Spacer
        fun C(Other: UObject): Spacer
        fun C(Other: Any): Spacer
    }
}

external open class SpinBox : Widget {
    constructor()
    constructor(Outer: UObject)
    open var Value: Number
    open var ValueDelegate: UnrealEngineDelegate<() -> Number>
    open var WidgetStyle: SpinBoxStyle
    open var Style: SlateWidgetStyleAsset
    open var MinFractionalDigits: Number
    open var MaxFractionalDigits: Number
    open var bAlwaysUsesDeltaSnap: Boolean
    open var Delta: Number
    open var SliderExponent: Number
    open var Font: SlateFontInfo
    open var Justification: String /* "Left" | "Center" | "Right" | "ETextJustify_MAX" */
    open var MinDesiredWidth: Number
    open var ClearKeyboardFocusOnCommit: Boolean
    open var SelectAllTextOnCommit: Boolean
    open var ForegroundColor: SlateColor
    open var OnValueChanged: UnrealEngineMulticastDelegate<(InValue: Number) -> Unit>
    open var OnValueCommitted: UnrealEngineMulticastDelegate<(InValue: Number, CommitMethod: String /* "Default" | "OnEnter" | "OnUserMovedFocus" | "OnCleared" | "ETextCommit_MAX" */) -> Unit>
    open var OnBeginSliderMovement: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnEndSliderMovement: UnrealEngineMulticastDelegate<(InValue: Number) -> Unit>
    open var bOverride_MinValue: Boolean
    open var bOverride_MaxValue: Boolean
    open var bOverride_MinSliderValue: Boolean
    open var bOverride_MaxSliderValue: Boolean
    open var MinValue: Number
    open var MaxValue: Number
    open var MinSliderValue: Number
    open var MaxSliderValue: Number
    open fun SetValue(NewValue: Number)
    open fun SetMinValue(NewValue: Number)
    open fun SetMinSliderValue(NewValue: Number)
    open fun SetMinFractionalDigits(NewValue: Number)
    open fun SetMaxValue(NewValue: Number)
    open fun SetMaxSliderValue(NewValue: Number)
    open fun SetMaxFractionalDigits(NewValue: Number)
    open fun SetForegroundColor(InForegroundColor: SlateColor)
    open fun SetDelta(NewValue: Number)
    open fun SetAlwaysUsesDeltaSnap(bNewValue: Boolean)
    open fun GetValue(): Number
    open fun GetMinValue(): Number
    open fun GetMinSliderValue(): Number
    open fun GetMinFractionalDigits(): Number
    open fun GetMaxValue(): Number
    open fun GetMaxSliderValue(): Number
    open fun GetMaxFractionalDigits(): Number
    open fun GetDelta(): Number
    open fun GetAlwaysUsesDeltaSnap(): Boolean
    open fun ClearMinValue()
    open fun ClearMinSliderValue()
    open fun ClearMaxValue()
    open fun ClearMaxSliderValue()

    companion object {
        fun Load(ResourceName: String): SpinBox
        fun Find(Outer: UObject, ResourceName: String): SpinBox
        fun GetDefaultObject(): SpinBox
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SpinBox
        fun C(Other: UObject): SpinBox
        fun C(Other: Any): SpinBox
    }
}

external open class TextBinding : PropertyBinding {
    constructor()
    constructor(Outer: UObject)
    open fun GetTextValue(): String
    open fun GetStringValue(): String

    companion object {
        fun Load(ResourceName: String): TextBinding
        fun Find(Outer: UObject, ResourceName: String): TextBinding
        fun GetDefaultObject(): TextBinding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextBinding
        fun C(Other: UObject): TextBinding
        fun C(Other: Any): TextBinding
    }
}

external open class TextBlock : TextLayoutWidget {
    constructor()
    constructor(Outer: UObject)
    open var text: String
    open var TextDelegate: UnrealEngineDelegate<() -> String>
    open var ColorAndOpacity: SlateColor
    open var ColorAndOpacityDelegate: UnrealEngineDelegate<() -> SlateColor>
    open var Font: SlateFontInfo
    open var StrikeBrush: SlateBrush
    open var ShadowOffset: Vector2D
    open var ShadowColorAndOpacity: LinearColor
    open var ShadowColorAndOpacityDelegate: UnrealEngineDelegate<() -> LinearColor>
    open var MinDesiredWidth: Number
    open var bWrapWithInvalidationPanel: Boolean
    open var bAutoWrapText: Boolean
    open var TextTransformPolicy: String /* "None" | "ToLower" | "ToUpper" | "ETextTransformPolicy_MAX" */
    open var bSimpleTextMode: Boolean
    open fun SetTextTransformPolicy(InTransformPolicy: String /* "None" | "ToLower" | "ToUpper" | "ETextTransformPolicy_MAX" */)
    open fun SetText(InText: String)
    open fun SetStrikeBrush(InStrikeBrush: SlateBrush)
    open fun SetShadowOffset(InShadowOffset: Vector2D)
    open fun SetShadowColorAndOpacity(InShadowColorAndOpacity: LinearColor)
    open fun SetOpacity(InOpacity: Number)
    open fun SetMinDesiredWidth(InMinDesiredWidth: Number)
    open fun SetFont(InFontInfo: SlateFontInfo)
    open fun SetColorAndOpacity(InColorAndOpacity: SlateColor)
    open fun SetAutoWrapText(InAutoTextWrap: Boolean)
    open fun GetText(): String
    open fun GetDynamicOutlineMaterial(): MaterialInstanceDynamic
    open fun GetDynamicFontMaterial(): MaterialInstanceDynamic

    companion object {
        fun Load(ResourceName: String): TextBlock
        fun Find(Outer: UObject, ResourceName: String): TextBlock
        fun GetDefaultObject(): TextBlock
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextBlock
        fun C(Other: UObject): TextBlock
        fun C(Other: Any): TextBlock
    }
}

external open class Throbber : Widget {
    constructor()
    constructor(Outer: UObject)
    open var NumberOfPieces: Number
    open var bAnimateHorizontally: Boolean
    open var bAnimateVertically: Boolean
    open var bAnimateOpacity: Boolean
    open var PieceImage: SlateBrushAsset
    open var UImage: SlateBrush
    open fun SetNumberOfPieces(InNumberOfPieces: Number)
    open fun SetAnimateVertically(bInAnimateVertically: Boolean)
    open fun SetAnimateOpacity(bInAnimateOpacity: Boolean)
    open fun SetAnimateHorizontally(bInAnimateHorizontally: Boolean)

    companion object {
        fun Load(ResourceName: String): Throbber
        fun Find(Outer: UObject, ResourceName: String): Throbber
        fun GetDefaultObject(): Throbber
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Throbber
        fun C(Other: UObject): Throbber
        fun C(Other: Any): Throbber
    }
}

external object EListItemAlignment {
    var EvenlyDistributed: String /* "EvenlyDistributed" */
    var EvenlySize: String /* "EvenlySize" */
    var EvenlyWide: String /* "EvenlyWide" */
    var LeftAligned: String /* "LeftAligned" */
    var RightAligned: String /* "RightAligned" */
    var CenterAligned: String /* "CenterAligned" */
    var Fill: String /* "Fill" */
    var EListItemAlignment_MAX: String /* "EListItemAlignment_MAX" */
}

external open class TileView : ListView {
    constructor()
    constructor(Outer: UObject)
    open var EntryHeight: Number
    open var EntryWidth: Number
    open var TileAlignment: String /* "EvenlyDistributed" | "EvenlySize" | "EvenlyWide" | "LeftAligned" | "RightAligned" | "CenterAligned" | "Fill" | "EListItemAlignment_MAX" */
    open var bWrapHorizontalNavigation: Boolean
    open fun SetEntryWidth(NewWidth: Number)
    open fun SetEntryHeight(NewHeight: Number)
    open fun GetEntryWidth(): Number
    open fun GetEntryHeight(): Number

    companion object {
        fun Load(ResourceName: String): TileView
        fun Find(Outer: UObject, ResourceName: String): TileView
        fun GetDefaultObject(): TileView
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TileView
        fun C(Other: UObject): TileView
        fun C(Other: Any): TileView
    }
}

external open class TreeView : ListView {
    constructor()
    constructor(Outer: UObject)
    open var BP_OnGetItemChildren: UnrealEngineDelegate<(Item: UObject, Children: Array<UObject>) -> Unit>
    open var BP_OnItemExpansionChanged: UnrealEngineMulticastDelegate<(Item: UObject, bIsExpanded: Boolean) -> Unit>
    open fun SetItemExpansion(Item: UObject, bExpandItem: Boolean)
    open fun ExpandAll()
    open fun CollapseAll()

    companion object {
        fun Load(ResourceName: String): TreeView
        fun Find(Outer: UObject, ResourceName: String): TreeView
        fun GetDefaultObject(): TreeView
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TreeView
        fun C(Other: UObject): TreeView
        fun C(Other: Any): TreeView
    }
}

external open class UniformGridPanel : PanelWidget {
    constructor()
    constructor(Outer: UObject)
    open var SlotPadding: Margin
    open var MinDesiredSlotWidth: Number
    open var MinDesiredSlotHeight: Number
    open fun SetSlotPadding(InSlotPadding: Margin)
    open fun SetMinDesiredSlotWidth(InMinDesiredSlotWidth: Number)
    open fun SetMinDesiredSlotHeight(InMinDesiredSlotHeight: Number)
    open fun AddChildToUniformGrid(Content: Widget, InRow: Number, InColumn: Number): UniformGridSlot

    companion object {
        fun Load(ResourceName: String): UniformGridPanel
        fun Find(Outer: UObject, ResourceName: String): UniformGridPanel
        fun GetDefaultObject(): UniformGridPanel
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): UniformGridPanel
        fun C(Other: UObject): UniformGridPanel
        fun C(Other: Any): UniformGridPanel
    }
}

external open class VerticalBox : PanelWidget {
    constructor()
    constructor(Outer: UObject)
    open fun AddChildToVerticalBox(Content: Widget): VerticalBoxSlot

    companion object {
        fun Load(ResourceName: String): VerticalBox
        fun Find(Outer: UObject, ResourceName: String): VerticalBox
        fun GetDefaultObject(): VerticalBox
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VerticalBox
        fun C(Other: UObject): VerticalBox
        fun C(Other: Any): VerticalBox
    }
}

external open class Viewport : ContentWidget {
    constructor()
    constructor(Outer: UObject)
    open var BackgroundColor: LinearColor
    open fun Spawn(ActorClass: UnrealEngineClass): Actor
    open fun SetViewRotation(Rotation: Rotator)
    open fun SetViewLocation(Location: Vector)
    open fun GetViewRotation(): Rotator
    open fun GetViewportWorld(): World
    open fun GetViewLocation(): Vector

    companion object {
        fun Load(ResourceName: String): Viewport
        fun Find(Outer: UObject, ResourceName: String): Viewport
        fun GetDefaultObject(): Viewport
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Viewport
        fun C(Other: UObject): Viewport
        fun C(Other: Any): Viewport
    }
}

external open class VisibilityBinding : PropertyBinding {
    constructor()
    constructor(Outer: UObject)
    open fun GetValue(): String /* "Visible" | "Collapsed" | "Hidden" | "HitTestInvisible" | "SelfHitTestInvisible" | "ESlateVisibility_MAX" */

    companion object {
        fun Load(ResourceName: String): VisibilityBinding
        fun Find(Outer: UObject, ResourceName: String): VisibilityBinding
        fun GetDefaultObject(): VisibilityBinding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VisibilityBinding
        fun C(Other: UObject): VisibilityBinding
        fun C(Other: Any): VisibilityBinding
    }
}

external open class BlueprintWidgetAnimationDelegateBinding {
    open var Action: String /* "Started" | "Finished" | "EWidgetAnimationEvent_MAX" */
    open var AnimationToBind: String
    open var FunctionNameToBind: String
    open var UserTag: String
    open fun clone(): BlueprintWidgetAnimationDelegateBinding

    companion object {
        fun C(Other: UObject): BlueprintWidgetAnimationDelegateBinding
        fun C(Other: Any): BlueprintWidgetAnimationDelegateBinding
    }
}

external open class WidgetAnimationDelegateBinding : DynamicBlueprintBinding {
    constructor()
    constructor(Outer: UObject)
    open var WidgetAnimationDelegateBindings: Array<BlueprintWidgetAnimationDelegateBinding>

    companion object {
        fun Load(ResourceName: String): WidgetAnimationDelegateBinding
        fun Find(Outer: UObject, ResourceName: String): WidgetAnimationDelegateBinding
        fun GetDefaultObject(): WidgetAnimationDelegateBinding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WidgetAnimationDelegateBinding
        fun C(Other: UObject): WidgetAnimationDelegateBinding
        fun C(Other: Any): WidgetAnimationDelegateBinding
    }
}

external interface `T$610` {
    var Result: UMGSequencePlayer
    var `$`: WidgetAnimationPlayCallbackProxy
}

external open class WidgetAnimationPlayCallbackProxy : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Finished: UnrealEngineMulticastDelegate<() -> Unit>

    companion object {
        fun Load(ResourceName: String): WidgetAnimationPlayCallbackProxy
        fun Find(Outer: UObject, ResourceName: String): WidgetAnimationPlayCallbackProxy
        fun GetDefaultObject(): WidgetAnimationPlayCallbackProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WidgetAnimationPlayCallbackProxy
        fun PlayAnimationTimeRangewithFinishedevent(Result: UMGSequencePlayer = definedExternally, Widget: UserWidget = definedExternally, InAnimation: WidgetAnimation = definedExternally, StartAtTime: Number = definedExternally, EndAtTime: Number = definedExternally, NumLoopsToPlay: Number = definedExternally, PlayMode: String /* "Forward" | "Reverse" | "PingPong" | "EUMGSequencePlayMode_MAX" */ = definedExternally, PlaybackSpeed: Number = definedExternally): `T$610`
        fun PlayAnimationwithFinishedevent(Result: UMGSequencePlayer = definedExternally, Widget: UserWidget = definedExternally, InAnimation: WidgetAnimation = definedExternally, StartAtTime: Number = definedExternally, NumLoopsToPlay: Number = definedExternally, PlayMode: String /* "Forward" | "Reverse" | "PingPong" | "EUMGSequencePlayMode_MAX" */ = definedExternally, PlaybackSpeed: Number = definedExternally): `T$610`
        fun C(Other: UObject): WidgetAnimationPlayCallbackProxy
        fun C(Other: Any): WidgetAnimationPlayCallbackProxy
    }
}

external open class WidgetBinding : PropertyBinding {
    constructor()
    constructor(Outer: UObject)
    open fun GetValue(): Widget

    companion object {
        fun Load(ResourceName: String): WidgetBinding
        fun Find(Outer: UObject, ResourceName: String): WidgetBinding
        fun GetDefaultObject(): WidgetBinding
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WidgetBinding
        fun C(Other: UObject): WidgetBinding
        fun C(Other: Any): WidgetBinding
    }
}

external open class EventGraphFastCallPair {
    open var FunctionToPatch: UFunction
    open var EventGraphCallOffset: Number
    open fun clone(): EventGraphFastCallPair

    companion object {
        fun C(Other: UObject): EventGraphFastCallPair
        fun C(Other: Any): EventGraphFastCallPair
    }
}

external open class BlueprintGeneratedClass : Class {
    constructor()
    constructor(Outer: UObject)
    open var NumReplicatedProperties: Number
    open var bHasNativizedParent: Boolean
    open var bHasCookedComponentInstancingData: Boolean
    open var bIsSparseClassDataSerializable: Boolean
    open var DynamicBindingObjects: Array<DynamicBlueprintBinding>
    open var ComponentTemplates: Array<ActorComponent>
    open var Timelines: Array<TimelineTemplate>
    open var ComponentClassOverrides: Array<BPComponentClassOverride>
    open var SimpleConstructionScript: SimpleConstructionScript
    open var InheritableComponentHandler: InheritableComponentHandler
    open var UberGraphFramePointerProperty: StructProperty
    open var UberGraphFunction: UFunction
    open var FastCallPairs: Array<EventGraphFastCallPair>
    open var OverridenArchetypeForCDO: UObject
    open var PropertyGuids: Any
    open var CalledFunctions: Array<UFunction>
    open var CookedComponentInstancingData: Any

    companion object {
        fun Load(ResourceName: String): BlueprintGeneratedClass
        fun Find(Outer: UObject, ResourceName: String): BlueprintGeneratedClass
        fun GetDefaultObject(): BlueprintGeneratedClass
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintGeneratedClass
        fun C(Other: UObject): BlueprintGeneratedClass
        fun C(Other: Any): BlueprintGeneratedClass
    }
}

external object EBindingKind {
    var Function: String /* "Function" */
    var Property: String /* "Property" */
    var EBindingKind_MAX: String /* "EBindingKind_MAX" */
}

external open class DelegateRuntimeBinding {
    open var ObjectName: String
    open var PropertyName: String
    open var FunctionName: String
    open var SourcePath: DynamicPropertyPath
    open var Kind: String /* "Function" | "Property" | "EBindingKind_MAX" */
    open fun clone(): DelegateRuntimeBinding

    companion object {
        fun C(Other: UObject): DelegateRuntimeBinding
        fun C(Other: Any): DelegateRuntimeBinding
    }
}

external open class WidgetBlueprintGeneratedClass : BlueprintGeneratedClass {
    constructor()
    constructor(Outer: UObject)
    open var WidgetTree: WidgetTree
    open var bCanCallPreConstruct: Boolean
    open var bClassRequiresNativeTick: Boolean
    open var Bindings: Array<DelegateRuntimeBinding>
    open var Animations: Array<WidgetAnimation>
    open var NamedSlots: Array<String>

    companion object {
        fun Load(ResourceName: String): WidgetBlueprintGeneratedClass
        fun Find(Outer: UObject, ResourceName: String): WidgetBlueprintGeneratedClass
        fun GetDefaultObject(): WidgetBlueprintGeneratedClass
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WidgetBlueprintGeneratedClass
        fun C(Other: UObject): WidgetBlueprintGeneratedClass
        fun C(Other: Any): WidgetBlueprintGeneratedClass
    }
}

external open class NavigationEvent : InputEvent {
    open fun clone(): NavigationEvent
    open fun GetInputEventFromNavigationEvent(): InputEvent

    companion object {
        fun C(Other: UObject): NavigationEvent
        fun C(Other: Any): NavigationEvent
        fun GetInputEventFromNavigationEvent(Event: NavigationEvent): InputEvent
    }
}

external interface `T$611` {
    var FoundWidgets: Array<UserWidget>
}

external interface `T$612` {
    var FoundWidgets: Array<UserWidget>
}

external open class WidgetBlueprintLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): WidgetBlueprintLibrary
        fun Find(Outer: UObject, ResourceName: String): WidgetBlueprintLibrary
        fun GetDefaultObject(): WidgetBlueprintLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WidgetBlueprintLibrary
        fun UnlockMouse(Reply: EventReply = definedExternally): `T$182`
        fun Unhandled(): EventReply
        fun SetWindowTitleBarState(TitleBarContent: Widget, Mode: String /* "Overlay" | "VerticalBox" | "EWindowTitleBarMode_MAX" */, bTitleBarDragEnabled: Boolean, bWindowButtonsVisible: Boolean, bTitleBarVisible: Boolean)
        fun SetWindowTitleBarCloseButtonActive(bActive: Boolean)
        fun SetUserFocus(Reply: EventReply = definedExternally, FocusWidget: Widget = definedExternally, bInAllUsers: Boolean = definedExternally): `T$182`
        fun SetMousePosition(Reply: EventReply = definedExternally, NewMousePosition: Vector2D = definedExternally): `T$182`
        fun SetInputMode_UIOnlyEx(PlayerController: PlayerController, InWidgetToFocus: Widget, InMouseLockMode: String /* "DoNotLock" | "LockOnCapture" | "LockAlways" | "LockInFullscreen" | "EMouseLockMode_MAX" */)
        fun SetInputMode_UIOnly(Target: PlayerController, InWidgetToFocus: Widget, bLockMouseToViewport: Boolean)
        fun SetInputMode_GameOnly(PlayerController: PlayerController)
        fun SetInputMode_GameAndUIEx(PlayerController: PlayerController, InWidgetToFocus: Widget, InMouseLockMode: String /* "DoNotLock" | "LockOnCapture" | "LockAlways" | "LockInFullscreen" | "EMouseLockMode_MAX" */, bHideCursorDuringCapture: Boolean)
        fun SetInputMode_GameAndUI(Target: PlayerController, InWidgetToFocus: Widget, bLockMouseToViewport: Boolean, bHideCursorDuringCapture: Boolean)
        fun SetHardwareCursor(WorldContextObject: UObject, CursorShape: String /* "None" | "Default" | "TextEditBeam" | "ResizeLeftRight" | "ResizeUpDown" | "ResizeSouthEast" | "ResizeSouthWest" | "CardinalCross" | "Crosshairs" | "Hand" | "GrabHand" | "GrabHandClosed" | "SlashedCircle" | "EyeDropper" | "EMouseCursor_MAX" */, CursorName: String, HotSpot: Vector2D): Boolean
        fun SetFocusToGameViewport()
        fun SetColorVisionDeficiencyType(Type: String /* "NormalVision" | "Deuteranope" | "Protanope" | "Tritanope" | "EColorVisionDeficiency_MAX" */, Severity: Number, CorrectDeficiency: Boolean, ShowCorrectionWithDeficiency: Boolean)
        fun SetBrushResourceToTexture(Brush: SlateBrush = definedExternally, Texture: Texture2D = definedExternally): `T$88`
        fun SetBrushResourceToMaterial(Brush: SlateBrush = definedExternally, Material: MaterialInterface = definedExternally): `T$88`
        fun RestorePreviousWindowTitleBarState()
        fun ReleaseMouseCapture(Reply: EventReply = definedExternally): `T$182`
        fun ReleaseJoystickCapture(Reply: EventReply = definedExternally, bInAllJoysticks: Boolean = definedExternally): `T$182`
        fun NoResourceBrush(): SlateBrush
        fun MakeBrushFromTexture(Texture: Texture2D, Width: Number, Height: Number): SlateBrush
        fun MakeBrushFromMaterial(Material: MaterialInterface, Width: Number, Height: Number): SlateBrush
        fun MakeBrushFromAsset(BrushAsset: SlateBrushAsset): SlateBrush
        fun LockMouse(Reply: EventReply = definedExternally, CapturingWidget: Widget = definedExternally): `T$182`
        fun IsDragDropping(): Boolean
        fun Handled(): EventReply
        fun GetSafeZonePadding(WorldContextObject: UObject, SafePadding: Vector4 = definedExternally, SafePaddingScale: Vector2D = definedExternally, SpillOverPadding: Vector4 = definedExternally): `T$325`
        fun GetKeyEventFromAnalogInputEvent(Event: AnalogInputEvent): KeyEvent
        fun GetInputEventFromPointerEvent(Event: UPointerEvent): InputEvent
        fun GetInputEventFromNavigationEvent(Event: NavigationEvent): InputEvent
        fun GetInputEventFromKeyEvent(Event: KeyEvent): InputEvent
        fun GetInputEventFromCharacterEvent(Event: CharacterEvent): InputEvent
        fun GetDynamicMaterial(Brush: SlateBrush = definedExternally): `T$87`
        fun GetDragDroppingContent(): DragDropOperation
        fun GetBrushResourceAsTexture2D(Brush: SlateBrush): Texture2D
        fun GetBrushResourceAsMaterial(Brush: SlateBrush): MaterialInterface
        fun GetBrushResource(Brush: SlateBrush): UObject
        fun GetAllWidgetsWithInterface(WorldContextObject: UObject, FoundWidgets: Array<UserWidget> = definedExternally, Interface: UnrealEngineClass = definedExternally, TopLevelOnly: Boolean = definedExternally): `T$611`
        fun GetAllWidgetsOfClass(WorldContextObject: UObject, FoundWidgets: Array<UserWidget> = definedExternally, WidgetClass: UnrealEngineClass = definedExternally, TopLevelOnly: Boolean = definedExternally): `T$612`
        fun EndDragDrop(Reply: EventReply = definedExternally): `T$182`
        fun DrawTextFormatted(Context: PaintContext = definedExternally, text: String = definedExternally, Position: Vector2D = definedExternally, Font: Font = definedExternally, FontSize: Number = definedExternally, FontTypeFace: String = definedExternally, Tint: LinearColor = definedExternally): `T$183`
        fun DrawText(Context: PaintContext = definedExternally, inString: String = definedExternally, Position: Vector2D = definedExternally, Tint: LinearColor = definedExternally): `T$183`
        fun DrawLines(Context: PaintContext = definedExternally, Points: Array<Vector2D> = definedExternally, Tint: LinearColor = definedExternally, bAntiAlias: Boolean = definedExternally, Thickness: Number = definedExternally): `T$183`
        fun DrawLine(Context: PaintContext = definedExternally, PositionA: Vector2D = definedExternally, PositionB: Vector2D = definedExternally, Tint: LinearColor = definedExternally, bAntiAlias: Boolean = definedExternally, Thickness: Number = definedExternally): `T$183`
        fun DrawBox(Context: PaintContext = definedExternally, Position: Vector2D = definedExternally, Size: Vector2D = definedExternally, Brush: SlateBrushAsset = definedExternally, Tint: LinearColor = definedExternally): `T$183`
        fun DismissAllMenus()
        fun DetectDragIfPressed(UPointerEvent: UPointerEvent, WidgetDetectingDrag: Widget, DragKey: Key): EventReply
        fun DetectDrag(Reply: EventReply = definedExternally, WidgetDetectingDrag: Widget = definedExternally, DragKey: Key = definedExternally): `T$182`
        fun CreateDragDropOperation(OperationClass: UnrealEngineClass): DragDropOperation
        fun Create(WorldContextObject: UObject, WidgetType: UnrealEngineClass, OwningPlayer: PlayerController): UserWidget
        fun ClearUserFocus(Reply: EventReply = definedExternally, bInAllUsers: Boolean = definedExternally): `T$182`
        fun CaptureMouse(Reply: EventReply = definedExternally, CapturingWidget: Widget = definedExternally): `T$182`
        fun CaptureJoystick(Reply: EventReply = definedExternally, CapturingWidget: Widget = definedExternally, bInAllJoysticks: Boolean = definedExternally): `T$182`
        fun CancelDragDrop()
        fun C(Other: UObject): WidgetBlueprintLibrary
        fun C(Other: Any): WidgetBlueprintLibrary
    }
}

external object EWidgetInteractionSource {
    var World: String /* "World" */
    var Mouse: String /* "Mouse" */
    var CenterScreen: String /* "CenterScreen" */
    var Custom: String /* "Custom" */
    var EWidgetInteractionSource_MAX: String /* "EWidgetInteractionSource_MAX" */
}

external open class WidgetInteractionComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var OnHoveredWidgetChanged: UnrealEngineMulticastDelegate<(WidgetComponent: WidgetComponent, PreviousWidgetComponent: WidgetComponent) -> Unit>
    open var VirtualUserIndex: Number
    open var PointerIndex: Number
    open var TraceChannel: String /* "ECC_WorldStatic" | "ECC_WorldDynamic" | "ECC_Pawn" | "ECC_Visibility" | "ECC_Camera" | "ECC_PhysicsBody" | "ECC_Vehicle" | "ECC_Destructible" | "ECC_EngineTraceChannel1" | "ECC_EngineTraceChannel2" | "ECC_EngineTraceChannel3" | "ECC_EngineTraceChannel4" | "ECC_EngineTraceChannel5" | "ECC_EngineTraceChannel6" | "ECC_GameTraceChannel1" | "ECC_GameTraceChannel2" | "ECC_GameTraceChannel3" | "ECC_GameTraceChannel4" | "ECC_GameTraceChannel5" | "ECC_GameTraceChannel6" | "ECC_GameTraceChannel7" | "ECC_GameTraceChannel8" | "ECC_GameTraceChannel9" | "ECC_GameTraceChannel10" | "ECC_GameTraceChannel11" | "ECC_GameTraceChannel12" | "ECC_GameTraceChannel13" | "ECC_GameTraceChannel14" | "ECC_GameTraceChannel15" | "ECC_GameTraceChannel16" | "ECC_GameTraceChannel17" | "ECC_GameTraceChannel18" | "ECC_OverlapAll_Deprecated" | "ECC_MAX" */
    open var InteractionDistance: Number
    open var InteractionSource: String /* "World" | "Mouse" | "CenterScreen" | "Custom" | "EWidgetInteractionSource_MAX" */
    open var bEnableHitTesting: Boolean
    open var bShowDebug: Boolean
    open var DebugSphereLineThickness: Number
    open var DebugLineThickness: Number
    open var DebugColor: LinearColor
    open var CustomHitResult: HitResult
    open var LocalHitLocation: Vector2D
    open var LastLocalHitLocation: Vector2D
    open var HoveredWidgetComponent: WidgetComponent
    open var LastHitResult: HitResult
    open var bIsHoveredWidgetInteractable: Boolean
    open var bIsHoveredWidgetFocusable: Boolean
    open var bIsHoveredWidgetHitTestVisible: Boolean
    open var ArrowComponent: ArrowComponent
    open fun SetFocus(FocusWidget: Widget)
    open fun SetCustomHitResult(HitResult: HitResult)
    open fun SendKeyChar(Characters: String, bRepeat: Boolean): Boolean
    open fun ScrollWheel(ScrollDelta: Number)
    open fun ReleasePointerKey(Key: Key)
    open fun ReleaseKey(Key: Key): Boolean
    open fun PressPointerKey(Key: Key)
    open fun PressKey(Key: Key, bRepeat: Boolean): Boolean
    open fun PressAndReleaseKey(Key: Key): Boolean
    open fun IsOverInteractableWidget(): Boolean
    open fun IsOverHitTestVisibleWidget(): Boolean
    open fun IsOverFocusableWidget(): Boolean
    open fun GetLastHitResult(): HitResult
    open fun GetHoveredWidgetComponent(): WidgetComponent
    open fun Get2DHitLocation(): Vector2D

    companion object {
        fun Load(ResourceName: String): WidgetInteractionComponent
        fun Find(Outer: UObject, ResourceName: String): WidgetInteractionComponent
        fun GetDefaultObject(): WidgetInteractionComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WidgetInteractionComponent
        fun C(Other: UObject): WidgetInteractionComponent
        fun C(Other: Any): WidgetInteractionComponent
    }
}

external open class WidgetLayoutLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): WidgetLayoutLibrary
        fun Find(Outer: UObject, ResourceName: String): WidgetLayoutLibrary
        fun GetDefaultObject(): WidgetLayoutLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WidgetLayoutLibrary
        fun SlotAsWrapBoxSlot(Widget: Widget): WrapBoxSlot
        fun SlotAsWidgetSwitcherSlot(Widget: Widget): WidgetSwitcherSlot
        fun SlotAsVerticalBoxSlot(Widget: Widget): VerticalBoxSlot
        fun SlotAsUniformGridSlot(Widget: Widget): UniformGridSlot
        fun SlotAsSizeBoxSlot(Widget: Widget): SizeBoxSlot
        fun SlotAsScrollBoxSlot(Widget: Widget): ScrollBoxSlot
        fun SlotAsScaleBoxSlot(Widget: Widget): ScaleBoxSlot
        fun SlotAsSafeBoxSlot(Widget: Widget): SafeZoneSlot
        fun SlotAsOverlaySlot(Widget: Widget): OverlaySlot
        fun SlotAsHorizontalBoxSlot(Widget: Widget): HorizontalBoxSlot
        fun SlotAsGridSlot(Widget: Widget): GridSlot
        fun SlotAsCanvasSlot(Widget: Widget): CanvasPanelSlot
        fun SlotAsBorderSlot(Widget: Widget): BorderSlot
        fun RemoveAllWidgets(WorldContextObject: UObject)
        fun ProjectWorldLocationToWidgetPosition(PlayerController: PlayerController, WorldLocation: Vector, ScreenPosition: Vector2D = definedExternally, bPlayerViewportRelative: Boolean = definedExternally): `T$192`
        fun GetViewportWidgetGeometry(WorldContextObject: UObject): Geometry
        fun GetViewportSize(WorldContextObject: UObject): Vector2D
        fun GetViewportScale(WorldContextObject: UObject): Number
        fun GetPlayerScreenWidgetGeometry(PlayerController: PlayerController): Geometry
        fun GetMousePositionScaledByDPI(Player: PlayerController, LocationX: Number = definedExternally, LocationY: Number = definedExternally): `T$187`
        fun GetMousePositionOnViewport(WorldContextObject: UObject): Vector2D
        fun GetMousePositionOnPlatform(): Vector2D
        fun C(Other: UObject): WidgetLayoutLibrary
        fun C(Other: Any): WidgetLayoutLibrary
    }
}

external open class WidgetSwitcher : PanelWidget {
    constructor()
    constructor(Outer: UObject)
    open var ActiveWidgetIndex: Number
    open fun SetActiveWidgetIndex(index: Number)
    open fun SetActiveWidget(Widget: Widget)
    open fun GetWidgetAtIndex(index: Number): Widget
    open fun GetNumWidgets(): Number
    open fun GetActiveWidgetIndex(): Number
    open fun GetActiveWidget(): Widget

    companion object {
        fun Load(ResourceName: String): WidgetSwitcher
        fun Find(Outer: UObject, ResourceName: String): WidgetSwitcher
        fun GetDefaultObject(): WidgetSwitcher
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WidgetSwitcher
        fun C(Other: UObject): WidgetSwitcher
        fun C(Other: Any): WidgetSwitcher
    }
}

external open class WindowTitleBarArea : ContentWidget {
    constructor()
    constructor(Outer: UObject)
    open var bWindowButtonsEnabled: Boolean
    open var bDoubleClickTogglesFullscreen: Boolean
    open fun SetVerticalAlignment(InVerticalAlignment: String /* "VAlign_Fill" | "VAlign_Top" | "VAlign_Center" | "VAlign_Bottom" | "VAlign_MAX" */)
    open fun SetPadding(InPadding: Margin)
    open fun SetHorizontalAlignment(InHorizontalAlignment: String /* "HAlign_Fill" | "HAlign_Left" | "HAlign_Center" | "HAlign_Right" | "HAlign_MAX" */)

    companion object {
        fun Load(ResourceName: String): WindowTitleBarArea
        fun Find(Outer: UObject, ResourceName: String): WindowTitleBarArea
        fun GetDefaultObject(): WindowTitleBarArea
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WindowTitleBarArea
        fun C(Other: UObject): WindowTitleBarArea
        fun C(Other: Any): WindowTitleBarArea
    }
}

external open class WindowTitleBarAreaSlot : PanelSlot {
    constructor()
    constructor(Outer: UObject)
    open var Padding: Margin
    open var HorizontalAlignment: String /* "HAlign_Fill" | "HAlign_Left" | "HAlign_Center" | "HAlign_Right" | "HAlign_MAX" */
    open var VerticalAlignment: String /* "VAlign_Fill" | "VAlign_Top" | "VAlign_Center" | "VAlign_Bottom" | "VAlign_MAX" */
    open fun SetVerticalAlignment(InVerticalAlignment: String /* "VAlign_Fill" | "VAlign_Top" | "VAlign_Center" | "VAlign_Bottom" | "VAlign_MAX" */)
    open fun SetPadding(InPadding: Margin)
    open fun SetHorizontalAlignment(InHorizontalAlignment: String /* "HAlign_Fill" | "HAlign_Left" | "HAlign_Center" | "HAlign_Right" | "HAlign_MAX" */)

    companion object {
        fun Load(ResourceName: String): WindowTitleBarAreaSlot
        fun Find(Outer: UObject, ResourceName: String): WindowTitleBarAreaSlot
        fun GetDefaultObject(): WindowTitleBarAreaSlot
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WindowTitleBarAreaSlot
        fun C(Other: UObject): WindowTitleBarAreaSlot
        fun C(Other: Any): WindowTitleBarAreaSlot
    }
}

external open class WrapBox : PanelWidget {
    constructor()
    constructor(Outer: UObject)
    open var InnerSlotPadding: Vector2D
    open var WrapWidth: Number
    open var WrapSize: Number
    open var bExplicitWrapWidth: Boolean
    open var bExplicitWrapSize: Boolean
    open var Orientation: String /* "Orient_Horizontal" | "Orient_Vertical" | "Orient_MAX" */
    open fun SetInnerSlotPadding(InPadding: Vector2D)
    open fun AddChildToWrapBox(Content: Widget): WrapBoxSlot

    companion object {
        fun Load(ResourceName: String): WrapBox
        fun Find(Outer: UObject, ResourceName: String): WrapBox
        fun GetDefaultObject(): WrapBox
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WrapBox
        fun C(Other: UObject): WrapBox
        fun C(Other: Any): WrapBox
    }
}

external open class AnimationDataSourceRegistry : UObject {
    constructor()
    constructor(Outer: UObject)
    open var DataSources: Any

    companion object {
        fun Load(ResourceName: String): AnimationDataSourceRegistry
        fun Find(Outer: UObject, ResourceName: String): AnimationDataSourceRegistry
        fun GetDefaultObject(): AnimationDataSourceRegistry
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationDataSourceRegistry
        fun C(Other: UObject): AnimationDataSourceRegistry
        fun C(Other: Any): AnimationDataSourceRegistry
    }
}

external open class AnimNotify_PlayMontageNotify : AnimNotify {
    constructor()
    constructor(Outer: UObject)
    open var NotifyName: String

    companion object {
        fun Load(ResourceName: String): AnimNotify_PlayMontageNotify
        fun Find(Outer: UObject, ResourceName: String): AnimNotify_PlayMontageNotify
        fun GetDefaultObject(): AnimNotify_PlayMontageNotify
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimNotify_PlayMontageNotify
        fun C(Other: UObject): AnimNotify_PlayMontageNotify
        fun C(Other: Any): AnimNotify_PlayMontageNotify
    }
}

external open class AnimNotify_PlayMontageNotifyWindow : AnimNotifyState {
    constructor()
    constructor(Outer: UObject)
    open var NotifyName: String

    companion object {
        fun Load(ResourceName: String): AnimNotify_PlayMontageNotifyWindow
        fun Find(Outer: UObject, ResourceName: String): AnimNotify_PlayMontageNotifyWindow
        fun GetDefaultObject(): AnimNotify_PlayMontageNotifyWindow
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimNotify_PlayMontageNotifyWindow
        fun C(Other: UObject): AnimNotify_PlayMontageNotifyWindow
        fun C(Other: Any): AnimNotify_PlayMontageNotifyWindow
    }
}

external open class AnimSequencerInstance : AnimInstance {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimSequencerInstance
        fun Find(Outer: UObject, ResourceName: String): AnimSequencerInstance
        fun GetDefaultObject(): AnimSequencerInstance
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimSequencerInstance
        fun C(Other: UObject): AnimSequencerInstance
        fun C(Other: Any): AnimSequencerInstance
    }
}

external open class PositionHistory {
    open var Positions: Array<Vector>
    open var Range: Number
    open fun clone(): PositionHistory

    companion object {
        fun C(Other: UObject): PositionHistory
        fun C(Other: Any): PositionHistory
    }
}

external interface `T$613` {
    var History: PositionHistory
    var `$`: Number
}

external open class KismetAnimationLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): KismetAnimationLibrary
        fun Find(Outer: UObject, ResourceName: String): KismetAnimationLibrary
        fun GetDefaultObject(): KismetAnimationLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): KismetAnimationLibrary
        fun K2_TwoBoneIK(RootPos: Vector, JointPos: Vector, EndPos: Vector, JointTarget: Vector, Effector: Vector, OutJointPos: Vector = definedExternally, OutEndPos: Vector = definedExternally, bAllowStretching: Boolean = definedExternally, StartStretchRatio: Number = definedExternally, MaxStretchScale: Number = definedExternally): `T$247`
        fun StartProfilingTimer()
        fun K2_MakePerlinNoiseVectorAndRemap(X: Number, Y: Number, Z: Number, RangeOutMinX: Number, RangeOutMaxX: Number, RangeOutMinY: Number, RangeOutMaxY: Number, RangeOutMinZ: Number, RangeOutMaxZ: Number): Vector
        fun MakePerlinNoiseandRemap(Value: Number, RangeOutMin: Number, RangeOutMax: Number): Number
        fun K2_LookAt(CurrentTransform: Transform, TargetPosition: Vector, LookAtVector: Vector, bUseUpVector: Boolean, UpVector: Vector, ClampConeInDegree: Number): Transform
        fun EndProfilingTimer(bLog: Boolean, LogPrefix: String): Number
        fun K2_DistanceBetweenTwoSocketsAndMapRange(Component: SkeletalMeshComponent, SocketOrBoneNameA: String, SocketSpaceA: String /* "RTS_World" | "RTS_Actor" | "RTS_Component" | "RTS_ParentBoneSpace" | "RTS_MAX" */, SocketOrBoneNameB: String, SocketSpaceB: String /* "RTS_World" | "RTS_Actor" | "RTS_Component" | "RTS_ParentBoneSpace" | "RTS_MAX" */, bRemapRange: Boolean, InRangeMin: Number, InRangeMax: Number, OutRangeMin: Number, OutRangeMax: Number): Number
        fun K2_DirectionBetweenSockets(Component: SkeletalMeshComponent, SocketOrBoneNameFrom: String, SocketOrBoneNameTo: String): Vector
        fun CalculateVelocityFromSockets(DeltaSeconds: Number, Component: SkeletalMeshComponent, SocketOrBoneName: String, ReferenceSocketOrBone: String, SocketSpace: String /* "RTS_World" | "RTS_Actor" | "RTS_Component" | "RTS_ParentBoneSpace" | "RTS_MAX" */, OffsetInBoneSpace: Vector, History: PositionHistory = definedExternally, NumberOfSamples: Number = definedExternally, VelocityMin: Number = definedExternally, VelocityMax: Number = definedExternally, EasingType: String /* "Linear" | "Sinusoidal" | "Cubic" | "QuadraticInOut" | "CubicInOut" | "HermiteCubic" | "QuarticInOut" | "QuinticInOut" | "CircularIn" | "CircularOut" | "CircularInOut" | "ExpIn" | "ExpOut" | "ExpInOut" | "CustomCurve" | "EEasingFuncType_MAX" */ = definedExternally, CustomCurve: RuntimeFloatCurve = definedExternally): `T$613`
        fun CalculateVelocityFromPositionHistory(DeltaSeconds: Number, Position: Vector, History: PositionHistory = definedExternally, NumberOfSamples: Number = definedExternally, VelocityMin: Number = definedExternally, VelocityMax: Number = definedExternally): `T$613`
        fun C(Other: UObject): KismetAnimationLibrary
        fun C(Other: Any): KismetAnimationLibrary
    }
}

external open class BranchingPointNotifyPayload {
    open fun clone(): BranchingPointNotifyPayload

    companion object {
        fun C(Other: UObject): BranchingPointNotifyPayload
        fun C(Other: Any): BranchingPointNotifyPayload
    }
}

external open class PlayMontageCallbackProxy : UObject {
    constructor()
    constructor(Outer: UObject)
    open var OnCompleted: UnrealEngineMulticastDelegate<(NotifyName: String) -> Unit>
    open var OnBlendOut: UnrealEngineMulticastDelegate<(NotifyName: String) -> Unit>
    open var OnInterrupted: UnrealEngineMulticastDelegate<(NotifyName: String) -> Unit>
    open var OnNotifyBegin: UnrealEngineMulticastDelegate<(NotifyName: String) -> Unit>
    open var OnNotifyEnd: UnrealEngineMulticastDelegate<(NotifyName: String) -> Unit>
    open fun OnNotifyEndReceived(NotifyName: String, BranchingPointNotifyPayload: BranchingPointNotifyPayload)
    open fun OnNotifyBeginReceived(NotifyName: String, BranchingPointNotifyPayload: BranchingPointNotifyPayload)
    open fun OnMontageEnded(Montage: AnimMontage, bInterrupted: Boolean)
    open fun OnMontageBlendingOut(Montage: AnimMontage, bInterrupted: Boolean)

    companion object {
        fun Load(ResourceName: String): PlayMontageCallbackProxy
        fun Find(Outer: UObject, ResourceName: String): PlayMontageCallbackProxy
        fun GetDefaultObject(): PlayMontageCallbackProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PlayMontageCallbackProxy
        fun CreateProxyObjectForPlayMontage(InSkeletalMeshComponent: SkeletalMeshComponent, MontageToPlay: AnimMontage, PlayRate: Number, StartingPosition: Number, StartingSection: String): PlayMontageCallbackProxy
        fun C(Other: UObject): PlayMontageCallbackProxy
        fun C(Other: Any): PlayMontageCallbackProxy
    }
}

external open class SequencerAnimationSupport : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SequencerAnimationSupport
        fun Find(Outer: UObject, ResourceName: String): SequencerAnimationSupport
        fun GetDefaultObject(): SequencerAnimationSupport
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SequencerAnimationSupport
        fun C(Other: UObject): SequencerAnimationSupport
        fun C(Other: Any): SequencerAnimationSupport
    }
}

external open class ByteChannelEvaluatorSystem : MovieSceneEntitySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ByteChannelEvaluatorSystem
        fun Find(Outer: UObject, ResourceName: String): ByteChannelEvaluatorSystem
        fun GetDefaultObject(): ByteChannelEvaluatorSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ByteChannelEvaluatorSystem
        fun C(Other: UObject): ByteChannelEvaluatorSystem
        fun C(Other: Any): ByteChannelEvaluatorSystem
    }
}

external open class FloatChannelEvaluatorSystem : MovieSceneEntitySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): FloatChannelEvaluatorSystem
        fun Find(Outer: UObject, ResourceName: String): FloatChannelEvaluatorSystem
        fun GetDefaultObject(): FloatChannelEvaluatorSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FloatChannelEvaluatorSystem
        fun C(Other: UObject): FloatChannelEvaluatorSystem
        fun C(Other: Any): FloatChannelEvaluatorSystem
    }
}

external open class MovieSceneTransformOrigin : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun GetTransformOrigin(): Transform

    companion object {
        fun Load(ResourceName: String): MovieSceneTransformOrigin
        fun Find(Outer: UObject, ResourceName: String): MovieSceneTransformOrigin
        fun GetDefaultObject(): MovieSceneTransformOrigin
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneTransformOrigin
        fun C(Other: UObject): MovieSceneTransformOrigin
        fun C(Other: Any): MovieSceneTransformOrigin
    }
}

external open class IntegerChannelEvaluatorSystem : MovieSceneEntitySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): IntegerChannelEvaluatorSystem
        fun Find(Outer: UObject, ResourceName: String): IntegerChannelEvaluatorSystem
        fun GetDefaultObject(): IntegerChannelEvaluatorSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): IntegerChannelEvaluatorSystem
        fun C(Other: UObject): IntegerChannelEvaluatorSystem
        fun C(Other: Any): IntegerChannelEvaluatorSystem
    }
}

external open class MovieScene3DConstraintSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var ConstraintId: Guid
    open var ConstraintBindingID: MovieSceneObjectBindingID
    open fun SetConstraintBindingID(InConstraintBindingID: MovieSceneObjectBindingID)
    open fun GetConstraintBindingID(): MovieSceneObjectBindingID

    companion object {
        fun Load(ResourceName: String): MovieScene3DConstraintSection
        fun Find(Outer: UObject, ResourceName: String): MovieScene3DConstraintSection
        fun GetDefaultObject(): MovieScene3DConstraintSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScene3DConstraintSection
        fun C(Other: UObject): MovieScene3DConstraintSection
        fun C(Other: Any): MovieScene3DConstraintSection
    }
}

external open class MovieScene3DAttachSection : MovieScene3DConstraintSection {
    constructor()
    constructor(Outer: UObject)
    open var AttachSocketName: String
    open var AttachComponentName: String
    open var bFullRevertOnDetach: Boolean
    open var ReAttachOnDetach: Actor
    open var AttachmentLocationRule: String /* "KeepRelative" | "KeepWorld" | "SnapToTarget" | "EAttachmentRule_MAX" */
    open var AttachmentRotationRule: String /* "KeepRelative" | "KeepWorld" | "SnapToTarget" | "EAttachmentRule_MAX" */
    open var AttachmentScaleRule: String /* "KeepRelative" | "KeepWorld" | "SnapToTarget" | "EAttachmentRule_MAX" */
    open var DetachmentLocationRule: String /* "KeepRelative" | "KeepWorld" | "EDetachmentRule_MAX" */
    open var DetachmentRotationRule: String /* "KeepRelative" | "KeepWorld" | "EDetachmentRule_MAX" */
    open var DetachmentScaleRule: String /* "KeepRelative" | "KeepWorld" | "EDetachmentRule_MAX" */

    companion object {
        fun Load(ResourceName: String): MovieScene3DAttachSection
        fun Find(Outer: UObject, ResourceName: String): MovieScene3DAttachSection
        fun GetDefaultObject(): MovieScene3DAttachSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScene3DAttachSection
        fun C(Other: UObject): MovieScene3DAttachSection
        fun C(Other: Any): MovieScene3DAttachSection
    }
}

external open class MovieScene3DConstraintTrack : MovieSceneTrack {
    constructor()
    constructor(Outer: UObject)
    open var ConstraintSections: Array<MovieSceneSection>

    companion object {
        fun Load(ResourceName: String): MovieScene3DConstraintTrack
        fun Find(Outer: UObject, ResourceName: String): MovieScene3DConstraintTrack
        fun GetDefaultObject(): MovieScene3DConstraintTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScene3DConstraintTrack
        fun C(Other: UObject): MovieScene3DConstraintTrack
        fun C(Other: Any): MovieScene3DConstraintTrack
    }
}

external open class MovieScene3DAttachTrack : MovieScene3DConstraintTrack {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieScene3DAttachTrack
        fun Find(Outer: UObject, ResourceName: String): MovieScene3DAttachTrack
        fun GetDefaultObject(): MovieScene3DAttachTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScene3DAttachTrack
        fun C(Other: UObject): MovieScene3DAttachTrack
        fun C(Other: Any): MovieScene3DAttachTrack
    }
}

external object MovieScene3DPathSection_Axis {
    var X: String /* "X" */
    var Y: String /* "Y" */
    var Z: String /* "Z" */
    var NEG_X: String /* "NEG_X" */
    var NEG_Y: String /* "NEG_Y" */
    var NEG_Z: String /* "NEG_Z" */
    var MovieScene3DPathSection_MAX: String /* "MovieScene3DPathSection_MAX" */
}

external open class MovieScene3DPathSection : MovieScene3DConstraintSection {
    constructor()
    constructor(Outer: UObject)
    open var TimingCurve: MovieSceneFloatChannel
    open var FrontAxisEnum: String /* "X" | "Y" | "Z" | "NEG_X" | "NEG_Y" | "NEG_Z" | "MovieScene3DPathSection_MAX" */
    open var UpAxisEnum: String /* "X" | "Y" | "Z" | "NEG_X" | "NEG_Y" | "NEG_Z" | "MovieScene3DPathSection_MAX" */
    open var bFollow: Boolean
    open var bReverse: Boolean
    open var bForceUpright: Boolean

    companion object {
        fun Load(ResourceName: String): MovieScene3DPathSection
        fun Find(Outer: UObject, ResourceName: String): MovieScene3DPathSection
        fun GetDefaultObject(): MovieScene3DPathSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScene3DPathSection
        fun C(Other: UObject): MovieScene3DPathSection
        fun C(Other: Any): MovieScene3DPathSection
    }
}

external open class MovieScene3DPathTrack : MovieScene3DConstraintTrack {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieScene3DPathTrack
        fun Find(Outer: UObject, ResourceName: String): MovieScene3DPathTrack
        fun GetDefaultObject(): MovieScene3DPathTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScene3DPathTrack
        fun C(Other: UObject): MovieScene3DPathTrack
        fun C(Other: Any): MovieScene3DPathTrack
    }
}

external open class MovieScene3DTransformPropertySystem : MovieScenePropertySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieScene3DTransformPropertySystem
        fun Find(Outer: UObject, ResourceName: String): MovieScene3DTransformPropertySystem
        fun GetDefaultObject(): MovieScene3DTransformPropertySystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScene3DTransformPropertySystem
        fun C(Other: UObject): MovieScene3DTransformPropertySystem
        fun C(Other: Any): MovieScene3DTransformPropertySystem
    }
}

external open class MovieScene3DTransformTrack : MovieScenePropertyTrack {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieScene3DTransformTrack
        fun Find(Outer: UObject, ResourceName: String): MovieScene3DTransformTrack
        fun GetDefaultObject(): MovieScene3DTransformTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScene3DTransformTrack
        fun C(Other: UObject): MovieScene3DTransformTrack
        fun C(Other: Any): MovieScene3DTransformTrack
    }
}

external open class MovieSceneActorReferenceKey {
    open var UObject: MovieSceneObjectBindingID
    open var ComponentName: String
    open var SocketName: String
    open fun clone(): MovieSceneActorReferenceKey

    companion object {
        fun C(Other: UObject): MovieSceneActorReferenceKey
        fun C(Other: Any): MovieSceneActorReferenceKey
    }
}

external open class MovieSceneActorReferenceData : MovieSceneChannel {
    open var KeyTimes: Array<FrameNumber>
    open var DefaultValue: MovieSceneActorReferenceKey
    open var KeyValues: Array<MovieSceneActorReferenceKey>
    override fun clone(): MovieSceneActorReferenceData

    companion object {
        fun C(Other: UObject): MovieSceneActorReferenceData
        fun C(Other: Any): MovieSceneActorReferenceData
    }
}

external open class MovieSceneActorReferenceSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var ActorReferenceData: MovieSceneActorReferenceData
    open var ActorGuidIndexCurve: IntegralCurve
    open var ActorGuidStrings: Array<String>

    companion object {
        fun Load(ResourceName: String): MovieSceneActorReferenceSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneActorReferenceSection
        fun GetDefaultObject(): MovieSceneActorReferenceSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneActorReferenceSection
        fun C(Other: UObject): MovieSceneActorReferenceSection
        fun C(Other: Any): MovieSceneActorReferenceSection
    }
}

external open class MovieSceneActorReferenceTrack : MovieScenePropertyTrack {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneActorReferenceTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneActorReferenceTrack
        fun GetDefaultObject(): MovieSceneActorReferenceTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneActorReferenceTrack
        fun C(Other: UObject): MovieSceneActorReferenceTrack
        fun C(Other: Any): MovieSceneActorReferenceTrack
    }
}

external open class MovieSceneAudioSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var Sound: SoundBase
    open var StartFrameOffset: FrameNumber
    open var StartOffset: Number
    open var AudioStartTime: Number
    open var AudioDilationFactor: Number
    open var AudioVolume: Number
    open var SoundVolume: MovieSceneFloatChannel
    open var PitchMultiplier: MovieSceneFloatChannel
    open var AttachActorData: MovieSceneActorReferenceData
    open var bLooping: Boolean
    open var bSuppressSubtitles: Boolean
    open var bOverrideAttenuation: Boolean
    open var AttenuationSettings: SoundAttenuation
    open var OnQueueSubtitles: UnrealEngineDelegate<(Subtitles: Array<SubtitleCue>, CueDuration: Number) -> Unit>
    open var OnAudioFinished: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnAudioPlaybackPercent: UnrealEngineMulticastDelegate<(PlayingSoundWave: SoundWave, PlaybackPercent: Number) -> Unit>
    open fun SetStartOffset(InStartOffset: FrameNumber)
    open fun SetSound(InSound: SoundBase)
    open fun GetStartOffset(): FrameNumber
    open fun GetSound(): SoundBase

    companion object {
        fun Load(ResourceName: String): MovieSceneAudioSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneAudioSection
        fun GetDefaultObject(): MovieSceneAudioSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneAudioSection
        fun C(Other: UObject): MovieSceneAudioSection
        fun C(Other: Any): MovieSceneAudioSection
    }
}

external open class MovieSceneAudioTrack : MovieSceneNameableTrack {
    constructor()
    constructor(Outer: UObject)
    open var AudioSections: Array<MovieSceneSection>
    open var RowHeight: Number

    companion object {
        fun Load(ResourceName: String): MovieSceneAudioTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneAudioTrack
        fun GetDefaultObject(): MovieSceneAudioTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneAudioTrack
        fun C(Other: UObject): MovieSceneAudioTrack
        fun C(Other: Any): MovieSceneAudioTrack
    }
}

external open class MovieSceneBaseValueEvaluatorSystem : MovieSceneEntitySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneBaseValueEvaluatorSystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneBaseValueEvaluatorSystem
        fun GetDefaultObject(): MovieSceneBaseValueEvaluatorSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneBaseValueEvaluatorSystem
        fun C(Other: UObject): MovieSceneBaseValueEvaluatorSystem
        fun C(Other: Any): MovieSceneBaseValueEvaluatorSystem
    }
}

external open class MovieSceneBoolPropertySystem : MovieScenePropertySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneBoolPropertySystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneBoolPropertySystem
        fun GetDefaultObject(): MovieSceneBoolPropertySystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneBoolPropertySystem
        fun C(Other: UObject): MovieSceneBoolPropertySystem
        fun C(Other: Any): MovieSceneBoolPropertySystem
    }
}

external open class MovieSceneBoolTrack : MovieScenePropertyTrack {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneBoolTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneBoolTrack
        fun GetDefaultObject(): MovieSceneBoolTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneBoolTrack
        fun C(Other: UObject): MovieSceneBoolTrack
        fun C(Other: Any): MovieSceneBoolTrack
    }
}

external open class MovieSceneBytePropertySystem : MovieScenePropertySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneBytePropertySystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneBytePropertySystem
        fun GetDefaultObject(): MovieSceneBytePropertySystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneBytePropertySystem
        fun C(Other: UObject): MovieSceneBytePropertySystem
        fun C(Other: Any): MovieSceneBytePropertySystem
    }
}

external open class MovieSceneByteChannel : MovieSceneChannel {
    open var Times: Array<FrameNumber>
    open var DefaultValue: Number
    open var bHasDefaultValue: Boolean
    open var Values: Array<Number>
    open var Enum: Enum
    override fun clone(): MovieSceneByteChannel

    companion object {
        fun C(Other: UObject): MovieSceneByteChannel
        fun C(Other: Any): MovieSceneByteChannel
    }
}

external open class MovieSceneByteSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var ByteCurve: MovieSceneByteChannel

    companion object {
        fun Load(ResourceName: String): MovieSceneByteSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneByteSection
        fun GetDefaultObject(): MovieSceneByteSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneByteSection
        fun C(Other: UObject): MovieSceneByteSection
        fun C(Other: Any): MovieSceneByteSection
    }
}

external open class MovieSceneByteTrack : MovieScenePropertyTrack {
    constructor()
    constructor(Outer: UObject)
    open var Enum: Enum

    companion object {
        fun Load(ResourceName: String): MovieSceneByteTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneByteTrack
        fun GetDefaultObject(): MovieSceneByteTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneByteTrack
        fun C(Other: UObject): MovieSceneByteTrack
        fun C(Other: Any): MovieSceneByteTrack
    }
}

external open class MovieSceneCameraAnimSectionData {
    open var CameraAnim: CameraAnim
    open var PlayRate: Number
    open var PlayScale: Number
    open var BlendInTime: Number
    open var BlendOutTime: Number
    open var bLooping: Boolean
    open fun clone(): MovieSceneCameraAnimSectionData

    companion object {
        fun C(Other: UObject): MovieSceneCameraAnimSectionData
        fun C(Other: Any): MovieSceneCameraAnimSectionData
    }
}

external open class MovieSceneCameraAnimSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var AnimData: MovieSceneCameraAnimSectionData
    open var CameraAnim: CameraAnim
    open var PlayRate: Number
    open var PlayScale: Number
    open var BlendInTime: Number
    open var BlendOutTime: Number
    open var bLooping: Boolean

    companion object {
        fun Load(ResourceName: String): MovieSceneCameraAnimSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCameraAnimSection
        fun GetDefaultObject(): MovieSceneCameraAnimSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCameraAnimSection
        fun C(Other: UObject): MovieSceneCameraAnimSection
        fun C(Other: Any): MovieSceneCameraAnimSection
    }
}

external open class MovieSceneCameraAnimTrack : MovieSceneNameableTrack {
    constructor()
    constructor(Outer: UObject)
    open var CameraAnimSections: Array<MovieSceneSection>

    companion object {
        fun Load(ResourceName: String): MovieSceneCameraAnimTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCameraAnimTrack
        fun GetDefaultObject(): MovieSceneCameraAnimTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCameraAnimTrack
        fun C(Other: UObject): MovieSceneCameraAnimTrack
        fun C(Other: Any): MovieSceneCameraAnimTrack
    }
}

external open class MovieSceneCameraCutSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var bLockPreviousCamera: Boolean
    open var CameraGuid: Guid
    open var CameraBindingID: MovieSceneObjectBindingID
    open var InitialCameraCutTransform: Transform
    open var bHasInitialCameraCutTransform: Boolean
    open var ThumbnailReferenceOffset: Number
    open fun SetCameraBindingID(InCameraBindingID: MovieSceneObjectBindingID)
    open fun GetCameraBindingID(): MovieSceneObjectBindingID

    companion object {
        fun Load(ResourceName: String): MovieSceneCameraCutSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCameraCutSection
        fun GetDefaultObject(): MovieSceneCameraCutSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCameraCutSection
        fun C(Other: UObject): MovieSceneCameraCutSection
        fun C(Other: Any): MovieSceneCameraCutSection
    }
}

external open class MovieSceneCameraCutTrack : MovieSceneNameableTrack {
    constructor()
    constructor(Outer: UObject)
    open var bCanBlend: Boolean
    open var Sections: Array<MovieSceneSection>

    companion object {
        fun Load(ResourceName: String): MovieSceneCameraCutTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCameraCutTrack
        fun GetDefaultObject(): MovieSceneCameraCutTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCameraCutTrack
        fun C(Other: UObject): MovieSceneCameraCutTrack
        fun C(Other: Any): MovieSceneCameraCutTrack
    }
}

external open class MovieSceneTrackInstanceInput {
    open var Section: MovieSceneSection
    open fun clone(): MovieSceneTrackInstanceInput

    companion object {
        fun C(Other: UObject): MovieSceneTrackInstanceInput
        fun C(Other: Any): MovieSceneTrackInstanceInput
    }
}

external open class MovieSceneTrackInstance : UObject {
    constructor()
    constructor(Outer: UObject)
    open var AnimatedObject: UObject
    open var bIsMasterTrackInstance: Boolean
    open var Linker: MovieSceneEntitySystemLinker
    open var Inputs: Array<MovieSceneTrackInstanceInput>

    companion object {
        fun Load(ResourceName: String): MovieSceneTrackInstance
        fun Find(Outer: UObject, ResourceName: String): MovieSceneTrackInstance
        fun GetDefaultObject(): MovieSceneTrackInstance
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneTrackInstance
        fun C(Other: UObject): MovieSceneTrackInstance
        fun C(Other: Any): MovieSceneTrackInstance
    }
}

external open class MovieSceneCameraCutTrackInstance : MovieSceneTrackInstance {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneCameraCutTrackInstance
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCameraCutTrackInstance
        fun GetDefaultObject(): MovieSceneCameraCutTrackInstance
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCameraCutTrackInstance
        fun C(Other: UObject): MovieSceneCameraCutTrackInstance
        fun C(Other: Any): MovieSceneCameraCutTrackInstance
    }
}

external open class MovieSceneCameraShakeSectionData {
    open var ShakeClass: UnrealEngineClass
    open var PlayScale: Number
    open var PlaySpace: String /* "CameraLocal" | "World" | "UserDefined" | "ECameraShakePlaySpace_MAX" */
    open var UserDefinedPlaySpace: Rotator
    open fun clone(): MovieSceneCameraShakeSectionData

    companion object {
        fun C(Other: UObject): MovieSceneCameraShakeSectionData
        fun C(Other: Any): MovieSceneCameraShakeSectionData
    }
}

external open class MovieSceneCameraShakeSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var ShakeData: MovieSceneCameraShakeSectionData
    open var ShakeClass: UnrealEngineClass
    open var PlayScale: Number
    open var PlaySpace: String /* "CameraLocal" | "World" | "UserDefined" | "ECameraShakePlaySpace_MAX" */
    open var UserDefinedPlaySpace: Rotator

    companion object {
        fun Load(ResourceName: String): MovieSceneCameraShakeSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCameraShakeSection
        fun GetDefaultObject(): MovieSceneCameraShakeSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCameraShakeSection
        fun C(Other: UObject): MovieSceneCameraShakeSection
        fun C(Other: Any): MovieSceneCameraShakeSection
    }
}

external open class MovieSceneCameraShakeSourceShakeSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var ShakeData: MovieSceneCameraShakeSectionData

    companion object {
        fun Load(ResourceName: String): MovieSceneCameraShakeSourceShakeSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCameraShakeSourceShakeSection
        fun GetDefaultObject(): MovieSceneCameraShakeSourceShakeSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCameraShakeSourceShakeSection
        fun C(Other: UObject): MovieSceneCameraShakeSourceShakeSection
        fun C(Other: Any): MovieSceneCameraShakeSourceShakeSection
    }
}

external open class MovieSceneCameraShakeSourceShakeTrack : MovieSceneNameableTrack {
    constructor()
    constructor(Outer: UObject)
    open var CameraShakeSections: Array<MovieSceneSection>

    companion object {
        fun Load(ResourceName: String): MovieSceneCameraShakeSourceShakeTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCameraShakeSourceShakeTrack
        fun GetDefaultObject(): MovieSceneCameraShakeSourceShakeTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCameraShakeSourceShakeTrack
        fun C(Other: UObject): MovieSceneCameraShakeSourceShakeTrack
        fun C(Other: Any): MovieSceneCameraShakeSourceShakeTrack
    }
}

external open class MovieSceneCameraShakeSourceTrigger {
    open var ShakeClass: UnrealEngineClass
    open var PlayScale: Number
    open var PlaySpace: String /* "CameraLocal" | "World" | "UserDefined" | "ECameraShakePlaySpace_MAX" */
    open var UserDefinedPlaySpace: Rotator
    open fun clone(): MovieSceneCameraShakeSourceTrigger

    companion object {
        fun C(Other: UObject): MovieSceneCameraShakeSourceTrigger
        fun C(Other: Any): MovieSceneCameraShakeSourceTrigger
    }
}

external open class MovieSceneCameraShakeSourceTriggerChannel : MovieSceneChannel {
    open var KeyTimes: Array<FrameNumber>
    open var KeyValues: Array<MovieSceneCameraShakeSourceTrigger>
    override fun clone(): MovieSceneCameraShakeSourceTriggerChannel

    companion object {
        fun C(Other: UObject): MovieSceneCameraShakeSourceTriggerChannel
        fun C(Other: Any): MovieSceneCameraShakeSourceTriggerChannel
    }
}

external open class MovieSceneCameraShakeSourceTriggerSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var Channel: MovieSceneCameraShakeSourceTriggerChannel

    companion object {
        fun Load(ResourceName: String): MovieSceneCameraShakeSourceTriggerSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCameraShakeSourceTriggerSection
        fun GetDefaultObject(): MovieSceneCameraShakeSourceTriggerSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCameraShakeSourceTriggerSection
        fun C(Other: UObject): MovieSceneCameraShakeSourceTriggerSection
        fun C(Other: Any): MovieSceneCameraShakeSourceTriggerSection
    }
}

external open class MovieSceneCameraShakeSourceTriggerTrack : MovieSceneTrack {
    constructor()
    constructor(Outer: UObject)
    open var Sections: Array<MovieSceneSection>

    companion object {
        fun Load(ResourceName: String): MovieSceneCameraShakeSourceTriggerTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCameraShakeSourceTriggerTrack
        fun GetDefaultObject(): MovieSceneCameraShakeSourceTriggerTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCameraShakeSourceTriggerTrack
        fun C(Other: UObject): MovieSceneCameraShakeSourceTriggerTrack
        fun C(Other: Any): MovieSceneCameraShakeSourceTriggerTrack
    }
}

external open class MovieSceneCameraShakeEvaluator : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneCameraShakeEvaluator
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCameraShakeEvaluator
        fun GetDefaultObject(): MovieSceneCameraShakeEvaluator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCameraShakeEvaluator
        fun C(Other: UObject): MovieSceneCameraShakeEvaluator
        fun C(Other: Any): MovieSceneCameraShakeEvaluator
    }
}

external open class MovieSceneCameraShakeTrack : MovieSceneNameableTrack {
    constructor()
    constructor(Outer: UObject)
    open var CameraShakeSections: Array<MovieSceneSection>

    companion object {
        fun Load(ResourceName: String): MovieSceneCameraShakeTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCameraShakeTrack
        fun GetDefaultObject(): MovieSceneCameraShakeTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCameraShakeTrack
        fun C(Other: UObject): MovieSceneCameraShakeTrack
        fun C(Other: Any): MovieSceneCameraShakeTrack
    }
}

external open class MovieSceneCinematicShotSection : MovieSceneSubSection {
    constructor()
    constructor(Outer: UObject)
    open var ShotDisplayName: String
    open var DisplayName: String
    open var ThumbnailReferenceOffset: Number
    open fun SetShotDisplayName(InShotDisplayName: String)
    open fun GetShotDisplayName(): String

    companion object {
        fun Load(ResourceName: String): MovieSceneCinematicShotSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCinematicShotSection
        fun GetDefaultObject(): MovieSceneCinematicShotSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCinematicShotSection
        fun C(Other: UObject): MovieSceneCinematicShotSection
        fun C(Other: Any): MovieSceneCinematicShotSection
    }
}

external open class MovieSceneSubTrack : MovieSceneNameableTrack {
    constructor()
    constructor(Outer: UObject)
    open var Sections: Array<MovieSceneSection>

    companion object {
        fun Load(ResourceName: String): MovieSceneSubTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneSubTrack
        fun GetDefaultObject(): MovieSceneSubTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneSubTrack
        fun C(Other: UObject): MovieSceneSubTrack
        fun C(Other: Any): MovieSceneSubTrack
    }
}

external open class MovieSceneCinematicShotTrack : MovieSceneSubTrack {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneCinematicShotTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCinematicShotTrack
        fun GetDefaultObject(): MovieSceneCinematicShotTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCinematicShotTrack
        fun C(Other: UObject): MovieSceneCinematicShotTrack
        fun C(Other: Any): MovieSceneCinematicShotTrack
    }
}

external open class MovieSceneColorPropertySystem : MovieScenePropertySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneColorPropertySystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneColorPropertySystem
        fun GetDefaultObject(): MovieSceneColorPropertySystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneColorPropertySystem
        fun C(Other: UObject): MovieSceneColorPropertySystem
        fun C(Other: Any): MovieSceneColorPropertySystem
    }
}

external open class MovieSceneColorSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var RedCurve: MovieSceneFloatChannel
    open var GreenCurve: MovieSceneFloatChannel
    open var BlueCurve: MovieSceneFloatChannel
    open var AlphaCurve: MovieSceneFloatChannel

    companion object {
        fun Load(ResourceName: String): MovieSceneColorSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneColorSection
        fun GetDefaultObject(): MovieSceneColorSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneColorSection
        fun C(Other: UObject): MovieSceneColorSection
        fun C(Other: Any): MovieSceneColorSection
    }
}

external open class MovieSceneColorTrack : MovieScenePropertyTrack {
    constructor()
    constructor(Outer: UObject)
    open var bIsSlateColor: Boolean

    companion object {
        fun Load(ResourceName: String): MovieSceneColorTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneColorTrack
        fun GetDefaultObject(): MovieSceneColorTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneColorTrack
        fun C(Other: UObject): MovieSceneColorTrack
        fun C(Other: Any): MovieSceneColorTrack
    }
}

external open class MovieSceneComponentAttachmentInvalidatorSystem : MovieSceneEntityInstantiatorSystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneComponentAttachmentInvalidatorSystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneComponentAttachmentInvalidatorSystem
        fun GetDefaultObject(): MovieSceneComponentAttachmentInvalidatorSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneComponentAttachmentInvalidatorSystem
        fun C(Other: UObject): MovieSceneComponentAttachmentInvalidatorSystem
        fun C(Other: Any): MovieSceneComponentAttachmentInvalidatorSystem
    }
}

external open class MovieSceneComponentAttachmentSystem : MovieSceneEntityInstantiatorSystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneComponentAttachmentSystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneComponentAttachmentSystem
        fun GetDefaultObject(): MovieSceneComponentAttachmentSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneComponentAttachmentSystem
        fun C(Other: UObject): MovieSceneComponentAttachmentSystem
        fun C(Other: Any): MovieSceneComponentAttachmentSystem
    }
}

external open class MovieSceneComponentMobilitySystem : MovieSceneEntityInstantiatorSystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneComponentMobilitySystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneComponentMobilitySystem
        fun GetDefaultObject(): MovieSceneComponentMobilitySystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneComponentMobilitySystem
        fun C(Other: UObject): MovieSceneComponentMobilitySystem
        fun C(Other: Any): MovieSceneComponentMobilitySystem
    }
}

external open class MovieSceneComponentTransformSystem : MovieScenePropertySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneComponentTransformSystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneComponentTransformSystem
        fun GetDefaultObject(): MovieSceneComponentTransformSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneComponentTransformSystem
        fun C(Other: UObject): MovieSceneComponentTransformSystem
        fun C(Other: Any): MovieSceneComponentTransformSystem
    }
}

external open class MovieSceneDeferredComponentMovementSystem : MovieSceneEntitySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneDeferredComponentMovementSystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneDeferredComponentMovementSystem
        fun GetDefaultObject(): MovieSceneDeferredComponentMovementSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneDeferredComponentMovementSystem
        fun C(Other: UObject): MovieSceneDeferredComponentMovementSystem
        fun C(Other: Any): MovieSceneDeferredComponentMovementSystem
    }
}

external open class MovieSceneEnumPropertySystem : MovieScenePropertySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneEnumPropertySystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneEnumPropertySystem
        fun GetDefaultObject(): MovieSceneEnumPropertySystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneEnumPropertySystem
        fun C(Other: UObject): MovieSceneEnumPropertySystem
        fun C(Other: Any): MovieSceneEnumPropertySystem
    }
}

external open class MovieSceneEnumSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var EnumCurve: MovieSceneByteChannel

    companion object {
        fun Load(ResourceName: String): MovieSceneEnumSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneEnumSection
        fun GetDefaultObject(): MovieSceneEnumSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneEnumSection
        fun C(Other: UObject): MovieSceneEnumSection
        fun C(Other: Any): MovieSceneEnumSection
    }
}

external open class MovieSceneEnumTrack : MovieScenePropertyTrack {
    constructor()
    constructor(Outer: UObject)
    open var Enum: Enum

    companion object {
        fun Load(ResourceName: String): MovieSceneEnumTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneEnumTrack
        fun GetDefaultObject(): MovieSceneEnumTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneEnumTrack
        fun C(Other: UObject): MovieSceneEnumTrack
        fun C(Other: Any): MovieSceneEnumTrack
    }
}

external open class MovieSceneEulerTransformPropertySystem : MovieScenePropertySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneEulerTransformPropertySystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneEulerTransformPropertySystem
        fun GetDefaultObject(): MovieSceneEulerTransformPropertySystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneEulerTransformPropertySystem
        fun C(Other: UObject): MovieSceneEulerTransformPropertySystem
        fun C(Other: Any): MovieSceneEulerTransformPropertySystem
    }
}

external open class MovieSceneEulerTransformTrack : MovieScenePropertyTrack {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneEulerTransformTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneEulerTransformTrack
        fun GetDefaultObject(): MovieSceneEulerTransformTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneEulerTransformTrack
        fun C(Other: UObject): MovieSceneEulerTransformTrack
        fun C(Other: Any): MovieSceneEulerTransformTrack
    }
}

external open class MovieSceneEventPtrs {
    open var UFunction: UFunction
    open var BoundObjectProperty: Any
    open fun clone(): MovieSceneEventPtrs

    companion object {
        fun C(Other: UObject): MovieSceneEventPtrs
        fun C(Other: Any): MovieSceneEventPtrs
    }
}

external open class MovieSceneEvent {
    open var Ptrs: MovieSceneEventPtrs
    open var PayloadVariables: Any
    open var CompiledFunctionName: String
    open var BoundObjectPinName: String
    open var WeakEndpoint: Any
    open var GraphGuid: Guid
    open var NodeGuid: Guid
    open var FunctionEntry: Any
    open fun clone(): MovieSceneEvent

    companion object {
        fun C(Other: UObject): MovieSceneEvent
        fun C(Other: Any): MovieSceneEvent
    }
}

external open class MovieSceneEventRepeaterSection : MovieSceneEventSectionBase {
    constructor()
    constructor(Outer: UObject)
    open var Event: MovieSceneEvent

    companion object {
        fun Load(ResourceName: String): MovieSceneEventRepeaterSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneEventRepeaterSection
        fun GetDefaultObject(): MovieSceneEventRepeaterSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneEventRepeaterSection
        fun C(Other: UObject): MovieSceneEventRepeaterSection
        fun C(Other: Any): MovieSceneEventRepeaterSection
    }
}

external open class NameCurveKey {
    open var Time: Number
    open var Value: String
    open fun clone(): NameCurveKey

    companion object {
        fun C(Other: UObject): NameCurveKey
        fun C(Other: Any): NameCurveKey
    }
}

external open class NameCurve : IndexedCurve {
    open var Keys: Array<NameCurveKey>
    override fun clone(): NameCurve

    companion object {
        fun C(Other: UObject): NameCurve
        fun C(Other: Any): NameCurve
    }
}

external open class MovieSceneEventParameters {
    open fun clone(): MovieSceneEventParameters

    companion object {
        fun C(Other: UObject): MovieSceneEventParameters
        fun C(Other: Any): MovieSceneEventParameters
    }
}

external open class EventPayload {
    open var EventName: String
    open var Parameters: MovieSceneEventParameters
    open fun clone(): EventPayload

    companion object {
        fun C(Other: UObject): EventPayload
        fun C(Other: Any): EventPayload
    }
}

external open class MovieSceneEventSectionData : MovieSceneChannel {
    open var Times: Array<FrameNumber>
    open var KeyValues: Array<EventPayload>
    open var KeyTimes: Array<Number>
    override fun clone(): MovieSceneEventSectionData

    companion object {
        fun C(Other: UObject): MovieSceneEventSectionData
        fun C(Other: Any): MovieSceneEventSectionData
    }
}

external open class MovieSceneEventSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var Events: NameCurve
    open var EventData: MovieSceneEventSectionData

    companion object {
        fun Load(ResourceName: String): MovieSceneEventSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneEventSection
        fun GetDefaultObject(): MovieSceneEventSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneEventSection
        fun C(Other: UObject): MovieSceneEventSection
        fun C(Other: Any): MovieSceneEventSection
    }
}

external open class MovieSceneEventSystem : MovieSceneEntitySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneEventSystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneEventSystem
        fun GetDefaultObject(): MovieSceneEventSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneEventSystem
        fun C(Other: UObject): MovieSceneEventSystem
        fun C(Other: Any): MovieSceneEventSystem
    }
}

external open class MovieScenePreSpawnEventSystem : MovieSceneEventSystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieScenePreSpawnEventSystem
        fun Find(Outer: UObject, ResourceName: String): MovieScenePreSpawnEventSystem
        fun GetDefaultObject(): MovieScenePreSpawnEventSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScenePreSpawnEventSystem
        fun C(Other: UObject): MovieScenePreSpawnEventSystem
        fun C(Other: Any): MovieScenePreSpawnEventSystem
    }
}

external open class MovieScenePostSpawnEventSystem : MovieSceneEventSystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieScenePostSpawnEventSystem
        fun Find(Outer: UObject, ResourceName: String): MovieScenePostSpawnEventSystem
        fun GetDefaultObject(): MovieScenePostSpawnEventSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScenePostSpawnEventSystem
        fun C(Other: UObject): MovieScenePostSpawnEventSystem
        fun C(Other: Any): MovieScenePostSpawnEventSystem
    }
}

external open class MovieScenePostEvalEventSystem : MovieSceneEventSystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieScenePostEvalEventSystem
        fun Find(Outer: UObject, ResourceName: String): MovieScenePostEvalEventSystem
        fun GetDefaultObject(): MovieScenePostEvalEventSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScenePostEvalEventSystem
        fun C(Other: UObject): MovieScenePostEvalEventSystem
        fun C(Other: Any): MovieScenePostEvalEventSystem
    }
}

external object EFireEventsAtPosition {
    var AtStartOfEvaluation: String /* "AtStartOfEvaluation" */
    var AtEndOfEvaluation: String /* "AtEndOfEvaluation" */
    var AfterSpawn: String /* "AfterSpawn" */
    var EFireEventsAtPosition_MAX: String /* "EFireEventsAtPosition_MAX" */
}

external open class MovieSceneEventTrack : MovieSceneNameableTrack {
    constructor()
    constructor(Outer: UObject)
    open var bFireEventsWhenForwards: Boolean
    open var bFireEventsWhenBackwards: Boolean
    open var EventPosition: String /* "AtStartOfEvaluation" | "AtEndOfEvaluation" | "AfterSpawn" | "EFireEventsAtPosition_MAX" */
    open var Sections: Array<MovieSceneSection>

    companion object {
        fun Load(ResourceName: String): MovieSceneEventTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneEventTrack
        fun GetDefaultObject(): MovieSceneEventTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneEventTrack
        fun C(Other: UObject): MovieSceneEventTrack
        fun C(Other: Any): MovieSceneEventTrack
    }
}

external open class MovieSceneEventChannel : MovieSceneChannel {
    open var KeyTimes: Array<FrameNumber>
    open var KeyValues: Array<MovieSceneEvent>
    override fun clone(): MovieSceneEventChannel

    companion object {
        fun C(Other: UObject): MovieSceneEventChannel
        fun C(Other: Any): MovieSceneEventChannel
    }
}

external open class MovieSceneEventTriggerSection : MovieSceneEventSectionBase {
    constructor()
    constructor(Outer: UObject)
    open var EventChannel: MovieSceneEventChannel

    companion object {
        fun Load(ResourceName: String): MovieSceneEventTriggerSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneEventTriggerSection
        fun GetDefaultObject(): MovieSceneEventTriggerSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneEventTriggerSection
        fun C(Other: UObject): MovieSceneEventTriggerSection
        fun C(Other: Any): MovieSceneEventTriggerSection
    }
}

external open class MovieSceneFadeSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var FloatCurve: MovieSceneFloatChannel
    open var FadeColor: LinearColor
    open var bFadeAudio: Boolean

    companion object {
        fun Load(ResourceName: String): MovieSceneFadeSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneFadeSection
        fun GetDefaultObject(): MovieSceneFadeSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneFadeSection
        fun C(Other: UObject): MovieSceneFadeSection
        fun C(Other: Any): MovieSceneFadeSection
    }
}

external open class MovieSceneFloatTrack : MovieScenePropertyTrack {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneFloatTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneFloatTrack
        fun GetDefaultObject(): MovieSceneFloatTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneFloatTrack
        fun C(Other: UObject): MovieSceneFloatTrack
        fun C(Other: Any): MovieSceneFloatTrack
    }
}

external open class MovieSceneFadeTrack : MovieSceneFloatTrack {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneFadeTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneFadeTrack
        fun GetDefaultObject(): MovieSceneFadeTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneFadeTrack
        fun C(Other: UObject): MovieSceneFadeTrack
        fun C(Other: Any): MovieSceneFadeTrack
    }
}

external open class MovieSceneFloatPropertySystem : MovieScenePropertySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneFloatPropertySystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneFloatPropertySystem
        fun GetDefaultObject(): MovieSceneFloatPropertySystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneFloatPropertySystem
        fun C(Other: UObject): MovieSceneFloatPropertySystem
        fun C(Other: Any): MovieSceneFloatPropertySystem
    }
}

external open class MovieSceneFloatSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var FloatCurve: MovieSceneFloatChannel

    companion object {
        fun Load(ResourceName: String): MovieSceneFloatSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneFloatSection
        fun GetDefaultObject(): MovieSceneFloatSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneFloatSection
        fun C(Other: UObject): MovieSceneFloatSection
        fun C(Other: Any): MovieSceneFloatSection
    }
}

external open class MovieSceneHierarchicalBiasSystem : MovieSceneEntityInstantiatorSystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneHierarchicalBiasSystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneHierarchicalBiasSystem
        fun GetDefaultObject(): MovieSceneHierarchicalBiasSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneHierarchicalBiasSystem
        fun C(Other: UObject): MovieSceneHierarchicalBiasSystem
        fun C(Other: Any): MovieSceneHierarchicalBiasSystem
    }
}

external open class MovieSceneInitialValueSystem : MovieSceneEntityInstantiatorSystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneInitialValueSystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneInitialValueSystem
        fun GetDefaultObject(): MovieSceneInitialValueSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneInitialValueSystem
        fun C(Other: UObject): MovieSceneInitialValueSystem
        fun C(Other: Any): MovieSceneInitialValueSystem
    }
}

external open class MovieSceneIntegerPropertySystem : MovieScenePropertySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneIntegerPropertySystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneIntegerPropertySystem
        fun GetDefaultObject(): MovieSceneIntegerPropertySystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneIntegerPropertySystem
        fun C(Other: UObject): MovieSceneIntegerPropertySystem
        fun C(Other: Any): MovieSceneIntegerPropertySystem
    }
}

external open class MovieSceneIntegerChannel : MovieSceneChannel {
    open var Times: Array<FrameNumber>
    open var DefaultValue: Number
    open var bHasDefaultValue: Boolean
    open var Values: Array<Number>
    override fun clone(): MovieSceneIntegerChannel

    companion object {
        fun C(Other: UObject): MovieSceneIntegerChannel
        fun C(Other: Any): MovieSceneIntegerChannel
    }
}

external open class MovieSceneIntegerSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var IntegerCurve: MovieSceneIntegerChannel

    companion object {
        fun Load(ResourceName: String): MovieSceneIntegerSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneIntegerSection
        fun GetDefaultObject(): MovieSceneIntegerSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneIntegerSection
        fun C(Other: UObject): MovieSceneIntegerSection
        fun C(Other: Any): MovieSceneIntegerSection
    }
}

external open class MovieSceneIntegerTrack : MovieScenePropertyTrack {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneIntegerTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneIntegerTrack
        fun GetDefaultObject(): MovieSceneIntegerTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneIntegerTrack
        fun C(Other: UObject): MovieSceneIntegerTrack
        fun C(Other: Any): MovieSceneIntegerTrack
    }
}

external open class MovieSceneInterrogatedPropertyInstantiatorSystem : MovieSceneEntityInstantiatorSystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneInterrogatedPropertyInstantiatorSystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneInterrogatedPropertyInstantiatorSystem
        fun GetDefaultObject(): MovieSceneInterrogatedPropertyInstantiatorSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneInterrogatedPropertyInstantiatorSystem
        fun C(Other: UObject): MovieSceneInterrogatedPropertyInstantiatorSystem
        fun C(Other: Any): MovieSceneInterrogatedPropertyInstantiatorSystem
    }
}

external object ELevelVisibility {
    var Visible: String /* "Visible" */
    var Hidden: String /* "Hidden" */
    var ELevelVisibility_MAX: String /* "ELevelVisibility_MAX" */
}

external open class MovieSceneLevelVisibilitySection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var Visibility: String /* "Visible" | "Hidden" | "ELevelVisibility_MAX" */
    open var LevelNames: Array<String>
    open fun SetVisibility(InVisibility: String /* "Visible" | "Hidden" | "ELevelVisibility_MAX" */)
    open fun SetLevelNames(InLevelNames: Array<String>)
    open fun GetVisibility(): String /* "Visible" | "Hidden" | "ELevelVisibility_MAX" */
    open fun GetLevelNames(): Array<String>

    companion object {
        fun Load(ResourceName: String): MovieSceneLevelVisibilitySection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneLevelVisibilitySection
        fun GetDefaultObject(): MovieSceneLevelVisibilitySection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneLevelVisibilitySection
        fun C(Other: UObject): MovieSceneLevelVisibilitySection
        fun C(Other: Any): MovieSceneLevelVisibilitySection
    }
}

external open class MovieSceneLevelVisibilitySystem : MovieSceneEntitySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneLevelVisibilitySystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneLevelVisibilitySystem
        fun GetDefaultObject(): MovieSceneLevelVisibilitySystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneLevelVisibilitySystem
        fun C(Other: UObject): MovieSceneLevelVisibilitySystem
        fun C(Other: Any): MovieSceneLevelVisibilitySystem
    }
}

external open class MovieSceneLevelVisibilityTrack : MovieSceneNameableTrack {
    constructor()
    constructor(Outer: UObject)
    open var Sections: Array<MovieSceneSection>

    companion object {
        fun Load(ResourceName: String): MovieSceneLevelVisibilityTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneLevelVisibilityTrack
        fun GetDefaultObject(): MovieSceneLevelVisibilityTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneLevelVisibilityTrack
        fun C(Other: UObject): MovieSceneLevelVisibilityTrack
        fun C(Other: Any): MovieSceneLevelVisibilityTrack
    }
}

external open class MovieSceneMaterialParameterCollectionTrack : MovieSceneMaterialTrack {
    constructor()
    constructor(Outer: UObject)
    open var MPC: MaterialParameterCollection

    companion object {
        fun Load(ResourceName: String): MovieSceneMaterialParameterCollectionTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneMaterialParameterCollectionTrack
        fun GetDefaultObject(): MovieSceneMaterialParameterCollectionTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneMaterialParameterCollectionTrack
        fun C(Other: UObject): MovieSceneMaterialParameterCollectionTrack
        fun C(Other: Any): MovieSceneMaterialParameterCollectionTrack
    }
}

external open class MovieSceneComponentMaterialTrack : MovieSceneMaterialTrack {
    constructor()
    constructor(Outer: UObject)
    open var MaterialIndex: Number

    companion object {
        fun Load(ResourceName: String): MovieSceneComponentMaterialTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneComponentMaterialTrack
        fun GetDefaultObject(): MovieSceneComponentMaterialTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneComponentMaterialTrack
        fun C(Other: UObject): MovieSceneComponentMaterialTrack
        fun C(Other: Any): MovieSceneComponentMaterialTrack
    }
}

external open class MovieSceneMotionVectorSimulationSystem : MovieSceneEntitySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneMotionVectorSimulationSystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneMotionVectorSimulationSystem
        fun GetDefaultObject(): MovieSceneMotionVectorSimulationSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneMotionVectorSimulationSystem
        fun C(Other: UObject): MovieSceneMotionVectorSimulationSystem
        fun C(Other: Any): MovieSceneMotionVectorSimulationSystem
    }
}

external open class MovieSceneObjectPathChannelKeyValue {
    open var SoftPtr: UObject
    open var HardPtr: UObject
    open fun clone(): MovieSceneObjectPathChannelKeyValue

    companion object {
        fun C(Other: UObject): MovieSceneObjectPathChannelKeyValue
        fun C(Other: Any): MovieSceneObjectPathChannelKeyValue
    }
}

external open class MovieSceneObjectPathChannel : MovieSceneChannel {
    open var PropertyClass: UnrealEngineClass
    open var Times: Array<FrameNumber>
    open var Values: Array<MovieSceneObjectPathChannelKeyValue>
    open var DefaultValue: MovieSceneObjectPathChannelKeyValue
    override fun clone(): MovieSceneObjectPathChannel

    companion object {
        fun C(Other: UObject): MovieSceneObjectPathChannel
        fun C(Other: Any): MovieSceneObjectPathChannel
    }
}

external open class MovieSceneObjectPropertySection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var ObjectChannel: MovieSceneObjectPathChannel

    companion object {
        fun Load(ResourceName: String): MovieSceneObjectPropertySection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneObjectPropertySection
        fun GetDefaultObject(): MovieSceneObjectPropertySection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneObjectPropertySection
        fun C(Other: UObject): MovieSceneObjectPropertySection
        fun C(Other: Any): MovieSceneObjectPropertySection
    }
}

external open class MovieSceneObjectPropertyTrack : MovieScenePropertyTrack {
    constructor()
    constructor(Outer: UObject)
    open var PropertyClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): MovieSceneObjectPropertyTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneObjectPropertyTrack
        fun GetDefaultObject(): MovieSceneObjectPropertyTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneObjectPropertyTrack
        fun C(Other: UObject): MovieSceneObjectPropertyTrack
        fun C(Other: Any): MovieSceneObjectPropertyTrack
    }
}

external open class MovieSceneBoolChannel : MovieSceneChannel {
    open var Times: Array<FrameNumber>
    open var DefaultValue: Boolean
    open var bHasDefaultValue: Boolean
    open var Values: Array<Boolean>
    override fun clone(): MovieSceneBoolChannel

    companion object {
        fun C(Other: UObject): MovieSceneBoolChannel
        fun C(Other: Any): MovieSceneBoolChannel
    }
}

external open class BoolParameterNameAndCurve {
    open var ParameterName: String
    open var ParameterCurve: MovieSceneBoolChannel
    open fun clone(): BoolParameterNameAndCurve

    companion object {
        fun C(Other: UObject): BoolParameterNameAndCurve
        fun C(Other: Any): BoolParameterNameAndCurve
    }
}

external open class ScalarParameterNameAndCurve {
    open var ParameterName: String
    open var ParameterCurve: MovieSceneFloatChannel
    open fun clone(): ScalarParameterNameAndCurve

    companion object {
        fun C(Other: UObject): ScalarParameterNameAndCurve
        fun C(Other: Any): ScalarParameterNameAndCurve
    }
}

external open class Vector2DParameterNameAndCurves {
    open var ParameterName: String
    open var XCurve: MovieSceneFloatChannel
    open var YCurve: MovieSceneFloatChannel
    open fun clone(): Vector2DParameterNameAndCurves

    companion object {
        fun C(Other: UObject): Vector2DParameterNameAndCurves
        fun C(Other: Any): Vector2DParameterNameAndCurves
    }
}

external open class VectorParameterNameAndCurves {
    open var ParameterName: String
    open var XCurve: MovieSceneFloatChannel
    open var YCurve: MovieSceneFloatChannel
    open var ZCurve: MovieSceneFloatChannel
    open fun clone(): VectorParameterNameAndCurves

    companion object {
        fun C(Other: UObject): VectorParameterNameAndCurves
        fun C(Other: Any): VectorParameterNameAndCurves
    }
}

external open class ColorParameterNameAndCurves {
    open var ParameterName: String
    open var RedCurve: MovieSceneFloatChannel
    open var GreenCurve: MovieSceneFloatChannel
    open var BlueCurve: MovieSceneFloatChannel
    open var AlphaCurve: MovieSceneFloatChannel
    open fun clone(): ColorParameterNameAndCurves

    companion object {
        fun C(Other: UObject): ColorParameterNameAndCurves
        fun C(Other: Any): ColorParameterNameAndCurves
    }
}

external open class TransformParameterNameAndCurves {
    open var ParameterName: String
    open var Translation: MovieSceneFloatChannel
    open var Rotation: MovieSceneFloatChannel
    open var Scale: MovieSceneFloatChannel
    open fun clone(): TransformParameterNameAndCurves

    companion object {
        fun C(Other: UObject): TransformParameterNameAndCurves
        fun C(Other: Any): TransformParameterNameAndCurves
    }
}

external interface `T$614` {
    var ParameterNames: Any
}

external open class MovieSceneParameterSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var BoolParameterNamesAndCurves: Array<BoolParameterNameAndCurve>
    open var ScalarParameterNamesAndCurves: Array<ScalarParameterNameAndCurve>
    open var Vector2DParameterNamesAndCurves: Array<Vector2DParameterNameAndCurves>
    open var VectorParameterNamesAndCurves: Array<VectorParameterNameAndCurves>
    open var ColorParameterNamesAndCurves: Array<ColorParameterNameAndCurves>
    open var TransformParameterNamesAndCurves: Array<TransformParameterNameAndCurves>
    open fun RemoveVectorParameter(InParameterName: String): Boolean
    open fun RemoveVector2DParameter(InParameterName: String): Boolean
    open fun RemoveTransformParameter(InParameterName: String): Boolean
    open fun RemoveScalarParameter(InParameterName: String): Boolean
    open fun RemoveColorParameter(InParameterName: String): Boolean
    open fun RemoveBoolParameter(InParameterName: String): Boolean
    open fun GetParameterNames(ParameterNames: Any = definedExternally): `T$614`
    open fun AddVectorParameterKey(InParameterName: String, InTime: FrameNumber, InValue: Vector)
    open fun AddVector2DParameterKey(InParameterName: String, InTime: FrameNumber, InValue: Vector2D)
    open fun AddTransformParameterKey(InParameterName: String, InTime: FrameNumber, InValue: Transform)
    open fun AddScalarParameterKey(InParameterName: String, InTime: FrameNumber, InValue: Number)
    open fun AddColorParameterKey(InParameterName: String, InTime: FrameNumber, InValue: LinearColor)
    open fun AddBoolParameterKey(InParameterName: String, InTime: FrameNumber, InValue: Boolean)

    companion object {
        fun Load(ResourceName: String): MovieSceneParameterSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneParameterSection
        fun GetDefaultObject(): MovieSceneParameterSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneParameterSection
        fun C(Other: UObject): MovieSceneParameterSection
        fun C(Other: Any): MovieSceneParameterSection
    }
}

external open class MovieSceneParticleParameterTrack : MovieSceneNameableTrack {
    constructor()
    constructor(Outer: UObject)
    open var Sections: Array<MovieSceneSection>

    companion object {
        fun Load(ResourceName: String): MovieSceneParticleParameterTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneParticleParameterTrack
        fun GetDefaultObject(): MovieSceneParticleParameterTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneParticleParameterTrack
        fun C(Other: UObject): MovieSceneParticleParameterTrack
        fun C(Other: Any): MovieSceneParticleParameterTrack
    }
}

external open class MovieSceneParticleChannel : MovieSceneByteChannel {
    override fun clone(): MovieSceneParticleChannel

    companion object {
        fun C(Other: UObject): MovieSceneParticleChannel
        fun C(Other: Any): MovieSceneParticleChannel
    }
}

external open class MovieSceneParticleSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var ParticleKeys: MovieSceneParticleChannel

    companion object {
        fun Load(ResourceName: String): MovieSceneParticleSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneParticleSection
        fun GetDefaultObject(): MovieSceneParticleSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneParticleSection
        fun C(Other: UObject): MovieSceneParticleSection
        fun C(Other: Any): MovieSceneParticleSection
    }
}

external open class MovieSceneParticleTrack : MovieSceneNameableTrack {
    constructor()
    constructor(Outer: UObject)
    open var ParticleSections: Array<MovieSceneSection>

    companion object {
        fun Load(ResourceName: String): MovieSceneParticleTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneParticleTrack
        fun GetDefaultObject(): MovieSceneParticleTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneParticleTrack
        fun C(Other: UObject): MovieSceneParticleTrack
        fun C(Other: Any): MovieSceneParticleTrack
    }
}

external open class MovieSceneBlenderSystem : MovieSceneEntitySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneBlenderSystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneBlenderSystem
        fun GetDefaultObject(): MovieSceneBlenderSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneBlenderSystem
        fun C(Other: UObject): MovieSceneBlenderSystem
        fun C(Other: Any): MovieSceneBlenderSystem
    }
}

external open class MovieScenePiecewiseBoolBlenderSystem : MovieSceneBlenderSystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieScenePiecewiseBoolBlenderSystem
        fun Find(Outer: UObject, ResourceName: String): MovieScenePiecewiseBoolBlenderSystem
        fun GetDefaultObject(): MovieScenePiecewiseBoolBlenderSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScenePiecewiseBoolBlenderSystem
        fun C(Other: UObject): MovieScenePiecewiseBoolBlenderSystem
        fun C(Other: Any): MovieScenePiecewiseBoolBlenderSystem
    }
}

external open class MovieScenePiecewiseByteBlenderSystem : MovieSceneBlenderSystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieScenePiecewiseByteBlenderSystem
        fun Find(Outer: UObject, ResourceName: String): MovieScenePiecewiseByteBlenderSystem
        fun GetDefaultObject(): MovieScenePiecewiseByteBlenderSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScenePiecewiseByteBlenderSystem
        fun C(Other: UObject): MovieScenePiecewiseByteBlenderSystem
        fun C(Other: Any): MovieScenePiecewiseByteBlenderSystem
    }
}

external open class MovieScenePiecewiseEnumBlenderSystem : MovieSceneBlenderSystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieScenePiecewiseEnumBlenderSystem
        fun Find(Outer: UObject, ResourceName: String): MovieScenePiecewiseEnumBlenderSystem
        fun GetDefaultObject(): MovieScenePiecewiseEnumBlenderSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScenePiecewiseEnumBlenderSystem
        fun C(Other: UObject): MovieScenePiecewiseEnumBlenderSystem
        fun C(Other: Any): MovieScenePiecewiseEnumBlenderSystem
    }
}

external open class MovieScenePiecewiseFloatBlenderSystem : MovieSceneBlenderSystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieScenePiecewiseFloatBlenderSystem
        fun Find(Outer: UObject, ResourceName: String): MovieScenePiecewiseFloatBlenderSystem
        fun GetDefaultObject(): MovieScenePiecewiseFloatBlenderSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScenePiecewiseFloatBlenderSystem
        fun C(Other: UObject): MovieScenePiecewiseFloatBlenderSystem
        fun C(Other: Any): MovieScenePiecewiseFloatBlenderSystem
    }
}

external open class MovieScenePiecewiseIntegerBlenderSystem : MovieSceneBlenderSystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieScenePiecewiseIntegerBlenderSystem
        fun Find(Outer: UObject, ResourceName: String): MovieScenePiecewiseIntegerBlenderSystem
        fun GetDefaultObject(): MovieScenePiecewiseIntegerBlenderSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScenePiecewiseIntegerBlenderSystem
        fun C(Other: UObject): MovieScenePiecewiseIntegerBlenderSystem
        fun C(Other: Any): MovieScenePiecewiseIntegerBlenderSystem
    }
}

external open class MovieScenePrimitiveMaterialSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var MaterialChannel: MovieSceneObjectPathChannel

    companion object {
        fun Load(ResourceName: String): MovieScenePrimitiveMaterialSection
        fun Find(Outer: UObject, ResourceName: String): MovieScenePrimitiveMaterialSection
        fun GetDefaultObject(): MovieScenePrimitiveMaterialSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScenePrimitiveMaterialSection
        fun C(Other: UObject): MovieScenePrimitiveMaterialSection
        fun C(Other: Any): MovieScenePrimitiveMaterialSection
    }
}

external open class MovieScenePrimitiveMaterialTrack : MovieScenePropertyTrack {
    constructor()
    constructor(Outer: UObject)
    open var MaterialIndex: Number

    companion object {
        fun Load(ResourceName: String): MovieScenePrimitiveMaterialTrack
        fun Find(Outer: UObject, ResourceName: String): MovieScenePrimitiveMaterialTrack
        fun GetDefaultObject(): MovieScenePrimitiveMaterialTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScenePrimitiveMaterialTrack
        fun C(Other: UObject): MovieScenePrimitiveMaterialTrack
        fun C(Other: Any): MovieScenePrimitiveMaterialTrack
    }
}

external open class MovieSceneQuaternionInterpolationRotationSystem : MovieSceneEntitySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneQuaternionInterpolationRotationSystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneQuaternionInterpolationRotationSystem
        fun GetDefaultObject(): MovieSceneQuaternionInterpolationRotationSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneQuaternionInterpolationRotationSystem
        fun C(Other: UObject): MovieSceneQuaternionInterpolationRotationSystem
        fun C(Other: Any): MovieSceneQuaternionInterpolationRotationSystem
    }
}

external open class MovieSceneSkeletalAnimationParams {
    open var Animation: AnimSequenceBase
    open var FirstLoopStartFrameOffset: FrameNumber
    open var StartFrameOffset: FrameNumber
    open var EndFrameOffset: FrameNumber
    open var PlayRate: Number
    open var bReverse: Boolean
    open var SlotName: String
    open var Weight: MovieSceneFloatChannel
    open var bSkipAnimNotifiers: Boolean
    open var bForceCustomMode: Boolean
    open var StartOffset: Number
    open var EndOffset: Number
    open fun clone(): MovieSceneSkeletalAnimationParams

    companion object {
        fun C(Other: UObject): MovieSceneSkeletalAnimationParams
        fun C(Other: Any): MovieSceneSkeletalAnimationParams
    }
}

external open class MovieSceneSkeletalAnimationSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var Params: MovieSceneSkeletalAnimationParams
    open var AnimSequence: AnimSequence
    open var Animation: AnimSequenceBase
    open var StartOffset: Number
    open var EndOffset: Number
    open var PlayRate: Number
    open var bReverse: Boolean
    open var SlotName: String
    open var StartLocationOffset: Vector
    open var StartRotationOffset: Rotator
    open var bMatchWithPrevious: Boolean
    open var MatchedBoneName: String
    open var MatchedLocationOffset: Vector
    open var MatchedRotationOffset: Rotator
    open var bMatchTranslation: Boolean
    open var bMatchIncludeZHeight: Boolean
    open var bMatchRotationYaw: Boolean
    open var bMatchRotationPitch: Boolean
    open var bMatchRotationRoll: Boolean
    open var bShowSkeleton: Boolean

    companion object {
        fun Load(ResourceName: String): MovieSceneSkeletalAnimationSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneSkeletalAnimationSection
        fun GetDefaultObject(): MovieSceneSkeletalAnimationSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneSkeletalAnimationSection
        fun C(Other: UObject): MovieSceneSkeletalAnimationSection
        fun C(Other: Any): MovieSceneSkeletalAnimationSection
    }
}

external open class MovieSceneSkeletalAnimRootMotionTrackParams {
    open fun clone(): MovieSceneSkeletalAnimRootMotionTrackParams

    companion object {
        fun C(Other: UObject): MovieSceneSkeletalAnimRootMotionTrackParams
        fun C(Other: Any): MovieSceneSkeletalAnimRootMotionTrackParams
    }
}

external open class MovieSceneSkeletalAnimationTrack : MovieSceneNameableTrack {
    constructor()
    constructor(Outer: UObject)
    open var AnimationSections: Array<MovieSceneSection>
    open var bUseLegacySectionIndexBlend: Boolean
    open var RootMotionParams: MovieSceneSkeletalAnimRootMotionTrackParams
    open var bBlendFirstChildOfRoot: Boolean
    open var bShowRootMotionTrail: Boolean

    companion object {
        fun Load(ResourceName: String): MovieSceneSkeletalAnimationTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneSkeletalAnimationTrack
        fun GetDefaultObject(): MovieSceneSkeletalAnimationTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneSkeletalAnimationTrack
        fun C(Other: UObject): MovieSceneSkeletalAnimationTrack
        fun C(Other: Any): MovieSceneSkeletalAnimationTrack
    }
}

external open class MovieSceneSlomoSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var FloatCurve: MovieSceneFloatChannel

    companion object {
        fun Load(ResourceName: String): MovieSceneSlomoSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneSlomoSection
        fun GetDefaultObject(): MovieSceneSlomoSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneSlomoSection
        fun C(Other: UObject): MovieSceneSlomoSection
        fun C(Other: Any): MovieSceneSlomoSection
    }
}

external open class MovieSceneSlomoTrack : MovieSceneFloatTrack {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneSlomoTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneSlomoTrack
        fun GetDefaultObject(): MovieSceneSlomoTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneSlomoTrack
        fun C(Other: UObject): MovieSceneSlomoTrack
        fun C(Other: Any): MovieSceneSlomoTrack
    }
}

external open class MovieSceneStringChannel : MovieSceneChannel {
    open var Times: Array<FrameNumber>
    open var Values: Array<String>
    open var DefaultValue: String
    open var bHasDefaultValue: Boolean
    override fun clone(): MovieSceneStringChannel

    companion object {
        fun C(Other: UObject): MovieSceneStringChannel
        fun C(Other: Any): MovieSceneStringChannel
    }
}

external open class MovieSceneStringSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var StringCurve: MovieSceneStringChannel

    companion object {
        fun Load(ResourceName: String): MovieSceneStringSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneStringSection
        fun GetDefaultObject(): MovieSceneStringSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneStringSection
        fun C(Other: UObject): MovieSceneStringSection
        fun C(Other: Any): MovieSceneStringSection
    }
}

external open class MovieSceneStringTrack : MovieScenePropertyTrack {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneStringTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneStringTrack
        fun GetDefaultObject(): MovieSceneStringTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneStringTrack
        fun C(Other: UObject): MovieSceneStringTrack
        fun C(Other: Any): MovieSceneStringTrack
    }
}

external open class MovieSceneTransformOriginSystem : MovieSceneEntitySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneTransformOriginSystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneTransformOriginSystem
        fun GetDefaultObject(): MovieSceneTransformOriginSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneTransformOriginSystem
        fun C(Other: UObject): MovieSceneTransformOriginSystem
        fun C(Other: Any): MovieSceneTransformOriginSystem
    }
}

external open class MovieSceneTransformTrack : MovieScenePropertyTrack {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneTransformTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneTransformTrack
        fun GetDefaultObject(): MovieSceneTransformTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneTransformTrack
        fun C(Other: UObject): MovieSceneTransformTrack
        fun C(Other: Any): MovieSceneTransformTrack
    }
}

external open class MovieSceneVectorPropertySystem : MovieScenePropertySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneVectorPropertySystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneVectorPropertySystem
        fun GetDefaultObject(): MovieSceneVectorPropertySystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneVectorPropertySystem
        fun C(Other: UObject): MovieSceneVectorPropertySystem
        fun C(Other: Any): MovieSceneVectorPropertySystem
    }
}

external open class MovieSceneVectorSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var Curves: MovieSceneFloatChannel
    open var ChannelsUsed: Number

    companion object {
        fun Load(ResourceName: String): MovieSceneVectorSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneVectorSection
        fun GetDefaultObject(): MovieSceneVectorSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneVectorSection
        fun C(Other: UObject): MovieSceneVectorSection
        fun C(Other: Any): MovieSceneVectorSection
    }
}

external open class MovieSceneVectorTrack : MovieScenePropertyTrack {
    constructor()
    constructor(Outer: UObject)
    open var NumChannelsUsed: Number

    companion object {
        fun Load(ResourceName: String): MovieSceneVectorTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneVectorTrack
        fun GetDefaultObject(): MovieSceneVectorTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneVectorTrack
        fun C(Other: UObject): MovieSceneVectorTrack
        fun C(Other: Any): MovieSceneVectorTrack
    }
}

external open class MovieSceneVisibilityTrack : MovieSceneBoolTrack {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneVisibilityTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneVisibilityTrack
        fun GetDefaultObject(): MovieSceneVisibilityTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneVisibilityTrack
        fun C(Other: UObject): MovieSceneVisibilityTrack
        fun C(Other: Any): MovieSceneVisibilityTrack
    }
}

external open class MovieSceneHierarchicalEasingInstantiatorSystem : MovieSceneEntityInstantiatorSystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneHierarchicalEasingInstantiatorSystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneHierarchicalEasingInstantiatorSystem
        fun GetDefaultObject(): MovieSceneHierarchicalEasingInstantiatorSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneHierarchicalEasingInstantiatorSystem
        fun C(Other: UObject): MovieSceneHierarchicalEasingInstantiatorSystem
        fun C(Other: Any): MovieSceneHierarchicalEasingInstantiatorSystem
    }
}

external open class WeightAndEasingEvaluatorSystem : MovieSceneEntitySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): WeightAndEasingEvaluatorSystem
        fun Find(Outer: UObject, ResourceName: String): WeightAndEasingEvaluatorSystem
        fun GetDefaultObject(): WeightAndEasingEvaluatorSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): WeightAndEasingEvaluatorSystem
        fun C(Other: UObject): WeightAndEasingEvaluatorSystem
        fun C(Other: Any): WeightAndEasingEvaluatorSystem
    }
}

external open class EngineCustomTimeStep : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EngineCustomTimeStep
        fun Find(Outer: UObject, ResourceName: String): EngineCustomTimeStep
        fun GetDefaultObject(): EngineCustomTimeStep
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EngineCustomTimeStep
        fun C(Other: UObject): EngineCustomTimeStep
        fun C(Other: Any): EngineCustomTimeStep
    }
}

external open class FixedFrameRateCustomTimeStep : EngineCustomTimeStep {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): FixedFrameRateCustomTimeStep
        fun Find(Outer: UObject, ResourceName: String): FixedFrameRateCustomTimeStep
        fun GetDefaultObject(): FixedFrameRateCustomTimeStep
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FixedFrameRateCustomTimeStep
        fun C(Other: UObject): FixedFrameRateCustomTimeStep
        fun C(Other: Any): FixedFrameRateCustomTimeStep
    }
}

external open class GenlockedCustomTimeStep : FixedFrameRateCustomTimeStep {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GenlockedCustomTimeStep
        fun Find(Outer: UObject, ResourceName: String): GenlockedCustomTimeStep
        fun GetDefaultObject(): GenlockedCustomTimeStep
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GenlockedCustomTimeStep
        fun C(Other: UObject): GenlockedCustomTimeStep
        fun C(Other: Any): GenlockedCustomTimeStep
    }
}

external open class GenlockedFixedRateCustomTimeStep : GenlockedCustomTimeStep {
    constructor()
    constructor(Outer: UObject)
    open var FrameRate: FrameRate

    companion object {
        fun Load(ResourceName: String): GenlockedFixedRateCustomTimeStep
        fun Find(Outer: UObject, ResourceName: String): GenlockedFixedRateCustomTimeStep
        fun GetDefaultObject(): GenlockedFixedRateCustomTimeStep
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GenlockedFixedRateCustomTimeStep
        fun C(Other: UObject): GenlockedFixedRateCustomTimeStep
        fun C(Other: Any): GenlockedFixedRateCustomTimeStep
    }
}

external object ETimecodeProviderSynchronizationState {
    var Closed: String /* "Closed" */
    var Error: String /* "Error" */
    var Synchronized: String /* "Synchronized" */
    var Synchronizing: String /* "Synchronizing" */
    var ETimecodeProviderSynchronizationState_MAX: String /* "ETimecodeProviderSynchronizationState_MAX" */
}

external interface `T$615` {
    var OutFrameTime: QualifiedFrameTime
    var `$`: Boolean
}

external open class TimecodeProvider : UObject {
    constructor()
    constructor(Outer: UObject)
    open var FrameDelay: Number
    open fun GetTimecode(): Timecode
    open fun GetSynchronizationState(): String /* "Closed" | "Error" | "Synchronized" | "Synchronizing" | "ETimecodeProviderSynchronizationState_MAX" */
    open fun GetQualifiedFrameTime(): QualifiedFrameTime
    open fun GetFrameRate(): FrameRate
    open fun GetDelayedTimecode(): Timecode
    open fun GetDelayedQualifiedFrameTime(): QualifiedFrameTime
    open fun FetchTimecode(OutFrameTime: QualifiedFrameTime = definedExternally): `T$615`
    open fun FetchAndUpdate()

    companion object {
        fun Load(ResourceName: String): TimecodeProvider
        fun Find(Outer: UObject, ResourceName: String): TimecodeProvider
        fun GetDefaultObject(): TimecodeProvider
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TimecodeProvider
        fun C(Other: UObject): TimecodeProvider
        fun C(Other: Any): TimecodeProvider
    }
}

external open class GenlockedTimecodeProvider : TimecodeProvider {
    constructor()
    constructor(Outer: UObject)
    open var bUseGenlockToCount: Boolean

    companion object {
        fun Load(ResourceName: String): GenlockedTimecodeProvider
        fun Find(Outer: UObject, ResourceName: String): GenlockedTimecodeProvider
        fun GetDefaultObject(): GenlockedTimecodeProvider
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GenlockedTimecodeProvider
        fun C(Other: UObject): GenlockedTimecodeProvider
        fun C(Other: Any): GenlockedTimecodeProvider
    }
}

external open class TimeManagementBlueprintLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TimeManagementBlueprintLibrary
        fun Find(Outer: UObject, ResourceName: String): TimeManagementBlueprintLibrary
        fun GetDefaultObject(): TimeManagementBlueprintLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TimeManagementBlueprintLibrary
        fun TransformTime(SourceTime: FrameTime, SourceRate: FrameRate, DestinationRate: FrameRate): FrameTime
        fun Subtract_FrameNumberInteger(A: FrameNumber, B: Number): FrameNumber
        fun Subtract_FrameNumberFrameNumber(A: FrameNumber, B: FrameNumber): FrameNumber
        fun SnapFrameTimeToRate(SourceTime: FrameTime, SourceRate: FrameRate, SnapToRate: FrameRate): FrameTime
        fun Multiply_SecondsFrameRate(TimeInSeconds: Number, FrameRate: FrameRate): FrameTime
        fun Multiply_FrameNumberInteger(A: FrameNumber, B: Number): FrameNumber
        fun IsValid_MultipleOf(InFrameRate: FrameRate, OtherFramerate: FrameRate): Boolean
        fun IsValid_Framerate(InFrameRate: FrameRate): Boolean
        fun GetTimecodeFrameRate(): FrameRate
        fun GetTimecode(): Timecode
        fun Divide_FrameNumberInteger(A: FrameNumber, B: Number): FrameNumber
        fun Conv_TimecodeToString(InTimecode: Timecode, bForceSignDisplay: Boolean): String
        fun Conv_QualifiedFrameTimeToSeconds(InFrameTime: QualifiedFrameTime): Number
        fun Conv_FrameRateToSeconds(InFrameRate: FrameRate): Number
        fun Conv_FrameNumberToInteger(InFrameNumber: FrameNumber): Number
        fun Add_FrameNumberInteger(A: FrameNumber, B: Number): FrameNumber
        fun Add_FrameNumberFrameNumber(A: FrameNumber, B: FrameNumber): FrameNumber
        fun C(Other: UObject): TimeManagementBlueprintLibrary
        fun C(Other: Any): TimeManagementBlueprintLibrary
    }
}

external open class TimeSynchronizationSource : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bUseForSynchronization: Boolean
    open var FrameOffset: Number

    companion object {
        fun Load(ResourceName: String): TimeSynchronizationSource
        fun Find(Outer: UObject, ResourceName: String): TimeSynchronizationSource
        fun GetDefaultObject(): TimeSynchronizationSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TimeSynchronizationSource
        fun C(Other: UObject): TimeSynchronizationSource
        fun C(Other: Any): TimeSynchronizationSource
    }
}

external open class MovieSceneCustomClockSource : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun OnTick(DeltaSeconds: Number, InPlayRate: Number)
    open fun OnStopPlaying(InStopTime: QualifiedFrameTime)
    open fun OnStartPlaying(InStartTime: QualifiedFrameTime)
    open fun OnRequestCurrentTime(InCurrentTime: QualifiedFrameTime, InPlayRate: Number): FrameTime

    companion object {
        fun Load(ResourceName: String): MovieSceneCustomClockSource
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCustomClockSource
        fun GetDefaultObject(): MovieSceneCustomClockSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCustomClockSource
        fun C(Other: UObject): MovieSceneCustomClockSource
        fun C(Other: Any): MovieSceneCustomClockSource
    }
}

external open class MovieSceneDeterminismSource : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneDeterminismSource
        fun Find(Outer: UObject, ResourceName: String): MovieSceneDeterminismSource
        fun GetDefaultObject(): MovieSceneDeterminismSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneDeterminismSource
        fun C(Other: UObject): MovieSceneDeterminismSource
        fun C(Other: Any): MovieSceneDeterminismSource
    }
}

external open class MovieSceneEntityProvider : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneEntityProvider
        fun Find(Outer: UObject, ResourceName: String): MovieSceneEntityProvider
        fun GetDefaultObject(): MovieSceneEntityProvider
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneEntityProvider
        fun C(Other: UObject): MovieSceneEntityProvider
        fun C(Other: Any): MovieSceneEntityProvider
    }
}

external open class MovieSceneEvaluationHook : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneEvaluationHook
        fun Find(Outer: UObject, ResourceName: String): MovieSceneEvaluationHook
        fun GetDefaultObject(): MovieSceneEvaluationHook
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneEvaluationHook
        fun C(Other: UObject): MovieSceneEvaluationHook
        fun C(Other: Any): MovieSceneEvaluationHook
    }
}

external open class MovieScenePlaybackClient : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieScenePlaybackClient
        fun Find(Outer: UObject, ResourceName: String): MovieScenePlaybackClient
        fun GetDefaultObject(): MovieScenePlaybackClient
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScenePlaybackClient
        fun C(Other: UObject): MovieScenePlaybackClient
        fun C(Other: Any): MovieScenePlaybackClient
    }
}

external open class MovieSceneTrackTemplateProducer : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneTrackTemplateProducer
        fun Find(Outer: UObject, ResourceName: String): MovieSceneTrackTemplateProducer
        fun GetDefaultObject(): MovieSceneTrackTemplateProducer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneTrackTemplateProducer
        fun C(Other: UObject): MovieSceneTrackTemplateProducer
        fun C(Other: Any): MovieSceneTrackTemplateProducer
    }
}

external open class NodeAndChannelMappings : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NodeAndChannelMappings
        fun Find(Outer: UObject, ResourceName: String): NodeAndChannelMappings
        fun GetDefaultObject(): NodeAndChannelMappings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NodeAndChannelMappings
        fun C(Other: UObject): NodeAndChannelMappings
        fun C(Other: Any): NodeAndChannelMappings
    }
}

external open class MovieSceneBindingOverrideData {
    open var ObjectBindingID: MovieSceneObjectBindingID
    open var UObject: Any
    open var bOverridesDefault: Boolean
    open fun clone(): MovieSceneBindingOverrideData

    companion object {
        fun C(Other: UObject): MovieSceneBindingOverrideData
        fun C(Other: Any): MovieSceneBindingOverrideData
    }
}

external open class MovieSceneBindingOverrides : UObject {
    constructor()
    constructor(Outer: UObject)
    open var BindingData: Array<MovieSceneBindingOverrideData>

    companion object {
        fun Load(ResourceName: String): MovieSceneBindingOverrides
        fun Find(Outer: UObject, ResourceName: String): MovieSceneBindingOverrides
        fun GetDefaultObject(): MovieSceneBindingOverrides
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneBindingOverrides
        fun C(Other: UObject): MovieSceneBindingOverrides
        fun C(Other: Any): MovieSceneBindingOverrides
    }
}

external open class MovieSceneBindingOwnerInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneBindingOwnerInterface
        fun Find(Outer: UObject, ResourceName: String): MovieSceneBindingOwnerInterface
        fun GetDefaultObject(): MovieSceneBindingOwnerInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneBindingOwnerInterface
        fun C(Other: UObject): MovieSceneBindingOwnerInterface
        fun C(Other: Any): MovieSceneBindingOwnerInterface
    }
}

external open class MovieSceneBoolSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var DefaultValue: Boolean
    open var BoolCurve: MovieSceneBoolChannel
    open var bIsExternallyInverted: Boolean

    companion object {
        fun Load(ResourceName: String): MovieSceneBoolSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneBoolSection
        fun GetDefaultObject(): MovieSceneBoolSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneBoolSection
        fun C(Other: UObject): MovieSceneBoolSection
        fun C(Other: Any): MovieSceneBoolSection
    }
}

external open class MovieSceneGenericBoundObjectInstantiator : MovieSceneEntityInstantiatorSystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneGenericBoundObjectInstantiator
        fun Find(Outer: UObject, ResourceName: String): MovieSceneGenericBoundObjectInstantiator
        fun GetDefaultObject(): MovieSceneGenericBoundObjectInstantiator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneGenericBoundObjectInstantiator
        fun C(Other: UObject): MovieSceneGenericBoundObjectInstantiator
        fun C(Other: Any): MovieSceneGenericBoundObjectInstantiator
    }
}

external open class MovieSceneBoundSceneComponentInstantiator : MovieSceneEntityInstantiatorSystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneBoundSceneComponentInstantiator
        fun Find(Outer: UObject, ResourceName: String): MovieSceneBoundSceneComponentInstantiator
        fun GetDefaultObject(): MovieSceneBoundSceneComponentInstantiator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneBoundSceneComponentInstantiator
        fun C(Other: UObject): MovieSceneBoundSceneComponentInstantiator
        fun C(Other: Any): MovieSceneBoundSceneComponentInstantiator
    }
}

external open class MovieSceneSceneComponentImpersonator : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneSceneComponentImpersonator
        fun Find(Outer: UObject, ResourceName: String): MovieSceneSceneComponentImpersonator
        fun GetDefaultObject(): MovieSceneSceneComponentImpersonator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneSceneComponentImpersonator
        fun C(Other: UObject): MovieSceneSceneComponentImpersonator
        fun C(Other: Any): MovieSceneSceneComponentImpersonator
    }
}

external open class MovieSceneFloatDecomposer : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneFloatDecomposer
        fun Find(Outer: UObject, ResourceName: String): MovieSceneFloatDecomposer
        fun GetDefaultObject(): MovieSceneFloatDecomposer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneFloatDecomposer
        fun C(Other: UObject): MovieSceneFloatDecomposer
        fun C(Other: Any): MovieSceneFloatDecomposer
    }
}

external object EMovieSceneBuiltInEasing {
    var Linear: String /* "Linear" */
    var SinIn: String /* "SinIn" */
    var SinOut: String /* "SinOut" */
    var SinInOut: String /* "SinInOut" */
    var QuadIn: String /* "QuadIn" */
    var QuadOut: String /* "QuadOut" */
    var QuadInOut: String /* "QuadInOut" */
    var CubicIn: String /* "CubicIn" */
    var CubicOut: String /* "CubicOut" */
    var CubicInOut: String /* "CubicInOut" */
    var QuartIn: String /* "QuartIn" */
    var QuartOut: String /* "QuartOut" */
    var QuartInOut: String /* "QuartInOut" */
    var QuintIn: String /* "QuintIn" */
    var QuintOut: String /* "QuintOut" */
    var QuintInOut: String /* "QuintInOut" */
    var ExpoIn: String /* "ExpoIn" */
    var ExpoOut: String /* "ExpoOut" */
    var ExpoInOut: String /* "ExpoInOut" */
    var CircIn: String /* "CircIn" */
    var CircOut: String /* "CircOut" */
    var CircInOut: String /* "CircInOut" */
    var EMovieSceneBuiltInEasing_MAX: String /* "EMovieSceneBuiltInEasing_MAX" */
}

external open class MovieSceneBuiltInEasingFunction : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Type: String /* "Linear" | "SinIn" | "SinOut" | "SinInOut" | "QuadIn" | "QuadOut" | "QuadInOut" | "CubicIn" | "CubicOut" | "CubicInOut" | "QuartIn" | "QuartOut" | "QuartInOut" | "QuintIn" | "QuintOut" | "QuintInOut" | "ExpoIn" | "ExpoOut" | "ExpoInOut" | "CircIn" | "CircOut" | "CircInOut" | "EMovieSceneBuiltInEasing_MAX" */

    companion object {
        fun Load(ResourceName: String): MovieSceneBuiltInEasingFunction
        fun Find(Outer: UObject, ResourceName: String): MovieSceneBuiltInEasingFunction
        fun GetDefaultObject(): MovieSceneBuiltInEasingFunction
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneBuiltInEasingFunction
        fun C(Other: UObject): MovieSceneBuiltInEasingFunction
        fun C(Other: Any): MovieSceneBuiltInEasingFunction
    }
}

external open class MovieSceneEasingExternalCurve : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Curve: CurveFloat

    companion object {
        fun Load(ResourceName: String): MovieSceneEasingExternalCurve
        fun Find(Outer: UObject, ResourceName: String): MovieSceneEasingExternalCurve
        fun GetDefaultObject(): MovieSceneEasingExternalCurve
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneEasingExternalCurve
        fun C(Other: UObject): MovieSceneEasingExternalCurve
        fun C(Other: Any): MovieSceneEasingExternalCurve
    }
}

external open class MovieSceneEasingFunction : Interface {
    constructor()
    constructor(Outer: UObject)
    open fun OnEvaluate(Interp: Number): Number

    companion object {
        fun Load(ResourceName: String): MovieSceneEasingFunction
        fun Find(Outer: UObject, ResourceName: String): MovieSceneEasingFunction
        fun GetDefaultObject(): MovieSceneEasingFunction
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneEasingFunction
        fun C(Other: UObject): MovieSceneEasingFunction
        fun C(Other: Any): MovieSceneEasingFunction
    }
}

external open class MovieSceneEvalTimeSystem : MovieSceneEntitySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneEvalTimeSystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneEvalTimeSystem
        fun GetDefaultObject(): MovieSceneEvalTimeSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneEvalTimeSystem
        fun C(Other: UObject): MovieSceneEvalTimeSystem
        fun C(Other: Any): MovieSceneEvalTimeSystem
    }
}

external open class MovieSceneEvaluationHookSystem : MovieSceneEntitySystem {
    constructor()
    constructor(Outer: UObject)
    open var PendingEventsByRootInstance: Any

    companion object {
        fun Load(ResourceName: String): MovieSceneEvaluationHookSystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneEvaluationHookSystem
        fun GetDefaultObject(): MovieSceneEvaluationHookSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneEvaluationHookSystem
        fun C(Other: UObject): MovieSceneEvaluationHookSystem
        fun C(Other: Any): MovieSceneEvaluationHookSystem
    }
}

external open class MovieSceneHookSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)
    open var bRequiresRangedHook: Boolean
    open var bRequiresTriggerHooks: Boolean

    companion object {
        fun Load(ResourceName: String): MovieSceneHookSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneHookSection
        fun GetDefaultObject(): MovieSceneHookSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneHookSection
        fun C(Other: UObject): MovieSceneHookSection
        fun C(Other: Any): MovieSceneHookSection
    }
}

external open class MovieSceneKeyProxy : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneKeyProxy
        fun Find(Outer: UObject, ResourceName: String): MovieSceneKeyProxy
        fun GetDefaultObject(): MovieSceneKeyProxy
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneKeyProxy
        fun C(Other: UObject): MovieSceneKeyProxy
        fun C(Other: Any): MovieSceneKeyProxy
    }
}

external open class MovieSceneMasterInstantiatorSystem : MovieSceneEntityInstantiatorSystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneMasterInstantiatorSystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneMasterInstantiatorSystem
        fun GetDefaultObject(): MovieSceneMasterInstantiatorSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneMasterInstantiatorSystem
        fun C(Other: UObject): MovieSceneMasterInstantiatorSystem
        fun C(Other: Any): MovieSceneMasterInstantiatorSystem
    }
}

external open class MovieScenePreAnimatedStateSystemInterface : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieScenePreAnimatedStateSystemInterface
        fun Find(Outer: UObject, ResourceName: String): MovieScenePreAnimatedStateSystemInterface
        fun GetDefaultObject(): MovieScenePreAnimatedStateSystemInterface
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieScenePreAnimatedStateSystemInterface
        fun C(Other: UObject): MovieScenePreAnimatedStateSystemInterface
        fun C(Other: Any): MovieScenePreAnimatedStateSystemInterface
    }
}

external open class MovieSceneCachePreAnimatedStateSystem : MovieSceneEntityInstantiatorSystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneCachePreAnimatedStateSystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneCachePreAnimatedStateSystem
        fun GetDefaultObject(): MovieSceneCachePreAnimatedStateSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneCachePreAnimatedStateSystem
        fun C(Other: UObject): MovieSceneCachePreAnimatedStateSystem
        fun C(Other: Any): MovieSceneCachePreAnimatedStateSystem
    }
}

external open class MovieSceneRestorePreAnimatedStateSystem : MovieSceneEntityInstantiatorSystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneRestorePreAnimatedStateSystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneRestorePreAnimatedStateSystem
        fun GetDefaultObject(): MovieSceneRestorePreAnimatedStateSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneRestorePreAnimatedStateSystem
        fun C(Other: UObject): MovieSceneRestorePreAnimatedStateSystem
        fun C(Other: Any): MovieSceneRestorePreAnimatedStateSystem
    }
}

external object EMovieScenePlayerStatus {
    var Stopped: String /* "Stopped" */
    var Playing: String /* "Playing" */
    var Scrubbing: String /* "Scrubbing" */
    var Jumping: String /* "Jumping" */
    var Stepping: String /* "Stepping" */
    var Paused: String /* "Paused" */
    var MAX: String /* "MAX" */
}

external open class MovieSceneSequenceLoopCount {
    open var Value: Number
    open fun clone(): MovieSceneSequenceLoopCount

    companion object {
        fun C(Other: UObject): MovieSceneSequenceLoopCount
        fun C(Other: Any): MovieSceneSequenceLoopCount
    }
}

external open class MovieSceneSequencePlaybackSettings {
    open var bAutoPlay: Boolean
    open var LoopCount: MovieSceneSequenceLoopCount
    open var PlayRate: Number
    open var StartTime: Number
    open var bRandomStartTime: Boolean
    open var bRestoreState: Boolean
    open var bDisableMovementInput: Boolean
    open var bDisableLookAtInput: Boolean
    open var bHidePlayer: Boolean
    open var bHideHud: Boolean
    open var bDisableCameraCuts: Boolean
    open var bPauseAtEnd: Boolean
    open fun clone(): MovieSceneSequencePlaybackSettings

    companion object {
        fun C(Other: UObject): MovieSceneSequencePlaybackSettings
        fun C(Other: Any): MovieSceneSequencePlaybackSettings
    }
}

external open class MovieSceneSequenceReplProperties {
    open var LastKnownPosition: FrameTime
    open var LastKnownStatus: String /* "Stopped" | "Playing" | "Scrubbing" | "Jumping" | "Stepping" | "Paused" | "MAX" */
    open var LastKnownNumLoops: Number
    open fun clone(): MovieSceneSequenceReplProperties

    companion object {
        fun C(Other: UObject): MovieSceneSequenceReplProperties
        fun C(Other: Any): MovieSceneSequenceReplProperties
    }
}

external open class MovieSceneSequenceActorPointers {
    open var SequenceActor: Actor
    open var SequenceActorInterface: Any
    open fun clone(): MovieSceneSequenceActorPointers

    companion object {
        fun C(Other: UObject): MovieSceneSequenceActorPointers
        fun C(Other: Any): MovieSceneSequenceActorPointers
    }
}

external open class MovieSceneSequenceTickManager : UObject {
    constructor()
    constructor(Outer: UObject)
    open var SequenceActors: Array<MovieSceneSequenceActorPointers>
    open var Linker: MovieSceneEntitySystemLinker

    companion object {
        fun Load(ResourceName: String): MovieSceneSequenceTickManager
        fun Find(Outer: UObject, ResourceName: String): MovieSceneSequenceTickManager
        fun GetDefaultObject(): MovieSceneSequenceTickManager
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneSequenceTickManager
        fun C(Other: UObject): MovieSceneSequenceTickManager
        fun C(Other: Any): MovieSceneSequenceTickManager
    }
}

external object EMovieScenePositionType {
    var Frame: String /* "Frame" */
    var Time: String /* "Time" */
    var MarkedFrame: String /* "MarkedFrame" */
    var EMovieScenePositionType_MAX: String /* "EMovieScenePositionType_MAX" */
}

external object EUpdatePositionMethod {
    var Play: String /* "Play" */
    var Jump: String /* "Jump" */
    var Scrub: String /* "Scrub" */
    var EUpdatePositionMethod_MAX: String /* "EUpdatePositionMethod_MAX" */
}

external open class MovieSceneSequencePlaybackParams {
    open var Frame: FrameTime
    open var Time: Number
    open var MarkedFrame: String
    open var PositionType: String /* "Frame" | "Time" | "MarkedFrame" | "EMovieScenePositionType_MAX" */
    open var UpdateMethod: String /* "Play" | "Jump" | "Scrub" | "EUpdatePositionMethod_MAX" */
    open fun clone(): MovieSceneSequencePlaybackParams

    companion object {
        fun C(Other: UObject): MovieSceneSequencePlaybackParams
        fun C(Other: Any): MovieSceneSequencePlaybackParams
    }
}

external open class MovieSceneSequencePlayer : UObject {
    constructor()
    constructor(Outer: UObject)
    open var OnPlay: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnPlayReverse: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnStop: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnPause: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnFinished: UnrealEngineMulticastDelegate<() -> Unit>
    open var Status: String /* "Stopped" | "Playing" | "Scrubbing" | "Jumping" | "Stepping" | "Paused" | "MAX" */
    open var bReversePlayback: Boolean
    open var Sequence: MovieSceneSequence
    open var StartTime: FrameNumber
    open var DurationFrames: Number
    open var DurationSubFrames: Number
    open var CurrentNumLoops: Number
    open var PlaybackSettings: MovieSceneSequencePlaybackSettings
    open var RootTemplateInstance: MovieSceneRootEvaluationTemplateInstance
    open var NetSyncProps: MovieSceneSequenceReplProperties
    open var PlaybackClient: Any
    open var TickManager: MovieSceneSequenceTickManager
    open fun StopAtCurrentTime()
    open fun Stop()
    open fun SetPlayRange(StartTime: Number, Duration: Number)
    open fun SetPlayRate(PlayRate: Number)
    open fun SetPlaybackPosition(PlaybackParams: MovieSceneSequencePlaybackParams)
    open fun SetFrameRate(FrameRate: FrameRate)
    open fun SetPlayRange(StartFrame: Number, Duration: Number, SubFrames: Number)
    open fun SetDisableCameraCuts(bInDisableCameraCuts: Boolean)
    open fun ScrubTo(TimeInSeconds: Number)
    open fun ScrubToMarkedFrame(InLabel: String): Boolean
    open fun ScrubTo(NewPosition: FrameTime)
    open fun Scrub()
    open fun RPC_OnStopEvent(StoppedTime: FrameTime)
    open fun RPC_ExplicitServerUpdateEvent(Method: String /* "Play" | "Jump" | "Scrub" | "EUpdatePositionMethod_MAX" */, RelevantTime: FrameTime)
    open fun RestoreState()
    open fun PlayTo(TimeInSeconds: Number)
    open fun PlayToMarkedFrame(InLabel: String): Boolean
    open fun PlayTo(NewPosition: FrameTime)
    open fun PlayTo(PlaybackParams: MovieSceneSequencePlaybackParams)
    open fun PlayReverse()
    open fun PlayLooping(NumLoops: Number)
    open fun Play()
    open fun Pause()
    open fun JumpTo(TimeInSeconds: Number)
    open fun JumpToMarkedFrame(InLabel: String): Boolean
    open fun JumpTo(NewPosition: FrameTime)
    open fun IsReversed(): Boolean
    open fun IsPlaying(): Boolean
    open fun IsPaused(): Boolean
    open fun GoToEndAndStop()
    open fun GetStartTime(): QualifiedFrameTime
    open fun GetSequence(): MovieSceneSequence
    open fun GetPlayRate(): Number
    open fun GetObjectBindings(InObject: UObject): Array<MovieSceneObjectBindingID>
    open fun GetFrameRate(): FrameRate
    open fun GetFrameDuration(): Number
    open fun GetEndTime(): QualifiedFrameTime
    open fun GetDuration(): QualifiedFrameTime
    open fun GetDisableCameraCuts(): Boolean
    open fun GetCurrentTime(): QualifiedFrameTime
    open fun GetBoundObjects(ObjectBinding: MovieSceneObjectBindingID): Array<UObject>
    open fun ChangePlaybackDirection()

    companion object {
        fun Load(ResourceName: String): MovieSceneSequencePlayer
        fun Find(Outer: UObject, ResourceName: String): MovieSceneSequencePlayer
        fun GetDefaultObject(): MovieSceneSequencePlayer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneSequencePlayer
        fun C(Other: UObject): MovieSceneSequencePlayer
        fun C(Other: Any): MovieSceneSequencePlayer
    }
}

external open class MovieSceneSequenceActor : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneSequenceActor
        fun Find(Outer: UObject, ResourceName: String): MovieSceneSequenceActor
        fun GetDefaultObject(): MovieSceneSequenceActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneSequenceActor
        fun C(Other: UObject): MovieSceneSequenceActor
        fun C(Other: Any): MovieSceneSequenceActor
    }
}

external open class MovieSceneSpawnablesSystem : MovieSceneEntitySystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneSpawnablesSystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneSpawnablesSystem
        fun GetDefaultObject(): MovieSceneSpawnablesSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneSpawnablesSystem
        fun C(Other: UObject): MovieSceneSpawnablesSystem
        fun C(Other: Any): MovieSceneSpawnablesSystem
    }
}

external open class MovieSceneSpawnSection : MovieSceneBoolSection {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneSpawnSection
        fun Find(Outer: UObject, ResourceName: String): MovieSceneSpawnSection
        fun GetDefaultObject(): MovieSceneSpawnSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneSpawnSection
        fun C(Other: UObject): MovieSceneSpawnSection
        fun C(Other: Any): MovieSceneSpawnSection
    }
}

external open class MovieSceneSpawnTrack : MovieSceneTrack {
    constructor()
    constructor(Outer: UObject)
    open var Sections: Array<MovieSceneSection>
    open var ObjectGuid: Guid

    companion object {
        fun Load(ResourceName: String): MovieSceneSpawnTrack
        fun Find(Outer: UObject, ResourceName: String): MovieSceneSpawnTrack
        fun GetDefaultObject(): MovieSceneSpawnTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneSpawnTrack
        fun C(Other: UObject): MovieSceneSpawnTrack
        fun C(Other: Any): MovieSceneSpawnTrack
    }
}

external open class TestMovieSceneTrack : MovieSceneTrack {
    constructor()
    constructor(Outer: UObject)
    open var bHighPassFilter: Boolean
    open var SectionArray: Array<MovieSceneSection>

    companion object {
        fun Load(ResourceName: String): TestMovieSceneTrack
        fun Find(Outer: UObject, ResourceName: String): TestMovieSceneTrack
        fun GetDefaultObject(): TestMovieSceneTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TestMovieSceneTrack
        fun C(Other: UObject): TestMovieSceneTrack
        fun C(Other: Any): TestMovieSceneTrack
    }
}

external open class TestMovieSceneSection : MovieSceneSection {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TestMovieSceneSection
        fun Find(Outer: UObject, ResourceName: String): TestMovieSceneSection
        fun GetDefaultObject(): TestMovieSceneSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TestMovieSceneSection
        fun C(Other: UObject): TestMovieSceneSection
        fun C(Other: Any): TestMovieSceneSection
    }
}

external open class TestMovieSceneSequence : MovieSceneSequence {
    constructor()
    constructor(Outer: UObject)
    open var MovieScene: MovieScene

    companion object {
        fun Load(ResourceName: String): TestMovieSceneSequence
        fun Find(Outer: UObject, ResourceName: String): TestMovieSceneSequence
        fun GetDefaultObject(): TestMovieSceneSequence
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TestMovieSceneSequence
        fun C(Other: UObject): TestMovieSceneSequence
        fun C(Other: Any): TestMovieSceneSequence
    }
}

external open class TestMovieSceneSubTrack : MovieSceneSubTrack {
    constructor()
    constructor(Outer: UObject)
    open var SectionArray: Array<MovieSceneSection>

    companion object {
        fun Load(ResourceName: String): TestMovieSceneSubTrack
        fun Find(Outer: UObject, ResourceName: String): TestMovieSceneSubTrack
        fun GetDefaultObject(): TestMovieSceneSubTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TestMovieSceneSubTrack
        fun C(Other: UObject): TestMovieSceneSubTrack
        fun C(Other: Any): TestMovieSceneSubTrack
    }
}

external open class TestMovieSceneSubSection : MovieSceneSubSection {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TestMovieSceneSubSection
        fun Find(Outer: UObject, ResourceName: String): TestMovieSceneSubSection
        fun GetDefaultObject(): TestMovieSceneSubSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TestMovieSceneSubSection
        fun C(Other: UObject): TestMovieSceneSubSection
        fun C(Other: Any): TestMovieSceneSubSection
    }
}

external open class TestMovieSceneEvalHookTrack : MovieSceneTrack {
    constructor()
    constructor(Outer: UObject)
    open var SectionArray: Array<MovieSceneSection>

    companion object {
        fun Load(ResourceName: String): TestMovieSceneEvalHookTrack
        fun Find(Outer: UObject, ResourceName: String): TestMovieSceneEvalHookTrack
        fun GetDefaultObject(): TestMovieSceneEvalHookTrack
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TestMovieSceneEvalHookTrack
        fun C(Other: UObject): TestMovieSceneEvalHookTrack
        fun C(Other: Any): TestMovieSceneEvalHookTrack
    }
}

external open class TestMovieSceneEvalHookSection : MovieSceneHookSection {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TestMovieSceneEvalHookSection
        fun Find(Outer: UObject, ResourceName: String): TestMovieSceneEvalHookSection
        fun GetDefaultObject(): TestMovieSceneEvalHookSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TestMovieSceneEvalHookSection
        fun C(Other: UObject): TestMovieSceneEvalHookSection
        fun C(Other: Any): TestMovieSceneEvalHookSection
    }
}

external open class MovieSceneTrackInstanceInstantiator : MovieSceneEntityInstantiatorSystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MovieSceneTrackInstanceInstantiator
        fun Find(Outer: UObject, ResourceName: String): MovieSceneTrackInstanceInstantiator
        fun GetDefaultObject(): MovieSceneTrackInstanceInstantiator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneTrackInstanceInstantiator
        fun C(Other: UObject): MovieSceneTrackInstanceInstantiator
        fun C(Other: Any): MovieSceneTrackInstanceInstantiator
    }
}

external open class MovieSceneTrackInstanceSystem : MovieSceneEntitySystem {
    constructor()
    constructor(Outer: UObject)
    open var Instantiator: MovieSceneTrackInstanceInstantiator

    companion object {
        fun Load(ResourceName: String): MovieSceneTrackInstanceSystem
        fun Find(Outer: UObject, ResourceName: String): MovieSceneTrackInstanceSystem
        fun GetDefaultObject(): MovieSceneTrackInstanceSystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MovieSceneTrackInstanceSystem
        fun C(Other: UObject): MovieSceneTrackInstanceSystem
        fun C(Other: Any): MovieSceneTrackInstanceSystem
    }
}

external open class AudioGenerator : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AudioGenerator
        fun Find(Outer: UObject, ResourceName: String): AudioGenerator
        fun GetDefaultObject(): AudioGenerator
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AudioGenerator
        fun C(Other: UObject): AudioGenerator
        fun C(Other: Any): AudioGenerator
    }
}

external object EAudioSpectrumBandPresetType {
    var KickDrum: String /* "KickDrum" */
    var SnareDrum: String /* "SnareDrum" */
    var Voice: String /* "Voice" */
    var Cymbals: String /* "Cymbals" */
    var EAudioSpectrumBandPresetType_MAX: String /* "EAudioSpectrumBandPresetType_MAX" */
}

external open class SoundSubmixSpectralAnalysisBandSettings {
    open var BandFrequency: Number
    open var AttackTimeMsec: Number
    open var ReleaseTimeMsec: Number
    open var QFactor: Number
    open fun clone(): SoundSubmixSpectralAnalysisBandSettings

    companion object {
        fun C(Other: UObject): SoundSubmixSpectralAnalysisBandSettings
        fun C(Other: Any): SoundSubmixSpectralAnalysisBandSettings
    }
}

external object EMusicalNoteName {
    var C: String /* "C" */
    var Db: String /* "Db" */
    var D: String /* "D" */
    var Eb: String /* "Eb" */
    var E: String /* "E" */
    var F: String /* "F" */
    var Gb: String /* "Gb" */
    var G: String /* "G" */
    var Ab: String /* "Ab" */
    var A: String /* "A" */
    var Bb: String /* "Bb" */
    var B: String /* "B" */
    var EMusicalNoteName_MAX: String /* "EMusicalNoteName_MAX" */
}

external interface `T$616` {
    var Phases: Array<Number>
}

external interface `T$617` {
    var Magnitudes: Array<Number>
}

external open class AudioMixerBlueprintLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AudioMixerBlueprintLibrary
        fun Find(Outer: UObject, ResourceName: String): AudioMixerBlueprintLibrary
        fun GetDefaultObject(): AudioMixerBlueprintLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AudioMixerBlueprintLibrary
        fun TrimAudioCache(InMegabytesToFree: Number): Number
        fun StopRecordingOutput(WorldContextObject: UObject, ExportType: String /* "SoundWave" | "WavFile" | "EAudioRecordingExportType_MAX" */, Name: String, Path: String, SubmixToRecord: SoundSubmix, ExistingSoundWaveToOverwrite: SoundWave): SoundWave
        fun StopAudioBus(WorldContextObject: UObject, AudioBus: AudioBus)
        fun StopAnalyzingOutput(WorldContextObject: UObject, SubmixToStopAnalyzing: SoundSubmix)
        fun StartRecordingOutput(WorldContextObject: UObject, ExpectedDuration: Number, SubmixToRecord: SoundSubmix)
        fun StartAudioBus(WorldContextObject: UObject, AudioBus: AudioBus)
        fun StartAnalyzingOutput(WorldContextObject: UObject, SubmixToAnalyze: SoundSubmix, FFTSize: String /* "DefaultSize" | "Min" | "Small" | "Medium" | "Large" | "VeryLarge" | "Max" | "EFFTSize_MAX" */, InterpolationMethod: String /* "NearestNeighbor" | "Linear" | "Quadratic" | "ConstantQ" | "EFFTPeakInterpolationMethod_MAX" */, WindowType: String /* "None" | "Hamming" | "Hann" | "Blackman" | "EFFTWindowType_MAX" */, HopSize: Number, SpectrumType: String /* "MagnitudeSpectrum" | "PowerSpectrum" | "Decibel" | "EAudioSpectrumType_MAX" */)
        fun SetSubmixEffectChainOverride(WorldContextObject: UObject, SoundSubmix: SoundSubmix, SubmixEffectPresetChain: Array<SoundEffectSubmixPreset>, FadeTimeSec: Number)
        fun SetBypassSourceEffectChainEntry(WorldContextObject: UObject, PresetChain: SoundEffectSourcePresetChain, EntryIndex: Number, bBypassed: Boolean)
        fun ResumeRecordingOutput(WorldContextObject: UObject, SubmixToPause: SoundSubmix)
        fun ReplaceSubmixEffect(WorldContextObject: UObject, InSoundSubmix: SoundSubmix, SubmixChainIndex: Number, SubmixEffectPreset: SoundEffectSubmixPreset)
        fun ReplaceSoundEffectSubmix(WorldContextObject: UObject, InSoundSubmix: SoundSubmix, SubmixChainIndex: Number, SubmixEffectPreset: SoundEffectSubmixPreset)
        fun RemoveSubmixEffectPresetAtIndex(WorldContextObject: UObject, SoundSubmix: SoundSubmix, SubmixChainIndex: Number)
        fun RemoveSubmixEffectPreset(WorldContextObject: UObject, SoundSubmix: SoundSubmix, SubmixEffectPreset: SoundEffectSubmixPreset)
        fun RemoveSubmixEffectAtIndex(WorldContextObject: UObject, SoundSubmix: SoundSubmix, SubmixChainIndex: Number)
        fun RemoveSubmixEffect(WorldContextObject: UObject, SoundSubmix: SoundSubmix, SubmixEffectPreset: SoundEffectSubmixPreset)
        fun RemoveSourceEffectFromPresetChain(WorldContextObject: UObject, PresetChain: SoundEffectSourcePresetChain, EntryIndex: Number)
        fun RemoveMasterSubmixEffect(WorldContextObject: UObject, SubmixEffectPreset: SoundEffectSubmixPreset)
        fun PrimeSoundCueForPlayback(SoundCue: SoundCue)
        fun PauseRecordingOutput(WorldContextObject: UObject, SubmixToPause: SoundSubmix)
        fun MakePresetSpectralAnalysisBandSettings(InBandPresetType: String /* "KickDrum" | "SnareDrum" | "Voice" | "Cymbals" | "EAudioSpectrumBandPresetType_MAX" */, InNumBands: Number, InAttackTimeMsec: Number, InReleaseTimeMsec: Number): Array<SoundSubmixSpectralAnalysisBandSettings>
        fun MakeMusicalSpectralAnalysisBandSettings(InNumSemitones: Number, InStartingMusicalNote: String /* "C" | "Db" | "D" | "Eb" | "E" | "F" | "Gb" | "G" | "Ab" | "A" | "Bb" | "B" | "EMusicalNoteName_MAX" */, InStartingOctave: Number, InAttackTimeMsec: Number, InReleaseTimeMsec: Number): Array<SoundSubmixSpectralAnalysisBandSettings>
        fun MakeFullSpectrumSpectralAnalysisBandSettings(InNumBands: Number, InMinimumFrequency: Number, InMaximumFrequency: Number, InAttackTimeMsec: Number, InReleaseTimeMsec: Number): Array<SoundSubmixSpectralAnalysisBandSettings>
        fun IsAudioBusActive(WorldContextObject: UObject, AudioBus: AudioBus): Boolean
        fun GetPhaseForFrequencies(WorldContextObject: UObject, Frequencies: Array<Number>, Phases: Array<Number> = definedExternally, SubmixToAnalyze: SoundSubmix = definedExternally): `T$616`
        fun GetNumberOfEntriesInSourceEffectChain(WorldContextObject: UObject, PresetChain: SoundEffectSourcePresetChain): Number
        fun GetMagnitudeForFrequencies(WorldContextObject: UObject, Frequencies: Array<Number>, Magnitudes: Array<Number> = definedExternally, SubmixToAnalyze: SoundSubmix = definedExternally): `T$617`
        fun ClearSubmixEffects(WorldContextObject: UObject, SoundSubmix: SoundSubmix)
        fun ClearSubmixEffectChainOverride(WorldContextObject: UObject, SoundSubmix: SoundSubmix, FadeTimeSec: Number)
        fun ClearMasterSubmixEffects(WorldContextObject: UObject)
        fun AddSubmixEffect(WorldContextObject: UObject, SoundSubmix: SoundSubmix, SubmixEffectPreset: SoundEffectSubmixPreset): Number
        fun AddSourceEffectToPresetChain(WorldContextObject: UObject, PresetChain: SoundEffectSourcePresetChain, Entry: SourceEffectChainEntry)
        fun AddMasterSubmixEffect(WorldContextObject: UObject, SubmixEffectPreset: SoundEffectSubmixPreset)
        fun C(Other: UObject): AudioMixerBlueprintLibrary
        fun C(Other: Any): AudioMixerBlueprintLibrary
    }
}

external open class TickableWorldSubsystem : WorldSubsystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TickableWorldSubsystem
        fun Find(Outer: UObject, ResourceName: String): TickableWorldSubsystem
        fun GetDefaultObject(): TickableWorldSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TickableWorldSubsystem
        fun C(Other: UObject): TickableWorldSubsystem
        fun C(Other: Any): TickableWorldSubsystem
    }
}

external object EQuartzCommandQuantization {
    var Bar: String /* "Bar" */
    var Beat: String /* "Beat" */
    var ThirtySecondNote: String /* "ThirtySecondNote" */
    var SixteenthNote: String /* "SixteenthNote" */
    var EighthNote: String /* "EighthNote" */
    var QuarterNote: String /* "QuarterNote" */
    var HalfNote: String /* "HalfNote" */
    var WholeNote: String /* "WholeNote" */
    var DottedSixteenthNote: String /* "DottedSixteenthNote" */
    var DottedEighthNote: String /* "DottedEighthNote" */
    var DottedQuarterNote: String /* "DottedQuarterNote" */
    var DottedHalfNote: String /* "DottedHalfNote" */
    var DottedWholeNote: String /* "DottedWholeNote" */
    var SixteenthNoteTriplet: String /* "SixteenthNoteTriplet" */
    var EighthNoteTriplet: String /* "EighthNoteTriplet" */
    var QuarterNoteTriplet: String /* "QuarterNoteTriplet" */
    var HalfNoteTriplet: String /* "HalfNoteTriplet" */
    var Tick: String /* "Tick" */
    var Count: String /* "Count" */
    var None: String /* "None" */
    var EQuartzCommandQuantization_MAX: String /* "EQuartzCommandQuantization_MAX" */
}

external open class QuartzTransportTimeStamp {
    open var Bars: Number
    open var Beat: Number
    open var BeatFraction: Number
    open var Seconds: Number
    open fun clone(): QuartzTransportTimeStamp

    companion object {
        fun C(Other: UObject): QuartzTransportTimeStamp
        fun C(Other: Any): QuartzTransportTimeStamp
    }
}

external object EQuartzTimeSignatureQuantization {
    var HalfNote: String /* "HalfNote" */
    var QuarterNote: String /* "QuarterNote" */
    var EighthNote: String /* "EighthNote" */
    var SixteenthNote: String /* "SixteenthNote" */
    var ThirtySecondNote: String /* "ThirtySecondNote" */
    var Count: String /* "Count" */
    var EQuartzTimeSignatureQuantization_MAX: String /* "EQuartzTimeSignatureQuantization_MAX" */
}

external open class QuartzPulseOverrideStep {
    open var NumberOfPulses: Number
    open var PulseDuration: String /* "Bar" | "Beat" | "ThirtySecondNote" | "SixteenthNote" | "EighthNote" | "QuarterNote" | "HalfNote" | "WholeNote" | "DottedSixteenthNote" | "DottedEighthNote" | "DottedQuarterNote" | "DottedHalfNote" | "DottedWholeNote" | "SixteenthNoteTriplet" | "EighthNoteTriplet" | "QuarterNoteTriplet" | "HalfNoteTriplet" | "Tick" | "Count" | "None" | "EQuartzCommandQuantization_MAX" */
    open fun clone(): QuartzPulseOverrideStep

    companion object {
        fun C(Other: UObject): QuartzPulseOverrideStep
        fun C(Other: Any): QuartzPulseOverrideStep
    }
}

external open class QuartzTimeSignature {
    open var NumBeats: Number
    open var BeatType: String /* "HalfNote" | "QuarterNote" | "EighthNote" | "SixteenthNote" | "ThirtySecondNote" | "Count" | "EQuartzTimeSignatureQuantization_MAX" */
    open var OptionalPulseOverride: Array<QuartzPulseOverrideStep>
    open fun clone(): QuartzTimeSignature

    companion object {
        fun C(Other: UObject): QuartzTimeSignature
        fun C(Other: Any): QuartzTimeSignature
    }
}

external open class QuartzClockSettings {
    open var TimeSignature: QuartzTimeSignature
    open var bIgnoreLevelChange: Boolean
    open fun clone(): QuartzClockSettings

    companion object {
        fun C(Other: UObject): QuartzClockSettings
        fun C(Other: Any): QuartzClockSettings
    }
}

external interface `T$618` {
    var InClockHandle: QuartzClockHandle
}

external open class QuartzSubsystem : TickableWorldSubsystem {
    constructor()
    constructor(Outer: UObject)
    open fun IsQuartzEnabled(): Boolean
    open fun IsClockRunning(WorldContextObject: UObject, ClockName: String): Boolean
    open fun GetRoundTripMinLatency(WorldContextObject: UObject): Number
    open fun GetRoundTripMaxLatency(WorldContextObject: UObject): Number
    open fun GetRoundTripAverageLatency(WorldContextObject: UObject): Number
    open fun GetHandleForClock(WorldContextObject: UObject, ClockName: String): QuartzClockHandle
    open fun GetGameThreadToAudioRenderThreadMinLatency(WorldContextObject: UObject): Number
    open fun GetGameThreadToAudioRenderThreadMaxLatency(WorldContextObject: UObject): Number
    open fun GetGameThreadToAudioRenderThreadAverageLatency(WorldContextObject: UObject): Number
    open fun GetEstimatedClockRunTime(WorldContextObject: UObject, InClockName: String): Number
    open fun GetDurationOfQuantizationTypeInSeconds(WorldContextObject: UObject, ClockName: String, QuantizationType: String /* "Bar" | "Beat" | "ThirtySecondNote" | "SixteenthNote" | "EighthNote" | "QuarterNote" | "HalfNote" | "WholeNote" | "DottedSixteenthNote" | "DottedEighthNote" | "DottedQuarterNote" | "DottedHalfNote" | "DottedWholeNote" | "SixteenthNoteTriplet" | "EighthNoteTriplet" | "QuarterNoteTriplet" | "HalfNoteTriplet" | "Tick" | "Count" | "None" | "EQuartzCommandQuantization_MAX" */, Multiplier: Number): Number
    open fun GetCurrentClockTimestamp(WorldContextObject: UObject, InClockName: String): QuartzTransportTimeStamp
    open fun GetAudioRenderThreadToGameThreadMinLatency(): Number
    open fun GetAudioRenderThreadToGameThreadMaxLatency(): Number
    open fun GetAudioRenderThreadToGameThreadAverageLatency(): Number
    open fun DoesClockExist(WorldContextObject: UObject, ClockName: String): Boolean
    open fun DeleteClockByName(WorldContextObject: UObject, ClockName: String)
    open fun DeleteClockByHandle(WorldContextObject: UObject, InClockHandle: QuartzClockHandle = definedExternally): `T$618`
    open fun CreateNewClock(WorldContextObject: UObject, ClockName: String, InSettings: QuartzClockSettings, bOverrideSettingsIfClockExists: Boolean, bUseAudioEngineClockManager: Boolean): QuartzClockHandle

    companion object {
        fun Load(ResourceName: String): QuartzSubsystem
        fun Find(Outer: UObject, ResourceName: String): QuartzSubsystem
        fun GetDefaultObject(): QuartzSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): QuartzSubsystem
        fun C(Other: UObject): QuartzSubsystem
        fun C(Other: Any): QuartzSubsystem
    }
}

external interface `T$619` {
    var ClockHandle: QuartzClockHandle
}

external open class QuartzClockHandle : UObject {
    constructor()
    constructor(Outer: UObject)
    open var QuartzSubsystem: QuartzSubsystem
    open var WorldPtr: World
    open fun UnsubscribeFromTimeDivision(WorldContextObject: UObject, InQuantizationBoundary: String /* "Bar" | "Beat" | "ThirtySecondNote" | "SixteenthNote" | "EighthNote" | "QuarterNote" | "HalfNote" | "WholeNote" | "DottedSixteenthNote" | "DottedEighthNote" | "DottedQuarterNote" | "DottedHalfNote" | "DottedWholeNote" | "SixteenthNoteTriplet" | "EighthNoteTriplet" | "QuarterNoteTriplet" | "HalfNoteTriplet" | "Tick" | "Count" | "None" | "EQuartzCommandQuantization_MAX" */, ClockHandle: QuartzClockHandle = definedExternally): `T$619`
    open fun UnsubscribeFromAllTimeDivisions(WorldContextObject: UObject, ClockHandle: QuartzClockHandle = definedExternally): `T$619`
    open fun StopClock(WorldContextObject: UObject, CancelPendingEvents: Boolean, ClockHandle: QuartzClockHandle = definedExternally): `T$619`
    open fun StartClock(WorldContextObject: UObject, ClockHandle: QuartzClockHandle = definedExternally): `T$619`
    open fun ResumeClock(WorldContextObject: UObject, ClockHandle: QuartzClockHandle = definedExternally): `T$619`
    open fun PauseClock(WorldContextObject: UObject, ClockHandle: QuartzClockHandle = definedExternally): `T$619`
    open fun IsClockRunning(WorldContextObject: UObject): Boolean
    open fun GetTicksPerSecond(WorldContextObject: UObject): Number
    open fun GetThirtySecondNotesPerMinute(WorldContextObject: UObject): Number
    open fun GetSecondsPerTick(WorldContextObject: UObject): Number
    open fun GetMillisecondsPerTick(WorldContextObject: UObject): Number
    open fun GetEstimatedRunTime(WorldContextObject: UObject): Number
    open fun GetDurationOfQuantizationTypeInSeconds(WorldContextObject: UObject, QuantizationType: String /* "Bar" | "Beat" | "ThirtySecondNote" | "SixteenthNote" | "EighthNote" | "QuarterNote" | "HalfNote" | "WholeNote" | "DottedSixteenthNote" | "DottedEighthNote" | "DottedQuarterNote" | "DottedHalfNote" | "DottedWholeNote" | "SixteenthNoteTriplet" | "EighthNoteTriplet" | "QuarterNoteTriplet" | "HalfNoteTriplet" | "Tick" | "Count" | "None" | "EQuartzCommandQuantization_MAX" */, Multiplier: Number): Number
    open fun GetCurrentTimestamp(WorldContextObject: UObject): QuartzTransportTimeStamp
    open fun GetBeatsPerMinute(WorldContextObject: UObject): Number

    companion object {
        fun Load(ResourceName: String): QuartzClockHandle
        fun Find(Outer: UObject, ResourceName: String): QuartzClockHandle
        fun GetDefaultObject(): QuartzClockHandle
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): QuartzClockHandle
        fun C(Other: UObject): QuartzClockHandle
        fun C(Other: Any): QuartzClockHandle
    }
}

external object ESubmixEffectDynamicsProcessorType {
    var Compressor: String /* "Compressor" */
    var Limiter: String /* "Limiter" */
    var Expander: String /* "Expander" */
    var Gate: String /* "Gate" */
    var Count: String /* "Count" */
    var ESubmixEffectDynamicsProcessorType_MAX: String /* "ESubmixEffectDynamicsProcessorType_MAX" */
}

external object ESubmixEffectDynamicsPeakMode {
    var MeanSquared: String /* "MeanSquared" */
    var RootMeanSquared: String /* "RootMeanSquared" */
    var Peak: String /* "Peak" */
    var Count: String /* "Count" */
    var ESubmixEffectDynamicsPeakMode_MAX: String /* "ESubmixEffectDynamicsPeakMode_MAX" */
}

external object ESubmixEffectDynamicsChannelLinkMode {
    var Disabled: String /* "Disabled" */
    var Average: String /* "Average" */
    var Peak: String /* "Peak" */
    var Count: String /* "Count" */
    var ESubmixEffectDynamicsChannelLinkMode_MAX: String /* "ESubmixEffectDynamicsChannelLinkMode_MAX" */
}

external object ESubmixEffectDynamicsKeySource {
    var Default: String /* "Default" */
    var AudioBus: String /* "AudioBus" */
    var Submix: String /* "Submix" */
    var Count: String /* "Count" */
    var ESubmixEffectDynamicsKeySource_MAX: String /* "ESubmixEffectDynamicsKeySource_MAX" */
}

external open class SubmixEffectDynamicProcessorFilterSettings {
    open var bEnabled: Boolean
    open var Cutoff: Number
    open var GainDb: Number
    open fun clone(): SubmixEffectDynamicProcessorFilterSettings

    companion object {
        fun C(Other: UObject): SubmixEffectDynamicProcessorFilterSettings
        fun C(Other: Any): SubmixEffectDynamicProcessorFilterSettings
    }
}

external open class SubmixEffectDynamicsProcessorSettings {
    open var DynamicsProcessorType: String /* "Compressor" | "Limiter" | "Expander" | "Gate" | "Count" | "ESubmixEffectDynamicsProcessorType_MAX" */
    open var PeakMode: String /* "MeanSquared" | "RootMeanSquared" | "Peak" | "Count" | "ESubmixEffectDynamicsPeakMode_MAX" */
    open var LinkMode: String /* "Disabled" | "Average" | "Peak" | "Count" | "ESubmixEffectDynamicsChannelLinkMode_MAX" */
    open var InputGainDb: Number
    open var ThresholdDb: Number
    open var Ratio: Number
    open var KneeBandwidthDb: Number
    open var LookAheadMsec: Number
    open var AttackTimeMsec: Number
    open var ReleaseTimeMsec: Number
    open var KeySource: String /* "Default" | "AudioBus" | "Submix" | "Count" | "ESubmixEffectDynamicsKeySource_MAX" */
    open var ExternalAudioBus: AudioBus
    open var ExternalSubmix: SoundSubmix
    open var bChannelLinked: Boolean
    open var bAnalogMode: Boolean
    open var bBypass: Boolean
    open var bKeyAudition: Boolean
    open var KeyGainDb: Number
    open var OutputGainDb: Number
    open var KeyHighshelf: SubmixEffectDynamicProcessorFilterSettings
    open var KeyLowshelf: SubmixEffectDynamicProcessorFilterSettings
    open fun clone(): SubmixEffectDynamicsProcessorSettings

    companion object {
        fun C(Other: UObject): SubmixEffectDynamicsProcessorSettings
        fun C(Other: Any): SubmixEffectDynamicsProcessorSettings
    }
}

external open class SubmixEffectDynamicsProcessorPreset : SoundEffectSubmixPreset {
    constructor()
    constructor(Outer: UObject)
    open var Settings: SubmixEffectDynamicsProcessorSettings
    open fun SetSettings(Settings: SubmixEffectDynamicsProcessorSettings)
    open fun SetExternalSubmix(Submix: SoundSubmix)
    open fun SetAudioBus(AudioBus: AudioBus)
    open fun ResetKey()

    companion object {
        fun Load(ResourceName: String): SubmixEffectDynamicsProcessorPreset
        fun Find(Outer: UObject, ResourceName: String): SubmixEffectDynamicsProcessorPreset
        fun GetDefaultObject(): SubmixEffectDynamicsProcessorPreset
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SubmixEffectDynamicsProcessorPreset
        fun C(Other: UObject): SubmixEffectDynamicsProcessorPreset
        fun C(Other: Any): SubmixEffectDynamicsProcessorPreset
    }
}

external open class SubmixEffectEQBand {
    open var Frequency: Number
    open var Bandwidth: Number
    open var GainDb: Number
    open var bEnabled: Boolean
    open fun clone(): SubmixEffectEQBand

    companion object {
        fun C(Other: UObject): SubmixEffectEQBand
        fun C(Other: Any): SubmixEffectEQBand
    }
}

external open class SubmixEffectSubmixEQSettings {
    open var EQBands: Array<SubmixEffectEQBand>
    open fun clone(): SubmixEffectSubmixEQSettings

    companion object {
        fun C(Other: UObject): SubmixEffectSubmixEQSettings
        fun C(Other: Any): SubmixEffectSubmixEQSettings
    }
}

external open class SubmixEffectSubmixEQPreset : SoundEffectSubmixPreset {
    constructor()
    constructor(Outer: UObject)
    open var Settings: SubmixEffectSubmixEQSettings
    open fun SetSettings(InSettings: SubmixEffectSubmixEQSettings)

    companion object {
        fun Load(ResourceName: String): SubmixEffectSubmixEQPreset
        fun Find(Outer: UObject, ResourceName: String): SubmixEffectSubmixEQPreset
        fun GetDefaultObject(): SubmixEffectSubmixEQPreset
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SubmixEffectSubmixEQPreset
        fun C(Other: UObject): SubmixEffectSubmixEQPreset
        fun C(Other: Any): SubmixEffectSubmixEQPreset
    }
}

external open class SubmixEffectReverbSettings {
    open var bBypassEarlyReflections: Boolean
    open var ReflectionsDelay: Number
    open var GainHF: Number
    open var ReflectionsGain: Number
    open var bBypassLateReflections: Boolean
    open var LateDelay: Number
    open var DecayTime: Number
    open var Density: Number
    open var Diffusion: Number
    open var AirAbsorptionGainHF: Number
    open var DecayHFRatio: Number
    open var LateGain: Number
    open var Gain: Number
    open var WetLevel: Number
    open var DryLevel: Number
    open var bBypass: Boolean
    open fun clone(): SubmixEffectReverbSettings

    companion object {
        fun C(Other: UObject): SubmixEffectReverbSettings
        fun C(Other: Any): SubmixEffectReverbSettings
    }
}

external open class SubmixEffectReverbPreset : SoundEffectSubmixPreset {
    constructor()
    constructor(Outer: UObject)
    open var Settings: SubmixEffectReverbSettings
    open fun SetSettingsWithReverbEffect(InReverbEffect: ReverbEffect, WetLevel: Number, DryLevel: Number)
    open fun SetSettings(InSettings: SubmixEffectReverbSettings)

    companion object {
        fun Load(ResourceName: String): SubmixEffectReverbPreset
        fun Find(Outer: UObject, ResourceName: String): SubmixEffectReverbPreset
        fun GetDefaultObject(): SubmixEffectReverbPreset
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SubmixEffectReverbPreset
        fun C(Other: UObject): SubmixEffectReverbPreset
        fun C(Other: Any): SubmixEffectReverbPreset
    }
}

external open class SoundWaveProcedural : SoundWave {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SoundWaveProcedural
        fun Find(Outer: UObject, ResourceName: String): SoundWaveProcedural
        fun GetDefaultObject(): SoundWaveProcedural
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SoundWaveProcedural
        fun C(Other: UObject): SoundWaveProcedural
        fun C(Other: Any): SoundWaveProcedural
    }
}

external open class SynthComponent : SceneComponent {
    constructor()
    constructor(Outer: UObject)
    open var bAutoDestroy: Boolean
    open var bStopWhenOwnerDestroyed: Boolean
    open var bAllowSpatialization: Boolean
    open var bOverrideAttenuation: Boolean
    open var bOutputToBusOnly: Boolean
    open var bEnableBusSends: Boolean
    open var bEnableBaseSubmix: Boolean
    open var bEnableSubmixSends: Boolean
    open var AttenuationSettings: SoundAttenuation
    open var AttenuationOverrides: SoundAttenuationSettings
    open var ConcurrencySettings: SoundConcurrency
    open var ConcurrencySet: Any
    open var SoundClass: SoundClass
    open var SourceEffectChain: SoundEffectSourcePresetChain
    open var SoundSubmix: SoundSubmixBase
    open var SoundSubmixSends: Array<SoundSubmixSendInfo>
    open var BusSends: Array<SoundSourceBusSendInfo>
    open var PreEffectBusSends: Array<SoundSourceBusSendInfo>
    open var bIsUISound: Boolean
    open var bIsPreviewSound: Boolean
    open var EnvelopeFollowerAttackTime: Number
    open var EnvelopeFollowerReleaseTime: Number
    open var OnAudioEnvelopeValue: UnrealEngineMulticastDelegate<(EnvelopeValue: Number) -> Unit>
    open var Synth: SynthSound
    open var AudioComponent: AudioComponent
    open fun Stop()
    open fun Start()
    open fun SetVolumeMultiplier(VolumeMultiplier: Number)
    open fun SetSubmixSend(Submix: SoundSubmixBase, SendLevel: Number)
    open fun SetOutputToBusOnly(bInOutputToBusOnly: Boolean)
    open fun SetLowPassFilterFrequency(InLowPassFilterFrequency: Number)
    open fun SetLowPassFilterEnabled(InLowPassFilterEnabled: Boolean)
    open fun IsPlaying(): Boolean

    companion object {
        fun Load(ResourceName: String): SynthComponent
        fun Find(Outer: UObject, ResourceName: String): SynthComponent
        fun GetDefaultObject(): SynthComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SynthComponent
        fun C(Other: UObject): SynthComponent
        fun C(Other: Any): SynthComponent
    }
}

external open class SynthSound : SoundWaveProcedural {
    constructor()
    constructor(Outer: UObject)
    open var OwningSynthComponent: SynthComponent

    companion object {
        fun Load(ResourceName: String): SynthSound
        fun Find(Outer: UObject, ResourceName: String): SynthSound
        fun GetDefaultObject(): SynthSound
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SynthSound
        fun C(Other: UObject): SynthSound
        fun C(Other: Any): SynthSound
    }
}

external open class MediaSource : UObject {
    constructor()
    constructor(Outer: UObject)
    open fun Validate(): Boolean
    open fun SetMediaOption(Key: String, Value: String)
    open fun SetMediaOption(Key: String, Value: Any)
    open fun SetMediaOption(Key: String, Value: Number)
    open fun SetMediaOption(Key: String, Value: Boolean)
    open fun GetUrl(): String

    companion object {
        fun Load(ResourceName: String): MediaSource
        fun Find(Outer: UObject, ResourceName: String): MediaSource
        fun GetDefaultObject(): MediaSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MediaSource
        fun C(Other: UObject): MediaSource
        fun C(Other: Any): MediaSource
    }
}

external open class BaseMediaSource : MediaSource {
    open var PlatformPlayerNames: Any
    open var PlayerName: String
    fun <K : String> addEventListener(type: K, listener: (self: MediaSource, ev: Any) -> Any, options: Boolean)
    fun <K : String> addEventListener(type: K, listener: (self: MediaSource, ev: Any) -> Any)
    fun <K : String> addEventListener(type: K, listener: (self: MediaSource, ev: Any) -> Any, options: AddEventListenerOptions)
    fun addEventListener(type: String, listener: EventListener, options: Boolean)
    fun addEventListener(type: String, listener: EventListener)
    fun addEventListener(type: String, listener: EventListener, options: AddEventListenerOptions)
    fun addEventListener(type: String, listener: EventListenerObject, options: Boolean)
    fun addEventListener(type: String, listener: EventListenerObject)
    fun addEventListener(type: String, listener: EventListenerObject, options: AddEventListenerOptions)
    fun <K : String> removeEventListener(type: K, listener: (self: MediaSource, ev: Any) -> Any, options: Boolean)
    fun <K : String> removeEventListener(type: K, listener: (self: MediaSource, ev: Any) -> Any)
    fun <K : String> removeEventListener(type: K, listener: (self: MediaSource, ev: Any) -> Any, options: EventListenerOptions)
    fun removeEventListener(type: String, listener: EventListener, options: Boolean)
    fun removeEventListener(type: String, listener: EventListener)
    fun removeEventListener(type: String, listener: EventListener, options: EventListenerOptions)
    fun removeEventListener(type: String, listener: EventListenerObject, options: Boolean)
    fun removeEventListener(type: String, listener: EventListenerObject)
    fun removeEventListener(type: String, listener: EventListenerObject, options: EventListenerOptions)

    companion object {
        fun Load(ResourceName: String): BaseMediaSource
        fun Find(Outer: UObject, ResourceName: String): BaseMediaSource
        fun GetDefaultObject(): BaseMediaSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BaseMediaSource
        fun C(Other: UObject): BaseMediaSource
        fun C(Other: Any): BaseMediaSource
    }
}

external open class FileMediaSource : BaseMediaSource {
    open var FilePath: String
    open var PrecacheFile: Boolean
    open fun SetFilePath(Path: String)

    companion object {
        fun Load(ResourceName: String): FileMediaSource
        fun Find(Outer: UObject, ResourceName: String): FileMediaSource
        fun GetDefaultObject(): FileMediaSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FileMediaSource
        fun C(Other: UObject): FileMediaSource
        fun C(Other: Any): FileMediaSource
    }
}

external open class MediaCaptureDevice {
    open var DisplayName: String
    open var URL: String
    open fun clone(): MediaCaptureDevice

    companion object {
        fun C(Other: UObject): MediaCaptureDevice
        fun C(Other: Any): MediaCaptureDevice
    }
}

external interface `T$620` {
    var OutDevices: Array<MediaCaptureDevice>
}

external interface `T$621` {
    var OutDevices: Array<MediaCaptureDevice>
}

external interface `T$622` {
    var OutDevices: Array<MediaCaptureDevice>
}

external open class MediaBlueprintFunctionLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MediaBlueprintFunctionLibrary
        fun Find(Outer: UObject, ResourceName: String): MediaBlueprintFunctionLibrary
        fun GetDefaultObject(): MediaBlueprintFunctionLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MediaBlueprintFunctionLibrary
        fun EnumerateWebcamCaptureDevices(OutDevices: Array<MediaCaptureDevice> = definedExternally, Filter: Number = definedExternally): `T$620`
        fun EnumerateVideoCaptureDevices(OutDevices: Array<MediaCaptureDevice> = definedExternally, Filter: Number = definedExternally): `T$621`
        fun EnumerateAudioCaptureDevices(OutDevices: Array<MediaCaptureDevice> = definedExternally, Filter: Number = definedExternally): `T$622`
        fun C(Other: UObject): MediaBlueprintFunctionLibrary
        fun C(Other: Any): MediaBlueprintFunctionLibrary
    }
}

external object MediaTextureOutputFormat {
    var MTOF_Default: String /* "MTOF_Default" */
    var MTOF_SRGB_LINOUT: String /* "MTOF_SRGB_LINOUT" */
    var MTOF_MAX: String /* "MTOF_MAX" */
}

external object MediaTextureOrientation {
    var MTORI_Original: String /* "MTORI_Original" */
    var MTORI_CW90: String /* "MTORI_CW90" */
    var MTORI_CW180: String /* "MTORI_CW180" */
    var MTORI_CW270: String /* "MTORI_CW270" */
    var MTORI_MAX: String /* "MTORI_MAX" */
}

external interface `T$623` {
    var OutIndex: Number
    var `$`: MediaSource
}

external interface `T$624` {
    var InOutIndex: Number
    var `$`: MediaSource
}

external open class MediaPlaylist : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Items: Array<MediaSource>
    open fun Replace(index: Number, Replacement: MediaSource): Boolean
    open fun RemoveAt(index: Number): Boolean
    open fun Remove(MediaSource: MediaSource): Boolean
    open fun Num(): Number
    open fun Insert(MediaSource: MediaSource, index: Number)
    open fun GetRandom(OutIndex: Number = definedExternally): `T$623`
    open fun GetPrevious(InOutIndex: Number = definedExternally): `T$624`
    open fun GetNext(InOutIndex: Number = definedExternally): `T$624`
    open fun Get(index: Number): MediaSource
    open fun AddUrl(URL: String): Boolean
    open fun AddFile(FilePath: String): Boolean
    open fun Add(MediaSource: MediaSource): Boolean

    companion object {
        fun Load(ResourceName: String): MediaPlaylist
        fun Find(Outer: UObject, ResourceName: String): MediaPlaylist
        fun GetDefaultObject(): MediaPlaylist
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MediaPlaylist
        fun C(Other: UObject): MediaPlaylist
        fun C(Other: Any): MediaPlaylist
    }
}

external object EMediaPlayerTrack {
    var Audio: String /* "Audio" */
    var Caption: String /* "Caption" */
    var Metadata: String /* "Metadata" */
    var Script: String /* "Script" */
    var Subtitle: String /* "Subtitle" */
    var Text: String /* "Text" */
    var Video: String /* "Video" */
    var EMediaPlayerTrack_MAX: String /* "EMediaPlayerTrack_MAX" */
}

external open class MediaPlayerTrackOptions {
    open var Audio: Number
    open var Caption: Number
    open var MetaData: Number
    open var Script: Number
    open var Subtitle: Number
    open var text: Number
    open var Video: Number
    open fun clone(): MediaPlayerTrackOptions

    companion object {
        fun C(Other: UObject): MediaPlayerTrackOptions
        fun C(Other: Any): MediaPlayerTrackOptions
    }
}

external object EMediaPlayerOptionBooleanOverride {
    var UseMediaPlayerSetting: String /* "UseMediaPlayerSetting" */
    var Enabled: String /* "Enabled" */
    var Disabled: String /* "Disabled" */
    var EMediaPlayerOptionBooleanOverride_MAX: String /* "EMediaPlayerOptionBooleanOverride_MAX" */
}

external open class MediaPlayerOptions {
    open var Tracks: MediaPlayerTrackOptions
    open var SeekTime: Timespan
    open var PlayOnOpen: String /* "UseMediaPlayerSetting" | "Enabled" | "Disabled" | "EMediaPlayerOptionBooleanOverride_MAX" */
    open var loop: String /* "UseMediaPlayerSetting" | "Enabled" | "Disabled" | "EMediaPlayerOptionBooleanOverride_MAX" */
    open fun clone(): MediaPlayerOptions

    companion object {
        fun C(Other: UObject): MediaPlayerOptions
        fun C(Other: Any): MediaPlayerOptions
    }
}

external open class MediaTimeStampInfo : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Time: Timespan
    open var SequenceIndex: Any

    companion object {
        fun Load(ResourceName: String): MediaTimeStampInfo
        fun Find(Outer: UObject, ResourceName: String): MediaTimeStampInfo
        fun GetDefaultObject(): MediaTimeStampInfo
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MediaTimeStampInfo
        fun C(Other: UObject): MediaTimeStampInfo
        fun C(Other: Any): MediaTimeStampInfo
    }
}

external interface `T$625` {
    var bSuccess: Boolean
}

external interface `T$626` {
    var OutRates: Array<FloatRange>
}

external open class MediaPlayer : UObject {
    constructor()
    constructor(Outer: UObject)
    open var OnEndReached: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnMediaClosed: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnMediaOpened: UnrealEngineMulticastDelegate<(OpenedUrl: String) -> Unit>
    open var OnMediaOpenFailed: UnrealEngineMulticastDelegate<(FailedUrl: String) -> Unit>
    open var OnPlaybackResumed: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnPlaybackSuspended: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnSeekCompleted: UnrealEngineMulticastDelegate<() -> Unit>
    open var OnTracksChanged: UnrealEngineMulticastDelegate<() -> Unit>
    open var CacheAhead: Timespan
    open var CacheBehind: Timespan
    open var CacheBehindGame: Timespan
    open var NativeAudioOut: Boolean
    open var PlayOnOpen: Boolean
    open var Shuffle: Boolean
    open var loop: Boolean
    open var Playlist: MediaPlaylist
    open var PlaylistIndex: Number
    open var TimeDelay: Timespan
    open var HorizontalFieldOfView: Number
    open var VerticalFieldOfView: Number
    open var ViewRotation: Rotator
    open var PlayerGuid: Guid
    open var AffectedByPIEHandling: Boolean
    open fun SupportsSeeking(): Boolean
    open fun SupportsScrubbing(): Boolean
    open fun SupportsRate(Rate: Number, Unthinned: Boolean): Boolean
    open fun SetViewRotation(Rotation: Rotator, Absolute: Boolean): Boolean
    open fun SetViewField(Horizontal: Number, Vertical: Number, Absolute: Boolean): Boolean
    open fun SetVideoTrackFrameRate(TrackIndex: Number, FormatIndex: Number, FrameRate: Number): Boolean
    open fun SetTrackFormat(TrackType: String /* "Audio" | "Caption" | "Metadata" | "Script" | "Subtitle" | "Text" | "Video" | "EMediaPlayerTrack_MAX" */, TrackIndex: Number, FormatIndex: Number): Boolean
    open fun SetTimeDelay(TimeDelay: Timespan)
    open fun SetRate(Rate: Number): Boolean
    open fun SetNativeVolume(Volume: Number): Boolean
    open fun SetMediaOptions(Options: MediaSource)
    open fun SetLooping(Looping: Boolean): Boolean
    open fun SetDesiredPlayerName(PlayerName: String)
    open fun SetBlockOnTime(Time: Timespan)
    open fun SelectTrack(TrackType: String /* "Audio" | "Caption" | "Metadata" | "Script" | "Subtitle" | "Text" | "Video" | "EMediaPlayerTrack_MAX" */, TrackIndex: Number): Boolean
    open fun Seek(Time: Timespan): Boolean
    open fun Rewind(): Boolean
    open fun Reopen(): Boolean
    open fun Previous(): Boolean
    open fun PlayAndSeek()
    open fun Play(): Boolean
    open fun Pause(): Boolean
    open fun OpenUrl(URL: String): Boolean
    open fun OpenSourceWithOptions(MediaSource: MediaSource, Options: MediaPlayerOptions): Boolean
    open fun OpenSourceLatent(WorldContextObject: UObject, LatentInfo: LatentActionInfo, MediaSource: MediaSource, Options: MediaPlayerOptions, bSuccess: Boolean = definedExternally): `T$625`
    open fun OpenSource(MediaSource: MediaSource): Boolean
    open fun OpenPlaylistIndex(InPlaylist: MediaPlaylist, index: Number): Boolean
    open fun OpenPlaylist(InPlaylist: MediaPlaylist): Boolean
    open fun OpenFile(FilePath: String): Boolean
    open fun Next(): Boolean
    open fun IsReady(): Boolean
    open fun IsPreparing(): Boolean
    open fun IsPlaying(): Boolean
    open fun IsPaused(): Boolean
    open fun IsLooping(): Boolean
    open fun IsConnecting(): Boolean
    open fun IsClosed(): Boolean
    open fun IsBuffering(): Boolean
    open fun HasError(): Boolean
    open fun GetViewRotation(): Rotator
    open fun GetVideoTrackType(TrackIndex: Number, FormatIndex: Number): String
    open fun GetVideoTrackFrameRates(TrackIndex: Number, FormatIndex: Number): FloatRange
    open fun GetVideoTrackFrameRate(TrackIndex: Number, FormatIndex: Number): Number
    open fun GetVideoTrackDimensions(TrackIndex: Number, FormatIndex: Number): IntPoint
    open fun GetVideoTrackAspectRatio(TrackIndex: Number, FormatIndex: Number): Number
    open fun GetVerticalFieldOfView(): Number
    open fun GetUrl(): String
    open fun GetTrackLanguage(TrackType: String /* "Audio" | "Caption" | "Metadata" | "Script" | "Subtitle" | "Text" | "Video" | "EMediaPlayerTrack_MAX" */, TrackIndex: Number): String
    open fun GetTrackFormat(TrackType: String /* "Audio" | "Caption" | "Metadata" | "Script" | "Subtitle" | "Text" | "Video" | "EMediaPlayerTrack_MAX" */, TrackIndex: Number): Number
    open fun GetTrackDisplayName(TrackType: String /* "Audio" | "Caption" | "Metadata" | "Script" | "Subtitle" | "Text" | "Video" | "EMediaPlayerTrack_MAX" */, TrackIndex: Number): String
    open fun GetTimeStamp(): MediaTimeStampInfo
    open fun GetTimeDelay(): Timespan
    open fun GetTime(): Timespan
    open fun GetSupportedRates(OutRates: Array<FloatRange> = definedExternally, Unthinned: Boolean = definedExternally): `T$626`
    open fun GetSelectedTrack(TrackType: String /* "Audio" | "Caption" | "Metadata" | "Script" | "Subtitle" | "Text" | "Video" | "EMediaPlayerTrack_MAX" */): Number
    open fun GetRate(): Number
    open fun GetPlaylistIndex(): Number
    open fun GetPlaylist(): MediaPlaylist
    open fun GetPlayerName(): String
    open fun GetNumTracks(TrackType: String /* "Audio" | "Caption" | "Metadata" | "Script" | "Subtitle" | "Text" | "Video" | "EMediaPlayerTrack_MAX" */): Number
    open fun GetNumTrackFormats(TrackType: String /* "Audio" | "Caption" | "Metadata" | "Script" | "Subtitle" | "Text" | "Video" | "EMediaPlayerTrack_MAX" */, TrackIndex: Number): Number
    open fun GetMediaName(): String
    open fun GetHorizontalFieldOfView(): Number
    open fun GetDuration(): Timespan
    open fun GetDesiredPlayerName(): String
    open fun GetAudioTrackType(TrackIndex: Number, FormatIndex: Number): String
    open fun GetAudioTrackSampleRate(TrackIndex: Number, FormatIndex: Number): Number
    open fun GetAudioTrackChannels(TrackIndex: Number, FormatIndex: Number): Number
    open fun Close()
    open fun CanPlayUrl(URL: String): Boolean
    open fun CanPlaySource(MediaSource: MediaSource): Boolean
    open fun CanPause(): Boolean

    companion object {
        fun Load(ResourceName: String): MediaPlayer
        fun Find(Outer: UObject, ResourceName: String): MediaPlayer
        fun GetDefaultObject(): MediaPlayer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MediaPlayer
        fun C(Other: UObject): MediaPlayer
        fun C(Other: Any): MediaPlayer
    }
}

external open class MediaTexture : Texture {
    constructor()
    constructor(Outer: UObject)
    open var AddressX: String /* "TA_Wrap" | "TA_Clamp" | "TA_Mirror" | "TA_MAX" */
    open var AddressY: String /* "TA_Wrap" | "TA_Clamp" | "TA_Mirror" | "TA_MAX" */
    open var AutoClear: Boolean
    open var ClearColor: LinearColor
    open var EnableGenMips: Boolean
    open var NumMips: Number
    open var NewStyleOutput: Boolean
    open var OutputFormat: String /* "MTOF_Default" | "MTOF_SRGB_LINOUT" | "MTOF_MAX" */
    open var CurrentAspectRatio: Number
    open var CurrentOrientation: String /* "MTORI_Original" | "MTORI_CW90" | "MTORI_CW180" | "MTORI_CW270" | "MTORI_MAX" */
    open var MediaPlayer: MediaPlayer
    open fun SetMediaPlayer(NewMediaPlayer: MediaPlayer)
    open fun GetWidth(): Number
    open fun GetTextureNumMips(): Number
    open fun GetMediaPlayer(): MediaPlayer
    open fun GetHeight(): Number
    open fun GetAspectRatio(): Number

    companion object {
        fun Load(ResourceName: String): MediaTexture
        fun Find(Outer: UObject, ResourceName: String): MediaTexture
        fun GetDefaultObject(): MediaTexture
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MediaTexture
        fun C(Other: UObject): MediaTexture
        fun C(Other: Any): MediaTexture
    }
}

external open class MediaComponent : ActorComponent {
    constructor()
    constructor(Outer: UObject)
    open var MediaTexture: MediaTexture
    open var MediaPlayer: MediaPlayer
    open fun GetMediaTexture(): MediaTexture
    open fun GetMediaPlayer(): MediaPlayer

    companion object {
        fun Load(ResourceName: String): MediaComponent
        fun Find(Outer: UObject, ResourceName: String): MediaComponent
        fun GetDefaultObject(): MediaComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MediaComponent
        fun C(Other: UObject): MediaComponent
        fun C(Other: Any): MediaComponent
    }
}

external object EMediaSoundChannels {
    var Mono: String /* "Mono" */
    var Stereo: String /* "Stereo" */
    var Surround: String /* "Surround" */
    var EMediaSoundChannels_MAX: String /* "EMediaSoundChannels_MAX" */
}

external object EMediaSoundComponentFFTSize {
    var Min_64: String /* "Min_64" */
    var Small_256: String /* "Small_256" */
    var Medium_512: String /* "Medium_512" */
    var Large_1024: String /* "Large_1024" */
    var EMediaSoundComponentFFTSize_MAX: String /* "EMediaSoundComponentFFTSize_MAX" */
}

external open class MediaSoundComponentSpectralData {
    open var FrequencyHz: Number
    open var Magnitude: Number
    open fun clone(): MediaSoundComponentSpectralData

    companion object {
        fun C(Other: UObject): MediaSoundComponentSpectralData
        fun C(Other: Any): MediaSoundComponentSpectralData
    }
}

external open class MediaSoundComponent : SynthComponent {
    constructor()
    constructor(Outer: UObject)
    open var Channels: String /* "Mono" | "Stereo" | "Surround" | "EMediaSoundChannels_MAX" */
    open var DynamicRateAdjustment: Boolean
    open var RateAdjustmentFactor: Number
    open var RateAdjustmentRange: FloatRange
    open var MediaPlayer: MediaPlayer
    open fun SetSpectralAnalysisSettings(InFrequenciesToAnalyze: Array<Number>, InFFTSize: String /* "Min_64" | "Small_256" | "Medium_512" | "Large_1024" | "EMediaSoundComponentFFTSize_MAX" */)
    open fun SetMediaPlayer(NewMediaPlayer: MediaPlayer)
    open fun SetEnvelopeFollowingsettings(AttackTimeMsec: Number, ReleaseTimeMsec: Number)
    open fun SetEnableSpectralAnalysis(bInSpectralAnalysisEnabled: Boolean)
    open fun SetEnableEnvelopeFollowing(bInEnvelopeFollowing: Boolean)
    open fun GetSpectralData(): Array<MediaSoundComponentSpectralData>
    open fun GetNormalizedSpectralData(): Array<MediaSoundComponentSpectralData>
    open fun GetMediaPlayer(): MediaPlayer
    open fun GetEnvelopeValue(): Number
    open fun GetAttenuationSettingsToApply(OutAttenuationSettings: SoundAttenuationSettings = definedExternally): `T$181`

    companion object {
        fun Load(ResourceName: String): MediaSoundComponent
        fun Find(Outer: UObject, ResourceName: String): MediaSoundComponent
        fun GetDefaultObject(): MediaSoundComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MediaSoundComponent
        fun C(Other: UObject): MediaSoundComponent
        fun C(Other: Any): MediaSoundComponent
    }
}

external open class PlatformMediaSource : MediaSource {
    open var PlatformMediaSources: Any
    open var MediaSource: MediaSource
    fun <K : String> addEventListener(type: K, listener: (self: MediaSource, ev: Any) -> Any, options: Boolean)
    fun <K : String> addEventListener(type: K, listener: (self: MediaSource, ev: Any) -> Any)
    fun <K : String> addEventListener(type: K, listener: (self: MediaSource, ev: Any) -> Any, options: AddEventListenerOptions)
    fun addEventListener(type: String, listener: EventListener, options: Boolean)
    fun addEventListener(type: String, listener: EventListener)
    fun addEventListener(type: String, listener: EventListener, options: AddEventListenerOptions)
    fun addEventListener(type: String, listener: EventListenerObject, options: Boolean)
    fun addEventListener(type: String, listener: EventListenerObject)
    fun addEventListener(type: String, listener: EventListenerObject, options: AddEventListenerOptions)
    fun <K : String> removeEventListener(type: K, listener: (self: MediaSource, ev: Any) -> Any, options: Boolean)
    fun <K : String> removeEventListener(type: K, listener: (self: MediaSource, ev: Any) -> Any)
    fun <K : String> removeEventListener(type: K, listener: (self: MediaSource, ev: Any) -> Any, options: EventListenerOptions)
    fun removeEventListener(type: String, listener: EventListener, options: Boolean)
    fun removeEventListener(type: String, listener: EventListener)
    fun removeEventListener(type: String, listener: EventListener, options: EventListenerOptions)
    fun removeEventListener(type: String, listener: EventListenerObject, options: Boolean)
    fun removeEventListener(type: String, listener: EventListenerObject)
    fun removeEventListener(type: String, listener: EventListenerObject, options: EventListenerOptions)

    companion object {
        fun Load(ResourceName: String): PlatformMediaSource
        fun Find(Outer: UObject, ResourceName: String): PlatformMediaSource
        fun GetDefaultObject(): PlatformMediaSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PlatformMediaSource
        fun C(Other: UObject): PlatformMediaSource
        fun C(Other: Any): PlatformMediaSource
    }
}

external open class StreamMediaSource : BaseMediaSource {
    open var StreamUrl: String

    companion object {
        fun Load(ResourceName: String): StreamMediaSource
        fun Find(Outer: UObject, ResourceName: String): StreamMediaSource
        fun GetDefaultObject(): StreamMediaSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): StreamMediaSource
        fun C(Other: UObject): StreamMediaSource
        fun C(Other: Any): StreamMediaSource
    }
}

external open class TimeSynchronizableMediaSource : BaseMediaSource {
    open var bUseTimeSynchronization: Boolean
    open var FrameDelay: Number
    open var TimeDelay: Any

    companion object {
        fun Load(ResourceName: String): TimeSynchronizableMediaSource
        fun Find(Outer: UObject, ResourceName: String): TimeSynchronizableMediaSource
        fun GetDefaultObject(): TimeSynchronizableMediaSource
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TimeSynchronizableMediaSource
        fun C(Other: UObject): TimeSynchronizableMediaSource
        fun C(Other: Any): TimeSynchronizableMediaSource
    }
}

external open class AnimSequenceLevelSequenceLink : AssetUserData {
    constructor()
    constructor(Outer: UObject)
    open var SkelTrackGuid: Guid
    open var PathToLevelSequence: SoftObjectPath

    companion object {
        fun Load(ResourceName: String): AnimSequenceLevelSequenceLink
        fun Find(Outer: UObject, ResourceName: String): AnimSequenceLevelSequenceLink
        fun GetDefaultObject(): AnimSequenceLevelSequenceLink
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimSequenceLevelSequenceLink
        fun C(Other: UObject): AnimSequenceLevelSequenceLink
        fun C(Other: Any): AnimSequenceLevelSequenceLink
    }
}

external open class DefaultLevelSequenceInstanceData : UObject {
    constructor()
    constructor(Outer: UObject)
    open var TransformOriginActor: Actor
    open var TransformOrigin: Transform

    companion object {
        fun Load(ResourceName: String): DefaultLevelSequenceInstanceData
        fun Find(Outer: UObject, ResourceName: String): DefaultLevelSequenceInstanceData
        fun GetDefaultObject(): DefaultLevelSequenceInstanceData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DefaultLevelSequenceInstanceData
        fun C(Other: UObject): DefaultLevelSequenceInstanceData
        fun C(Other: Any): DefaultLevelSequenceInstanceData
    }
}

external open class LevelSequenceMetaData : Interface {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LevelSequenceMetaData
        fun Find(Outer: UObject, ResourceName: String): LevelSequenceMetaData
        fun GetDefaultObject(): LevelSequenceMetaData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelSequenceMetaData
        fun C(Other: UObject): LevelSequenceMetaData
        fun C(Other: Any): LevelSequenceMetaData
    }
}

external interface `T$627` {
    var OutActor: LevelSequenceActor
    var `$`: LevelSequencePlayer
}

external open class LevelSequencePlayer : MovieSceneSequencePlayer {
    constructor()
    constructor(Outer: UObject)
    open var OnCameraCut: UnrealEngineMulticastDelegate<(CameraComponent: CameraComponent) -> Unit>
    open fun GetActiveCameraComponent(): CameraComponent

    companion object {
        fun Load(ResourceName: String): LevelSequencePlayer
        fun Find(Outer: UObject, ResourceName: String): LevelSequencePlayer
        fun GetDefaultObject(): LevelSequencePlayer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelSequencePlayer
        fun CreateLevelSequencePlayer(WorldContextObject: UObject, LevelSequence: LevelSequence, Settings: MovieSceneSequencePlaybackSettings, OutActor: LevelSequenceActor = definedExternally): `T$627`
        fun C(Other: UObject): LevelSequencePlayer
        fun C(Other: Any): LevelSequencePlayer
    }
}

external open class LevelSequenceCameraSettings {
    open var bOverrideAspectRatioAxisConstraint: Boolean
    open var AspectRatioAxisConstraint: String /* "AspectRatio_MaintainYFOV" | "AspectRatio_MaintainXFOV" | "AspectRatio_MajorAxisFOV" | "AspectRatio_MAX" */
    open fun clone(): LevelSequenceCameraSettings

    companion object {
        fun C(Other: UObject): LevelSequenceCameraSettings
        fun C(Other: Any): LevelSequenceCameraSettings
    }
}

external open class LevelSequenceSnapshotSettings {
    open var ZeroPadAmount: Number
    open var FrameRate: FrameRate
    open fun clone(): LevelSequenceSnapshotSettings

    companion object {
        fun C(Other: UObject): LevelSequenceSnapshotSettings
        fun C(Other: Any): LevelSequenceSnapshotSettings
    }
}

external open class LevelSequencePlayerSnapshot {
    open var MasterName: String
    open var MasterTime: QualifiedFrameTime
    open var SourceTime: QualifiedFrameTime
    open var CurrentShotName: String
    open var CurrentShotLocalTime: QualifiedFrameTime
    open var CurrentShotSourceTime: QualifiedFrameTime
    open var SourceTimecode: String
    open var CameraComponent: CameraComponent
    open var Settings: LevelSequenceSnapshotSettings
    open var ActiveShot: LevelSequence
    open var ShotID: MovieSceneSequenceID
    open fun clone(): LevelSequencePlayerSnapshot

    companion object {
        fun C(Other: UObject): LevelSequencePlayerSnapshot
        fun C(Other: Any): LevelSequencePlayerSnapshot
    }
}

external open class LevelSequenceBurnIn : UserWidget {
    constructor()
    constructor(Outer: UObject)
    open var FrameInformation: LevelSequencePlayerSnapshot
    open var LevelSequenceActor: LevelSequenceActor
    open fun SetSettings(InSettings: UObject)
    open fun GetSettingsClass(): UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): LevelSequenceBurnIn
        fun Find(Outer: UObject, ResourceName: String): LevelSequenceBurnIn
        fun GetDefaultObject(): LevelSequenceBurnIn
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelSequenceBurnIn
        fun C(Other: UObject): LevelSequenceBurnIn
        fun C(Other: Any): LevelSequenceBurnIn
    }
}

external open class LevelSequenceActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var PlaybackSettings: MovieSceneSequencePlaybackSettings
    open var SequencePlayer: LevelSequencePlayer
    open var LevelSequence: SoftObjectPath
    open var CameraSettings: LevelSequenceCameraSettings
    open var BurnInOptions: LevelSequenceBurnInOptions
    open var BindingOverrides: MovieSceneBindingOverrides
    open var bAutoPlay: Boolean
    open var bOverrideInstanceData: Boolean
    open var bReplicatePlayback: Boolean
    open var DefaultInstanceData: UObject
    open var BurnInInstance: LevelSequenceBurnIn
    open var bShowBurnin: Boolean
    open fun ShowBurnin()
    open fun SetSequence(InSequence: LevelSequence)
    open fun SetReplicatePlayback(ReplicatePlayback: Boolean)
    open fun SetBindingByTag(BindingTag: String, Actors: Array<Actor>, bAllowBindingsFromAsset: Boolean)
    open fun SetBinding(Binding: MovieSceneObjectBindingID, Actors: Array<Actor>, bAllowBindingsFromAsset: Boolean)
    open fun ResetBindings()
    open fun ResetBinding(Binding: MovieSceneObjectBindingID)
    open fun RemoveBindingByTag(Tag: String, Actor: Actor)
    open fun RemoveBinding(Binding: MovieSceneObjectBindingID, Actor: Actor)
    open fun LoadSequence(): LevelSequence
    open fun HideBurnin()
    open fun GetSequencePlayer(): LevelSequencePlayer
    open fun GetSequence(): LevelSequence
    open fun FindBindingsbyTag(Tag: String): Array<MovieSceneObjectBindingID>
    open fun FindBindingbyTag(Tag: String): MovieSceneObjectBindingID
    open fun AddBindingByTag(BindingTag: String, Actor: Actor, bAllowBindingsFromAsset: Boolean)
    open fun AddBinding(Binding: MovieSceneObjectBindingID, Actor: Actor, bAllowBindingsFromAsset: Boolean)

    companion object {
        fun GetDefaultObject(): LevelSequenceActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelSequenceActor
        fun C(Other: UObject): LevelSequenceActor
        fun C(Other: Any): LevelSequenceActor
    }
}

external open class LevelSequenceAnimSequenceLinkItem {
    open var SkelTrackGuid: Guid
    open var PathToAnimSequence: SoftObjectPath
    open var bExportTransforms: Boolean
    open var bExportCurves: Boolean
    open var bRecordInWorldSpace: Boolean
    open fun clone(): LevelSequenceAnimSequenceLinkItem

    companion object {
        fun C(Other: UObject): LevelSequenceAnimSequenceLinkItem
        fun C(Other: Any): LevelSequenceAnimSequenceLinkItem
    }
}

external open class LevelSequenceAnimSequenceLink : AssetUserData {
    constructor()
    constructor(Outer: UObject)
    open var AnimSequenceLinks: Array<LevelSequenceAnimSequenceLinkItem>

    companion object {
        fun Load(ResourceName: String): LevelSequenceAnimSequenceLink
        fun Find(Outer: UObject, ResourceName: String): LevelSequenceAnimSequenceLink
        fun GetDefaultObject(): LevelSequenceAnimSequenceLink
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelSequenceAnimSequenceLink
        fun C(Other: UObject): LevelSequenceAnimSequenceLink
        fun C(Other: Any): LevelSequenceAnimSequenceLink
    }
}

external open class LevelSequenceDirector : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Player: LevelSequencePlayer
    open var SubSequenceID: Number
    open var MovieScenePlayerIndex: Number
    open fun OnCreated()
    open fun GetSequence(): MovieSceneSequence
    open fun GetBoundObjects(ObjectBinding: MovieSceneObjectBindingID): Array<UObject>
    open fun GetBoundObject(ObjectBinding: MovieSceneObjectBindingID): UObject
    open fun GetBoundActors(ObjectBinding: MovieSceneObjectBindingID): Array<Actor>
    open fun GetBoundActor(ObjectBinding: MovieSceneObjectBindingID): Actor

    companion object {
        fun Load(ResourceName: String): LevelSequenceDirector
        fun Find(Outer: UObject, ResourceName: String): LevelSequenceDirector
        fun GetDefaultObject(): LevelSequenceDirector
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelSequenceDirector
        fun C(Other: UObject): LevelSequenceDirector
        fun C(Other: Any): LevelSequenceDirector
    }
}

external open class LegacyLevelSequenceDirectorBlueprint : Blueprint {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LegacyLevelSequenceDirectorBlueprint
        fun Find(Outer: UObject, ResourceName: String): LegacyLevelSequenceDirectorBlueprint
        fun GetDefaultObject(): LegacyLevelSequenceDirectorBlueprint
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LegacyLevelSequenceDirectorBlueprint
        fun C(Other: UObject): LegacyLevelSequenceDirectorBlueprint
        fun C(Other: Any): LegacyLevelSequenceDirectorBlueprint
    }
}

external open class LevelSequenceProjectSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var bDefaultLockEngineToDisplayRate: Boolean
    open var DefaultDisplayRate: String
    open var DefaultTickResolution: String
    open var DefaultClockSource: String /* "Tick" | "Platform" | "Audio" | "RelativeTimecode" | "Timecode" | "Custom" | "EUpdateClockSource_MAX" */

    companion object {
        fun Load(ResourceName: String): LevelSequenceProjectSettings
        fun Find(Outer: UObject, ResourceName: String): LevelSequenceProjectSettings
        fun GetDefaultObject(): LevelSequenceProjectSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelSequenceProjectSettings
        fun C(Other: UObject): LevelSequenceProjectSettings
        fun C(Other: Any): LevelSequenceProjectSettings
    }
}

external open class LevelSequenceMediaController(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var Sequence: LevelSequenceActor
    open var MediaComponent: MediaComponent
    open var ServerStartTimeSeconds: Number
    open fun SynchronizeToServer(DesyncThresholdSeconds: Number)
    open fun Play()
    open fun OnRep_ServerStartTimeSeconds()
    open fun GetSequence(): LevelSequenceActor
    open fun GetMediaComponent(): MediaComponent

    companion object {
        fun GetDefaultObject(): LevelSequenceMediaController
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelSequenceMediaController
        fun C(Other: UObject): LevelSequenceMediaController
        fun C(Other: Any): LevelSequenceMediaController
    }
}

external open class ActorFactory : UObject {
    constructor()
    constructor(Outer: UObject)
    open var DisplayName: String
    open var MenuPriority: Number
    open var NewActorClassName: String
    open var NewActorClass: UnrealEngineClass
    open var bShowInEditorQuickMenu: Boolean
    open var bUseSurfaceOrientation: Boolean
    open var SpawnPositionOffset: Vector

    companion object {
        fun Load(ResourceName: String): ActorFactory
        fun Find(Outer: UObject, ResourceName: String): ActorFactory
        fun GetDefaultObject(): ActorFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactory
        fun C(Other: UObject): ActorFactory
        fun C(Other: Any): ActorFactory
    }
}

external open class ActorFactoryAmbientSound : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryAmbientSound
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryAmbientSound
        fun GetDefaultObject(): ActorFactoryAmbientSound
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryAmbientSound
        fun C(Other: UObject): ActorFactoryAmbientSound
        fun C(Other: Any): ActorFactoryAmbientSound
    }
}

external open class ActorFactorySkeletalMesh : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactorySkeletalMesh
        fun Find(Outer: UObject, ResourceName: String): ActorFactorySkeletalMesh
        fun GetDefaultObject(): ActorFactorySkeletalMesh
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactorySkeletalMesh
        fun C(Other: UObject): ActorFactorySkeletalMesh
        fun C(Other: Any): ActorFactorySkeletalMesh
    }
}

external open class ActorFactoryAnimationAsset : ActorFactorySkeletalMesh {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryAnimationAsset
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryAnimationAsset
        fun GetDefaultObject(): ActorFactoryAnimationAsset
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryAnimationAsset
        fun C(Other: UObject): ActorFactoryAnimationAsset
        fun C(Other: Any): ActorFactoryAnimationAsset
    }
}

external open class ActorFactoryAtmosphericFog : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryAtmosphericFog
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryAtmosphericFog
        fun GetDefaultObject(): ActorFactoryAtmosphericFog
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryAtmosphericFog
        fun C(Other: UObject): ActorFactoryAtmosphericFog
        fun C(Other: Any): ActorFactoryAtmosphericFog
    }
}

external open class ActorFactoryStaticMesh : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryStaticMesh
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryStaticMesh
        fun GetDefaultObject(): ActorFactoryStaticMesh
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryStaticMesh
        fun C(Other: UObject): ActorFactoryStaticMesh
        fun C(Other: Any): ActorFactoryStaticMesh
    }
}

external open class ActorFactoryBasicShape : ActorFactoryStaticMesh {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryBasicShape
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryBasicShape
        fun GetDefaultObject(): ActorFactoryBasicShape
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryBasicShape
        fun C(Other: UObject): ActorFactoryBasicShape
        fun C(Other: Any): ActorFactoryBasicShape
    }
}

external open class ActorFactoryBlueprint : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryBlueprint
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryBlueprint
        fun GetDefaultObject(): ActorFactoryBlueprint
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryBlueprint
        fun C(Other: UObject): ActorFactoryBlueprint
        fun C(Other: Any): ActorFactoryBlueprint
    }
}

external open class ActorFactoryBoxReflectionCapture : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryBoxReflectionCapture
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryBoxReflectionCapture
        fun GetDefaultObject(): ActorFactoryBoxReflectionCapture
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryBoxReflectionCapture
        fun C(Other: UObject): ActorFactoryBoxReflectionCapture
        fun C(Other: Any): ActorFactoryBoxReflectionCapture
    }
}

external open class ActorFactoryVolume : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryVolume
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryVolume
        fun GetDefaultObject(): ActorFactoryVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryVolume
        fun C(Other: UObject): ActorFactoryVolume
        fun C(Other: Any): ActorFactoryVolume
    }
}

external open class ActorFactoryBoxVolume : ActorFactoryVolume {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryBoxVolume
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryBoxVolume
        fun GetDefaultObject(): ActorFactoryBoxVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryBoxVolume
        fun C(Other: UObject): ActorFactoryBoxVolume
        fun C(Other: Any): ActorFactoryBoxVolume
    }
}

external open class ActorFactoryCameraActor : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryCameraActor
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryCameraActor
        fun GetDefaultObject(): ActorFactoryCameraActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryCameraActor
        fun C(Other: UObject): ActorFactoryCameraActor
        fun C(Other: Any): ActorFactoryCameraActor
    }
}

external open class ActorFactoryCharacter : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryCharacter
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryCharacter
        fun GetDefaultObject(): ActorFactoryCharacter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryCharacter
        fun C(Other: UObject): ActorFactoryCharacter
        fun C(Other: Any): ActorFactoryCharacter
    }
}

external open class ActorFactoryClass : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryClass
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryClass
        fun GetDefaultObject(): ActorFactoryClass
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryClass
        fun C(Other: UObject): ActorFactoryClass
        fun C(Other: Any): ActorFactoryClass
    }
}

external open class ActorFactoryCylinderVolume : ActorFactoryVolume {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryCylinderVolume
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryCylinderVolume
        fun GetDefaultObject(): ActorFactoryCylinderVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryCylinderVolume
        fun C(Other: UObject): ActorFactoryCylinderVolume
        fun C(Other: Any): ActorFactoryCylinderVolume
    }
}

external open class ActorFactoryDeferredDecal : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryDeferredDecal
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryDeferredDecal
        fun GetDefaultObject(): ActorFactoryDeferredDecal
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryDeferredDecal
        fun C(Other: UObject): ActorFactoryDeferredDecal
        fun C(Other: Any): ActorFactoryDeferredDecal
    }
}

external open class ActorFactoryDirectionalLight : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryDirectionalLight
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryDirectionalLight
        fun GetDefaultObject(): ActorFactoryDirectionalLight
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryDirectionalLight
        fun C(Other: UObject): ActorFactoryDirectionalLight
        fun C(Other: Any): ActorFactoryDirectionalLight
    }
}

external open class ActorFactoryEmitter : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryEmitter
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryEmitter
        fun GetDefaultObject(): ActorFactoryEmitter
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryEmitter
        fun C(Other: UObject): ActorFactoryEmitter
        fun C(Other: Any): ActorFactoryEmitter
    }
}

external open class ActorFactoryEmptyActor : ActorFactory {
    constructor()
    constructor(Outer: UObject)
    open var bVisualizeActor: Boolean

    companion object {
        fun Load(ResourceName: String): ActorFactoryEmptyActor
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryEmptyActor
        fun GetDefaultObject(): ActorFactoryEmptyActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryEmptyActor
        fun C(Other: UObject): ActorFactoryEmptyActor
        fun C(Other: Any): ActorFactoryEmptyActor
    }
}

external open class ActorFactoryExponentialHeightFog : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryExponentialHeightFog
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryExponentialHeightFog
        fun GetDefaultObject(): ActorFactoryExponentialHeightFog
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryExponentialHeightFog
        fun C(Other: UObject): ActorFactoryExponentialHeightFog
        fun C(Other: Any): ActorFactoryExponentialHeightFog
    }
}

external open class ActorFactoryInteractiveFoliage : ActorFactoryStaticMesh {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryInteractiveFoliage
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryInteractiveFoliage
        fun GetDefaultObject(): ActorFactoryInteractiveFoliage
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryInteractiveFoliage
        fun C(Other: UObject): ActorFactoryInteractiveFoliage
        fun C(Other: Any): ActorFactoryInteractiveFoliage
    }
}

external open class ActorFactoryLevelSequence : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryLevelSequence
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryLevelSequence
        fun GetDefaultObject(): ActorFactoryLevelSequence
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryLevelSequence
        fun C(Other: UObject): ActorFactoryLevelSequence
        fun C(Other: Any): ActorFactoryLevelSequence
    }
}

external open class ActorFactoryMatineeActor : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryMatineeActor
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryMatineeActor
        fun GetDefaultObject(): ActorFactoryMatineeActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryMatineeActor
        fun C(Other: UObject): ActorFactoryMatineeActor
        fun C(Other: Any): ActorFactoryMatineeActor
    }
}

external open class ActorFactoryNote : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryNote
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryNote
        fun GetDefaultObject(): ActorFactoryNote
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryNote
        fun C(Other: UObject): ActorFactoryNote
        fun C(Other: Any): ActorFactoryNote
    }
}

external open class ActorFactoryPawn : ActorFactoryEmptyActor {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryPawn
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryPawn
        fun GetDefaultObject(): ActorFactoryPawn
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryPawn
        fun C(Other: UObject): ActorFactoryPawn
        fun C(Other: Any): ActorFactoryPawn
    }
}

external open class ActorFactoryPhysicsAsset : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryPhysicsAsset
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryPhysicsAsset
        fun GetDefaultObject(): ActorFactoryPhysicsAsset
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryPhysicsAsset
        fun C(Other: UObject): ActorFactoryPhysicsAsset
        fun C(Other: Any): ActorFactoryPhysicsAsset
    }
}

external open class ActorFactoryPlanarReflection : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryPlanarReflection
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryPlanarReflection
        fun GetDefaultObject(): ActorFactoryPlanarReflection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryPlanarReflection
        fun C(Other: UObject): ActorFactoryPlanarReflection
        fun C(Other: Any): ActorFactoryPlanarReflection
    }
}

external open class ActorFactoryPlaneReflectionCapture : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryPlaneReflectionCapture
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryPlaneReflectionCapture
        fun GetDefaultObject(): ActorFactoryPlaneReflectionCapture
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryPlaneReflectionCapture
        fun C(Other: UObject): ActorFactoryPlaneReflectionCapture
        fun C(Other: Any): ActorFactoryPlaneReflectionCapture
    }
}

external open class ActorFactoryPlayerStart : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryPlayerStart
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryPlayerStart
        fun GetDefaultObject(): ActorFactoryPlayerStart
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryPlayerStart
        fun C(Other: UObject): ActorFactoryPlayerStart
        fun C(Other: Any): ActorFactoryPlayerStart
    }
}

external open class ActorFactoryPointLight : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryPointLight
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryPointLight
        fun GetDefaultObject(): ActorFactoryPointLight
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryPointLight
        fun C(Other: UObject): ActorFactoryPointLight
        fun C(Other: Any): ActorFactoryPointLight
    }
}

external open class ActorFactoryRectLight : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryRectLight
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryRectLight
        fun GetDefaultObject(): ActorFactoryRectLight
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryRectLight
        fun C(Other: UObject): ActorFactoryRectLight
        fun C(Other: Any): ActorFactoryRectLight
    }
}

external open class ActorFactoryRuntimeVirtualTextureVolume : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryRuntimeVirtualTextureVolume
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryRuntimeVirtualTextureVolume
        fun GetDefaultObject(): ActorFactoryRuntimeVirtualTextureVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryRuntimeVirtualTextureVolume
        fun C(Other: UObject): ActorFactoryRuntimeVirtualTextureVolume
        fun C(Other: Any): ActorFactoryRuntimeVirtualTextureVolume
    }
}

external open class ActorFactorySkyAtmosphere : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactorySkyAtmosphere
        fun Find(Outer: UObject, ResourceName: String): ActorFactorySkyAtmosphere
        fun GetDefaultObject(): ActorFactorySkyAtmosphere
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactorySkyAtmosphere
        fun C(Other: UObject): ActorFactorySkyAtmosphere
        fun C(Other: Any): ActorFactorySkyAtmosphere
    }
}

external open class ActorFactorySkyLight : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactorySkyLight
        fun Find(Outer: UObject, ResourceName: String): ActorFactorySkyLight
        fun GetDefaultObject(): ActorFactorySkyLight
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactorySkyLight
        fun C(Other: UObject): ActorFactorySkyLight
        fun C(Other: Any): ActorFactorySkyLight
    }
}

external open class ActorFactorySphereReflectionCapture : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactorySphereReflectionCapture
        fun Find(Outer: UObject, ResourceName: String): ActorFactorySphereReflectionCapture
        fun GetDefaultObject(): ActorFactorySphereReflectionCapture
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactorySphereReflectionCapture
        fun C(Other: UObject): ActorFactorySphereReflectionCapture
        fun C(Other: Any): ActorFactorySphereReflectionCapture
    }
}

external open class ActorFactorySphereVolume : ActorFactoryVolume {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactorySphereVolume
        fun Find(Outer: UObject, ResourceName: String): ActorFactorySphereVolume
        fun GetDefaultObject(): ActorFactorySphereVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactorySphereVolume
        fun C(Other: UObject): ActorFactorySphereVolume
        fun C(Other: Any): ActorFactorySphereVolume
    }
}

external open class ActorFactorySpotLight : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactorySpotLight
        fun Find(Outer: UObject, ResourceName: String): ActorFactorySpotLight
        fun GetDefaultObject(): ActorFactorySpotLight
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactorySpotLight
        fun C(Other: UObject): ActorFactorySpotLight
        fun C(Other: Any): ActorFactorySpotLight
    }
}

external open class ActorFactoryTargetPoint : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryTargetPoint
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryTargetPoint
        fun GetDefaultObject(): ActorFactoryTargetPoint
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryTargetPoint
        fun C(Other: UObject): ActorFactoryTargetPoint
        fun C(Other: Any): ActorFactoryTargetPoint
    }
}

external open class ActorFactoryTextRender : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryTextRender
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryTextRender
        fun GetDefaultObject(): ActorFactoryTextRender
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryTextRender
        fun C(Other: UObject): ActorFactoryTextRender
        fun C(Other: Any): ActorFactoryTextRender
    }
}

external open class ActorFactoryTriggerBox : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryTriggerBox
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryTriggerBox
        fun GetDefaultObject(): ActorFactoryTriggerBox
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryTriggerBox
        fun C(Other: UObject): ActorFactoryTriggerBox
        fun C(Other: Any): ActorFactoryTriggerBox
    }
}

external open class ActorFactoryTriggerCapsule : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryTriggerCapsule
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryTriggerCapsule
        fun GetDefaultObject(): ActorFactoryTriggerCapsule
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryTriggerCapsule
        fun C(Other: UObject): ActorFactoryTriggerCapsule
        fun C(Other: Any): ActorFactoryTriggerCapsule
    }
}

external open class ActorFactoryTriggerSphere : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryTriggerSphere
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryTriggerSphere
        fun GetDefaultObject(): ActorFactoryTriggerSphere
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryTriggerSphere
        fun C(Other: UObject): ActorFactoryTriggerSphere
        fun C(Other: Any): ActorFactoryTriggerSphere
    }
}

external open class ActorFactoryVectorFieldVolume : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryVectorFieldVolume
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryVectorFieldVolume
        fun GetDefaultObject(): ActorFactoryVectorFieldVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryVectorFieldVolume
        fun C(Other: UObject): ActorFactoryVectorFieldVolume
        fun C(Other: Any): ActorFactoryVectorFieldVolume
    }
}

external open class ActorFactoryVolumetricCloud : ActorFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ActorFactoryVolumetricCloud
        fun Find(Outer: UObject, ResourceName: String): ActorFactoryVolumetricCloud
        fun GetDefaultObject(): ActorFactoryVolumetricCloud
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorFactoryVolumetricCloud
        fun C(Other: UObject): ActorFactoryVolumetricCloud
        fun C(Other: Any): ActorFactoryVolumetricCloud
    }
}

external open class ActorGroupingUtils : UObject {
    constructor()
    constructor(Outer: UObject)
    open fun UnlockSelectedGroups()
    open fun UngroupSelected()
    open fun UngroupActors(ActorsToUngroup: Array<Actor>)
    open fun RemoveSelectedFromGroup()
    open fun LockSelectedGroups()
    open fun GroupSelected()
    open fun GroupActors(ActorsToGroup: Array<Actor>)
    open fun AddSelectedToGroup()

    companion object {
        fun Load(ResourceName: String): ActorGroupingUtils
        fun Find(Outer: UObject, ResourceName: String): ActorGroupingUtils
        fun GetDefaultObject(): ActorGroupingUtils
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ActorGroupingUtils
        fun SetGroupingActive(bInGroupingActive: Boolean)
        fun IsGroupingActive(): Boolean
        fun Get(): ActorGroupingUtils
        fun C(Other: UObject): ActorGroupingUtils
        fun C(Other: Any): ActorGroupingUtils
    }
}

external open class BlendSpaceFactory1D : Factory {
    constructor()
    constructor(Outer: UObject)
    open var TargetSkeleton: Skeleton
    open var PreviewSkeletalMesh: SkeletalMesh

    companion object {
        fun Load(ResourceName: String): BlendSpaceFactory1D
        fun Find(Outer: UObject, ResourceName: String): BlendSpaceFactory1D
        fun GetDefaultObject(): BlendSpaceFactory1D
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlendSpaceFactory1D
        fun C(Other: UObject): BlendSpaceFactory1D
        fun C(Other: Any): BlendSpaceFactory1D
    }
}

external open class AimOffsetBlendSpaceFactory1D : BlendSpaceFactory1D {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AimOffsetBlendSpaceFactory1D
        fun Find(Outer: UObject, ResourceName: String): AimOffsetBlendSpaceFactory1D
        fun GetDefaultObject(): AimOffsetBlendSpaceFactory1D
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AimOffsetBlendSpaceFactory1D
        fun C(Other: UObject): AimOffsetBlendSpaceFactory1D
        fun C(Other: Any): AimOffsetBlendSpaceFactory1D
    }
}

external open class BlendSpaceFactoryNew : Factory {
    constructor()
    constructor(Outer: UObject)
    open var TargetSkeleton: Skeleton
    open var PreviewSkeletalMesh: SkeletalMesh

    companion object {
        fun Load(ResourceName: String): BlendSpaceFactoryNew
        fun Find(Outer: UObject, ResourceName: String): BlendSpaceFactoryNew
        fun GetDefaultObject(): BlendSpaceFactoryNew
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlendSpaceFactoryNew
        fun C(Other: UObject): BlendSpaceFactoryNew
        fun C(Other: Any): BlendSpaceFactoryNew
    }
}

external open class AimOffsetBlendSpaceFactoryNew : BlendSpaceFactoryNew {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AimOffsetBlendSpaceFactoryNew
        fun Find(Outer: UObject, ResourceName: String): AimOffsetBlendSpaceFactoryNew
        fun GetDefaultObject(): AimOffsetBlendSpaceFactoryNew
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AimOffsetBlendSpaceFactoryNew
        fun C(Other: UObject): AimOffsetBlendSpaceFactoryNew
        fun C(Other: Any): AimOffsetBlendSpaceFactoryNew
    }
}

external open class AnalyticsPrivacySettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bSendUsageData: Boolean

    companion object {
        fun Load(ResourceName: String): AnalyticsPrivacySettings
        fun Find(Outer: UObject, ResourceName: String): AnalyticsPrivacySettings
        fun GetDefaultObject(): AnalyticsPrivacySettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnalyticsPrivacySettings
        fun C(Other: UObject): AnalyticsPrivacySettings
        fun C(Other: Any): AnalyticsPrivacySettings
    }
}

external open class AnimationBlueprintEditorOptions : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bHideUnrelatedNodes: Boolean

    companion object {
        fun Load(ResourceName: String): AnimationBlueprintEditorOptions
        fun Find(Outer: UObject, ResourceName: String): AnimationBlueprintEditorOptions
        fun GetDefaultObject(): AnimationBlueprintEditorOptions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimationBlueprintEditorOptions
        fun C(Other: UObject): AnimationBlueprintEditorOptions
        fun C(Other: Any): AnimationBlueprintEditorOptions
    }
}

external open class AnimBlueprintFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var BlueprintType: String /* "BPTYPE_Normal" | "BPTYPE_Const" | "BPTYPE_MacroLibrary" | "BPTYPE_Interface" | "BPTYPE_LevelScript" | "BPTYPE_FunctionLibrary" | "BPTYPE_MAX" */
    open var ParentClass: UnrealEngineClass
    open var TargetSkeleton: Skeleton
    open var PreviewSkeletalMesh: SkeletalMesh

    companion object {
        fun Load(ResourceName: String): AnimBlueprintFactory
        fun Find(Outer: UObject, ResourceName: String): AnimBlueprintFactory
        fun GetDefaultObject(): AnimBlueprintFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimBlueprintFactory
        fun C(Other: UObject): AnimBlueprintFactory
        fun C(Other: Any): AnimBlueprintFactory
    }
}

external open class AnimLayerInterfaceFactory : AnimBlueprintFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimLayerInterfaceFactory
        fun Find(Outer: UObject, ResourceName: String): AnimLayerInterfaceFactory
        fun GetDefaultObject(): AnimLayerInterfaceFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimLayerInterfaceFactory
        fun C(Other: UObject): AnimLayerInterfaceFactory
        fun C(Other: Any): AnimLayerInterfaceFactory
    }
}

external open class ThumbnailRenderer : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): ThumbnailRenderer
        fun GetDefaultObject(): ThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ThumbnailRenderer
        fun C(Other: UObject): ThumbnailRenderer
        fun C(Other: Any): ThumbnailRenderer
    }
}

external open class DefaultSizedThumbnailRenderer : ThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)
    open var DefaultSizeX: Number
    open var DefaultSizeY: Number

    companion object {
        fun Load(ResourceName: String): DefaultSizedThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): DefaultSizedThumbnailRenderer
        fun GetDefaultObject(): DefaultSizedThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DefaultSizedThumbnailRenderer
        fun C(Other: UObject): DefaultSizedThumbnailRenderer
        fun C(Other: Any): DefaultSizedThumbnailRenderer
    }
}

external open class AnimBlueprintThumbnailRenderer : DefaultSizedThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimBlueprintThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): AnimBlueprintThumbnailRenderer
        fun GetDefaultObject(): AnimBlueprintThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimBlueprintThumbnailRenderer
        fun C(Other: UObject): AnimBlueprintThumbnailRenderer
        fun C(Other: Any): AnimBlueprintThumbnailRenderer
    }
}

external open class AnimBoneCompressionSettingsFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimBoneCompressionSettingsFactory
        fun Find(Outer: UObject, ResourceName: String): AnimBoneCompressionSettingsFactory
        fun GetDefaultObject(): AnimBoneCompressionSettingsFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimBoneCompressionSettingsFactory
        fun C(Other: UObject): AnimBoneCompressionSettingsFactory
        fun C(Other: Any): AnimBoneCompressionSettingsFactory
    }
}

external open class AnimCompositeFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var TargetSkeleton: Skeleton
    open var SourceAnimation: AnimSequence
    open var PreviewSkeletalMesh: SkeletalMesh

    companion object {
        fun Load(ResourceName: String): AnimCompositeFactory
        fun Find(Outer: UObject, ResourceName: String): AnimCompositeFactory
        fun GetDefaultObject(): AnimCompositeFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimCompositeFactory
        fun C(Other: UObject): AnimCompositeFactory
        fun C(Other: Any): AnimCompositeFactory
    }
}

external open class AnimCurveCompressionSettingsFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimCurveCompressionSettingsFactory
        fun Find(Outer: UObject, ResourceName: String): AnimCurveCompressionSettingsFactory
        fun GetDefaultObject(): AnimCurveCompressionSettingsFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimCurveCompressionSettingsFactory
        fun C(Other: UObject): AnimCurveCompressionSettingsFactory
        fun C(Other: Any): AnimCurveCompressionSettingsFactory
    }
}

external open class AnimMontageFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var TargetSkeleton: Skeleton
    open var SourceAnimation: AnimSequence
    open var PreviewSkeletalMesh: SkeletalMesh

    companion object {
        fun Load(ResourceName: String): AnimMontageFactory
        fun Find(Outer: UObject, ResourceName: String): AnimMontageFactory
        fun GetDefaultObject(): AnimMontageFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimMontageFactory
        fun C(Other: UObject): AnimMontageFactory
        fun C(Other: Any): AnimMontageFactory
    }
}

external open class AnimSeqExportOption : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bExportTransforms: Boolean
    open var bExportCurves: Boolean
    open var bRecordInWorldSpace: Boolean
    open var bEvaluateAllSkeletalMeshComponents: Boolean
    open var WarmUpFrames: FrameNumber

    companion object {
        fun Load(ResourceName: String): AnimSeqExportOption
        fun Find(Outer: UObject, ResourceName: String): AnimSeqExportOption
        fun GetDefaultObject(): AnimSeqExportOption
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimSeqExportOption
        fun C(Other: UObject): AnimSeqExportOption
        fun C(Other: Any): AnimSeqExportOption
    }
}

external open class ExporterFBX : Exporter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ExporterFBX
        fun Find(Outer: UObject, ResourceName: String): ExporterFBX
        fun GetDefaultObject(): ExporterFBX
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ExporterFBX
        fun C(Other: UObject): ExporterFBX
        fun C(Other: Any): ExporterFBX
    }
}

external open class AnimSequenceExporterFBX : ExporterFBX {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimSequenceExporterFBX
        fun Find(Outer: UObject, ResourceName: String): AnimSequenceExporterFBX
        fun GetDefaultObject(): AnimSequenceExporterFBX
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimSequenceExporterFBX
        fun C(Other: UObject): AnimSequenceExporterFBX
        fun C(Other: Any): AnimSequenceExporterFBX
    }
}

external open class AnimSequenceFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var TargetSkeleton: Skeleton
    open var PreviewSkeletalMesh: SkeletalMesh

    companion object {
        fun Load(ResourceName: String): AnimSequenceFactory
        fun Find(Outer: UObject, ResourceName: String): AnimSequenceFactory
        fun GetDefaultObject(): AnimSequenceFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimSequenceFactory
        fun C(Other: UObject): AnimSequenceFactory
        fun C(Other: Any): AnimSequenceFactory
    }
}

external open class AnimSequenceThumbnailRenderer : DefaultSizedThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AnimSequenceThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): AnimSequenceThumbnailRenderer
        fun GetDefaultObject(): AnimSequenceThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimSequenceThumbnailRenderer
        fun C(Other: UObject): AnimSequenceThumbnailRenderer
        fun C(Other: Any): AnimSequenceThumbnailRenderer
    }
}

external open class AnimStreamableFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var TargetSkeleton: Skeleton
    open var SourceAnimation: AnimSequence

    companion object {
        fun Load(ResourceName: String): AnimStreamableFactory
        fun Find(Outer: UObject, ResourceName: String): AnimStreamableFactory
        fun GetDefaultObject(): AnimStreamableFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AnimStreamableFactory
        fun C(Other: UObject): AnimStreamableFactory
        fun C(Other: Any): AnimStreamableFactory
    }
}

external open class AssetEditor : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AssetEditor
        fun Find(Outer: UObject, ResourceName: String): AssetEditor
        fun GetDefaultObject(): AssetEditor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AssetEditor
        fun C(Other: UObject): AssetEditor
        fun C(Other: Any): AssetEditor
    }
}

external open class AssetEditorSubsystem : EditorSubsystem {
    constructor()
    constructor(Outer: UObject)
    open var OwnedAssetEditors: Array<AssetEditor>
    open fun OpenEditorForAssets(Assets: Array<UObject>): Boolean
    open fun CloseAllEditorsForAsset(Asset: UObject): Number

    companion object {
        fun Load(ResourceName: String): AssetEditorSubsystem
        fun Find(Outer: UObject, ResourceName: String): AssetEditorSubsystem
        fun GetDefaultObject(): AssetEditorSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AssetEditorSubsystem
        fun C(Other: UObject): AssetEditorSubsystem
        fun C(Other: Any): AssetEditorSubsystem
    }
}

external open class AssetEditorToolkitMenuContext : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AssetEditorToolkitMenuContext
        fun Find(Outer: UObject, ResourceName: String): AssetEditorToolkitMenuContext
        fun GetDefaultObject(): AssetEditorToolkitMenuContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AssetEditorToolkitMenuContext
        fun C(Other: UObject): AssetEditorToolkitMenuContext
        fun C(Other: Any): AssetEditorToolkitMenuContext
    }
}

external open class IniStringValue {
    open var Section: String
    open var Key: String
    open var Value: String
    open var Filename: String
    open fun clone(): IniStringValue

    companion object {
        fun C(Other: UObject): IniStringValue
        fun C(Other: Any): IniStringValue
    }
}

external open class AssetGuideline : AssetUserData {
    constructor()
    constructor(Outer: UObject)
    open var Plugins: Array<String>
    open var ProjectSettings: Array<IniStringValue>
    open var GuidelineName: String

    companion object {
        fun Load(ResourceName: String): AssetGuideline
        fun Find(Outer: UObject, ResourceName: String): AssetGuideline
        fun GetDefaultObject(): AssetGuideline
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AssetGuideline
        fun C(Other: UObject): AssetGuideline
        fun C(Other: Any): AssetGuideline
    }
}

external open class Commandlet : UObject {
    constructor()
    constructor(Outer: UObject)
    open var HelpDescription: String
    open var HelpUsage: String
    open var HelpWebLink: String
    open var HelpParamNames: Array<String>
    open var HelpParamDescriptions: Array<String>
    open var IsServer: Boolean
    open var IsClient: Boolean
    open var IsEditor: Boolean
    open var LogToConsole: Boolean
    open var ShowErrorCount: Boolean
    open var ShowProgress: Boolean

    companion object {
        fun Load(ResourceName: String): Commandlet
        fun Find(Outer: UObject, ResourceName: String): Commandlet
        fun GetDefaultObject(): Commandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Commandlet
        fun C(Other: UObject): Commandlet
        fun C(Other: Any): Commandlet
    }
}

external open class AssetRegUtilCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AssetRegUtilCommandlet
        fun Find(Outer: UObject, ResourceName: String): AssetRegUtilCommandlet
        fun GetDefaultObject(): AssetRegUtilCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AssetRegUtilCommandlet
        fun C(Other: UObject): AssetRegUtilCommandlet
        fun C(Other: Any): AssetRegUtilCommandlet
    }
}

external open class AssetRegistryDumpCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AssetRegistryDumpCommandlet
        fun Find(Outer: UObject, ResourceName: String): AssetRegistryDumpCommandlet
        fun GetDefaultObject(): AssetRegistryDumpCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AssetRegistryDumpCommandlet
        fun C(Other: UObject): AssetRegistryDumpCommandlet
        fun C(Other: Any): AssetRegistryDumpCommandlet
    }
}

external open class AudioMixerCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AudioMixerCommandlet
        fun Find(Outer: UObject, ResourceName: String): AudioMixerCommandlet
        fun GetDefaultObject(): AudioMixerCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AudioMixerCommandlet
        fun C(Other: UObject): AudioMixerCommandlet
        fun C(Other: Any): AudioMixerCommandlet
    }
}

external open class AudioTestCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AudioTestCommandlet
        fun Find(Outer: UObject, ResourceName: String): AudioTestCommandlet
        fun GetDefaultObject(): AudioTestCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AudioTestCommandlet
        fun C(Other: UObject): AudioTestCommandlet
        fun C(Other: Any): AudioTestCommandlet
    }
}

external open class AutoReimportManager : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): AutoReimportManager
        fun Find(Outer: UObject, ResourceName: String): AutoReimportManager
        fun GetDefaultObject(): AutoReimportManager
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AutoReimportManager
        fun C(Other: UObject): AutoReimportManager
        fun C(Other: Any): AutoReimportManager
    }
}

external open class BaseWidgetBlueprint : Blueprint {
    constructor()
    constructor(Outer: UObject)
    open var WidgetTree: WidgetTree

    companion object {
        fun Load(ResourceName: String): BaseWidgetBlueprint
        fun Find(Outer: UObject, ResourceName: String): BaseWidgetBlueprint
        fun GetDefaultObject(): BaseWidgetBlueprint
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BaseWidgetBlueprint
        fun C(Other: UObject): BaseWidgetBlueprint
        fun C(Other: Any): BaseWidgetBlueprint
    }
}

external open class BlendSpaceThumbnailRenderer : DefaultSizedThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlendSpaceThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): BlendSpaceThumbnailRenderer
        fun GetDefaultObject(): BlendSpaceThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlendSpaceThumbnailRenderer
        fun C(Other: UObject): BlendSpaceThumbnailRenderer
        fun C(Other: Any): BlendSpaceThumbnailRenderer
    }
}

external open class BlueprintFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var ParentClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): BlueprintFactory
        fun Find(Outer: UObject, ResourceName: String): BlueprintFactory
        fun GetDefaultObject(): BlueprintFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintFactory
        fun C(Other: UObject): BlueprintFactory
        fun C(Other: Any): BlueprintFactory
    }
}

external open class BlueprintFunctionLibraryFactory : BlueprintFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlueprintFunctionLibraryFactory
        fun Find(Outer: UObject, ResourceName: String): BlueprintFunctionLibraryFactory
        fun GetDefaultObject(): BlueprintFunctionLibraryFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintFunctionLibraryFactory
        fun C(Other: UObject): BlueprintFunctionLibraryFactory
        fun C(Other: Any): BlueprintFunctionLibraryFactory
    }
}

external open class BlueprintInterfaceFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlueprintInterfaceFactory
        fun Find(Outer: UObject, ResourceName: String): BlueprintInterfaceFactory
        fun GetDefaultObject(): BlueprintInterfaceFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintInterfaceFactory
        fun C(Other: UObject): BlueprintInterfaceFactory
        fun C(Other: Any): BlueprintInterfaceFactory
    }
}

external open class BlueprintMacroFactory : BlueprintFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlueprintMacroFactory
        fun Find(Outer: UObject, ResourceName: String): BlueprintMacroFactory
        fun GetDefaultObject(): BlueprintMacroFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintMacroFactory
        fun C(Other: UObject): BlueprintMacroFactory
        fun C(Other: Any): BlueprintMacroFactory
    }
}

external open class BlueprintThumbnailRenderer : DefaultSizedThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BlueprintThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): BlueprintThumbnailRenderer
        fun GetDefaultObject(): BlueprintThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintThumbnailRenderer
        fun C(Other: UObject): BlueprintThumbnailRenderer
        fun C(Other: Any): BlueprintThumbnailRenderer
    }
}

external open class BrushEditingSubsystem : EditorSubsystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): BrushEditingSubsystem
        fun Find(Outer: UObject, ResourceName: String): BrushEditingSubsystem
        fun GetDefaultObject(): BrushEditingSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BrushEditingSubsystem
        fun C(Other: UObject): BrushEditingSubsystem
        fun C(Other: Any): BrushEditingSubsystem
    }
}

external open class CameraAnimFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CameraAnimFactory
        fun Find(Outer: UObject, ResourceName: String): CameraAnimFactory
        fun GetDefaultObject(): CameraAnimFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CameraAnimFactory
        fun C(Other: UObject): CameraAnimFactory
        fun C(Other: Any): CameraAnimFactory
    }
}

external open class CanvasRenderTarget2DFactoryNew : Factory {
    constructor()
    constructor(Outer: UObject)
    open var Width: Number
    open var Height: Number
    open var Format: Number

    companion object {
        fun Load(ResourceName: String): CanvasRenderTarget2DFactoryNew
        fun Find(Outer: UObject, ResourceName: String): CanvasRenderTarget2DFactoryNew
        fun GetDefaultObject(): CanvasRenderTarget2DFactoryNew
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CanvasRenderTarget2DFactoryNew
        fun C(Other: UObject): CanvasRenderTarget2DFactoryNew
        fun C(Other: Any): CanvasRenderTarget2DFactoryNew
    }
}

external open class CascadeOptions : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bShowModuleDump: Boolean
    open var BackgroundColor: Color
    open var bUseSubMenus: Boolean
    open var bUseSpaceBarReset: Boolean
    open var bUseSpaceBarResetInLevel: Boolean
    open var Empty_Background: Color
    open var Emitter_Background: Color
    open var Emitter_Unselected: Color
    open var Emitter_Selected: Color
    open var ModuleColor_General_Unselected: Color
    open var ModuleColor_General_Selected: Color
    open var ModuleColor_TypeData_Unselected: Color
    open var ModuleColor_TypeData_Selected: Color
    open var ModuleColor_Beam_Unselected: Color
    open var ModuleColor_Beam_Selected: Color
    open var ModuleColor_Trail_Unselected: Color
    open var ModuleColor_Trail_Selected: Color
    open var ModuleColor_Spawn_Unselected: Color
    open var ModuleColor_Spawn_Selected: Color
    open var ModuleColor_Light_Unselected: Color
    open var ModuleColor_Light_Selected: Color
    open var ModuleColor_SubUV_Unselected: Color
    open var ModuleColor_SubUV_Selected: Color
    open var ModuleColor_Required_Unselected: Color
    open var ModuleColor_Required_Selected: Color
    open var ModuleColor_Event_Unselected: Color
    open var ModuleColor_Event_Selected: Color
    open var bShowGrid: Boolean
    open var GridColor_Hi: Color
    open var GridColor_Low: Color
    open var GridPerspectiveSize: Number
    open var bShowParticleCounts: Boolean
    open var bShowParticleEvents: Boolean
    open var bShowParticleTimes: Boolean
    open var bShowParticleDistance: Boolean
    open var bShowParticleMemory: Boolean
    open var ParticleMemoryUpdateTime: Number
    open var bShowFloor: Boolean
    open var FloorMesh: String
    open var FloorPosition: Vector
    open var FloorRotation: Rotator
    open var FloorScale: Number
    open var FloorScale3D: Vector
    open var ShowPPFlags: Number
    open var bUseSlimCascadeDraw: Boolean
    open var SlimCascadeDrawHeight: Number
    open var bCenterCascadeModuleText: Boolean
    open var Cascade_MouseMoveThreshold: Number
    open var MotionModeRadius: Number

    companion object {
        fun Load(ResourceName: String): CascadeOptions
        fun Find(Outer: UObject, ResourceName: String): CascadeOptions
        fun GetDefaultObject(): CascadeOptions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CascadeOptions
        fun C(Other: UObject): CascadeOptions
        fun C(Other: Any): CascadeOptions
    }
}

external open class ChaosPhysicalMaterialFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ChaosPhysicalMaterialFactory
        fun Find(Outer: UObject, ResourceName: String): ChaosPhysicalMaterialFactory
        fun GetDefaultObject(): ChaosPhysicalMaterialFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ChaosPhysicalMaterialFactory
        fun C(Other: UObject): ChaosPhysicalMaterialFactory
        fun C(Other: Any): ChaosPhysicalMaterialFactory
    }
}

external open class ChunkDependency {
    open var ChunkID: Number
    open var ParentChunkID: Number
    open fun clone(): ChunkDependency

    companion object {
        fun C(Other: UObject): ChunkDependency
        fun C(Other: Any): ChunkDependency
    }
}

external open class ChunkDependencyInfo : UObject {
    constructor()
    constructor(Outer: UObject)
    open var DependencyArray: Array<ChunkDependency>

    companion object {
        fun Load(ResourceName: String): ChunkDependencyInfo
        fun Find(Outer: UObject, ResourceName: String): ChunkDependencyInfo
        fun GetDefaultObject(): ChunkDependencyInfo
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ChunkDependencyInfo
        fun C(Other: UObject): ChunkDependencyInfo
        fun C(Other: Any): ChunkDependencyInfo
    }
}

external open class ClassThumbnailRenderer : DefaultSizedThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ClassThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): ClassThumbnailRenderer
        fun GetDefaultObject(): ClassThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClassThumbnailRenderer
        fun C(Other: UObject): ClassThumbnailRenderer
        fun C(Other: Any): ClassThumbnailRenderer
    }
}

external object EClassViewerDeveloperType {
    var CVDT_None: String /* "CVDT_None" */
    var CVDT_CurrentUser: String /* "CVDT_CurrentUser" */
    var CVDT_All: String /* "CVDT_All" */
    var CVDT_Max: String /* "CVDT_Max" */
}

external open class ClassViewerSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var AllowedClasses: Array<String>
    open var DisplayInternalClasses: Boolean
    open var DeveloperFolderType: String /* "CVDT_None" | "CVDT_CurrentUser" | "CVDT_All" | "CVDT_Max" */

    companion object {
        fun Load(ResourceName: String): ClassViewerSettings
        fun Find(Outer: UObject, ResourceName: String): ClassViewerSettings
        fun GetDefaultObject(): ClassViewerSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ClassViewerSettings
        fun C(Other: UObject): ClassViewerSettings
        fun C(Other: Any): ClassViewerSettings
    }
}

external open class CompileAllBlueprintsCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CompileAllBlueprintsCommandlet
        fun Find(Outer: UObject, ResourceName: String): CompileAllBlueprintsCommandlet
        fun GetDefaultObject(): CompileAllBlueprintsCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CompileAllBlueprintsCommandlet
        fun C(Other: UObject): CompileAllBlueprintsCommandlet
        fun C(Other: Any): CompileAllBlueprintsCommandlet
    }
}

external open class CompositeCurveTableFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CompositeCurveTableFactory
        fun Find(Outer: UObject, ResourceName: String): CompositeCurveTableFactory
        fun GetDefaultObject(): CompositeCurveTableFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CompositeCurveTableFactory
        fun C(Other: UObject): CompositeCurveTableFactory
        fun C(Other: Any): CompositeCurveTableFactory
    }
}

external open class DataTableFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var struct: ScriptStruct

    companion object {
        fun Load(ResourceName: String): DataTableFactory
        fun Find(Outer: UObject, ResourceName: String): DataTableFactory
        fun GetDefaultObject(): DataTableFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DataTableFactory
        fun C(Other: UObject): DataTableFactory
        fun C(Other: Any): DataTableFactory
    }
}

external open class CompositeDataTableFactory : DataTableFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CompositeDataTableFactory
        fun Find(Outer: UObject, ResourceName: String): CompositeDataTableFactory
        fun GetDefaultObject(): CompositeDataTableFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CompositeDataTableFactory
        fun C(Other: UObject): CompositeDataTableFactory
        fun C(Other: Any): CompositeDataTableFactory
    }
}

external open class CompressAnimationsCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CompressAnimationsCommandlet
        fun Find(Outer: UObject, ResourceName: String): CompressAnimationsCommandlet
        fun GetDefaultObject(): CompressAnimationsCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CompressAnimationsCommandlet
        fun C(Other: UObject): CompressAnimationsCommandlet
        fun C(Other: Any): CompressAnimationsCommandlet
    }
}

external open class EditorBrushBuilder : BrushBuilder {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EditorBrushBuilder
        fun Find(Outer: UObject, ResourceName: String): EditorBrushBuilder
        fun GetDefaultObject(): EditorBrushBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorBrushBuilder
        fun C(Other: UObject): EditorBrushBuilder
        fun C(Other: Any): EditorBrushBuilder
    }
}

external open class ConeBuilder : EditorBrushBuilder {
    constructor()
    constructor(Outer: UObject)
    open var Z: Number
    open var CapZ: Number
    open var OuterRadius: Number
    open var InnerRadius: Number
    open var Sides: Number
    open var GroupName: String
    open var AlignToSide: Boolean
    open var Hollow: Boolean

    companion object {
        fun Load(ResourceName: String): ConeBuilder
        fun Find(Outer: UObject, ResourceName: String): ConeBuilder
        fun GetDefaultObject(): ConeBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ConeBuilder
        fun C(Other: UObject): ConeBuilder
        fun C(Other: Any): ConeBuilder
    }
}

external open class ContentBrowserSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var NumObjectsToLoadBeforeWarning: Number
    open var bOpenSourcesPanelByDefault: Boolean
    open var RealTimeThumbnails: Boolean
    open var DisplayFolders: Boolean
    open var DisplayEmptyFolders: Boolean
    open var FilterRecursively: Boolean
    open var ShowAllFolder: Boolean
    open var OrganizeFolders: Boolean
    open var NumObjectsInRecentList: Number
    open var bShowFullCollectionNameInToolTip: Boolean
    open var bEnableRealtimeMaterialInstanceThumbnails: Boolean
    open var DisplayEngineFolder: Boolean
    open var DisplayDevelopersFolder: Boolean
    open var DisplayL10NFolder: Boolean
    open var DisplayPluginFolders: Boolean
    open var DisplayFavorites: Boolean
    open var DockCollections: Boolean
    open var DisplayCppFolders: Boolean
    open var IncludeClassNames: Boolean
    open var IncludeAssetPaths: Boolean
    open var IncludeCollectionNames: Boolean

    companion object {
        fun Load(ResourceName: String): ContentBrowserSettings
        fun Find(Outer: UObject, ResourceName: String): ContentBrowserSettings
        fun GetDefaultObject(): ContentBrowserSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ContentBrowserSettings
        fun C(Other: UObject): ContentBrowserSettings
        fun C(Other: Any): ContentBrowserSettings
    }
}

external open class ConvertLevelsToExternalActorsCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ConvertLevelsToExternalActorsCommandlet
        fun Find(Outer: UObject, ResourceName: String): ConvertLevelsToExternalActorsCommandlet
        fun GetDefaultObject(): ConvertLevelsToExternalActorsCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ConvertLevelsToExternalActorsCommandlet
        fun C(Other: UObject): ConvertLevelsToExternalActorsCommandlet
        fun C(Other: Any): ConvertLevelsToExternalActorsCommandlet
    }
}

external open class CookCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)
    open var FullGCAssetClassNames: Array<String>

    companion object {
        fun Load(ResourceName: String): CookCommandlet
        fun Find(Outer: UObject, ResourceName: String): CookCommandlet
        fun GetDefaultObject(): CookCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CookCommandlet
        fun C(Other: UObject): CookCommandlet
        fun C(Other: Any): CookCommandlet
    }
}

external object ECookProgressDisplayMode {
    var Nothing: String /* "Nothing" */
    var RemainingPackages: String /* "RemainingPackages" */
    var PackageNames: String /* "PackageNames" */
    var NamesAndRemainingPackages: String /* "NamesAndRemainingPackages" */
    var Max: String /* "Max" */
    var ECookProgressDisplayMode_MAX: String /* "ECookProgressDisplayMode_MAX" */
}

external object EBlueprintComponentDataCookingMethod {
    var Disabled: String /* "Disabled" */
    var AllBlueprints: String /* "AllBlueprints" */
    var EnabledBlueprintsOnly: String /* "EnabledBlueprintsOnly" */
    var EBlueprintComponentDataCookingMethod_MAX: String /* "EBlueprintComponentDataCookingMethod_MAX" */
}

external open class CookerSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var bEnableCookOnTheSide: Boolean
    open var bEnableBuildDDCInBackground: Boolean
    open var bIterativeCookingForLaunchOn: Boolean
    open var bIterativeCookingForFileCookContent: Boolean
    open var bCookOnTheFlyForLaunchOn: Boolean
    open var CookProgressDisplayMode: String /* "Nothing" | "RemainingPackages" | "PackageNames" | "NamesAndRemainingPackages" | "Max" | "ECookProgressDisplayMode_MAX" */
    open var bIgnoreIniSettingsOutOfDateForIteration: Boolean
    open var bIgnoreScriptPackagesOutOfDateForIteration: Boolean
    open var bCompileBlueprintsInDevelopmentMode: Boolean
    open var BlueprintComponentDataCookingMethod: String /* "Disabled" | "AllBlueprints" | "EnabledBlueprintsOnly" | "EBlueprintComponentDataCookingMethod_MAX" */
    open var ClassesExcludedOnDedicatedServer: Array<String>
    open var ModulesExcludedOnDedicatedServer: Array<String>
    open var ClassesExcludedOnDedicatedClient: Array<String>
    open var ModulesExcludedOnDedicatedClient: Array<String>
    open var VersionedIntRValues: Array<String>
    open var DefaultPVRTCQuality: Number
    open var DefaultASTCQualityBySpeed: Number
    open var DefaultASTCQualityBySize: Number
    open var bAllowCookedDataInEditorBuilds: Boolean
    open var bCookBlueprintComponentTemplateData: Boolean

    companion object {
        fun Load(ResourceName: String): CookerSettings
        fun Find(Outer: UObject, ResourceName: String): CookerSettings
        fun GetDefaultObject(): CookerSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CookerSettings
        fun C(Other: UObject): CookerSettings
        fun C(Other: Any): CookerSettings
    }
}

external open class CookGlobalShadersCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CookGlobalShadersCommandlet
        fun Find(Outer: UObject, ResourceName: String): CookGlobalShadersCommandlet
        fun GetDefaultObject(): CookGlobalShadersCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CookGlobalShadersCommandlet
        fun C(Other: UObject): CookGlobalShadersCommandlet
        fun C(Other: Any): CookGlobalShadersCommandlet
    }
}

external open class CookGlobalShadersDeviceHelperBase : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CookGlobalShadersDeviceHelperBase
        fun Find(Outer: UObject, ResourceName: String): CookGlobalShadersDeviceHelperBase
        fun GetDefaultObject(): CookGlobalShadersDeviceHelperBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CookGlobalShadersDeviceHelperBase
        fun C(Other: UObject): CookGlobalShadersDeviceHelperBase
        fun C(Other: Any): CookGlobalShadersDeviceHelperBase
    }
}

external open class CookGlobalShadersDeviceHelperStaged : CookGlobalShadersDeviceHelperBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CookGlobalShadersDeviceHelperStaged
        fun Find(Outer: UObject, ResourceName: String): CookGlobalShadersDeviceHelperStaged
        fun GetDefaultObject(): CookGlobalShadersDeviceHelperStaged
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CookGlobalShadersDeviceHelperStaged
        fun C(Other: UObject): CookGlobalShadersDeviceHelperStaged
        fun C(Other: Any): CookGlobalShadersDeviceHelperStaged
    }
}

external open class CookOnTheFlyServer : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CookOnTheFlyServer
        fun Find(Outer: UObject, ResourceName: String): CookOnTheFlyServer
        fun GetDefaultObject(): CookOnTheFlyServer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CookOnTheFlyServer
        fun C(Other: UObject): CookOnTheFlyServer
        fun C(Other: Any): CookOnTheFlyServer
    }
}

external open class CrashReporterSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var UploadSymbolsPath: String
    open var DownstreamStorage: String
    open var RemoteStorage: Array<String>

    companion object {
        fun Load(ResourceName: String): CrashReporterSettings
        fun Find(Outer: UObject, ResourceName: String): CrashReporterSettings
        fun GetDefaultObject(): CrashReporterSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CrashReporterSettings
        fun C(Other: UObject): CrashReporterSettings
        fun C(Other: Any): CrashReporterSettings
    }
}

external open class CrashReportsPrivacySettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bSendUnattendedBugReports: Boolean

    companion object {
        fun Load(ResourceName: String): CrashReportsPrivacySettings
        fun Find(Outer: UObject, ResourceName: String): CrashReportsPrivacySettings
        fun GetDefaultObject(): CrashReportsPrivacySettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CrashReportsPrivacySettings
        fun C(Other: UObject): CrashReportsPrivacySettings
        fun C(Other: Any): CrashReportsPrivacySettings
    }
}

external object ECSVImportType {
    var ECSV_DataTable: String /* "ECSV_DataTable" */
    var ECSV_CurveTable: String /* "ECSV_CurveTable" */
    var ECSV_CurveFloat: String /* "ECSV_CurveFloat" */
    var ECSV_CurveVector: String /* "ECSV_CurveVector" */
    var ECSV_CurveLinearColor: String /* "ECSV_CurveLinearColor" */
    var ECSV_MAX: String /* "ECSV_MAX" */
}

external open class CSVImportSettings {
    open var ImportRowStruct: ScriptStruct
    open var ImportType: String /* "ECSV_DataTable" | "ECSV_CurveTable" | "ECSV_CurveFloat" | "ECSV_CurveVector" | "ECSV_CurveLinearColor" | "ECSV_MAX" */
    open var ImportCurveInterpMode: String /* "RCIM_Linear" | "RCIM_Constant" | "RCIM_Cubic" | "RCIM_None" | "RCIM_MAX" */
    open fun clone(): CSVImportSettings

    companion object {
        fun C(Other: UObject): CSVImportSettings
        fun C(Other: Any): CSVImportSettings
    }
}

external open class CSVImportFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var AutomatedImportSettings: CSVImportSettings
    open var DataTableImportOptions: DataTable

    companion object {
        fun Load(ResourceName: String): CSVImportFactory
        fun Find(Outer: UObject, ResourceName: String): CSVImportFactory
        fun GetDefaultObject(): CSVImportFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CSVImportFactory
        fun C(Other: UObject): CSVImportFactory
        fun C(Other: Any): CSVImportFactory
    }
}

external open class CubeBuilder : EditorBrushBuilder {
    constructor()
    constructor(Outer: UObject)
    open var X: Number
    open var Y: Number
    open var Z: Number
    open var WallThickness: Number
    open var GroupName: String
    open var Hollow: Boolean
    open var Tessellated: Boolean

    companion object {
        fun Load(ResourceName: String): CubeBuilder
        fun Find(Outer: UObject, ResourceName: String): CubeBuilder
        fun GetDefaultObject(): CubeBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CubeBuilder
        fun C(Other: UObject): CubeBuilder
        fun C(Other: Any): CubeBuilder
    }
}

external open class CurvedStairBuilder : EditorBrushBuilder {
    constructor()
    constructor(Outer: UObject)
    open var InnerRadius: Number
    open var StepHeight: Number
    open var StepWidth: Number
    open var AngleOfCurve: Number
    open var NumSteps: Number
    open var AddToFirstStep: Number
    open var GroupName: String
    open var CounterClockwise: Boolean

    companion object {
        fun Load(ResourceName: String): CurvedStairBuilder
        fun Find(Outer: UObject, ResourceName: String): CurvedStairBuilder
        fun GetDefaultObject(): CurvedStairBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CurvedStairBuilder
        fun C(Other: UObject): CurvedStairBuilder
        fun C(Other: Any): CurvedStairBuilder
    }
}

external open class CurveEdOptions : UObject {
    constructor()
    constructor(Outer: UObject)
    open var MinViewRange: Number
    open var MaxViewRange: Number
    open var BackgroundColor: LinearColor
    open var LabelColor: LinearColor
    open var SelectedLabelColor: LinearColor
    open var GridColor: LinearColor
    open var GridTextColor: LinearColor
    open var LabelBlockBkgColor: LinearColor
    open var SelectedKeyColor: LinearColor

    companion object {
        fun Load(ResourceName: String): CurveEdOptions
        fun Find(Outer: UObject, ResourceName: String): CurveEdOptions
        fun GetDefaultObject(): CurveEdOptions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CurveEdOptions
        fun C(Other: UObject): CurveEdOptions
        fun C(Other: Any): CurveEdOptions
    }
}

external open class CurveFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var CurveClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): CurveFactory
        fun Find(Outer: UObject, ResourceName: String): CurveFactory
        fun GetDefaultObject(): CurveFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CurveFactory
        fun C(Other: UObject): CurveFactory
        fun C(Other: Any): CurveFactory
    }
}

external open class CurveFloatFactory : CurveFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CurveFloatFactory
        fun Find(Outer: UObject, ResourceName: String): CurveFloatFactory
        fun GetDefaultObject(): CurveFloatFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CurveFloatFactory
        fun C(Other: UObject): CurveFloatFactory
        fun C(Other: Any): CurveFloatFactory
    }
}

external open class CurveLinearColorFactory : CurveFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CurveLinearColorFactory
        fun Find(Outer: UObject, ResourceName: String): CurveLinearColorFactory
        fun GetDefaultObject(): CurveLinearColorFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CurveLinearColorFactory
        fun C(Other: UObject): CurveLinearColorFactory
        fun C(Other: Any): CurveLinearColorFactory
    }
}

external open class CurveVectorFactory : CurveFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CurveVectorFactory
        fun Find(Outer: UObject, ResourceName: String): CurveVectorFactory
        fun GetDefaultObject(): CurveVectorFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CurveVectorFactory
        fun C(Other: UObject): CurveVectorFactory
        fun C(Other: Any): CurveVectorFactory
    }
}

external open class CurveImportFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CurveImportFactory
        fun Find(Outer: UObject, ResourceName: String): CurveImportFactory
        fun GetDefaultObject(): CurveImportFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CurveImportFactory
        fun C(Other: UObject): CurveImportFactory
        fun C(Other: Any): CurveImportFactory
    }
}

external open class CurveLinearColorAtlasFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var Width: Number
    open var Height: Number
    open var Format: Number

    companion object {
        fun Load(ResourceName: String): CurveLinearColorAtlasFactory
        fun Find(Outer: UObject, ResourceName: String): CurveLinearColorAtlasFactory
        fun GetDefaultObject(): CurveLinearColorAtlasFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CurveLinearColorAtlasFactory
        fun C(Other: UObject): CurveLinearColorAtlasFactory
        fun C(Other: Any): CurveLinearColorAtlasFactory
    }
}

external open class CurveLinearColorThumbnailRenderer : ThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CurveLinearColorThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): CurveLinearColorThumbnailRenderer
        fun GetDefaultObject(): CurveLinearColorThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CurveLinearColorThumbnailRenderer
        fun C(Other: UObject): CurveLinearColorThumbnailRenderer
        fun C(Other: Any): CurveLinearColorThumbnailRenderer
    }
}

external open class CylinderBuilder : EditorBrushBuilder {
    constructor()
    constructor(Outer: UObject)
    open var Z: Number
    open var OuterRadius: Number
    open var InnerRadius: Number
    open var Sides: Number
    open var GroupName: String
    open var AlignToSide: Boolean
    open var Hollow: Boolean

    companion object {
        fun Load(ResourceName: String): CylinderBuilder
        fun Find(Outer: UObject, ResourceName: String): CylinderBuilder
        fun GetDefaultObject(): CylinderBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CylinderBuilder
        fun C(Other: UObject): CylinderBuilder
        fun C(Other: Any): CylinderBuilder
    }
}

external open class DataAssetFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var DataAssetClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): DataAssetFactory
        fun Find(Outer: UObject, ResourceName: String): DataAssetFactory
        fun GetDefaultObject(): DataAssetFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DataAssetFactory
        fun C(Other: UObject): DataAssetFactory
        fun C(Other: Any): DataAssetFactory
    }
}

external open class DDCCleanupCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DDCCleanupCommandlet
        fun Find(Outer: UObject, ResourceName: String): DDCCleanupCommandlet
        fun GetDefaultObject(): DDCCleanupCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DDCCleanupCommandlet
        fun C(Other: UObject): DDCCleanupCommandlet
        fun C(Other: Any): DDCCleanupCommandlet
    }
}

external open class DebugSkelMeshComponent : SkeletalMeshComponent {
    constructor()
    constructor(Outer: UObject)
    open var bRenderRawSkeleton: Boolean
    open var bDrawMesh: Boolean
    open var bShowBoneNames: Boolean
    open var bDrawBoneInfluences: Boolean
    open var bDrawMorphTargetVerts: Boolean
    open var bDrawNormals: Boolean
    open var bDrawTangents: Boolean
    open var bDrawBinormals: Boolean
    open var bDrawSockets: Boolean
    open var bSkeletonSocketsVisible: Boolean
    open var bMeshSocketsVisible: Boolean
    open var bDisplayRawAnimation: Boolean
    open var bDisplayNonRetargetedPose: Boolean
    open var bDisplayAdditiveBasePose: Boolean
    open var bDisplayBakedAnimation: Boolean
    open var bDisplaySourceAnimation: Boolean
    open var bDisplayBound: Boolean
    open var bDisplayVertexColors: Boolean
    open var bPreviewRootMotion: Boolean
    open var bShowClothData: Boolean
    open var MinClothPropertyView: Number
    open var MaxClothPropertyView: Number
    open var ClothMeshOpacity: Number
    open var bClothFlipNormal: Boolean
    open var bClothCullBackface: Boolean
    open var bRequiredBonesUpToDateDuringTick: Boolean
    open var BonesOfInterest: Array<Number>
    open var MorphTargetOfInterests: Array<MorphTarget>
    open var SkelMaterials: Array<MaterialInterface>
    open var PreviewInstance: AnimPreviewInstance
    open var SavedAnimScriptInstance: AnimInstance
    open var bIsUsingInGameBounds: Boolean
    open var bIsUsingPreSkinnedBounds: Boolean
    open var bPerformSingleClothingTick: Boolean
    open var bPauseClothingSimulationWithAnim: Boolean

    companion object {
        fun Load(ResourceName: String): DebugSkelMeshComponent
        fun Find(Outer: UObject, ResourceName: String): DebugSkelMeshComponent
        fun GetDefaultObject(): DebugSkelMeshComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DebugSkelMeshComponent
        fun C(Other: UObject): DebugSkelMeshComponent
        fun C(Other: Any): DebugSkelMeshComponent
    }
}

external open class DEditorParameterValue : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bOverride: Boolean
    open var ParameterInfo: MaterialParameterInfo
    open var ExpressionId: Guid
    open var SortPriority: Number

    companion object {
        fun Load(ResourceName: String): DEditorParameterValue
        fun Find(Outer: UObject, ResourceName: String): DEditorParameterValue
        fun GetDefaultObject(): DEditorParameterValue
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DEditorParameterValue
        fun C(Other: UObject): DEditorParameterValue
        fun C(Other: Any): DEditorParameterValue
    }
}

external open class DFontParameters {
    open var FontValue: Font
    open var FontPage: Number
    open fun clone(): DFontParameters

    companion object {
        fun C(Other: UObject): DFontParameters
        fun C(Other: Any): DFontParameters
    }
}

external open class DEditorFontParameterValue : DEditorParameterValue {
    constructor()
    constructor(Outer: UObject)
    open var ParameterValue: DFontParameters

    companion object {
        fun Load(ResourceName: String): DEditorFontParameterValue
        fun Find(Outer: UObject, ResourceName: String): DEditorFontParameterValue
        fun GetDefaultObject(): DEditorFontParameterValue
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DEditorFontParameterValue
        fun C(Other: UObject): DEditorFontParameterValue
        fun C(Other: Any): DEditorFontParameterValue
    }
}

external open class DEditorMaterialLayersParameterValue : DEditorParameterValue {
    constructor()
    constructor(Outer: UObject)
    open var ParameterValue: MaterialLayersFunctions

    companion object {
        fun Load(ResourceName: String): DEditorMaterialLayersParameterValue
        fun Find(Outer: UObject, ResourceName: String): DEditorMaterialLayersParameterValue
        fun GetDefaultObject(): DEditorMaterialLayersParameterValue
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DEditorMaterialLayersParameterValue
        fun C(Other: UObject): DEditorMaterialLayersParameterValue
        fun C(Other: Any): DEditorMaterialLayersParameterValue
    }
}

external open class DEditorRuntimeVirtualTextureParameterValue : DEditorParameterValue {
    constructor()
    constructor(Outer: UObject)
    open var ParameterValue: RuntimeVirtualTexture

    companion object {
        fun Load(ResourceName: String): DEditorRuntimeVirtualTextureParameterValue
        fun Find(Outer: UObject, ResourceName: String): DEditorRuntimeVirtualTextureParameterValue
        fun GetDefaultObject(): DEditorRuntimeVirtualTextureParameterValue
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DEditorRuntimeVirtualTextureParameterValue
        fun C(Other: UObject): DEditorRuntimeVirtualTextureParameterValue
        fun C(Other: Any): DEditorRuntimeVirtualTextureParameterValue
    }
}

external open class ScalarParameterAtlasData {
    open var bIsUsedAsAtlasPosition: Boolean
    open var Curve: CurveLinearColor
    open var Atlas: CurveLinearColorAtlas
    open fun clone(): ScalarParameterAtlasData

    companion object {
        fun C(Other: UObject): ScalarParameterAtlasData
        fun C(Other: Any): ScalarParameterAtlasData
    }
}

external open class DEditorScalarParameterValue : DEditorParameterValue {
    constructor()
    constructor(Outer: UObject)
    open var ParameterValue: Number
    open var AtlasData: ScalarParameterAtlasData

    companion object {
        fun Load(ResourceName: String): DEditorScalarParameterValue
        fun Find(Outer: UObject, ResourceName: String): DEditorScalarParameterValue
        fun GetDefaultObject(): DEditorScalarParameterValue
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DEditorScalarParameterValue
        fun C(Other: UObject): DEditorScalarParameterValue
        fun C(Other: Any): DEditorScalarParameterValue
    }
}

external open class DComponentMaskParameter {
    open var R: Boolean
    open var G: Boolean
    open var B: Boolean
    open var A: Boolean
    open fun clone(): DComponentMaskParameter

    companion object {
        fun C(Other: UObject): DComponentMaskParameter
        fun C(Other: Any): DComponentMaskParameter
    }
}

external open class DEditorStaticComponentMaskParameterValue : DEditorParameterValue {
    constructor()
    constructor(Outer: UObject)
    open var ParameterValue: DComponentMaskParameter

    companion object {
        fun Load(ResourceName: String): DEditorStaticComponentMaskParameterValue
        fun Find(Outer: UObject, ResourceName: String): DEditorStaticComponentMaskParameterValue
        fun GetDefaultObject(): DEditorStaticComponentMaskParameterValue
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DEditorStaticComponentMaskParameterValue
        fun C(Other: UObject): DEditorStaticComponentMaskParameterValue
        fun C(Other: Any): DEditorStaticComponentMaskParameterValue
    }
}

external open class DEditorStaticSwitchParameterValue : DEditorParameterValue {
    constructor()
    constructor(Outer: UObject)
    open var ParameterValue: Boolean

    companion object {
        fun Load(ResourceName: String): DEditorStaticSwitchParameterValue
        fun Find(Outer: UObject, ResourceName: String): DEditorStaticSwitchParameterValue
        fun GetDefaultObject(): DEditorStaticSwitchParameterValue
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DEditorStaticSwitchParameterValue
        fun C(Other: UObject): DEditorStaticSwitchParameterValue
        fun C(Other: Any): DEditorStaticSwitchParameterValue
    }
}

external open class DEditorTextureParameterValue : DEditorParameterValue {
    constructor()
    constructor(Outer: UObject)
    open var ParameterValue: Texture
    open var ChannelNames: ParameterChannelNames

    companion object {
        fun Load(ResourceName: String): DEditorTextureParameterValue
        fun Find(Outer: UObject, ResourceName: String): DEditorTextureParameterValue
        fun GetDefaultObject(): DEditorTextureParameterValue
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DEditorTextureParameterValue
        fun C(Other: UObject): DEditorTextureParameterValue
        fun C(Other: Any): DEditorTextureParameterValue
    }
}

external open class DEditorVectorParameterValue : DEditorParameterValue {
    constructor()
    constructor(Outer: UObject)
    open var ParameterValue: LinearColor
    open var bIsUsedAsChannelMask: Boolean
    open var ChannelNames: ParameterChannelNames

    companion object {
        fun Load(ResourceName: String): DEditorVectorParameterValue
        fun Find(Outer: UObject, ResourceName: String): DEditorVectorParameterValue
        fun GetDefaultObject(): DEditorVectorParameterValue
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DEditorVectorParameterValue
        fun C(Other: UObject): DEditorVectorParameterValue
        fun C(Other: Any): DEditorVectorParameterValue
    }
}

external open class DerivedDataCacheCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DerivedDataCacheCommandlet
        fun Find(Outer: UObject, ResourceName: String): DerivedDataCacheCommandlet
        fun GetDefaultObject(): DerivedDataCacheCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DerivedDataCacheCommandlet
        fun C(Other: UObject): DerivedDataCacheCommandlet
        fun C(Other: Any): DerivedDataCacheCommandlet
    }
}

external open class DiffAssetRegistriesCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)
    open var AssetRegistrySearchPath: Array<String>
    open var P4Repository: String
    open var P4EngineBasePath: String
    open var P4EngineAssetPath: String
    open var P4GameBasePath: String
    open var P4GameAssetPath: String
    open var RegexBranchCL: String

    companion object {
        fun Load(ResourceName: String): DiffAssetRegistriesCommandlet
        fun Find(Outer: UObject, ResourceName: String): DiffAssetRegistriesCommandlet
        fun GetDefaultObject(): DiffAssetRegistriesCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DiffAssetRegistriesCommandlet
        fun C(Other: UObject): DiffAssetRegistriesCommandlet
        fun C(Other: Any): DiffAssetRegistriesCommandlet
    }
}

external open class DiffAssetsCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DiffAssetsCommandlet
        fun Find(Outer: UObject, ResourceName: String): DiffAssetsCommandlet
        fun GetDefaultObject(): DiffAssetsCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DiffAssetsCommandlet
        fun C(Other: UObject): DiffAssetsCommandlet
        fun C(Other: Any): DiffAssetsCommandlet
    }
}

external open class DiffFilesCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DiffFilesCommandlet
        fun Find(Outer: UObject, ResourceName: String): DiffFilesCommandlet
        fun GetDefaultObject(): DiffFilesCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DiffFilesCommandlet
        fun C(Other: UObject): DiffFilesCommandlet
        fun C(Other: Any): DiffFilesCommandlet
    }
}

external open class DiffPackagesCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)
    open var Packages: Package

    companion object {
        fun Load(ResourceName: String): DiffPackagesCommandlet
        fun Find(Outer: UObject, ResourceName: String): DiffPackagesCommandlet
        fun GetDefaultObject(): DiffPackagesCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DiffPackagesCommandlet
        fun C(Other: UObject): DiffPackagesCommandlet
        fun C(Other: Any): DiffPackagesCommandlet
    }
}

external open class DumpBlueprintsInfoCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DumpBlueprintsInfoCommandlet
        fun Find(Outer: UObject, ResourceName: String): DumpBlueprintsInfoCommandlet
        fun GetDefaultObject(): DumpBlueprintsInfoCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DumpBlueprintsInfoCommandlet
        fun C(Other: UObject): DumpBlueprintsInfoCommandlet
        fun C(Other: Any): DumpBlueprintsInfoCommandlet
    }
}

external open class DumpHiddenCategoriesCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): DumpHiddenCategoriesCommandlet
        fun Find(Outer: UObject, ResourceName: String): DumpHiddenCategoriesCommandlet
        fun GetDefaultObject(): DumpHiddenCategoriesCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DumpHiddenCategoriesCommandlet
        fun C(Other: UObject): DumpHiddenCategoriesCommandlet
        fun C(Other: Any): DumpHiddenCategoriesCommandlet
    }
}

external open class EdGraphNode_Comment : EdGraphNode {
    constructor()
    constructor(Outer: UObject)
    open var CommentColor: LinearColor
    open var FontSize: Number
    open var bCommentBubbleVisible_InDetailsPanel: Boolean
    open var bColorCommentBubble: Boolean
    open var MoveMode: String /* "GroupMovement" | "NoGroupMovement" | "ECommentBoxMode_MAX" */
    open var CommentDepth: Number

    companion object {
        fun Load(ResourceName: String): EdGraphNode_Comment
        fun Find(Outer: UObject, ResourceName: String): EdGraphNode_Comment
        fun GetDefaultObject(): EdGraphNode_Comment
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EdGraphNode_Comment
        fun C(Other: UObject): EdGraphNode_Comment
        fun C(Other: Any): EdGraphNode_Comment
    }
}

external open class EditorActorFolders : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EditorActorFolders
        fun Find(Outer: UObject, ResourceName: String): EditorActorFolders
        fun GetDefaultObject(): EditorActorFolders
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorActorFolders
        fun C(Other: UObject): EditorActorFolders
        fun C(Other: Any): EditorActorFolders
    }
}

external open class EditorAnimBaseObj : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EditorAnimBaseObj
        fun Find(Outer: UObject, ResourceName: String): EditorAnimBaseObj
        fun GetDefaultObject(): EditorAnimBaseObj
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorAnimBaseObj
        fun C(Other: UObject): EditorAnimBaseObj
        fun C(Other: Any): EditorAnimBaseObj
    }
}

external open class EditorAnimCompositeSegment : EditorAnimBaseObj {
    constructor()
    constructor(Outer: UObject)
    open var AnimSegment: AnimSegment

    companion object {
        fun Load(ResourceName: String): EditorAnimCompositeSegment
        fun Find(Outer: UObject, ResourceName: String): EditorAnimCompositeSegment
        fun GetDefaultObject(): EditorAnimCompositeSegment
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorAnimCompositeSegment
        fun C(Other: UObject): EditorAnimCompositeSegment
        fun C(Other: Any): EditorAnimCompositeSegment
    }
}

external open class EditorAnimCurveBoneLinks : UObject {
    constructor()
    constructor(Outer: UObject)
    open var CurveName: SmartName
    open var ConnectedBones: Array<BoneReference>
    open var MaxLOD: Number

    companion object {
        fun Load(ResourceName: String): EditorAnimCurveBoneLinks
        fun Find(Outer: UObject, ResourceName: String): EditorAnimCurveBoneLinks
        fun GetDefaultObject(): EditorAnimCurveBoneLinks
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorAnimCurveBoneLinks
        fun C(Other: UObject): EditorAnimCurveBoneLinks
        fun C(Other: Any): EditorAnimCurveBoneLinks
    }
}

external open class EditorAnimSegment : EditorAnimBaseObj {
    constructor()
    constructor(Outer: UObject)
    open var AnimSegment: AnimSegment

    companion object {
        fun Load(ResourceName: String): EditorAnimSegment
        fun Find(Outer: UObject, ResourceName: String): EditorAnimSegment
        fun GetDefaultObject(): EditorAnimSegment
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorAnimSegment
        fun C(Other: UObject): EditorAnimSegment
        fun C(Other: Any): EditorAnimSegment
    }
}

external open class EditorCompositeSection : EditorAnimBaseObj {
    constructor()
    constructor(Outer: UObject)
    open var CompositeSection: CompositeSection

    companion object {
        fun Load(ResourceName: String): EditorCompositeSection
        fun Find(Outer: UObject, ResourceName: String): EditorCompositeSection
        fun GetDefaultObject(): EditorCompositeSection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorCompositeSection
        fun C(Other: UObject): EditorCompositeSection
        fun C(Other: Any): EditorCompositeSection
    }
}

external object EWindowMode {
    var Fullscreen: String /* "Fullscreen" */
    var WindowedFullscreen: String /* "WindowedFullscreen" */
    var Windowed: String /* "Windowed" */
    var EWindowMode_MAX: String /* "EWindowMode_MAX" */
}

external interface `T$628` {
    var CurrentScaleNormalized: Number
    var CurrentScaleValue: Number
    var MinScaleValue: Number
    var MaxScaleValue: Number
}

external open class GameUserSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bUseVSync: Boolean
    open var bUseDynamicResolution: Boolean
    open var ResolutionSizeX: Any
    open var ResolutionSizeY: Any
    open var LastUserConfirmedResolutionSizeX: Any
    open var LastUserConfirmedResolutionSizeY: Any
    open var WindowPosX: Number
    open var WindowPosY: Number
    open var FullscreenMode: Number
    open var LastConfirmedFullscreenMode: Number
    open var PreferredFullscreenMode: Number
    open var Version: Any
    open var AudioQualityLevel: Number
    open var LastConfirmedAudioQualityLevel: Number
    open var FrameRateLimit: Number
    open var DesiredScreenWidth: Number
    open var bUseDesiredScreenHeight: Boolean
    open var DesiredScreenHeight: Number
    open var LastUserConfirmedDesiredScreenWidth: Number
    open var LastUserConfirmedDesiredScreenHeight: Number
    open var LastRecommendedScreenWidth: Number
    open var LastRecommendedScreenHeight: Number
    open var LastCPUBenchmarkResult: Number
    open var LastGPUBenchmarkResult: Number
    open var LastCPUBenchmarkSteps: Array<Number>
    open var LastGPUBenchmarkSteps: Array<Number>
    open var LastGPUBenchmarkMultiplier: Number
    open var bUseHDRDisplayOutput: Boolean
    open var HDRDisplayOutputNits: Number
    open var OnGameUserSettingsUINeedsUpdate: UnrealEngineMulticastDelegate<() -> Unit>
    open fun ValidateSettings()
    open fun SupportsHDRDisplayOutput(): Boolean
    open fun SetVSyncEnabled(bEnable: Boolean)
    open fun SetVisualEffectQuality(Value: Number)
    open fun SetViewDistanceQuality(Value: Number)
    open fun SetToDefaults()
    open fun SetTextureQuality(Value: Number)
    open fun SetShadowQuality(Value: Number)
    open fun SetShadingQuality(Value: Number)
    open fun SetScreenResolution(Resolution: IntPoint)
    open fun SetResolutionScaleValue(NewScaleValue: Number)
    open fun SetResolutionScaleValue_Deprecated(NewScaleValue: Number)
    open fun SetResolutionScaleNormalized(NewScaleNormalized: Number)
    open fun SetPostProcessingQuality(Value: Number)
    open fun SetOverallScalabilityLevel(Value: Number)
    open fun SetFullscreenMode(InFullscreenMode: String /* "Fullscreen" | "WindowedFullscreen" | "Windowed" | "EWindowMode_MAX" */)
    open fun SetFrameRateLimit(NewLimit: Number)
    open fun SetFoliageQuality(Value: Number)
    open fun SetDynamicResolutionEnabled(bEnable: Boolean)
    open fun SetBenchmarkFallbackValues()
    open fun SetAudioQualityLevel(QualityLevel: Number)
    open fun SetAntiAliasingQuality(Value: Number)
    open fun SaveSettings()
    open fun RunHardwareBenchmark(WorkScale: Number, CPUMultiplier: Number, GPUMultiplier: Number)
    open fun RevertVideoMode()
    open fun ResetToCurrentSettings()
    open fun LoadSettings(bForceReload: Boolean)
    open fun IsVSyncEnabled(): Boolean
    open fun IsVSyncDirty(): Boolean
    open fun IsScreenResolutionDirty(): Boolean
    open fun IsHDREnabled(): Boolean
    open fun IsFullscreenModeDirty(): Boolean
    open fun IsDynamicResolutionEnabled(): Boolean
    open fun IsDynamicResolutionDirty(): Boolean
    open fun IsDirty(): Boolean
    open fun GetVisualEffectQuality(): Number
    open fun GetViewDistanceQuality(): Number
    open fun GetTextureQuality(): Number
    open fun GetShadowQuality(): Number
    open fun GetShadingQuality(): Number
    open fun GetScreenResolution(): IntPoint
    open fun GetResolutionScaleNormalized(): Number
    open fun GetResolutionScaleInformation(CurrentScaleNormalized: Number = definedExternally, CurrentScaleValue: Number = definedExternally, MinScaleValue: Number = definedExternally, MaxScaleValue: Number = definedExternally): `T$628`
    open fun GetResolutionScaleInformation_Deprecated(CurrentScaleNormalized: Number = definedExternally, CurrentScaleValue: Number = definedExternally, MinScaleValue: Number = definedExternally, MaxScaleValue: Number = definedExternally): `T$628`
    open fun GetRecommendedResolutionScale(): Number
    open fun GetPreferredFullscreenMode(): String /* "Fullscreen" | "WindowedFullscreen" | "Windowed" | "EWindowMode_MAX" */
    open fun GetPostProcessingQuality(): Number
    open fun GetOverallScalabilityLevel(): Number
    open fun GetLastConfirmedScreenResolution(): IntPoint
    open fun GetLastConfirmedFullscreenMode(): String /* "Fullscreen" | "WindowedFullscreen" | "Windowed" | "EWindowMode_MAX" */
    open fun GetFullscreenMode(): String /* "Fullscreen" | "WindowedFullscreen" | "Windowed" | "EWindowMode_MAX" */
    open fun GetFrameRateLimit(): Number
    open fun GetFoliageQuality(): Number
    open fun GetDesktopResolution(): IntPoint
    open fun GetDefaultResolutionScale(): Number
    open fun GetCurrentHDRDisplayNits(): Number
    open fun GetAudioQualityLevel(): Number
    open fun GetAntiAliasingQuality(): Number
    open fun EnableHDRDisplayOutput(bEnable: Boolean, DisplayNits: Number)
    open fun ConfirmVideoMode()
    open fun ApplySettings(bCheckForCommandLineOverrides: Boolean)
    open fun ApplyResolutionSettings(bCheckForCommandLineOverrides: Boolean)
    open fun ApplyNonResolutionSettings()
    open fun ApplyHardwareBenchmarkResults()

    companion object {
        fun Load(ResourceName: String): GameUserSettings
        fun Find(Outer: UObject, ResourceName: String): GameUserSettings
        fun GetDefaultObject(): GameUserSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GameUserSettings
        fun GetSyncInterval(): Number
        fun GetGameUserSettings(): GameUserSettings
        fun GetFramePace(): Number
        fun GetDefaultWindowPosition(): IntPoint
        fun GetDefaultWindowMode(): String /* "Fullscreen" | "WindowedFullscreen" | "Windowed" | "EWindowMode_MAX" */
        fun GetDefaultResolution(): IntPoint
        fun C(Other: UObject): GameUserSettings
        fun C(Other: Any): GameUserSettings
    }
}

external open class AssetManager : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ObjectReferenceList: Array<UObject>
    open var bIsGlobalAsyncScanEnvironment: Boolean
    open var bShouldGuessTypeAndName: Boolean
    open var bShouldUseSynchronousLoad: Boolean
    open var bIsLoadingFromPakFiles: Boolean
    open var bShouldAcquireMissingChunksOnLoad: Boolean
    open var bOnlyCookProductionAssets: Boolean
    open var bIsBulkScanning: Boolean
    open var bIsPrimaryAssetDirectoryCurrent: Boolean
    open var bIsManagementDatabaseCurrent: Boolean
    open var bUpdateManagementDatabaseAfterScan: Boolean
    open var bIncludeOnlyOnDiskAssets: Boolean
    open var bHasCompletedInitialScan: Boolean
    open var NumberOfSpawnedNotifications: Number

    companion object {
        fun Load(ResourceName: String): AssetManager
        fun Find(Outer: UObject, ResourceName: String): AssetManager
        fun GetDefaultObject(): AssetManager
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): AssetManager
        fun C(Other: UObject): AssetManager
        fun C(Other: Any): AssetManager
    }
}

external open class StatColorMapEntry {
    open var In: Number
    open var Out: Color
    open fun clone(): StatColorMapEntry

    companion object {
        fun C(Other: UObject): StatColorMapEntry
        fun C(Other: Any): StatColorMapEntry
    }
}

external open class StatColorMapping {
    open var StatName: String
    open var ColorMap: Array<StatColorMapEntry>
    open var DisableBlend: Boolean
    open fun clone(): StatColorMapping

    companion object {
        fun C(Other: UObject): StatColorMapping
        fun C(Other: Any): StatColorMapping
    }
}

external open class GameNameRedirect {
    open var OldGameName: String
    open var NewGameName: String
    open fun clone(): GameNameRedirect

    companion object {
        fun C(Other: UObject): GameNameRedirect
        fun C(Other: Any): GameNameRedirect
    }
}

external open class ClassRedirect {
    open var ObjectName: String
    open var OldClassName: String
    open var NewClassName: String
    open var OldSubobjName: String
    open var NewSubobjName: String
    open var NewClassClass: String
    open var NewClassPackage: String
    open var InstanceOnly: Boolean
    open fun clone(): ClassRedirect

    companion object {
        fun C(Other: UObject): ClassRedirect
        fun C(Other: Any): ClassRedirect
    }
}

external open class PluginRedirect {
    open var OldPluginName: String
    open var NewPluginName: String
    open fun clone(): PluginRedirect

    companion object {
        fun C(Other: UObject): PluginRedirect
        fun C(Other: Any): PluginRedirect
    }
}

external open class StructRedirect {
    open var OldStructName: String
    open var NewStructName: String
    open fun clone(): StructRedirect

    companion object {
        fun C(Other: UObject): StructRedirect
        fun C(Other: Any): StructRedirect
    }
}

external object ETransitionType {
    var None: String /* "None" */
    var Paused: String /* "Paused" */
    var Loading: String /* "Loading" */
    var Saving: String /* "Saving" */
    var Connecting: String /* "Connecting" */
    var Precaching: String /* "Precaching" */
    var WaitingToConnect: String /* "WaitingToConnect" */
    var MAX: String /* "MAX" */
}

external open class DropNoteInfo {
    open var Location: Vector
    open var Rotation: Rotator
    open var Comment: String
    open fun clone(): DropNoteInfo

    companion object {
        fun C(Other: UObject): DropNoteInfo
        fun C(Other: Any): DropNoteInfo
    }
}

external open class NetDriverDefinition {
    open var DefName: String
    open var DriverClassName: String
    open var DriverClassNameFallback: String
    open fun clone(): NetDriverDefinition

    companion object {
        fun C(Other: UObject): NetDriverDefinition
        fun C(Other: Any): NetDriverDefinition
    }
}

external open class Engine : UObject {
    constructor()
    constructor(Outer: UObject)
    open var TinyFont: Font
    open var TinyFontName: SoftObjectPath
    open var SmallFont: Font
    open var SmallFontName: SoftObjectPath
    open var MediumFont: Font
    open var MediumFontName: SoftObjectPath
    open var LargeFont: Font
    open var LargeFontName: SoftObjectPath
    open var SubtitleFont: Font
    open var SubtitleFontName: SoftObjectPath
    open var AdditionalFonts: Array<Font>
    open var AdditionalFontNames: Array<String>
    open var ConsoleClass: UnrealEngineClass
    open var ConsoleClassName: SoftClassPath
    open var GameViewportClientClass: UnrealEngineClass
    open var GameViewportClientClassName: SoftClassPath
    open var LocalPlayerClass: UnrealEngineClass
    open var LocalPlayerClassName: SoftClassPath
    open var WorldSettingsClass: UnrealEngineClass
    open var WorldSettingsClassName: SoftClassPath
    open var NavigationSystemClassName: SoftClassPath
    open var NavigationSystemClass: UnrealEngineClass
    open var NavigationSystemConfigClassName: SoftClassPath
    open var NavigationSystemConfigClass: UnrealEngineClass
    open var AvoidanceManagerClassName: SoftClassPath
    open var AvoidanceManagerClass: UnrealEngineClass
    open var AIControllerClassName: SoftClassPath
    open var PhysicsCollisionHandlerClass: UnrealEngineClass
    open var PhysicsCollisionHandlerClassName: SoftClassPath
    open var GameUserSettingsClassName: SoftClassPath
    open var GameUserSettingsClass: UnrealEngineClass
    open var GameUserSettings: GameUserSettings
    open var LevelScriptActorClass: UnrealEngineClass
    open var LevelScriptActorClassName: SoftClassPath
    open var DefaultBlueprintBaseClassName: SoftClassPath
    open var GameSingletonClassName: SoftClassPath
    open var GameSingleton: UObject
    open var AssetManagerClassName: SoftClassPath
    open var AssetManager: AssetManager
    open var DefaultTexture: Texture2D
    open var DefaultTextureName: SoftObjectPath
    open var DefaultDiffuseTexture: Texture
    open var DefaultDiffuseTextureName: SoftObjectPath
    open var DefaultBSPVertexTexture: Texture2D
    open var DefaultBSPVertexTextureName: SoftObjectPath
    open var HighFrequencyNoiseTexture: Texture2D
    open var HighFrequencyNoiseTextureName: SoftObjectPath
    open var DefaultBokehTexture: Texture2D
    open var DefaultBokehTextureName: SoftObjectPath
    open var DefaultBloomKernelTexture: Texture2D
    open var DefaultBloomKernelTextureName: SoftObjectPath
    open var WireframeMaterial: Material
    open var WireframeMaterialName: String
    open var GeomMaterial: Material
    open var GeomMaterialName: SoftObjectPath
    open var DebugMeshMaterial: Material
    open var DebugMeshMaterialName: SoftObjectPath
    open var EmissiveMeshMaterial: Material
    open var EmissiveMeshMaterialName: SoftObjectPath
    open var LevelColorationLitMaterial: Material
    open var LevelColorationLitMaterialName: String
    open var LevelColorationUnlitMaterial: Material
    open var LevelColorationUnlitMaterialName: String
    open var LightingTexelDensityMaterial: Material
    open var LightingTexelDensityName: String
    open var ShadedLevelColorationLitMaterial: Material
    open var ShadedLevelColorationLitMaterialName: String
    open var ShadedLevelColorationUnlitMaterial: Material
    open var ShadedLevelColorationUnlitMaterialName: String
    open var RemoveSurfaceMaterial: Material
    open var RemoveSurfaceMaterialName: SoftObjectPath
    open var VertexColorMaterial: Material
    open var VertexColorMaterialName: String
    open var VertexColorViewModeMaterial_ColorOnly: Material
    open var VertexColorViewModeMaterialName_ColorOnly: String
    open var VertexColorViewModeMaterial_AlphaAsColor: Material
    open var VertexColorViewModeMaterialName_AlphaAsColor: String
    open var VertexColorViewModeMaterial_RedOnly: Material
    open var VertexColorViewModeMaterialName_RedOnly: String
    open var VertexColorViewModeMaterial_GreenOnly: Material
    open var VertexColorViewModeMaterialName_GreenOnly: String
    open var VertexColorViewModeMaterial_BlueOnly: Material
    open var VertexColorViewModeMaterialName_BlueOnly: String
    open var BoneWeightMaterial: Material
    open var BoneWeightMaterialName: SoftObjectPath
    open var ClothPaintMaterial: Material
    open var ClothPaintMaterialWireframe: Material
    open var ClothPaintMaterialInstance: MaterialInstanceDynamic
    open var ClothPaintMaterialWireframeInstance: MaterialInstanceDynamic
    open var ClothPaintMaterialName: SoftObjectPath
    open var ClothPaintMaterialWireframeName: SoftObjectPath
    open var PhysicalMaterialMaskMaterial: Material
    open var PhysicalMaterialMaskMaterialName: SoftObjectPath
    open var DebugEditorMaterial: Material
    open var DebugEditorMaterialName: SoftObjectPath
    open var ConstraintLimitMaterial: Material
    open var ConstraintLimitMaterialX: MaterialInstanceDynamic
    open var ConstraintLimitMaterialXAxis: MaterialInstanceDynamic
    open var ConstraintLimitMaterialY: MaterialInstanceDynamic
    open var ConstraintLimitMaterialYAxis: MaterialInstanceDynamic
    open var ConstraintLimitMaterialZ: MaterialInstanceDynamic
    open var ConstraintLimitMaterialZAxis: MaterialInstanceDynamic
    open var ConstraintLimitMaterialPrismatic: MaterialInstanceDynamic
    open var InvalidLightmapSettingsMaterial: Material
    open var InvalidLightmapSettingsMaterialName: SoftObjectPath
    open var PreviewShadowsIndicatorMaterial: Material
    open var PreviewShadowsIndicatorMaterialName: SoftObjectPath
    open var ArrowMaterial: Material
    open var ArrowMaterialYellow: MaterialInstanceDynamic
    open var ArrowMaterialName: SoftObjectPath
    open var LightingOnlyBrightness: LinearColor
    open var ShaderComplexityColors: Array<LinearColor>
    open var QuadComplexityColors: Array<LinearColor>
    open var LightComplexityColors: Array<LinearColor>
    open var StationaryLightOverlapColors: Array<LinearColor>
    open var LODColorationColors: Array<LinearColor>
    open var HLODColorationColors: Array<LinearColor>
    open var StreamingAccuracyColors: Array<LinearColor>
    open var MaxPixelShaderAdditiveComplexityCount: Number
    open var MaxES3PixelShaderAdditiveComplexityCount: Number
    open var MinLightMapDensity: Number
    open var IdealLightMapDensity: Number
    open var MaxLightMapDensity: Number
    open var bRenderLightMapDensityGrayscale: Boolean
    open var RenderLightMapDensityGrayscaleScale: Number
    open var RenderLightMapDensityColorScale: Number
    open var LightMapDensityVertexMappedColor: LinearColor
    open var LightMapDensitySelectedColor: LinearColor
    open var StatColorMappings: Array<StatColorMapping>
    open var EditorBrushMaterial: Material
    open var EditorBrushMaterialName: SoftObjectPath
    open var DefaultPhysMaterial: PhysicalMaterial
    open var DefaultPhysMaterialName: SoftObjectPath
    open var ActiveGameNameRedirects: Array<GameNameRedirect>
    open var ActiveClassRedirects: Array<ClassRedirect>
    open var ActivePluginRedirects: Array<PluginRedirect>
    open var ActiveStructRedirects: Array<StructRedirect>
    open var PreIntegratedSkinBRDFTexture: Texture2D
    open var PreIntegratedSkinBRDFTextureName: SoftObjectPath
    open var BlueNoiseTexture: Texture2D
    open var BlueNoiseTextureName: SoftObjectPath
    open var MiniFontTexture: Texture2D
    open var MiniFontTextureName: SoftObjectPath
    open var WeightMapPlaceholderTexture: Texture
    open var WeightMapPlaceholderTextureName: SoftObjectPath
    open var LightMapDensityTexture: Texture2D
    open var LightMapDensityTextureName: SoftObjectPath
    open var GameViewport: GameViewportClient
    open var DeferredCommands: Array<String>
    open var NearClipPlane: Number
    open var bSubtitlesEnabled: Boolean
    open var bSubtitlesForcedOff: Boolean
    open var MaximumLoopIterationCount: Number
    open var bCanBlueprintsTickByDefault: Boolean
    open var bOptimizeAnimBlueprintMemberVariableAccess: Boolean
    open var bAllowMultiThreadedAnimationUpdate: Boolean
    open var bEnableEditorPSysRealtimeLOD: Boolean
    open var bSmoothFrameRate: Boolean
    open var bUseFixedFrameRate: Boolean
    open var FixedFrameRate: Number
    open var SmoothedFrameRateRange: FloatRange
    open var CustomTimeStep: EngineCustomTimeStep
    open var CustomTimeStepClassName: SoftClassPath
    open var TimecodeProvider: TimecodeProvider
    open var TimecodeProviderClassName: SoftClassPath
    open var bGenerateDefaultTimecode: Boolean
    open var GenerateDefaultTimecodeFrameRate: FrameRate
    open var GenerateDefaultTimecodeFrameDelay: Number
    open var bCheckForMultiplePawnsSpawnedInAFrame: Boolean
    open var NumPawnsAllowedToBeSpawnedInAFrame: Number
    open var bShouldGenerateLowQualityLightmaps: Boolean
    open var C_WorldBox: Color
    open var C_BrushWire: Color
    open var C_AddWire: Color
    open var C_SubtractWire: Color
    open var C_SemiSolidWire: Color
    open var C_NonSolidWire: Color
    open var C_WireBackground: Color
    open var C_ScaleBoxHi: Color
    open var C_VolumeCollision: Color
    open var C_BSPCollision: Color
    open var C_OrthoBackground: Color
    open var C_Volume: Color
    open var C_BrushShape: Color
    open var StreamingDistanceFactor: Number
    open var GameScreenshotSaveDirectory: DirectoryPath
    open var TransitionType: String /* "None" | "Paused" | "Loading" | "Saving" | "Connecting" | "Precaching" | "WaitingToConnect" | "MAX" */
    open var TransitionDescription: String
    open var TransitionGameMode: String
    open var bAllowMatureLanguage: Boolean
    open var CameraRotationThreshold: Number
    open var CameraTranslationThreshold: Number
    open var PrimitiveProbablyVisibleTime: Number
    open var MaxOcclusionPixelsFraction: Number
    open var bPauseOnLossOfFocus: Boolean
    open var MaxParticleResize: Number
    open var MaxParticleResizeWarn: Number
    open var PendingDroppedNotes: Array<DropNoteInfo>
    open var NetClientTicksPerSecond: Number
    open var DisplayGamma: Number
    open var MinDesiredFrameRate: Number
    open var DefaultSelectedMaterialColor: LinearColor
    open var SelectedMaterialColor: LinearColor
    open var SelectionOutlineColor: LinearColor
    open var SubduedSelectionOutlineColor: LinearColor
    open var SelectedMaterialColorOverride: LinearColor
    open var bIsOverridingSelectedColor: Boolean
    open var bEnableOnScreenDebugMessages: Boolean
    open var bEnableOnScreenDebugMessagesDisplay: Boolean
    open var bSuppressMapWarnings: Boolean
    open var bDisableAILogging: Boolean
    open var bEnableVisualLogRecordingOnStart: Any
    open var ScreenSaverInhibitorSemaphore: Number
    open var bLockReadOnlyLevels: Boolean
    open var ParticleEventManagerClassPath: String
    open var SelectionHighlightIntensity: Number
    open var BSPSelectionHighlightIntensity: Number
    open var SelectionHighlightIntensityBillboards: Number
    open var NetDriverDefinitions: Array<NetDriverDefinition>
    open var ServerActors: Array<String>
    open var RuntimeServerActors: Array<String>
    open var NetErrorLogInterval: Number
    open var bStartedLoadMapMovie: Boolean
    open var NextWorldContextHandle: Number
    open fun GetEditorWorld(): World
    open fun GetPIEWorld(): World
    open fun HasUndo(): Boolean
    open fun SetClientTravel(InWorld: World, NextURL: String, InTravelType: String /* "TRAVEL_Absolute" | "TRAVEL_Partial" | "TRAVEL_Relative" | "TRAVEL_MAX" */)

    companion object {
        fun Load(ResourceName: String): Engine
        fun Find(Outer: UObject, ResourceName: String): Engine
        fun GetDefaultObject(): Engine
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Engine
        fun C(Other: UObject): Engine
        fun C(Other: Any): Engine
        fun GetEditorWorld(Engine: Engine): World
        fun GetPIEWorld(Engine: Engine): World
        fun HasUndo(Engine: Engine): Boolean
        fun SetClientTravel(Engine: Engine, InWorld: World, NextURL: String, InTravelType: String /* "TRAVEL_Absolute" | "TRAVEL_Partial" | "TRAVEL_Relative" | "TRAVEL_MAX" */)
    }
}

external open class JavascriptTransaction {
    open fun clone(): JavascriptTransaction
    open fun GetContext(): String
    open fun GetPrimaryObject(): UObject
    open fun GetTitle(): String

    companion object {
        fun C(Other: UObject): JavascriptTransaction
        fun C(Other: Any): JavascriptTransaction
        fun GetContext(Transaction: JavascriptTransaction): String
        fun GetPrimaryObject(Transaction: JavascriptTransaction): UObject
        fun GetTitle(Transaction: JavascriptTransaction): String
    }
}

external open class Transactor : UObject {
    constructor()
    constructor(Outer: UObject)
    open fun GetQueueLength(): Number
    open fun GetTransaction(QueueIndex: Number): JavascriptTransaction
    open fun IsActive(): Boolean

    companion object {
        fun Load(ResourceName: String): Transactor
        fun Find(Outer: UObject, ResourceName: String): Transactor
        fun GetDefaultObject(): Transactor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): Transactor
        fun C(Other: UObject): Transactor
        fun C(Other: Any): Transactor
        fun GetQueueLength(Transactor: Transactor): Number
        fun GetTransaction(Transactor: Transactor, QueueIndex: Number): JavascriptTransaction
        fun IsActive(Transactor: Transactor): Boolean
    }
}

external open class EditorWorldExtensionCollection : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EditorWorldExtensionCollection
        fun Find(Outer: UObject, ResourceName: String): EditorWorldExtensionCollection
        fun GetDefaultObject(): EditorWorldExtensionCollection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorWorldExtensionCollection
        fun C(Other: UObject): EditorWorldExtensionCollection
        fun C(Other: Any): EditorWorldExtensionCollection
    }
}

external open class EditorWorldExtensionManager : UObject {
    constructor()
    constructor(Outer: UObject)
    open var EditorWorldExtensionCollection: Array<EditorWorldExtensionCollection>

    companion object {
        fun Load(ResourceName: String): EditorWorldExtensionManager
        fun Find(Outer: UObject, ResourceName: String): EditorWorldExtensionManager
        fun GetDefaultObject(): EditorWorldExtensionManager
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorWorldExtensionManager
        fun C(Other: UObject): EditorWorldExtensionManager
        fun C(Other: Any): EditorWorldExtensionManager
    }
}

external object ECsgOper {
    var CSG_Active: String /* "CSG_Active" */
    var CSG_Add: String /* "CSG_Add" */
    var CSG_Subtract: String /* "CSG_Subtract" */
    var CSG_Intersect: String /* "CSG_Intersect" */
    var CSG_Deintersect: String /* "CSG_Deintersect" */
    var CSG_None: String /* "CSG_None" */
    var CSG_MAX: String /* "CSG_MAX" */
}

external interface `T$629` {
    var Out: Array<UObject>
    var `$`: Number
}

external interface `T$630` {
    var Out: Array<UObject>
    var `$`: Number
}

external open class USelection : UObject {
    constructor()
    constructor(Outer: UObject)
    open fun Deselect(InObject: UObject)
    open fun DeselectAll(InClass: UnrealEngineClass)
    open fun GetSelectedObjects(Out: Array<UObject> = definedExternally): `T$629`
    open fun Select(InObject: UObject)
    open fun ToggleSelect(InObject: UObject)

    companion object {
        fun Load(ResourceName: String): USelection
        fun Find(Outer: UObject, ResourceName: String): USelection
        fun GetDefaultObject(): USelection
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): USelection
        fun C(Other: UObject): USelection
        fun C(Other: Any): USelection
        fun Deselect(USelection: USelection, InObject: UObject)
        fun DeselectAll(USelection: USelection, InClass: UnrealEngineClass)
        fun GetSelectedObjects(USelection: USelection, Out: Array<UObject> = definedExternally): `T$630`
        fun Select(USelection: USelection, InObject: UObject)
        fun ToggleSelect(USelection: USelection, InObject: UObject)
    }
}

external open class GroupActor(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Actor {
    open var bLocked: Boolean
    open var GroupActors: Array<Actor>
    open var SubGroups: Array<GroupActor>

    companion object {
        fun GetDefaultObject(): GroupActor
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GroupActor
        fun C(Other: UObject): GroupActor
        fun C(Other: Any): GroupActor
    }
}

external open class EditorEngine : Engine {
    constructor()
    constructor(Outer: UObject)
    open var TempModel: Model
    open var ConversionTempModel: Model
    open var Trans: Transactor
    open var Bad: Texture2D
    open var EditorFont: Font
    open var PreviewSoundCue: SoundCue
    open var PreviewAudioComponent: AudioComponent
    open var EditorCube: StaticMesh
    open var EditorSphere: StaticMesh
    open var EditorPlane: StaticMesh
    open var EditorCylinder: StaticMesh
    open var bFastRebuild: Boolean
    open var IsImportingT3D: Boolean
    open var ClickFlags: Any
    open var ParentContext: Package
    open var UnsnappedClickLocation: Vector
    open var ClickLocation: Vector
    open var ClickPlane: Plane
    open var MouseMovement: Vector
    open var DetailMode: String /* "DM_Low" | "DM_Medium" | "DM_High" | "DM_MAX" */
    open var UseSizingBox: Boolean
    open var UseAxisIndicator: Boolean
    open var GodMode: Boolean
    open var GameCommandLine: String
    open var bShowBrushMarkerPolys: Boolean
    open var bEnableSocketSnapping: Boolean
    open var bEnableLODLocking: Boolean
    open var HeightMapExportClassName: String
    open var ActorFactories: Array<ActorFactory>
    open var UserOpenedFile: String
    open var InEditorGameURLOptions: String
    open var PlayWorld: World
    open var bIsToggleBetweenPIEandSIEQueued: Boolean
    open var bAllowMultiplePIEWorlds: Boolean
    open var bRequestEndPlayMapQueued: Boolean
    open var bSquelchTransactionNotification: Boolean
    open var bNotifyUndoRedoSelectionChange: Boolean
    open var PlayFromHerePlayerStartClass: UnrealEngineClass
    open var EditorWorld: World
    open var ActorsThatWereSelected: Array<Any>
    open var PlayWorldDestination: Number
    open var CurrentPlayWorldDestination: Number
    open var bMobilePreviewPortrait: Boolean
    open var BuildPlayDevice: Number
    open var UserEditedPlayWorldURL: String
    open var ScratchRenderTarget2048: TextureRenderTarget2D
    open var ScratchRenderTarget1024: TextureRenderTarget2D
    open var ScratchRenderTarget512: TextureRenderTarget2D
    open var ScratchRenderTarget256: TextureRenderTarget2D
    open var PreviewMeshComp: StaticMeshComponent
    open var PreviewMeshIndex: Number
    open var bShowPreviewMesh: Boolean
    open var bCustomCameraAlignEmitter: Boolean
    open var CustomCameraAlignEmitterDistance: Number
    open var bDrawSocketsInGMode: Boolean
    open var bDrawParticleHelpers: Boolean
    open var BrushBuilders: Array<BrushBuilder>
    open var EditorWorldExtensionsManager: EditorWorldExtensionManager
    open var ActorGroupingUtilsClassName: SoftClassPath
    open var ActorGroupingUtils: ActorGroupingUtils
    open var PlayWorldLocation: Vector
    open var PlayWorldRotation: Rotator
    open var bIsPlayWorldQueued: Boolean
    open var bIsSimulateInEditorQueued: Boolean
    open var bHasPlayWorldPlacement: Boolean
    open var bUseMobilePreviewForPlayWorld: Boolean
    open var bUseVRPreviewForPlayWorld: Boolean
    open var bIsSimulatingInEditor: Boolean
    open var PlayInEditorViewportIndex: Number
    open fun bspBrushCSG(Actor: Brush, Model: Model, PolyFlags: Number, BrushType: String /* "Brush_Default" | "Brush_Add" | "Brush_Subtract" | "Brush_MAX" */, CSGOper: String /* "CSG_Active" | "CSG_Add" | "CSG_Subtract" | "CSG_Intersect" | "CSG_Deintersect" | "CSG_None" | "CSG_MAX" */, bBuildBounds: Boolean, bMergePolys: Boolean, bReplaceNULLMaterialRefs: Boolean, bShowProgressBar: Boolean): Number
    open fun CanSelectActor(Actor: Actor, bInSelected: Boolean, bSelectEvenIfHidden: Boolean, bWarnIfLevelLocked: Boolean): Boolean
    open fun Exec(InWorld: World, Command: String, Out: String = definedExternally): `T$535`
    open fun FindBrushBuilder(BrushBuilderClass: UnrealEngineClass): BrushBuilder
    open fun GetSelectedActors(): USelection
    open fun GetSelectedComponents(): USelection
    open fun GetSelectedObjects(): USelection
    open fun GetSelectedSet(Class: UnrealEngineClass): USelection
    open fun RebuildLevel(Level: Level)
    open fun RebuildStaticNavigableGeometry(Level: Level)
    open fun RedrawAllViewports(bInvalidateHitProxies: Boolean)
    open fun SelectActor(Actor: Actor, bInSelected: Boolean, bNotify: Boolean, bSelectEvenIfHidden: Boolean, bForceRefresh: Boolean)
    open fun SelectComponent(Component: ActorComponent, bInSelected: Boolean, bNotify: Boolean, bSelectEvenIfHidden: Boolean)
    open fun SelectGroup(InGroupActor: GroupActor, bForceSelection: Boolean, bInSelected: Boolean, bNotify: Boolean)
    open fun SelectNone(bNoteSelectionChange: Boolean, bDeselectBSPSurfs: Boolean, WarnAboutManyActors: Boolean)
    open fun SetMaterial(InModel: Model, Material: MaterialInterface, Surfaces: Array<Number>)

    companion object {
        fun Load(ResourceName: String): EditorEngine
        fun Find(Outer: UObject, ResourceName: String): EditorEngine
        fun GetDefaultObject(): EditorEngine
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorEngine
        fun C(Other: UObject): EditorEngine
        fun C(Other: Any): EditorEngine
        fun bspBrushCSG(Engine: EditorEngine, Actor: Brush, Model: Model, PolyFlags: Number, BrushType: String /* "Brush_Default" | "Brush_Add" | "Brush_Subtract" | "Brush_MAX" */, CSGOper: String /* "CSG_Active" | "CSG_Add" | "CSG_Subtract" | "CSG_Intersect" | "CSG_Deintersect" | "CSG_None" | "CSG_MAX" */, bBuildBounds: Boolean, bMergePolys: Boolean, bReplaceNULLMaterialRefs: Boolean, bShowProgressBar: Boolean): Number
        fun CanSelectActor(Engine: EditorEngine, Actor: Actor, bInSelected: Boolean, bSelectEvenIfHidden: Boolean, bWarnIfLevelLocked: Boolean): Boolean
        fun Exec(Engine: EditorEngine, InWorld: World, Command: String, Out: String = definedExternally): `T$535`
        fun FindBrushBuilder(Engine: EditorEngine, BrushBuilderClass: UnrealEngineClass): BrushBuilder
        fun GetSelectedActors(Engine: EditorEngine): USelection
        fun GetSelectedComponents(Engine: EditorEngine): USelection
        fun GetSelectedObjects(Engine: EditorEngine): USelection
        fun GetSelectedSet(Engine: EditorEngine, Class: UnrealEngineClass): USelection
        fun RebuildLevel(Engine: EditorEngine, Level: Level)
        fun RebuildStaticNavigableGeometry(Engine: EditorEngine, Level: Level)
        fun RedrawAllViewports(Engine: EditorEngine, bInvalidateHitProxies: Boolean)
        fun SelectActor(Engine: EditorEngine, Actor: Actor, bInSelected: Boolean, bNotify: Boolean, bSelectEvenIfHidden: Boolean, bForceRefresh: Boolean)
        fun SelectComponent(Engine: EditorEngine, Component: ActorComponent, bInSelected: Boolean, bNotify: Boolean, bSelectEvenIfHidden: Boolean)
        fun SelectGroup(Engine: EditorEngine, InGroupActor: GroupActor, bForceSelection: Boolean, bInSelected: Boolean, bNotify: Boolean)
        fun SelectNone(Engine: EditorEngine, bNoteSelectionChange: Boolean, bDeselectBSPSurfs: Boolean, WarnAboutManyActors: Boolean)
        fun SetMaterial(Engine: EditorEngine, InModel: Model, Material: MaterialInterface, Surfaces: Array<Number>)
    }
}

external object EConsoleForGamepadLabels {
    var None: String /* "None" */
    var XBoxOne: String /* "XBoxOne" */
    var PS4: String /* "PS4" */
    var EConsoleForGamepadLabels_MAX: String /* "EConsoleForGamepadLabels_MAX" */
}

external open class EditorExperimentalSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bHDREditor: Boolean
    open var HDREditorNITLevel: Number
    open var bProceduralFoliage: Boolean
    open var bEnableLocalizationDashboard: Boolean
    open var bEnableTranslationPicker: Boolean
    open var bEnableFavoriteSystem: Boolean
    open var ConsoleForGamepadLabels: String /* "None" | "XBoxOne" | "PS4" | "EConsoleForGamepadLabels_MAX" */
    open var bToolbarCustomization: Boolean
    open var bBreakOnExceptions: Boolean
    open var bEnableOneFilePerActorSupport: Boolean
    open var BaseClassesToAllowRecompilingDuringPlayInEditor: Array<Class>
    open var ResolvedBaseClassesToAllowRecompilingDuringPlayInEditor: Array<UnrealEngineClass>
    open var bDrawMidpointArrowsInBlueprints: Boolean
    open var bContextMenuChunkAssignments: Boolean
    open var bDisableCookInEditor: Boolean
    open var bSharedCookedBuilds: Boolean
    open var MultiProcessCooking: Number
    open var bAllowLateJoinInPIE: Boolean
    open var bAllowVulkanPreview: Boolean
    open var bEnableMultithreadedLightmapEncoding: Boolean
    open var bEnableMultithreadedShadowmapEncoding: Boolean
    open var bUseOpenCLForConvexHullDecomp: Boolean
    open var bAllowPotentiallyUnsafePropertyEditing: Boolean
    open var bFacialAnimationImporter: Boolean
    open var bMobilePIEPreviewDeviceLaunch: Boolean
    open var bTextAssetFormatSupport: Boolean
    open var bExampleLayersAndBlends: Boolean
    open var bEnableLongPathsSupport: Boolean

    companion object {
        fun Load(ResourceName: String): EditorExperimentalSettings
        fun Find(Outer: UObject, ResourceName: String): EditorExperimentalSettings
        fun GetDefaultObject(): EditorExperimentalSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorExperimentalSettings
        fun C(Other: UObject): EditorExperimentalSettings
        fun C(Other: Any): EditorExperimentalSettings
    }
}

external object ELevelVisibilityDirtyMode {
    var ModifyOnChange: String /* "ModifyOnChange" */
    var DontModify: String /* "DontModify" */
    var ELevelVisibilityDirtyMode_MAX: String /* "ELevelVisibilityDirtyMode_MAX" */
}

external open class EditorLevelUtils : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EditorLevelUtils
        fun Find(Outer: UObject, ResourceName: String): EditorLevelUtils
        fun GetDefaultObject(): EditorLevelUtils
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorLevelUtils
        fun SetLevelVisibility(Level: Level, bShouldBeVisible: Boolean, bForceLayersVisible: Boolean, ModifyMode: String /* "ModifyOnChange" | "DontModify" | "ELevelVisibilityDirtyMode_MAX" */)
        fun SetLevelsVisibility(Levels: Array<Level>, bShouldBeVisible: Array<Boolean>, bForceLayersVisible: Boolean, ModifyMode: String /* "ModifyOnChange" | "DontModify" | "ELevelVisibilityDirtyMode_MAX" */)
        fun MoveSelectedActorsToLevel(DestLevel: LevelStreaming, bWarnAboutReferences: Boolean): Number
        fun MoveActorsToLevel(ActorsToMove: Array<Actor>, DestStreamingLevel: LevelStreaming, bWarnAboutReferences: Boolean, bWarnAboutRenaming: Boolean): Number
        fun MakeLevelCurrent(InStreamingLevel: LevelStreaming)
        fun AddLeveltoWorldwithTransform(World: World, LevelPackageName: String, LevelStreamingClass: UnrealEngineClass, LevelTransform: Transform): LevelStreaming
        fun AddLeveltoWorld(World: World, LevelPackageName: String, LevelStreamingClass: UnrealEngineClass): LevelStreaming
        fun GetLevels(World: World): Array<Level>
        fun CreateNewStreamingLevel(LevelStreamingClass: UnrealEngineClass, NewLevelPath: String, bMoveSelectedActorsIntoNewLevel: Boolean): LevelStreaming
        fun C(Other: UObject): EditorLevelUtils
        fun C(Other: Any): EditorLevelUtils
    }
}

external object ELoadLevelAtStartup {
    var None: String /* "None" */
    var ProjectDefault: String /* "ProjectDefault" */
    var LastOpened: String /* "LastOpened" */
    var ELoadLevelAtStartup_MAX: String /* "ELoadLevelAtStartup_MAX" */
}

external open class AutoReimportWildcard {
    open var wildcard: String
    open var bInclude: Boolean
    open fun clone(): AutoReimportWildcard

    companion object {
        fun C(Other: UObject): AutoReimportWildcard
        fun C(Other: Any): AutoReimportWildcard
    }
}

external open class AutoReimportDirectoryConfig {
    open var SourceDirectory: String
    open var MountPoint: String
    open var Wildcards: Array<AutoReimportWildcard>
    open fun clone(): AutoReimportDirectoryConfig

    companion object {
        fun C(Other: UObject): AutoReimportDirectoryConfig
        fun C(Other: Any): AutoReimportDirectoryConfig
    }
}

external open class EditorLoadingSavingSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var LoadLevelAtStartup: String /* "None" | "ProjectDefault" | "LastOpened" | "ELoadLevelAtStartup_MAX" */
    open var bForceCompilationAtStartup: Boolean
    open var bRestoreOpenAssetTabsOnRestart: Boolean
    open var bEnableSourceControlCompatabilityCheck: Boolean
    open var bMonitorContentDirectories: Boolean
    open var AutoReimportDirectories: Array<String>
    open var AutoReimportDirectorySettings: Array<AutoReimportDirectoryConfig>
    open var AutoReimportThreshold: Number
    open var bAutoCreateAssets: Boolean
    open var bAutoDeleteAssets: Boolean
    open var bDetectChangesOnStartup: Boolean
    open var bPromptBeforeAutoImporting: Boolean
    open var bDeleteSourceFilesWithAssets: Boolean
    open var bAutoReimportTextures: Boolean
    open var bAutoReimportCSV: Boolean
    open var bDirtyMigratedBlueprints: Boolean
    open var bAutoSaveEnable: Boolean
    open var bAutoSaveMaps: Boolean
    open var bAutoSaveContent: Boolean
    open var AutoSaveTimeMinutes: Number
    open var AutoSaveInteractionDelayInSeconds: Number
    open var AutoSaveWarningInSeconds: Number
    open var bAutomaticallyCheckoutOnAssetModification: Boolean
    open var bPromptForCheckoutOnAssetModification: Boolean
    open var bSCCAutoAddNewFiles: Boolean
    open var bSCCUseGlobalSettings: Boolean
    open var TextDiffToolPath: FilePath

    companion object {
        fun Load(ResourceName: String): EditorLoadingSavingSettings
        fun Find(Outer: UObject, ResourceName: String): EditorLoadingSavingSettings
        fun GetDefaultObject(): EditorLoadingSavingSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorLoadingSavingSettings
        fun C(Other: UObject): EditorLoadingSavingSettings
        fun C(Other: Any): EditorLoadingSavingSettings
    }
}

external open class EditorMiscSettings : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EditorMiscSettings
        fun Find(Outer: UObject, ResourceName: String): EditorMiscSettings
        fun GetDefaultObject(): EditorMiscSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorMiscSettings
        fun C(Other: UObject): EditorMiscSettings
        fun C(Other: Any): EditorMiscSettings
    }
}

external open class EditorNotifyObject : EditorAnimBaseObj {
    constructor()
    constructor(Outer: UObject)
    open var Event: AnimNotifyEvent

    companion object {
        fun Load(ResourceName: String): EditorNotifyObject
        fun Find(Outer: UObject, ResourceName: String): EditorNotifyObject
        fun GetDefaultObject(): EditorNotifyObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorNotifyObject
        fun C(Other: UObject): EditorNotifyObject
        fun C(Other: Any): EditorNotifyObject
    }
}

external open class EditorParentPlayerListObj : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Overrides: Array<AnimParentNodeAssetOverride>

    companion object {
        fun Load(ResourceName: String): EditorParentPlayerListObj
        fun Find(Outer: UObject, ResourceName: String): EditorParentPlayerListObj
        fun GetDefaultObject(): EditorParentPlayerListObj
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorParentPlayerListObj
        fun C(Other: UObject): EditorParentPlayerListObj
        fun C(Other: Any): EditorParentPlayerListObj
    }
}

external open class EditorPerformanceSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var bShowFrameRateAndMemory: Boolean
    open var bThrottleCPUWhenNotForeground: Boolean
    open var bDisableRealtimeViewportsInRemoteSessions: Boolean
    open var bMonitorEditorPerformance: Boolean
    open var bOverrideDPIBasedEditorViewportScaling: Boolean
    open var bEnableSharedDDCPerformanceNotifications: Boolean
    open var bEnableScalabilityWarningIndicator: Boolean

    companion object {
        fun Load(ResourceName: String): EditorPerformanceSettings
        fun Find(Outer: UObject, ResourceName: String): EditorPerformanceSettings
        fun GetDefaultObject(): EditorPerformanceSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorPerformanceSettings
        fun C(Other: UObject): EditorPerformanceSettings
        fun C(Other: Any): EditorPerformanceSettings
    }
}

external open class EditorPerProjectUserSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bDisplayUIExtensionPoints: Boolean
    open var bDisplayDocumentationLink: Boolean
    open var bDisplayActionListItemRefIds: Boolean
    open var bAlwaysGatherBehaviorTreeDebuggerData: Boolean
    open var bDisplayBlackboardKeysInAlphabeticalOrder: Boolean
    open var bDisplayEngineVersionInBadge: Boolean
    open var bUseSimplygonSwarm: Boolean
    open var SimplygonServerIP: String
    open var bEnableSwarmDebugging: Boolean
    open var SimplygonSwarmDelay: Any
    open var SwarmNumOfConcurrentJobs: Any
    open var SwarmMaxUploadChunkSizeInMB: Any
    open var SwarmIntermediateFolder: String
    open var bAutomaticallyHotReloadNewClasses: Boolean
    open var bShowCompilerLogOnCompileError: Boolean
    open var bKeepFbxNamespace: Boolean
    open var bShowImportDialogAtReimport: Boolean
    open var DataSourceFolder: DirectoryPath
    open var bKeepAttachHierarchy: Boolean
    open var bAnimationReimportWarnings: Boolean
    open var bUseCurvesForDistributions: Boolean
    open var PropertyMatrix_NumberOfPasteOperationsBeforeWarning: Number
    open var bSCSEditorShowGrid: Boolean
    open var bSCSEditorShowFloor: Boolean
    open var bGetAttentionOnUATCompletion: Boolean
    open var SCSViewportCameraSpeed: Number
    open var bAutoloadCheckedOutPackages: Boolean
    open var bSuppressFullyLoadPrompt: Boolean
    open var bAllowSelectTranslucent: Boolean
    open var BlueprintFavorites: BlueprintPaletteFavorites
    open var AssetViewerProfileIndex: Number
    open var AssetViewerProfileName: String
    open var MaterialQualityLevel: Number
    open var PreviewFeatureLevel: Number
    open var PreviewPlatformName: String
    open var PreviewShaderFormatName: String
    open var bPreviewFeatureLevelActive: Boolean
    open var PreviewDeviceProfileName: String

    companion object {
        fun Load(ResourceName: String): EditorPerProjectUserSettings
        fun Find(Outer: UObject, ResourceName: String): EditorPerProjectUserSettings
        fun GetDefaultObject(): EditorPerProjectUserSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorPerProjectUserSettings
        fun C(Other: UObject): EditorPerProjectUserSettings
        fun C(Other: Any): EditorPerProjectUserSettings
    }
}

external object EUnit {
    var Micrometers: String /* "Micrometers" */
    var Millimeters: String /* "Millimeters" */
    var Centimeters: String /* "Centimeters" */
    var Meters: String /* "Meters" */
    var Kilometers: String /* "Kilometers" */
    var Inches: String /* "Inches" */
    var Feet: String /* "Feet" */
    var Yards: String /* "Yards" */
    var Miles: String /* "Miles" */
    var Lightyears: String /* "Lightyears" */
    var Degrees: String /* "Degrees" */
    var Radians: String /* "Radians" */
    var MetersPerSecond: String /* "MetersPerSecond" */
    var KilometersPerHour: String /* "KilometersPerHour" */
    var MilesPerHour: String /* "MilesPerHour" */
    var Celsius: String /* "Celsius" */
    var Farenheit: String /* "Farenheit" */
    var Kelvin: String /* "Kelvin" */
    var Micrograms: String /* "Micrograms" */
    var Milligrams: String /* "Milligrams" */
    var Grams: String /* "Grams" */
    var Kilograms: String /* "Kilograms" */
    var MetricTons: String /* "MetricTons" */
    var Ounces: String /* "Ounces" */
    var Pounds: String /* "Pounds" */
    var Stones: String /* "Stones" */
    var Newtons: String /* "Newtons" */
    var PoundsForce: String /* "PoundsForce" */
    var KilogramsForce: String /* "KilogramsForce" */
    var Hertz: String /* "Hertz" */
    var Kilohertz: String /* "Kilohertz" */
    var Megahertz: String /* "Megahertz" */
    var Gigahertz: String /* "Gigahertz" */
    var RevolutionsPerMinute: String /* "RevolutionsPerMinute" */
    var Bytes: String /* "Bytes" */
    var Kilobytes: String /* "Kilobytes" */
    var Megabytes: String /* "Megabytes" */
    var Gigabytes: String /* "Gigabytes" */
    var Terabytes: String /* "Terabytes" */
    var Lumens: String /* "Lumens" */
    var Milliseconds: String /* "Milliseconds" */
    var Seconds: String /* "Seconds" */
    var Minutes: String /* "Minutes" */
    var Hours: String /* "Hours" */
    var Days: String /* "Days" */
    var Months: String /* "Months" */
    var Years: String /* "Years" */
    var Multiplier: String /* "Multiplier" */
    var Percentage: String /* "Percentage" */
    var Unspecified: String /* "Unspecified" */
    var EUnit_MAX: String /* "EUnit_MAX" */
}

external object EUnitDisplay {
    var None: String /* "None" */
    var Metric: String /* "Metric" */
    var Imperial: String /* "Imperial" */
    var Invalid: String /* "Invalid" */
    var EUnitDisplay_MAX: String /* "EUnitDisplay_MAX" */
}

external object EDefaultLocationUnit {
    var Micrometers: String /* "Micrometers" */
    var Millimeters: String /* "Millimeters" */
    var Centimeters: String /* "Centimeters" */
    var Meters: String /* "Meters" */
    var Kilometers: String /* "Kilometers" */
    var Inches: String /* "Inches" */
    var Feet: String /* "Feet" */
    var Yards: String /* "Yards" */
    var Miles: String /* "Miles" */
    var Invalid: String /* "Invalid" */
    var EDefaultLocationUnit_MAX: String /* "EDefaultLocationUnit_MAX" */
}

external open class EditorProjectAppearanceSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var bDisplayUnits: Boolean
    open var bDisplayUnitsOnComponentTransforms: Boolean
    open var DistanceUnits: Array<String /* "Micrometers" | "Millimeters" | "Centimeters" | "Meters" | "Kilometers" | "Inches" | "Feet" | "Yards" | "Miles" | "Lightyears" | "Degrees" | "Radians" | "MetersPerSecond" | "KilometersPerHour" | "MilesPerHour" | "Celsius" | "Farenheit" | "Kelvin" | "Micrograms" | "Milligrams" | "Grams" | "Kilograms" | "MetricTons" | "Ounces" | "Pounds" | "Stones" | "Newtons" | "PoundsForce" | "KilogramsForce" | "Hertz" | "Kilohertz" | "Megahertz" | "Gigahertz" | "RevolutionsPerMinute" | "Bytes" | "Kilobytes" | "Megabytes" | "Gigabytes" | "Terabytes" | "Lumens" | "Milliseconds" | "Seconds" | "Minutes" | "Hours" | "Days" | "Months" | "Years" | "Multiplier" | "Percentage" | "Unspecified" | "EUnit_MAX" */>
    open var MassUnits: Array<String /* "Micrometers" | "Millimeters" | "Centimeters" | "Meters" | "Kilometers" | "Inches" | "Feet" | "Yards" | "Miles" | "Lightyears" | "Degrees" | "Radians" | "MetersPerSecond" | "KilometersPerHour" | "MilesPerHour" | "Celsius" | "Farenheit" | "Kelvin" | "Micrograms" | "Milligrams" | "Grams" | "Kilograms" | "MetricTons" | "Ounces" | "Pounds" | "Stones" | "Newtons" | "PoundsForce" | "KilogramsForce" | "Hertz" | "Kilohertz" | "Megahertz" | "Gigahertz" | "RevolutionsPerMinute" | "Bytes" | "Kilobytes" | "Megabytes" | "Gigabytes" | "Terabytes" | "Lumens" | "Milliseconds" | "Seconds" | "Minutes" | "Hours" | "Days" | "Months" | "Years" | "Multiplier" | "Percentage" | "Unspecified" | "EUnit_MAX" */>
    open var TimeUnits: Array<String /* "Micrometers" | "Millimeters" | "Centimeters" | "Meters" | "Kilometers" | "Inches" | "Feet" | "Yards" | "Miles" | "Lightyears" | "Degrees" | "Radians" | "MetersPerSecond" | "KilometersPerHour" | "MilesPerHour" | "Celsius" | "Farenheit" | "Kelvin" | "Micrograms" | "Milligrams" | "Grams" | "Kilograms" | "MetricTons" | "Ounces" | "Pounds" | "Stones" | "Newtons" | "PoundsForce" | "KilogramsForce" | "Hertz" | "Kilohertz" | "Megahertz" | "Gigahertz" | "RevolutionsPerMinute" | "Bytes" | "Kilobytes" | "Megabytes" | "Gigabytes" | "Terabytes" | "Lumens" | "Milliseconds" | "Seconds" | "Minutes" | "Hours" | "Days" | "Months" | "Years" | "Multiplier" | "Percentage" | "Unspecified" | "EUnit_MAX" */>
    open var AngleUnits: String /* "Micrometers" | "Millimeters" | "Centimeters" | "Meters" | "Kilometers" | "Inches" | "Feet" | "Yards" | "Miles" | "Lightyears" | "Degrees" | "Radians" | "MetersPerSecond" | "KilometersPerHour" | "MilesPerHour" | "Celsius" | "Farenheit" | "Kelvin" | "Micrograms" | "Milligrams" | "Grams" | "Kilograms" | "MetricTons" | "Ounces" | "Pounds" | "Stones" | "Newtons" | "PoundsForce" | "KilogramsForce" | "Hertz" | "Kilohertz" | "Megahertz" | "Gigahertz" | "RevolutionsPerMinute" | "Bytes" | "Kilobytes" | "Megabytes" | "Gigabytes" | "Terabytes" | "Lumens" | "Milliseconds" | "Seconds" | "Minutes" | "Hours" | "Days" | "Months" | "Years" | "Multiplier" | "Percentage" | "Unspecified" | "EUnit_MAX" */
    open var SpeedUnits: String /* "Micrometers" | "Millimeters" | "Centimeters" | "Meters" | "Kilometers" | "Inches" | "Feet" | "Yards" | "Miles" | "Lightyears" | "Degrees" | "Radians" | "MetersPerSecond" | "KilometersPerHour" | "MilesPerHour" | "Celsius" | "Farenheit" | "Kelvin" | "Micrograms" | "Milligrams" | "Grams" | "Kilograms" | "MetricTons" | "Ounces" | "Pounds" | "Stones" | "Newtons" | "PoundsForce" | "KilogramsForce" | "Hertz" | "Kilohertz" | "Megahertz" | "Gigahertz" | "RevolutionsPerMinute" | "Bytes" | "Kilobytes" | "Megabytes" | "Gigabytes" | "Terabytes" | "Lumens" | "Milliseconds" | "Seconds" | "Minutes" | "Hours" | "Days" | "Months" | "Years" | "Multiplier" | "Percentage" | "Unspecified" | "EUnit_MAX" */
    open var TemperatureUnits: String /* "Micrometers" | "Millimeters" | "Centimeters" | "Meters" | "Kilometers" | "Inches" | "Feet" | "Yards" | "Miles" | "Lightyears" | "Degrees" | "Radians" | "MetersPerSecond" | "KilometersPerHour" | "MilesPerHour" | "Celsius" | "Farenheit" | "Kelvin" | "Micrograms" | "Milligrams" | "Grams" | "Kilograms" | "MetricTons" | "Ounces" | "Pounds" | "Stones" | "Newtons" | "PoundsForce" | "KilogramsForce" | "Hertz" | "Kilohertz" | "Megahertz" | "Gigahertz" | "RevolutionsPerMinute" | "Bytes" | "Kilobytes" | "Megabytes" | "Gigabytes" | "Terabytes" | "Lumens" | "Milliseconds" | "Seconds" | "Minutes" | "Hours" | "Days" | "Months" | "Years" | "Multiplier" | "Percentage" | "Unspecified" | "EUnit_MAX" */
    open var ForceUnits: String /* "Micrometers" | "Millimeters" | "Centimeters" | "Meters" | "Kilometers" | "Inches" | "Feet" | "Yards" | "Miles" | "Lightyears" | "Degrees" | "Radians" | "MetersPerSecond" | "KilometersPerHour" | "MilesPerHour" | "Celsius" | "Farenheit" | "Kelvin" | "Micrograms" | "Milligrams" | "Grams" | "Kilograms" | "MetricTons" | "Ounces" | "Pounds" | "Stones" | "Newtons" | "PoundsForce" | "KilogramsForce" | "Hertz" | "Kilohertz" | "Megahertz" | "Gigahertz" | "RevolutionsPerMinute" | "Bytes" | "Kilobytes" | "Megabytes" | "Gigabytes" | "Terabytes" | "Lumens" | "Milliseconds" | "Seconds" | "Minutes" | "Hours" | "Days" | "Months" | "Years" | "Multiplier" | "Percentage" | "Unspecified" | "EUnit_MAX" */
    open var UnitDisplay: String /* "None" | "Metric" | "Imperial" | "Invalid" | "EUnitDisplay_MAX" */
    open var DefaultInputUnits: String /* "Micrometers" | "Millimeters" | "Centimeters" | "Meters" | "Kilometers" | "Inches" | "Feet" | "Yards" | "Miles" | "Invalid" | "EDefaultLocationUnit_MAX" */

    companion object {
        fun Load(ResourceName: String): EditorProjectAppearanceSettings
        fun Find(Outer: UObject, ResourceName: String): EditorProjectAppearanceSettings
        fun GetDefaultObject(): EditorProjectAppearanceSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorProjectAppearanceSettings
        fun C(Other: UObject): EditorProjectAppearanceSettings
        fun C(Other: Any): EditorProjectAppearanceSettings
    }
}

external object ELevelEditor2DAxis {
    var X: String /* "X" */
    var Y: String /* "Y" */
    var Z: String /* "Z" */
    var ELevelEditor2DAxis_MAX: String /* "ELevelEditor2DAxis_MAX" */
}

external open class Mode2DLayer {
    open var Name: String
    open var Depth: Number
    open fun clone(): Mode2DLayer

    companion object {
        fun C(Other: UObject): Mode2DLayer
        fun C(Other: Any): Mode2DLayer
    }
}

external open class LevelEditor2DSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var bEnable2DWidget: Boolean
    open var bEnableSnapLayers: Boolean
    open var SnapAxis: String /* "X" | "Y" | "Z" | "ELevelEditor2DAxis_MAX" */
    open var SnapLayers: Array<Mode2DLayer>

    companion object {
        fun Load(ResourceName: String): LevelEditor2DSettings
        fun Find(Outer: UObject, ResourceName: String): LevelEditor2DSettings
        fun GetDefaultObject(): LevelEditor2DSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelEditor2DSettings
        fun C(Other: UObject): LevelEditor2DSettings
        fun C(Other: Any): LevelEditor2DSettings
    }
}

external open class BlueprintEditorProjectSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var bForceAllDependenciesToRecompile: Boolean
    open var bValidateUnloadedSoftActorReferences: Boolean
    open var bEnableChildActorExpansionInTreeView: Boolean
    open var DisabledCompilerMessagesExceptEditor: Array<String>
    open var DisabledCompilerMessages: Array<String>
    open var NamespacesToAlwaysInclude: Array<String>
    open var DefaultChildActorTreeViewMode: String /* "UseDefault" | "ComponentOnly" | "ComponentWithChildActor" | "ChildActorOnly" | "EChildActorComponentTreeViewVisualizationMode_MAX" */

    companion object {
        fun Load(ResourceName: String): BlueprintEditorProjectSettings
        fun Find(Outer: UObject, ResourceName: String): BlueprintEditorProjectSettings
        fun GetDefaultObject(): BlueprintEditorProjectSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintEditorProjectSettings
        fun C(Other: UObject): BlueprintEditorProjectSettings
        fun C(Other: Any): BlueprintEditorProjectSettings
    }
}

external open class DDCProjectSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var RecommendEveryoneSetupAGlobalLocalDDCPath: Boolean
    open var RecommendEveryoneSetupAGlobalS3DDCPath: Boolean

    companion object {
        fun Load(ResourceName: String): DDCProjectSettings
        fun Find(Outer: UObject, ResourceName: String): DDCProjectSettings
        fun GetDefaultObject(): DDCProjectSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): DDCProjectSettings
        fun C(Other: UObject): DDCProjectSettings
        fun C(Other: Any): DDCProjectSettings
    }
}

external open class EditorSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var GlobalLocalDDCPath: DirectoryPath
    open var GlobalSharedDDCPath: DirectoryPath
    open var LocalDerivedDataCache: DirectoryPath
    open var SharedDerivedDataCache: DirectoryPath
    open var bEnableS3DDC: Boolean
    open var GlobalS3DDCPath: DirectoryPath
    open var bLoadTheMostRecentlyLoadedProjectAtStartup: Boolean
    open var bEditorAnalyticsEnabled: Boolean
    open var RecentlyOpenedProjectFiles: Array<String>
    open var CreatedProjectPaths: Array<String>
    open var bCopyStarterContentPreference: Boolean
    open var CompletedSurveys: Array<Guid>
    open var InProgressSurveys: Array<Guid>
    open var AutoScalabilityWorkScaleAmount: Number

    companion object {
        fun Load(ResourceName: String): EditorSettings
        fun Find(Outer: UObject, ResourceName: String): EditorSettings
        fun GetDefaultObject(): EditorSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorSettings
        fun C(Other: UObject): EditorSettings
        fun C(Other: Any): EditorSettings
    }
}

external open class EditorSkeletonNotifyObj : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Name: String

    companion object {
        fun Load(ResourceName: String): EditorSkeletonNotifyObj
        fun Find(Outer: UObject, ResourceName: String): EditorSkeletonNotifyObj
        fun GetDefaultObject(): EditorSkeletonNotifyObj
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorSkeletonNotifyObj
        fun C(Other: UObject): EditorSkeletonNotifyObj
        fun C(Other: Any): EditorSkeletonNotifyObj
    }
}

external open class EditorSubsystemBlueprintLibrary : BlueprintFunctionLibrary {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EditorSubsystemBlueprintLibrary
        fun Find(Outer: UObject, ResourceName: String): EditorSubsystemBlueprintLibrary
        fun GetDefaultObject(): EditorSubsystemBlueprintLibrary
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorSubsystemBlueprintLibrary
        fun GetEditorSubsystem(Class: UnrealEngineClass): EditorSubsystem
        fun C(Other: UObject): EditorSubsystemBlueprintLibrary
        fun C(Other: Any): EditorSubsystemBlueprintLibrary
    }
}

external open class EnumFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EnumFactory
        fun Find(Outer: UObject, ResourceName: String): EnumFactory
        fun GetDefaultObject(): EnumFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EnumFactory
        fun C(Other: UObject): EnumFactory
        fun C(Other: Any): EnumFactory
    }
}

external open class GatherTextCommandletBase : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GatherTextCommandletBase
        fun Find(Outer: UObject, ResourceName: String): GatherTextCommandletBase
        fun GetDefaultObject(): GatherTextCommandletBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GatherTextCommandletBase
        fun C(Other: UObject): GatherTextCommandletBase
        fun C(Other: Any): GatherTextCommandletBase
    }
}

external open class ExportDialogueScriptCommandlet : GatherTextCommandletBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ExportDialogueScriptCommandlet
        fun Find(Outer: UObject, ResourceName: String): ExportDialogueScriptCommandlet
        fun GetDefaultObject(): ExportDialogueScriptCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ExportDialogueScriptCommandlet
        fun C(Other: UObject): ExportDialogueScriptCommandlet
        fun C(Other: Any): ExportDialogueScriptCommandlet
    }
}

external open class ExportPakDependenciesCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ExportPakDependenciesCommandlet
        fun Find(Outer: UObject, ResourceName: String): ExportPakDependenciesCommandlet
        fun GetDefaultObject(): ExportPakDependenciesCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ExportPakDependenciesCommandlet
        fun C(Other: UObject): ExportPakDependenciesCommandlet
        fun C(Other: Any): ExportPakDependenciesCommandlet
    }
}

external open class ExportTextContainer : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ExportText: String

    companion object {
        fun Load(ResourceName: String): ExportTextContainer
        fun Find(Outer: UObject, ResourceName: String): ExportTextContainer
        fun GetDefaultObject(): ExportTextContainer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ExportTextContainer
        fun C(Other: UObject): ExportTextContainer
        fun C(Other: Any): ExportTextContainer
    }
}

external open class ExtractLocResCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ExtractLocResCommandlet
        fun Find(Outer: UObject, ResourceName: String): ExtractLocResCommandlet
        fun GetDefaultObject(): ExtractLocResCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ExtractLocResCommandlet
        fun C(Other: UObject): ExtractLocResCommandlet
        fun C(Other: Any): ExtractLocResCommandlet
    }
}

external open class FbxSceneImportData : UObject {
    constructor()
    constructor(Outer: UObject)
    open var SourceFbxFile: String

    companion object {
        fun Load(ResourceName: String): FbxSceneImportData
        fun Find(Outer: UObject, ResourceName: String): FbxSceneImportData
        fun GetDefaultObject(): FbxSceneImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FbxSceneImportData
        fun C(Other: UObject): FbxSceneImportData
        fun C(Other: Any): FbxSceneImportData
    }
}

external open class FbxAssetImportData : AssetImportData {
    constructor()
    constructor(Outer: UObject)
    open var ImportTranslation: Vector
    open var ImportRotation: Rotator
    open var ImportUniformScale: Number
    open var bConvertScene: Boolean
    open var bForceFrontXAxis: Boolean
    open var bConvertSceneUnit: Boolean
    open var bImportAsScene: Boolean
    open var FbxSceneImportDataReference: FbxSceneImportData

    companion object {
        fun Load(ResourceName: String): FbxAssetImportData
        fun Find(Outer: UObject, ResourceName: String): FbxAssetImportData
        fun GetDefaultObject(): FbxAssetImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FbxAssetImportData
        fun C(Other: UObject): FbxAssetImportData
        fun C(Other: Any): FbxAssetImportData
    }
}

external object EFBXAnimationLengthImportType {
    var FBXALIT_ExportedTime: String /* "FBXALIT_ExportedTime" */
    var FBXALIT_AnimatedKey: String /* "FBXALIT_AnimatedKey" */
    var FBXALIT_SetRange: String /* "FBXALIT_SetRange" */
    var FBXALIT_MAX: String /* "FBXALIT_MAX" */
}

external open class Int32Interval {
    open var Min: Number
    open var Max: Number
    open fun clone(): Int32Interval

    companion object {
        fun C(Other: UObject): Int32Interval
        fun C(Other: Any): Int32Interval
    }
}

external open class FbxAnimSequenceImportData : FbxAssetImportData {
    constructor()
    constructor(Outer: UObject)
    open var bImportMeshesInBoneHierarchy: Boolean
    open var AnimationLength: String /* "FBXALIT_ExportedTime" | "FBXALIT_AnimatedKey" | "FBXALIT_SetRange" | "FBXALIT_MAX" */
    open var StartFrame: Number
    open var EndFrame: Number
    open var FrameImportRange: Int32Interval
    open var bUseDefaultSampleRate: Boolean
    open var CustomSampleRate: Number
    open var SourceAnimationName: String
    open var bImportCustomAttribute: Boolean
    open var bDeleteExistingCustomAttributeCurves: Boolean
    open var bDeleteExistingNonCurveCustomAttributes: Boolean
    open var bImportBoneTracks: Boolean
    open var bSetMaterialDriveParameterOnCustomAttribute: Boolean
    open var MaterialCurveSuffixes: Array<String>
    open var bRemoveRedundantKeys: Boolean
    open var bDeleteExistingMorphTargetCurves: Boolean
    open var bDoNotImportCurveWithZero: Boolean
    open var bPreserveLocalTransform: Boolean

    companion object {
        fun Load(ResourceName: String): FbxAnimSequenceImportData
        fun Find(Outer: UObject, ResourceName: String): FbxAnimSequenceImportData
        fun GetDefaultObject(): FbxAnimSequenceImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FbxAnimSequenceImportData
        fun C(Other: UObject): FbxAnimSequenceImportData
        fun C(Other: Any): FbxAnimSequenceImportData
    }
}

external object EFBXTestPlanActionType {
    var Import: String /* "Import" */
    var Reimport: String /* "Reimport" */
    var AddLOD: String /* "AddLOD" */
    var ReimportLOD: String /* "ReimportLOD" */
    var ImportReload: String /* "ImportReload" */
    var AddAlternateSkinnig: String /* "AddAlternateSkinnig" */
    var EFBXTestPlanActionType_MAX: String /* "EFBXTestPlanActionType_MAX" */
}

external object EFBXExpectedResultPreset {
    var Error_Number: String /* "Error_Number" */
    var Warning_Number: String /* "Warning_Number" */
    var Created_Staticmesh_Number: String /* "Created_Staticmesh_Number" */
    var Created_Skeletalmesh_Number: String /* "Created_Skeletalmesh_Number" */
    var Materials_Created_Number: String /* "Materials_Created_Number" */
    var Material_Slot_Imported_Name: String /* "Material_Slot_Imported_Name" */
    var Vertex_Number: String /* "Vertex_Number" */
    var Lod_Number: String /* "Lod_Number" */
    var Vertex_Number_Lod: String /* "Vertex_Number_Lod" */
    var Mesh_Materials_Number: String /* "Mesh_Materials_Number" */
    var Mesh_LOD_Section_Number: String /* "Mesh_LOD_Section_Number" */
    var Mesh_LOD_Section_Vertex_Number: String /* "Mesh_LOD_Section_Vertex_Number" */
    var Mesh_LOD_Section_Triangle_Number: String /* "Mesh_LOD_Section_Triangle_Number" */
    var Mesh_LOD_Section_Material_Name: String /* "Mesh_LOD_Section_Material_Name" */
    var Mesh_LOD_Section_Material_Index: String /* "Mesh_LOD_Section_Material_Index" */
    var Mesh_LOD_Section_Material_Imported_Name: String /* "Mesh_LOD_Section_Material_Imported_Name" */
    var Mesh_LOD_Vertex_Position: String /* "Mesh_LOD_Vertex_Position" */
    var Mesh_LOD_Vertex_Normal: String /* "Mesh_LOD_Vertex_Normal" */
    var LOD_UV_Channel_Number: String /* "LOD_UV_Channel_Number" */
    var Bone_Number: String /* "Bone_Number" */
    var Bone_Position: String /* "Bone_Position" */
    var Animation_Frame_Number: String /* "Animation_Frame_Number" */
    var Animation_Length: String /* "Animation_Length" */
    var Animation_CustomCurve_KeyValue: String /* "Animation_CustomCurve_KeyValue" */
    var Animation_CustomCurve_KeyArriveTangent: String /* "Animation_CustomCurve_KeyArriveTangent" */
    var Animation_CustomCurve_KeyLeaveTangent: String /* "Animation_CustomCurve_KeyLeaveTangent" */
    var Skin_By_Bone_Vertex_Number: String /* "Skin_By_Bone_Vertex_Number" */
    var EFBXExpectedResultPreset_MAX: String /* "EFBXExpectedResultPreset_MAX" */
}

external open class FbxTestPlanExpectedResult {
    open var ExpectedPresetsType: String /* "Error_Number" | "Warning_Number" | "Created_Staticmesh_Number" | "Created_Skeletalmesh_Number" | "Materials_Created_Number" | "Material_Slot_Imported_Name" | "Vertex_Number" | "Lod_Number" | "Vertex_Number_Lod" | "Mesh_Materials_Number" | "Mesh_LOD_Section_Number" | "Mesh_LOD_Section_Vertex_Number" | "Mesh_LOD_Section_Triangle_Number" | "Mesh_LOD_Section_Material_Name" | "Mesh_LOD_Section_Material_Index" | "Mesh_LOD_Section_Material_Imported_Name" | "Mesh_LOD_Vertex_Position" | "Mesh_LOD_Vertex_Normal" | "LOD_UV_Channel_Number" | "Bone_Number" | "Bone_Position" | "Animation_Frame_Number" | "Animation_Length" | "Animation_CustomCurve_KeyValue" | "Animation_CustomCurve_KeyArriveTangent" | "Animation_CustomCurve_KeyLeaveTangent" | "Skin_By_Bone_Vertex_Number" | "EFBXExpectedResultPreset_MAX" */
    open var ExpectedPresetsDataInteger: Array<Number>
    open var ExpectedPresetsDataFloat: Array<Number>
    open var ExpectedPresetsDataDouble: Array<Any>
    open var ExpectedPresetsDataString: Array<String>
    open fun clone(): FbxTestPlanExpectedResult

    companion object {
        fun C(Other: UObject): FbxTestPlanExpectedResult
        fun C(Other: Any): FbxTestPlanExpectedResult
    }
}

external object EFBXImportType {
    var FBXIT_StaticMesh: String /* "FBXIT_StaticMesh" */
    var FBXIT_SkeletalMesh: String /* "FBXIT_SkeletalMesh" */
    var FBXIT_Animation: String /* "FBXIT_Animation" */
    var FBXIT_MAX: String /* "FBXIT_MAX" */
}

external object EFBXNormalImportMethod {
    var FBXNIM_ComputeNormals: String /* "FBXNIM_ComputeNormals" */
    var FBXNIM_ImportNormals: String /* "FBXNIM_ImportNormals" */
    var FBXNIM_ImportNormalsAndTangents: String /* "FBXNIM_ImportNormalsAndTangents" */
    var FBXNIM_MAX: String /* "FBXNIM_MAX" */
}

external object EFBXNormalGenerationMethod {
    var BuiltIn: String /* "BuiltIn" */
    var MikkTSpace: String /* "MikkTSpace" */
    var EFBXNormalGenerationMethod_MAX: String /* "EFBXNormalGenerationMethod_MAX" */
}

external open class ImportMeshLodSectionsData {
    open var SectionOriginalMaterialName: Array<String>
    open fun clone(): ImportMeshLodSectionsData

    companion object {
        fun C(Other: UObject): ImportMeshLodSectionsData
        fun C(Other: Any): ImportMeshLodSectionsData
    }
}

external open class FbxMeshImportData : FbxAssetImportData {
    constructor()
    constructor(Outer: UObject)
    open var bTransformVertexToAbsolute: Boolean
    open var bBakePivotInVertex: Boolean
    open var bImportMeshLODs: Boolean
    open var NormalImportMethod: String /* "FBXNIM_ComputeNormals" | "FBXNIM_ImportNormals" | "FBXNIM_ImportNormalsAndTangents" | "FBXNIM_MAX" */
    open var NormalGenerationMethod: String /* "BuiltIn" | "MikkTSpace" | "EFBXNormalGenerationMethod_MAX" */
    open var bComputeWeightedNormals: Boolean
    open var bReorderMaterialToFbxOrder: Boolean
    open var ImportMaterialOriginalNameData: Array<String>
    open var ImportMeshLodData: Array<ImportMeshLodSectionsData>

    companion object {
        fun Load(ResourceName: String): FbxMeshImportData
        fun Find(Outer: UObject, ResourceName: String): FbxMeshImportData
        fun GetDefaultObject(): FbxMeshImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FbxMeshImportData
        fun C(Other: UObject): FbxMeshImportData
        fun C(Other: Any): FbxMeshImportData
    }
}

external object EVertexColorImportOption {
    var Replace: String /* "Replace" */
    var Ignore: String /* "Ignore" */
    var Override: String /* "Override" */
    var EVertexColorImportOption_MAX: String /* "EVertexColorImportOption_MAX" */
}

external open class FbxStaticMeshImportData : FbxMeshImportData {
    constructor()
    constructor(Outer: UObject)
    open var StaticMeshLODGroup: String
    open var VertexColorImportOption: String /* "Replace" | "Ignore" | "Override" | "EVertexColorImportOption_MAX" */
    open var VertexOverrideColor: Color
    open var bRemoveDegenerates: Boolean
    open var bBuildAdjacencyBuffer: Boolean
    open var bBuildReversedIndexBuffer: Boolean
    open var bGenerateLightmapUVs: Boolean
    open var bOneConvexHullPerUCX: Boolean
    open var bAutoGenerateCollision: Boolean
    open var bCombineMeshes: Boolean

    companion object {
        fun Load(ResourceName: String): FbxStaticMeshImportData
        fun Find(Outer: UObject, ResourceName: String): FbxStaticMeshImportData
        fun GetDefaultObject(): FbxStaticMeshImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FbxStaticMeshImportData
        fun C(Other: UObject): FbxStaticMeshImportData
        fun C(Other: Any): FbxStaticMeshImportData
    }
}

external object EFBXImportContentType {
    var FBXICT_All: String /* "FBXICT_All" */
    var FBXICT_Geometry: String /* "FBXICT_Geometry" */
    var FBXICT_SkinningWeights: String /* "FBXICT_SkinningWeights" */
    var FBXICT_MAX: String /* "FBXICT_MAX" */
}

external open class FbxSkeletalMeshImportData : FbxMeshImportData {
    constructor()
    constructor(Outer: UObject)
    open var ImportContentType: String /* "FBXICT_All" | "FBXICT_Geometry" | "FBXICT_SkinningWeights" | "FBXICT_MAX" */
    open var LastImportContentType: String /* "FBXICT_All" | "FBXICT_Geometry" | "FBXICT_SkinningWeights" | "FBXICT_MAX" */
    open var VertexColorImportOption: String /* "Replace" | "Ignore" | "Override" | "EVertexColorImportOption_MAX" */
    open var VertexOverrideColor: Color
    open var bUpdateSkeletonReferencePose: Boolean
    open var bUseT0AsRefPose: Boolean
    open var bPreserveSmoothingGroups: Boolean
    open var bImportMeshesInBoneHierarchy: Boolean
    open var bImportMorphTargets: Boolean
    open var ThresholdPosition: Number
    open var ThresholdTangentNormal: Number
    open var ThresholdUV: Number
    open var MorphThresholdPosition: Number

    companion object {
        fun Load(ResourceName: String): FbxSkeletalMeshImportData
        fun Find(Outer: UObject, ResourceName: String): FbxSkeletalMeshImportData
        fun GetDefaultObject(): FbxSkeletalMeshImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FbxSkeletalMeshImportData
        fun C(Other: UObject): FbxSkeletalMeshImportData
        fun C(Other: Any): FbxSkeletalMeshImportData
    }
}

external object EMaterialSearchLocation {
    var Local: String /* "Local" */
    var UnderParent: String /* "UnderParent" */
    var UnderRoot: String /* "UnderRoot" */
    var AllAssets: String /* "AllAssets" */
    var DoNotSearch: String /* "DoNotSearch" */
    var EMaterialSearchLocation_MAX: String /* "EMaterialSearchLocation_MAX" */
}

external open class FbxTextureImportData : FbxAssetImportData {
    constructor()
    constructor(Outer: UObject)
    open var bInvertNormalMaps: Boolean
    open var MaterialSearchLocation: String /* "Local" | "UnderParent" | "UnderRoot" | "AllAssets" | "DoNotSearch" | "EMaterialSearchLocation_MAX" */
    open var BaseMaterialName: SoftObjectPath
    open var BaseColorName: String
    open var BaseDiffuseTextureName: String
    open var BaseNormalTextureName: String
    open var BaseEmissiveColorName: String
    open var BaseEmmisiveTextureName: String
    open var BaseSpecularTextureName: String
    open var BaseOpacityTextureName: String

    companion object {
        fun Load(ResourceName: String): FbxTextureImportData
        fun Find(Outer: UObject, ResourceName: String): FbxTextureImportData
        fun GetDefaultObject(): FbxTextureImportData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FbxTextureImportData
        fun C(Other: UObject): FbxTextureImportData
        fun C(Other: Any): FbxTextureImportData
    }
}

external open class FbxImportUI : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bIsObjImport: Boolean
    open var OriginalImportType: String /* "FBXIT_StaticMesh" | "FBXIT_SkeletalMesh" | "FBXIT_Animation" | "FBXIT_MAX" */
    open var MeshTypeToImport: String /* "FBXIT_StaticMesh" | "FBXIT_SkeletalMesh" | "FBXIT_Animation" | "FBXIT_MAX" */
    open var bOverrideFullName: Boolean
    open var bImportAsSkeletal: Boolean
    open var bImportMesh: Boolean
    open var Skeleton: Skeleton
    open var bCreatePhysicsAsset: Boolean
    open var PhysicsAsset: PhysicsAsset
    open var bAutoComputeLodDistances: Boolean
    open var LodDistance0: Number
    open var LodDistance1: Number
    open var LodDistance2: Number
    open var LodDistance3: Number
    open var LodDistance4: Number
    open var LodDistance5: Number
    open var LodDistance6: Number
    open var LodDistance7: Number
    open var MinimumLodNumber: Number
    open var LodNumber: Number
    open var bImportAnimations: Boolean
    open var OverrideAnimationName: String
    open var bImportRigidMesh: Boolean
    open var bImportMaterials: Boolean
    open var bImportTextures: Boolean
    open var bResetToFbxOnMaterialConflict: Boolean
    open var StaticMeshImportData: FbxStaticMeshImportData
    open var SkeletalMeshImportData: FbxSkeletalMeshImportData
    open var AnimSequenceImportData: FbxAnimSequenceImportData
    open var TextureImportData: FbxTextureImportData
    open var bAutomatedImportShouldDetectType: Boolean
    open var FileVersion: String
    open var FileCreator: String
    open var FileCreatorApplication: String
    open var FileUnits: String
    open var FileAxisDirection: String
    open var FileSampleRate: String
    open var AnimStartFrame: String
    open var AnimEndFrame: String
    open fun ResetToDefault()

    companion object {
        fun Load(ResourceName: String): FbxImportUI
        fun Find(Outer: UObject, ResourceName: String): FbxImportUI
        fun GetDefaultObject(): FbxImportUI
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FbxImportUI
        fun C(Other: UObject): FbxImportUI
        fun C(Other: Any): FbxImportUI
    }
}

external open class FbxTestPlan : UObject {
    constructor()
    constructor(Outer: UObject)
    open var TestPlanName: String
    open var Action: String /* "Import" | "Reimport" | "AddLOD" | "ReimportLOD" | "ImportReload" | "AddAlternateSkinnig" | "EFBXTestPlanActionType_MAX" */
    open var LODIndex: Number
    open var bDeleteFolderAssets: Boolean
    open var ExpectedResult: Array<FbxTestPlanExpectedResult>
    open var ImportUI: FbxImportUI

    companion object {
        fun Load(ResourceName: String): FbxTestPlan
        fun Find(Outer: UObject, ResourceName: String): FbxTestPlan
        fun GetDefaultObject(): FbxTestPlan
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FbxTestPlan
        fun C(Other: UObject): FbxTestPlan
        fun C(Other: Any): FbxTestPlan
    }
}

external object EFbxExportCompatibility {
    var FBX_2011: String /* "FBX_2011" */
    var FBX_2012: String /* "FBX_2012" */
    var FBX_2013: String /* "FBX_2013" */
    var FBX_2014: String /* "FBX_2014" */
    var FBX_2016: String /* "FBX_2016" */
    var FBX_2018: String /* "FBX_2018" */
    var FBX_2019: String /* "FBX_2019" */
    var FBX_2020: String /* "FBX_2020" */
    var FBX_MAX: String /* "FBX_MAX" */
}

external open class FbxExportOption : UObject {
    constructor()
    constructor(Outer: UObject)
    open var FbxExportCompatibility: String /* "FBX_2011" | "FBX_2012" | "FBX_2013" | "FBX_2014" | "FBX_2016" | "FBX_2018" | "FBX_2019" | "FBX_2020" | "FBX_MAX" */
    open var bASCII: Boolean
    open var bForceFrontXAxis: Boolean
    open var VertexColor: Boolean
    open var LevelOfDetail: Boolean
    open var Collision: Boolean
    open var bExportMorphTargets: Boolean
    open var bExportPreviewMesh: Boolean
    open var MapSkeletalMotionToRoot: Boolean
    open var bExportLocalTime: Boolean

    companion object {
        fun Load(ResourceName: String): FbxExportOption
        fun Find(Outer: UObject, ResourceName: String): FbxExportOption
        fun GetDefaultObject(): FbxExportOption
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FbxExportOption
        fun C(Other: UObject): FbxExportOption
        fun C(Other: Any): FbxExportOption
    }
}

external open class FbxFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var ImportUI: FbxImportUI
    open var OriginalImportUI: FbxImportUI

    companion object {
        fun Load(ResourceName: String): FbxFactory
        fun Find(Outer: UObject, ResourceName: String): FbxFactory
        fun GetDefaultObject(): FbxFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FbxFactory
        fun C(Other: UObject): FbxFactory
        fun C(Other: Any): FbxFactory
    }
}

external open class SceneImportFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SceneImportFactory
        fun Find(Outer: UObject, ResourceName: String): SceneImportFactory
        fun GetDefaultObject(): SceneImportFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SceneImportFactory
        fun C(Other: UObject): SceneImportFactory
        fun C(Other: Any): SceneImportFactory
    }
}

external object EFBXSceneOptionsCreateHierarchyType {
    var FBXSOCHT_CreateLevelActors: String /* "FBXSOCHT_CreateLevelActors" */
    var FBXSOCHT_CreateActorComponents: String /* "FBXSOCHT_CreateActorComponents" */
    var FBXSOCHT_CreateBlueprint: String /* "FBXSOCHT_CreateBlueprint" */
    var FBXSOCHT_MAX: String /* "FBXSOCHT_MAX" */
}

external open class FbxSceneImportOptions : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bCreateContentFolderHierarchy: Boolean
    open var bImportAsDynamic: Boolean
    open var HierarchyType: String /* "FBXSOCHT_CreateLevelActors" | "FBXSOCHT_CreateActorComponents" | "FBXSOCHT_CreateBlueprint" | "FBXSOCHT_MAX" */
    open var bForceFrontXAxis: Boolean
    open var ImportTranslation: Vector
    open var ImportRotation: Rotator
    open var ImportUniformScale: Number
    open var bTransformVertexToAbsolute: Boolean
    open var bBakePivotInVertex: Boolean
    open var bImportStaticMeshLODs: Boolean
    open var bImportSkeletalMeshLODs: Boolean
    open var bInvertNormalMaps: Boolean

    companion object {
        fun Load(ResourceName: String): FbxSceneImportOptions
        fun Find(Outer: UObject, ResourceName: String): FbxSceneImportOptions
        fun GetDefaultObject(): FbxSceneImportOptions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FbxSceneImportOptions
        fun C(Other: UObject): FbxSceneImportOptions
        fun C(Other: Any): FbxSceneImportOptions
    }
}

external object EFbxSceneVertexColorImportOption {
    var Replace: String /* "Replace" */
    var Ignore: String /* "Ignore" */
    var Override: String /* "Override" */
    var EFbxSceneVertexColorImportOption_MAX: String /* "EFbxSceneVertexColorImportOption_MAX" */
}

external object EFBXSceneNormalImportMethod {
    var FBXSceneNIM_ComputeNormals: String /* "FBXSceneNIM_ComputeNormals" */
    var FBXSceneNIM_ImportNormals: String /* "FBXSceneNIM_ImportNormals" */
    var FBXSceneNIM_ImportNormalsAndTangents: String /* "FBXSceneNIM_ImportNormalsAndTangents" */
    var FBXSceneNIM_MAX: String /* "FBXSceneNIM_MAX" */
}

external object EFBXSceneNormalGenerationMethod {
    var BuiltIn: String /* "BuiltIn" */
    var MikkTSpace: String /* "MikkTSpace" */
    var EFBXSceneNormalGenerationMethod_MAX: String /* "EFBXSceneNormalGenerationMethod_MAX" */
}

external open class FbxSceneImportOptionsStaticMesh : UObject {
    constructor()
    constructor(Outer: UObject)
    open var StaticMeshLODGroup: String
    open var bAutoGenerateCollision: Boolean
    open var VertexColorImportOption: String /* "Replace" | "Ignore" | "Override" | "EFbxSceneVertexColorImportOption_MAX" */
    open var VertexOverrideColor: Color
    open var bRemoveDegenerates: Boolean
    open var bBuildAdjacencyBuffer: Boolean
    open var bBuildReversedIndexBuffer: Boolean
    open var bGenerateLightmapUVs: Boolean
    open var bOneConvexHullPerUCX: Boolean
    open var NormalImportMethod: String /* "FBXSceneNIM_ComputeNormals" | "FBXSceneNIM_ImportNormals" | "FBXSceneNIM_ImportNormalsAndTangents" | "FBXSceneNIM_MAX" */
    open var NormalGenerationMethod: String /* "BuiltIn" | "MikkTSpace" | "EFBXSceneNormalGenerationMethod_MAX" */

    companion object {
        fun Load(ResourceName: String): FbxSceneImportOptionsStaticMesh
        fun Find(Outer: UObject, ResourceName: String): FbxSceneImportOptionsStaticMesh
        fun GetDefaultObject(): FbxSceneImportOptionsStaticMesh
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FbxSceneImportOptionsStaticMesh
        fun C(Other: UObject): FbxSceneImportOptionsStaticMesh
        fun C(Other: Any): FbxSceneImportOptionsStaticMesh
    }
}

external open class FbxSceneImportOptionsSkeletalMesh : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bUpdateSkeletonReferencePose: Boolean
    open var bCreatePhysicsAsset: Boolean
    open var bUseT0AsRefPose: Boolean
    open var bPreserveSmoothingGroups: Boolean
    open var bImportMeshesInBoneHierarchy: Boolean
    open var bImportMorphTargets: Boolean
    open var ThresholdPosition: Number
    open var ThresholdTangentNormal: Number
    open var ThresholdUV: Number
    open var MorphThresholdPosition: Number
    open var bImportAnimations: Boolean
    open var AnimationLength: String /* "FBXALIT_ExportedTime" | "FBXALIT_AnimatedKey" | "FBXALIT_SetRange" | "FBXALIT_MAX" */
    open var FrameImportRange: Int32Interval
    open var bUseDefaultSampleRate: Boolean
    open var CustomSampleRate: Number
    open var bImportCustomAttribute: Boolean
    open var bDeleteExistingCustomAttributeCurves: Boolean
    open var bDeleteExistingNonCurveCustomAttributes: Boolean
    open var bPreserveLocalTransform: Boolean
    open var bDeleteExistingMorphTargetCurves: Boolean

    companion object {
        fun Load(ResourceName: String): FbxSceneImportOptionsSkeletalMesh
        fun Find(Outer: UObject, ResourceName: String): FbxSceneImportOptionsSkeletalMesh
        fun GetDefaultObject(): FbxSceneImportOptionsSkeletalMesh
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FbxSceneImportOptionsSkeletalMesh
        fun C(Other: UObject): FbxSceneImportOptionsSkeletalMesh
        fun C(Other: Any): FbxSceneImportOptionsSkeletalMesh
    }
}

external open class FbxSceneImportFactory : SceneImportFactory {
    constructor()
    constructor(Outer: UObject)
    open var SceneImportOptions: FbxSceneImportOptions
    open var SceneImportOptionsStaticMesh: FbxSceneImportOptionsStaticMesh
    open var SceneImportOptionsSkeletalMesh: FbxSceneImportOptionsSkeletalMesh
    open var StaticMeshImportData: FbxStaticMeshImportData
    open var SkeletalMeshImportData: FbxSkeletalMeshImportData
    open var AnimSequenceImportData: FbxAnimSequenceImportData
    open var TextureImportData: FbxTextureImportData
    open var ReimportData: FbxSceneImportData

    companion object {
        fun Load(ResourceName: String): FbxSceneImportFactory
        fun Find(Outer: UObject, ResourceName: String): FbxSceneImportFactory
        fun GetDefaultObject(): FbxSceneImportFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FbxSceneImportFactory
        fun C(Other: UObject): FbxSceneImportFactory
        fun C(Other: Any): FbxSceneImportFactory
    }
}

external object EReloadPackagesInteractionMode {
    var Interactive: String /* "Interactive" */
    var AssumePositive: String /* "AssumePositive" */
    var AssumeNegative: String /* "AssumeNegative" */
    var EReloadPackagesInteractionMode_MAX: String /* "EReloadPackagesInteractionMode_MAX" */
}

external interface `T$631` {
    var bOutAnyPackagesUnloaded: Boolean
    var OutErrorMessage: String
}

external interface `T$632` {
    var bOutAnyPackagesReloaded: Boolean
    var OutErrorMessage: String
}

external interface `T$633` {
    var OutDirtyPackages: Array<Package>
}

external interface `T$634` {
    var OutDirtyPackages: Array<Package>
}

external open class EditorLoadingAndSavingUtils : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EditorLoadingAndSavingUtils
        fun Find(Outer: UObject, ResourceName: String): EditorLoadingAndSavingUtils
        fun GetDefaultObject(): EditorLoadingAndSavingUtils
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorLoadingAndSavingUtils
        fun UnloadPackages(PackagesToUnload: Array<Package>, bOutAnyPackagesUnloaded: Boolean = definedExternally, OutErrorMessage: String = definedExternally): `T$631`
        fun SavePackagesWithDialog(PackagesToSave: Array<Package>, bOnlyDirty: Boolean): Boolean
        fun SavePackages(PackagesToSave: Array<Package>, bOnlyDirty: Boolean): Boolean
        fun SaveMap(World: World, AssetPath: String): Boolean
        fun SaveDirtyPackagesWithDialog(bSaveMapPackages: Boolean, bSaveContentPackages: Boolean): Boolean
        fun SaveDirtyPackages(bSaveMapPackages: Boolean, bSaveContentPackages: Boolean): Boolean
        fun SaveCurrentLevel(): Boolean
        fun ReloadPackages(PackagesToReload: Array<Package>, bOutAnyPackagesReloaded: Boolean = definedExternally, OutErrorMessage: String = definedExternally, InteractionMode: String /* "Interactive" | "AssumePositive" | "AssumeNegative" | "EReloadPackagesInteractionMode_MAX" */ = definedExternally): `T$632`
        fun NewMapFromTemplate(PathToTemplateLevel: String, bSaveExistingMap: Boolean): World
        fun NewBlankMap(bSaveExistingMap: Boolean): World
        fun LoadMapWithDialog(): World
        fun LoadMap(Filename: String): World
        fun ImportScene(Filename: String)
        fun GetDirtyMapPackages(OutDirtyPackages: Array<Package> = definedExternally): `T$633`
        fun GetDirtyContentPackages(OutDirtyPackages: Array<Package> = definedExternally): `T$634`
        fun ExportScene(bExportSelectedActorsOnly: Boolean)
        fun C(Other: UObject): EditorLoadingAndSavingUtils
        fun C(Other: Any): EditorLoadingAndSavingUtils
    }
}

external open class FileServerCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): FileServerCommandlet
        fun Find(Outer: UObject, ResourceName: String): FileServerCommandlet
        fun GetDefaultObject(): FileServerCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FileServerCommandlet
        fun C(Other: UObject): FileServerCommandlet
        fun C(Other: Any): FileServerCommandlet
    }
}

external open class FixConflictingLocalizationKeysCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): FixConflictingLocalizationKeysCommandlet
        fun Find(Outer: UObject, ResourceName: String): FixConflictingLocalizationKeysCommandlet
        fun GetDefaultObject(): FixConflictingLocalizationKeysCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FixConflictingLocalizationKeysCommandlet
        fun C(Other: UObject): FixConflictingLocalizationKeysCommandlet
        fun C(Other: Any): FixConflictingLocalizationKeysCommandlet
    }
}

external open class ResavePackagesCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ResavePackagesCommandlet
        fun Find(Outer: UObject, ResourceName: String): ResavePackagesCommandlet
        fun GetDefaultObject(): ResavePackagesCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ResavePackagesCommandlet
        fun C(Other: UObject): ResavePackagesCommandlet
        fun C(Other: Any): ResavePackagesCommandlet
    }
}

external open class FixupNeedsLoadForEditorGameCommandlet : ResavePackagesCommandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): FixupNeedsLoadForEditorGameCommandlet
        fun Find(Outer: UObject, ResourceName: String): FixupNeedsLoadForEditorGameCommandlet
        fun GetDefaultObject(): FixupNeedsLoadForEditorGameCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FixupNeedsLoadForEditorGameCommandlet
        fun C(Other: UObject): FixupNeedsLoadForEditorGameCommandlet
        fun C(Other: Any): FixupNeedsLoadForEditorGameCommandlet
    }
}

external open class FontFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): FontFactory
        fun Find(Outer: UObject, ResourceName: String): FontFactory
        fun GetDefaultObject(): FontFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FontFactory
        fun C(Other: UObject): FontFactory
        fun C(Other: Any): FontFactory
    }
}

external open class FontFileImportFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): FontFileImportFactory
        fun Find(Outer: UObject, ResourceName: String): FontFileImportFactory
        fun GetDefaultObject(): FontFileImportFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FontFileImportFactory
        fun C(Other: UObject): FontFileImportFactory
        fun C(Other: Any): FontFileImportFactory
    }
}

external open class TextureThumbnailRenderer : ThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TextureThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): TextureThumbnailRenderer
        fun GetDefaultObject(): TextureThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextureThumbnailRenderer
        fun C(Other: UObject): TextureThumbnailRenderer
        fun C(Other: Any): TextureThumbnailRenderer
    }
}

external open class FontThumbnailRenderer : TextureThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): FontThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): FontThumbnailRenderer
        fun GetDefaultObject(): FontThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): FontThumbnailRenderer
        fun C(Other: UObject): FontThumbnailRenderer
        fun C(Other: Any): FontThumbnailRenderer
    }
}

external open class ForceFeedbackAttenuationFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ForceFeedbackAttenuationFactory
        fun Find(Outer: UObject, ResourceName: String): ForceFeedbackAttenuationFactory
        fun GetDefaultObject(): ForceFeedbackAttenuationFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ForceFeedbackAttenuationFactory
        fun C(Other: UObject): ForceFeedbackAttenuationFactory
        fun C(Other: Any): ForceFeedbackAttenuationFactory
    }
}

external open class ForceFeedbackEffectFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ForceFeedbackEffectFactory
        fun Find(Outer: UObject, ResourceName: String): ForceFeedbackEffectFactory
        fun GetDefaultObject(): ForceFeedbackEffectFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ForceFeedbackEffectFactory
        fun C(Other: UObject): ForceFeedbackEffectFactory
        fun C(Other: Any): ForceFeedbackEffectFactory
    }
}

external open class GatherTextCommandlet : GatherTextCommandletBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GatherTextCommandlet
        fun Find(Outer: UObject, ResourceName: String): GatherTextCommandlet
        fun GetDefaultObject(): GatherTextCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GatherTextCommandlet
        fun C(Other: UObject): GatherTextCommandlet
        fun C(Other: Any): GatherTextCommandlet
    }
}

external open class GatherTextFromAssetsCommandlet : GatherTextCommandletBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GatherTextFromAssetsCommandlet
        fun Find(Outer: UObject, ResourceName: String): GatherTextFromAssetsCommandlet
        fun GetDefaultObject(): GatherTextFromAssetsCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GatherTextFromAssetsCommandlet
        fun C(Other: UObject): GatherTextFromAssetsCommandlet
        fun C(Other: Any): GatherTextFromAssetsCommandlet
    }
}

external open class GatherTextFromMetaDataCommandlet : GatherTextCommandletBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GatherTextFromMetaDataCommandlet
        fun Find(Outer: UObject, ResourceName: String): GatherTextFromMetaDataCommandlet
        fun GetDefaultObject(): GatherTextFromMetaDataCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GatherTextFromMetaDataCommandlet
        fun C(Other: UObject): GatherTextFromMetaDataCommandlet
        fun C(Other: Any): GatherTextFromMetaDataCommandlet
    }
}

external open class GatherTextFromSourceCommandlet : GatherTextCommandletBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GatherTextFromSourceCommandlet
        fun Find(Outer: UObject, ResourceName: String): GatherTextFromSourceCommandlet
        fun GetDefaultObject(): GatherTextFromSourceCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GatherTextFromSourceCommandlet
        fun C(Other: UObject): GatherTextFromSourceCommandlet
        fun C(Other: Any): GatherTextFromSourceCommandlet
    }
}

external open class GenerateAssetManifestCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GenerateAssetManifestCommandlet
        fun Find(Outer: UObject, ResourceName: String): GenerateAssetManifestCommandlet
        fun GetDefaultObject(): GenerateAssetManifestCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GenerateAssetManifestCommandlet
        fun C(Other: UObject): GenerateAssetManifestCommandlet
        fun C(Other: Any): GenerateAssetManifestCommandlet
    }
}

external open class GenerateBlueprintAPICommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GenerateBlueprintAPICommandlet
        fun Find(Outer: UObject, ResourceName: String): GenerateBlueprintAPICommandlet
        fun GetDefaultObject(): GenerateBlueprintAPICommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GenerateBlueprintAPICommandlet
        fun C(Other: UObject): GenerateBlueprintAPICommandlet
        fun C(Other: Any): GenerateBlueprintAPICommandlet
    }
}

external open class GenerateDistillFileSetsCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GenerateDistillFileSetsCommandlet
        fun Find(Outer: UObject, ResourceName: String): GenerateDistillFileSetsCommandlet
        fun GetDefaultObject(): GenerateDistillFileSetsCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GenerateDistillFileSetsCommandlet
        fun C(Other: UObject): GenerateDistillFileSetsCommandlet
        fun C(Other: Any): GenerateDistillFileSetsCommandlet
    }
}

external open class GenerateGatherArchiveCommandlet : GatherTextCommandletBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GenerateGatherArchiveCommandlet
        fun Find(Outer: UObject, ResourceName: String): GenerateGatherArchiveCommandlet
        fun GetDefaultObject(): GenerateGatherArchiveCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GenerateGatherArchiveCommandlet
        fun C(Other: UObject): GenerateGatherArchiveCommandlet
        fun C(Other: Any): GenerateGatherArchiveCommandlet
    }
}

external open class GenerateGatherManifestCommandlet : GatherTextCommandletBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GenerateGatherManifestCommandlet
        fun Find(Outer: UObject, ResourceName: String): GenerateGatherManifestCommandlet
        fun GetDefaultObject(): GenerateGatherManifestCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GenerateGatherManifestCommandlet
        fun C(Other: UObject): GenerateGatherManifestCommandlet
        fun C(Other: Any): GenerateGatherManifestCommandlet
    }
}

external open class GenerateTextLocalizationReportCommandlet : GatherTextCommandletBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GenerateTextLocalizationReportCommandlet
        fun Find(Outer: UObject, ResourceName: String): GenerateTextLocalizationReportCommandlet
        fun GetDefaultObject(): GenerateTextLocalizationReportCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GenerateTextLocalizationReportCommandlet
        fun C(Other: UObject): GenerateTextLocalizationReportCommandlet
        fun C(Other: Any): GenerateTextLocalizationReportCommandlet
    }
}

external open class GenerateTextLocalizationResourceCommandlet : GatherTextCommandletBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): GenerateTextLocalizationResourceCommandlet
        fun Find(Outer: UObject, ResourceName: String): GenerateTextLocalizationResourceCommandlet
        fun GetDefaultObject(): GenerateTextLocalizationResourceCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): GenerateTextLocalizationResourceCommandlet
        fun C(Other: UObject): GenerateTextLocalizationResourceCommandlet
        fun C(Other: Any): GenerateTextLocalizationResourceCommandlet
    }
}

external open class HapticFeedbackEffectBufferFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): HapticFeedbackEffectBufferFactory
        fun Find(Outer: UObject, ResourceName: String): HapticFeedbackEffectBufferFactory
        fun GetDefaultObject(): HapticFeedbackEffectBufferFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): HapticFeedbackEffectBufferFactory
        fun C(Other: UObject): HapticFeedbackEffectBufferFactory
        fun C(Other: Any): HapticFeedbackEffectBufferFactory
    }
}

external open class HapticFeedbackEffectCurveFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): HapticFeedbackEffectCurveFactory
        fun Find(Outer: UObject, ResourceName: String): HapticFeedbackEffectCurveFactory
        fun GetDefaultObject(): HapticFeedbackEffectCurveFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): HapticFeedbackEffectCurveFactory
        fun C(Other: UObject): HapticFeedbackEffectCurveFactory
        fun C(Other: Any): HapticFeedbackEffectCurveFactory
    }
}

external open class HapticFeedbackEffectSoundWaveFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): HapticFeedbackEffectSoundWaveFactory
        fun Find(Outer: UObject, ResourceName: String): HapticFeedbackEffectSoundWaveFactory
        fun GetDefaultObject(): HapticFeedbackEffectSoundWaveFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): HapticFeedbackEffectSoundWaveFactory
        fun C(Other: UObject): HapticFeedbackEffectSoundWaveFactory
        fun C(Other: Any): HapticFeedbackEffectSoundWaveFactory
    }
}

external open class HierarchicalLODSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var bForceSettingsInAllMaps: Boolean
    open var bSaveLODActorsToHLODPackages: Boolean
    open var DefaultSetup: Class
    open var DirectoriesForHLODCommandlet: Array<DirectoryPath>
    open var MapsToBuild: Array<FilePath>
    open var bInvalidateHLODClusters: Boolean
    open var bDeleteHLODAssets: Boolean
    open var BaseMaterial: MaterialInterface

    companion object {
        fun Load(ResourceName: String): HierarchicalLODSettings
        fun Find(Outer: UObject, ResourceName: String): HierarchicalLODSettings
        fun GetDefaultObject(): HierarchicalLODSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): HierarchicalLODSettings
        fun C(Other: UObject): HierarchicalLODSettings
        fun C(Other: Any): HierarchicalLODSettings
    }
}

external open class HierarchicalLODVolume(InWorld: World, Location: Vector = definedExternally, Rotation: Rotator = definedExternally) : Volume {
    open var bIncludeOverlappingActors: Boolean

    companion object {
        fun GetDefaultObject(): HierarchicalLODVolume
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): HierarchicalLODVolume
        fun C(Other: UObject): HierarchicalLODVolume
        fun C(Other: Any): HierarchicalLODVolume
    }
}

external open class ImportAssetsCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)
    open var GlobalImportData: AutomatedAssetImportData
    open var ImportDataList: Array<AutomatedAssetImportData>

    companion object {
        fun Load(ResourceName: String): ImportAssetsCommandlet
        fun Find(Outer: UObject, ResourceName: String): ImportAssetsCommandlet
        fun GetDefaultObject(): ImportAssetsCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ImportAssetsCommandlet
        fun C(Other: UObject): ImportAssetsCommandlet
        fun C(Other: Any): ImportAssetsCommandlet
    }
}

external open class ImportDialogueScriptCommandlet : GatherTextCommandletBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ImportDialogueScriptCommandlet
        fun Find(Outer: UObject, ResourceName: String): ImportDialogueScriptCommandlet
        fun GetDefaultObject(): ImportDialogueScriptCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ImportDialogueScriptCommandlet
        fun C(Other: UObject): ImportDialogueScriptCommandlet
        fun C(Other: Any): ImportDialogueScriptCommandlet
    }
}

external open class ImportLocalizedDialogueCommandlet : GatherTextCommandletBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ImportLocalizedDialogueCommandlet
        fun Find(Outer: UObject, ResourceName: String): ImportLocalizedDialogueCommandlet
        fun GetDefaultObject(): ImportLocalizedDialogueCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ImportLocalizedDialogueCommandlet
        fun C(Other: UObject): ImportLocalizedDialogueCommandlet
        fun C(Other: Any): ImportLocalizedDialogueCommandlet
    }
}

external open class ImportSubsystem : EditorSubsystem {
    constructor()
    constructor(Outer: UObject)
    open var OnAssetPreImport_BP: UnrealEngineMulticastDelegate<(InFactory: Factory, InClass: UnrealEngineClass, InParent: UObject, Name: String, Type: String) -> Unit>
    open var OnAssetPostImport_BP: UnrealEngineMulticastDelegate<(InFactory: Factory, InCreatedObject: UObject) -> Unit>
    open var OnAssetReimport_BP: UnrealEngineMulticastDelegate<(InCreatedObject: UObject) -> Unit>
    open var OnAssetPostLODImport_BP: UnrealEngineMulticastDelegate<(InObject: UObject, InLODIndex: Number) -> Unit>

    companion object {
        fun Load(ResourceName: String): ImportSubsystem
        fun Find(Outer: UObject, ResourceName: String): ImportSubsystem
        fun GetDefaultObject(): ImportSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ImportSubsystem
        fun C(Other: UObject): ImportSubsystem
        fun C(Other: Any): ImportSubsystem
    }
}

external open class InternationalizationConditioningCommandlet : GatherTextCommandletBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InternationalizationConditioningCommandlet
        fun Find(Outer: UObject, ResourceName: String): InternationalizationConditioningCommandlet
        fun GetDefaultObject(): InternationalizationConditioningCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InternationalizationConditioningCommandlet
        fun C(Other: UObject): InternationalizationConditioningCommandlet
        fun C(Other: Any): InternationalizationConditioningCommandlet
    }
}

external open class InternationalizationExportCommandlet : GatherTextCommandletBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InternationalizationExportCommandlet
        fun Find(Outer: UObject, ResourceName: String): InternationalizationExportCommandlet
        fun GetDefaultObject(): InternationalizationExportCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InternationalizationExportCommandlet
        fun C(Other: UObject): InternationalizationExportCommandlet
        fun C(Other: Any): InternationalizationExportCommandlet
    }
}

external open class InterpDataFactoryNew : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): InterpDataFactoryNew
        fun Find(Outer: UObject, ResourceName: String): InterpDataFactoryNew
        fun GetDefaultObject(): InterpDataFactoryNew
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): InterpDataFactoryNew
        fun C(Other: UObject): InterpDataFactoryNew
        fun C(Other: Any): InterpDataFactoryNew
    }
}

external open class IoStoreCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): IoStoreCommandlet
        fun Find(Outer: UObject, ResourceName: String): IoStoreCommandlet
        fun GetDefaultObject(): IoStoreCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): IoStoreCommandlet
        fun C(Other: UObject): IoStoreCommandlet
        fun C(Other: Any): IoStoreCommandlet
    }
}

external interface `T$635` {
    var bOutSelectionChanged: Boolean
    var bOutActorModified: Boolean
    var `$`: Boolean
}

external interface `T$636` {
    var OutLayer: Layer
    var `$`: Boolean
}

external interface `T$637` {
    var InOutActors: Array<Actor>
}

external interface `T$638` {
    var InOutActors: Array<Actor>
}

external interface `T$639` {
    var OutLayers: Array<Layer>
}

external interface `T$640` {
    var OutLayerNames: Array<String>
}

external open class LayersSubsystem : EditorSubsystem {
    constructor()
    constructor(Outer: UObject)
    open fun UpdateAllViewVisibility(LayerThatChanged: String)
    open fun UpdateAllActorsVisibility(bNotifySelectionChange: Boolean, bRedrawViewports: Boolean): Boolean
    open fun UpdateActorVisibility(Actor: Actor, bOutSelectionChanged: Boolean = definedExternally, bOutActorModified: Boolean = definedExternally, bNotifySelectionChange: Boolean = definedExternally, bRedrawViewports: Boolean = definedExternally): `T$635`
    open fun UpdateActorAllViewsVisibility(Actor: Actor)
    open fun TryGetLayer(LayerName: String, OutLayer: Layer = definedExternally): `T$636`
    open fun ToggleLayerVisibility(LayerName: String)
    open fun ToggleLayersVisibility(LayerNames: Array<String>)
    open fun SetLayerVisibility(LayerName: String, bIsVisible: Boolean)
    open fun SetLayersVisibility(LayerNames: Array<String>, bIsVisible: Boolean)
    open fun SelectActorsInLayers(LayerNames: Array<String>, bSelect: Boolean, bNotify: Boolean, bSelectEvenIfHidden: Boolean): Boolean
    open fun SelectActorsInLayer(LayerName: String, bSelect: Boolean, bNotify: Boolean, bSelectEvenIfHidden: Boolean): Boolean
    open fun RenameLayer(OriginalLayerName: String, NewLayerName: String): Boolean
    open fun RemoveSelectedActorsFromLayers(LayerNames: Array<String>): Boolean
    open fun RemoveSelectedActorsFromLayer(LayerName: String): Boolean
    open fun RemoveLevelLayerInformation(Level: Level)
    open fun RemoveActorsFromLayers(Actors: Array<Actor>, LayerNames: Array<String>, bUpdateStats: Boolean): Boolean
    open fun RemoveActorsFromLayer(Actors: Array<Actor>, LayerName: String, bUpdateStats: Boolean): Boolean
    open fun RemoveActorFromLayers(Actor: Actor, LayerNames: Array<String>, bUpdateStats: Boolean): Boolean
    open fun RemoveActorFromLayer(Actor: Actor, LayerToRemove: String, bUpdateStats: Boolean): Boolean
    open fun MakeAllLayersVisible()
    open fun IsLayer(LayerName: String): Boolean
    open fun IsActorValidForLayer(Actor: Actor): Boolean
    open fun InitializeNewActorLayers(Actor: Actor): Boolean
    open fun GetWorld(): World
    open fun GetSelectedActors(): Array<Actor>
    open fun GetLayer(LayerName: String): Layer
    open fun GetActorsFromLayers(LayerNames: Array<String>): Array<Actor>
    open fun GetActorsFromLayer(LayerName: String): Array<Actor>
    open fun EditorRefreshLayerBrowser()
    open fun EditorMapChange()
    open fun DisassociateActorFromLayers(Actor: Actor): Boolean
    open fun DeleteLayers(LayersToDelete: Array<String>)
    open fun DeleteLayer(LayerToDelete: String)
    open fun CreateLayer(LayerName: String): Layer
    open fun AppendActorsFromLayers(LayerNames: Array<String>, InOutActors: Array<Actor> = definedExternally): `T$637`
    open fun AppendActorsFromLayer(LayerName: String, InOutActors: Array<Actor> = definedExternally): `T$638`
    open fun AddSelectedActorsToLayers(LayerNames: Array<String>): Boolean
    open fun AddSelectedActorsToLayer(LayerName: String): Boolean
    open fun AddLevelLayerInformation(Level: Level)
    open fun AddAllLayersTo(OutLayers: Array<Layer> = definedExternally): `T$639`
    open fun AddAllLayerNamesTo(OutLayerNames: Array<String> = definedExternally): `T$640`
    open fun AddActorToLayers(Actor: Actor, LayerNames: Array<String>): Boolean
    open fun AddActorToLayer(Actor: Actor, LayerName: String): Boolean
    open fun AddActorsToLayers(Actors: Array<Actor>, LayerNames: Array<String>): Boolean
    open fun AddActorsToLayer(Actors: Array<Actor>, LayerName: String): Boolean

    companion object {
        fun Load(ResourceName: String): LayersSubsystem
        fun Find(Outer: UObject, ResourceName: String): LayersSubsystem
        fun GetDefaultObject(): LayersSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LayersSubsystem
        fun C(Other: UObject): LayersSubsystem
        fun C(Other: Any): LayersSubsystem
    }
}

external open class EdMode : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ToolsContext: EdModeInteractiveToolsContext
    open var SettingsClass: Class
    open var SettingsObject: UObject

    companion object {
        fun Load(ResourceName: String): EdMode
        fun Find(Outer: UObject, ResourceName: String): EdMode
        fun GetDefaultObject(): EdMode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EdMode
        fun C(Other: UObject): EdMode
        fun C(Other: Any): EdMode
    }
}

external open class LegacyEdModeWrapper : EdMode {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LegacyEdModeWrapper
        fun Find(Outer: UObject, ResourceName: String): LegacyEdModeWrapper
        fun GetDefaultObject(): LegacyEdModeWrapper
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LegacyEdModeWrapper
        fun C(Other: UObject): LegacyEdModeWrapper
        fun C(Other: Any): LegacyEdModeWrapper
    }
}

external open class LevelEditorMiscSettings : DeveloperSettings {
    constructor()
    constructor(Outer: UObject)
    open var bAutoApplyLightingEnable: Boolean
    open var bBSPAutoUpdate: Boolean
    open var bAutoMoveBSPPivotOffset: Boolean
    open var bNavigationAutoUpdate: Boolean
    open var bReplaceRespectsScale: Boolean
    open var bEnableLegacyMeshPaintMode: Boolean
    open var bAvoidRelabelOnPasteSelected: Boolean
    open var bCheckReferencesOnDelete: Boolean
    open var bAllowBackgroundAudio: Boolean
    open var bCreateNewAudioDeviceForPlayInEditor: Boolean
    open var bEnableRealTimeAudio: Boolean
    open var EditorVolumeLevel: Number
    open var bEnableEditorSounds: Boolean
    open var DefaultLevelStreamingClass: UnrealEngineClass
    open var bPromptWhenAddingToLevelBeforeCheckout: Boolean
    open var bPromptWhenAddingToLevelOutsideBounds: Boolean
    open var PercentageThresholdForPrompt: Number
    open var MinimumBoundsForCheckingSize: Vector
    open var EditorScreenshotSaveDirectory: DirectoryPath

    companion object {
        fun Load(ResourceName: String): LevelEditorMiscSettings
        fun Find(Outer: UObject, ResourceName: String): LevelEditorMiscSettings
        fun GetDefaultObject(): LevelEditorMiscSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelEditorMiscSettings
        fun C(Other: UObject): LevelEditorMiscSettings
        fun C(Other: Any): LevelEditorMiscSettings
    }
}

external open class CommonResolutionMenuContext : ToolMenuContextBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): CommonResolutionMenuContext
        fun Find(Outer: UObject, ResourceName: String): CommonResolutionMenuContext
        fun GetDefaultObject(): CommonResolutionMenuContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): CommonResolutionMenuContext
        fun C(Other: UObject): CommonResolutionMenuContext
        fun C(Other: Any): CommonResolutionMenuContext
    }
}

external object ELabelAnchorMode {
    var LabelAnchorMode_TopLeft: String /* "LabelAnchorMode_TopLeft" */
    var LabelAnchorMode_TopCenter: String /* "LabelAnchorMode_TopCenter" */
    var LabelAnchorMode_TopRight: String /* "LabelAnchorMode_TopRight" */
    var LabelAnchorMode_CenterLeft: String /* "LabelAnchorMode_CenterLeft" */
    var LabelAnchorMode_Centered: String /* "LabelAnchorMode_Centered" */
    var LabelAnchorMode_CenterRight: String /* "LabelAnchorMode_CenterRight" */
    var LabelAnchorMode_BottomLeft: String /* "LabelAnchorMode_BottomLeft" */
    var LabelAnchorMode_BottomCenter: String /* "LabelAnchorMode_BottomCenter" */
    var LabelAnchorMode_BottomRight: String /* "LabelAnchorMode_BottomRight" */
    var LabelAnchorMode_MAX: String /* "LabelAnchorMode_MAX" */
}

external object EPlayOnBuildMode {
    var PlayOnBuild_Always: String /* "PlayOnBuild_Always" */
    var PlayOnBuild_Never: String /* "PlayOnBuild_Never" */
    var PlayOnBuild_Default: String /* "PlayOnBuild_Default" */
    var PlayOnBuild_IfEditorBuiltLocally: String /* "PlayOnBuild_IfEditorBuiltLocally" */
    var PlayOnBuild_MAX: String /* "PlayOnBuild_MAX" */
}

external object EPlayOnLaunchConfiguration {
    var LaunchConfig_Default: String /* "LaunchConfig_Default" */
    var LaunchConfig_Debug: String /* "LaunchConfig_Debug" */
    var LaunchConfig_Development: String /* "LaunchConfig_Development" */
    var LaunchConfig_Test: String /* "LaunchConfig_Test" */
    var LaunchConfig_Shipping: String /* "LaunchConfig_Shipping" */
    var LaunchConfig_MAX: String /* "LaunchConfig_MAX" */
}

external object EPlayOnPakFileMode {
    var NoPak: String /* "NoPak" */
    var PakNoCompress: String /* "PakNoCompress" */
    var PakCompress: String /* "PakCompress" */
    var EPlayOnPakFileMode_MAX: String /* "EPlayOnPakFileMode_MAX" */
}

external object EPlayNetMode {
    var PIE_Standalone: String /* "PIE_Standalone" */
    var PIE_ListenServer: String /* "PIE_ListenServer" */
    var PIE_Client: String /* "PIE_Client" */
    var PIE_MAX: String /* "PIE_MAX" */
}

external object NetworkEmulationTarget {
    var Server: String /* "Server" */
    var Client: String /* "Client" */
    var Any: String /* "Any" */
    var NetworkEmulationTarget_MAX: String /* "NetworkEmulationTarget_MAX" */
}

external open class NetworkEmulationPacketSettings {
    open var MinLatency: Number
    open var MaxLatency: Number
    open var PacketLossPercentage: Number
    open fun clone(): NetworkEmulationPacketSettings

    companion object {
        fun C(Other: UObject): NetworkEmulationPacketSettings
        fun C(Other: Any): NetworkEmulationPacketSettings
    }
}

external open class LevelEditorPlayNetworkEmulationSettings {
    open var bIsNetworkEmulationEnabled: Boolean
    open var EmulationTarget: String /* "Server" | "Client" | "Any" | "NetworkEmulationTarget_MAX" */
    open var CurrentProfile: String
    open var OutPackets: NetworkEmulationPacketSettings
    open var InPackets: NetworkEmulationPacketSettings
    open fun clone(): LevelEditorPlayNetworkEmulationSettings

    companion object {
        fun C(Other: UObject): LevelEditorPlayNetworkEmulationSettings
        fun C(Other: Any): LevelEditorPlayNetworkEmulationSettings
    }
}

external object ELaunchModeType {
    var LaunchMode_OnDevice: String /* "LaunchMode_OnDevice" */
    var LaunchMode_MAX: String /* "LaunchMode_MAX" */
}

external object EPlayModeLocations {
    var PlayLocation_CurrentCameraLocation: String /* "PlayLocation_CurrentCameraLocation" */
    var PlayLocation_DefaultPlayerStart: String /* "PlayLocation_DefaultPlayerStart" */
    var PlayLocation_MAX: String /* "PlayLocation_MAX" */
}

external object EPlayModeType {
    var PlayMode_InViewPort: String /* "PlayMode_InViewPort" */
    var PlayMode_InEditorFloating: String /* "PlayMode_InEditorFloating" */
    var PlayMode_InMobilePreview: String /* "PlayMode_InMobilePreview" */
    var PlayMode_InTargetedMobilePreview: String /* "PlayMode_InTargetedMobilePreview" */
    var PlayMode_InVulkanPreview: String /* "PlayMode_InVulkanPreview" */
    var PlayMode_InNewProcess: String /* "PlayMode_InNewProcess" */
    var PlayMode_InVR: String /* "PlayMode_InVR" */
    var PlayMode_Simulate: String /* "PlayMode_Simulate" */
    var PlayMode_Count: String /* "PlayMode_Count" */
    var PlayMode_MAX: String /* "PlayMode_MAX" */
}

external open class PlayScreenResolution {
    open var Description: String
    open var Width: Number
    open var Height: Number
    open var AspectRatio: String
    open var bCanSwapAspectRatio: Boolean
    open var ProfileName: String
    open var ScaleFactor: Number
    open var LogicalHeight: Number
    open var LogicalWidth: Number
    open fun clone(): PlayScreenResolution

    companion object {
        fun C(Other: UObject): PlayScreenResolution
        fun C(Other: Any): PlayScreenResolution
    }
}

external open class LevelEditorPlaySettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var PlayFromHerePlayerStartClassName: String
    open var GameGetsMouseControl: Boolean
    open var UseMouseForTouch: Boolean
    open var ShowMouseControlLabel: Boolean
    open var MouseControlLabelPosition: String /* "LabelAnchorMode_TopLeft" | "LabelAnchorMode_TopCenter" | "LabelAnchorMode_TopRight" | "LabelAnchorMode_CenterLeft" | "LabelAnchorMode_Centered" | "LabelAnchorMode_CenterRight" | "LabelAnchorMode_BottomLeft" | "LabelAnchorMode_BottomCenter" | "LabelAnchorMode_BottomRight" | "LabelAnchorMode_MAX" */
    open var ViewportGetsHMDControl: Boolean
    open var ShouldMinimizeEditorOnVRPIE: Boolean
    open var AutoRecompileBlueprints: Boolean
    open var EnableGameSound: Boolean
    open var EnablePIEEnterAndExitSounds: Boolean
    open var PlayInEditorSoundQualityLevel: Number
    open var bUseNonRealtimeAudioDevice: Boolean
    open var bOnlyLoadVisibleLevelsInPIE: Boolean
    open var bPreferToStreamLevelsInPIE: Boolean
    open var NewWindowWidth: Number
    open var NewWindowHeight: Number
    open var NewWindowPosition: IntPoint
    open var CenterNewWindow: Boolean
    open var PIEAlwaysOnTop: Boolean
    open var DisableStandaloneSound: Boolean
    open var AdditionalLaunchParameters: String
    open var AdditionalLaunchParametersForMobile: String
    open var BuildGameBeforeLaunch: String /* "PlayOnBuild_Always" | "PlayOnBuild_Never" | "PlayOnBuild_Default" | "PlayOnBuild_IfEditorBuiltLocally" | "PlayOnBuild_MAX" */
    open var LaunchConfiguration: String /* "LaunchConfig_Default" | "LaunchConfig_Debug" | "LaunchConfig_Development" | "LaunchConfig_Test" | "LaunchConfig_Shipping" | "LaunchConfig_MAX" */
    open var PackFilesForLaunch: String /* "NoPak" | "PakNoCompress" | "PakCompress" | "EPlayOnPakFileMode_MAX" */
    open var bAutoCompileBlueprintsOnLaunch: Boolean
    open var bLaunchSeparateServer: Boolean
    open var PlayNetMode: String /* "PIE_Standalone" | "PIE_ListenServer" | "PIE_Client" | "PIE_MAX" */
    open var RunUnderOneProcess: Boolean
    open var PlayNetDedicated: Boolean
    open var PlayNumberOfClients: Number
    open var ServerPort: Any
    open var ClientWindowWidth: Number
    open var AutoConnectToServer: Boolean
    open var RouteGamepadToSecondWindow: Boolean
    open var CreateAudioDeviceForEveryPlayer: Boolean
    open var ClientWindowHeight: Number
    open var ServerMapNameOverride: String
    open var AdditionalServerGameOptions: String
    open var AdditionalLaunchOptions: String
    open var bShowServerDebugDrawingByDefault: Boolean
    open var ServerDebugDrawingColorTintStrength: Number
    open var ServerDebugDrawingColorTint: LinearColor
    open var AdditionalServerLaunchParameters: String
    open var ServerFixedFPS: Number
    open var ClientFixedFPS: Array<Number>
    open var NetworkEmulationSettings: LevelEditorPlayNetworkEmulationSettings
    open var LastSize: IntPoint
    open var MultipleInstancePositions: Array<IntPoint>
    open var LastExecutedLaunchDevice: String
    open var LastExecutedLaunchName: String
    open var LastExecutedLaunchModeType: String /* "LaunchMode_OnDevice" | "LaunchMode_MAX" */
    open var LastExecutedPlayModeLocation: String /* "PlayLocation_CurrentCameraLocation" | "PlayLocation_DefaultPlayerStart" | "PlayLocation_MAX" */
    open var LastExecutedPlayModeType: String /* "PlayMode_InViewPort" | "PlayMode_InEditorFloating" | "PlayMode_InMobilePreview" | "PlayMode_InTargetedMobilePreview" | "PlayMode_InVulkanPreview" | "PlayMode_InNewProcess" | "PlayMode_InVR" | "PlayMode_Simulate" | "PlayMode_Count" | "PlayMode_MAX" */
    open var LastExecutedPIEPreviewDevice: String
    open var LaptopScreenResolutions: Array<PlayScreenResolution>
    open var MonitorScreenResolutions: Array<PlayScreenResolution>
    open var PhoneScreenResolutions: Array<PlayScreenResolution>
    open var TabletScreenResolutions: Array<PlayScreenResolution>
    open var TelevisionScreenResolutions: Array<PlayScreenResolution>
    open var DeviceToEmulate: String
    open var PIESafeZoneOverride: Margin
    open var CustomUnsafeZoneStarts: Array<Vector2D>
    open var CustomUnsafeZoneDimensions: Array<Vector2D>

    companion object {
        fun Load(ResourceName: String): LevelEditorPlaySettings
        fun Find(Outer: UObject, ResourceName: String): LevelEditorPlaySettings
        fun GetDefaultObject(): LevelEditorPlaySettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelEditorPlaySettings
        fun C(Other: UObject): LevelEditorPlaySettings
        fun C(Other: Any): LevelEditorPlaySettings
    }
}

external object EWASDType {
    var WASD_Always: String /* "WASD_Always" */
    var WASD_RMBOnly: String /* "WASD_RMBOnly" */
    var WASD_Never: String /* "WASD_Never" */
    var WASD_MAX: String /* "WASD_MAX" */
}

external object ELandscapeFoliageEditorControlType {
    var IgnoreCtrl: String /* "IgnoreCtrl" */
    var RequireCtrl: String /* "RequireCtrl" */
    var RequireNoCtrl: String /* "RequireNoCtrl" */
    var ELandscapeFoliageEditorControlType_MAX: String /* "ELandscapeFoliageEditorControlType_MAX" */
}

external object EScrollGestureDirection {
    var UseSystemSetting: String /* "UseSystemSetting" */
    var Standard: String /* "Standard" */
    var Natural: String /* "Natural" */
    var EScrollGestureDirection_MAX: String /* "EScrollGestureDirection_MAX" */
}

external open class SnapToSurfaceSettings {
    open var bEnabled: Boolean
    open var SnapOffsetExtent: Number
    open var bSnapRotation: Boolean
    open fun clone(): SnapToSurfaceSettings

    companion object {
        fun C(Other: UObject): SnapToSurfaceSettings
        fun C(Other: Any): SnapToSurfaceSettings
    }
}

external object ERotationGridMode {
    var GridMode_DivisionsOf360: String /* "GridMode_DivisionsOf360" */
    var GridMode_Common: String /* "GridMode_Common" */
    var GridMode_MAX: String /* "GridMode_MAX" */
}

external object EMeasuringToolUnits {
    var MeasureUnits_Centimeters: String /* "MeasureUnits_Centimeters" */
    var MeasureUnits_Meters: String /* "MeasureUnits_Meters" */
    var MeasureUnits_Kilometers: String /* "MeasureUnits_Kilometers" */
    var MeasureUnits_MAX: String /* "MeasureUnits_MAX" */
}

external object ELevelViewportType {
    var LVT_OrthoXY: String /* "LVT_OrthoXY" */
    var LVT_OrthoXZ: String /* "LVT_OrthoXZ" */
    var LVT_OrthoYZ: String /* "LVT_OrthoYZ" */
    var LVT_Perspective: String /* "LVT_Perspective" */
    var LVT_OrthoFreelook: String /* "LVT_OrthoFreelook" */
    var LVT_OrthoNegativeXY: String /* "LVT_OrthoNegativeXY" */
    var LVT_OrthoNegativeXZ: String /* "LVT_OrthoNegativeXZ" */
    var LVT_OrthoNegativeYZ: String /* "LVT_OrthoNegativeYZ" */
    var LVT_MAX: String /* "LVT_MAX" */
    var LVT_None: String /* "LVT_None" */
}

external object EViewModeIndex {
    var VMI_BrushWireframe: String /* "VMI_BrushWireframe" */
    var VMI_Wireframe: String /* "VMI_Wireframe" */
    var VMI_Unlit: String /* "VMI_Unlit" */
    var VMI_Lit: String /* "VMI_Lit" */
    var VMI_Lit_DetailLighting: String /* "VMI_Lit_DetailLighting" */
    var VMI_LightingOnly: String /* "VMI_LightingOnly" */
    var VMI_LightComplexity: String /* "VMI_LightComplexity" */
    var VMI_ShaderComplexity: String /* "VMI_ShaderComplexity" */
    var VMI_LightmapDensity: String /* "VMI_LightmapDensity" */
    var VMI_LitLightmapDensity: String /* "VMI_LitLightmapDensity" */
    var VMI_ReflectionOverride: String /* "VMI_ReflectionOverride" */
    var VMI_VisualizeBuffer: String /* "VMI_VisualizeBuffer" */
    var VMI_StationaryLightOverlap: String /* "VMI_StationaryLightOverlap" */
    var VMI_CollisionPawn: String /* "VMI_CollisionPawn" */
    var VMI_CollisionVisibility: String /* "VMI_CollisionVisibility" */
    var VMI_LODColoration: String /* "VMI_LODColoration" */
    var VMI_QuadOverdraw: String /* "VMI_QuadOverdraw" */
    var VMI_PrimitiveDistanceAccuracy: String /* "VMI_PrimitiveDistanceAccuracy" */
    var VMI_MeshUVDensityAccuracy: String /* "VMI_MeshUVDensityAccuracy" */
    var VMI_ShaderComplexityWithQuadOverdraw: String /* "VMI_ShaderComplexityWithQuadOverdraw" */
    var VMI_HLODColoration: String /* "VMI_HLODColoration" */
    var VMI_GroupLODColoration: String /* "VMI_GroupLODColoration" */
    var VMI_MaterialTextureScaleAccuracy: String /* "VMI_MaterialTextureScaleAccuracy" */
    var VMI_RequiredTextureResolution: String /* "VMI_RequiredTextureResolution" */
    var VMI_PathTracing: String /* "VMI_PathTracing" */
    var VMI_RayTracingDebug: String /* "VMI_RayTracingDebug" */
    var VMI_Max: String /* "VMI_Max" */
    var VMI_Unknown: String /* "VMI_Unknown" */
}

external open class ExposureSettings {
    open var FixedEV100: Number
    open var bFixed: Boolean
    open fun clone(): ExposureSettings

    companion object {
        fun C(Other: UObject): ExposureSettings
        fun C(Other: Any): ExposureSettings
    }
}

external open class LevelEditorViewportInstanceSettings {
    open var ViewportType: String /* "LVT_OrthoXY" | "LVT_OrthoXZ" | "LVT_OrthoYZ" | "LVT_Perspective" | "LVT_OrthoFreelook" | "LVT_OrthoNegativeXY" | "LVT_OrthoNegativeXZ" | "LVT_OrthoNegativeYZ" | "LVT_MAX" | "LVT_None" */
    open var PerspViewModeIndex: String /* "VMI_BrushWireframe" | "VMI_Wireframe" | "VMI_Unlit" | "VMI_Lit" | "VMI_Lit_DetailLighting" | "VMI_LightingOnly" | "VMI_LightComplexity" | "VMI_ShaderComplexity" | "VMI_LightmapDensity" | "VMI_LitLightmapDensity" | "VMI_ReflectionOverride" | "VMI_VisualizeBuffer" | "VMI_StationaryLightOverlap" | "VMI_CollisionPawn" | "VMI_CollisionVisibility" | "VMI_LODColoration" | "VMI_QuadOverdraw" | "VMI_PrimitiveDistanceAccuracy" | "VMI_MeshUVDensityAccuracy" | "VMI_ShaderComplexityWithQuadOverdraw" | "VMI_HLODColoration" | "VMI_GroupLODColoration" | "VMI_MaterialTextureScaleAccuracy" | "VMI_RequiredTextureResolution" | "VMI_PathTracing" | "VMI_RayTracingDebug" | "VMI_Max" | "VMI_Unknown" */
    open var OrthoViewModeIndex: String /* "VMI_BrushWireframe" | "VMI_Wireframe" | "VMI_Unlit" | "VMI_Lit" | "VMI_Lit_DetailLighting" | "VMI_LightingOnly" | "VMI_LightComplexity" | "VMI_ShaderComplexity" | "VMI_LightmapDensity" | "VMI_LitLightmapDensity" | "VMI_ReflectionOverride" | "VMI_VisualizeBuffer" | "VMI_StationaryLightOverlap" | "VMI_CollisionPawn" | "VMI_CollisionVisibility" | "VMI_LODColoration" | "VMI_QuadOverdraw" | "VMI_PrimitiveDistanceAccuracy" | "VMI_MeshUVDensityAccuracy" | "VMI_ShaderComplexityWithQuadOverdraw" | "VMI_HLODColoration" | "VMI_GroupLODColoration" | "VMI_MaterialTextureScaleAccuracy" | "VMI_RequiredTextureResolution" | "VMI_PathTracing" | "VMI_RayTracingDebug" | "VMI_Max" | "VMI_Unknown" */
    open var EditorShowFlagsString: String
    open var GameShowFlagsString: String
    open var BufferVisualizationMode: String
    open var RayTracingDebugVisualizationMode: String
    open var ExposureSettings: ExposureSettings
    open var FOVAngle: Number
    open var FarViewPlane: Number
    open var bIsRealtime: Boolean
    open var bShowFPS: Boolean
    open var bShowOnScreenStats: Boolean
    open var EnabledStats: Array<String>
    open var bShowFullToolbar: Boolean
    open fun clone(): LevelEditorViewportInstanceSettings

    companion object {
        fun C(Other: UObject): LevelEditorViewportInstanceSettings
        fun C(Other: Any): LevelEditorViewportInstanceSettings
    }
}

external open class LevelEditorViewportInstanceSettingsKeyValuePair {
    open var ConfigName: String
    open var ConfigSettings: LevelEditorViewportInstanceSettings
    open fun clone(): LevelEditorViewportInstanceSettingsKeyValuePair

    companion object {
        fun C(Other: UObject): LevelEditorViewportInstanceSettingsKeyValuePair
        fun C(Other: Any): LevelEditorViewportInstanceSettingsKeyValuePair
    }
}

external open class LevelEditorViewportSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var FlightCameraControlType: String /* "WASD_Always" | "WASD_RMBOnly" | "WASD_Never" | "WASD_MAX" */
    open var FlightCameraControlExperimentalNavigation: Boolean
    open var LandscapeEditorControlType: String /* "IgnoreCtrl" | "RequireCtrl" | "RequireNoCtrl" | "ELandscapeFoliageEditorControlType_MAX" */
    open var FoliageEditorControlType: String /* "IgnoreCtrl" | "RequireCtrl" | "RequireNoCtrl" | "ELandscapeFoliageEditorControlType_MAX" */
    open var bPanMovesCanvas: Boolean
    open var bCenterZoomAroundCursor: Boolean
    open var MinimumOrthographicZoom: Number
    open var bAllowTranslateRotateZWidget: Boolean
    open var bAllowArcballRotate: Boolean
    open var bAllowScreenRotate: Boolean
    open var bClickBSPSelectsBrush: Boolean
    open var CameraSpeed: Number
    open var CameraSpeedScalar: Number
    open var MouseScrollCameraSpeed: Number
    open var MouseSensitivty: Number
    open var bInvertMouseLookYAxis: Boolean
    open var bInvertOrbitYAxis: Boolean
    open var bInvertMiddleMousePan: Boolean
    open var bInvertRightMouseDollyYAxis: Boolean
    open var bUseAbsoluteTranslation: Boolean
    open var bLevelStreamingVolumePrevis: Boolean
    open var bUseUE3OrbitControls: Boolean
    open var ScrollGestureDirectionFor3DViewports: String /* "UseSystemSetting" | "Standard" | "Natural" | "EScrollGestureDirection_MAX" */
    open var ScrollGestureDirectionForOrthoViewports: String /* "UseSystemSetting" | "Standard" | "Natural" | "EScrollGestureDirection_MAX" */
    open var bLevelEditorJoystickControls: Boolean
    open var bUseDistanceScaledCameraSpeed: Boolean
    open var bOrbitCameraAroundSelection: Boolean
    open var bUsePowerOf2SnapSize: Boolean
    open var DecimalGridSizes: Array<Number>
    open var DecimalGridIntervals: Array<Number>
    open var Pow2GridSizes: Array<Number>
    open var Pow2GridIntervals: Array<Number>
    open var CommonRotGridSizes: Array<Number>
    open var DivisionsOf360RotGridSizes: Array<Number>
    open var ScalingGridSizes: Array<Number>
    open var GridEnabled: Boolean
    open var RotGridEnabled: Boolean
    open var SnapScaleEnabled: Boolean
    open var SnapToSurface: SnapToSurfaceSettings
    open var bUsePercentageBasedScaling: Boolean
    open var bEnableLayerSnap: Boolean
    open var ActiveSnapLayerIndex: Number
    open var bEnableActorSnap: Boolean
    open var ActorSnapScale: Number
    open var ActorSnapDistance: Number
    open var bSnapVertices: Boolean
    open var SnapDistance: Number
    open var CurrentPosGridSize: Number
    open var CurrentRotGridSize: Number
    open var CurrentScalingGridSize: Number
    open var PreserveNonUniformScale: Boolean
    open var CurrentRotGridMode: String /* "GridMode_DivisionsOf360" | "GridMode_Common" | "GridMode_MAX" */
    open var bUseLegacyPostEditBehavior: Boolean
    open var AspectRatioAxisConstraint: String /* "AspectRatio_MaintainYFOV" | "AspectRatio_MaintainXFOV" | "AspectRatio_MajorAxisFOV" | "AspectRatio_MAX" */
    open var bEnableViewportHoverFeedback: Boolean
    open var bHighlightWithBrackets: Boolean
    open var bUseLinkedOrthographicViewports: Boolean
    open var bStrictBoxSelection: Boolean
    open var bTransparentBoxSelection: Boolean
    open var bUseSelectionOutline: Boolean
    open var SelectionHighlightIntensity: Number
    open var BSPSelectionHighlightIntensity: Number
    open var bEnableViewportCameraToUpdateFromPIV: Boolean
    open var bPreviewSelectedCameras: Boolean
    open var CameraPreviewSize: Number
    open var BackgroundDropDistance: Number
    open var PreviewMeshes: Array<SoftObjectPath>
    open var BillboardScale: Number
    open var TransformWidgetSizeAdjustment: Number
    open var bSaveEngineStats: Boolean
    open var MeasuringToolUnits: String /* "MeasureUnits_Centimeters" | "MeasureUnits_Meters" | "MeasureUnits_Kilometers" | "MeasureUnits_MAX" */
    open var SelectedSplinePointSizeAdjustment: Number
    open var SplineLineThicknessAdjustment: Number
    open var SplineTangentHandleSizeAdjustment: Number
    open var SplineTangentScale: Number
    open var PerInstanceSettings: Array<LevelEditorViewportInstanceSettingsKeyValuePair>

    companion object {
        fun Load(ResourceName: String): LevelEditorViewportSettings
        fun Find(Outer: UObject, ResourceName: String): LevelEditorViewportSettings
        fun GetDefaultObject(): LevelEditorViewportSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelEditorViewportSettings
        fun C(Other: UObject): LevelEditorViewportSettings
        fun C(Other: Any): LevelEditorViewportSettings
    }
}

external open class LevelExporterFBX : ExporterFBX {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LevelExporterFBX
        fun Find(Outer: UObject, ResourceName: String): LevelExporterFBX
        fun GetDefaultObject(): LevelExporterFBX
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelExporterFBX
        fun C(Other: UObject): LevelExporterFBX
        fun C(Other: Any): LevelExporterFBX
    }
}

external open class LevelExporterLOD : Exporter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LevelExporterLOD
        fun Find(Outer: UObject, ResourceName: String): LevelExporterLOD
        fun GetDefaultObject(): LevelExporterLOD
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelExporterLOD
        fun C(Other: UObject): LevelExporterLOD
        fun C(Other: Any): LevelExporterLOD
    }
}

external open class LevelExporterOBJ : Exporter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LevelExporterOBJ
        fun Find(Outer: UObject, ResourceName: String): LevelExporterOBJ
        fun GetDefaultObject(): LevelExporterOBJ
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelExporterOBJ
        fun C(Other: UObject): LevelExporterOBJ
        fun C(Other: Any): LevelExporterOBJ
    }
}

external open class LevelExporterSTL : Exporter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LevelExporterSTL
        fun Find(Outer: UObject, ResourceName: String): LevelExporterSTL
        fun GetDefaultObject(): LevelExporterSTL
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelExporterSTL
        fun C(Other: UObject): LevelExporterSTL
        fun C(Other: Any): LevelExporterSTL
    }
}

external open class LevelExporterT3D : Exporter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LevelExporterT3D
        fun Find(Outer: UObject, ResourceName: String): LevelExporterT3D
        fun GetDefaultObject(): LevelExporterT3D
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelExporterT3D
        fun C(Other: UObject): LevelExporterT3D
        fun C(Other: Any): LevelExporterT3D
    }
}

external open class LevelFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LevelFactory
        fun Find(Outer: UObject, ResourceName: String): LevelFactory
        fun GetDefaultObject(): LevelFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelFactory
        fun C(Other: UObject): LevelFactory
        fun C(Other: Any): LevelFactory
    }
}

external open class LevelThumbnailRenderer : DefaultSizedThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LevelThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): LevelThumbnailRenderer
        fun GetDefaultObject(): LevelThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LevelThumbnailRenderer
        fun C(Other: UObject): LevelThumbnailRenderer
        fun C(Other: Any): LevelThumbnailRenderer
    }
}

external open class LightmassDebugOptions {
    open var bDebugMode: Boolean
    open var bStatsEnabled: Boolean
    open var bGatherBSPSurfacesAcrossComponents: Boolean
    open var CoplanarTolerance: Number
    open var bUseImmediateImport: Boolean
    open var bImmediateProcessMappings: Boolean
    open var bSortMappings: Boolean
    open var bDumpBinaryFiles: Boolean
    open var bDebugMaterials: Boolean
    open var bPadMappings: Boolean
    open var bDebugPaddings: Boolean
    open var bOnlyCalcDebugTexelMappings: Boolean
    open var bUseRandomColors: Boolean
    open var bColorBordersGreen: Boolean
    open var bColorByExecutionTime: Boolean
    open var ExecutionTimeDivisor: Number
    open fun clone(): LightmassDebugOptions

    companion object {
        fun C(Other: UObject): LightmassDebugOptions
        fun C(Other: Any): LightmassDebugOptions
    }
}

external open class SwarmDebugOptions {
    open var bDistributionEnabled: Boolean
    open var bForceContentExport: Boolean
    open var bInitialized: Boolean
    open fun clone(): SwarmDebugOptions

    companion object {
        fun C(Other: UObject): SwarmDebugOptions
        fun C(Other: Any): SwarmDebugOptions
    }
}

external open class LightmassOptionsObject : UObject {
    constructor()
    constructor(Outer: UObject)
    open var DebugSettings: LightmassDebugOptions
    open var SwarmSettings: SwarmDebugOptions

    companion object {
        fun Load(ResourceName: String): LightmassOptionsObject
        fun Find(Outer: UObject, ResourceName: String): LightmassOptionsObject
        fun GetDefaultObject(): LightmassOptionsObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LightmassOptionsObject
        fun C(Other: UObject): LightmassOptionsObject
        fun C(Other: Any): LightmassOptionsObject
    }
}

external open class LinearStairBuilder : EditorBrushBuilder {
    constructor()
    constructor(Outer: UObject)
    open var StepLength: Number
    open var StepHeight: Number
    open var StepWidth: Number
    open var NumSteps: Number
    open var AddToFirstStep: Number
    open var GroupName: String

    companion object {
        fun Load(ResourceName: String): LinearStairBuilder
        fun Find(Outer: UObject, ResourceName: String): LinearStairBuilder
        fun GetDefaultObject(): LinearStairBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LinearStairBuilder
        fun C(Other: UObject): LinearStairBuilder
        fun C(Other: Any): LinearStairBuilder
    }
}

external open class ListMaterialsUsedWithMeshEmittersCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ListMaterialsUsedWithMeshEmittersCommandlet
        fun Find(Outer: UObject, ResourceName: String): ListMaterialsUsedWithMeshEmittersCommandlet
        fun GetDefaultObject(): ListMaterialsUsedWithMeshEmittersCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ListMaterialsUsedWithMeshEmittersCommandlet
        fun C(Other: UObject): ListMaterialsUsedWithMeshEmittersCommandlet
        fun C(Other: Any): ListMaterialsUsedWithMeshEmittersCommandlet
    }
}

external open class ListStaticMeshesImportedFromSpeedTreesCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ListStaticMeshesImportedFromSpeedTreesCommandlet
        fun Find(Outer: UObject, ResourceName: String): ListStaticMeshesImportedFromSpeedTreesCommandlet
        fun GetDefaultObject(): ListStaticMeshesImportedFromSpeedTreesCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ListStaticMeshesImportedFromSpeedTreesCommandlet
        fun C(Other: UObject): ListStaticMeshesImportedFromSpeedTreesCommandlet
        fun C(Other: Any): ListStaticMeshesImportedFromSpeedTreesCommandlet
    }
}

external open class LoadPackageCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): LoadPackageCommandlet
        fun Find(Outer: UObject, ResourceName: String): LoadPackageCommandlet
        fun GetDefaultObject(): LoadPackageCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): LoadPackageCommandlet
        fun C(Other: UObject): LoadPackageCommandlet
        fun C(Other: Any): LoadPackageCommandlet
    }
}

external open class MakeBinaryConfigCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MakeBinaryConfigCommandlet
        fun Find(Outer: UObject, ResourceName: String): MakeBinaryConfigCommandlet
        fun GetDefaultObject(): MakeBinaryConfigCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MakeBinaryConfigCommandlet
        fun C(Other: UObject): MakeBinaryConfigCommandlet
        fun C(Other: Any): MakeBinaryConfigCommandlet
    }
}

external open class EditorParameterGroup {
    open var GroupName: String
    open var GroupAssociation: String /* "LayerParameter" | "BlendParameter" | "GlobalParameter" | "EMaterialParameterAssociation_MAX" */
    open var Parameters: Array<DEditorParameterValue>
    open var GroupSortPriority: Number
    open fun clone(): EditorParameterGroup

    companion object {
        fun C(Other: UObject): EditorParameterGroup
        fun C(Other: Any): EditorParameterGroup
    }
}

external open class MaterialFunctionInstance : MaterialFunctionInterface {
    constructor()
    constructor(Outer: UObject)
    open var Parent: MaterialFunctionInterface
    open var Base: MaterialFunctionInterface
    open var ScalarParameterValues: Array<ScalarParameterValue>
    open var VectorParameterValues: Array<VectorParameterValue>
    open var TextureParameterValues: Array<TextureParameterValue>
    open var FontParameterValues: Array<FontParameterValue>
    open var StaticSwitchParameterValues: Array<StaticSwitchParameter>
    open var StaticComponentMaskParameterValues: Array<StaticComponentMaskParameter>
    open var RuntimeVirtualTextureParameterValues: Array<RuntimeVirtualTextureParameterValue>
    open var PreviewMaterial: MaterialInstanceConstant

    companion object {
        fun Load(ResourceName: String): MaterialFunctionInstance
        fun Find(Outer: UObject, ResourceName: String): MaterialFunctionInstance
        fun GetDefaultObject(): MaterialFunctionInstance
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialFunctionInstance
        fun C(Other: UObject): MaterialFunctionInstance
        fun C(Other: Any): MaterialFunctionInstance
    }
}

external open class LightmassParameterValue {
    open var bOverride: Boolean
    open fun clone(): LightmassParameterValue

    companion object {
        fun C(Other: UObject): LightmassParameterValue
        fun C(Other: Any): LightmassParameterValue
    }
}

external open class LightmassBooleanParameterValue : LightmassParameterValue {
    open var ParameterValue: Boolean
    override fun clone(): LightmassBooleanParameterValue

    companion object {
        fun C(Other: UObject): LightmassBooleanParameterValue
        fun C(Other: Any): LightmassBooleanParameterValue
    }
}

external open class LightmassScalarParameterValue : LightmassParameterValue {
    open var ParameterValue: Number
    override fun clone(): LightmassScalarParameterValue

    companion object {
        fun C(Other: UObject): LightmassScalarParameterValue
        fun C(Other: Any): LightmassScalarParameterValue
    }
}

external open class LightmassParameterizedMaterialSettings {
    open var CastShadowAsMasked: LightmassBooleanParameterValue
    open var EmissiveBoost: LightmassScalarParameterValue
    open var DiffuseBoost: LightmassScalarParameterValue
    open var ExportResolutionScale: LightmassScalarParameterValue
    open fun clone(): LightmassParameterizedMaterialSettings

    companion object {
        fun C(Other: UObject): LightmassParameterizedMaterialSettings
        fun C(Other: Any): LightmassParameterizedMaterialSettings
    }
}

external open class MaterialEditorInstanceConstant : UObject {
    constructor()
    constructor(Outer: UObject)
    open var PhysMaterial: PhysicalMaterial
    open var Parent: MaterialInterface
    open var ParameterGroups: Array<EditorParameterGroup>
    open var RefractionDepthBias: Number
    open var SubsurfaceProfile: SubsurfaceProfile
    open var bOverrideSubsurfaceProfile: Boolean
    open var bOverrideBaseProperties: Boolean
    open var bIsFunctionPreviewMaterial: Boolean
    open var bIsFunctionInstanceDirty: Boolean
    open var BasePropertyOverrides: MaterialInstanceBasePropertyOverrides
    open var SourceInstance: MaterialInstanceConstant
    open var SourceFunction: MaterialFunctionInstance
    open var VisibleExpressions: Array<MaterialParameterInfo>
    open var LightmassSettings: LightmassParameterizedMaterialSettings
    open var bUseOldStyleMICEditorGroups: Boolean
    open var StoredLayerPreviews: Array<MaterialInstanceConstant>
    open var StoredBlendPreviews: Array<MaterialInstanceConstant>

    companion object {
        fun Load(ResourceName: String): MaterialEditorInstanceConstant
        fun Find(Outer: UObject, ResourceName: String): MaterialEditorInstanceConstant
        fun GetDefaultObject(): MaterialEditorInstanceConstant
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialEditorInstanceConstant
        fun C(Other: UObject): MaterialEditorInstanceConstant
        fun C(Other: Any): MaterialEditorInstanceConstant
    }
}

external open class MaterialEditorMeshComponent : StaticMeshComponent {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialEditorMeshComponent
        fun Find(Outer: UObject, ResourceName: String): MaterialEditorMeshComponent
        fun GetDefaultObject(): MaterialEditorMeshComponent
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialEditorMeshComponent
        fun C(Other: UObject): MaterialEditorMeshComponent
        fun C(Other: Any): MaterialEditorMeshComponent
    }
}

external open class MaterialEditorOptions : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bShowGrid: Boolean
    open var bHideUnusedConnectors: Boolean
    open var bRealtimeMaterialViewport: Boolean
    open var bRealtimeExpressionViewport: Boolean
    open var bLivePreviewUpdate: Boolean
    open var bHideUnrelatedNodes: Boolean
    open var bAlwaysRefreshAllPreviews: Boolean
    open var bUseUnsortedMenus: Boolean
    open var FavoriteExpressions: Array<String>

    companion object {
        fun Load(ResourceName: String): MaterialEditorOptions
        fun Find(Outer: UObject, ResourceName: String): MaterialEditorOptions
        fun GetDefaultObject(): MaterialEditorOptions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialEditorOptions
        fun C(Other: UObject): MaterialEditorOptions
        fun C(Other: Any): MaterialEditorOptions
    }
}

external open class MaterialEditorPreviewParameters : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ParameterGroups: Array<EditorParameterGroup>
    open var PreviewMaterial: Material
    open var OriginalFunction: MaterialFunction
    open var OriginalMaterial: Material
    open var StoredLayerPreviews: Array<MaterialInstanceConstant>
    open var StoredBlendPreviews: Array<MaterialInstanceConstant>

    companion object {
        fun Load(ResourceName: String): MaterialEditorPreviewParameters
        fun Find(Outer: UObject, ResourceName: String): MaterialEditorPreviewParameters
        fun GetDefaultObject(): MaterialEditorPreviewParameters
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialEditorPreviewParameters
        fun C(Other: UObject): MaterialEditorPreviewParameters
        fun C(Other: Any): MaterialEditorPreviewParameters
    }
}

external open class MaterialFactoryNew : Factory {
    constructor()
    constructor(Outer: UObject)
    open var InitialTexture: Texture

    companion object {
        fun Load(ResourceName: String): MaterialFactoryNew
        fun Find(Outer: UObject, ResourceName: String): MaterialFactoryNew
        fun GetDefaultObject(): MaterialFactoryNew
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialFactoryNew
        fun C(Other: UObject): MaterialFactoryNew
        fun C(Other: Any): MaterialFactoryNew
    }
}

external open class MaterialFunctionFactoryNew : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialFunctionFactoryNew
        fun Find(Outer: UObject, ResourceName: String): MaterialFunctionFactoryNew
        fun GetDefaultObject(): MaterialFunctionFactoryNew
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialFunctionFactoryNew
        fun C(Other: UObject): MaterialFunctionFactoryNew
        fun C(Other: Any): MaterialFunctionFactoryNew
    }
}

external open class MaterialFunctionInstanceFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var InitialParent: MaterialFunctionInterface

    companion object {
        fun Load(ResourceName: String): MaterialFunctionInstanceFactory
        fun Find(Outer: UObject, ResourceName: String): MaterialFunctionInstanceFactory
        fun GetDefaultObject(): MaterialFunctionInstanceFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialFunctionInstanceFactory
        fun C(Other: UObject): MaterialFunctionInstanceFactory
        fun C(Other: Any): MaterialFunctionInstanceFactory
    }
}

external open class MaterialFunctionMaterialLayerInstanceFactory : MaterialFunctionInstanceFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialFunctionMaterialLayerInstanceFactory
        fun Find(Outer: UObject, ResourceName: String): MaterialFunctionMaterialLayerInstanceFactory
        fun GetDefaultObject(): MaterialFunctionMaterialLayerInstanceFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialFunctionMaterialLayerInstanceFactory
        fun C(Other: UObject): MaterialFunctionMaterialLayerInstanceFactory
        fun C(Other: Any): MaterialFunctionMaterialLayerInstanceFactory
    }
}

external open class MaterialFunctionMaterialLayerBlendInstanceFactory : MaterialFunctionInstanceFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialFunctionMaterialLayerBlendInstanceFactory
        fun Find(Outer: UObject, ResourceName: String): MaterialFunctionMaterialLayerBlendInstanceFactory
        fun GetDefaultObject(): MaterialFunctionMaterialLayerBlendInstanceFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialFunctionMaterialLayerBlendInstanceFactory
        fun C(Other: UObject): MaterialFunctionMaterialLayerBlendInstanceFactory
        fun C(Other: Any): MaterialFunctionMaterialLayerBlendInstanceFactory
    }
}

external open class MaterialFunctionMaterialLayerBlendFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialFunctionMaterialLayerBlendFactory
        fun Find(Outer: UObject, ResourceName: String): MaterialFunctionMaterialLayerBlendFactory
        fun GetDefaultObject(): MaterialFunctionMaterialLayerBlendFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialFunctionMaterialLayerBlendFactory
        fun C(Other: UObject): MaterialFunctionMaterialLayerBlendFactory
        fun C(Other: Any): MaterialFunctionMaterialLayerBlendFactory
    }
}

external open class MaterialFunctionMaterialLayerFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialFunctionMaterialLayerFactory
        fun Find(Outer: UObject, ResourceName: String): MaterialFunctionMaterialLayerFactory
        fun GetDefaultObject(): MaterialFunctionMaterialLayerFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialFunctionMaterialLayerFactory
        fun C(Other: UObject): MaterialFunctionMaterialLayerFactory
        fun C(Other: Any): MaterialFunctionMaterialLayerFactory
    }
}

external open class MaterialFunctionThumbnailRenderer : DefaultSizedThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialFunctionThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): MaterialFunctionThumbnailRenderer
        fun GetDefaultObject(): MaterialFunctionThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialFunctionThumbnailRenderer
        fun C(Other: UObject): MaterialFunctionThumbnailRenderer
        fun C(Other: Any): MaterialFunctionThumbnailRenderer
    }
}

external open class MaterialGraphNode_Base : EdGraphNode {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialGraphNode_Base
        fun Find(Outer: UObject, ResourceName: String): MaterialGraphNode_Base
        fun GetDefaultObject(): MaterialGraphNode_Base
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialGraphNode_Base
        fun C(Other: UObject): MaterialGraphNode_Base
        fun C(Other: Any): MaterialGraphNode_Base
    }
}

external open class MaterialGraphNode_Root : MaterialGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var Material: Material

    companion object {
        fun Load(ResourceName: String): MaterialGraphNode_Root
        fun Find(Outer: UObject, ResourceName: String): MaterialGraphNode_Root
        fun GetDefaultObject(): MaterialGraphNode_Root
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialGraphNode_Root
        fun C(Other: UObject): MaterialGraphNode_Root
        fun C(Other: Any): MaterialGraphNode_Root
    }
}

external open class MaterialGraph : EdGraph {
    constructor()
    constructor(Outer: UObject)
    open var Material: Material
    open var MaterialFunction: MaterialFunction
    open var RootNode: MaterialGraphNode_Root
    open var OriginalMaterialFullName: String

    companion object {
        fun Load(ResourceName: String): MaterialGraph
        fun Find(Outer: UObject, ResourceName: String): MaterialGraph
        fun GetDefaultObject(): MaterialGraph
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialGraph
        fun C(Other: UObject): MaterialGraph
        fun C(Other: Any): MaterialGraph
    }
}

external open class MaterialGraphNode : MaterialGraphNode_Base {
    constructor()
    constructor(Outer: UObject)
    open var MaterialExpression: MaterialExpression

    companion object {
        fun Load(ResourceName: String): MaterialGraphNode
        fun Find(Outer: UObject, ResourceName: String): MaterialGraphNode
        fun GetDefaultObject(): MaterialGraphNode
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialGraphNode
        fun C(Other: UObject): MaterialGraphNode
        fun C(Other: Any): MaterialGraphNode
    }
}

external open class MaterialGraphNode_Comment : EdGraphNode_Comment {
    constructor()
    constructor(Outer: UObject)
    open var MaterialExpressionComment: MaterialExpressionComment

    companion object {
        fun Load(ResourceName: String): MaterialGraphNode_Comment
        fun Find(Outer: UObject, ResourceName: String): MaterialGraphNode_Comment
        fun GetDefaultObject(): MaterialGraphNode_Comment
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialGraphNode_Comment
        fun C(Other: UObject): MaterialGraphNode_Comment
        fun C(Other: Any): MaterialGraphNode_Comment
    }
}

external open class MaterialGraphNode_Knot : MaterialGraphNode {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialGraphNode_Knot
        fun Find(Outer: UObject, ResourceName: String): MaterialGraphNode_Knot
        fun GetDefaultObject(): MaterialGraphNode_Knot
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialGraphNode_Knot
        fun C(Other: UObject): MaterialGraphNode_Knot
        fun C(Other: Any): MaterialGraphNode_Knot
    }
}

external open class MaterialGraphSchema : EdGraphSchema {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialGraphSchema
        fun Find(Outer: UObject, ResourceName: String): MaterialGraphSchema
        fun GetDefaultObject(): MaterialGraphSchema
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialGraphSchema
        fun C(Other: UObject): MaterialGraphSchema
        fun C(Other: Any): MaterialGraphSchema
    }
}

external interface `T$641` {
    var OutError: String
    var `$`: MaterialInterface
}

external open class MaterialImportHelpers : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialImportHelpers
        fun Find(Outer: UObject, ResourceName: String): MaterialImportHelpers
        fun GetDefaultObject(): MaterialImportHelpers
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialImportHelpers
        fun FindExistingMaterialFromSearchLocation(MaterialFullName: String, BasePackagePath: String, SearchLocation: String /* "Local" | "UnderParent" | "UnderRoot" | "AllAssets" | "DoNotSearch" | "EMaterialSearchLocation_MAX" */, OutError: String = definedExternally): `T$641`
        fun FindExistingMaterial(BasePath: String, MaterialFullName: String, bRecursivePaths: Boolean, OutError: String = definedExternally): `T$641`
        fun C(Other: UObject): MaterialImportHelpers
        fun C(Other: Any): MaterialImportHelpers
    }
}

external open class MaterialInstanceConstantFactoryNew : Factory {
    constructor()
    constructor(Outer: UObject)
    open var InitialParent: MaterialInterface

    companion object {
        fun Load(ResourceName: String): MaterialInstanceConstantFactoryNew
        fun Find(Outer: UObject, ResourceName: String): MaterialInstanceConstantFactoryNew
        fun GetDefaultObject(): MaterialInstanceConstantFactoryNew
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialInstanceConstantFactoryNew
        fun C(Other: UObject): MaterialInstanceConstantFactoryNew
        fun C(Other: Any): MaterialInstanceConstantFactoryNew
    }
}

external open class MaterialInstanceThumbnailRenderer : DefaultSizedThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialInstanceThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): MaterialInstanceThumbnailRenderer
        fun GetDefaultObject(): MaterialInstanceThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialInstanceThumbnailRenderer
        fun C(Other: UObject): MaterialInstanceThumbnailRenderer
        fun C(Other: Any): MaterialInstanceThumbnailRenderer
    }
}

external open class MaterialParameterCollectionFactoryNew : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MaterialParameterCollectionFactoryNew
        fun Find(Outer: UObject, ResourceName: String): MaterialParameterCollectionFactoryNew
        fun GetDefaultObject(): MaterialParameterCollectionFactoryNew
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialParameterCollectionFactoryNew
        fun C(Other: UObject): MaterialParameterCollectionFactoryNew
        fun C(Other: Any): MaterialParameterCollectionFactoryNew
    }
}

external open class MaterialStatsOptions : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bPlatformUsed: Number
    open var bMaterialQualityUsed: Number

    companion object {
        fun Load(ResourceName: String): MaterialStatsOptions
        fun Find(Outer: UObject, ResourceName: String): MaterialStatsOptions
        fun GetDefaultObject(): MaterialStatsOptions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MaterialStatsOptions
        fun C(Other: UObject): MaterialStatsOptions
        fun C(Other: Any): MaterialStatsOptions
    }
}

external open class MergeShaderPipelineCachesCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): MergeShaderPipelineCachesCommandlet
        fun Find(Outer: UObject, ResourceName: String): MergeShaderPipelineCachesCommandlet
        fun GetDefaultObject(): MergeShaderPipelineCachesCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): MergeShaderPipelineCachesCommandlet
        fun C(Other: UObject): MergeShaderPipelineCachesCommandlet
        fun C(Other: Any): MergeShaderPipelineCachesCommandlet
    }
}

external open class ModelExporterT3D : Exporter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ModelExporterT3D
        fun Find(Outer: UObject, ResourceName: String): ModelExporterT3D
        fun GetDefaultObject(): ModelExporterT3D
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ModelExporterT3D
        fun C(Other: UObject): ModelExporterT3D
        fun C(Other: Any): ModelExporterT3D
    }
}

external open class ModelFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ModelFactory
        fun Find(Outer: UObject, ResourceName: String): ModelFactory
        fun GetDefaultObject(): ModelFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ModelFactory
        fun C(Other: UObject): ModelFactory
        fun C(Other: Any): ModelFactory
    }
}

external open class NativeCodeGenCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): NativeCodeGenCommandlet
        fun Find(Outer: UObject, ResourceName: String): NativeCodeGenCommandlet
        fun GetDefaultObject(): NativeCodeGenCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): NativeCodeGenCommandlet
        fun C(Other: UObject): NativeCodeGenCommandlet
        fun C(Other: Any): NativeCodeGenCommandlet
    }
}

external open class ObjectExporterT3D : Exporter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ObjectExporterT3D
        fun Find(Outer: UObject, ResourceName: String): ObjectExporterT3D
        fun GetDefaultObject(): ObjectExporterT3D
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ObjectExporterT3D
        fun C(Other: UObject): ObjectExporterT3D
        fun C(Other: Any): ObjectExporterT3D
    }
}

external open class ObjectLibraryFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ObjectLibraryFactory
        fun Find(Outer: UObject, ResourceName: String): ObjectLibraryFactory
        fun GetDefaultObject(): ObjectLibraryFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ObjectLibraryFactory
        fun C(Other: UObject): ObjectLibraryFactory
        fun C(Other: Any): ObjectLibraryFactory
    }
}

external open class PackageFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PackageFactory
        fun Find(Outer: UObject, ResourceName: String): PackageFactory
        fun GetDefaultObject(): PackageFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PackageFactory
        fun C(Other: UObject): PackageFactory
        fun C(Other: Any): PackageFactory
    }
}

external open class PackageTools : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PackageTools
        fun Find(Outer: UObject, ResourceName: String): PackageTools
        fun GetDefaultObject(): PackageTools
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PackageTools
        fun SanitizePackageName(InPackageName: String): String
        fun C(Other: UObject): PackageTools
        fun C(Other: Any): PackageTools
    }
}

external open class PackFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PackFactory
        fun Find(Outer: UObject, ResourceName: String): PackFactory
        fun GetDefaultObject(): PackFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PackFactory
        fun C(Other: UObject): PackFactory
        fun C(Other: Any): PackFactory
    }
}

external open class PanelExtensionSubsystem : EditorSubsystem {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PanelExtensionSubsystem
        fun Find(Outer: UObject, ResourceName: String): PanelExtensionSubsystem
        fun GetDefaultObject(): PanelExtensionSubsystem
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PanelExtensionSubsystem
        fun C(Other: UObject): PanelExtensionSubsystem
        fun C(Other: Any): PanelExtensionSubsystem
    }
}

external open class ParticleSystemAuditCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)
    open var HighSpawnRateOrBurstThreshold: Number
    open var FarLODDistanceTheshold: Number

    companion object {
        fun Load(ResourceName: String): ParticleSystemAuditCommandlet
        fun Find(Outer: UObject, ResourceName: String): ParticleSystemAuditCommandlet
        fun GetDefaultObject(): ParticleSystemAuditCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleSystemAuditCommandlet
        fun C(Other: UObject): ParticleSystemAuditCommandlet
        fun C(Other: Any): ParticleSystemAuditCommandlet
    }
}

external open class ParticleSystemFactoryNew : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ParticleSystemFactoryNew
        fun Find(Outer: UObject, ResourceName: String): ParticleSystemFactoryNew
        fun GetDefaultObject(): ParticleSystemFactoryNew
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleSystemFactoryNew
        fun C(Other: UObject): ParticleSystemFactoryNew
        fun C(Other: Any): ParticleSystemFactoryNew
    }
}

external open class ParticleSystemThumbnailRenderer : TextureThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)
    open var NoImage: Texture2D
    open var OutOfDate: Texture2D

    companion object {
        fun Load(ResourceName: String): ParticleSystemThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): ParticleSystemThumbnailRenderer
        fun GetDefaultObject(): ParticleSystemThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ParticleSystemThumbnailRenderer
        fun C(Other: UObject): ParticleSystemThumbnailRenderer
        fun C(Other: Any): ParticleSystemThumbnailRenderer
    }
}

external object EAnimationViewportCameraFollowMode {
    var None: String /* "None" */
    var Bounds: String /* "Bounds" */
    var Bone: String /* "Bone" */
    var EAnimationViewportCameraFollowMode_MAX: String /* "EAnimationViewportCameraFollowMode_MAX" */
}

external open class ViewportConfigOptions {
    open var ViewModeIndex: String /* "VMI_BrushWireframe" | "VMI_Wireframe" | "VMI_Unlit" | "VMI_Lit" | "VMI_Lit_DetailLighting" | "VMI_LightingOnly" | "VMI_LightComplexity" | "VMI_ShaderComplexity" | "VMI_LightmapDensity" | "VMI_LitLightmapDensity" | "VMI_ReflectionOverride" | "VMI_VisualizeBuffer" | "VMI_StationaryLightOverlap" | "VMI_CollisionPawn" | "VMI_CollisionVisibility" | "VMI_LODColoration" | "VMI_QuadOverdraw" | "VMI_PrimitiveDistanceAccuracy" | "VMI_MeshUVDensityAccuracy" | "VMI_ShaderComplexityWithQuadOverdraw" | "VMI_HLODColoration" | "VMI_GroupLODColoration" | "VMI_MaterialTextureScaleAccuracy" | "VMI_RequiredTextureResolution" | "VMI_PathTracing" | "VMI_RayTracingDebug" | "VMI_Max" | "VMI_Unknown" */
    open var ViewFOV: Number
    open var CameraSpeedSetting: Number
    open var CameraSpeedScalar: Number
    open var CameraFollowMode: String /* "None" | "Bounds" | "Bone" | "EAnimationViewportCameraFollowMode_MAX" */
    open var CameraFollowBoneName: String
    open fun clone(): ViewportConfigOptions

    companion object {
        fun C(Other: UObject): ViewportConfigOptions
        fun C(Other: Any): ViewportConfigOptions
    }
}

external open class AssetEditorOptions {
    open var Context: String
    open var ViewportConfigs: ViewportConfigOptions
    open fun clone(): AssetEditorOptions

    companion object {
        fun C(Other: UObject): AssetEditorOptions
        fun C(Other: Any): AssetEditorOptions
    }
}

external open class PersonaOptions : UObject {
    constructor()
    constructor(Outer: UObject)
    open var bAutoAlignFloorToMesh: Boolean
    open var bShowGrid: Boolean
    open var bHighlightOrigin: Boolean
    open var bMuteAudio: Boolean
    open var bUseAudioAttenuation: Boolean
    open var ShowMeshStats: Number
    open var DefaultLocalAxesSelection: Any
    open var DefaultBoneDrawSelection: Any
    open var SectionTimingNodeColor: LinearColor
    open var NotifyTimingNodeColor: LinearColor
    open var BranchingPointTimingNodeColor: LinearColor
    open var bUseInlineSocketEditor: Boolean
    open var bFlattenSkeletonHierarchyWhenFiltering: Boolean
    open var bHideParentsWhenFiltering: Boolean
    open var bAllowPreviewMeshCollectionsToSelectFromDifferentSkeletons: Boolean
    open var bAllowPreviewMeshCollectionsToUseCustomAnimBP: Boolean
    open var bAllowMeshSectionSelection: Boolean
    open var NumFolderFiltersInAssetBrowser: Any
    open var AssetEditorOptions: Array<AssetEditorOptions>
    open var CurveEditorSnapInterval: Number
    open var TimelineScrubSnapValue: Number
    open var TimelineDisplayFormat: String /* "NonDropFrameTimecode" | "DropFrameTimecode" | "Seconds" | "Frames" | "MAX_Count" | "EFrameNumberDisplayFormats_MAX" */
    open var bTimelineDisplayPercentage: Boolean
    open var bTimelineDisplayFormatSecondary: Boolean
    open var bTimelineDisplayCurveKeys: Boolean
    open var TimelineEnabledSnaps: Array<String>

    companion object {
        fun Load(ResourceName: String): PersonaOptions
        fun Find(Outer: UObject, ResourceName: String): PersonaOptions
        fun GetDefaultObject(): PersonaOptions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PersonaOptions
        fun C(Other: UObject): PersonaOptions
        fun C(Other: Any): PersonaOptions
    }
}

external open class PhysicalMaterialFactoryNew : Factory {
    constructor()
    constructor(Outer: UObject)
    open var PhysicalMaterialClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): PhysicalMaterialFactoryNew
        fun Find(Outer: UObject, ResourceName: String): PhysicalMaterialFactoryNew
        fun GetDefaultObject(): PhysicalMaterialFactoryNew
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PhysicalMaterialFactoryNew
        fun C(Other: UObject): PhysicalMaterialFactoryNew
        fun C(Other: Any): PhysicalMaterialFactoryNew
    }
}

external open class PhysicalMaterialMaskFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var PhysicalMaterialMaskClass: UnrealEngineClass

    companion object {
        fun Load(ResourceName: String): PhysicalMaterialMaskFactory
        fun Find(Outer: UObject, ResourceName: String): PhysicalMaterialMaskFactory
        fun GetDefaultObject(): PhysicalMaterialMaskFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PhysicalMaterialMaskFactory
        fun C(Other: UObject): PhysicalMaterialMaskFactory
        fun C(Other: Any): PhysicalMaterialMaskFactory
    }
}

external open class PhysicalMaterialMaskThumbnailRenderer : TextureThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PhysicalMaterialMaskThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): PhysicalMaterialMaskThumbnailRenderer
        fun GetDefaultObject(): PhysicalMaterialMaskThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PhysicalMaterialMaskThumbnailRenderer
        fun C(Other: UObject): PhysicalMaterialMaskThumbnailRenderer
        fun C(Other: Any): PhysicalMaterialMaskThumbnailRenderer
    }
}

external object EPhysicsAssetEditorRenderMode {
    var Solid: String /* "Solid" */
    var Wireframe: String /* "Wireframe" */
    var None: String /* "None" */
    var EPhysicsAssetEditorRenderMode_MAX: String /* "EPhysicsAssetEditorRenderMode_MAX" */
}

external object EPhysicsAssetEditorConstraintViewMode {
    var None: String /* "None" */
    var AllPositions: String /* "AllPositions" */
    var AllLimits: String /* "AllLimits" */
    var EPhysicsAssetEditorConstraintViewMode_MAX: String /* "EPhysicsAssetEditorConstraintViewMode_MAX" */
}

external open class PhysicsAssetEditorOptions : UObject {
    constructor()
    constructor(Outer: UObject)
    open var PhysicsBlend: Number
    open var bUpdateJointsFromAnimation: Boolean
    open var PhysicsUpdateMode: String /* "SimulationUpatesComponentTransform" | "ComponentTransformIsKinematic" | "EPhysicsTransformUpdateMode_MAX" */
    open var PokePauseTime: Number
    open var PokeBlendTime: Number
    open var GravScale: Number
    open var GravityOverrideZ: Number
    open var bUseGravityOverride: Boolean
    open var MaxFPS: Number
    open var HandleLinearDamping: Number
    open var HandleLinearStiffness: Number
    open var HandleAngularDamping: Number
    open var HandleAngularStiffness: Number
    open var InterpolationSpeed: Number
    open var PokeStrength: Number
    open var bShowConstraintsAsPoints: Boolean
    open var bRenderOnlySelectedConstraints: Boolean
    open var ConstraintDrawSize: Number
    open var MeshViewMode: String /* "Solid" | "Wireframe" | "None" | "EPhysicsAssetEditorRenderMode_MAX" */
    open var CollisionViewMode: String /* "Solid" | "Wireframe" | "None" | "EPhysicsAssetEditorRenderMode_MAX" */
    open var ConstraintViewMode: String /* "None" | "AllPositions" | "AllLimits" | "EPhysicsAssetEditorConstraintViewMode_MAX" */
    open var SimulationMeshViewMode: String /* "Solid" | "Wireframe" | "None" | "EPhysicsAssetEditorRenderMode_MAX" */
    open var SimulationCollisionViewMode: String /* "Solid" | "Wireframe" | "None" | "EPhysicsAssetEditorRenderMode_MAX" */
    open var SimulationConstraintViewMode: String /* "None" | "AllPositions" | "AllLimits" | "EPhysicsAssetEditorConstraintViewMode_MAX" */
    open var CollisionOpacity: Number
    open var bSolidRenderingForSelectedOnly: Boolean
    open var bHideSimulatedBodies: Boolean
    open var bHideKinematicBodies: Boolean
    open var bResetClothWhenSimulating: Boolean

    companion object {
        fun Load(ResourceName: String): PhysicsAssetEditorOptions
        fun Find(Outer: UObject, ResourceName: String): PhysicsAssetEditorOptions
        fun GetDefaultObject(): PhysicsAssetEditorOptions
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PhysicsAssetEditorOptions
        fun C(Other: UObject): PhysicsAssetEditorOptions
        fun C(Other: Any): PhysicsAssetEditorOptions
    }
}

external open class PhysicsAssetFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var TargetSkeletalMesh: SkeletalMesh

    companion object {
        fun Load(ResourceName: String): PhysicsAssetFactory
        fun Find(Outer: UObject, ResourceName: String): PhysicsAssetFactory
        fun GetDefaultObject(): PhysicsAssetFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PhysicsAssetFactory
        fun C(Other: UObject): PhysicsAssetFactory
        fun C(Other: Any): PhysicsAssetFactory
    }
}

external object EPhysAssetFitGeomType {
    var EFG_Box: String /* "EFG_Box" */
    var EFG_Sphyl: String /* "EFG_Sphyl" */
    var EFG_Sphere: String /* "EFG_Sphere" */
    var EFG_TaperedCapsule: String /* "EFG_TaperedCapsule" */
    var EFG_SingleConvexHull: String /* "EFG_SingleConvexHull" */
    var EFG_MultiConvexHull: String /* "EFG_MultiConvexHull" */
    var EFG_MAX: String /* "EFG_MAX" */
}

external object EPhysAssetFitVertWeight {
    var EVW_AnyWeight: String /* "EVW_AnyWeight" */
    var EVW_DominantWeight: String /* "EVW_DominantWeight" */
    var EVW_MAX: String /* "EVW_MAX" */
}

external open class PhysAssetCreateParams {
    open var MinBoneSize: Number
    open var MinWeldSize: Number
    open var GeomType: String /* "EFG_Box" | "EFG_Sphyl" | "EFG_Sphere" | "EFG_TaperedCapsule" | "EFG_SingleConvexHull" | "EFG_MultiConvexHull" | "EFG_MAX" */
    open var VertWeight: String /* "EVW_AnyWeight" | "EVW_DominantWeight" | "EVW_MAX" */
    open var bAutoOrientToBone: Boolean
    open var bCreateConstraints: Boolean
    open var bWalkPastSmall: Boolean
    open var bBodyForAll: Boolean
    open var bDisableCollisionsByDefault: Boolean
    open var AngularConstraintMode: String /* "ACM_Free" | "ACM_Limited" | "ACM_Locked" | "ACM_MAX" */
    open var HullCount: Number
    open var MaxHullVerts: Number
    open fun clone(): PhysAssetCreateParams

    companion object {
        fun C(Other: UObject): PhysAssetCreateParams
        fun C(Other: Any): PhysAssetCreateParams
    }
}

external open class PhysicsAssetGenerationSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var CreateParams: PhysAssetCreateParams

    companion object {
        fun Load(ResourceName: String): PhysicsAssetGenerationSettings
        fun Find(Outer: UObject, ResourceName: String): PhysicsAssetGenerationSettings
        fun GetDefaultObject(): PhysicsAssetGenerationSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PhysicsAssetGenerationSettings
        fun C(Other: UObject): PhysicsAssetGenerationSettings
        fun C(Other: Any): PhysicsAssetGenerationSettings
    }
}

external open class PhysicsAssetThumbnailRenderer : DefaultSizedThumbnailRenderer {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PhysicsAssetThumbnailRenderer
        fun Find(Outer: UObject, ResourceName: String): PhysicsAssetThumbnailRenderer
        fun GetDefaultObject(): PhysicsAssetThumbnailRenderer
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PhysicsAssetThumbnailRenderer
        fun C(Other: UObject): PhysicsAssetThumbnailRenderer
        fun C(Other: Any): PhysicsAssetThumbnailRenderer
    }
}

external open class PkgInfoCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PkgInfoCommandlet
        fun Find(Outer: UObject, ResourceName: String): PkgInfoCommandlet
        fun GetDefaultObject(): PkgInfoCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PkgInfoCommandlet
        fun C(Other: UObject): PkgInfoCommandlet
        fun C(Other: Any): PkgInfoCommandlet
    }
}

external open class PolysExporterOBJ : Exporter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PolysExporterOBJ
        fun Find(Outer: UObject, ResourceName: String): PolysExporterOBJ
        fun GetDefaultObject(): PolysExporterOBJ
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PolysExporterOBJ
        fun C(Other: UObject): PolysExporterOBJ
        fun C(Other: Any): PolysExporterOBJ
    }
}

external open class PolysExporterT3D : Exporter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PolysExporterT3D
        fun Find(Outer: UObject, ResourceName: String): PolysExporterT3D
        fun GetDefaultObject(): PolysExporterT3D
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PolysExporterT3D
        fun C(Other: UObject): PolysExporterT3D
        fun C(Other: Any): PolysExporterT3D
    }
}

external open class PolysFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PolysFactory
        fun Find(Outer: UObject, ResourceName: String): PolysFactory
        fun GetDefaultObject(): PolysFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PolysFactory
        fun C(Other: UObject): PolysFactory
        fun C(Other: Any): PolysFactory
    }
}

external open class PopulateDialogueWaveFromCharacterSheetCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PopulateDialogueWaveFromCharacterSheetCommandlet
        fun Find(Outer: UObject, ResourceName: String): PopulateDialogueWaveFromCharacterSheetCommandlet
        fun GetDefaultObject(): PopulateDialogueWaveFromCharacterSheetCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PopulateDialogueWaveFromCharacterSheetCommandlet
        fun C(Other: UObject): PopulateDialogueWaveFromCharacterSheetCommandlet
        fun C(Other: Any): PopulateDialogueWaveFromCharacterSheetCommandlet
    }
}

external open class PoseAssetFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var SourceAnimation: AnimSequence
    open var PoseNames: Array<String>
    open var TargetSkeleton: Skeleton
    open var PreviewSkeletalMesh: SkeletalMesh

    companion object {
        fun Load(ResourceName: String): PoseAssetFactory
        fun Find(Outer: UObject, ResourceName: String): PoseAssetFactory
        fun GetDefaultObject(): PoseAssetFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PoseAssetFactory
        fun C(Other: UObject): PoseAssetFactory
        fun C(Other: Any): PoseAssetFactory
    }
}

external open class PreviewMaterial : Material {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): PreviewMaterial
        fun Find(Outer: UObject, ResourceName: String): PreviewMaterial
        fun GetDefaultObject(): PreviewMaterial
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PreviewMaterial
        fun C(Other: UObject): PreviewMaterial
        fun C(Other: Any): PreviewMaterial
    }
}

external open class PreviewMeshCollectionFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var CurrentSkeleton: Any

    companion object {
        fun Load(ResourceName: String): PreviewMeshCollectionFactory
        fun Find(Outer: UObject, ResourceName: String): PreviewMeshCollectionFactory
        fun GetDefaultObject(): PreviewMeshCollectionFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PreviewMeshCollectionFactory
        fun C(Other: UObject): PreviewMeshCollectionFactory
        fun C(Other: Any): PreviewMeshCollectionFactory
    }
}

external object EProjectPackagingBuild {
    var Always: String /* "Always" */
    var Never: String /* "Never" */
    var IfProjectHasCode: String /* "IfProjectHasCode" */
    var IfEditorWasBuiltLocally: String /* "IfEditorWasBuiltLocally" */
    var EProjectPackagingBuild_MAX: String /* "EProjectPackagingBuild_MAX" */
}

external object EProjectPackagingBuildConfigurations {
    var PPBC_Debug: String /* "PPBC_Debug" */
    var PPBC_DebugGame: String /* "PPBC_DebugGame" */
    var PPBC_Development: String /* "PPBC_Development" */
    var PPBC_Test: String /* "PPBC_Test" */
    var PPBC_Shipping: String /* "PPBC_Shipping" */
    var PPBC_MAX: String /* "PPBC_MAX" */
}

external object EProjectPackagingBlueprintNativizationMethod {
    var Disabled: String /* "Disabled" */
    var Inclusive: String /* "Inclusive" */
    var Exclusive: String /* "Exclusive" */
    var EProjectPackagingBlueprintNativizationMethod_MAX: String /* "EProjectPackagingBlueprintNativizationMethod_MAX" */
}

external object EProjectPackagingInternationalizationPresets {
    var English: String /* "English" */
    var EFIGS: String /* "EFIGS" */
    var EFIGSCJK: String /* "EFIGSCJK" */
    var CJK: String /* "CJK" */
    var All: String /* "All" */
    var EProjectPackagingInternationalizationPresets_MAX: String /* "EProjectPackagingInternationalizationPresets_MAX" */
}

external open class ProjectPackagingSettings : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Build: String /* "Always" | "Never" | "IfProjectHasCode" | "IfEditorWasBuiltLocally" | "EProjectPackagingBuild_MAX" */
    open var BuildConfiguration: String /* "PPBC_Debug" | "PPBC_DebugGame" | "PPBC_Development" | "PPBC_Test" | "PPBC_Shipping" | "PPBC_MAX" */
    open var BuildTarget: String
    open var StagingDirectory: DirectoryPath
    open var FullRebuild: Boolean
    open var ForDistribution: Boolean
    open var IncludeDebugFiles: Boolean
    open var BlueprintNativizationMethod: String /* "Disabled" | "Inclusive" | "Exclusive" | "EProjectPackagingBlueprintNativizationMethod_MAX" */
    open var NativizeBlueprintAssets: Array<FilePath>
    open var bIncludeNativizedAssetsInProjectGeneration: Boolean
    open var bExcludeMonolithicEngineHeadersInNativizedCode: Boolean
    open var UsePakFile: Boolean
    open var bUseIoStore: Boolean
    open var bMakeBinaryConfig: Boolean
    open var bGenerateChunks: Boolean
    open var bGenerateNoChunks: Boolean
    open var bChunkHardReferencesOnly: Boolean
    open var bForceOneChunkPerFile: Boolean
    open var MaxChunkSize: Any
    open var bBuildHttpChunkInstallData: Boolean
    open var HttpChunkInstallDataDirectory: DirectoryPath
    open var bCompressed: Boolean
    open var PakFileCompressionFormats: String
    open var bForceUseProjectCompressionFormatIgnoreHardwareOverride: Boolean
    open var PakFileAdditionalCompressionOptions: String
    open var PakFileCompressionMethod: String
    open var PakFileCompressionLevel_DebugDevelopment: Number
    open var PakFileCompressionLevel_TestShipping: Number
    open var PakFileCompressionLevel_Distribution: Number
    open var HttpChunkInstallDataVersion: String
    open var IncludePrerequisites: Boolean
    open var IncludeAppLocalPrerequisites: Boolean
    open var bShareMaterialShaderCode: Boolean
    open var bDeterministicShaderCodeOrder: Boolean
    open var bSharedMaterialNativeLibraries: Boolean
    open var ApplocalPrerequisitesDirectory: DirectoryPath
    open var IncludeCrashReporter: Boolean
    open var InternationalizationPreset: String /* "English" | "EFIGS" | "EFIGSCJK" | "CJK" | "All" | "EProjectPackagingInternationalizationPresets_MAX" */
    open var CulturesToStage: Array<String>
    open var LocalizationTargetsToChunk: Array<String>
    open var LocalizationTargetCatchAllChunkId: Number
    open var bCookAll: Boolean
    open var bCookMapsOnly: Boolean
    open var bEncryptIniFiles: Boolean
    open var bEncryptPakIndex: Boolean
    open var GenerateEarlyDownloaderPakFile: Boolean
    open var bSkipEditorContent: Boolean
    open var bSkipMovies: Boolean
    open var UFSMovies: Array<String>
    open var NonUFSMovies: Array<String>
    open var CompressedChunkWildcard: Array<String>
    open var IniKeyBlacklist: Array<String>
    open var IniSectionBlacklist: Array<String>
    open var EarlyDownloaderPakFileFiles: Array<String>
    open var MapsToCook: Array<FilePath>
    open var DirectoriesToAlwaysCook: Array<DirectoryPath>
    open var DirectoriesToNeverCook: Array<DirectoryPath>
    open var TestDirectoriesToNotSearch: Array<DirectoryPath>
    open var DirectoriesToAlwaysStageAsUFS: Array<DirectoryPath>
    open var DirectoriesToAlwaysStageAsNonUFS: Array<DirectoryPath>
    open var DirectoriesToAlwaysStageAsUFSServer: Array<DirectoryPath>
    open var DirectoriesToAlwaysStageAsNonUFSServer: Array<DirectoryPath>

    companion object {
        fun Load(ResourceName: String): ProjectPackagingSettings
        fun Find(Outer: UObject, ResourceName: String): ProjectPackagingSettings
        fun GetDefaultObject(): ProjectPackagingSettings
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ProjectPackagingSettings
        fun C(Other: UObject): ProjectPackagingSettings
        fun C(Other: Any): ProjectPackagingSettings
    }
}

external open class PropertyEditorTestInstancedObject : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Number: Number

    companion object {
        fun Load(ResourceName: String): PropertyEditorTestInstancedObject
        fun Find(Outer: UObject, ResourceName: String): PropertyEditorTestInstancedObject
        fun GetDefaultObject(): PropertyEditorTestInstancedObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PropertyEditorTestInstancedObject
        fun C(Other: UObject): PropertyEditorTestInstancedObject
        fun C(Other: Any): PropertyEditorTestInstancedObject
    }
}

external object PropertyEditorTestEnum {
    var PropertyEditorTest_Enum1: String /* "PropertyEditorTest_Enum1" */
    var PropertyEditorTest_Enum2: String /* "PropertyEditorTest_Enum2" */
    var PropertyEditorTest_Enum3: String /* "PropertyEditorTest_Enum3" */
    var PropertyEditorTest_Enum4: String /* "PropertyEditorTest_Enum4" */
    var PropertyEditorTest_Enum5: String /* "PropertyEditorTest_Enum5" */
    var PropertyEditorTest_Enum6: String /* "PropertyEditorTest_Enum6" */
    var PropertyEditorTest_MAX: String /* "PropertyEditorTest_MAX" */
}

external object EditColor {
    var Red: String /* "Red" */
    var Orange: String /* "Orange" */
    var Yellow: String /* "Yellow" */
    var Green: String /* "Green" */
    var Blue: String /* "Blue" */
    var Indigo: String /* "Indigo" */
    var Violet: String /* "Violet" */
    var Pink: String /* "Pink" */
    var Magenta: String /* "Magenta" */
    var Cyan: String /* "Cyan" */
    var EditColor_MAX: String /* "EditColor_MAX" */
}

external open class PropertyEditorTestSubStruct {
    open var FirstProperty: Number
    open var SecondProperty: Number
    open var CustomizedStructInsideUncustomizedStruct: LinearColor
    open var CustomizedStructInsideUncustomizedStruct2: SoftObjectPath
    open fun clone(): PropertyEditorTestSubStruct

    companion object {
        fun C(Other: UObject): PropertyEditorTestSubStruct
        fun C(Other: Any): PropertyEditorTestSubStruct
    }
}

external open class PropertyEditorTestBasicStruct {
    open var IntPropertyInsideAStruct: Number
    open var FloatPropertyInsideAStruct: Number
    open var ObjectPropertyInsideAStruct: UObject
    open var InnerStruct: PropertyEditorTestSubStruct
    open fun clone(): PropertyEditorTestBasicStruct

    companion object {
        fun C(Other: UObject): PropertyEditorTestBasicStruct
        fun C(Other: Any): PropertyEditorTestBasicStruct
    }
}

external open class PropertyEditorTestInstancedStruct {
    open var UObject: PropertyEditorTestInstancedObject
    open fun clone(): PropertyEditorTestInstancedStruct

    companion object {
        fun C(Other: UObject): PropertyEditorTestInstancedStruct
        fun C(Other: Any): PropertyEditorTestInstancedStruct
    }
}

external open class PropertyEditTestTextStruct {
    open var NormalProperty: String
    open fun clone(): PropertyEditTestTextStruct

    companion object {
        fun C(Other: UObject): PropertyEditTestTextStruct
        fun C(Other: Any): PropertyEditTestTextStruct
    }
}

external open class PropertyEditorTestInlineEditCondition {
    open var InlineEditCondition: Boolean
    open var HasInlineEditCondition: Number
    open fun clone(): PropertyEditorTestInlineEditCondition

    companion object {
        fun C(Other: UObject): PropertyEditorTestInlineEditCondition
        fun C(Other: Any): PropertyEditorTestInlineEditCondition
    }
}

external open class PropertyEditorTestObject : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Int8Property: Any
    open var Int16Property: Any
    open var Int32Property: Number
    open var Int64Property: Any
    open var ByteProperty: Number
    open var UnsignedInt16Property: Any
    open var UnsignedInt32Property: Any
    open var UnsignedInt64Property: Any
    open var FloatProperty: Number
    open var DoubleProperty: Any
    open var NameProperty: String
    open var BoolProperty: Boolean
    open var StringProperty: String
    open var TextProperty: String
    open var IntPointProperty: IntPoint
    open var Vector3Property: Vector
    open var Vector2Property: Vector2D
    open var Vector4Property: Vector4
    open var RotatorProperty: Rotator
    open var ObjectProperty: UObject
    open var LinearColorProperty: LinearColor
    open var ColorProperty: Color
    open var EnumByteProperty: String /* "PropertyEditorTest_Enum1" | "PropertyEditorTest_Enum2" | "PropertyEditorTest_Enum3" | "PropertyEditorTest_Enum4" | "PropertyEditorTest_Enum5" | "PropertyEditorTest_Enum6" | "PropertyEditorTest_MAX" */
    open var EnumProperty: String /* "Red" | "Orange" | "Yellow" | "Green" | "Blue" | "Indigo" | "Violet" | "Pink" | "Magenta" | "Cyan" | "EditColor_MAX" */
    open var MatrixProperty: Matrix
    open var TransformProperty: Transform
    open var ClassProperty: UnrealEngineClass
    open var ClassPropertyWithAllowed: UnrealEngineClass
    open var ClassPropertyWithDisallowed: UnrealEngineClass
    open var SubclassOfTexture: UnrealEngineClass
    open var SubclassOfWithAllowed: UnrealEngineClass
    open var SubclassOfWithDisallowed: UnrealEngineClass
    open var AssetPointerWithAllowedAndWhitespace: UObject
    open var IntProperty32Array: Array<Number>
    open var BytePropertyArray: Array<Number>
    open var FloatPropertyArray: Array<Number>
    open var NamePropertyArray: Array<String>
    open var BoolPropertyArray: Array<Boolean>
    open var StringPropertyArray: Array<String>
    open var TextPropertyArray: Array<String>
    open var Vector3PropertyArray: Array<Vector>
    open var Vector2PropertyArray: Array<Vector2D>
    open var Vector4PropertyArray: Array<Vector4>
    open var RotatorPropertyArray: Array<Rotator>
    open var ObjectPropertyArray: Array<UObject>
    open var ActorPropertyArray: Array<Actor>
    open var LinearColorPropertyArray: Array<LinearColor>
    open var ColorPropertyArray: Array<Color>
    open var EnumPropertyArray: Array<String /* "PropertyEditorTest_Enum1" | "PropertyEditorTest_Enum2" | "PropertyEditorTest_Enum3" | "PropertyEditorTest_Enum4" | "PropertyEditorTest_Enum5" | "PropertyEditorTest_Enum6" | "PropertyEditorTest_MAX" */>
    open var StructPropertyArray: Array<PropertyEditorTestBasicStruct>
    open var StructPropertyArrayWithTitle: Array<PropertyEditorTestBasicStruct>
    open var InstancedStructArray: Array<PropertyEditorTestInstancedStruct>
    open var InstancedUObjectArray: Array<PropertyEditorTestInstancedObject>
    open var FixedArrayOfInts: Array<Number>
    open var StaticArrayOfInts: Number
    open var StaticArrayOfIntsWithEnumLabels: Number
    open var FloatPropertyWithClampedRange: Number
    open var IntPropertyWithClampedRange: Number
    open var IntThatCannotBeChanged: Number
    open var StringThatCannotBeChanged: String
    open var ObjectThatCannotBeChanged: PrimitiveComponent
    open var EnumBitflags: Number
    open var StringPasswordProperty: String
    open var TextPasswordProperty: String
    open var ThisIsBrokenIfItsVisibleInADetailsView: PropertyEditorTestBasicStruct
    open var StructWithMultipleInstances1: PropertyEditorTestBasicStruct
    open var bEditConditionStructWithMultipleInstances2: Boolean
    open var StructWithMultipleInstances2: PropertyEditorTestBasicStruct
    open var RichCurve: RichCurve
    open var AssetReferenceCustomStruct: SoftObjectPath
    open var AssetReferenceCustomStructWithThumbnail: SoftObjectPath
    open var ExactlyPointLightActorReference: SoftObjectPath
    open var LightActorReference: SoftObjectPath
    open var ExactPointOrSpotLightActorReference: SoftObjectPath
    open var LightOrStaticMeshActorReference: SoftObjectPath
    open var NotLightActorReference: SoftObjectPath
    open var MaterialOrTextureAssetReference: SoftObjectPath
    open var ActorWithMetaClass: SoftObjectPath
    open var DisabledByCanEditChange: SoftObjectPath
    open var bEditCondition: Boolean
    open var SimplePropertyWithEditCondition: Number
    open var bEditConditionAssetReferenceCustomStructWithEditCondition: Boolean
    open var AssetReferenceCustomStructWithEditCondition: SoftObjectPath
    open var ArrayOfStructs: Array<PropertyEditorTestBasicStruct>
    open var struct: PropertyEditTestTextStruct
    open var EditInlineNewStaticMeshComponent: StaticMeshComponent
    open var ArrayOfEditInlineNewSMCs: Array<StaticMeshComponent>
    open var TextureProp: Texture
    open var StaticMeshProp: StaticMesh
    open var AnyMaterialInterface: MaterialInterface
    open var OnlyActorsAllowed: Actor
    open var Int32Set: Any
    open var FloatSet: Any
    open var StringSet: Any
    open var ObjectSet: Any
    open var ActorSet: Any
    open var EditColorSet: Any
    open var NameSet: Any
    open var Int32ToStringMap: Any
    open var StringToColorMap: Any
    open var Int32ToStructMap: Any
    open var StringToFloatMap: Any
    open var StringToObjectMap: Any
    open var StringToActorMap: Any
    open var ObjectToInt32Map: Any
    open var ObjectToColorMap: Any
    open var IntToEnumMap: Any
    open var NameToNameMap: Any
    open var NameToObjectMap: Any
    open var NameToCustomMap: Any
    open var NameToColorMap: Any
    open var IntToCustomMap: Any
    open var IntToSubStructMap: Any
    open var LinearColorSet: Any
    open var VectorSet: Any
    open var LinearColorToStringMap: Any
    open var VectorToFloatMap: Any
    open var LinearColorToVectorMap: Any
    open var BlendableInterface: Any
    open var AnimClassInterface: Any
    open var LightPropagationVolumeBlendable: Any
    open var TextureOrBlendableInterface: UObject
    open var bSubcategory: Boolean
    open var bSubcategoryAdvanced: Boolean
    open var bSubcategoryFooSimple: Boolean
    open var bSubcategoryFooAdvanced: Boolean
    open var bSubcategoryBarSimple: Boolean
    open var bSubcategoryBarAdvanced: Boolean
    open var bSubcategoryLast: Boolean
    open var bEnablesNext: Boolean
    open var bEnabledByPrevious: Boolean
    open var EnumEditCondition: String /* "Red" | "Orange" | "Yellow" | "Green" | "Blue" | "Indigo" | "Violet" | "Pink" | "Magenta" | "Cyan" | "EditColor_MAX" */
    open var bEnabledWhenBlue: Boolean
    open var bEnabledWhenPink: Boolean
    open var EnumAsByteEditCondition: String /* "PropertyEditorTest_Enum1" | "PropertyEditorTest_Enum2" | "PropertyEditorTest_Enum3" | "PropertyEditorTest_Enum4" | "PropertyEditorTest_Enum5" | "PropertyEditorTest_Enum6" | "PropertyEditorTest_MAX" */
    open var bEnabledWhenEnumIs2: Boolean
    open var bEnabledWhenEnumIs4: Boolean
    open var IntegerEditCondition: Number
    open var bEnabledWhenIntGreaterOrEqual5: Boolean
    open var bEnabledWhenIntLessOrEqual10: Boolean
    open var FloatEditCondition: Number
    open var bEnabledWhenFloatGreaterThan5: Boolean
    open var bEnabledWhenFloatLessThan10: Boolean
    open var bEditConditionForArrays: Boolean
    open var ArrayWithEditCondition: Array<Texture2D>
    open var ArrayOfStructsWithEditCondition: Array<PropertyEditorTestBasicStruct>
    open var bEditConditionForFixedArray: Boolean
    open var FixedArrayWithEditCondition: String
    open var EditConditionFlags: Any
    open var bEnabledWhenFlagsHasTwoOrFour: Boolean
    open var bDisabledWhenFlagsIsOdd: Boolean
    open var InlineProperty: String /* "Static" | "Stationary" | "Movable" | "EComponentMobility_MAX" */
    open var PropertyThatHides: String /* "Static" | "Stationary" | "Movable" | "EComponentMobility_MAX" */
    open var bVisibleWhenStatic: Boolean
    open var VisibleWhenStationary: Number
    open var DateTime: DateTime
    open var bInlineEditConditionWithoutMetaToggle: Boolean
    open var InlineEditConditionWithoutMeta: Number
    open var bInlineEditConditionWithMetaToggle: Boolean
    open var InlineEditConditionWithMeta: Number
    open var bInlineEditConditionNotEditable: Boolean
    open var HasNonEditableInlineCondition: Number
    open var bSharedEditCondition: Boolean
    open var UsesSharedEditCondition1: Number
    open var UsesSharedEditCondition2: Number
    open var StructWithInlineCondition: PropertyEditorTestInlineEditCondition
    open var ArrayOfStructsWithInlineCondition: Array<PropertyEditorTestInlineEditCondition>

    companion object {
        fun Load(ResourceName: String): PropertyEditorTestObject
        fun Find(Outer: UObject, ResourceName: String): PropertyEditorTestObject
        fun GetDefaultObject(): PropertyEditorTestObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): PropertyEditorTestObject
        fun C(Other: UObject): PropertyEditorTestObject
        fun C(Other: Any): PropertyEditorTestObject
    }
}

external open class BlueprintPropertyTestObject : UObject {
    constructor()
    constructor(Outer: UObject)
    open var ShouldBeHidden: Number
    open var ShouldBeVisible: Number

    companion object {
        fun Load(ResourceName: String): BlueprintPropertyTestObject
        fun Find(Outer: UObject, ResourceName: String): BlueprintPropertyTestObject
        fun GetDefaultObject(): BlueprintPropertyTestObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintPropertyTestObject
        fun C(Other: UObject): BlueprintPropertyTestObject
        fun C(Other: Any): BlueprintPropertyTestObject
    }
}

external open class BlueprintPropertyContainerTestObject : UObject {
    constructor()
    constructor(Outer: UObject)
    open var Array: Array<BlueprintPropertyTestObject>

    companion object {
        fun Load(ResourceName: String): BlueprintPropertyContainerTestObject
        fun Find(Outer: UObject, ResourceName: String): BlueprintPropertyContainerTestObject
        fun GetDefaultObject(): BlueprintPropertyContainerTestObject
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): BlueprintPropertyContainerTestObject
        fun C(Other: UObject): BlueprintPropertyContainerTestObject
        fun C(Other: Any): BlueprintPropertyContainerTestObject
    }
}

external open class TestSparseClassDataBase : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TestSparseClassDataBase
        fun Find(Outer: UObject, ResourceName: String): TestSparseClassDataBase
        fun GetDefaultObject(): TestSparseClassDataBase
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TestSparseClassDataBase
        fun C(Other: UObject): TestSparseClassDataBase
        fun C(Other: Any): TestSparseClassDataBase
    }
}

external open class TestSparseClassData : TestSparseClassDataBase {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): TestSparseClassData
        fun Find(Outer: UObject, ResourceName: String): TestSparseClassData
        fun GetDefaultObject(): TestSparseClassData
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TestSparseClassData
        fun C(Other: UObject): TestSparseClassData
        fun C(Other: Any): TestSparseClassData
    }
}

external open class ReimportCurveFactory : CSVImportFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ReimportCurveFactory
        fun Find(Outer: UObject, ResourceName: String): ReimportCurveFactory
        fun GetDefaultObject(): ReimportCurveFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ReimportCurveFactory
        fun C(Other: UObject): ReimportCurveFactory
        fun C(Other: Any): ReimportCurveFactory
    }
}

external open class ReimportCurveTableFactory : CSVImportFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ReimportCurveTableFactory
        fun Find(Outer: UObject, ResourceName: String): ReimportCurveTableFactory
        fun GetDefaultObject(): ReimportCurveTableFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ReimportCurveTableFactory
        fun C(Other: UObject): ReimportCurveTableFactory
        fun C(Other: Any): ReimportCurveTableFactory
    }
}

external open class ReimportDataTableFactory : CSVImportFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ReimportDataTableFactory
        fun Find(Outer: UObject, ResourceName: String): ReimportDataTableFactory
        fun GetDefaultObject(): ReimportDataTableFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ReimportDataTableFactory
        fun C(Other: UObject): ReimportDataTableFactory
        fun C(Other: Any): ReimportDataTableFactory
    }
}

external open class ReimportFbxAnimSequenceFactory : FbxFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ReimportFbxAnimSequenceFactory
        fun Find(Outer: UObject, ResourceName: String): ReimportFbxAnimSequenceFactory
        fun GetDefaultObject(): ReimportFbxAnimSequenceFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ReimportFbxAnimSequenceFactory
        fun C(Other: UObject): ReimportFbxAnimSequenceFactory
        fun C(Other: Any): ReimportFbxAnimSequenceFactory
    }
}

external open class ReimportFbxSceneFactory : FbxSceneImportFactory {
    constructor()
    constructor(Outer: UObject)
    open fun ScriptReimportHelper(Obj: UObject)

    companion object {
        fun Load(ResourceName: String): ReimportFbxSceneFactory
        fun Find(Outer: UObject, ResourceName: String): ReimportFbxSceneFactory
        fun GetDefaultObject(): ReimportFbxSceneFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ReimportFbxSceneFactory
        fun C(Other: UObject): ReimportFbxSceneFactory
        fun C(Other: Any): ReimportFbxSceneFactory
    }
}

external open class ReimportFbxSkeletalMeshFactory : FbxFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ReimportFbxSkeletalMeshFactory
        fun Find(Outer: UObject, ResourceName: String): ReimportFbxSkeletalMeshFactory
        fun GetDefaultObject(): ReimportFbxSkeletalMeshFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ReimportFbxSkeletalMeshFactory
        fun C(Other: UObject): ReimportFbxSkeletalMeshFactory
        fun C(Other: Any): ReimportFbxSkeletalMeshFactory
    }
}

external open class ReimportFbxStaticMeshFactory : FbxFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ReimportFbxStaticMeshFactory
        fun Find(Outer: UObject, ResourceName: String): ReimportFbxStaticMeshFactory
        fun GetDefaultObject(): ReimportFbxStaticMeshFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ReimportFbxStaticMeshFactory
        fun C(Other: UObject): ReimportFbxStaticMeshFactory
        fun C(Other: Any): ReimportFbxStaticMeshFactory
    }
}

external object ETextureSourceColorSpace {
    var Auto: String /* "Auto" */
    var Linear: String /* "Linear" */
    var SRGB: String /* "SRGB" */
    var ETextureSourceColorSpace_MAX: String /* "ETextureSourceColorSpace_MAX" */
}

external open class TextureFactory : Factory {
    constructor()
    constructor(Outer: UObject)
    open var NoCompression: Boolean
    open var NoAlpha: Boolean
    open var bDeferCompression: Boolean
    open var CompressionSettings: String /* "TC_Default" | "TC_Normalmap" | "TC_Masks" | "TC_Grayscale" | "TC_Displacementmap" | "TC_VectorDisplacementmap" | "TC_HDR" | "TC_EditorIcon" | "TC_Alpha" | "TC_DistanceFieldFont" | "TC_HDR_Compressed" | "TC_BC7" | "TC_HalfFloat" | "TC_EncodedReflectionCapture" | "TC_MAX" */
    open var bCreateMaterial: Boolean
    open var bRGBToBaseColor: Boolean
    open var bRGBToEmissive: Boolean
    open var bAlphaToRoughness: Boolean
    open var bAlphaToEmissive: Boolean
    open var bAlphaToOpacity: Boolean
    open var bAlphaToOpacityMask: Boolean
    open var bTwoSided: Boolean
    open var Blending: String /* "BLEND_Opaque" | "BLEND_Masked" | "BLEND_Translucent" | "BLEND_Additive" | "BLEND_Modulate" | "BLEND_AlphaComposite" | "BLEND_AlphaHoldout" | "BLEND_MAX" */
    open var ShadingModel: String /* "MSM_Unlit" | "MSM_DefaultLit" | "MSM_Subsurface" | "MSM_PreintegratedSkin" | "MSM_ClearCoat" | "MSM_SubsurfaceProfile" | "MSM_TwoSidedFoliage" | "MSM_Hair" | "MSM_Cloth" | "MSM_Eye" | "MSM_SingleLayerWater" | "MSM_ThinTranslucent" | "MSM_NUM" | "MSM_FromMaterialExpression" | "MSM_MAX" */
    open var MipGenSettings: String /* "TMGS_FromTextureGroup" | "TMGS_SimpleAverage" | "TMGS_Sharpen0" | "TMGS_Sharpen1" | "TMGS_Sharpen2" | "TMGS_Sharpen3" | "TMGS_Sharpen4" | "TMGS_Sharpen5" | "TMGS_Sharpen6" | "TMGS_Sharpen7" | "TMGS_Sharpen8" | "TMGS_Sharpen9" | "TMGS_Sharpen10" | "TMGS_NoMipmaps" | "TMGS_LeaveExistingMips" | "TMGS_Blur1" | "TMGS_Blur2" | "TMGS_Blur3" | "TMGS_Blur4" | "TMGS_Blur5" | "TMGS_Unfiltered" | "TMGS_MAX" */
    open var LODGroup: String /* "TEXTUREGROUP_World" | "TEXTUREGROUP_WorldNormalMap" | "TEXTUREGROUP_WorldSpecular" | "TEXTUREGROUP_Character" | "TEXTUREGROUP_CharacterNormalMap" | "TEXTUREGROUP_CharacterSpecular" | "TEXTUREGROUP_Weapon" | "TEXTUREGROUP_WeaponNormalMap" | "TEXTUREGROUP_WeaponSpecular" | "TEXTUREGROUP_Vehicle" | "TEXTUREGROUP_VehicleNormalMap" | "TEXTUREGROUP_VehicleSpecular" | "TEXTUREGROUP_Cinematic" | "TEXTUREGROUP_Effects" | "TEXTUREGROUP_EffectsNotFiltered" | "TEXTUREGROUP_Skybox" | "TEXTUREGROUP_UI" | "TEXTUREGROUP_Lightmap" | "TEXTUREGROUP_RenderTarget" | "TEXTUREGROUP_MobileFlattened" | "TEXTUREGROUP_ProcBuilding_Face" | "TEXTUREGROUP_ProcBuilding_LightMap" | "TEXTUREGROUP_Shadowmap" | "TEXTUREGROUP_ColorLookupTable" | "TEXTUREGROUP_Terrain_Heightmap" | "TEXTUREGROUP_Terrain_Weightmap" | "TEXTUREGROUP_Bokeh" | "TEXTUREGROUP_IESLightProfile" | "TEXTUREGROUP_Pixels2D" | "TEXTUREGROUP_HierarchicalLOD" | "TEXTUREGROUP_Impostor" | "TEXTUREGROUP_ImpostorNormalDepth" | "TEXTUREGROUP_8BitData" | "TEXTUREGROUP_16BitData" | "TEXTUREGROUP_Project01" | "TEXTUREGROUP_Project02" | "TEXTUREGROUP_Project03" | "TEXTUREGROUP_Project04" | "TEXTUREGROUP_Project05" | "TEXTUREGROUP_Project06" | "TEXTUREGROUP_Project07" | "TEXTUREGROUP_Project08" | "TEXTUREGROUP_Project09" | "TEXTUREGROUP_Project10" | "TEXTUREGROUP_Project11" | "TEXTUREGROUP_Project12" | "TEXTUREGROUP_Project13" | "TEXTUREGROUP_Project14" | "TEXTUREGROUP_Project15" | "TEXTUREGROUP_MAX" */
    open var bDitherMipMapAlpha: Boolean
    open var AlphaCoverageThresholds: Vector4
    open var bPreserveBorder: Boolean
    open var bFlipNormalMapGreenChannel: Boolean
    open var bUsingExistingSettings: Boolean
    open var bUseHashAsGuid: Boolean
    open var UdimRegexPattern: String
    open var ColorSpaceMode: String /* "Auto" | "Linear" | "SRGB" | "ETextureSourceColorSpace_MAX" */

    companion object {
        fun Load(ResourceName: String): TextureFactory
        fun Find(Outer: UObject, ResourceName: String): TextureFactory
        fun GetDefaultObject(): TextureFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): TextureFactory
        fun C(Other: UObject): TextureFactory
        fun C(Other: Any): TextureFactory
    }
}

external open class ReimportTextureFactory : TextureFactory {
    constructor()
    constructor(Outer: UObject)
    open var pOriginalTex: Texture

    companion object {
        fun Load(ResourceName: String): ReimportTextureFactory
        fun Find(Outer: UObject, ResourceName: String): ReimportTextureFactory
        fun GetDefaultObject(): ReimportTextureFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ReimportTextureFactory
        fun C(Other: UObject): ReimportTextureFactory
        fun C(Other: Any): ReimportTextureFactory
    }
}

external open class VectorFieldStaticFactory : Factory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): VectorFieldStaticFactory
        fun Find(Outer: UObject, ResourceName: String): VectorFieldStaticFactory
        fun GetDefaultObject(): VectorFieldStaticFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): VectorFieldStaticFactory
        fun C(Other: UObject): VectorFieldStaticFactory
        fun C(Other: Any): VectorFieldStaticFactory
    }
}

external open class ReimportVectorFieldStaticFactory : VectorFieldStaticFactory {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ReimportVectorFieldStaticFactory
        fun Find(Outer: UObject, ResourceName: String): ReimportVectorFieldStaticFactory
        fun GetDefaultObject(): ReimportVectorFieldStaticFactory
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ReimportVectorFieldStaticFactory
        fun C(Other: UObject): ReimportVectorFieldStaticFactory
        fun C(Other: Any): ReimportVectorFieldStaticFactory
    }
}

external open class RenderTargetExporterHDR : Exporter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): RenderTargetExporterHDR
        fun Find(Outer: UObject, ResourceName: String): RenderTargetExporterHDR
        fun GetDefaultObject(): RenderTargetExporterHDR
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): RenderTargetExporterHDR
        fun C(Other: UObject): RenderTargetExporterHDR
        fun C(Other: Any): RenderTargetExporterHDR
    }
}

external open class ReplaceActorCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ReplaceActorCommandlet
        fun Find(Outer: UObject, ResourceName: String): ReplaceActorCommandlet
        fun GetDefaultObject(): ReplaceActorCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ReplaceActorCommandlet
        fun C(Other: UObject): ReplaceActorCommandlet
        fun C(Other: Any): ReplaceActorCommandlet
    }
}

external open class ReplaceAssetsCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ReplaceAssetsCommandlet
        fun Find(Outer: UObject, ResourceName: String): ReplaceAssetsCommandlet
        fun GetDefaultObject(): ReplaceAssetsCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ReplaceAssetsCommandlet
        fun C(Other: UObject): ReplaceAssetsCommandlet
        fun C(Other: Any): ReplaceAssetsCommandlet
    }
}

external open class SavePackageUtilitiesCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SavePackageUtilitiesCommandlet
        fun Find(Outer: UObject, ResourceName: String): SavePackageUtilitiesCommandlet
        fun GetDefaultObject(): SavePackageUtilitiesCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SavePackageUtilitiesCommandlet
        fun C(Other: UObject): SavePackageUtilitiesCommandlet
        fun C(Other: Any): SavePackageUtilitiesCommandlet
    }
}

external open class SceneThumbnailInfo : ThumbnailInfo {
    constructor()
    constructor(Outer: UObject)
    open var OrbitPitch: Number
    open var OrbitYaw: Number
    open var OrbitZoom: Number

    companion object {
        fun Load(ResourceName: String): SceneThumbnailInfo
        fun Find(Outer: UObject, ResourceName: String): SceneThumbnailInfo
        fun GetDefaultObject(): SceneThumbnailInfo
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SceneThumbnailInfo
        fun C(Other: UObject): SceneThumbnailInfo
        fun C(Other: Any): SceneThumbnailInfo
    }
}

external object EThumbnailPrimType {
    var TPT_None: String /* "TPT_None" */
    var TPT_Sphere: String /* "TPT_Sphere" */
    var TPT_Cube: String /* "TPT_Cube" */
    var TPT_Plane: String /* "TPT_Plane" */
    var TPT_Cylinder: String /* "TPT_Cylinder" */
    var TPT_MAX: String /* "TPT_MAX" */
}

external open class SceneThumbnailInfoWithPrimitive : SceneThumbnailInfo {
    constructor()
    constructor(Outer: UObject)
    open var PrimitiveType: String /* "TPT_None" | "TPT_Sphere" | "TPT_Cube" | "TPT_Plane" | "TPT_Cylinder" | "TPT_MAX" */
    open var PreviewMesh: SoftObjectPath
    open var bUserModifiedShape: Boolean

    companion object {
        fun Load(ResourceName: String): SceneThumbnailInfoWithPrimitive
        fun Find(Outer: UObject, ResourceName: String): SceneThumbnailInfoWithPrimitive
        fun GetDefaultObject(): SceneThumbnailInfoWithPrimitive
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SceneThumbnailInfoWithPrimitive
        fun C(Other: UObject): SceneThumbnailInfoWithPrimitive
        fun C(Other: Any): SceneThumbnailInfoWithPrimitive
    }
}

external open class EditorViewportViewMenuContext : UObject {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): EditorViewportViewMenuContext
        fun Find(Outer: UObject, ResourceName: String): EditorViewportViewMenuContext
        fun GetDefaultObject(): EditorViewportViewMenuContext
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): EditorViewportViewMenuContext
        fun C(Other: UObject): EditorViewportViewMenuContext
        fun C(Other: Any): EditorViewportViewMenuContext
    }
}

external open class SequenceExporterT3D : Exporter {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): SequenceExporterT3D
        fun Find(Outer: UObject, ResourceName: String): SequenceExporterT3D
        fun GetDefaultObject(): SequenceExporterT3D
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SequenceExporterT3D
        fun C(Other: UObject): SequenceExporterT3D
        fun C(Other: Any): SequenceExporterT3D
    }
}

external open class ShaderCodeLibraryToolsCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ShaderCodeLibraryToolsCommandlet
        fun Find(Outer: UObject, ResourceName: String): ShaderCodeLibraryToolsCommandlet
        fun GetDefaultObject(): ShaderCodeLibraryToolsCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ShaderCodeLibraryToolsCommandlet
        fun C(Other: UObject): ShaderCodeLibraryToolsCommandlet
        fun C(Other: Any): ShaderCodeLibraryToolsCommandlet
    }
}

external open class ShaderPipelineCacheToolsCommandlet : Commandlet {
    constructor()
    constructor(Outer: UObject)

    companion object {
        fun Load(ResourceName: String): ShaderPipelineCacheToolsCommandlet
        fun Find(Outer: UObject, ResourceName: String): ShaderPipelineCacheToolsCommandlet
        fun GetDefaultObject(): ShaderPipelineCacheToolsCommandlet
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): ShaderPipelineCacheToolsCommandlet
        fun C(Other: UObject): ShaderPipelineCacheToolsCommandlet
        fun C(Other: Any): ShaderPipelineCacheToolsCommandlet
    }
}

external object ESheetAxis {
    var AX_Horizontal: String /* "AX_Horizontal" */
    var AX_XAxis: String /* "AX_XAxis" */
    var AX_YAxis: String /* "AX_YAxis" */
    var AX_MAX: String /* "AX_MAX" */
}

external open class SheetBuilder : EditorBrushBuilder {
    constructor()
    constructor(Outer: UObject)
    open var X: Number
    open var Y: Number
    open var XSegments: Number
    open var YSegments: Number
    open var Axis: String /* "AX_Horizontal" | "AX_XAxis" | "AX_YAxis" | "AX_MAX" */
    open var GroupName: String

    companion object {
        fun Load(ResourceName: String): SheetBuilder
        fun Find(Outer: UObject, ResourceName: String): SheetBuilder
        fun GetDefaultObject(): SheetBuilder
        fun CreateDefaultSubobject(Name: String, Transient: Boolean = definedExternally, Required: Boolean = definedExternally, Abstract: Boolean = definedExternally): SheetBuilder
        fun C(Other: UObject): SheetBuilder
        fun C(Other: Any): SheetBuilder
    }
}
