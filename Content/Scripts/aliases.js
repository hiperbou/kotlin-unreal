try { UObject.prototype.CastToClass = UObject.prototype.Conv_ObjectToClass; } catch (e) {};
try { UObject.prototype.ToString = UObject.prototype.Conv_SoftObjectReferenceToString; } catch (e) {};
try { UObject.prototype.ToSoftObjectPath = UObject.prototype.Conv_SoftObjRefToSoftObjPath; } catch (e) {};
try { UObject.prototype.Equal = UObject.prototype.EqualEqual_SoftObjectReference; } catch (e) {};
try { UObject.prototype.GetObjectPathString = UObject.prototype.GetPathName; } catch (e) {};
try { UObject.prototype.ClearTimerbyFunctionName = UObject.prototype.K2_ClearTimer; } catch (e) {};
try { UObject.prototype.GetTimerElapsedTimebyFunctionName = UObject.prototype.K2_GetTimerElapsedTime; } catch (e) {};
try { UObject.prototype.GetTimerRemainingTimebyFunctionName = UObject.prototype.K2_GetTimerRemainingTime; } catch (e) {};
try { UObject.prototype.IsTimerActivebyFunctionName = UObject.prototype.K2_IsTimerActive; } catch (e) {};
try { UObject.prototype.IsTimerPausedbyFunctionName = UObject.prototype.K2_IsTimerPaused; } catch (e) {};
try { UObject.prototype.PauseTimerbyFunctionName = UObject.prototype.K2_PauseTimer; } catch (e) {};
try { UObject.prototype.SetTimerbyFunctionName = UObject.prototype.K2_SetTimer; } catch (e) {};
try { UObject.prototype.SetTimerforNextTickbyFunctionName = UObject.prototype.K2_SetTimerForNextTick; } catch (e) {};
try { UObject.prototype.DoesTimerExistbyFunctionName = UObject.prototype.K2_TimerExists; } catch (e) {};
try { UObject.prototype.UnpauseTimerbyFunctionName = UObject.prototype.K2_UnPauseTimer; } catch (e) {};
try { UObject.prototype.NotEqual = UObject.prototype.NotEqual_SoftObjectReference; } catch (e) {};
try { UObject.prototype.ToString = UObject.prototype.Conv_ObjectToString; } catch (e) {};
try { UObject.prototype.Equal = UObject.prototype.EqualEqual_ObjectObject; } catch (e) {};
try { UObject.prototype.NotEqual = UObject.prototype.NotEqual_ObjectObject; } catch (e) {};
try { UObject.prototype.GetClass = UObject.prototype.GetObjectClass; } catch (e) {};
try { UObject.prototype.IsA = UObject.prototype.ObjectIsA; } catch (e) {};
try { UObject.prototype.AcquireEditorObjectElementHandle = UObject.prototype.K2_AcquireEditorObjectElementHandle; } catch (e) {};
try { UObject.prototype.ToText = UObject.prototype.Conv_ObjectToText; } catch (e) {};
try { ScriptStruct.prototype.GetStructPathName = ScriptStruct.prototype.GetStructTopLevelAssetPath; } catch (e) {};
try { Class.prototype.ToString = Class.prototype.Conv_SoftClassReferenceToString; } catch (e) {};
try { Class.prototype.ToSoftClassPath = Class.prototype.Conv_SoftObjRefToSoftClassPath; } catch (e) {};
try { Class.prototype.Equal = Class.prototype.EqualEqual_SoftClassReference; } catch (e) {};
try { Class.prototype.GetClassPathName = Class.prototype.GetClassTopLevelAssetPath; } catch (e) {};
try { Class.prototype.NotEqual = Class.prototype.NotEqual_SoftClassReference; } catch (e) {};
try { Class.prototype.Equal = Class.prototype.EqualEqual_ClassClass; } catch (e) {};
try { Class.prototype.NotEqual = Class.prototype.NotEqual_ClassClass; } catch (e) {};
try { Enum.prototype.GetEnumPathName = Enum.prototype.GetEnumTopLevelAssetPath; } catch (e) {};
try { let fnprepatch_0 = TypedElementListLibrary.prototype.HasElements;TypedElementListLibrary.prototype.HasElements = function (ElementList, BaseInterfaceType = null) { return fnprepatch_0.call(this, ElementList, BaseInterfaceType) }; } catch (e) {};
try { let fnprepatch_1 = TypedElementListLibrary.prototype.Empty;TypedElementListLibrary.prototype.Empty = function (ElementList, Slack = 0) { return fnprepatch_1.call(this, ElementList, Slack) }; } catch (e) {};
try { let fnprepatch_2 = TypedElementListLibrary.prototype.CountElements;TypedElementListLibrary.prototype.CountElements = function (ElementList, BaseInterfaceType = null) { return fnprepatch_2.call(this, ElementList, BaseInterfaceType) }; } catch (e) {};
try { TypedElementListLibrary.prototype.CreateElementList = TypedElementListLibrary.prototype.CreateScriptElementList; } catch (e) {};
try { TypedElementListLibrary.CreateElementList = TypedElementListLibrary.CreateScriptElementList; } catch (e) {};
try { TypedElementRegistry.prototype.GetDefaultTypedElementRegistry = TypedElementRegistry.prototype.GetInstance; } catch (e) {};
try { TypedElementRegistry.GetDefaultTypedElementRegistry = TypedElementRegistry.GetInstance; } catch (e) {};
try { let fnprepatch_3 = TestTypedElementInterfaceA.prototype.SetDisplayName;TestTypedElementInterfaceA.prototype.SetDisplayName = function (InElementHandle, InNewName, bNotify = true) { return fnprepatch_3.call(this, InElementHandle, InNewName, bNotify) }; } catch (e) {};
try { let fnprepatch_4 = TypedElementSelectionSet.prototype.K2_GetSelectedElementHandles;TypedElementSelectionSet.prototype.K2_GetSelectedElementHandles = function (InBaseInterfaceType = null) { return fnprepatch_4.call(this, InBaseInterfaceType) }; } catch (e) {};
try { let fnprepatch_5 = TypedElementSelectionSet.prototype.HasSelectedObjects;TypedElementSelectionSet.prototype.HasSelectedObjects = function (InRequiredClass = null) { return fnprepatch_5.call(this, InRequiredClass) }; } catch (e) {};
try { let fnprepatch_6 = TypedElementSelectionSet.prototype.HasSelectedElements;TypedElementSelectionSet.prototype.HasSelectedElements = function (InBaseInterfaceType = null) { return fnprepatch_6.call(this, InBaseInterfaceType) }; } catch (e) {};
try { let fnprepatch_7 = TypedElementSelectionSet.prototype.GetTopSelectedObject;TypedElementSelectionSet.prototype.GetTopSelectedObject = function (InRequiredClass = null) { return fnprepatch_7.call(this, InRequiredClass) }; } catch (e) {};
try { let fnprepatch_8 = TypedElementSelectionSet.prototype.GetSelectedObjects;TypedElementSelectionSet.prototype.GetSelectedObjects = function (InRequiredClass = null) { return fnprepatch_8.call(this, InRequiredClass) }; } catch (e) {};
try { let fnprepatch_9 = TypedElementSelectionSet.prototype.GetBottomSelectedObject;TypedElementSelectionSet.prototype.GetBottomSelectedObject = function (InRequiredClass = null) { return fnprepatch_9.call(this, InRequiredClass) }; } catch (e) {};
try { let fnprepatch_10 = TypedElementSelectionSet.prototype.CountSelectedObjects;TypedElementSelectionSet.prototype.CountSelectedObjects = function (InRequiredClass = null) { return fnprepatch_10.call(this, InRequiredClass) }; } catch (e) {};
try { let fnprepatch_11 = TypedElementSelectionSet.prototype.CountSelectedElements;TypedElementSelectionSet.prototype.CountSelectedElements = function (InBaseInterfaceType = null) { return fnprepatch_11.call(this, InBaseInterfaceType) }; } catch (e) {};
try { TypedElementSelectionSet.prototype.GetSelectedElementHandles = TypedElementSelectionSet.prototype.K2_GetSelectedElementHandles; } catch (e) {};
try { let fnprepatch_12 = TypedElementHierarchyInterface.prototype.GetParentElement;TypedElementHierarchyInterface.prototype.GetParentElement = function (InElementHandle, bAllowCreate = true) { return fnprepatch_12.call(this, InElementHandle, bAllowCreate) }; } catch (e) {};
try { let fnprepatch_13 = TypedElementHierarchyInterface.prototype.GetChildElements;TypedElementHierarchyInterface.prototype.GetChildElements = function (InElementHandle, OutElementHandles, bAllowCreate = true) { return fnprepatch_13.call(this, InElementHandle, OutElementHandles, bAllowCreate) }; } catch (e) {};
try { let fnprepatch_14 = TypedElementPrimitiveCustomDataInterface.prototype.SetCustomDataValue;TypedElementPrimitiveCustomDataInterface.prototype.SetCustomDataValue = function (InElementHandle, CustomDataIndex, CustomDataValue, bMarkRenderStateDirty = false) { return fnprepatch_14.call(this, InElementHandle, CustomDataIndex, CustomDataValue, bMarkRenderStateDirty) }; } catch (e) {};
try { let fnprepatch_15 = TypedElementPrimitiveCustomDataInterface.prototype.SetCustomData;TypedElementPrimitiveCustomDataInterface.prototype.SetCustomData = function (InElementHandle, CustomDataFloats, bMarkRenderStateDirty = false) { return fnprepatch_15.call(this, InElementHandle, CustomDataFloats, bMarkRenderStateDirty) }; } catch (e) {};
try { let fnprepatch_16 = AssetRegistryHelpers.prototype.CreateAssetData;AssetRegistryHelpers.prototype.CreateAssetData = function (InAsset, bAllowBlueprintClass = false) { return fnprepatch_16.call(this, InAsset, bAllowBlueprintClass) }; } catch (e) {};
try { AssetRegistryHelpers.prototype.IsValidAssetData = AssetRegistryHelpers.prototype.IsValid; } catch (e) {};
try { AssetRegistryHelpers.IsValidAssetData = AssetRegistryHelpers.IsValid; } catch (e) {};
try { let fnprepatch_17 = AssetRegistry.prototype.ScanPathsSynchronous;AssetRegistry.prototype.ScanPathsSynchronous = function (InPaths, bForceRescan = false, bIgnoreDenyListScanFilters = false) { return fnprepatch_17.call(this, InPaths, bForceRescan, bIgnoreDenyListScanFilters) }; } catch (e) {};
try { let fnprepatch_18 = AssetRegistry.prototype.ScanFilesSynchronous;AssetRegistry.prototype.ScanFilesSynchronous = function (InFilePaths, bForceRescan = false) { return fnprepatch_18.call(this, InFilePaths, bForceRescan) }; } catch (e) {};
try { let fnprepatch_19 = AssetRegistry.prototype.K2_GetAssetByObjectPath;AssetRegistry.prototype.K2_GetAssetByObjectPath = function (ObjectPath, bIncludeOnlyOnDiskAssets = false, bSkipARFilteredAssets = true) { return fnprepatch_19.call(this, ObjectPath, bIncludeOnlyOnDiskAssets, bSkipARFilteredAssets) }; } catch (e) {};
try { let fnprepatch_20 = AssetRegistry.prototype.HasAssets;AssetRegistry.prototype.HasAssets = function (PackagePath, bRecursive = false) { return fnprepatch_20.call(this, PackagePath, bRecursive) }; } catch (e) {};
try { let fnprepatch_21 = AssetRegistry.prototype.GetAssetsByPaths;AssetRegistry.prototype.GetAssetsByPaths = function (PackagePaths, OutAssetData, bRecursive = false, bIncludeOnlyOnDiskAssets = false) { return fnprepatch_21.call(this, PackagePaths, OutAssetData, bRecursive, bIncludeOnlyOnDiskAssets) }; } catch (e) {};
try { let fnprepatch_22 = AssetRegistry.prototype.GetAssetsByPath;AssetRegistry.prototype.GetAssetsByPath = function (PackagePath, OutAssetData, bRecursive = false, bIncludeOnlyOnDiskAssets = false) { return fnprepatch_22.call(this, PackagePath, OutAssetData, bRecursive, bIncludeOnlyOnDiskAssets) }; } catch (e) {};
try { let fnprepatch_23 = AssetRegistry.prototype.GetAssetsByPackageName;AssetRegistry.prototype.GetAssetsByPackageName = function (PackageName, OutAssetData, bIncludeOnlyOnDiskAssets = false, bSkipARFilteredAssets = true) { return fnprepatch_23.call(this, PackageName, OutAssetData, bIncludeOnlyOnDiskAssets, bSkipARFilteredAssets) }; } catch (e) {};
try { let fnprepatch_24 = AssetRegistry.prototype.GetAssetsByClass;AssetRegistry.prototype.GetAssetsByClass = function (ClassPathName, OutAssetData, bSearchSubClasses = false) { return fnprepatch_24.call(this, ClassPathName, OutAssetData, bSearchSubClasses) }; } catch (e) {};
try { let fnprepatch_25 = AssetRegistry.prototype.GetAssets;AssetRegistry.prototype.GetAssets = function (Filter, OutAssetData, bSkipARFilteredAssets = true) { return fnprepatch_25.call(this, Filter, OutAssetData, bSkipARFilteredAssets) }; } catch (e) {};
try { let fnprepatch_26 = AssetRegistry.prototype.GetAssetByObjectPath;AssetRegistry.prototype.GetAssetByObjectPath = function (ObjectPath, bIncludeOnlyOnDiskAssets = false) { return fnprepatch_26.call(this, ObjectPath, bIncludeOnlyOnDiskAssets) }; } catch (e) {};
try { let fnprepatch_27 = AssetRegistry.prototype.GetAllAssets;AssetRegistry.prototype.GetAllAssets = function (OutAssetData, bIncludeOnlyOnDiskAssets = false) { return fnprepatch_27.call(this, OutAssetData, bIncludeOnlyOnDiskAssets) }; } catch (e) {};
try { AssetRegistry.prototype.GetReferencers = AssetRegistry.prototype.K2_GetReferencers; } catch (e) {};
try { AssetRegistry.prototype.GetDependencies = AssetRegistry.prototype.K2_GetDependencies; } catch (e) {};
try { AssetRegistry.prototype.GetAssetByObjectPath = AssetRegistry.prototype.K2_GetAssetByObjectPath; } catch (e) {};
try { let fnprepatch_28 = GameMapsSettings.prototype.SetSkipAssigningGamepadToPlayer1;GameMapsSettings.prototype.SetSkipAssigningGamepadToPlayer1 = function (bSkipFirstPlayer = true) { return fnprepatch_28.call(this, bSkipFirstPlayer) }; } catch (e) {};
try { GameMapsSettings.prototype.GetGameMapsandModesSettings = GameMapsSettings.prototype.GetGameMapsSettings; } catch (e) {};
try { GameMapsSettings.GetGameMapsandModesSettings = GameMapsSettings.GetGameMapsSettings; } catch (e) {};
try { let fnprepatch_29 = StaticMeshDescription.prototype.SetVertexInstanceUV;StaticMeshDescription.prototype.SetVertexInstanceUV = function (VertexInstanceID, UV, UVIndex = 0) { return fnprepatch_29.call(this, VertexInstanceID, UV, UVIndex) }; } catch (e) {};
try { let fnprepatch_30 = StaticMeshDescription.prototype.GetVertexInstanceUV;StaticMeshDescription.prototype.GetVertexInstanceUV = function (VertexInstanceID, UVIndex = 0) { return fnprepatch_30.call(this, VertexInstanceID, UVIndex) }; } catch (e) {};
try { AudioParameterControllerInterface.prototype.ExecuteTriggerParameter = AudioParameterControllerInterface.prototype.SetTriggerParameter; } catch (e) {};
try { AudioParameterControllerInterface.prototype.SetParameters = AudioParameterControllerInterface.prototype.SetParameters_Blueprint; } catch (e) {};
try { AudioParameterControllerInterface.prototype.SetIntegerParameter = AudioParameterControllerInterface.prototype.SetIntParameter; } catch (e) {};
try { AudioParameterControllerInterface.prototype.SetIntegerArrayParameter = AudioParameterControllerInterface.prototype.SetIntArrayParameter; } catch (e) {};
try { AudioParameterControllerInterface.prototype.SetBooleanParameter = AudioParameterControllerInterface.prototype.SetBoolParameter; } catch (e) {};
try { AudioParameterControllerInterface.prototype.SetBooleanArrayParameter = AudioParameterControllerInterface.prototype.SetBoolArrayParameter; } catch (e) {};
try { let fnprepatch_31 = ClothingSimulationInteractor.prototype.SetNumSubsteps;ClothingSimulationInteractor.prototype.SetNumSubsteps = function (NumSubsteps = 1) { return fnprepatch_31.call(this, NumSubsteps) }; } catch (e) {};
try { let fnprepatch_32 = ClothingSimulationInteractor.prototype.SetNumIterations;ClothingSimulationInteractor.prototype.SetNumIterations = function (NumIterations = 1) { return fnprepatch_32.call(this, NumIterations) }; } catch (e) {};
try { let fnprepatch_33 = ClothingSimulationInteractor.prototype.SetMaxNumIterations;ClothingSimulationInteractor.prototype.SetMaxNumIterations = function (MaxNumIterations = 10) { return fnprepatch_33.call(this, MaxNumIterations) }; } catch (e) {};
try { let fnprepatch_34 = ToolMenu.prototype.InitMenu;ToolMenu.prototype.InitMenu = function (Owner, Name, Parent = "None", Type = "MenuBar") { return fnprepatch_34.call(this, Owner, Name, Parent, Type) }; } catch (e) {};
try { let fnprepatch_35 = ToolMenu.prototype.AddSectionScript;ToolMenu.prototype.AddSectionScript = function (SectionName, Label, InsertName = "None", InsertType = "Default") { return fnprepatch_35.call(this, SectionName, Label, InsertName, InsertType) }; } catch (e) {};
try { ToolMenu.prototype.AddSection = ToolMenu.prototype.AddSectionScript; } catch (e) {};
try { ToolMenu.prototype.AddDynamicSection = ToolMenu.prototype.AddDynamicSectionScript; } catch (e) {};
try { let fnprepatch_36 = ToolMenus.prototype.RegisterMenu;ToolMenus.prototype.RegisterMenu = function (Name, Parent = "None", Type = "MenuBar", bWarnIfAlreadyRegistered = true) { return fnprepatch_36.call(this, Name, Parent, Type, bWarnIfAlreadyRegistered) }; } catch (e) {};
try { let fnprepatch_37 = ToolMenuEntryExtensions.prototype.SetIcon;ToolMenuEntryExtensions.prototype.SetIcon = function (Target, StyleSetName, StyleName = "None", SmallStyleName = "None") { return fnprepatch_37.call(this, Target, StyleSetName, StyleName, SmallStyleName) }; } catch (e) {};
try { let fnprepatch_38 = ToolMenuEntryExtensions.prototype.MakeScriptSlateIcon;ToolMenuEntryExtensions.prototype.MakeScriptSlateIcon = function (StyleSetName, StyleName, SmallStyleName = "None") { return fnprepatch_38.call(this, StyleSetName, StyleName, SmallStyleName) }; } catch (e) {};
try { let fnprepatch_39 = UserDefinedImageCaptureProtocol.prototype.WriteImageToDisk;UserDefinedImageCaptureProtocol.prototype.WriteImageToDisk = function (PixelData, StreamID, FrameMetrics, bCopyImageData = false) { return fnprepatch_39.call(this, PixelData, StreamID, FrameMetrics, bCopyImageData) }; } catch (e) {};
try { let fnprepatch_40 = Actor.prototype.WasRecentlyRendered;Actor.prototype.WasRecentlyRendered = function (Tolerance = 0.20000000298023224) { return fnprepatch_40.call(this, Tolerance) }; } catch (e) {};
try { let fnprepatch_41 = Actor.prototype.SetActorLabel;Actor.prototype.SetActorLabel = function (NewActorLabel, bMarkDirty = true) { return fnprepatch_41.call(this, NewActorLabel, bMarkDirty) }; } catch (e) {};
try { let fnprepatch_42 = Actor.prototype.PrestreamTextures;Actor.prototype.PrestreamTextures = function (Seconds, bEnableStreaming, CinematicTextureGroups = 0) { return fnprepatch_42.call(this, Seconds, bEnableStreaming, CinematicTextureGroups) }; } catch (e) {};
try { let fnprepatch_43 = Actor.prototype.MakeNoise;Actor.prototype.MakeNoise = function (Loudness = 1, NoiseInstigator = undefined, NoiseLocation, MaxRange = 0, Tag = "None") { return fnprepatch_43.call(this, Loudness, NoiseInstigator, NoiseLocation, MaxRange, Tag) }; } catch (e) {};
try { let fnprepatch_44 = Actor.prototype.K2_DetachFromActor;Actor.prototype.K2_DetachFromActor = function (LocationRule = "KeepRelative", RotationRule = "KeepRelative", ScaleRule = "KeepRelative") { return fnprepatch_44.call(this, LocationRule, RotationRule, ScaleRule) }; } catch (e) {};
try { let fnprepatch_45 = Actor.prototype.K2_AttachRootComponentToActor;Actor.prototype.K2_AttachRootComponentToActor = function (InParentActor, InSocketName = "None", AttachLocationType = "KeepRelativeOffset", bWeldSimulatedBodies = true) { return fnprepatch_45.call(this, InParentActor, InSocketName, AttachLocationType, bWeldSimulatedBodies) }; } catch (e) {};
try { let fnprepatch_46 = Actor.prototype.K2_AttachRootComponentTo;Actor.prototype.K2_AttachRootComponentTo = function (InParent, InSocketName = "None", AttachLocationType = "KeepRelativeOffset", bWeldSimulatedBodies = true) { return fnprepatch_46.call(this, InParent, InSocketName, AttachLocationType, bWeldSimulatedBodies) }; } catch (e) {};
try { let fnprepatch_47 = Actor.prototype.IsTemporarilyHiddenInEditor;Actor.prototype.IsTemporarilyHiddenInEditor = function (bIncludeParent = false) { return fnprepatch_47.call(this, bIncludeParent) }; } catch (e) {};
try { let fnprepatch_48 = Actor.prototype.GetOverlappingActors;Actor.prototype.GetOverlappingActors = function (OverlappingActors, ClassFilter = null) { return fnprepatch_48.call(this, OverlappingActors, ClassFilter) }; } catch (e) {};
try { let fnprepatch_49 = Actor.prototype.GetAttachedActors;Actor.prototype.GetAttachedActors = function (OutActors, bResetArray = true, bRecursivelyIncludeAttachedActors = false) { return fnprepatch_49.call(this, OutActors, bResetArray, bRecursivelyIncludeAttachedActors) }; } catch (e) {};
try { let fnprepatch_50 = Actor.prototype.GetAllChildActors;Actor.prototype.GetAllChildActors = function (ChildActors, bIncludeDescendants = true) { return fnprepatch_50.call(this, ChildActors, bIncludeDescendants) }; } catch (e) {};
try { let fnprepatch_51 = Actor.prototype.GetActorLabel;Actor.prototype.GetActorLabel = function (bCreateIfNone = true) { return fnprepatch_51.call(this, bCreateIfNone) }; } catch (e) {};
try { let fnprepatch_52 = Actor.prototype.GetActorBounds;Actor.prototype.GetActorBounds = function (bOnlyCollidingComponents, Origin, BoxExtent, bIncludeFromChildActors = false) { return fnprepatch_52.call(this, bOnlyCollidingComponents, Origin, BoxExtent, bIncludeFromChildActors) }; } catch (e) {};
try { let fnprepatch_53 = Actor.prototype.DetachRootComponentFromParent;Actor.prototype.DetachRootComponentFromParent = function (bMaintainWorldPosition = true) { return fnprepatch_53.call(this, bMaintainWorldPosition) }; } catch (e) {};
try { let fnprepatch_54 = Actor.prototype.AddComponent;Actor.prototype.AddComponent = function (TemplateName, bManualAttachment, RelativeTransform, ComponentTemplateContext, bDeferredFinish = false) { return fnprepatch_54.call(this, TemplateName, bManualAttachment, RelativeTransform, ComponentTemplateContext, bDeferredFinish) }; } catch (e) {};
try { Actor.prototype.AcquireEditorActorElementHandle = Actor.prototype.K2_AcquireEditorActorElementHandle; } catch (e) {};
try { Actor.prototype.WasActorRecentlyRendered = Actor.prototype.WasRecentlyRendered; } catch (e) {};
try { Actor.prototype.ConstructionScript = Actor.prototype.UserConstructionScript; } catch (e) {};
try { Actor.prototype.Tick = Actor.prototype.ReceiveTick; } catch (e) {};
try { Actor.prototype.RadialDamage = Actor.prototype.ReceiveRadialDamage; } catch (e) {};
try { Actor.prototype.PointDamage = Actor.prototype.ReceivePointDamage; } catch (e) {};
try { Actor.prototype.Hit = Actor.prototype.ReceiveHit; } catch (e) {};
try { Actor.prototype.EndPlay = Actor.prototype.ReceiveEndPlay; } catch (e) {};
try { Actor.prototype.Destroyed = Actor.prototype.ReceiveDestroyed; } catch (e) {};
try { Actor.prototype.BeginPlay = Actor.prototype.ReceiveBeginPlay; } catch (e) {};
try { Actor.prototype.AsyncPhysicsTick = Actor.prototype.ReceiveAsyncPhysicsTick; } catch (e) {};
try { Actor.prototype.AnyDamage = Actor.prototype.ReceiveAnyDamage; } catch (e) {};
try { Actor.prototype.ActorOnReleased = Actor.prototype.ReceiveActorOnReleased; } catch (e) {};
try { Actor.prototype.TouchLeave = Actor.prototype.ReceiveActorOnInputTouchLeave; } catch (e) {};
try { Actor.prototype.TouchEnter = Actor.prototype.ReceiveActorOnInputTouchEnter; } catch (e) {};
try { Actor.prototype.EndInputTouch = Actor.prototype.ReceiveActorOnInputTouchEnd; } catch (e) {};
try { Actor.prototype.BeginInputTouch = Actor.prototype.ReceiveActorOnInputTouchBegin; } catch (e) {};
try { Actor.prototype.ActorOnClicked = Actor.prototype.ReceiveActorOnClicked; } catch (e) {};
try { Actor.prototype.ActorEndOverlap = Actor.prototype.ReceiveActorEndOverlap; } catch (e) {};
try { Actor.prototype.ActorEndCursorOver = Actor.prototype.ReceiveActorEndCursorOver; } catch (e) {};
try { Actor.prototype.ActorBeginOverlap = Actor.prototype.ReceiveActorBeginOverlap; } catch (e) {};
try { Actor.prototype.ActorBeginCursorOver = Actor.prototype.ReceiveActorBeginCursorOver; } catch (e) {};
try { Actor.prototype.Teleport = Actor.prototype.K2_TeleportTo; } catch (e) {};
try { Actor.prototype.SetActorTransform = Actor.prototype.K2_SetActorTransform; } catch (e) {};
try { Actor.prototype.SetActorRotation = Actor.prototype.K2_SetActorRotation; } catch (e) {};
try { Actor.prototype.SetActorRelativeTransform = Actor.prototype.K2_SetActorRelativeTransform; } catch (e) {};
try { Actor.prototype.SetActorRelativeRotation = Actor.prototype.K2_SetActorRelativeRotation; } catch (e) {};
try { Actor.prototype.SetActorRelativeLocation = Actor.prototype.K2_SetActorRelativeLocation; } catch (e) {};
try { Actor.prototype.SetActorLocationAndRotation = Actor.prototype.K2_SetActorLocationAndRotation; } catch (e) {};
try { Actor.prototype.SetActorLocation = Actor.prototype.K2_SetActorLocation; } catch (e) {};
try { Actor.prototype.OnReset = Actor.prototype.K2_OnReset; } catch (e) {};
try { Actor.prototype.OnEndViewTarget = Actor.prototype.K2_OnEndViewTarget; } catch (e) {};
try { Actor.prototype.OnBecomeViewTarget = Actor.prototype.K2_OnBecomeViewTarget; } catch (e) {};
try { Actor.prototype.GetComponentsByClass = Actor.prototype.K2_GetComponentsByClass; } catch (e) {};
try { Actor.prototype.GetActorRotation = Actor.prototype.K2_GetActorRotation; } catch (e) {};
try { Actor.prototype.GetActorLocation = Actor.prototype.K2_GetActorLocation; } catch (e) {};
try { Actor.prototype.DetachFromActor = Actor.prototype.K2_DetachFromActor; } catch (e) {};
try { Actor.prototype.DestroyActor = Actor.prototype.K2_DestroyActor; } catch (e) {};
try { Actor.prototype.AttachActorToComponent = Actor.prototype.K2_AttachToComponent; } catch (e) {};
try { Actor.prototype.AttachActorToActor = Actor.prototype.K2_AttachToActor; } catch (e) {};
try { Actor.prototype.AttachRootComponentToActor = Actor.prototype.K2_AttachRootComponentToActor; } catch (e) {};
try { Actor.prototype.AttachRootComponentTo = Actor.prototype.K2_AttachRootComponentTo; } catch (e) {};
try { Actor.prototype.AddActorWorldTransformKeepScale = Actor.prototype.K2_AddActorWorldTransformKeepScale; } catch (e) {};
try { Actor.prototype.AddActorWorldTransform = Actor.prototype.K2_AddActorWorldTransform; } catch (e) {};
try { Actor.prototype.AddActorWorldRotation = Actor.prototype.K2_AddActorWorldRotation; } catch (e) {};
try { Actor.prototype.AddActorWorldOffset = Actor.prototype.K2_AddActorWorldOffset; } catch (e) {};
try { Actor.prototype.AddActorLocalTransform = Actor.prototype.K2_AddActorLocalTransform; } catch (e) {};
try { Actor.prototype.AddActorLocalRotation = Actor.prototype.K2_AddActorLocalRotation; } catch (e) {};
try { Actor.prototype.AddActorLocalOffset = Actor.prototype.K2_AddActorLocalOffset; } catch (e) {};
try { Actor.prototype.GetActorTransform = Actor.prototype.GetTransform; } catch (e) {};
try { Actor.prototype.DetachActorFromActor = Actor.prototype.DetachRootComponentFromParent; } catch (e) {};
try { let fnprepatch_55 = SequencerOutlinerScriptingObject.prototype.GetChildren;SequencerOutlinerScriptingObject.prototype.GetChildren = function (Node, TypeName = "None") { return fnprepatch_55.call(this, Node, TypeName) }; } catch (e) {};
try { let fnprepatch_56 = Widget.prototype.HasMouseCaptureByUser;Widget.prototype.HasMouseCaptureByUser = function (UserIndex, PointerIndex = -1) { return fnprepatch_56.call(this, UserIndex, PointerIndex) }; } catch (e) {};
try { Widget.prototype.BroadcastFieldValueChanged = Widget.prototype.K2_BroadcastFieldValueChanged; } catch (e) {};
try { Widget.prototype.HasAnyUserFocusedDescendants = Widget.prototype.HasFocusedDescendants; } catch (e) {};
try { let fnprepatch_57 = UserWidget.prototype.SetPositionInViewport;UserWidget.prototype.SetPositionInViewport = function (Position, bRemoveDPIScale = true) { return fnprepatch_57.call(this, Position, bRemoveDPIScale) }; } catch (e) {};
try { let fnprepatch_58 = UserWidget.prototype.SetPlaybackSpeed;UserWidget.prototype.SetPlaybackSpeed = function (InAnimation, PlaybackSpeed = 1) { return fnprepatch_58.call(this, InAnimation, PlaybackSpeed) }; } catch (e) {};
try { let fnprepatch_59 = UserWidget.prototype.PlayAnimationTimeRange;UserWidget.prototype.PlayAnimationTimeRange = function (InAnimation, StartAtTime = 0, EndAtTime = 0, NumLoopsToPlay = 1, PlayMode = "Forward", PlaybackSpeed = 1, bRestoreState = false) { return fnprepatch_59.call(this, InAnimation, StartAtTime, EndAtTime, NumLoopsToPlay, PlayMode, PlaybackSpeed, bRestoreState) }; } catch (e) {};
try { let fnprepatch_60 = UserWidget.prototype.PlayAnimationReverse;UserWidget.prototype.PlayAnimationReverse = function (InAnimation, PlaybackSpeed = 1, bRestoreState = false) { return fnprepatch_60.call(this, InAnimation, PlaybackSpeed, bRestoreState) }; } catch (e) {};
try { let fnprepatch_61 = UserWidget.prototype.PlayAnimationForward;UserWidget.prototype.PlayAnimationForward = function (InAnimation, PlaybackSpeed = 1, bRestoreState = false) { return fnprepatch_61.call(this, InAnimation, PlaybackSpeed, bRestoreState) }; } catch (e) {};
try { let fnprepatch_62 = UserWidget.prototype.PlayAnimation;UserWidget.prototype.PlayAnimation = function (InAnimation, StartAtTime = 0, NumLoopsToPlay = 1, PlayMode = "Forward", PlaybackSpeed = 1, bRestoreState = false) { return fnprepatch_62.call(this, InAnimation, StartAtTime, NumLoopsToPlay, PlayMode, PlaybackSpeed, bRestoreState) }; } catch (e) {};
try { let fnprepatch_63 = UserWidget.prototype.BindToAnimationEvent;UserWidget.prototype.BindToAnimationEvent = function (Animation, Delegate, AnimationEvent, UserTag = "None") { return fnprepatch_63.call(this, Animation, Delegate, AnimationEvent, UserTag) }; } catch (e) {};
try { let fnprepatch_64 = UserWidget.prototype.AddToViewport;UserWidget.prototype.AddToViewport = function (ZOrder = 0) { return fnprepatch_64.call(this, ZOrder) }; } catch (e) {};
try { let fnprepatch_65 = UserWidget.prototype.AddToPlayerScreen;UserWidget.prototype.AddToPlayerScreen = function (ZOrder = 0) { return fnprepatch_65.call(this, ZOrder) }; } catch (e) {};
try { let fnprepatch_66 = ActorComponent.prototype.SetActive;ActorComponent.prototype.SetActive = function (bNewActive, bReset = false) { return fnprepatch_66.call(this, bNewActive, bReset) }; } catch (e) {};
try { let fnprepatch_67 = ActorComponent.prototype.Activate;ActorComponent.prototype.Activate = function (bReset = false) { return fnprepatch_67.call(this, bReset) }; } catch (e) {};
try { ActorComponent.prototype.AcquireEditorComponentElementHandle = ActorComponent.prototype.K2_AcquireEditorComponentElementHandle; } catch (e) {};
try { ActorComponent.prototype.Tick = ActorComponent.prototype.ReceiveTick; } catch (e) {};
try { ActorComponent.prototype.EndPlay = ActorComponent.prototype.ReceiveEndPlay; } catch (e) {};
try { ActorComponent.prototype.BeginPlay = ActorComponent.prototype.ReceiveBeginPlay; } catch (e) {};
try { ActorComponent.prototype.AsyncPhysicsTick = ActorComponent.prototype.ReceiveAsyncPhysicsTick; } catch (e) {};
try { ActorComponent.prototype.DestroyComponent = ActorComponent.prototype.K2_DestroyComponent; } catch (e) {};
try { ActorComponent.prototype.IsComponentBeingDestroyed = ActorComponent.prototype.IsBeingDestroyed; } catch (e) {};
try { let fnprepatch_68 = SceneComponent.prototype.ToggleVisibility;SceneComponent.prototype.ToggleVisibility = function (bPropagateToChildren = false) { return fnprepatch_68.call(this, bPropagateToChildren) }; } catch (e) {};
try { let fnprepatch_69 = SceneComponent.prototype.SetVisibility;SceneComponent.prototype.SetVisibility = function (bNewVisibility, bPropagateToChildren = false) { return fnprepatch_69.call(this, bNewVisibility, bPropagateToChildren) }; } catch (e) {};
try { let fnprepatch_70 = SceneComponent.prototype.SetHiddenInGame;SceneComponent.prototype.SetHiddenInGame = function (NewHidden, bPropagateToChildren = false) { return fnprepatch_70.call(this, NewHidden, bPropagateToChildren) }; } catch (e) {};
try { let fnprepatch_71 = SceneComponent.prototype.SetAbsolute;SceneComponent.prototype.SetAbsolute = function (bNewAbsoluteLocation = false, bNewAbsoluteRotation = false, bNewAbsoluteScale = false) { return fnprepatch_71.call(this, bNewAbsoluteLocation, bNewAbsoluteRotation, bNewAbsoluteScale) }; } catch (e) {};
try { let fnprepatch_72 = SceneComponent.prototype.K2_DetachFromComponent;SceneComponent.prototype.K2_DetachFromComponent = function (LocationRule = "KeepRelative", RotationRule = "KeepRelative", ScaleRule = "KeepRelative", bCallModify = true) { return fnprepatch_72.call(this, LocationRule, RotationRule, ScaleRule, bCallModify) }; } catch (e) {};
try { let fnprepatch_73 = SceneComponent.prototype.K2_AttachTo;SceneComponent.prototype.K2_AttachTo = function (InParent, InSocketName = "None", AttachType = "KeepRelativeOffset", bWeldSimulatedBodies = true) { return fnprepatch_73.call(this, InParent, InSocketName, AttachType, bWeldSimulatedBodies) }; } catch (e) {};
try { let fnprepatch_74 = SceneComponent.prototype.IsSimulatingPhysics;SceneComponent.prototype.IsSimulatingPhysics = function (BoneName = "None") { return fnprepatch_74.call(this, BoneName) }; } catch (e) {};
try { let fnprepatch_75 = SceneComponent.prototype.GetSocketTransform;SceneComponent.prototype.GetSocketTransform = function (InSocketName, TransformSpace = "RTS_World") { return fnprepatch_75.call(this, InSocketName, TransformSpace) }; } catch (e) {};
try { let fnprepatch_76 = SceneComponent.prototype.DetachFromParent;SceneComponent.prototype.DetachFromParent = function (bMaintainWorldPosition = false, bCallModify = true) { return fnprepatch_76.call(this, bMaintainWorldPosition, bCallModify) }; } catch (e) {};
try { SceneComponent.prototype.SetWorldTransform = SceneComponent.prototype.K2_SetWorldTransform; } catch (e) {};
try { SceneComponent.prototype.SetWorldRotation = SceneComponent.prototype.K2_SetWorldRotation; } catch (e) {};
try { SceneComponent.prototype.SetWorldLocationAndRotation = SceneComponent.prototype.K2_SetWorldLocationAndRotation; } catch (e) {};
try { SceneComponent.prototype.SetWorldLocation = SceneComponent.prototype.K2_SetWorldLocation; } catch (e) {};
try { SceneComponent.prototype.SetRelativeTransform = SceneComponent.prototype.K2_SetRelativeTransform; } catch (e) {};
try { SceneComponent.prototype.SetRelativeRotation = SceneComponent.prototype.K2_SetRelativeRotation; } catch (e) {};
try { SceneComponent.prototype.SetRelativeLocationAndRotation = SceneComponent.prototype.K2_SetRelativeLocationAndRotation; } catch (e) {};
try { SceneComponent.prototype.SetRelativeLocation = SceneComponent.prototype.K2_SetRelativeLocation; } catch (e) {};
try { SceneComponent.prototype.GetWorldTransform = SceneComponent.prototype.K2_GetComponentToWorld; } catch (e) {};
try { SceneComponent.prototype.GetWorldScale = SceneComponent.prototype.K2_GetComponentScale; } catch (e) {};
try { SceneComponent.prototype.GetWorldRotation = SceneComponent.prototype.K2_GetComponentRotation; } catch (e) {};
try { SceneComponent.prototype.GetWorldLocation = SceneComponent.prototype.K2_GetComponentLocation; } catch (e) {};
try { SceneComponent.prototype.DetachFromComponent = SceneComponent.prototype.K2_DetachFromComponent; } catch (e) {};
try { SceneComponent.prototype.AttachComponentToComponent = SceneComponent.prototype.K2_AttachToComponent; } catch (e) {};
try { SceneComponent.prototype.AttachTo = SceneComponent.prototype.K2_AttachTo; } catch (e) {};
try { SceneComponent.prototype.AddWorldTransformKeepScale = SceneComponent.prototype.K2_AddWorldTransformKeepScale; } catch (e) {};
try { SceneComponent.prototype.AddWorldTransform = SceneComponent.prototype.K2_AddWorldTransform; } catch (e) {};
try { SceneComponent.prototype.AddWorldRotation = SceneComponent.prototype.K2_AddWorldRotation; } catch (e) {};
try { SceneComponent.prototype.AddWorldOffset = SceneComponent.prototype.K2_AddWorldOffset; } catch (e) {};
try { SceneComponent.prototype.AddRelativeRotation = SceneComponent.prototype.K2_AddRelativeRotation; } catch (e) {};
try { SceneComponent.prototype.AddRelativeLocation = SceneComponent.prototype.K2_AddRelativeLocation; } catch (e) {};
try { SceneComponent.prototype.AddLocalTransform = SceneComponent.prototype.K2_AddLocalTransform; } catch (e) {};
try { SceneComponent.prototype.AddLocalRotation = SceneComponent.prototype.K2_AddLocalRotation; } catch (e) {};
try { SceneComponent.prototype.AddLocalOffset = SceneComponent.prototype.K2_AddLocalOffset; } catch (e) {};
try { let fnprepatch_77 = PrimitiveComponent.prototype.WasRecentlyRendered;PrimitiveComponent.prototype.WasRecentlyRendered = function (Tolerance = 0.20000000298023224) { return fnprepatch_77.call(this, Tolerance) }; } catch (e) {};
try { let fnprepatch_78 = PrimitiveComponent.prototype.WakeRigidBody;PrimitiveComponent.prototype.WakeRigidBody = function (BoneName = "None") { return fnprepatch_78.call(this, BoneName) }; } catch (e) {};
try { let fnprepatch_79 = PrimitiveComponent.prototype.SetUseCCD;PrimitiveComponent.prototype.SetUseCCD = function (InUseCCD, BoneName = "None") { return fnprepatch_79.call(this, InUseCCD, BoneName) }; } catch (e) {};
try { let fnprepatch_80 = PrimitiveComponent.prototype.SetPhysicsMaxAngularVelocityInRadians;PrimitiveComponent.prototype.SetPhysicsMaxAngularVelocityInRadians = function (NewMaxAngVel, bAddToCurrent = false, BoneName = "None") { return fnprepatch_80.call(this, NewMaxAngVel, bAddToCurrent, BoneName) }; } catch (e) {};
try { let fnprepatch_81 = PrimitiveComponent.prototype.SetPhysicsMaxAngularVelocityInDegrees;PrimitiveComponent.prototype.SetPhysicsMaxAngularVelocityInDegrees = function (NewMaxAngVel, bAddToCurrent = false, BoneName = "None") { return fnprepatch_81.call(this, NewMaxAngVel, bAddToCurrent, BoneName) }; } catch (e) {};
try { let fnprepatch_82 = PrimitiveComponent.prototype.SetPhysicsLinearVelocity;PrimitiveComponent.prototype.SetPhysicsLinearVelocity = function (NewVel, bAddToCurrent = false, BoneName = "None") { return fnprepatch_82.call(this, NewVel, bAddToCurrent, BoneName) }; } catch (e) {};
try { let fnprepatch_83 = PrimitiveComponent.prototype.SetPhysicsAngularVelocityInRadians;PrimitiveComponent.prototype.SetPhysicsAngularVelocityInRadians = function (NewAngVel, bAddToCurrent = false, BoneName = "None") { return fnprepatch_83.call(this, NewAngVel, bAddToCurrent, BoneName) }; } catch (e) {};
try { let fnprepatch_84 = PrimitiveComponent.prototype.SetPhysicsAngularVelocityInDegrees;PrimitiveComponent.prototype.SetPhysicsAngularVelocityInDegrees = function (NewAngVel, bAddToCurrent = false, BoneName = "None") { return fnprepatch_84.call(this, NewAngVel, bAddToCurrent, BoneName) }; } catch (e) {};
try { let fnprepatch_85 = PrimitiveComponent.prototype.SetMassScale;PrimitiveComponent.prototype.SetMassScale = function (BoneName = "None", InMassScale = 1) { return fnprepatch_85.call(this, BoneName, InMassScale) }; } catch (e) {};
try { let fnprepatch_86 = PrimitiveComponent.prototype.SetMassOverrideInKg;PrimitiveComponent.prototype.SetMassOverrideInKg = function (BoneName = "None", MassInKg = 1, bOverrideMass = true) { return fnprepatch_86.call(this, BoneName, MassInKg, bOverrideMass) }; } catch (e) {};
try { let fnprepatch_87 = PrimitiveComponent.prototype.SetCollisionProfileName;PrimitiveComponent.prototype.SetCollisionProfileName = function (InCollisionProfileName, bUpdateOverlaps = true) { return fnprepatch_87.call(this, InCollisionProfileName, bUpdateOverlaps) }; } catch (e) {};
try { let fnprepatch_88 = PrimitiveComponent.prototype.SetCenterOfMass;PrimitiveComponent.prototype.SetCenterOfMass = function (CenterOfMassOffset, BoneName = "None") { return fnprepatch_88.call(this, CenterOfMassOffset, BoneName) }; } catch (e) {};
try { let fnprepatch_89 = PrimitiveComponent.prototype.SetBoundsScale;PrimitiveComponent.prototype.SetBoundsScale = function (NewBoundsScale = 1) { return fnprepatch_89.call(this, NewBoundsScale) }; } catch (e) {};
try { let fnprepatch_90 = PrimitiveComponent.prototype.SetAllPhysicsLinearVelocity;PrimitiveComponent.prototype.SetAllPhysicsLinearVelocity = function (NewVel, bAddToCurrent = false) { return fnprepatch_90.call(this, NewVel, bAddToCurrent) }; } catch (e) {};
try { let fnprepatch_91 = PrimitiveComponent.prototype.SetAllPhysicsAngularVelocityInRadians;PrimitiveComponent.prototype.SetAllPhysicsAngularVelocityInRadians = function (NewAngVel, bAddToCurrent = false) { return fnprepatch_91.call(this, NewAngVel, bAddToCurrent) }; } catch (e) {};
try { let fnprepatch_92 = PrimitiveComponent.prototype.SetAllPhysicsAngularVelocityInDegrees;PrimitiveComponent.prototype.SetAllPhysicsAngularVelocityInDegrees = function (NewAngVel, bAddToCurrent = false) { return fnprepatch_92.call(this, NewAngVel, bAddToCurrent) }; } catch (e) {};
try { let fnprepatch_93 = PrimitiveComponent.prototype.SetAllMassScale;PrimitiveComponent.prototype.SetAllMassScale = function (InMassScale = 1) { return fnprepatch_93.call(this, InMassScale) }; } catch (e) {};
try { let fnprepatch_94 = PrimitiveComponent.prototype.ScaleByMomentOfInertia;PrimitiveComponent.prototype.ScaleByMomentOfInertia = function (InputVector, BoneName = "None") { return fnprepatch_94.call(this, InputVector, BoneName) }; } catch (e) {};
try { let fnprepatch_95 = PrimitiveComponent.prototype.PutRigidBodyToSleep;PrimitiveComponent.prototype.PutRigidBodyToSleep = function (BoneName = "None") { return fnprepatch_95.call(this, BoneName) }; } catch (e) {};
try { let fnprepatch_96 = PrimitiveComponent.prototype.GetPhysicsLinearVelocityAtPoint;PrimitiveComponent.prototype.GetPhysicsLinearVelocityAtPoint = function (Point, BoneName = "None") { return fnprepatch_96.call(this, Point, BoneName) }; } catch (e) {};
try { let fnprepatch_97 = PrimitiveComponent.prototype.GetPhysicsLinearVelocity;PrimitiveComponent.prototype.GetPhysicsLinearVelocity = function (BoneName = "None") { return fnprepatch_97.call(this, BoneName) }; } catch (e) {};
try { let fnprepatch_98 = PrimitiveComponent.prototype.GetPhysicsAngularVelocityInRadians;PrimitiveComponent.prototype.GetPhysicsAngularVelocityInRadians = function (BoneName = "None") { return fnprepatch_98.call(this, BoneName) }; } catch (e) {};
try { let fnprepatch_99 = PrimitiveComponent.prototype.GetPhysicsAngularVelocityInDegrees;PrimitiveComponent.prototype.GetPhysicsAngularVelocityInDegrees = function (BoneName = "None") { return fnprepatch_99.call(this, BoneName) }; } catch (e) {};
try { let fnprepatch_100 = PrimitiveComponent.prototype.GetOverlappingActors;PrimitiveComponent.prototype.GetOverlappingActors = function (OverlappingActors, ClassFilter = null) { return fnprepatch_100.call(this, OverlappingActors, ClassFilter) }; } catch (e) {};
try { let fnprepatch_101 = PrimitiveComponent.prototype.GetMassScale;PrimitiveComponent.prototype.GetMassScale = function (BoneName = "None") { return fnprepatch_101.call(this, BoneName) }; } catch (e) {};
try { let fnprepatch_102 = PrimitiveComponent.prototype.GetInertiaTensor;PrimitiveComponent.prototype.GetInertiaTensor = function (BoneName = "None") { return fnprepatch_102.call(this, BoneName) }; } catch (e) {};
try { let fnprepatch_103 = PrimitiveComponent.prototype.GetClosestPointOnCollision;PrimitiveComponent.prototype.GetClosestPointOnCollision = function (Point, OutPointOnBody, BoneName = "None") { return fnprepatch_103.call(this, Point, OutPointOnBody, BoneName) }; } catch (e) {};
try { let fnprepatch_104 = PrimitiveComponent.prototype.GetCenterOfMass;PrimitiveComponent.prototype.GetCenterOfMass = function (BoneName = "None") { return fnprepatch_104.call(this, BoneName) }; } catch (e) {};
try { let fnprepatch_105 = PrimitiveComponent.prototype.GetBodyInstanceAsyncPhysicsTickHandle;PrimitiveComponent.prototype.GetBodyInstanceAsyncPhysicsTickHandle = function (BoneName = "None", bGetWelded = true, Index = -1) { return fnprepatch_105.call(this, BoneName, bGetWelded, Index) }; } catch (e) {};
try { let fnprepatch_106 = PrimitiveComponent.prototype.CreateDynamicMaterialInstance;PrimitiveComponent.prototype.CreateDynamicMaterialInstance = function (ElementIndex, SourceMaterial = undefined, OptionalName = "None") { return fnprepatch_106.call(this, ElementIndex, SourceMaterial, OptionalName) }; } catch (e) {};
try { let fnprepatch_107 = PrimitiveComponent.prototype.AddVelocityChangeImpulseAtLocation;PrimitiveComponent.prototype.AddVelocityChangeImpulseAtLocation = function (Impulse, Location, BoneName = "None") { return fnprepatch_107.call(this, Impulse, Location, BoneName) }; } catch (e) {};
try { let fnprepatch_108 = PrimitiveComponent.prototype.AddTorqueInRadians;PrimitiveComponent.prototype.AddTorqueInRadians = function (Torque, BoneName = "None", bAccelChange = false) { return fnprepatch_108.call(this, Torque, BoneName, bAccelChange) }; } catch (e) {};
try { let fnprepatch_109 = PrimitiveComponent.prototype.AddTorqueInDegrees;PrimitiveComponent.prototype.AddTorqueInDegrees = function (Torque, BoneName = "None", bAccelChange = false) { return fnprepatch_109.call(this, Torque, BoneName, bAccelChange) }; } catch (e) {};
try { let fnprepatch_110 = PrimitiveComponent.prototype.AddRadialImpulse;PrimitiveComponent.prototype.AddRadialImpulse = function (Origin, Radius, Strength, Falloff, bVelChange = false) { return fnprepatch_110.call(this, Origin, Radius, Strength, Falloff, bVelChange) }; } catch (e) {};
try { let fnprepatch_111 = PrimitiveComponent.prototype.AddRadialForce;PrimitiveComponent.prototype.AddRadialForce = function (Origin, Radius, Strength, Falloff, bAccelChange = false) { return fnprepatch_111.call(this, Origin, Radius, Strength, Falloff, bAccelChange) }; } catch (e) {};
try { let fnprepatch_112 = PrimitiveComponent.prototype.AddImpulseAtLocation;PrimitiveComponent.prototype.AddImpulseAtLocation = function (Impulse, Location, BoneName = "None") { return fnprepatch_112.call(this, Impulse, Location, BoneName) }; } catch (e) {};
try { let fnprepatch_113 = PrimitiveComponent.prototype.AddImpulse;PrimitiveComponent.prototype.AddImpulse = function (Impulse, BoneName = "None", bVelChange = false) { return fnprepatch_113.call(this, Impulse, BoneName, bVelChange) }; } catch (e) {};
try { let fnprepatch_114 = PrimitiveComponent.prototype.AddForceAtLocationLocal;PrimitiveComponent.prototype.AddForceAtLocationLocal = function (Force, Location, BoneName = "None") { return fnprepatch_114.call(this, Force, Location, BoneName) }; } catch (e) {};
try { let fnprepatch_115 = PrimitiveComponent.prototype.AddForceAtLocation;PrimitiveComponent.prototype.AddForceAtLocation = function (Force, Location, BoneName = "None") { return fnprepatch_115.call(this, Force, Location, BoneName) }; } catch (e) {};
try { let fnprepatch_116 = PrimitiveComponent.prototype.AddForce;PrimitiveComponent.prototype.AddForce = function (Force, BoneName = "None", bAccelChange = false) { return fnprepatch_116.call(this, Force, BoneName, bAccelChange) }; } catch (e) {};
try { let fnprepatch_117 = PrimitiveComponent.prototype.AddAngularImpulseInRadians;PrimitiveComponent.prototype.AddAngularImpulseInRadians = function (Impulse, BoneName = "None", bVelChange = false) { return fnprepatch_117.call(this, Impulse, BoneName, bVelChange) }; } catch (e) {};
try { let fnprepatch_118 = PrimitiveComponent.prototype.AddAngularImpulseInDegrees;PrimitiveComponent.prototype.AddAngularImpulseInDegrees = function (Impulse, BoneName = "None", bVelChange = false) { return fnprepatch_118.call(this, Impulse, BoneName, bVelChange) }; } catch (e) {};
try { PrimitiveComponent.prototype.WasComponentRecentlyRendered = PrimitiveComponent.prototype.WasRecentlyRendered; } catch (e) {};
try { PrimitiveComponent.prototype.SetPhysicalMaterialOverride = PrimitiveComponent.prototype.SetPhysMaterialOverride; } catch (e) {};
try { PrimitiveComponent.prototype.SetMaxDrawDistance = PrimitiveComponent.prototype.SetCullDistance; } catch (e) {};
try { PrimitiveComponent.prototype.SphereTraceComponent = PrimitiveComponent.prototype.K2_SphereTraceComponent; } catch (e) {};
try { PrimitiveComponent.prototype.SphereOverlapComponent = PrimitiveComponent.prototype.K2_SphereOverlapComponent; } catch (e) {};
try { PrimitiveComponent.prototype.LineTraceComponent = PrimitiveComponent.prototype.K2_LineTraceComponent; } catch (e) {};
try { PrimitiveComponent.prototype.IsQueryCollisionEnabled = PrimitiveComponent.prototype.K2_IsQueryCollisionEnabled; } catch (e) {};
try { PrimitiveComponent.prototype.IsPhysicsCollisionEnabled = PrimitiveComponent.prototype.K2_IsPhysicsCollisionEnabled; } catch (e) {};
try { PrimitiveComponent.prototype.IsCollisionEnabled = PrimitiveComponent.prototype.K2_IsCollisionEnabled; } catch (e) {};
try { PrimitiveComponent.prototype.BoxOverlapComponent = PrimitiveComponent.prototype.K2_BoxOverlapComponent; } catch (e) {};
try { PrimitiveComponent.prototype.CreateMIDForElementFromMaterial = PrimitiveComponent.prototype.CreateAndSetMaterialInstanceDynamicFromMaterial; } catch (e) {};
try { PrimitiveComponent.prototype.CreateMIDForElement = PrimitiveComponent.prototype.CreateAndSetMaterialInstanceDynamic; } catch (e) {};
try { PrimitiveComponent.prototype.GetMoveIgnoreComponents = PrimitiveComponent.prototype.CopyArrayOfMoveIgnoreComponents; } catch (e) {};
try { PrimitiveComponent.prototype.GetMoveIgnoreActors = PrimitiveComponent.prototype.CopyArrayOfMoveIgnoreActors; } catch (e) {};
try { let fnprepatch_119 = MeshComponent.prototype.PrestreamTextures;MeshComponent.prototype.PrestreamTextures = function (Seconds, bPrioritizeCharacterTextures, CinematicTextureGroups = 0) { return fnprepatch_119.call(this, Seconds, bPrioritizeCharacterTextures, CinematicTextureGroups) }; } catch (e) {};
try { let fnprepatch_120 = ViewportInteractor.prototype.GetLaserPointer;ViewportInteractor.prototype.GetLaserPointer = function (LaserPointerStart, LaserPointerEnd, bEvenIfBlocked = false, LaserLengthOverride = 0) { return fnprepatch_120.call(this, LaserPointerStart, LaserPointerEnd, bEvenIfBlocked, LaserLengthOverride) }; } catch (e) {};
try { ViewportInteractor.prototype.HandleInputKey = ViewportInteractor.prototype.HandleInputKey_BP; } catch (e) {};
try { ViewportInteractor.prototype.HandleInputAxis = ViewportInteractor.prototype.HandleInputAxis_BP; } catch (e) {};
try { let fnprepatch_121 = ViewportWorldInteraction.prototype.SetWorldToMetersScale;ViewportWorldInteraction.prototype.SetWorldToMetersScale = function (NewWorldToMetersScale, bCompensateRoomWorldScale = false) { return fnprepatch_121.call(this, NewWorldToMetersScale, bCompensateRoomWorldScale) }; } catch (e) {};
try { LevelEditorContextMenuContext.prototype.GetHitProxyElement = LevelEditorContextMenuContext.prototype.GetScriptHitProxyElement; } catch (e) {};
try { let fnprepatch_122 = LevelEditorSubsystem.prototype.SetAllowsCinematicControl;LevelEditorSubsystem.prototype.SetAllowsCinematicControl = function (bAllow, ViewportConfigKey = "None") { return fnprepatch_122.call(this, bAllow, ViewportConfigKey) }; } catch (e) {};
try { let fnprepatch_123 = LevelEditorSubsystem.prototype.PilotLevelActor;LevelEditorSubsystem.prototype.PilotLevelActor = function (ActorToPilot, ViewportConfigKey = "None") { return fnprepatch_123.call(this, ActorToPilot, ViewportConfigKey) }; } catch (e) {};
try { let fnprepatch_124 = LevelEditorSubsystem.prototype.GetPilotLevelActor;LevelEditorSubsystem.prototype.GetPilotLevelActor = function (ViewportConfigKey = "None") { return fnprepatch_124.call(this, ViewportConfigKey) }; } catch (e) {};
try { let fnprepatch_125 = LevelEditorSubsystem.prototype.GetAllowsCinematicControl;LevelEditorSubsystem.prototype.GetAllowsCinematicControl = function (ViewportConfigKey = "None") { return fnprepatch_125.call(this, ViewportConfigKey) }; } catch (e) {};
try { let fnprepatch_126 = LevelEditorSubsystem.prototype.EjectPilotLevelActor;LevelEditorSubsystem.prototype.EjectPilotLevelActor = function (ViewportConfigKey = "None") { return fnprepatch_126.call(this, ViewportConfigKey) }; } catch (e) {};
try { let fnprepatch_127 = LevelEditorSubsystem.prototype.EditorSetGameView;LevelEditorSubsystem.prototype.EditorSetGameView = function (bGameView, ViewportConfigKey = "None") { return fnprepatch_127.call(this, bGameView, ViewportConfigKey) }; } catch (e) {};
try { let fnprepatch_128 = LevelEditorSubsystem.prototype.EditorGetGameView;LevelEditorSubsystem.prototype.EditorGetGameView = function (ViewportConfigKey = "None") { return fnprepatch_128.call(this, ViewportConfigKey) }; } catch (e) {};
try { let fnprepatch_129 = LevelEditorSubsystem.prototype.BuildLightMaps;LevelEditorSubsystem.prototype.BuildLightMaps = function (Quality = "Quality_Production", bWithReflectionCaptures = false) { return fnprepatch_129.call(this, Quality, bWithReflectionCaptures) }; } catch (e) {};
try { let fnprepatch_130 = GameplayTask_ClaimResource.prototype.ClaimResources;GameplayTask_ClaimResource.prototype.ClaimResources = function (InTaskOwner, ResourceClasses, Priority = 192, TaskInstanceName = "None") { return fnprepatch_130.call(this, InTaskOwner, ResourceClasses, Priority, TaskInstanceName) }; } catch (e) {};
try { let fnprepatch_131 = GameplayTask_ClaimResource.prototype.ClaimResource;GameplayTask_ClaimResource.prototype.ClaimResource = function (InTaskOwner, ResourceClass, Priority = 192, TaskInstanceName = "None") { return fnprepatch_131.call(this, InTaskOwner, ResourceClass, Priority, TaskInstanceName) }; } catch (e) {};
try { let fnprepatch_132 = GameplayTask_SpawnActor.prototype.SpawnActor;GameplayTask_SpawnActor.prototype.SpawnActor = function (TaskOwner, SpawnLocation, SpawnRotation, Class, bSpawnOnlyOnAuthority = false) { return fnprepatch_132.call(this, TaskOwner, SpawnLocation, SpawnRotation, Class, bSpawnOnlyOnAuthority) }; } catch (e) {};
try { let fnprepatch_133 = GameplayTask_WaitDelay.prototype.TaskWaitDelay;GameplayTask_WaitDelay.prototype.TaskWaitDelay = function (TaskOwner, Time, Priority = 192) { return fnprepatch_133.call(this, TaskOwner, Time, Priority) }; } catch (e) {};
try { BlueprintGameplayTagLibrary.prototype.NotEqual = BlueprintGameplayTagLibrary.prototype.NotEqual_GameplayTagContainer; } catch (e) {};
try { BlueprintGameplayTagLibrary.NotEqual = BlueprintGameplayTagLibrary.NotEqual_GameplayTagContainer; } catch (e) {};
try { BlueprintGameplayTagLibrary.prototype.NotEqual = BlueprintGameplayTagLibrary.prototype.NotEqual_GameplayTag; } catch (e) {};
try { BlueprintGameplayTagLibrary.NotEqual = BlueprintGameplayTagLibrary.NotEqual_GameplayTag; } catch (e) {};
try { BlueprintGameplayTagLibrary.prototype.Equal = BlueprintGameplayTagLibrary.prototype.EqualEqual_GameplayTagContainer; } catch (e) {};
try { BlueprintGameplayTagLibrary.Equal = BlueprintGameplayTagLibrary.EqualEqual_GameplayTagContainer; } catch (e) {};
try { BlueprintGameplayTagLibrary.prototype.Equal = BlueprintGameplayTagLibrary.prototype.EqualEqual_GameplayTag; } catch (e) {};
try { BlueprintGameplayTagLibrary.Equal = BlueprintGameplayTagLibrary.EqualEqual_GameplayTag; } catch (e) {};
try { let fnprepatch_134 = PawnActionsComponent.prototype.K2_PushAction;PawnActionsComponent.prototype.K2_PushAction = function (NewAction, Priority, Instigator = undefined) { return fnprepatch_134.call(this, NewAction, Priority, Instigator) }; } catch (e) {};
try { let fnprepatch_135 = PawnActionsComponent.prototype.K2_PerformAction;PawnActionsComponent.prototype.K2_PerformAction = function (Pawn, Action, Priority = "HardScript") { return fnprepatch_135.call(this, Pawn, Action, Priority) }; } catch (e) {};
try { PawnActionsComponent.prototype.PushAction_DEPRECATED = PawnActionsComponent.prototype.K2_PushAction; } catch (e) {};
try { PawnActionsComponent.prototype.PerformAction_DEPRECATED = PawnActionsComponent.prototype.K2_PerformAction; } catch (e) {};
try { PawnActionsComponent.PerformAction_DEPRECATED = PawnActionsComponent.K2_PerformAction; } catch (e) {};
try { PawnActionsComponent.prototype.ForceAbortAction_DEPRECATED = PawnActionsComponent.prototype.K2_ForceAbortAction; } catch (e) {};
try { PawnActionsComponent.prototype.AbortAction_DEPRECATED = PawnActionsComponent.prototype.K2_AbortAction; } catch (e) {};
try { let fnprepatch_136 = Controller.prototype.LineOfSightTo;Controller.prototype.LineOfSightTo = function (Other, ViewPoint, bAlternateChecks = false) { return fnprepatch_136.call(this, Other, ViewPoint, bAlternateChecks) }; } catch (e) {};
try { Controller.prototype.OnUnPossess = Controller.prototype.ReceiveUnPossess; } catch (e) {};
try { Controller.prototype.OnPossess = Controller.prototype.ReceivePossess; } catch (e) {};
try { Controller.prototype.GetControlledPawn = Controller.prototype.K2_GetPawn; } catch (e) {};
try { let fnprepatch_137 = AIController.prototype.MoveToLocation;AIController.prototype.MoveToLocation = function (Dest, AcceptanceRadius = -1, bStopOnOverlap = true, bUsePathfinding = true, bProjectDestinationToNavigation = false, bCanStrafe = true, FilterClass = null, bAllowPartialPath = true) { return fnprepatch_137.call(this, Dest, AcceptanceRadius, bStopOnOverlap, bUsePathfinding, bProjectDestinationToNavigation, bCanStrafe, FilterClass, bAllowPartialPath) }; } catch (e) {};
try { let fnprepatch_138 = AIController.prototype.MoveToActor;AIController.prototype.MoveToActor = function (Goal, AcceptanceRadius = -1, bStopOnOverlap = true, bUsePathfinding = true, bCanStrafe = true, FilterClass = null, bAllowPartialPath = true) { return fnprepatch_138.call(this, Goal, AcceptanceRadius, bStopOnOverlap, bUsePathfinding, bCanStrafe, FilterClass, bAllowPartialPath) }; } catch (e) {};
try { AIController.prototype.SetFocus = AIController.prototype.K2_SetFocus; } catch (e) {};
try { AIController.prototype.SetFocalPoint = AIController.prototype.K2_SetFocalPoint; } catch (e) {};
try { AIController.prototype.ClearFocus = AIController.prototype.K2_ClearFocus; } catch (e) {};
try { let fnprepatch_139 = BTTask_BlueprintBase.prototype.SetFinishOnMessageWithId;BTTask_BlueprintBase.prototype.SetFinishOnMessageWithId = function (MessageName, RequestID = -1) { return fnprepatch_139.call(this, MessageName, RequestID) }; } catch (e) {};
try { let fnprepatch_140 = AIBlueprintHelperLibrary.prototype.SpawnAIFromClass;AIBlueprintHelperLibrary.prototype.SpawnAIFromClass = function (WorldContextObject, PawnClass, BehaviorTree, Location, Rotation, bNoCollisionFail = false, Owner = undefined) { return fnprepatch_140.call(this, WorldContextObject, PawnClass, BehaviorTree, Location, Rotation, bNoCollisionFail, Owner) }; } catch (e) {};
try { let fnprepatch_141 = AIBlueprintHelperLibrary.prototype.SendAIMessage;AIBlueprintHelperLibrary.prototype.SendAIMessage = function (Target, Message, MessageSource, bSuccess = true) { return fnprepatch_141.call(this, Target, Message, MessageSource, bSuccess) }; } catch (e) {};
try { let fnprepatch_142 = AIBlueprintHelperLibrary.prototype.CreateMoveToProxyObject;AIBlueprintHelperLibrary.prototype.CreateMoveToProxyObject = function (WorldContextObject, Pawn, Destination, TargetActor = undefined, AcceptanceRadius = 5, bStopOnOverlap = false) { return fnprepatch_142.call(this, WorldContextObject, Pawn, Destination, TargetActor, AcceptanceRadius, bStopOnOverlap) }; } catch (e) {};
try { let fnprepatch_143 = Pawn.prototype.SetCanAffectNavigationGeneration;Pawn.prototype.SetCanAffectNavigationGeneration = function (bNewValue, bForceUpdate = false) { return fnprepatch_143.call(this, bNewValue, bForceUpdate) }; } catch (e) {};
try { let fnprepatch_144 = Pawn.prototype.PawnMakeNoise;Pawn.prototype.PawnMakeNoise = function (Loudness, NoiseLocation, bUseNoiseMakerLocation = true, NoiseMaker = undefined) { return fnprepatch_144.call(this, Loudness, NoiseLocation, bUseNoiseMakerLocation, NoiseMaker) }; } catch (e) {};
try { let fnprepatch_145 = Pawn.prototype.AddMovementInput;Pawn.prototype.AddMovementInput = function (WorldDirection, ScaleValue = 1, bForce = false) { return fnprepatch_145.call(this, WorldDirection, ScaleValue, bForce) }; } catch (e) {};
try { Pawn.prototype.Unpossessed = Pawn.prototype.ReceiveUnpossessed; } catch (e) {};
try { Pawn.prototype.Possessed = Pawn.prototype.ReceivePossessed; } catch (e) {};
try { let fnprepatch_146 = Character.prototype.UnCrouch;Character.prototype.UnCrouch = function (bClientSimulation = false) { return fnprepatch_146.call(this, bClientSimulation) }; } catch (e) {};
try { let fnprepatch_147 = Character.prototype.StopAnimMontage;Character.prototype.StopAnimMontage = function (AnimMontage = undefined) { return fnprepatch_147.call(this, AnimMontage) }; } catch (e) {};
try { let fnprepatch_148 = Character.prototype.PlayAnimMontage;Character.prototype.PlayAnimMontage = function (AnimMontage, InPlayRate = 1, StartSectionName = "None") { return fnprepatch_148.call(this, AnimMontage, InPlayRate, StartSectionName) }; } catch (e) {};
try { let fnprepatch_149 = Character.prototype.Crouch;Character.prototype.Crouch = function (bClientSimulation = false) { return fnprepatch_149.call(this, bClientSimulation) }; } catch (e) {};
try { Character.prototype.UpdateCustomMovement = Character.prototype.K2_UpdateCustomMovement; } catch (e) {};
try { Character.prototype.OnStartCrouch = Character.prototype.K2_OnStartCrouch; } catch (e) {};
try { Character.prototype.OnMovementModeChanged = Character.prototype.K2_OnMovementModeChanged; } catch (e) {};
try { Character.prototype.OnEndCrouch = Character.prototype.K2_OnEndCrouch; } catch (e) {};
try { Character.prototype.IsPlayingAnimRootMotion = Character.prototype.IsPlayingRootMotion; } catch (e) {};
try { Character.prototype.GetBaseRotationOffset = Character.prototype.GetBaseRotationOffsetRotator; } catch (e) {};
try { Character.prototype.CanJump = Character.prototype.CanJumpInternal; } catch (e) {};
try { NavLinkProxy.prototype.CopyEndPointsFromSimpleLink = NavLinkProxy.prototype.CopyEndPointsFromSimpleLinkToSmartLink; } catch (e) {};
try { let fnprepatch_150 = NavLocalGridManager.prototype.RemoveLocalNavigationGrid;NavLocalGridManager.prototype.RemoveLocalNavigationGrid = function (WorldContextObject, GridId, bRebuildGrids = true) { return fnprepatch_150.call(this, WorldContextObject, GridId, bRebuildGrids) }; } catch (e) {};
try { let fnprepatch_151 = NavLocalGridManager.prototype.AddLocalNavigationGridForPoints;NavLocalGridManager.prototype.AddLocalNavigationGridForPoints = function (WorldContextObject, Locations, Radius2D = 5, Height = 100, bRebuildGrids = true) { return fnprepatch_151.call(this, WorldContextObject, Locations, Radius2D, Height, bRebuildGrids) }; } catch (e) {};
try { let fnprepatch_152 = NavLocalGridManager.prototype.AddLocalNavigationGridForPoint;NavLocalGridManager.prototype.AddLocalNavigationGridForPoint = function (WorldContextObject, Location, Radius2D = 5, Height = 100, bRebuildGrids = true) { return fnprepatch_152.call(this, WorldContextObject, Location, Radius2D, Height, bRebuildGrids) }; } catch (e) {};
try { let fnprepatch_153 = NavLocalGridManager.prototype.AddLocalNavigationGridForCapsule;NavLocalGridManager.prototype.AddLocalNavigationGridForCapsule = function (WorldContextObject, Location, CapsuleRadius, CapsuleHalfHeight, Radius2D = 5, Height = 100, bRebuildGrids = true) { return fnprepatch_153.call(this, WorldContextObject, Location, CapsuleRadius, CapsuleHalfHeight, Radius2D, Height, bRebuildGrids) }; } catch (e) {};
try { let fnprepatch_154 = NavLocalGridManager.prototype.AddLocalNavigationGridForBox;NavLocalGridManager.prototype.AddLocalNavigationGridForBox = function (WorldContextObject, Location, Extent, Rotation, Radius2D = 5, Height = 100, bRebuildGrids = true) { return fnprepatch_154.call(this, WorldContextObject, Location, Extent, Rotation, Radius2D, Height, bRebuildGrids) }; } catch (e) {};
try { AISense_Blueprint.prototype.OnNewPawn = AISense_Blueprint.prototype.K2_OnNewPawn; } catch (e) {};
try { let fnprepatch_155 = AISense_Damage.prototype.ReportDamageEvent;AISense_Damage.prototype.ReportDamageEvent = function (WorldContextObject, DamagedActor, Instigator, DamageAmount, EventLocation, HitLocation, Tag = "None") { return fnprepatch_155.call(this, WorldContextObject, DamagedActor, Instigator, DamageAmount, EventLocation, HitLocation, Tag) }; } catch (e) {};
try { let fnprepatch_156 = AISense_Hearing.prototype.ReportNoiseEvent;AISense_Hearing.prototype.ReportNoiseEvent = function (WorldContextObject, NoiseLocation, Loudness = 1, Instigator = undefined, MaxRange = 0, Tag = "None") { return fnprepatch_156.call(this, WorldContextObject, NoiseLocation, Loudness, Instigator, MaxRange, Tag) }; } catch (e) {};
try { let fnprepatch_157 = AITask_MoveTo.prototype.AIMoveTo;AITask_MoveTo.prototype.AIMoveTo = function (Controller, GoalLocation, GoalActor = undefined, AcceptanceRadius = -1, StopOnOverlap = "Default", AcceptPartialPath = "Default", bUsePathfinding = true, bLockAILogic = true, bUseContinuousGoalTracking = false, ProjectGoalOnNavigation = "Default") { return fnprepatch_157.call(this, Controller, GoalLocation, GoalActor, AcceptanceRadius, StopOnOverlap, AcceptPartialPath, bUsePathfinding, bLockAILogic, bUseContinuousGoalTracking, ProjectGoalOnNavigation) }; } catch (e) {};
try { AITask_MoveTo.prototype.MoveToLocationorActor = AITask_MoveTo.prototype.AIMoveTo; } catch (e) {};
try { AITask_MoveTo.MoveToLocationorActor = AITask_MoveTo.AIMoveTo; } catch (e) {};
try { FieldSystemComponent.prototype.RemoveConstructionFields = FieldSystemComponent.prototype.ResetFieldSystem; } catch (e) {};
try { FieldSystemComponent.prototype.FalloffUniformForce = FieldSystemComponent.prototype.ApplyUniformVectorFalloffForce; } catch (e) {};
try { FieldSystemComponent.prototype.ApplyExternalStrain = FieldSystemComponent.prototype.ApplyStrainField; } catch (e) {};
try { FieldSystemComponent.prototype.SetDynamicState = FieldSystemComponent.prototype.ApplyStayDynamicField; } catch (e) {};
try { FieldSystemComponent.prototype.FalloffRadialForce = FieldSystemComponent.prototype.ApplyRadialVectorFalloffForce; } catch (e) {};
try { FieldSystemComponent.prototype.AddTransientField = FieldSystemComponent.prototype.ApplyPhysicsField; } catch (e) {};
try { FieldSystemComponent.prototype.ApplyUniformForce = FieldSystemComponent.prototype.ApplyLinearForce; } catch (e) {};
try { FieldSystemComponent.prototype.AddConstructionField = FieldSystemComponent.prototype.AddFieldCommand; } catch (e) {};
try { FieldSystemMetaDataProcessingResolution.prototype.SetMetaDataResolution = FieldSystemMetaDataProcessingResolution.prototype.SetMetaDataaProcessingResolutionType; } catch (e) {};
try { FieldSystemMetaDataFilter.prototype.SetMetaDataFilter = FieldSystemMetaDataFilter.prototype.SetMetaDataFilterType; } catch (e) {};
try { RadialIntMask.prototype.SetRadialMask = RadialIntMask.prototype.SetRadialIntMask; } catch (e) {};
try { ReturnResultsTerminal.prototype.SetTerminalField = ReturnResultsTerminal.prototype.SetReturnResultsTerminal; } catch (e) {};
try { let fnprepatch_158 = GeometryCollectionComponent.prototype.SetRestCollection;GeometryCollectionComponent.prototype.SetRestCollection = function (RestCollectionIn, bApplyAssetDefaults = true) { return fnprepatch_158.call(this, RestCollectionIn, bApplyAssetDefaults) }; } catch (e) {};
try { let fnprepatch_159 = GeometryCollectionComponent.prototype.SetNotifyCrumblings;GeometryCollectionComponent.prototype.SetNotifyCrumblings = function (bNewNotifyCrumblings, bNewCrumblingEventIncludesChildren = false) { return fnprepatch_159.call(this, bNewNotifyCrumblings, bNewCrumblingEventIncludesChildren) }; } catch (e) {};
try { let fnprepatch_160 = GeometryCollectionComponent.prototype.SetAnchoredByTransformedBox;GeometryCollectionComponent.prototype.SetAnchoredByTransformedBox = function (Box, Transform, bAnchored, MaxLevel = -1) { return fnprepatch_160.call(this, Box, Transform, bAnchored, MaxLevel) }; } catch (e) {};
try { let fnprepatch_161 = GeometryCollectionComponent.prototype.SetAnchoredByBox;GeometryCollectionComponent.prototype.SetAnchoredByBox = function (WorldSpaceBox, bAnchored, MaxLevel = -1) { return fnprepatch_161.call(this, WorldSpaceBox, bAnchored, MaxLevel) }; } catch (e) {};
try { let fnprepatch_162 = GeometryCollectionComponent.prototype.ApplyInternalStrain;GeometryCollectionComponent.prototype.ApplyInternalStrain = function (ItemIndex, Location, Radius = 0, PropagationDepth = 0, PropagationFactor = 1, Strain = 0) { return fnprepatch_162.call(this, ItemIndex, Location, Radius, PropagationDepth, PropagationFactor, Strain) }; } catch (e) {};
try { let fnprepatch_163 = GeometryCollectionComponent.prototype.ApplyExternalStrain;GeometryCollectionComponent.prototype.ApplyExternalStrain = function (ItemIndex, Location, Radius = 0, PropagationDepth = 0, PropagationFactor = 1, Strain = 0) { return fnprepatch_163.call(this, ItemIndex, Location, Radius, PropagationDepth, PropagationFactor, Strain) }; } catch (e) {};
try { GeometryCollectionComponent.prototype.PhysicsCollision = GeometryCollectionComponent.prototype.ReceivePhysicsCollision; } catch (e) {};
try { GeometryCollectionComponent.prototype.AddPhysicsField = GeometryCollectionComponent.prototype.ApplyPhysicsField; } catch (e) {};
try { GeometryCollectionComponent.prototype.SetDynamicState = GeometryCollectionComponent.prototype.ApplyKinematicField; } catch (e) {};
try { let fnprepatch_164 = NavigationPath.prototype.EnableDebugDrawing;NavigationPath.prototype.EnableDebugDrawing = function (bShouldDrawDebugData, PathColor = {"R":1,"G":1,"B":1,"A":1}) { return fnprepatch_164.call(this, bShouldDrawDebugData, PathColor) }; } catch (e) {};
try { World.prototype.VisLogBoxShape = World.prototype.LogBox; } catch (e) {};
try { World.prototype.VisLogLocation = World.prototype.LogLocation; } catch (e) {};
try { World.prototype.VisLogSegment = World.prototype.LogSegment; } catch (e) {};
try { World.prototype.VisLogText = World.prototype.LogText; } catch (e) {};
try { World.prototype.MultiBoxTraceByChannel = World.prototype.BoxTraceMulti; } catch (e) {};
try { World.prototype.MultiBoxTraceByProfile = World.prototype.BoxTraceMultiByProfile; } catch (e) {};
try { World.prototype.MultiBoxTraceForObjects = World.prototype.BoxTraceMultiForObjects; } catch (e) {};
try { World.prototype.BoxTraceByChannel = World.prototype.BoxTraceSingle; } catch (e) {};
try { World.prototype.BoxTraceByProfile = World.prototype.BoxTraceSingleByProfile; } catch (e) {};
try { World.prototype.BoxTraceForObjects = World.prototype.BoxTraceSingleForObjects; } catch (e) {};
try { World.prototype.MultiCapsuleTraceByChannel = World.prototype.CapsuleTraceMulti; } catch (e) {};
try { World.prototype.MultiCapsuleTraceByProfile = World.prototype.CapsuleTraceMultiByProfile; } catch (e) {};
try { World.prototype.MultiCapsuleTraceForObjects = World.prototype.CapsuleTraceMultiForObjects; } catch (e) {};
try { World.prototype.CapsuleTraceByChannel = World.prototype.CapsuleTraceSingle; } catch (e) {};
try { World.prototype.CapsuleTraceByProfile = World.prototype.CapsuleTraceSingleByProfile; } catch (e) {};
try { World.prototype.CapsuleTraceForObjects = World.prototype.CapsuleTraceSingleForObjects; } catch (e) {};
try { World.prototype.DrawDebugCone = World.prototype.DrawDebugConeInDegrees; } catch (e) {};
try { World.prototype.ClearandInvalidateTimerbyHandle = World.prototype.K2_ClearAndInvalidateTimerHandle; } catch (e) {};
try { World.prototype.ClearTimerbyHandle = World.prototype.K2_ClearTimerHandle; } catch (e) {};
try { World.prototype.GetTimerElapsedTimebyHandle = World.prototype.K2_GetTimerElapsedTimeHandle; } catch (e) {};
try { World.prototype.GetTimerRemainingTimebyHandle = World.prototype.K2_GetTimerRemainingTimeHandle; } catch (e) {};
try { World.prototype.IsTimerActivebyHandle = World.prototype.K2_IsTimerActiveHandle; } catch (e) {};
try { World.prototype.IsTimerPausedbyHandle = World.prototype.K2_IsTimerPausedHandle; } catch (e) {};
try { World.prototype.PauseTimerbyHandle = World.prototype.K2_PauseTimerHandle; } catch (e) {};
try { World.prototype.DoesTimerExistbyHandle = World.prototype.K2_TimerExistsHandle; } catch (e) {};
try { World.prototype.UnpauseTimerbyHandle = World.prototype.K2_UnPauseTimerHandle; } catch (e) {};
try { World.prototype.MultiLineTraceByChannel = World.prototype.LineTraceMulti; } catch (e) {};
try { World.prototype.MultiLineTraceByProfile = World.prototype.LineTraceMultiByProfile; } catch (e) {};
try { World.prototype.MultiLineTraceForObjects = World.prototype.LineTraceMultiForObjects; } catch (e) {};
try { World.prototype.LineTraceByChannel = World.prototype.LineTraceSingle; } catch (e) {};
try { World.prototype.LineTraceByProfile = World.prototype.LineTraceSingleByProfile; } catch (e) {};
try { World.prototype.LineTraceForObjects = World.prototype.LineTraceSingleForObjects; } catch (e) {};
try { World.prototype.MultiSphereTraceByChannel = World.prototype.SphereTraceMulti; } catch (e) {};
try { World.prototype.MultiSphereTraceByProfile = World.prototype.SphereTraceMultiByProfile; } catch (e) {};
try { World.prototype.MultiSphereTraceForObjects = World.prototype.SphereTraceMultiForObjects; } catch (e) {};
try { World.prototype.SphereTraceByChannel = World.prototype.SphereTraceSingle; } catch (e) {};
try { World.prototype.SphereTraceByProfile = World.prototype.SphereTraceSingleByProfile; } catch (e) {};
try { World.prototype.SphereTraceForObjects = World.prototype.SphereTraceSingleForObjects; } catch (e) {};
try { World.prototype.PredictProjectilePath = World.prototype.Blueprint_PredictProjectilePath_Advanced; } catch (e) {};
try { World.prototype.PredictProjectilePathByObjectType = World.prototype.Blueprint_PredictProjectilePath_ByObjectType; } catch (e) {};
try { World.prototype.PredictProjectilePathByTraceChannel = World.prototype.Blueprint_PredictProjectilePath_ByTraceChannel; } catch (e) {};
try { World.prototype.SuggestProjectileVelocity = World.prototype.BlueprintSuggestProjectileVelocity; } catch (e) {};
try { World.prototype.CreateLocalPlayer = World.prototype.CreatePlayer; } catch (e) {};
try { World.prototype.CreateLocalPlayerForPlatformUser = World.prototype.CreatePlayerFromPlatformUser; } catch (e) {};
try { World.prototype.GetLocalPlayerControllerFromID = World.prototype.GetPlayerControllerFromID; } catch (e) {};
try { World.prototype.GetLocalPlayerControllerFromPlatformUser = World.prototype.GetPlayerControllerFromPlatformUser; } catch (e) {};
try { World.prototype.LoadStreamLevel = World.prototype.LoadStreamLevelBySoftObjectPtr; } catch (e) {};
try { World.prototype.OpenLevel = World.prototype.OpenLevelBySoftObjectPtr; } catch (e) {};
try { World.prototype.SuggestProjectileVelocityCustomArc = World.prototype.SuggestProjectileVelocity_CustomArc; } catch (e) {};
try { World.prototype.SuggestProjectileVelocityMovingTarget = World.prototype.SuggestProjectileVelocity_MovingTarget; } catch (e) {};
try { World.prototype.UnloadStreamLevel = World.prototype.UnloadStreamLevelBySoftObjectPtr; } catch (e) {};
try { World.prototype.FinishRecordingOutput = World.prototype.StopRecordingOutput; } catch (e) {};
try { World.prototype.CreateWidget = World.prototype.Create; } catch (e) {};
try { World.prototype.ScreenToAbsolute = World.prototype.ScreenToWidgetAbsolute; } catch (e) {};
try { World.prototype.ScreenToLocal = World.prototype.ScreenToWidgetLocal; } catch (e) {};
try { World.prototype.GetWorldSettings = World.prototype.K2_GetWorldSettings; } catch (e) {};
try { let fnprepatch_165 = NavigationSystemV1.prototype.RegisterNavigationInvoker;NavigationSystemV1.prototype.RegisterNavigationInvoker = function (Invoker, TileGenerationRadius = 3000, TileRemovalRadius = 5000) { return fnprepatch_165.call(this, Invoker, TileGenerationRadius, TileRemovalRadius) }; } catch (e) {};
try { let fnprepatch_166 = NavigationSystemV1.prototype.NavigationRaycast;NavigationSystemV1.prototype.NavigationRaycast = function (WorldContextObject, RayStart, RayEnd, HitLocation, FilterClass = null, Querier = undefined) { return fnprepatch_166.call(this, WorldContextObject, RayStart, RayEnd, HitLocation, FilterClass, Querier) }; } catch (e) {};
try { let fnprepatch_167 = NavigationSystemV1.prototype.K2_GetRandomReachablePointInRadius;NavigationSystemV1.prototype.K2_GetRandomReachablePointInRadius = function (WorldContextObject, Origin, RandomLocation, Radius, NavData = undefined, FilterClass = null) { return fnprepatch_167.call(this, WorldContextObject, Origin, RandomLocation, Radius, NavData, FilterClass) }; } catch (e) {};
try { let fnprepatch_168 = NavigationSystemV1.prototype.K2_GetRandomPointInNavigableRadius;NavigationSystemV1.prototype.K2_GetRandomPointInNavigableRadius = function (WorldContextObject, Origin, RandomLocation, Radius, NavData = undefined, FilterClass = null) { return fnprepatch_168.call(this, WorldContextObject, Origin, RandomLocation, Radius, NavData, FilterClass) }; } catch (e) {};
try { let fnprepatch_169 = NavigationSystemV1.prototype.K2_GetRandomLocationInNavigableRadius;NavigationSystemV1.prototype.K2_GetRandomLocationInNavigableRadius = function (WorldContextObject, Origin, RandomLocation, Radius, NavData = undefined, FilterClass = null) { return fnprepatch_169.call(this, WorldContextObject, Origin, RandomLocation, Radius, NavData, FilterClass) }; } catch (e) {};
try { let fnprepatch_170 = NavigationSystemV1.prototype.GetPathLength;NavigationSystemV1.prototype.GetPathLength = function (WorldContextObject, PathStart, PathEnd, PathLength, NavData = undefined, FilterClass = null) { return fnprepatch_170.call(this, WorldContextObject, PathStart, PathEnd, PathLength, NavData, FilterClass) }; } catch (e) {};
try { let fnprepatch_171 = NavigationSystemV1.prototype.GetPathCost;NavigationSystemV1.prototype.GetPathCost = function (WorldContextObject, PathStart, PathEnd, PathCost, NavData = undefined, FilterClass = null) { return fnprepatch_171.call(this, WorldContextObject, PathStart, PathEnd, PathCost, NavData, FilterClass) }; } catch (e) {};
try { let fnprepatch_172 = NavigationSystemV1.prototype.FindPathToLocationSynchronously;NavigationSystemV1.prototype.FindPathToLocationSynchronously = function (WorldContextObject, PathStart, PathEnd, PathfindingContext = undefined, FilterClass = null) { return fnprepatch_172.call(this, WorldContextObject, PathStart, PathEnd, PathfindingContext, FilterClass) }; } catch (e) {};
try { let fnprepatch_173 = NavigationSystemV1.prototype.FindPathToActorSynchronously;NavigationSystemV1.prototype.FindPathToActorSynchronously = function (WorldContextObject, PathStart, GoalActor, TetherDistance = 50, PathfindingContext = undefined, FilterClass = null) { return fnprepatch_173.call(this, WorldContextObject, PathStart, GoalActor, TetherDistance, PathfindingContext, FilterClass) }; } catch (e) {};
try { NavigationSystemV1.prototype.ReplaceAreaInOctreeData = NavigationSystemV1.prototype.K2_ReplaceAreaInOctreeData; } catch (e) {};
try { NavigationSystemV1.prototype.ProjectPointToNavigation = NavigationSystemV1.prototype.K2_ProjectPointToNavigation; } catch (e) {};
try { NavigationSystemV1.ProjectPointToNavigation = NavigationSystemV1.K2_ProjectPointToNavigation; } catch (e) {};
try { NavigationSystemV1.prototype.GetRandomReachablePointInRadius = NavigationSystemV1.prototype.K2_GetRandomReachablePointInRadius; } catch (e) {};
try { NavigationSystemV1.GetRandomReachablePointInRadius = NavigationSystemV1.K2_GetRandomReachablePointInRadius; } catch (e) {};
try { NavigationSystemV1.prototype.GetRandomPointInNavigableRadius = NavigationSystemV1.prototype.K2_GetRandomPointInNavigableRadius; } catch (e) {};
try { NavigationSystemV1.GetRandomPointInNavigableRadius = NavigationSystemV1.K2_GetRandomPointInNavigableRadius; } catch (e) {};
try { NavigationSystemV1.prototype.GetRandomLocationInNavigableRadius = NavigationSystemV1.prototype.K2_GetRandomLocationInNavigableRadius; } catch (e) {};
try { NavigationSystemV1.GetRandomLocationInNavigableRadius = NavigationSystemV1.K2_GetRandomLocationInNavigableRadius; } catch (e) {};
try { let fnprepatch_174 = RecastNavMesh.prototype.K2_ReplaceAreaInTileBounds;RecastNavMesh.prototype.K2_ReplaceAreaInTileBounds = function (Bounds, OldArea, NewArea, ReplaceLinks = true) { return fnprepatch_174.call(this, Bounds, OldArea, NewArea, ReplaceLinks) }; } catch (e) {};
try { RecastNavMesh.prototype.ReplaceAreaInTileBounds = RecastNavMesh.prototype.K2_ReplaceAreaInTileBounds; } catch (e) {};
try { let fnprepatch_175 = NavModifierVolume.prototype.SetAreaClass;NavModifierVolume.prototype.SetAreaClass = function (NewAreaClass = null) { return fnprepatch_175.call(this, NewAreaClass) }; } catch (e) {};
try { let fnprepatch_176 = MaterialEditingLibrary.prototype.UpdateMaterialFunction;MaterialEditingLibrary.prototype.UpdateMaterialFunction = function (MaterialFunction, PreviewMaterial = undefined) { return fnprepatch_176.call(this, MaterialFunction, PreviewMaterial) }; } catch (e) {};
try { let fnprepatch_177 = MaterialEditingLibrary.prototype.SetMaterialInstanceVectorParameterValue;MaterialEditingLibrary.prototype.SetMaterialInstanceVectorParameterValue = function (Instance, ParameterName, Value, Association = "GlobalParameter") { return fnprepatch_177.call(this, Instance, ParameterName, Value, Association) }; } catch (e) {};
try { let fnprepatch_178 = MaterialEditingLibrary.prototype.SetMaterialInstanceTextureParameterValue;MaterialEditingLibrary.prototype.SetMaterialInstanceTextureParameterValue = function (Instance, ParameterName, Value, Association = "GlobalParameter") { return fnprepatch_178.call(this, Instance, ParameterName, Value, Association) }; } catch (e) {};
try { let fnprepatch_179 = MaterialEditingLibrary.prototype.SetMaterialInstanceStaticSwitchParameterValue;MaterialEditingLibrary.prototype.SetMaterialInstanceStaticSwitchParameterValue = function (Instance, ParameterName, Value, Association = "GlobalParameter") { return fnprepatch_179.call(this, Instance, ParameterName, Value, Association) }; } catch (e) {};
try { let fnprepatch_180 = MaterialEditingLibrary.prototype.SetMaterialInstanceSparseVolumeTextureParameterValue;MaterialEditingLibrary.prototype.SetMaterialInstanceSparseVolumeTextureParameterValue = function (Instance, ParameterName, Value, Association = "GlobalParameter") { return fnprepatch_180.call(this, Instance, ParameterName, Value, Association) }; } catch (e) {};
try { let fnprepatch_181 = MaterialEditingLibrary.prototype.SetMaterialInstanceScalarParameterValue;MaterialEditingLibrary.prototype.SetMaterialInstanceScalarParameterValue = function (Instance, ParameterName, Value, Association = "GlobalParameter") { return fnprepatch_181.call(this, Instance, ParameterName, Value, Association) }; } catch (e) {};
try { let fnprepatch_182 = MaterialEditingLibrary.prototype.SetMaterialInstanceRuntimeVirtualTextureParameterValue;MaterialEditingLibrary.prototype.SetMaterialInstanceRuntimeVirtualTextureParameterValue = function (Instance, ParameterName, Value, Association = "GlobalParameter") { return fnprepatch_182.call(this, Instance, ParameterName, Value, Association) }; } catch (e) {};
try { let fnprepatch_183 = MaterialEditingLibrary.prototype.GetMaterialInstanceVectorParameterValue;MaterialEditingLibrary.prototype.GetMaterialInstanceVectorParameterValue = function (Instance, ParameterName, Association = "GlobalParameter") { return fnprepatch_183.call(this, Instance, ParameterName, Association) }; } catch (e) {};
try { let fnprepatch_184 = MaterialEditingLibrary.prototype.GetMaterialInstanceTextureParameterValue;MaterialEditingLibrary.prototype.GetMaterialInstanceTextureParameterValue = function (Instance, ParameterName, Association = "GlobalParameter") { return fnprepatch_184.call(this, Instance, ParameterName, Association) }; } catch (e) {};
try { let fnprepatch_185 = MaterialEditingLibrary.prototype.GetMaterialInstanceStaticSwitchParameterValue;MaterialEditingLibrary.prototype.GetMaterialInstanceStaticSwitchParameterValue = function (Instance, ParameterName, Association = "GlobalParameter") { return fnprepatch_185.call(this, Instance, ParameterName, Association) }; } catch (e) {};
try { let fnprepatch_186 = MaterialEditingLibrary.prototype.GetMaterialInstanceSparseVolumeTextureParameterValue;MaterialEditingLibrary.prototype.GetMaterialInstanceSparseVolumeTextureParameterValue = function (Instance, ParameterName, Association = "GlobalParameter") { return fnprepatch_186.call(this, Instance, ParameterName, Association) }; } catch (e) {};
try { let fnprepatch_187 = MaterialEditingLibrary.prototype.GetMaterialInstanceScalarParameterValue;MaterialEditingLibrary.prototype.GetMaterialInstanceScalarParameterValue = function (Instance, ParameterName, Association = "GlobalParameter") { return fnprepatch_187.call(this, Instance, ParameterName, Association) }; } catch (e) {};
try { let fnprepatch_188 = MaterialEditingLibrary.prototype.GetMaterialInstanceRuntimeVirtualTextureParameterValue;MaterialEditingLibrary.prototype.GetMaterialInstanceRuntimeVirtualTextureParameterValue = function (Instance, ParameterName, Association = "GlobalParameter") { return fnprepatch_188.call(this, Instance, ParameterName, Association) }; } catch (e) {};
try { let fnprepatch_189 = MaterialEditingLibrary.prototype.CreateMaterialExpressionInFunction;MaterialEditingLibrary.prototype.CreateMaterialExpressionInFunction = function (MaterialFunction, ExpressionClass, NodePosX = 0, NodePosY = 0) { return fnprepatch_189.call(this, MaterialFunction, ExpressionClass, NodePosX, NodePosY) }; } catch (e) {};
try { let fnprepatch_190 = MaterialEditingLibrary.prototype.CreateMaterialExpression;MaterialEditingLibrary.prototype.CreateMaterialExpression = function (Material, ExpressionClass, NodePosX = 0, NodePosY = 0) { return fnprepatch_190.call(this, Material, ExpressionClass, NodePosX, NodePosY) }; } catch (e) {};
try { let fnprepatch_191 = CameraComponent.prototype.AddOrUpdateBlendable;CameraComponent.prototype.AddOrUpdateBlendable = function (InBlendableObject, InWeight = 1) { return fnprepatch_191.call(this, InBlendableObject, InWeight) }; } catch (e) {};
try { let fnprepatch_192 = ConstraintsScriptingLibrary.prototype.CreateTransformableHandle;ConstraintsScriptingLibrary.prototype.CreateTransformableHandle = function (InWorld, InObject, InAttachmentName = "None") { return fnprepatch_192.call(this, InWorld, InObject, InAttachmentName) }; } catch (e) {};
try { let fnprepatch_193 = DataLayerEditorSubsystem.prototype.SelectActorsInDataLayers;DataLayerEditorSubsystem.prototype.SelectActorsInDataLayers = function (DataLayers, bSelect, bNotify, bSelectEvenIfHidden = false) { return fnprepatch_193.call(this, DataLayers, bSelect, bNotify, bSelectEvenIfHidden) }; } catch (e) {};
try { let fnprepatch_194 = DataLayerEditorSubsystem.prototype.SelectActorsInDataLayer;DataLayerEditorSubsystem.prototype.SelectActorsInDataLayer = function (DataLayer, bSelect, bNotify, bSelectEvenIfHidden = false) { return fnprepatch_194.call(this, DataLayer, bSelect, bNotify, bSelectEvenIfHidden) }; } catch (e) {};
try { let fnprepatch_195 = DataLayerEditorSubsystem.prototype.CreateDataLayer;DataLayerEditorSubsystem.prototype.CreateDataLayer = function (ParentDataLayer = undefined) { return fnprepatch_195.call(this, ParentDataLayer) }; } catch (e) {};
try { let fnprepatch_196 = SubobjectDataBlueprintFunctionLibrary.prototype.GetObject;SubobjectDataBlueprintFunctionLibrary.prototype.GetObject = function (Data, bEvenIfPendingKill = false) { return fnprepatch_196.call(this, Data, bEvenIfPendingKill) }; } catch (e) {};
try { let fnprepatch_197 = SubobjectDataSubsystem.prototype.FindHandleForObject;SubobjectDataSubsystem.prototype.FindHandleForObject = function (Context, ObjectToFind, BPContext = undefined) { return fnprepatch_197.call(this, Context, ObjectToFind, BPContext) }; } catch (e) {};
try { let fnprepatch_198 = SubobjectDataSubsystem.prototype.DeleteSubobjects;SubobjectDataSubsystem.prototype.DeleteSubobjects = function (ContextHandle, SubobjectsToDelete, BPContext = undefined) { return fnprepatch_198.call(this, ContextHandle, SubobjectsToDelete, BPContext) }; } catch (e) {};
try { let fnprepatch_199 = SubobjectDataSubsystem.prototype.DeleteSubobject;SubobjectDataSubsystem.prototype.DeleteSubobject = function (ContextHandle, SubobjectToDelete, BPContext = undefined) { return fnprepatch_199.call(this, ContextHandle, SubobjectToDelete, BPContext) }; } catch (e) {};
try { let fnprepatch_200 = SubobjectDataSubsystem.prototype.CanPasteSubobjects;SubobjectDataSubsystem.prototype.CanPasteSubobjects = function (RootHandle, BPContext = undefined) { return fnprepatch_200.call(this, RootHandle, BPContext) }; } catch (e) {};
try { SubobjectDataSubsystem.prototype.GatherSubobjectDataForInstance = SubobjectDataSubsystem.prototype.K2_GatherSubobjectDataForInstance; } catch (e) {};
try { SubobjectDataSubsystem.prototype.GatherSubobjectDataForBlueprint = SubobjectDataSubsystem.prototype.K2_GatherSubobjectDataForBlueprint; } catch (e) {};
try { SubobjectDataSubsystem.prototype.FindSubobjectDataFromHandle = SubobjectDataSubsystem.prototype.K2_FindSubobjectDataFromHandle; } catch (e) {};
try { SubobjectDataSubsystem.prototype.DeleteSubobjectsfromInstance = SubobjectDataSubsystem.prototype.K2_DeleteSubobjectsFromInstance; } catch (e) {};
try { SubobjectDataSubsystem.prototype.DeleteSubobjectfromInstance = SubobjectDataSubsystem.prototype.K2_DeleteSubobjectFromInstance; } catch (e) {};
try { SubobjectDataSubsystem.prototype.DeleteSubobjectsfromBlueprint = SubobjectDataSubsystem.prototype.DeleteSubobjects; } catch (e) {};
try { SubobjectDataSubsystem.prototype.DeleteSubobjectfromBlueprint = SubobjectDataSubsystem.prototype.DeleteSubobject; } catch (e) {};
try { SubobjectDataSubsystem.prototype.CreateNewBlueprintComponent = SubobjectDataSubsystem.prototype.CreateNewBPComponent; } catch (e) {};
try { SubobjectDataSubsystem.CreateNewBlueprintComponent = SubobjectDataSubsystem.CreateNewBPComponent; } catch (e) {};
try { ListView.prototype.SetSelectedItem = ListView.prototype.BP_SetSelectedItem; } catch (e) {};
try { ListView.prototype.SetListItems = ListView.prototype.BP_SetListItems; } catch (e) {};
try { ListView.prototype.SetItemSelection = ListView.prototype.BP_SetItemSelection; } catch (e) {};
try { ListView.prototype.ScrollItemIntoView = ListView.prototype.BP_ScrollItemIntoView; } catch (e) {};
try { ListView.prototype.NavigateToItem = ListView.prototype.BP_NavigateToItem; } catch (e) {};
try { ListView.prototype.IsItemVisible = ListView.prototype.BP_IsItemVisible; } catch (e) {};
try { ListView.prototype.GetSelectedItems = ListView.prototype.BP_GetSelectedItems; } catch (e) {};
try { ListView.prototype.GetSelectedItem = ListView.prototype.BP_GetSelectedItem; } catch (e) {};
try { ListView.prototype.GetNumItemsSelected = ListView.prototype.BP_GetNumItemsSelected; } catch (e) {};
try { ListView.prototype.ClearSelection = ListView.prototype.BP_ClearSelection; } catch (e) {};
try { ListView.prototype.CancelScrollIntoView = ListView.prototype.BP_CancelScrollIntoView; } catch (e) {};
try { let fnprepatch_201 = WidgetAnimationPlayCallbackProxy.prototype.CreatePlayAnimationTimeRangeProxyObject;WidgetAnimationPlayCallbackProxy.prototype.CreatePlayAnimationTimeRangeProxyObject = function (Result, Widget, InAnimation, StartAtTime = 0, EndAtTime = 0, NumLoopsToPlay = 1, PlayMode = "Forward", PlaybackSpeed = 1) { return fnprepatch_201.call(this, Result, Widget, InAnimation, StartAtTime, EndAtTime, NumLoopsToPlay, PlayMode, PlaybackSpeed) }; } catch (e) {};
try { let fnprepatch_202 = WidgetAnimationPlayCallbackProxy.prototype.CreatePlayAnimationProxyObject;WidgetAnimationPlayCallbackProxy.prototype.CreatePlayAnimationProxyObject = function (Result, Widget, InAnimation, StartAtTime = 0, NumLoopsToPlay = 1, PlayMode = "Forward", PlaybackSpeed = 1) { return fnprepatch_202.call(this, Result, Widget, InAnimation, StartAtTime, NumLoopsToPlay, PlayMode, PlaybackSpeed) }; } catch (e) {};
try { WidgetAnimationPlayCallbackProxy.prototype.PlayAnimationTimeRangewithFinishedevent = WidgetAnimationPlayCallbackProxy.prototype.CreatePlayAnimationTimeRangeProxyObject; } catch (e) {};
try { WidgetAnimationPlayCallbackProxy.PlayAnimationTimeRangewithFinishedevent = WidgetAnimationPlayCallbackProxy.CreatePlayAnimationTimeRangeProxyObject; } catch (e) {};
try { WidgetAnimationPlayCallbackProxy.prototype.PlayAnimationwithFinishedevent = WidgetAnimationPlayCallbackProxy.prototype.CreatePlayAnimationProxyObject; } catch (e) {};
try { WidgetAnimationPlayCallbackProxy.PlayAnimationwithFinishedevent = WidgetAnimationPlayCallbackProxy.CreatePlayAnimationProxyObject; } catch (e) {};
try { UserListEntry.prototype.OnItemSelectionChanged = UserListEntry.prototype.BP_OnItemSelectionChanged; } catch (e) {};
try { UserListEntry.prototype.OnItemExpansionChanged = UserListEntry.prototype.BP_OnItemExpansionChanged; } catch (e) {};
try { UserListEntry.prototype.OnEntryReleased = UserListEntry.prototype.BP_OnEntryReleased; } catch (e) {};
try { let fnprepatch_203 = DynamicEntryBox.prototype.Reset;DynamicEntryBox.prototype.Reset = function (bDeleteWidgets = false) { return fnprepatch_203.call(this, bDeleteWidgets) }; } catch (e) {};
try { DynamicEntryBox.prototype.CreateEntryofClass = DynamicEntryBox.prototype.BP_CreateEntryOfClass; } catch (e) {};
try { DynamicEntryBox.prototype.CreateEntry = DynamicEntryBox.prototype.BP_CreateEntry; } catch (e) {};
try { EditableTextBox.prototype.IsPassword = EditableTextBox.prototype.SetIsPassword; } catch (e) {};
try { let fnprepatch_204 = GridPanel.prototype.AddChildToGrid;GridPanel.prototype.AddChildToGrid = function (Content, InRow = 0, InColumn = 0) { return fnprepatch_204.call(this, Content, InRow, InColumn) }; } catch (e) {};
try { let fnprepatch_205 = UImage.prototype.SetBrushFromTextureDynamic;UImage.prototype.SetBrushFromTextureDynamic = function (Texture, bMatchSize = false) { return fnprepatch_205.call(this, Texture, bMatchSize) }; } catch (e) {};
try { let fnprepatch_206 = UImage.prototype.SetBrushFromTexture;UImage.prototype.SetBrushFromTexture = function (Texture, bMatchSize = false) { return fnprepatch_206.call(this, Texture, bMatchSize) }; } catch (e) {};
try { let fnprepatch_207 = UImage.prototype.SetBrushFromSoftTexture;UImage.prototype.SetBrushFromSoftTexture = function (SoftTexture, bMatchSize = false) { return fnprepatch_207.call(this, SoftTexture, bMatchSize) }; } catch (e) {};
try { let fnprepatch_208 = UImage.prototype.SetBrushFromAtlasInterface;UImage.prototype.SetBrushFromAtlasInterface = function (AtlasRegion, bMatchSize = false) { return fnprepatch_208.call(this, AtlasRegion, bMatchSize) }; } catch (e) {};
try { let fnprepatch_209 = ScrollBox.prototype.ScrollWidgetIntoView;ScrollBox.prototype.ScrollWidgetIntoView = function (WidgetToFind, AnimateScroll = true, ScrollDestination = "IntoView", Padding = 0) { return fnprepatch_209.call(this, WidgetToFind, AnimateScroll, ScrollDestination, Padding) }; } catch (e) {};
try { let fnprepatch_210 = UniformGridPanel.prototype.AddChildToUniformGrid;UniformGridPanel.prototype.AddChildToUniformGrid = function (Content, InRow = 0, InColumn = 0) { return fnprepatch_210.call(this, Content, InRow, InColumn) }; } catch (e) {};
try { let fnprepatch_211 = WidgetInteractionComponent.prototype.SendKeyChar;WidgetInteractionComponent.prototype.SendKeyChar = function (Characters, bRepeat = false) { return fnprepatch_211.call(this, Characters, bRepeat) }; } catch (e) {};
try { let fnprepatch_212 = WidgetInteractionComponent.prototype.PressKey;WidgetInteractionComponent.prototype.PressKey = function (Key, bRepeat = false) { return fnprepatch_212.call(this, Key, bRepeat) }; } catch (e) {};
try { let fnprepatch_213 = SlateBlueprintLibrary.prototype.ScreenToWidgetLocal;SlateBlueprintLibrary.prototype.ScreenToWidgetLocal = function (WorldContextObject, Geometry, ScreenPosition, LocalCoordinate, bIncludeWindowPosition = false) { return fnprepatch_213.call(this, WorldContextObject, Geometry, ScreenPosition, LocalCoordinate, bIncludeWindowPosition) }; } catch (e) {};
try { let fnprepatch_214 = SlateBlueprintLibrary.prototype.ScreenToWidgetAbsolute;SlateBlueprintLibrary.prototype.ScreenToWidgetAbsolute = function (WorldContextObject, ScreenPosition, AbsoluteCoordinate, bIncludeWindowPosition = false) { return fnprepatch_214.call(this, WorldContextObject, ScreenPosition, AbsoluteCoordinate, bIncludeWindowPosition) }; } catch (e) {};
try { SlateBlueprintLibrary.prototype.ScreenToLocal = SlateBlueprintLibrary.prototype.ScreenToWidgetLocal; } catch (e) {};
try { SlateBlueprintLibrary.ScreenToLocal = SlateBlueprintLibrary.ScreenToWidgetLocal; } catch (e) {};
try { SlateBlueprintLibrary.prototype.ScreenToAbsolute = SlateBlueprintLibrary.prototype.ScreenToWidgetAbsolute; } catch (e) {};
try { SlateBlueprintLibrary.ScreenToAbsolute = SlateBlueprintLibrary.ScreenToWidgetAbsolute; } catch (e) {};
try { SlateBlueprintLibrary.prototype.Equal = SlateBlueprintLibrary.prototype.EqualEqual_SlateBrush; } catch (e) {};
try { SlateBlueprintLibrary.Equal = SlateBlueprintLibrary.EqualEqual_SlateBrush; } catch (e) {};
try { let fnprepatch_215 = WidgetBlueprintLibrary.prototype.SetUserFocus;WidgetBlueprintLibrary.prototype.SetUserFocus = function (Reply, FocusWidget, bInAllUsers = false) { return fnprepatch_215.call(this, Reply, FocusWidget, bInAllUsers) }; } catch (e) {};
try { let fnprepatch_216 = WidgetBlueprintLibrary.prototype.SetInputMode_UIOnlyEx;WidgetBlueprintLibrary.prototype.SetInputMode_UIOnlyEx = function (PlayerController, InWidgetToFocus = undefined, InMouseLockMode = "DoNotLock", bFlushInput = false) { return fnprepatch_216.call(this, PlayerController, InWidgetToFocus, InMouseLockMode, bFlushInput) }; } catch (e) {};
try { let fnprepatch_217 = WidgetBlueprintLibrary.prototype.SetInputMode_GameOnly;WidgetBlueprintLibrary.prototype.SetInputMode_GameOnly = function (PlayerController, bFlushInput = false) { return fnprepatch_217.call(this, PlayerController, bFlushInput) }; } catch (e) {};
try { let fnprepatch_218 = WidgetBlueprintLibrary.prototype.SetInputMode_GameAndUIEx;WidgetBlueprintLibrary.prototype.SetInputMode_GameAndUIEx = function (PlayerController, InWidgetToFocus = undefined, InMouseLockMode = "DoNotLock", bHideCursorDuringCapture = true, bFlushInput = false) { return fnprepatch_218.call(this, PlayerController, InWidgetToFocus, InMouseLockMode, bHideCursorDuringCapture, bFlushInput) }; } catch (e) {};
try { let fnprepatch_219 = WidgetBlueprintLibrary.prototype.ReleaseJoystickCapture;WidgetBlueprintLibrary.prototype.ReleaseJoystickCapture = function (Reply, bInAllJoysticks = false) { return fnprepatch_219.call(this, Reply, bInAllJoysticks) }; } catch (e) {};
try { let fnprepatch_220 = WidgetBlueprintLibrary.prototype.MakeBrushFromTexture;WidgetBlueprintLibrary.prototype.MakeBrushFromTexture = function (Texture, Width = 0, Height = 0) { return fnprepatch_220.call(this, Texture, Width, Height) }; } catch (e) {};
try { let fnprepatch_221 = WidgetBlueprintLibrary.prototype.MakeBrushFromMaterial;WidgetBlueprintLibrary.prototype.MakeBrushFromMaterial = function (Material, Width = 32, Height = 32) { return fnprepatch_221.call(this, Material, Width, Height) }; } catch (e) {};
try { let fnprepatch_222 = WidgetBlueprintLibrary.prototype.GetAllWidgetsOfClass;WidgetBlueprintLibrary.prototype.GetAllWidgetsOfClass = function (WorldContextObject, FoundWidgets, WidgetClass, TopLevelOnly = true) { return fnprepatch_222.call(this, WorldContextObject, FoundWidgets, WidgetClass, TopLevelOnly) }; } catch (e) {};
try { let fnprepatch_223 = WidgetBlueprintLibrary.prototype.DrawTextFormatted;WidgetBlueprintLibrary.prototype.DrawTextFormatted = function (Context, Text, Position, Font, FontSize = 16, FontTypeFace = "Regular", Tint = {"R":1,"G":1,"B":1,"A":1}) { return fnprepatch_223.call(this, Context, Text, Position, Font, FontSize, FontTypeFace, Tint) }; } catch (e) {};
try { let fnprepatch_224 = WidgetBlueprintLibrary.prototype.DrawText;WidgetBlueprintLibrary.prototype.DrawText = function (Context, InString, Position, Tint = {"R":1,"G":1,"B":1,"A":1}) { return fnprepatch_224.call(this, Context, InString, Position, Tint) }; } catch (e) {};
try { let fnprepatch_225 = WidgetBlueprintLibrary.prototype.DrawSpline;WidgetBlueprintLibrary.prototype.DrawSpline = function (Context, Start, StartDir, End, EndDir, Tint = {"R":1,"G":1,"B":1,"A":1}, Thickness = 1) { return fnprepatch_225.call(this, Context, Start, StartDir, End, EndDir, Tint, Thickness) }; } catch (e) {};
try { let fnprepatch_226 = WidgetBlueprintLibrary.prototype.DrawLines;WidgetBlueprintLibrary.prototype.DrawLines = function (Context, Points, Tint = {"R":1,"G":1,"B":1,"A":1}, bAntiAlias = true, Thickness = 1) { return fnprepatch_226.call(this, Context, Points, Tint, bAntiAlias, Thickness) }; } catch (e) {};
try { let fnprepatch_227 = WidgetBlueprintLibrary.prototype.DrawLine;WidgetBlueprintLibrary.prototype.DrawLine = function (Context, PositionA, PositionB, Tint = {"R":1,"G":1,"B":1,"A":1}, bAntiAlias = true, Thickness = 1) { return fnprepatch_227.call(this, Context, PositionA, PositionB, Tint, bAntiAlias, Thickness) }; } catch (e) {};
try { let fnprepatch_228 = WidgetBlueprintLibrary.prototype.DrawBox;WidgetBlueprintLibrary.prototype.DrawBox = function (Context, Position, Size, Brush, Tint = {"R":1,"G":1,"B":1,"A":1}) { return fnprepatch_228.call(this, Context, Position, Size, Brush, Tint) }; } catch (e) {};
try { let fnprepatch_229 = WidgetBlueprintLibrary.prototype.ClearUserFocus;WidgetBlueprintLibrary.prototype.ClearUserFocus = function (Reply, bInAllUsers = false) { return fnprepatch_229.call(this, Reply, bInAllUsers) }; } catch (e) {};
try { let fnprepatch_230 = WidgetBlueprintLibrary.prototype.CaptureJoystick;WidgetBlueprintLibrary.prototype.CaptureJoystick = function (Reply, CapturingWidget, bInAllJoysticks = false) { return fnprepatch_230.call(this, Reply, CapturingWidget, bInAllJoysticks) }; } catch (e) {};
try { WidgetBlueprintLibrary.prototype.SetInputModeUIOnly = WidgetBlueprintLibrary.prototype.SetInputMode_UIOnlyEx; } catch (e) {};
try { WidgetBlueprintLibrary.SetInputModeUIOnly = WidgetBlueprintLibrary.SetInputMode_UIOnlyEx; } catch (e) {};
try { WidgetBlueprintLibrary.prototype.SetInputModeGameAndUI = WidgetBlueprintLibrary.prototype.SetInputMode_GameAndUIEx; } catch (e) {};
try { WidgetBlueprintLibrary.SetInputModeGameAndUI = WidgetBlueprintLibrary.SetInputMode_GameAndUIEx; } catch (e) {};
try { WidgetBlueprintLibrary.prototype.DrawText = WidgetBlueprintLibrary.prototype.DrawTextFormatted; } catch (e) {};
try { WidgetBlueprintLibrary.DrawText = WidgetBlueprintLibrary.DrawTextFormatted; } catch (e) {};
try { WidgetBlueprintLibrary.prototype.DrawString = WidgetBlueprintLibrary.prototype.DrawText; } catch (e) {};
try { WidgetBlueprintLibrary.DrawString = WidgetBlueprintLibrary.DrawText; } catch (e) {};
try { WidgetBlueprintLibrary.prototype.CreateWidget = WidgetBlueprintLibrary.prototype.Create; } catch (e) {};
try { WidgetBlueprintLibrary.CreateWidget = WidgetBlueprintLibrary.Create; } catch (e) {};
try { let fnprepatch_231 = BlueprintEditorLibrary.prototype.RenameGraph;BlueprintEditorLibrary.prototype.RenameGraph = function (Graph, NewNameStr = "NewGraph") { return fnprepatch_231.call(this, Graph, NewNameStr) }; } catch (e) {};
try { let fnprepatch_232 = BlueprintEditorLibrary.prototype.AddFunctionGraph;BlueprintEditorLibrary.prototype.AddFunctionGraph = function (Blueprint, FuncName = "NewFunction") { return fnprepatch_232.call(this, Blueprint, FuncName) }; } catch (e) {};
try { AssetImportData.prototype.GetFirstFilename = AssetImportData.prototype.K2_GetFirstFilename; } catch (e) {};
try { AssetImportData.prototype.ExtractFilenames = AssetImportData.prototype.K2_ExtractFilenames; } catch (e) {};
try { let fnprepatch_233 = InterchangeManager.prototype.ExportScene;InterchangeManager.prototype.ExportScene = function (World, bIsAutomated = false) { return fnprepatch_233.call(this, World, bIsAutomated) }; } catch (e) {};
try { let fnprepatch_234 = InterchangeManager.prototype.ExportAsset;InterchangeManager.prototype.ExportAsset = function (Asset, bIsAutomated = false) { return fnprepatch_234.call(this, Asset, bIsAutomated) }; } catch (e) {};
try { let fnprepatch_235 = AssetTools.prototype.RenameAssetsWithDialog;AssetTools.prototype.RenameAssetsWithDialog = function (AssetsAndNames, bAutoCheckout = false) { return fnprepatch_235.call(this, AssetsAndNames, bAutoCheckout) }; } catch (e) {};
try { let fnprepatch_236 = AssetTools.prototype.MigratePackages;AssetTools.prototype.MigratePackages = function (PackageNamesToMigrate, DestinationPath, Options = {"AssetConflict":"Skip","OrphanFolder":""}) { return fnprepatch_236.call(this, PackageNamesToMigrate, DestinationPath, Options) }; } catch (e) {};
try { let fnprepatch_237 = AssetTools.prototype.CreateAssetWithDialog;AssetTools.prototype.CreateAssetWithDialog = function (AssetName, PackagePath, AssetClass, Factory, CallingContext = "None", bCallConfigureProperties = true) { return fnprepatch_237.call(this, AssetName, PackagePath, AssetClass, Factory, CallingContext, bCallConfigureProperties) }; } catch (e) {};
try { let fnprepatch_238 = AssetTools.prototype.CreateAsset;AssetTools.prototype.CreateAsset = function (AssetName, PackagePath, AssetClass, Factory, CallingContext = "None") { return fnprepatch_238.call(this, AssetName, PackagePath, AssetClass, Factory, CallingContext) }; } catch (e) {};
try { let fnprepatch_239 = SourceControlHelpers.prototype.SyncFiles;SourceControlHelpers.prototype.SyncFiles = function (InFiles, bSilent = false) { return fnprepatch_239.call(this, InFiles, bSilent) }; } catch (e) {};
try { let fnprepatch_240 = SourceControlHelpers.prototype.SyncFile;SourceControlHelpers.prototype.SyncFile = function (InFile, bSilent = false) { return fnprepatch_240.call(this, InFile, bSilent) }; } catch (e) {};
try { let fnprepatch_241 = SourceControlHelpers.prototype.RevertUnchangedFiles;SourceControlHelpers.prototype.RevertUnchangedFiles = function (InFiles, bSilent = false) { return fnprepatch_241.call(this, InFiles, bSilent) }; } catch (e) {};
try { let fnprepatch_242 = SourceControlHelpers.prototype.RevertUnchangedFile;SourceControlHelpers.prototype.RevertUnchangedFile = function (InFile, bSilent = false) { return fnprepatch_242.call(this, InFile, bSilent) }; } catch (e) {};
try { let fnprepatch_243 = SourceControlHelpers.prototype.RevertFiles;SourceControlHelpers.prototype.RevertFiles = function (InFiles, bSilent = false) { return fnprepatch_243.call(this, InFiles, bSilent) }; } catch (e) {};
try { let fnprepatch_244 = SourceControlHelpers.prototype.RevertFile;SourceControlHelpers.prototype.RevertFile = function (InFile, bSilent = false) { return fnprepatch_244.call(this, InFile, bSilent) }; } catch (e) {};
try { let fnprepatch_245 = SourceControlHelpers.prototype.RevertAndReloadPackages;SourceControlHelpers.prototype.RevertAndReloadPackages = function (InPackagesToRevert, bRevertAll = false, bReloadWorld = false) { return fnprepatch_245.call(this, InPackagesToRevert, bRevertAll, bReloadWorld) }; } catch (e) {};
try { let fnprepatch_246 = SourceControlHelpers.prototype.QueryFileState;SourceControlHelpers.prototype.QueryFileState = function (InFile, bSilent = false) { return fnprepatch_246.call(this, InFile, bSilent) }; } catch (e) {};
try { let fnprepatch_247 = SourceControlHelpers.prototype.MarkFilesForDelete;SourceControlHelpers.prototype.MarkFilesForDelete = function (InFiles, bSilent = false) { return fnprepatch_247.call(this, InFiles, bSilent) }; } catch (e) {};
try { let fnprepatch_248 = SourceControlHelpers.prototype.MarkFilesForAdd;SourceControlHelpers.prototype.MarkFilesForAdd = function (InFiles, bSilent = false) { return fnprepatch_248.call(this, InFiles, bSilent) }; } catch (e) {};
try { let fnprepatch_249 = SourceControlHelpers.prototype.MarkFileForDelete;SourceControlHelpers.prototype.MarkFileForDelete = function (InFile, bSilent = false) { return fnprepatch_249.call(this, InFile, bSilent) }; } catch (e) {};
try { let fnprepatch_250 = SourceControlHelpers.prototype.MarkFileForAdd;SourceControlHelpers.prototype.MarkFileForAdd = function (InFile, bSilent = false) { return fnprepatch_250.call(this, InFile, bSilent) }; } catch (e) {};
try { let fnprepatch_251 = SourceControlHelpers.prototype.CopyFile;SourceControlHelpers.prototype.CopyFile = function (InSourceFile, InDestFile, bSilent = false) { return fnprepatch_251.call(this, InSourceFile, InDestFile, bSilent) }; } catch (e) {};
try { let fnprepatch_252 = SourceControlHelpers.prototype.CheckOutOrAddFiles;SourceControlHelpers.prototype.CheckOutOrAddFiles = function (InFiles, bSilent = false) { return fnprepatch_252.call(this, InFiles, bSilent) }; } catch (e) {};
try { let fnprepatch_253 = SourceControlHelpers.prototype.CheckOutOrAddFile;SourceControlHelpers.prototype.CheckOutOrAddFile = function (InFile, bSilent = false) { return fnprepatch_253.call(this, InFile, bSilent) }; } catch (e) {};
try { let fnprepatch_254 = SourceControlHelpers.prototype.CheckOutFiles;SourceControlHelpers.prototype.CheckOutFiles = function (InFiles, bSilent = false) { return fnprepatch_254.call(this, InFiles, bSilent) }; } catch (e) {};
try { let fnprepatch_255 = SourceControlHelpers.prototype.CheckOutFile;SourceControlHelpers.prototype.CheckOutFile = function (InFile, bSilent = false) { return fnprepatch_255.call(this, InFile, bSilent) }; } catch (e) {};
try { let fnprepatch_256 = SourceControlHelpers.prototype.CheckInFiles;SourceControlHelpers.prototype.CheckInFiles = function (InFiles, InDescription, bSilent = false, bKeepCheckedOut = false) { return fnprepatch_256.call(this, InFiles, InDescription, bSilent, bKeepCheckedOut) }; } catch (e) {};
try { let fnprepatch_257 = SourceControlHelpers.prototype.CheckInFile;SourceControlHelpers.prototype.CheckInFile = function (InFile, InDescription, bSilent = false, bKeepCheckedOut = false) { return fnprepatch_257.call(this, InFile, InDescription, bSilent, bKeepCheckedOut) }; } catch (e) {};
try { let fnprepatch_258 = SourceControlHelpers.prototype.AsyncQueryFileState;SourceControlHelpers.prototype.AsyncQueryFileState = function (FileStateCallback, InFile, bSilent = false) { return fnprepatch_258.call(this, FileStateCallback, InFile, bSilent) }; } catch (e) {};
try { let fnprepatch_259 = AnimationGraph.prototype.GetGraphNodesOfClass;AnimationGraph.prototype.GetGraphNodesOfClass = function (NodeClass, GraphNodes, bIncludeChildClasses = true) { return fnprepatch_259.call(this, NodeClass, GraphNodes, bIncludeChildClasses) }; } catch (e) {};
try { let fnprepatch_260 = SkinnedMeshComponent.prototype.SetSkinnedAssetAndUpdate;SkinnedMeshComponent.prototype.SetSkinnedAssetAndUpdate = function (NewMesh, bReinitPose = true) { return fnprepatch_260.call(this, NewMesh, bReinitPose) }; } catch (e) {};
try { let fnprepatch_261 = SkinnedMeshComponent.prototype.SetPhysicsAsset;SkinnedMeshComponent.prototype.SetPhysicsAsset = function (NewPhysicsAsset, bForceReInit = false) { return fnprepatch_261.call(this, NewPhysicsAsset, bForceReInit) }; } catch (e) {};
try { let fnprepatch_262 = SkinnedMeshComponent.prototype.SetLeaderPoseComponent;SkinnedMeshComponent.prototype.SetLeaderPoseComponent = function (NewLeaderBoneComponent, bForceUpdate = false, bInFollowerShouldTickPose = false) { return fnprepatch_262.call(this, NewLeaderBoneComponent, bForceUpdate, bInFollowerShouldTickPose) }; } catch (e) {};
try { let fnprepatch_263 = SkinnedMeshComponent.prototype.GetDeltaTransformFromRefPose;SkinnedMeshComponent.prototype.GetDeltaTransformFromRefPose = function (BoneName, BaseName = "None") { return fnprepatch_263.call(this, BoneName, BaseName) }; } catch (e) {};
try { let fnprepatch_264 = SkinnedMeshComponent.prototype.GetBoneTransform;SkinnedMeshComponent.prototype.GetBoneTransform = function (InBoneName, TransformSpace = "RTS_World") { return fnprepatch_264.call(this, InBoneName, TransformSpace) }; } catch (e) {};
try { let fnprepatch_265 = SkinnedMeshComponent.prototype.FindClosestBone_K2;SkinnedMeshComponent.prototype.FindClosestBone_K2 = function (TestLocation, BoneLocation, IgnoreScale = 0, bRequirePhysicsAsset = false) { return fnprepatch_265.call(this, TestLocation, BoneLocation, IgnoreScale, bRequirePhysicsAsset) }; } catch (e) {};
try { SkinnedMeshComponent.prototype.SetVertexColorOverride = SkinnedMeshComponent.prototype.SetVertexColorOverride_LinearColor; } catch (e) {};
try { SkinnedMeshComponent.prototype.GetSkeletalMesh = SkinnedMeshComponent.prototype.GetSkeletalMesh_DEPRECATED; } catch (e) {};
try { SkinnedMeshComponent.prototype.FindClosestBone = SkinnedMeshComponent.prototype.FindClosestBone_K2; } catch (e) {};
try { let fnprepatch_266 = SkeletalMeshComponent.prototype.UnbindClothFromLeaderPoseComponent;SkeletalMeshComponent.prototype.UnbindClothFromLeaderPoseComponent = function (bRestoreSimulationSpace = true) { return fnprepatch_266.call(this, bRestoreSimulationSpace) }; } catch (e) {};
try { let fnprepatch_267 = SkeletalMeshComponent.prototype.SetPosition;SkeletalMeshComponent.prototype.SetPosition = function (InPos, bFireNotifies = true) { return fnprepatch_267.call(this, InPos, bFireNotifies) }; } catch (e) {};
try { let fnprepatch_268 = SkeletalMeshComponent.prototype.SetNotifyRigidBodyCollisionBelow;SkeletalMeshComponent.prototype.SetNotifyRigidBodyCollisionBelow = function (bNewNotifyRigidBodyCollision, BoneName = "None", bIncludeSelf = true) { return fnprepatch_268.call(this, bNewNotifyRigidBodyCollision, BoneName, bIncludeSelf) }; } catch (e) {};
try { let fnprepatch_269 = SkeletalMeshComponent.prototype.SetMorphTarget;SkeletalMeshComponent.prototype.SetMorphTarget = function (MorphTargetName, Value, bRemoveZeroWeight = true) { return fnprepatch_269.call(this, MorphTargetName, Value, bRemoveZeroWeight) }; } catch (e) {};
try { let fnprepatch_270 = SkeletalMeshComponent.prototype.SetEnableGravityOnAllBodiesBelow;SkeletalMeshComponent.prototype.SetEnableGravityOnAllBodiesBelow = function (bEnableGravity, BoneName, bIncludeSelf = true) { return fnprepatch_270.call(this, bEnableGravity, BoneName, bIncludeSelf) }; } catch (e) {};
try { let fnprepatch_271 = SkeletalMeshComponent.prototype.SetConstraintProfileForAll;SkeletalMeshComponent.prototype.SetConstraintProfileForAll = function (ProfileName, bDefaultIfNotFound = false) { return fnprepatch_271.call(this, ProfileName, bDefaultIfNotFound) }; } catch (e) {};
try { let fnprepatch_272 = SkeletalMeshComponent.prototype.SetConstraintProfile;SkeletalMeshComponent.prototype.SetConstraintProfile = function (JointName, ProfileName, bDefaultIfNotFound = false) { return fnprepatch_272.call(this, JointName, ProfileName, bDefaultIfNotFound) }; } catch (e) {};
try { let fnprepatch_273 = SkeletalMeshComponent.prototype.SetBodyNotifyRigidBodyCollision;SkeletalMeshComponent.prototype.SetBodyNotifyRigidBodyCollision = function (bNewNotifyRigidBodyCollision, BoneName = "None") { return fnprepatch_273.call(this, bNewNotifyRigidBodyCollision, BoneName) }; } catch (e) {};
try { let fnprepatch_274 = SkeletalMeshComponent.prototype.SetAnimationMode;SkeletalMeshComponent.prototype.SetAnimationMode = function (InAnimationMode, bForceInitAnimScriptInstance = true) { return fnprepatch_274.call(this, InAnimationMode, bForceInitAnimScriptInstance) }; } catch (e) {};
try { let fnprepatch_275 = SkeletalMeshComponent.prototype.SetAllowRigidBodyAnimNode;SkeletalMeshComponent.prototype.SetAllowRigidBodyAnimNode = function (bInAllow, bReinitAnim = true) { return fnprepatch_275.call(this, bInAllow, bReinitAnim) }; } catch (e) {};
try { let fnprepatch_276 = SkeletalMeshComponent.prototype.SetAllMotorsAngularVelocityDrive;SkeletalMeshComponent.prototype.SetAllMotorsAngularVelocityDrive = function (bEnableSwingDrive, bEnableTwistDrive, bSkipCustomPhysicsType = false) { return fnprepatch_276.call(this, bEnableSwingDrive, bEnableTwistDrive, bSkipCustomPhysicsType) }; } catch (e) {};
try { let fnprepatch_277 = SkeletalMeshComponent.prototype.SetAllMotorsAngularPositionDrive;SkeletalMeshComponent.prototype.SetAllMotorsAngularPositionDrive = function (bEnableSwingDrive, bEnableTwistDrive, bSkipCustomPhysicsType = false) { return fnprepatch_277.call(this, bEnableSwingDrive, bEnableTwistDrive, bSkipCustomPhysicsType) }; } catch (e) {};
try { let fnprepatch_278 = SkeletalMeshComponent.prototype.SetAllMotorsAngularDriveParams;SkeletalMeshComponent.prototype.SetAllMotorsAngularDriveParams = function (InSpring, InDamping, InForceLimit, bSkipCustomPhysicsType = false) { return fnprepatch_278.call(this, InSpring, InDamping, InForceLimit, bSkipCustomPhysicsType) }; } catch (e) {};
try { let fnprepatch_279 = SkeletalMeshComponent.prototype.SetAllBodiesPhysicsBlendWeight;SkeletalMeshComponent.prototype.SetAllBodiesPhysicsBlendWeight = function (PhysicsBlendWeight, bSkipCustomPhysicsType = false) { return fnprepatch_279.call(this, PhysicsBlendWeight, bSkipCustomPhysicsType) }; } catch (e) {};
try { let fnprepatch_280 = SkeletalMeshComponent.prototype.SetAllBodiesBelowSimulatePhysics;SkeletalMeshComponent.prototype.SetAllBodiesBelowSimulatePhysics = function (InBoneName, bNewSimulate, bIncludeSelf = true) { return fnprepatch_280.call(this, InBoneName, bNewSimulate, bIncludeSelf) }; } catch (e) {};
try { let fnprepatch_281 = SkeletalMeshComponent.prototype.SetAllBodiesBelowPhysicsDisabled;SkeletalMeshComponent.prototype.SetAllBodiesBelowPhysicsDisabled = function (InBoneName, bDisabled, bIncludeSelf = true) { return fnprepatch_281.call(this, InBoneName, bDisabled, bIncludeSelf) }; } catch (e) {};
try { let fnprepatch_282 = SkeletalMeshComponent.prototype.SetAllBodiesBelowPhysicsBlendWeight;SkeletalMeshComponent.prototype.SetAllBodiesBelowPhysicsBlendWeight = function (InBoneName, PhysicsBlendWeight, bSkipCustomPhysicsType = false, bIncludeSelf = true) { return fnprepatch_282.call(this, InBoneName, PhysicsBlendWeight, bSkipCustomPhysicsType, bIncludeSelf) }; } catch (e) {};
try { let fnprepatch_283 = SkeletalMeshComponent.prototype.SetAllBodiesBelowLinearVelocity;SkeletalMeshComponent.prototype.SetAllBodiesBelowLinearVelocity = function (InBoneName, LinearVelocity, bIncludeSelf = true) { return fnprepatch_283.call(this, InBoneName, LinearVelocity, bIncludeSelf) }; } catch (e) {};
try { let fnprepatch_284 = SkeletalMeshComponent.prototype.ResetAnimInstanceDynamics;SkeletalMeshComponent.prototype.ResetAnimInstanceDynamics = function (InTeleportType = "ResetPhysics") { return fnprepatch_284.call(this, InTeleportType) }; } catch (e) {};
try { let fnprepatch_285 = SkeletalMeshComponent.prototype.OverrideAnimationData;SkeletalMeshComponent.prototype.OverrideAnimationData = function (InAnimToPlay, bIsLooping = true, bIsPlaying = true, Position = 0, PlayRate = 1) { return fnprepatch_285.call(this, InAnimToPlay, bIsLooping, bIsPlaying, Position, PlayRate) }; } catch (e) {};
try { let fnprepatch_286 = SkeletalMeshComponent.prototype.GetTransformAttribute_Ref;SkeletalMeshComponent.prototype.GetTransformAttribute_Ref = function (BoneName, AttributeName, OutValue, LookupType = "BoneOnly") { return fnprepatch_286.call(this, BoneName, AttributeName, OutValue, LookupType) }; } catch (e) {};
try { let fnprepatch_287 = SkeletalMeshComponent.prototype.GetTransformAttribute;SkeletalMeshComponent.prototype.GetTransformAttribute = function (BoneName, AttributeName, DefaultValue, OutValue, LookupType = "BoneOnly") { return fnprepatch_287.call(this, BoneName, AttributeName, DefaultValue, OutValue, LookupType) }; } catch (e) {};
try { let fnprepatch_288 = SkeletalMeshComponent.prototype.GetStringAttribute_Ref;SkeletalMeshComponent.prototype.GetStringAttribute_Ref = function (BoneName, AttributeName, OutValue, LookupType = "BoneOnly") { return fnprepatch_288.call(this, BoneName, AttributeName, OutValue, LookupType) }; } catch (e) {};
try { let fnprepatch_289 = SkeletalMeshComponent.prototype.GetStringAttribute;SkeletalMeshComponent.prototype.GetStringAttribute = function (BoneName, AttributeName, DefaultValue, OutValue, LookupType = "BoneOnly") { return fnprepatch_289.call(this, BoneName, AttributeName, DefaultValue, OutValue, LookupType) }; } catch (e) {};
try { let fnprepatch_290 = SkeletalMeshComponent.prototype.GetIntegerAttribute_Ref;SkeletalMeshComponent.prototype.GetIntegerAttribute_Ref = function (BoneName, AttributeName, OutValue, LookupType = "BoneOnly") { return fnprepatch_290.call(this, BoneName, AttributeName, OutValue, LookupType) }; } catch (e) {};
try { let fnprepatch_291 = SkeletalMeshComponent.prototype.GetIntegerAttribute;SkeletalMeshComponent.prototype.GetIntegerAttribute = function (BoneName, AttributeName, DefaultValue, OutValue, LookupType = "BoneOnly") { return fnprepatch_291.call(this, BoneName, AttributeName, DefaultValue, OutValue, LookupType) }; } catch (e) {};
try { let fnprepatch_292 = SkeletalMeshComponent.prototype.GetFloatAttribute_Ref;SkeletalMeshComponent.prototype.GetFloatAttribute_Ref = function (BoneName, AttributeName, OutValue, LookupType = "BoneOnly") { return fnprepatch_292.call(this, BoneName, AttributeName, OutValue, LookupType) }; } catch (e) {};
try { let fnprepatch_293 = SkeletalMeshComponent.prototype.GetFloatAttribute;SkeletalMeshComponent.prototype.GetFloatAttribute = function (BoneName, AttributeName, DefaultValue, OutValue, LookupType = "BoneOnly") { return fnprepatch_293.call(this, BoneName, AttributeName, DefaultValue, OutValue, LookupType) }; } catch (e) {};
try { let fnprepatch_294 = SkeletalMeshComponent.prototype.GetBoneMass;SkeletalMeshComponent.prototype.GetBoneMass = function (BoneName = "None", bScaleMass = true) { return fnprepatch_294.call(this, BoneName, bScaleMass) }; } catch (e) {};
try { let fnprepatch_295 = SkeletalMeshComponent.prototype.AddImpulseToAllBodiesBelow;SkeletalMeshComponent.prototype.AddImpulseToAllBodiesBelow = function (Impulse, BoneName = "None", bVelChange = false, bIncludeSelf = true) { return fnprepatch_295.call(this, Impulse, BoneName, bVelChange, bIncludeSelf) }; } catch (e) {};
try { let fnprepatch_296 = SkeletalMeshComponent.prototype.AddForceToAllBodiesBelow;SkeletalMeshComponent.prototype.AddForceToAllBodiesBelow = function (Force, BoneName = "None", bAccelChange = false, bIncludeSelf = true) { return fnprepatch_296.call(this, Force, BoneName, bAccelChange, bIncludeSelf) }; } catch (e) {};
try { let fnprepatch_297 = SkeletalMeshComponent.prototype.AccumulateAllBodiesBelowPhysicsBlendWeight;SkeletalMeshComponent.prototype.AccumulateAllBodiesBelowPhysicsBlendWeight = function (InBoneName, AddPhysicsBlendWeight, bSkipCustomPhysicsType = false) { return fnprepatch_297.call(this, InBoneName, AddPhysicsBlendWeight, bSkipCustomPhysicsType) }; } catch (e) {};
try { SkeletalMeshComponent.prototype.GetDirectionBetweenSockets = SkeletalMeshComponent.prototype.K2_DirectionBetweenSockets; } catch (e) {};
try { SkeletalMeshComponent.prototype.GetDistanceBetweenTwoSockets = SkeletalMeshComponent.prototype.K2_DistanceBetweenTwoSocketsAndMapRange; } catch (e) {};
try { SkeletalMeshComponent.prototype.SetAnimInstanceClass = SkeletalMeshComponent.prototype.SetAnimClass; } catch (e) {};
try { SkeletalMeshComponent.prototype.GetClosestPointOnPhysicsAsset = SkeletalMeshComponent.prototype.K2_GetClosestPointOnPhysicsAsset; } catch (e) {};
try { let fnprepatch_298 = AnimInstance.prototype.StopSlotAnimation;AnimInstance.prototype.StopSlotAnimation = function (InBlendOutTime = 0.25, SlotNodeName = "None") { return fnprepatch_298.call(this, InBlendOutTime, SlotNodeName) }; } catch (e) {};
try { let fnprepatch_299 = AnimInstance.prototype.RequestSlotGroupInertialization;AnimInstance.prototype.RequestSlotGroupInertialization = function (InSlotGroupName, Duration, BlendProfile = undefined) { return fnprepatch_299.call(this, InSlotGroupName, Duration, BlendProfile) }; } catch (e) {};
try { let fnprepatch_300 = AnimInstance.prototype.PlaySlotAnimationAsDynamicMontage_WithBlendSettings;AnimInstance.prototype.PlaySlotAnimationAsDynamicMontage_WithBlendSettings = function (Asset, SlotNodeName, BlendInSettings, BlendOutSettings, InPlayRate = 1, LoopCount = 1, BlendOutTriggerTime = -1, InTimeToStartMontageAt = 0) { return fnprepatch_300.call(this, Asset, SlotNodeName, BlendInSettings, BlendOutSettings, InPlayRate, LoopCount, BlendOutTriggerTime, InTimeToStartMontageAt) }; } catch (e) {};
try { let fnprepatch_301 = AnimInstance.prototype.PlaySlotAnimationAsDynamicMontage_WithBlendArgs;AnimInstance.prototype.PlaySlotAnimationAsDynamicMontage_WithBlendArgs = function (Asset, SlotNodeName, BlendIn, BlendOut, InPlayRate = 1, LoopCount = 1, BlendOutTriggerTime = -1, InTimeToStartMontageAt = 0) { return fnprepatch_301.call(this, Asset, SlotNodeName, BlendIn, BlendOut, InPlayRate, LoopCount, BlendOutTriggerTime, InTimeToStartMontageAt) }; } catch (e) {};
try { let fnprepatch_302 = AnimInstance.prototype.PlaySlotAnimationAsDynamicMontage;AnimInstance.prototype.PlaySlotAnimationAsDynamicMontage = function (Asset, SlotNodeName, BlendInTime = 0.25, BlendOutTime = 0.25, InPlayRate = 1, LoopCount = 1, BlendOutTriggerTime = -1, InTimeToStartMontageAt = 0) { return fnprepatch_302.call(this, Asset, SlotNodeName, BlendInTime, BlendOutTime, InPlayRate, LoopCount, BlendOutTriggerTime, InTimeToStartMontageAt) }; } catch (e) {};
try { let fnprepatch_303 = AnimInstance.prototype.Montage_StopWithBlendSettings;AnimInstance.prototype.Montage_StopWithBlendSettings = function (BlendOutSettings, Montage = undefined) { return fnprepatch_303.call(this, BlendOutSettings, Montage) }; } catch (e) {};
try { let fnprepatch_304 = AnimInstance.prototype.Montage_StopWithBlendOut;AnimInstance.prototype.Montage_StopWithBlendOut = function (BlendOut, Montage = undefined) { return fnprepatch_304.call(this, BlendOut, Montage) }; } catch (e) {};
try { let fnprepatch_305 = AnimInstance.prototype.Montage_Stop;AnimInstance.prototype.Montage_Stop = function (InBlendOutTime, Montage = undefined) { return fnprepatch_305.call(this, InBlendOutTime, Montage) }; } catch (e) {};
try { let fnprepatch_306 = AnimInstance.prototype.Montage_SetPlayRate;AnimInstance.prototype.Montage_SetPlayRate = function (Montage, NewPlayRate = 1) { return fnprepatch_306.call(this, Montage, NewPlayRate) }; } catch (e) {};
try { let fnprepatch_307 = AnimInstance.prototype.Montage_SetNextSection;AnimInstance.prototype.Montage_SetNextSection = function (SectionNameToChange, NextSection, Montage = undefined) { return fnprepatch_307.call(this, SectionNameToChange, NextSection, Montage) }; } catch (e) {};
try { let fnprepatch_308 = AnimInstance.prototype.Montage_PlayWithBlendSettings;AnimInstance.prototype.Montage_PlayWithBlendSettings = function (MontageToPlay, BlendInSettings, InPlayRate = 1, ReturnValueType = "MontageLength", InTimeToStartMontageAt = 0, bStopAllMontages = true) { return fnprepatch_308.call(this, MontageToPlay, BlendInSettings, InPlayRate, ReturnValueType, InTimeToStartMontageAt, bStopAllMontages) }; } catch (e) {};
try { let fnprepatch_309 = AnimInstance.prototype.Montage_PlayWithBlendIn;AnimInstance.prototype.Montage_PlayWithBlendIn = function (MontageToPlay, BlendIn, InPlayRate = 1, ReturnValueType = "MontageLength", InTimeToStartMontageAt = 0, bStopAllMontages = true) { return fnprepatch_309.call(this, MontageToPlay, BlendIn, InPlayRate, ReturnValueType, InTimeToStartMontageAt, bStopAllMontages) }; } catch (e) {};
try { let fnprepatch_310 = AnimInstance.prototype.Montage_Play;AnimInstance.prototype.Montage_Play = function (MontageToPlay, InPlayRate = 1, ReturnValueType = "MontageLength", InTimeToStartMontageAt = 0, bStopAllMontages = true) { return fnprepatch_310.call(this, MontageToPlay, InPlayRate, ReturnValueType, InTimeToStartMontageAt, bStopAllMontages) }; } catch (e) {};
try { let fnprepatch_311 = AnimInstance.prototype.Montage_Pause;AnimInstance.prototype.Montage_Pause = function (Montage = undefined) { return fnprepatch_311.call(this, Montage) }; } catch (e) {};
try { let fnprepatch_312 = AnimInstance.prototype.Montage_JumpToSectionsEnd;AnimInstance.prototype.Montage_JumpToSectionsEnd = function (SectionName, Montage = undefined) { return fnprepatch_312.call(this, SectionName, Montage) }; } catch (e) {};
try { let fnprepatch_313 = AnimInstance.prototype.Montage_JumpToSection;AnimInstance.prototype.Montage_JumpToSection = function (SectionName, Montage = undefined) { return fnprepatch_313.call(this, SectionName, Montage) }; } catch (e) {};
try { let fnprepatch_314 = AnimInstance.prototype.Montage_GetCurrentSection;AnimInstance.prototype.Montage_GetCurrentSection = function (Montage = undefined) { return fnprepatch_314.call(this, Montage) }; } catch (e) {};
try { let fnprepatch_315 = AnimInstance.prototype.IsSyncGroupBetweenMarkers;AnimInstance.prototype.IsSyncGroupBetweenMarkers = function (InSyncGroupName, PreviousMarker, NextMarker, bRespectMarkerOrder = true) { return fnprepatch_315.call(this, InSyncGroupName, PreviousMarker, NextMarker, bRespectMarkerOrder) }; } catch (e) {};
try { AnimInstance.prototype.GetTransitionTimeElapsed = AnimInstance.prototype.GetInstanceTransitionTimeElapsedFraction; } catch (e) {};
try { AnimInstance.prototype.GetTransitionTimeElapsed = AnimInstance.prototype.GetInstanceTransitionTimeElapsed; } catch (e) {};
try { AnimInstance.prototype.GetTransitionCrossfadeDuration = AnimInstance.prototype.GetInstanceTransitionCrossfadeDuration; } catch (e) {};
try { AnimInstance.prototype.StateWeight = AnimInstance.prototype.GetInstanceStateWeight; } catch (e) {};
try { AnimInstance.prototype.MachineWeight = AnimInstance.prototype.GetInstanceMachineWeight; } catch (e) {};
try { AnimInstance.prototype.CurrentStateTime = AnimInstance.prototype.GetInstanceCurrentStateElapsedTime; } catch (e) {};
try { AnimInstance.prototype.TimeRemaining = AnimInstance.prototype.GetInstanceAssetPlayerTimeFromEndFraction; } catch (e) {};
try { AnimInstance.prototype.TimeRemaining = AnimInstance.prototype.GetInstanceAssetPlayerTimeFromEnd; } catch (e) {};
try { AnimInstance.prototype.CurrentTime = AnimInstance.prototype.GetInstanceAssetPlayerTimeFraction; } catch (e) {};
try { AnimInstance.prototype.CurrentTime = AnimInstance.prototype.GetInstanceAssetPlayerTime; } catch (e) {};
try { AnimInstance.prototype.Length = AnimInstance.prototype.GetInstanceAssetPlayerLength; } catch (e) {};
try { AnimInstance.prototype.GetSlotLocalWeight = AnimInstance.prototype.Blueprint_GetSlotMontageLocalWeight; } catch (e) {};
try { let fnprepatch_316 = AnimSingleNodeInstance.prototype.SetPositionWithPreviousTime;AnimSingleNodeInstance.prototype.SetPositionWithPreviousTime = function (InPosition, InPreviousTime, bFireNotifies = true) { return fnprepatch_316.call(this, InPosition, InPreviousTime, bFireNotifies) }; } catch (e) {};
try { let fnprepatch_317 = AnimSingleNodeInstance.prototype.SetPosition;AnimSingleNodeInstance.prototype.SetPosition = function (InPosition, bFireNotifies = true) { return fnprepatch_317.call(this, InPosition, bFireNotifies) }; } catch (e) {};
try { let fnprepatch_318 = AnimSingleNodeInstance.prototype.SetAnimationAsset;AnimSingleNodeInstance.prototype.SetAnimationAsset = function (NewAsset, bIsLooping = true, InPlayRate = 1) { return fnprepatch_318.call(this, NewAsset, bIsLooping, InPlayRate) }; } catch (e) {};
try { let fnprepatch_319 = AnimSingleNodeInstance.prototype.PlayAnim;AnimSingleNodeInstance.prototype.PlayAnim = function (bIsLooping = false, InPlayRate = 1, InStartPosition = 0) { return fnprepatch_319.call(this, bIsLooping, InPlayRate, InStartPosition) }; } catch (e) {};
try { let fnprepatch_320 = AnimationBlueprintLibrary.prototype.RemoveCurve;AnimationBlueprintLibrary.prototype.RemoveCurve = function (AnimationSequence, CurveName, bRemoveNameFromSkeleton = false) { return fnprepatch_320.call(this, AnimationSequence, CurveName, bRemoveNameFromSkeleton) }; } catch (e) {};
try { let fnprepatch_321 = AnimationBlueprintLibrary.prototype.RemoveBoneAnimation;AnimationBlueprintLibrary.prototype.RemoveBoneAnimation = function (AnimationSequence, BoneName, bIncludeChildren = true, bFinalize = true) { return fnprepatch_321.call(this, AnimationSequence, BoneName, bIncludeChildren, bFinalize) }; } catch (e) {};
try { let fnprepatch_322 = AnimationBlueprintLibrary.prototype.GetNodesOfClass;AnimationBlueprintLibrary.prototype.GetNodesOfClass = function (AnimationBlueprint, NodeClass, GraphNodes, bIncludeChildClasses = true) { return fnprepatch_322.call(this, AnimationBlueprint, NodeClass, GraphNodes, bIncludeChildClasses) }; } catch (e) {};
try { let fnprepatch_323 = AnimationBlueprintLibrary.prototype.GetBonePosesForTime;AnimationBlueprintLibrary.prototype.GetBonePosesForTime = function (AnimationSequenceBase, BoneNames, Time, bExtractRootMotion, Poses, PreviewMesh = undefined) { return fnprepatch_323.call(this, AnimationSequenceBase, BoneNames, Time, bExtractRootMotion, Poses, PreviewMesh) }; } catch (e) {};
try { let fnprepatch_324 = AnimationBlueprintLibrary.prototype.GetBonePosesForFrame;AnimationBlueprintLibrary.prototype.GetBonePosesForFrame = function (AnimationSequenceBase, BoneNames, Frame, bExtractRootMotion, Poses, PreviewMesh = undefined) { return fnprepatch_324.call(this, AnimationSequenceBase, BoneNames, Frame, bExtractRootMotion, Poses, PreviewMesh) }; } catch (e) {};
try { let fnprepatch_325 = AnimationBlueprintLibrary.prototype.CopyAnimNotifiesFromSequence;AnimationBlueprintLibrary.prototype.CopyAnimNotifiesFromSequence = function (SourceAnimationSequenceBase, DestinationAnimationSequenceBase, bDeleteExistingNotifies = false) { return fnprepatch_325.call(this, SourceAnimationSequenceBase, DestinationAnimationSequenceBase, bDeleteExistingNotifies) }; } catch (e) {};
try { let fnprepatch_326 = AnimationBlueprintLibrary.prototype.AddNodeAssetOverride;AnimationBlueprintLibrary.prototype.AddNodeAssetOverride = function (AnimBlueprint, Target, Override, bPrintAppliedOverrides = false) { return fnprepatch_326.call(this, AnimBlueprint, Target, Override, bPrintAppliedOverrides) }; } catch (e) {};
try { let fnprepatch_327 = AnimationBlueprintLibrary.prototype.AddCurve;AnimationBlueprintLibrary.prototype.AddCurve = function (AnimationSequence, CurveName, CurveType = "RCT_Float", bMetaDataCurve = false) { return fnprepatch_327.call(this, AnimationSequence, CurveName, CurveType, bMetaDataCurve) }; } catch (e) {};
try { let fnprepatch_328 = AnimationBlueprintLibrary.prototype.AddAnimationNotifyTrack;AnimationBlueprintLibrary.prototype.AddAnimationNotifyTrack = function (AnimationSequenceBase, NotifyTrackName, TrackColor = {"R":1,"G":1,"B":1,"A":1}) { return fnprepatch_328.call(this, AnimationSequenceBase, NotifyTrackName, TrackColor) }; } catch (e) {};
try { let fnprepatch_329 = AnimPoseExtensions.prototype.SetBonePose;AnimPoseExtensions.prototype.SetBonePose = function (Pose, Transform, BoneName, Space = "Local") { return fnprepatch_329.call(this, Pose, Transform, BoneName, Space) }; } catch (e) {};
try { let fnprepatch_330 = AnimPoseExtensions.prototype.GetSocketPose;AnimPoseExtensions.prototype.GetSocketPose = function (Pose, SocketName, Space = "Local") { return fnprepatch_330.call(this, Pose, SocketName, Space) }; } catch (e) {};
try { let fnprepatch_331 = AnimPoseExtensions.prototype.GetRelativeTransform;AnimPoseExtensions.prototype.GetRelativeTransform = function (Pose, FromBoneName, ToBoneName, Space = "Local") { return fnprepatch_331.call(this, Pose, FromBoneName, ToBoneName, Space) }; } catch (e) {};
try { let fnprepatch_332 = AnimPoseExtensions.prototype.GetRelativeToRefPoseTransform;AnimPoseExtensions.prototype.GetRelativeToRefPoseTransform = function (Pose, BoneName, Space = "Local") { return fnprepatch_332.call(this, Pose, BoneName, Space) }; } catch (e) {};
try { let fnprepatch_333 = AnimPoseExtensions.prototype.GetRefPoseRelativeTransform;AnimPoseExtensions.prototype.GetRefPoseRelativeTransform = function (Pose, FromBoneName, ToBoneName, Space = "Local") { return fnprepatch_333.call(this, Pose, FromBoneName, ToBoneName, Space) }; } catch (e) {};
try { let fnprepatch_334 = AnimPoseExtensions.prototype.GetRefBonePose;AnimPoseExtensions.prototype.GetRefBonePose = function (Pose, BoneName, Space = "Local") { return fnprepatch_334.call(this, Pose, BoneName, Space) }; } catch (e) {};
try { let fnprepatch_335 = AnimPoseExtensions.prototype.GetBonePose;AnimPoseExtensions.prototype.GetBonePose = function (Pose, BoneName, Space = "Local") { return fnprepatch_335.call(this, Pose, BoneName, Space) }; } catch (e) {};
try { BlendSpaceLibrary.prototype.ConverttoBlendSpace = BlendSpaceLibrary.prototype.ConvertToBlendSpacePure; } catch (e) {};
try { BlendSpaceLibrary.ConverttoBlendSpace = BlendSpaceLibrary.ConvertToBlendSpacePure; } catch (e) {};
try { AnimationStateMachineLibrary.prototype.ConverttoAnimationState = AnimationStateMachineLibrary.prototype.ConvertToAnimationStateResultPure; } catch (e) {};
try { AnimationStateMachineLibrary.ConverttoAnimationState = AnimationStateMachineLibrary.ConvertToAnimationStateResultPure; } catch (e) {};
try { AnimationStateMachineLibrary.prototype.ConverttoAnimationState = AnimationStateMachineLibrary.prototype.ConvertToAnimationStateResult; } catch (e) {};
try { AnimationStateMachineLibrary.ConverttoAnimationState = AnimationStateMachineLibrary.ConvertToAnimationStateResult; } catch (e) {};
try { AnimationStateMachineLibrary.prototype.ConverttoAnimationStateMachine = AnimationStateMachineLibrary.prototype.ConvertToAnimationStateMachinePure; } catch (e) {};
try { AnimationStateMachineLibrary.ConverttoAnimationStateMachine = AnimationStateMachineLibrary.ConvertToAnimationStateMachinePure; } catch (e) {};
try { let fnprepatch_336 = BlendSpacePlayerLibrary.prototype.SetBlendSpaceWithInertialBlending;BlendSpacePlayerLibrary.prototype.SetBlendSpaceWithInertialBlending = function (UpdateContext, BlendSpacePlayer, BlendSpace, BlendTime = 0.20000000298023224) { return fnprepatch_336.call(this, UpdateContext, BlendSpacePlayer, BlendSpace, BlendTime) }; } catch (e) {};
try { BlendSpacePlayerLibrary.prototype.ConverttoBlendSpacePlayer = BlendSpacePlayerLibrary.prototype.ConvertToBlendSpacePlayerPure; } catch (e) {};
try { BlendSpacePlayerLibrary.ConverttoBlendSpacePlayer = BlendSpacePlayerLibrary.ConvertToBlendSpacePlayerPure; } catch (e) {};
try { let fnprepatch_337 = KismetAnimationLibrary.prototype.K2_EndProfilingTimer;KismetAnimationLibrary.prototype.K2_EndProfilingTimer = function (bLog = true, LogPrefix) { return fnprepatch_337.call(this, bLog, LogPrefix) }; } catch (e) {};
try { KismetAnimationLibrary.prototype.TwoBoneIKFunction = KismetAnimationLibrary.prototype.K2_TwoBoneIK; } catch (e) {};
try { KismetAnimationLibrary.TwoBoneIKFunction = KismetAnimationLibrary.K2_TwoBoneIK; } catch (e) {};
try { KismetAnimationLibrary.prototype.StartProfilingTimer = KismetAnimationLibrary.prototype.K2_StartProfilingTimer; } catch (e) {};
try { KismetAnimationLibrary.StartProfilingTimer = KismetAnimationLibrary.K2_StartProfilingTimer; } catch (e) {};
try { KismetAnimationLibrary.prototype.MakePerlinNoiseVectorandRemap = KismetAnimationLibrary.prototype.K2_MakePerlinNoiseVectorAndRemap; } catch (e) {};
try { KismetAnimationLibrary.MakePerlinNoiseVectorandRemap = KismetAnimationLibrary.K2_MakePerlinNoiseVectorAndRemap; } catch (e) {};
try { KismetAnimationLibrary.prototype.MakePerlinNoiseandRemap = KismetAnimationLibrary.prototype.K2_MakePerlinNoiseAndRemap; } catch (e) {};
try { KismetAnimationLibrary.MakePerlinNoiseandRemap = KismetAnimationLibrary.K2_MakePerlinNoiseAndRemap; } catch (e) {};
try { KismetAnimationLibrary.prototype.LookAtFunction = KismetAnimationLibrary.prototype.K2_LookAt; } catch (e) {};
try { KismetAnimationLibrary.LookAtFunction = KismetAnimationLibrary.K2_LookAt; } catch (e) {};
try { KismetAnimationLibrary.prototype.EndProfilingTimer = KismetAnimationLibrary.prototype.K2_EndProfilingTimer; } catch (e) {};
try { KismetAnimationLibrary.EndProfilingTimer = KismetAnimationLibrary.K2_EndProfilingTimer; } catch (e) {};
try { KismetAnimationLibrary.prototype.GetDistanceBetweenTwoSockets = KismetAnimationLibrary.prototype.K2_DistanceBetweenTwoSocketsAndMapRange; } catch (e) {};
try { KismetAnimationLibrary.GetDistanceBetweenTwoSockets = KismetAnimationLibrary.K2_DistanceBetweenTwoSocketsAndMapRange; } catch (e) {};
try { KismetAnimationLibrary.prototype.GetDirectionBetweenSockets = KismetAnimationLibrary.prototype.K2_DirectionBetweenSockets; } catch (e) {};
try { KismetAnimationLibrary.GetDirectionBetweenSockets = KismetAnimationLibrary.K2_DirectionBetweenSockets; } catch (e) {};
try { KismetAnimationLibrary.prototype.CalculateVelocityFromSockets = KismetAnimationLibrary.prototype.K2_CalculateVelocityFromSockets; } catch (e) {};
try { KismetAnimationLibrary.CalculateVelocityFromSockets = KismetAnimationLibrary.K2_CalculateVelocityFromSockets; } catch (e) {};
try { KismetAnimationLibrary.prototype.CalculateVelocityFromPositionHistory = KismetAnimationLibrary.prototype.K2_CalculateVelocityFromPositionHistory; } catch (e) {};
try { KismetAnimationLibrary.CalculateVelocityFromPositionHistory = KismetAnimationLibrary.K2_CalculateVelocityFromPositionHistory; } catch (e) {};
try { LayeredBoneBlendLibrary.prototype.ConverttoLayeredBoneBlend = LayeredBoneBlendLibrary.prototype.ConvertToLayeredBlendPerBonePure; } catch (e) {};
try { LayeredBoneBlendLibrary.ConverttoLayeredBoneBlend = LayeredBoneBlendLibrary.ConvertToLayeredBlendPerBonePure; } catch (e) {};
try { LinkedAnimGraphLibrary.prototype.ConverttoLinkedAnimGraph = LinkedAnimGraphLibrary.prototype.ConvertToLinkedAnimGraphPure; } catch (e) {};
try { LinkedAnimGraphLibrary.ConverttoLinkedAnimGraph = LinkedAnimGraphLibrary.ConvertToLinkedAnimGraphPure; } catch (e) {};
try { let fnprepatch_338 = PlayMontageCallbackProxy.prototype.CreateProxyObjectForPlayMontage;PlayMontageCallbackProxy.prototype.CreateProxyObjectForPlayMontage = function (InSkeletalMeshComponent, MontageToPlay, PlayRate = 1, StartingPosition = 0, StartingSection = "None") { return fnprepatch_338.call(this, InSkeletalMeshComponent, MontageToPlay, PlayRate, StartingPosition, StartingSection) }; } catch (e) {};
try { let fnprepatch_339 = SequenceEvaluatorLibrary.prototype.SetSequenceWithInertialBlending;SequenceEvaluatorLibrary.prototype.SetSequenceWithInertialBlending = function (UpdateContext, SequenceEvaluator, Sequence, BlendTime = 0.20000000298023224) { return fnprepatch_339.call(this, UpdateContext, SequenceEvaluator, Sequence, BlendTime) }; } catch (e) {};
try { let fnprepatch_340 = SequenceEvaluatorLibrary.prototype.AdvanceTime;SequenceEvaluatorLibrary.prototype.AdvanceTime = function (UpdateContext, SequenceEvaluator, PlayRate = 1) { return fnprepatch_340.call(this, UpdateContext, SequenceEvaluator, PlayRate) }; } catch (e) {};
try { SequenceEvaluatorLibrary.prototype.ConverttoSequenceEvaluator = SequenceEvaluatorLibrary.prototype.ConvertToSequenceEvaluatorPure; } catch (e) {};
try { SequenceEvaluatorLibrary.ConverttoSequenceEvaluator = SequenceEvaluatorLibrary.ConvertToSequenceEvaluatorPure; } catch (e) {};
try { let fnprepatch_341 = SequencePlayerLibrary.prototype.SetSequenceWithInertialBlending;SequencePlayerLibrary.prototype.SetSequenceWithInertialBlending = function (UpdateContext, SequencePlayer, Sequence, BlendTime = 0.20000000298023224) { return fnprepatch_341.call(this, UpdateContext, SequencePlayer, Sequence, BlendTime) }; } catch (e) {};
try { let fnprepatch_342 = SequencePlayerLibrary.prototype.ComputePlayRateFromDuration;SequencePlayerLibrary.prototype.ComputePlayRateFromDuration = function (SequencePlayer, Duration = 1) { return fnprepatch_342.call(this, SequencePlayer, Duration) }; } catch (e) {};
try { SequencePlayerLibrary.prototype.GetSequence = SequencePlayerLibrary.prototype.GetSequencePure; } catch (e) {};
try { SequencePlayerLibrary.GetSequence = SequencePlayerLibrary.GetSequencePure; } catch (e) {};
try { SequencePlayerLibrary.prototype.ConverttoSequencePlayer = SequencePlayerLibrary.prototype.ConvertToSequencePlayerPure; } catch (e) {};
try { SequencePlayerLibrary.ConverttoSequencePlayer = SequencePlayerLibrary.ConvertToSequencePlayerPure; } catch (e) {};
try { SkeletalControlLibrary.prototype.ConverttoSkeletalControl = SkeletalControlLibrary.prototype.ConvertToSkeletalControlPure; } catch (e) {};
try { SkeletalControlLibrary.ConverttoSkeletalControl = SkeletalControlLibrary.ConvertToSkeletalControlPure; } catch (e) {};
try { MovieSceneTransformOrigin.prototype.GetTransformOrigin = MovieSceneTransformOrigin.prototype.BP_GetTransformOrigin; } catch (e) {};
try { let fnprepatch_343 = PlayerCameraManager.prototype.StopCameraShake;PlayerCameraManager.prototype.StopCameraShake = function (ShakeInstance, bImmediately = true) { return fnprepatch_343.call(this, ShakeInstance, bImmediately) }; } catch (e) {};
try { let fnprepatch_344 = PlayerCameraManager.prototype.StopAllInstancesOfCameraShakeFromSource;PlayerCameraManager.prototype.StopAllInstancesOfCameraShakeFromSource = function (Shake, SourceComponent, bImmediately = true) { return fnprepatch_344.call(this, Shake, SourceComponent, bImmediately) }; } catch (e) {};
try { let fnprepatch_345 = PlayerCameraManager.prototype.StopAllInstancesOfCameraShake;PlayerCameraManager.prototype.StopAllInstancesOfCameraShake = function (Shake, bImmediately = true) { return fnprepatch_345.call(this, Shake, bImmediately) }; } catch (e) {};
try { let fnprepatch_346 = PlayerCameraManager.prototype.StopAllCameraShakesFromSource;PlayerCameraManager.prototype.StopAllCameraShakesFromSource = function (SourceComponent, bImmediately = true) { return fnprepatch_346.call(this, SourceComponent, bImmediately) }; } catch (e) {};
try { let fnprepatch_347 = PlayerCameraManager.prototype.StopAllCameraShakes;PlayerCameraManager.prototype.StopAllCameraShakes = function (bImmediately = true) { return fnprepatch_347.call(this, bImmediately) }; } catch (e) {};
try { let fnprepatch_348 = PlayerCameraManager.prototype.StartCameraShakeFromSource;PlayerCameraManager.prototype.StartCameraShakeFromSource = function (ShakeClass, SourceComponent, Scale = 1, PlaySpace = "CameraLocal", UserPlaySpaceRot) { return fnprepatch_348.call(this, ShakeClass, SourceComponent, Scale, PlaySpace, UserPlaySpaceRot) }; } catch (e) {};
try { let fnprepatch_349 = PlayerCameraManager.prototype.StartCameraShake;PlayerCameraManager.prototype.StartCameraShake = function (ShakeClass, Scale = 1, PlaySpace = "CameraLocal", UserPlaySpaceRot) { return fnprepatch_349.call(this, ShakeClass, Scale, PlaySpace, UserPlaySpaceRot) }; } catch (e) {};
try { let fnprepatch_350 = PlayerCameraManager.prototype.StartCameraFade;PlayerCameraManager.prototype.StartCameraFade = function (FromAlpha, ToAlpha, Duration, Color, bShouldFadeAudio = false, bHoldWhenFinished = false) { return fnprepatch_350.call(this, FromAlpha, ToAlpha, Duration, Color, bShouldFadeAudio, bHoldWhenFinished) }; } catch (e) {};
try { let fnprepatch_351 = TimeManagementBlueprintLibrary.prototype.Conv_TimecodeToString;TimeManagementBlueprintLibrary.prototype.Conv_TimecodeToString = function (InTimecode, bForceSignDisplay = false) { return fnprepatch_351.call(this, InTimecode, bForceSignDisplay) }; } catch (e) {};
try { TimeManagementBlueprintLibrary.prototype.TransformFrameTime = TimeManagementBlueprintLibrary.prototype.TransformTime; } catch (e) {};
try { TimeManagementBlueprintLibrary.TransformFrameTime = TimeManagementBlueprintLibrary.TransformTime; } catch (e) {};
try { TimeManagementBlueprintLibrary.prototype.SnapFrameTime = TimeManagementBlueprintLibrary.prototype.SnapFrameTimeToRate; } catch (e) {};
try { TimeManagementBlueprintLibrary.SnapFrameTime = TimeManagementBlueprintLibrary.SnapFrameTimeToRate; } catch (e) {};
try { TimeManagementBlueprintLibrary.prototype.IsMultipleOf = TimeManagementBlueprintLibrary.prototype.IsValid_MultipleOf; } catch (e) {};
try { TimeManagementBlueprintLibrary.IsMultipleOf = TimeManagementBlueprintLibrary.IsValid_MultipleOf; } catch (e) {};
try { TimeManagementBlueprintLibrary.prototype.IsValidFrameRate = TimeManagementBlueprintLibrary.prototype.IsValid_Framerate; } catch (e) {};
try { TimeManagementBlueprintLibrary.IsValidFrameRate = TimeManagementBlueprintLibrary.IsValid_Framerate; } catch (e) {};
try { TimeManagementBlueprintLibrary.prototype.TimecodeToString = TimeManagementBlueprintLibrary.prototype.Conv_TimecodeToString; } catch (e) {};
try { TimeManagementBlueprintLibrary.TimecodeToString = TimeManagementBlueprintLibrary.Conv_TimecodeToString; } catch (e) {};
try { TimeManagementBlueprintLibrary.prototype.QualifiedFrameTimeToSeconds = TimeManagementBlueprintLibrary.prototype.Conv_QualifiedFrameTimeToSeconds; } catch (e) {};
try { TimeManagementBlueprintLibrary.QualifiedFrameTimeToSeconds = TimeManagementBlueprintLibrary.Conv_QualifiedFrameTimeToSeconds; } catch (e) {};
try { TimeManagementBlueprintLibrary.prototype.FrameRateToSeconds = TimeManagementBlueprintLibrary.prototype.Conv_FrameRateToSeconds; } catch (e) {};
try { TimeManagementBlueprintLibrary.FrameRateToSeconds = TimeManagementBlueprintLibrary.Conv_FrameRateToSeconds; } catch (e) {};
try { TimeManagementBlueprintLibrary.prototype.FrameRateToInterval = TimeManagementBlueprintLibrary.prototype.Conv_FrameRateToInterval; } catch (e) {};
try { TimeManagementBlueprintLibrary.FrameRateToInterval = TimeManagementBlueprintLibrary.Conv_FrameRateToInterval; } catch (e) {};
try { TimeManagementBlueprintLibrary.prototype.FrameNumbertoInteger = TimeManagementBlueprintLibrary.prototype.Conv_FrameNumberToInteger; } catch (e) {};
try { TimeManagementBlueprintLibrary.FrameNumbertoInteger = TimeManagementBlueprintLibrary.Conv_FrameNumberToInteger; } catch (e) {};
try { MovieSceneBoundObjectProxy.prototype.GetBoundObjectForSequencer = MovieSceneBoundObjectProxy.prototype.BP_GetBoundObjectForSequencer; } catch (e) {};
try { let fnprepatch_352 = BuiltInDynamicBindingResolverLibrary.prototype.ResolveToPlayerPawn;BuiltInDynamicBindingResolverLibrary.prototype.ResolveToPlayerPawn = function (WorldContextObject, PlayerControllerIndex = 0) { return fnprepatch_352.call(this, WorldContextObject, PlayerControllerIndex) }; } catch (e) {};
try { let fnprepatch_353 = MovieSceneSequencePlayer.prototype.SetFrameRange;MovieSceneSequencePlayer.prototype.SetFrameRange = function (StartFrame, Duration, SubFrames = 0) { return fnprepatch_353.call(this, StartFrame, Duration, SubFrames) }; } catch (e) {};
try { let fnprepatch_354 = MovieSceneSequencePlayer.prototype.PlayLooping;MovieSceneSequencePlayer.prototype.PlayLooping = function (NumLoops = -1) { return fnprepatch_354.call(this, NumLoops) }; } catch (e) {};
try { let fnprepatch_355 = MovieSceneSequencePlayer.prototype.GetSequenceName;MovieSceneSequencePlayer.prototype.GetSequenceName = function (bAddClientInfo = false) { return fnprepatch_355.call(this, bAddClientInfo) }; } catch (e) {};
try { MovieSceneSequencePlayer.prototype.SetPlayRange = MovieSceneSequencePlayer.prototype.SetTimeRange; } catch (e) {};
try { MovieSceneSequencePlayer.prototype.SetPlayRange = MovieSceneSequencePlayer.prototype.SetFrameRange; } catch (e) {};
try { let fnprepatch_356 = AudioLinkBlueprintInterface.prototype.PlayLink;AudioLinkBlueprintInterface.prototype.PlayLink = function (StartTime = 0) { return fnprepatch_356.call(this, StartTime) }; } catch (e) {};
try { let fnprepatch_357 = AudioMixerBlueprintLibrary.prototype.StopRecordingOutput;AudioMixerBlueprintLibrary.prototype.StopRecordingOutput = function (WorldContextObject, ExportType, Name, Path, SubmixToRecord = undefined, ExistingSoundWaveToOverwrite = undefined) { return fnprepatch_357.call(this, WorldContextObject, ExportType, Name, Path, SubmixToRecord, ExistingSoundWaveToOverwrite) }; } catch (e) {};
try { let fnprepatch_358 = AudioMixerBlueprintLibrary.prototype.StopAnalyzingOutput;AudioMixerBlueprintLibrary.prototype.StopAnalyzingOutput = function (WorldContextObject, SubmixToStopAnalyzing = undefined) { return fnprepatch_358.call(this, WorldContextObject, SubmixToStopAnalyzing) }; } catch (e) {};
try { let fnprepatch_359 = AudioMixerBlueprintLibrary.prototype.StartRecordingOutput;AudioMixerBlueprintLibrary.prototype.StartRecordingOutput = function (WorldContextObject, ExpectedDuration, SubmixToRecord = undefined) { return fnprepatch_359.call(this, WorldContextObject, ExpectedDuration, SubmixToRecord) }; } catch (e) {};
try { let fnprepatch_360 = AudioMixerBlueprintLibrary.prototype.StartAnalyzingOutput;AudioMixerBlueprintLibrary.prototype.StartAnalyzingOutput = function (WorldContextObject, SubmixToAnalyze = undefined, FFTSize = "DefaultSize", InterpolationMethod = "NearestNeighbor", WindowType = "None", HopSize = 0, SpectrumType = "MagnitudeSpectrum") { return fnprepatch_360.call(this, WorldContextObject, SubmixToAnalyze, FFTSize, InterpolationMethod, WindowType, HopSize, SpectrumType) }; } catch (e) {};
try { let fnprepatch_361 = AudioMixerBlueprintLibrary.prototype.ResumeRecordingOutput;AudioMixerBlueprintLibrary.prototype.ResumeRecordingOutput = function (WorldContextObject, SubmixToPause = undefined) { return fnprepatch_361.call(this, WorldContextObject, SubmixToPause) }; } catch (e) {};
try { let fnprepatch_362 = AudioMixerBlueprintLibrary.prototype.PauseRecordingOutput;AudioMixerBlueprintLibrary.prototype.PauseRecordingOutput = function (WorldContextObject, SubmixToPause = undefined) { return fnprepatch_362.call(this, WorldContextObject, SubmixToPause) }; } catch (e) {};
try { let fnprepatch_363 = AudioMixerBlueprintLibrary.prototype.MakePresetSpectralAnalysisBandSettings;AudioMixerBlueprintLibrary.prototype.MakePresetSpectralAnalysisBandSettings = function (InBandPresetType, InNumBands = 10, InAttackTimeMsec = 10, InReleaseTimeMsec = 10) { return fnprepatch_363.call(this, InBandPresetType, InNumBands, InAttackTimeMsec, InReleaseTimeMsec) }; } catch (e) {};
try { let fnprepatch_364 = AudioMixerBlueprintLibrary.prototype.MakeMusicalSpectralAnalysisBandSettings;AudioMixerBlueprintLibrary.prototype.MakeMusicalSpectralAnalysisBandSettings = function (InNumSemitones = 60, InStartingMusicalNote = "", InStartingOctave = 2, InAttackTimeMsec = 10, InReleaseTimeMsec = 10) { return fnprepatch_364.call(this, InNumSemitones, InStartingMusicalNote, InStartingOctave, InAttackTimeMsec, InReleaseTimeMsec) }; } catch (e) {};
try { let fnprepatch_365 = AudioMixerBlueprintLibrary.prototype.MakeFullSpectrumSpectralAnalysisBandSettings;AudioMixerBlueprintLibrary.prototype.MakeFullSpectrumSpectralAnalysisBandSettings = function (InNumBands = 30, InMinimumFrequency = 40, InMaximumFrequency = 16000, InAttackTimeMsec = 10, InReleaseTimeMsec = 10) { return fnprepatch_365.call(this, InNumBands, InMinimumFrequency, InMaximumFrequency, InAttackTimeMsec, InReleaseTimeMsec) }; } catch (e) {};
try { let fnprepatch_366 = AudioMixerBlueprintLibrary.prototype.GetPhaseForFrequencies;AudioMixerBlueprintLibrary.prototype.GetPhaseForFrequencies = function (WorldContextObject, Frequencies, Phases, SubmixToAnalyze = undefined) { return fnprepatch_366.call(this, WorldContextObject, Frequencies, Phases, SubmixToAnalyze) }; } catch (e) {};
try { let fnprepatch_367 = AudioMixerBlueprintLibrary.prototype.GetMagnitudeForFrequencies;AudioMixerBlueprintLibrary.prototype.GetMagnitudeForFrequencies = function (WorldContextObject, Frequencies, Magnitudes, SubmixToAnalyze = undefined) { return fnprepatch_367.call(this, WorldContextObject, Frequencies, Magnitudes, SubmixToAnalyze) }; } catch (e) {};
try { AudioMixerBlueprintLibrary.prototype.FinishRecordingOutput = AudioMixerBlueprintLibrary.prototype.StopRecordingOutput; } catch (e) {};
try { AudioMixerBlueprintLibrary.FinishRecordingOutput = AudioMixerBlueprintLibrary.StopRecordingOutput; } catch (e) {};
try { AudioMixerBlueprintLibrary.prototype.AudioOutputDeviceInfoToString = AudioMixerBlueprintLibrary.prototype.Conv_AudioOutputDeviceInfoToString; } catch (e) {};
try { AudioMixerBlueprintLibrary.AudioOutputDeviceInfoToString = AudioMixerBlueprintLibrary.Conv_AudioOutputDeviceInfoToString; } catch (e) {};
try { let fnprepatch_368 = SoundWave.prototype.SetSoundAssetCompressionType;SoundWave.prototype.SetSoundAssetCompressionType = function (InSoundAssetCompressionType, bMarkDirty = true) { return fnprepatch_368.call(this, InSoundAssetCompressionType, bMarkDirty) }; } catch (e) {};
try { let fnprepatch_369 = SynthComponent.prototype.SetModulationRouting;SynthComponent.prototype.SetModulationRouting = function (Modulators, Destination, RoutingMethod = "Disable") { return fnprepatch_369.call(this, Modulators, Destination, RoutingMethod) }; } catch (e) {};
try { let fnprepatch_370 = SynthComponent.prototype.FadeOut;SynthComponent.prototype.FadeOut = function (FadeOutDuration, FadeVolumeLevel, FadeCurve = "Linear") { return fnprepatch_370.call(this, FadeOutDuration, FadeVolumeLevel, FadeCurve) }; } catch (e) {};
try { let fnprepatch_371 = SynthComponent.prototype.FadeIn;SynthComponent.prototype.FadeIn = function (FadeInDuration, FadeVolumeLevel = 1, StartTime = 0, FadeCurve = "Linear") { return fnprepatch_371.call(this, FadeInDuration, FadeVolumeLevel, StartTime, FadeCurve) }; } catch (e) {};
try { let fnprepatch_372 = SynthComponent.prototype.AdjustVolume;SynthComponent.prototype.AdjustVolume = function (AdjustVolumeDuration, AdjustVolumeLevel, FadeCurve = "Linear") { return fnprepatch_372.call(this, AdjustVolumeDuration, AdjustVolumeLevel, FadeCurve) }; } catch (e) {};
try { let fnprepatch_373 = SubmixEffectReverbPreset.prototype.SetSettingsWithReverbEffect;SubmixEffectReverbPreset.prototype.SetSettingsWithReverbEffect = function (InReverbEffect, WetLevel, DryLevel = 0) { return fnprepatch_373.call(this, InReverbEffect, WetLevel, DryLevel) }; } catch (e) {};
try { let fnprepatch_374 = QuartzClockHandle.prototype.SetTicksPerSecond;QuartzClockHandle.prototype.SetTicksPerSecond = function (WorldContextObject, QuantizationBoundary, Delegate, ClockHandle, TicksPerSecond = 10) { return fnprepatch_374.call(this, WorldContextObject, QuantizationBoundary, Delegate, ClockHandle, TicksPerSecond) }; } catch (e) {};
try { let fnprepatch_375 = QuartzClockHandle.prototype.SetThirtySecondNotesPerMinute;QuartzClockHandle.prototype.SetThirtySecondNotesPerMinute = function (WorldContextObject, QuantizationBoundary, Delegate, ClockHandle, ThirtySecondsNotesPerMinute = 960) { return fnprepatch_375.call(this, WorldContextObject, QuantizationBoundary, Delegate, ClockHandle, ThirtySecondsNotesPerMinute) }; } catch (e) {};
try { let fnprepatch_376 = QuartzClockHandle.prototype.SetSecondsPerTick;QuartzClockHandle.prototype.SetSecondsPerTick = function (WorldContextObject, QuantizationBoundary, Delegate, ClockHandle, SecondsPerTick = 0.25) { return fnprepatch_376.call(this, WorldContextObject, QuantizationBoundary, Delegate, ClockHandle, SecondsPerTick) }; } catch (e) {};
try { let fnprepatch_377 = QuartzClockHandle.prototype.SetMillisecondsPerTick;QuartzClockHandle.prototype.SetMillisecondsPerTick = function (WorldContextObject, QuantizationBoundary, Delegate, ClockHandle, MillisecondsPerTick = 100) { return fnprepatch_377.call(this, WorldContextObject, QuantizationBoundary, Delegate, ClockHandle, MillisecondsPerTick) }; } catch (e) {};
try { let fnprepatch_378 = QuartzClockHandle.prototype.SetBeatsPerMinute;QuartzClockHandle.prototype.SetBeatsPerMinute = function (WorldContextObject, QuantizationBoundary, Delegate, ClockHandle, BeatsPerMinute = 60) { return fnprepatch_378.call(this, WorldContextObject, QuantizationBoundary, Delegate, ClockHandle, BeatsPerMinute) }; } catch (e) {};
try { let fnprepatch_379 = QuartzClockHandle.prototype.NotifyOnQuantizationBoundary;QuartzClockHandle.prototype.NotifyOnQuantizationBoundary = function (WorldContextObject, InQuantizationBoundary, InDelegate, InMsOffset = 0) { return fnprepatch_379.call(this, WorldContextObject, InQuantizationBoundary, InDelegate, InMsOffset) }; } catch (e) {};
try { let fnprepatch_380 = QuartzClockHandle.prototype.GetDurationOfQuantizationTypeInSeconds;QuartzClockHandle.prototype.GetDurationOfQuantizationTypeInSeconds = function (WorldContextObject, QuantizationType, Multiplier = 1) { return fnprepatch_380.call(this, WorldContextObject, QuantizationType, Multiplier) }; } catch (e) {};
try { let fnprepatch_381 = QuartzClockHandle.prototype.GetBeatProgressPercent;QuartzClockHandle.prototype.GetBeatProgressPercent = function (QuantizationBoundary = "Beat", PhaseOffset = 0, MsOffset = 0) { return fnprepatch_381.call(this, QuantizationBoundary, PhaseOffset, MsOffset) }; } catch (e) {};
try { let fnprepatch_382 = QuartzSubsystem.prototype.GetDurationOfQuantizationTypeInSeconds;QuartzSubsystem.prototype.GetDurationOfQuantizationTypeInSeconds = function (WorldContextObject, ClockName, QuantizationType, Multiplier = 1) { return fnprepatch_382.call(this, WorldContextObject, ClockName, QuantizationType, Multiplier) }; } catch (e) {};
try { let fnprepatch_383 = QuartzSubsystem.prototype.CreateNewClock;QuartzSubsystem.prototype.CreateNewClock = function (WorldContextObject, ClockName, InSettings, bOverrideSettingsIfClockExists = false, bUseAudioEngineClockManager = true) { return fnprepatch_383.call(this, WorldContextObject, ClockName, InSettings, bOverrideSettingsIfClockExists, bUseAudioEngineClockManager) }; } catch (e) {};
try { let fnprepatch_384 = StreamableRenderAsset.prototype.SetForceMipLevelsToBeResident;StreamableRenderAsset.prototype.SetForceMipLevelsToBeResident = function (Seconds, CinematicLODGroupMask = 0) { return fnprepatch_384.call(this, Seconds, CinematicLODGroupMask) }; } catch (e) {};
try { Texture.prototype.GetTextureSourceDiskAndMemorySize = Texture.prototype.Blueprint_GetTextureSourceDiskAndMemorySize; } catch (e) {};
try { Texture.prototype.GetMemorySize = Texture.prototype.Blueprint_GetMemorySize; } catch (e) {};
try { MediaSource.prototype.SetMediaOption = MediaSource.prototype.SetMediaOptionString; } catch (e) {};
try { MediaSource.prototype.SetMediaOption = MediaSource.prototype.SetMediaOptionInt64; } catch (e) {};
try { MediaSource.prototype.SetMediaOption = MediaSource.prototype.SetMediaOptionFloat; } catch (e) {};
try { MediaSource.prototype.SetMediaOption = MediaSource.prototype.SetMediaOptionBool; } catch (e) {};
try { let fnprepatch_385 = MediaSoundComponent.prototype.SetSpectralAnalysisSettings;MediaSoundComponent.prototype.SetSpectralAnalysisSettings = function (InFrequenciesToAnalyze, InFFTSize = "Min_64") { return fnprepatch_385.call(this, InFrequenciesToAnalyze, InFFTSize) }; } catch (e) {};
try { MediaSoundComponent.prototype.GetAttenuationSettingsToApply = MediaSoundComponent.prototype.BP_GetAttenuationSettingsToApply; } catch (e) {};
try { let fnprepatch_386 = MediaBlueprintFunctionLibrary.prototype.EnumerateWebcamCaptureDevices;MediaBlueprintFunctionLibrary.prototype.EnumerateWebcamCaptureDevices = function (OutDevices, Filter = -1) { return fnprepatch_386.call(this, OutDevices, Filter) }; } catch (e) {};
try { let fnprepatch_387 = MediaBlueprintFunctionLibrary.prototype.EnumerateVideoCaptureDevices;MediaBlueprintFunctionLibrary.prototype.EnumerateVideoCaptureDevices = function (OutDevices, Filter = -1) { return fnprepatch_387.call(this, OutDevices, Filter) }; } catch (e) {};
try { let fnprepatch_388 = MediaBlueprintFunctionLibrary.prototype.EnumerateAudioCaptureDevices;MediaBlueprintFunctionLibrary.prototype.EnumerateAudioCaptureDevices = function (OutDevices, Filter = -1) { return fnprepatch_388.call(this, OutDevices, Filter) }; } catch (e) {};
try { let fnprepatch_389 = LevelSequenceActor.prototype.SetBindingByTag;LevelSequenceActor.prototype.SetBindingByTag = function (BindingTag, Actors, bAllowBindingsFromAsset = false) { return fnprepatch_389.call(this, BindingTag, Actors, bAllowBindingsFromAsset) }; } catch (e) {};
try { let fnprepatch_390 = LevelSequenceActor.prototype.SetBinding;LevelSequenceActor.prototype.SetBinding = function (Binding, Actors, bAllowBindingsFromAsset = false) { return fnprepatch_390.call(this, Binding, Actors, bAllowBindingsFromAsset) }; } catch (e) {};
try { let fnprepatch_391 = LevelSequenceActor.prototype.AddBindingByTag;LevelSequenceActor.prototype.AddBindingByTag = function (BindingTag, Actor, bAllowBindingsFromAsset = false) { return fnprepatch_391.call(this, BindingTag, Actor, bAllowBindingsFromAsset) }; } catch (e) {};
try { let fnprepatch_392 = LevelSequenceActor.prototype.AddBinding;LevelSequenceActor.prototype.AddBinding = function (Binding, Actor, bAllowBindingsFromAsset = false) { return fnprepatch_392.call(this, Binding, Actor, bAllowBindingsFromAsset) }; } catch (e) {};
try { LevelSequenceActor.prototype.FindBindingsbyTag = LevelSequenceActor.prototype.FindNamedBindings; } catch (e) {};
try { LevelSequenceActor.prototype.FindBindingbyTag = LevelSequenceActor.prototype.FindNamedBinding; } catch (e) {};
try { let fnprepatch_393 = LevelSequenceMediaController.prototype.SynchronizeToServer;LevelSequenceMediaController.prototype.SynchronizeToServer = function (DesyncThresholdSeconds = 2) { return fnprepatch_393.call(this, DesyncThresholdSeconds) }; } catch (e) {};
try { ActorGroupingUtils.prototype.GetActorGroupingUtils = ActorGroupingUtils.prototype.Get; } catch (e) {};
try { ActorGroupingUtils.GetActorGroupingUtils = ActorGroupingUtils.Get; } catch (e) {};
try { let fnprepatch_394 = AssetEditorSubsystem.prototype.OpenEditorForAssets;AssetEditorSubsystem.prototype.OpenEditorForAssets = function (Assets, OpenedMethod = "Edit") { return fnprepatch_394.call(this, Assets, OpenedMethod) }; } catch (e) {};
try { let fnprepatch_395 = EditorActorSubsystem.prototype.SpawnActorFromObject;EditorActorSubsystem.prototype.SpawnActorFromObject = function (ObjectToUse, Location, Rotation, bTransient = false) { return fnprepatch_395.call(this, ObjectToUse, Location, Rotation, bTransient) }; } catch (e) {};
try { let fnprepatch_396 = EditorActorSubsystem.prototype.SpawnActorFromClass;EditorActorSubsystem.prototype.SpawnActorFromClass = function (ActorClass, Location, Rotation, bTransient = false) { return fnprepatch_396.call(this, ActorClass, Location, Rotation, bTransient) }; } catch (e) {};
try { let fnprepatch_397 = EditorActorSubsystem.prototype.DuplicateActors;EditorActorSubsystem.prototype.DuplicateActors = function (ActorsToDuplicate, ToWorld = undefined, Offset) { return fnprepatch_397.call(this, ActorsToDuplicate, ToWorld, Offset) }; } catch (e) {};
try { let fnprepatch_398 = EditorActorSubsystem.prototype.DuplicateActor;EditorActorSubsystem.prototype.DuplicateActor = function (ActorToDuplicate, ToWorld = undefined, Offset) { return fnprepatch_398.call(this, ActorToDuplicate, ToWorld, Offset) }; } catch (e) {};
try { let fnprepatch_399 = EditorAssetSubsystem.prototype.SaveLoadedAssets;EditorAssetSubsystem.prototype.SaveLoadedAssets = function (AssetsToSave, bOnlyIfIsDirty = true) { return fnprepatch_399.call(this, AssetsToSave, bOnlyIfIsDirty) }; } catch (e) {};
try { let fnprepatch_400 = EditorAssetSubsystem.prototype.SaveLoadedAsset;EditorAssetSubsystem.prototype.SaveLoadedAsset = function (AssetToSave, bOnlyIfIsDirty = true) { return fnprepatch_400.call(this, AssetToSave, bOnlyIfIsDirty) }; } catch (e) {};
try { let fnprepatch_401 = EditorAssetSubsystem.prototype.SaveDirectory;EditorAssetSubsystem.prototype.SaveDirectory = function (DirectoryPath, bOnlyIfIsDirty = true, bRecursive = true) { return fnprepatch_401.call(this, DirectoryPath, bOnlyIfIsDirty, bRecursive) }; } catch (e) {};
try { let fnprepatch_402 = EditorAssetSubsystem.prototype.SaveAsset;EditorAssetSubsystem.prototype.SaveAsset = function (AssetToSave, bOnlyIfIsDirty = true) { return fnprepatch_402.call(this, AssetToSave, bOnlyIfIsDirty) }; } catch (e) {};
try { let fnprepatch_403 = EditorAssetSubsystem.prototype.ListAssets;EditorAssetSubsystem.prototype.ListAssets = function (DirectoryPath, bRecursive = true, bIncludeFolder = false) { return fnprepatch_403.call(this, DirectoryPath, bRecursive, bIncludeFolder) }; } catch (e) {};
try { let fnprepatch_404 = EditorAssetSubsystem.prototype.FindPackageReferencersForAsset;EditorAssetSubsystem.prototype.FindPackageReferencersForAsset = function (AssetPath, bLoadAssetsToConfirm = false) { return fnprepatch_404.call(this, AssetPath, bLoadAssetsToConfirm) }; } catch (e) {};
try { let fnprepatch_405 = EditorAssetSubsystem.prototype.DoesDirectoryContainAssets;EditorAssetSubsystem.prototype.DoesDirectoryContainAssets = function (DirectoryPath, bRecursive = true) { return fnprepatch_405.call(this, DirectoryPath, bRecursive) }; } catch (e) {};
try { let fnprepatch_406 = EditorAssetSubsystem.prototype.CheckoutDirectory;EditorAssetSubsystem.prototype.CheckoutDirectory = function (DirectoryPath, bRecursive = true) { return fnprepatch_406.call(this, DirectoryPath, bRecursive) }; } catch (e) {};
try { let fnprepatch_407 = EditorLevelUtils.prototype.SetLevelVisibility;EditorLevelUtils.prototype.SetLevelVisibility = function (Level, bShouldBeVisible, bForceLayersVisible, ModifyMode = "ModifyOnChange") { return fnprepatch_407.call(this, Level, bShouldBeVisible, bForceLayersVisible, ModifyMode) }; } catch (e) {};
try { let fnprepatch_408 = EditorLevelUtils.prototype.SetLevelsVisibility;EditorLevelUtils.prototype.SetLevelsVisibility = function (Levels, bShouldBeVisible, bForceLayersVisible, ModifyMode = "ModifyOnChange") { return fnprepatch_408.call(this, Levels, bShouldBeVisible, bForceLayersVisible, ModifyMode) }; } catch (e) {};
try { let fnprepatch_409 = EditorLevelUtils.prototype.MoveSelectedActorsToLevel;EditorLevelUtils.prototype.MoveSelectedActorsToLevel = function (DestLevel, bWarnAboutReferences = true) { return fnprepatch_409.call(this, DestLevel, bWarnAboutReferences) }; } catch (e) {};
try { let fnprepatch_410 = EditorLevelUtils.prototype.MoveActorsToLevel;EditorLevelUtils.prototype.MoveActorsToLevel = function (ActorsToMove, DestStreamingLevel, bWarnAboutReferences = true, bWarnAboutRenaming = true) { return fnprepatch_410.call(this, ActorsToMove, DestStreamingLevel, bWarnAboutReferences, bWarnAboutRenaming) }; } catch (e) {};
try { let fnprepatch_411 = EditorLevelUtils.prototype.CreateNewStreamingLevel;EditorLevelUtils.prototype.CreateNewStreamingLevel = function (LevelStreamingClass, NewLevelPath, bMoveSelectedActorsIntoNewLevel = false) { return fnprepatch_411.call(this, LevelStreamingClass, NewLevelPath, bMoveSelectedActorsIntoNewLevel) }; } catch (e) {};
try { EditorLevelUtils.prototype.AddLeveltoWorldwithTransform = EditorLevelUtils.prototype.K2_AddLevelToWorldWithTransform; } catch (e) {};
try { EditorLevelUtils.AddLeveltoWorldwithTransform = EditorLevelUtils.K2_AddLevelToWorldWithTransform; } catch (e) {};
try { EditorLevelUtils.prototype.AddLeveltoWorld = EditorLevelUtils.prototype.K2_AddLevelToWorld; } catch (e) {};
try { EditorLevelUtils.AddLeveltoWorld = EditorLevelUtils.K2_AddLevelToWorld; } catch (e) {};
try { let fnprepatch_412 = EditorLoadingAndSavingUtils.prototype.ReloadPackages;EditorLoadingAndSavingUtils.prototype.ReloadPackages = function (PackagesToReload, bOutAnyPackagesReloaded, OutErrorMessage, InteractionMode = "Interactive") { return fnprepatch_412.call(this, PackagesToReload, bOutAnyPackagesReloaded, OutErrorMessage, InteractionMode) }; } catch (e) {};
try { let fnprepatch_413 = LayersSubsystem.prototype.SelectActorsInLayers;LayersSubsystem.prototype.SelectActorsInLayers = function (LayerNames, bSelect, bNotify, bSelectEvenIfHidden = false) { return fnprepatch_413.call(this, LayerNames, bSelect, bNotify, bSelectEvenIfHidden) }; } catch (e) {};
try { let fnprepatch_414 = LayersSubsystem.prototype.SelectActorsInLayer;LayersSubsystem.prototype.SelectActorsInLayer = function (LayerName, bSelect, bNotify, bSelectEvenIfHidden = false) { return fnprepatch_414.call(this, LayerName, bSelect, bNotify, bSelectEvenIfHidden) }; } catch (e) {};
try { let fnprepatch_415 = LayersSubsystem.prototype.RemoveActorsFromLayers;LayersSubsystem.prototype.RemoveActorsFromLayers = function (Actors, LayerNames, bUpdateStats = true) { return fnprepatch_415.call(this, Actors, LayerNames, bUpdateStats) }; } catch (e) {};
try { let fnprepatch_416 = LayersSubsystem.prototype.RemoveActorsFromLayer;LayersSubsystem.prototype.RemoveActorsFromLayer = function (Actors, LayerName, bUpdateStats = true) { return fnprepatch_416.call(this, Actors, LayerName, bUpdateStats) }; } catch (e) {};
try { let fnprepatch_417 = LayersSubsystem.prototype.RemoveActorFromLayers;LayersSubsystem.prototype.RemoveActorFromLayers = function (Actor, LayerNames, bUpdateStats = true) { return fnprepatch_417.call(this, Actor, LayerNames, bUpdateStats) }; } catch (e) {};
try { let fnprepatch_418 = LayersSubsystem.prototype.RemoveActorFromLayer;LayersSubsystem.prototype.RemoveActorFromLayer = function (Actor, LayerToRemove, bUpdateStats = true) { return fnprepatch_418.call(this, Actor, LayerToRemove, bUpdateStats) }; } catch (e) {};
try { let fnprepatch_419 = MaterialInterface.prototype.SetForceMipLevelsToBeResident;MaterialInterface.prototype.SetForceMipLevelsToBeResident = function (OverrideForceMiplevelsToBeResident, bForceMiplevelsToBeResidentValue, ForceDuration, CinematicTextureGroups = 0, bFastResponse = false) { return fnprepatch_419.call(this, OverrideForceMiplevelsToBeResident, bForceMiplevelsToBeResidentValue, ForceDuration, CinematicTextureGroups, bFastResponse) }; } catch (e) {};
try { let fnprepatch_420 = UDIMTextureFunctionLibrary.prototype.MakeUDIMVirtualTextureFromTexture2Ds;UDIMTextureFunctionLibrary.prototype.MakeUDIMVirtualTextureFromTexture2Ds = function (OutputPathName, SourceTextures, BlockCoords, bKeepExistingSettings = false, bCheckOutAndSave = false) { return fnprepatch_420.call(this, OutputPathName, SourceTextures, BlockCoords, bKeepExistingSettings, bCheckOutAndSave) }; } catch (e) {};
try { let fnprepatch_421 = InstancedStaticMeshComponent.prototype.UpdateInstanceTransform;InstancedStaticMeshComponent.prototype.UpdateInstanceTransform = function (InstanceIndex, NewInstanceTransform, bWorldSpace = false, bMarkRenderStateDirty = false, bTeleport = false) { return fnprepatch_421.call(this, InstanceIndex, NewInstanceTransform, bWorldSpace, bMarkRenderStateDirty, bTeleport) }; } catch (e) {};
try { let fnprepatch_422 = InstancedStaticMeshComponent.prototype.SetCustomDataValue;InstancedStaticMeshComponent.prototype.SetCustomDataValue = function (InstanceIndex, CustomDataIndex, CustomDataValue, bMarkRenderStateDirty = false) { return fnprepatch_422.call(this, InstanceIndex, CustomDataIndex, CustomDataValue, bMarkRenderStateDirty) }; } catch (e) {};
try { let fnprepatch_423 = InstancedStaticMeshComponent.prototype.GetInstanceTransform;InstancedStaticMeshComponent.prototype.GetInstanceTransform = function (InstanceIndex, OutInstanceTransform, bWorldSpace = false) { return fnprepatch_423.call(this, InstanceIndex, OutInstanceTransform, bWorldSpace) }; } catch (e) {};
try { let fnprepatch_424 = InstancedStaticMeshComponent.prototype.GetInstancesOverlappingSphere;InstancedStaticMeshComponent.prototype.GetInstancesOverlappingSphere = function (Center, Radius, bSphereInWorldSpace = true) { return fnprepatch_424.call(this, Center, Radius, bSphereInWorldSpace) }; } catch (e) {};
try { let fnprepatch_425 = InstancedStaticMeshComponent.prototype.GetInstancesOverlappingBox;InstancedStaticMeshComponent.prototype.GetInstancesOverlappingBox = function (Box, bBoxInWorldSpace = true) { return fnprepatch_425.call(this, Box, bBoxInWorldSpace) }; } catch (e) {};
try { let fnprepatch_426 = InstancedStaticMeshComponent.prototype.BatchUpdateInstancesTransforms;InstancedStaticMeshComponent.prototype.BatchUpdateInstancesTransforms = function (StartInstanceIndex, NewInstancesTransforms, bWorldSpace = false, bMarkRenderStateDirty = false, bTeleport = false) { return fnprepatch_426.call(this, StartInstanceIndex, NewInstancesTransforms, bWorldSpace, bMarkRenderStateDirty, bTeleport) }; } catch (e) {};
try { let fnprepatch_427 = InstancedStaticMeshComponent.prototype.BatchUpdateInstancesTransform;InstancedStaticMeshComponent.prototype.BatchUpdateInstancesTransform = function (StartInstanceIndex, NumInstances, NewInstancesTransform, bWorldSpace = false, bMarkRenderStateDirty = false, bTeleport = false) { return fnprepatch_427.call(this, StartInstanceIndex, NumInstances, NewInstancesTransform, bWorldSpace, bMarkRenderStateDirty, bTeleport) }; } catch (e) {};
try { let fnprepatch_428 = InstancedStaticMeshComponent.prototype.AddInstances;InstancedStaticMeshComponent.prototype.AddInstances = function (InstanceTransforms, bShouldReturnIndices, bWorldSpace = false) { return fnprepatch_428.call(this, InstanceTransforms, bShouldReturnIndices, bWorldSpace) }; } catch (e) {};
try { let fnprepatch_429 = InstancedStaticMeshComponent.prototype.AddInstance;InstancedStaticMeshComponent.prototype.AddInstance = function (InstanceTransform, bWorldSpace = false) { return fnprepatch_429.call(this, InstanceTransform, bWorldSpace) }; } catch (e) {};
try { InstancedStaticMeshComponent.prototype.AcquireEditorSMInstanceElementHandle = InstancedStaticMeshComponent.prototype.K2_AcquireEditorSMInstanceElementHandle; } catch (e) {};
try { let fnprepatch_430 = ProceduralFoliageSpawner.prototype.Simulate;ProceduralFoliageSpawner.prototype.Simulate = function (NumSteps = -1) { return fnprepatch_430.call(this, NumSteps) }; } catch (e) {};
try { let fnprepatch_431 = LandscapeProxy.prototype.LandscapeImportHeightmapFromRenderTarget;LandscapeProxy.prototype.LandscapeImportHeightmapFromRenderTarget = function (InRenderTarget, InImportHeightFromRGChannel = false) { return fnprepatch_431.call(this, InRenderTarget, InImportHeightFromRGChannel) }; } catch (e) {};
try { let fnprepatch_432 = LandscapeProxy.prototype.LandscapeExportHeightmapToRenderTarget;LandscapeProxy.prototype.LandscapeExportHeightmapToRenderTarget = function (InRenderTarget, InExportHeightIntoRGChannel = false, InExportLandscapeProxies = true) { return fnprepatch_432.call(this, InRenderTarget, InExportHeightIntoRGChannel, InExportLandscapeProxies) }; } catch (e) {};
try { let fnprepatch_433 = LandscapeProxy.prototype.EditorApplySpline;LandscapeProxy.prototype.EditorApplySpline = function (InSplineComponent, StartWidth = 200, EndWidth = 200, StartSideFalloff = 200, EndSideFalloff = 200, StartRoll = 0, EndRoll = 0, NumSubdivisions = 20, bRaiseHeights = true, bLowerHeights = true, PaintLayer = undefined, EditLayerName) { return fnprepatch_433.call(this, InSplineComponent, StartWidth, EndWidth, StartSideFalloff, EndSideFalloff, StartRoll, EndRoll, NumSubdivisions, bRaiseHeights, bLowerHeights, PaintLayer, EditLayerName) }; } catch (e) {};
try { MaterialInstanceConstant.prototype.GetVectorParameterValue = MaterialInstanceConstant.prototype.K2_GetVectorParameterValue; } catch (e) {};
try { MaterialInstanceConstant.prototype.GetTextureParameterValue = MaterialInstanceConstant.prototype.K2_GetTextureParameterValue; } catch (e) {};
try { MaterialInstanceConstant.prototype.GetScalarParameterValue = MaterialInstanceConstant.prototype.K2_GetScalarParameterValue; } catch (e) {};
try { let fnprepatch_434 = LandscapeBlueprintBrushBase.prototype.RequestLandscapeUpdate;LandscapeBlueprintBrushBase.prototype.RequestLandscapeUpdate = function (bInUserTriggered = false) { return fnprepatch_434.call(this, bInUserTriggered) }; } catch (e) {};
try { let fnprepatch_435 = DataLayerManager.prototype.SetDataLayerRuntimeState;DataLayerManager.prototype.SetDataLayerRuntimeState = function (InDataLayerAsset, InState, bInIsRecursive = false) { return fnprepatch_435.call(this, InDataLayerAsset, InState, bInIsRecursive) }; } catch (e) {};
try { let fnprepatch_436 = DataLayerManager.prototype.SetDataLayerInstanceRuntimeState;DataLayerManager.prototype.SetDataLayerInstanceRuntimeState = function (InDataLayerInstance, InState, bInIsRecursive = false) { return fnprepatch_436.call(this, InDataLayerInstance, InState, bInIsRecursive) }; } catch (e) {};
try { let fnprepatch_437 = AnimationDataController.prototype.UpdateCurveNamesFromSkeleton;AnimationDataController.prototype.UpdateCurveNamesFromSkeleton = function (Skeleton, SupportedCurveType, bShouldTransact = true) { return fnprepatch_437.call(this, Skeleton, SupportedCurveType, bShouldTransact) }; } catch (e) {};
try { let fnprepatch_438 = AnimationDataController.prototype.SetTransformCurveKeys;AnimationDataController.prototype.SetTransformCurveKeys = function (CurveId, TransformValues, TimeKeys, bShouldTransact = true) { return fnprepatch_438.call(this, CurveId, TransformValues, TimeKeys, bShouldTransact) }; } catch (e) {};
try { let fnprepatch_439 = AnimationDataController.prototype.SetTransformCurveKey;AnimationDataController.prototype.SetTransformCurveKey = function (CurveId, Time, Value, bShouldTransact = true) { return fnprepatch_439.call(this, CurveId, Time, Value, bShouldTransact) }; } catch (e) {};
try { let fnprepatch_440 = AnimationDataController.prototype.SetPlayLength;AnimationDataController.prototype.SetPlayLength = function (Length, bShouldTransact = true) { return fnprepatch_440.call(this, Length, bShouldTransact) }; } catch (e) {};
try { let fnprepatch_441 = AnimationDataController.prototype.SetNumberOfFrames;AnimationDataController.prototype.SetNumberOfFrames = function (NewLengthInFrames, bShouldTransact = true) { return fnprepatch_441.call(this, NewLengthInFrames, bShouldTransact) }; } catch (e) {};
try { let fnprepatch_442 = AnimationDataController.prototype.SetFrameRate;AnimationDataController.prototype.SetFrameRate = function (FrameRate, bShouldTransact = true) { return fnprepatch_442.call(this, FrameRate, bShouldTransact) }; } catch (e) {};
try { let fnprepatch_443 = AnimationDataController.prototype.SetCurveKeys;AnimationDataController.prototype.SetCurveKeys = function (CurveId, CurveKeys, bShouldTransact = true) { return fnprepatch_443.call(this, CurveId, CurveKeys, bShouldTransact) }; } catch (e) {};
try { let fnprepatch_444 = AnimationDataController.prototype.SetCurveKey;AnimationDataController.prototype.SetCurveKey = function (CurveId, Key, bShouldTransact = true) { return fnprepatch_444.call(this, CurveId, Key, bShouldTransact) }; } catch (e) {};
try { let fnprepatch_445 = AnimationDataController.prototype.SetCurveFlags;AnimationDataController.prototype.SetCurveFlags = function (CurveId, Flags, bShouldTransact = true) { return fnprepatch_445.call(this, CurveId, Flags, bShouldTransact) }; } catch (e) {};
try { let fnprepatch_446 = AnimationDataController.prototype.SetCurveFlag;AnimationDataController.prototype.SetCurveFlag = function (CurveId, Flag, bState = true, bShouldTransact = true) { return fnprepatch_446.call(this, CurveId, Flag, bState, bShouldTransact) }; } catch (e) {};
try { let fnprepatch_447 = AnimationDataController.prototype.SetCurveColor;AnimationDataController.prototype.SetCurveColor = function (CurveId, Color, bShouldTransact = true) { return fnprepatch_447.call(this, CurveId, Color, bShouldTransact) }; } catch (e) {};
try { let fnprepatch_448 = AnimationDataController.prototype.SetBoneTrackKeys;AnimationDataController.prototype.SetBoneTrackKeys = function (BoneName, PositionalKeys, RotationalKeys, ScalingKeys, bShouldTransact = true) { return fnprepatch_448.call(this, BoneName, PositionalKeys, RotationalKeys, ScalingKeys, bShouldTransact) }; } catch (e) {};
try { let fnprepatch_449 = AnimationDataController.prototype.ScaleCurve;AnimationDataController.prototype.ScaleCurve = function (CurveId, Origin, Factor, bShouldTransact = true) { return fnprepatch_449.call(this, CurveId, Origin, Factor, bShouldTransact) }; } catch (e) {};
try { let fnprepatch_450 = AnimationDataController.prototype.ResizePlayLength;AnimationDataController.prototype.ResizePlayLength = function (NewLength, T0, T1, bShouldTransact = true) { return fnprepatch_450.call(this, NewLength, T0, T1, bShouldTransact) }; } catch (e) {};
try { let fnprepatch_451 = AnimationDataController.prototype.ResizeNumberOfFrames;AnimationDataController.prototype.ResizeNumberOfFrames = function (NewLengthInFrames, T0, T1, bShouldTransact = true) { return fnprepatch_451.call(this, NewLengthInFrames, T0, T1, bShouldTransact) }; } catch (e) {};
try { let fnprepatch_452 = AnimationDataController.prototype.ResizeInFrames;AnimationDataController.prototype.ResizeInFrames = function (NewLengthInFrames, T0, T1, bShouldTransact = true) { return fnprepatch_452.call(this, NewLengthInFrames, T0, T1, bShouldTransact) }; } catch (e) {};
try { let fnprepatch_453 = AnimationDataController.prototype.Resize;AnimationDataController.prototype.Resize = function (Length, T0, T1, bShouldTransact = true) { return fnprepatch_453.call(this, Length, T0, T1, bShouldTransact) }; } catch (e) {};
try { let fnprepatch_454 = AnimationDataController.prototype.RenameCurve;AnimationDataController.prototype.RenameCurve = function (CurveToRenameId, NewCurveId, bShouldTransact = true) { return fnprepatch_454.call(this, CurveToRenameId, NewCurveId, bShouldTransact) }; } catch (e) {};
try { let fnprepatch_455 = AnimationDataController.prototype.RemoveTransformCurveKey;AnimationDataController.prototype.RemoveTransformCurveKey = function (CurveId, Time, bShouldTransact = true) { return fnprepatch_455.call(this, CurveId, Time, bShouldTransact) }; } catch (e) {};
try { let fnprepatch_456 = AnimationDataController.prototype.RemoveCurveKey;AnimationDataController.prototype.RemoveCurveKey = function (CurveId, Time, bShouldTransact = true) { return fnprepatch_456.call(this, CurveId, Time, bShouldTransact) }; } catch (e) {};
try { let fnprepatch_457 = AnimationDataController.prototype.RemoveCurve;AnimationDataController.prototype.RemoveCurve = function (CurveId, bShouldTransact = true) { return fnprepatch_457.call(this, CurveId, bShouldTransact) }; } catch (e) {};
try { let fnprepatch_458 = AnimationDataController.prototype.RemoveBoneTrack;AnimationDataController.prototype.RemoveBoneTrack = function (BoneName, bShouldTransact = true) { return fnprepatch_458.call(this, BoneName, bShouldTransact) }; } catch (e) {};
try { let fnprepatch_459 = AnimationDataController.prototype.RemoveAttributeKey;AnimationDataController.prototype.RemoveAttributeKey = function (AttributeIdentifier, Time, bShouldTransact = true) { return fnprepatch_459.call(this, AttributeIdentifier, Time, bShouldTransact) }; } catch (e) {};
try { let fnprepatch_460 = AnimationDataController.prototype.RemoveAttribute;AnimationDataController.prototype.RemoveAttribute = function (AttributeIdentifier, bShouldTransact = true) { return fnprepatch_460.call(this, AttributeIdentifier, bShouldTransact) }; } catch (e) {};
try { let fnprepatch_461 = AnimationDataController.prototype.RemoveAllCurvesOfType;AnimationDataController.prototype.RemoveAllCurvesOfType = function (SupportedCurveType, bShouldTransact = true) { return fnprepatch_461.call(this, SupportedCurveType, bShouldTransact) }; } catch (e) {};
try { let fnprepatch_462 = AnimationDataController.prototype.RemoveAllBoneTracks;AnimationDataController.prototype.RemoveAllBoneTracks = function (bShouldTransact = true) { return fnprepatch_462.call(this, bShouldTransact) }; } catch (e) {};
try { let fnprepatch_463 = AnimationDataController.prototype.RemoveAllAttributesForBone;AnimationDataController.prototype.RemoveAllAttributesForBone = function (BoneName, bShouldTransact = true) { return fnprepatch_463.call(this, BoneName, bShouldTransact) }; } catch (e) {};
try { let fnprepatch_464 = AnimationDataController.prototype.RemoveAllAttributes;AnimationDataController.prototype.RemoveAllAttributes = function (bShouldTransact = true) { return fnprepatch_464.call(this, bShouldTransact) }; } catch (e) {};
try { let fnprepatch_465 = AnimationDataController.prototype.OpenBracket;AnimationDataController.prototype.OpenBracket = function (InTitle, bShouldTransact = true) { return fnprepatch_465.call(this, InTitle, bShouldTransact) }; } catch (e) {};
try { let fnprepatch_466 = AnimationDataController.prototype.InsertBoneTrack;AnimationDataController.prototype.InsertBoneTrack = function (BoneName, DesiredIndex, bShouldTransact = true) { return fnprepatch_466.call(this, BoneName, DesiredIndex, bShouldTransact) }; } catch (e) {};
try { let fnprepatch_467 = AnimationDataController.prototype.FindOrAddCurveNamesOnSkeleton;AnimationDataController.prototype.FindOrAddCurveNamesOnSkeleton = function (Skeleton, SupportedCurveType, bShouldTransact = true) { return fnprepatch_467.call(this, Skeleton, SupportedCurveType, bShouldTransact) }; } catch (e) {};
try { let fnprepatch_468 = AnimationDataController.prototype.DuplicateCurve;AnimationDataController.prototype.DuplicateCurve = function (CopyCurveId, NewCurveId, bShouldTransact = true) { return fnprepatch_468.call(this, CopyCurveId, NewCurveId, bShouldTransact) }; } catch (e) {};
try { let fnprepatch_469 = AnimationDataController.prototype.DuplicateAttribute;AnimationDataController.prototype.DuplicateAttribute = function (AttributeIdentifier, NewAttributeIdentifier, bShouldTransact = true) { return fnprepatch_469.call(this, AttributeIdentifier, NewAttributeIdentifier, bShouldTransact) }; } catch (e) {};
try { let fnprepatch_470 = AnimationDataController.prototype.CloseBracket;AnimationDataController.prototype.CloseBracket = function (bShouldTransact = true) { return fnprepatch_470.call(this, bShouldTransact) }; } catch (e) {};
try { let fnprepatch_471 = AnimationDataController.prototype.AddCurve;AnimationDataController.prototype.AddCurve = function (CurveId, CurveFlags = 4, bShouldTransact = true) { return fnprepatch_471.call(this, CurveId, CurveFlags, bShouldTransact) }; } catch (e) {};
try { let fnprepatch_472 = AnimationDataController.prototype.AddBoneTrack;AnimationDataController.prototype.AddBoneTrack = function (BoneName, bShouldTransact = true) { return fnprepatch_472.call(this, BoneName, bShouldTransact) }; } catch (e) {};
try { let fnprepatch_473 = AnimationDataController.prototype.AddBoneCurve;AnimationDataController.prototype.AddBoneCurve = function (BoneName, bShouldTransact = true) { return fnprepatch_473.call(this, BoneName, bShouldTransact) }; } catch (e) {};
try { let fnprepatch_474 = AnimationDataController.prototype.AddAttribute;AnimationDataController.prototype.AddAttribute = function (AttributeIdentifier, bShouldTransact = true) { return fnprepatch_474.call(this, AttributeIdentifier, bShouldTransact) }; } catch (e) {};
try { let fnprepatch_475 = KismetTextLibrary.prototype.Conv_IntToText;KismetTextLibrary.prototype.Conv_IntToText = function (Value, bAlwaysSign = false, bUseGrouping = true, MinimumIntegralDigits = 1, MaximumIntegralDigits = 324) { return fnprepatch_475.call(this, Value, bAlwaysSign, bUseGrouping, MinimumIntegralDigits, MaximumIntegralDigits) }; } catch (e) {};
try { let fnprepatch_476 = KismetTextLibrary.prototype.Conv_Int64ToText;KismetTextLibrary.prototype.Conv_Int64ToText = function (Value, bAlwaysSign = false, bUseGrouping = true, MinimumIntegralDigits = 1, MaximumIntegralDigits = 324) { return fnprepatch_476.call(this, Value, bAlwaysSign, bUseGrouping, MinimumIntegralDigits, MaximumIntegralDigits) }; } catch (e) {};
try { let fnprepatch_477 = KismetTextLibrary.prototype.Conv_DoubleToText;KismetTextLibrary.prototype.Conv_DoubleToText = function (Value, RoundingMode, bAlwaysSign = false, bUseGrouping = true, MinimumIntegralDigits = 1, MaximumIntegralDigits = 324, MinimumFractionalDigits = 0, MaximumFractionalDigits = 3) { return fnprepatch_477.call(this, Value, RoundingMode, bAlwaysSign, bUseGrouping, MinimumIntegralDigits, MaximumIntegralDigits, MinimumFractionalDigits, MaximumFractionalDigits) }; } catch (e) {};
try { let fnprepatch_478 = KismetTextLibrary.prototype.AsPercent_Float;KismetTextLibrary.prototype.AsPercent_Float = function (Value, RoundingMode, bAlwaysSign = false, bUseGrouping = true, MinimumIntegralDigits = 1, MaximumIntegralDigits = 324, MinimumFractionalDigits = 0, MaximumFractionalDigits = 3) { return fnprepatch_478.call(this, Value, RoundingMode, bAlwaysSign, bUseGrouping, MinimumIntegralDigits, MaximumIntegralDigits, MinimumFractionalDigits, MaximumFractionalDigits) }; } catch (e) {};
try { let fnprepatch_479 = KismetTextLibrary.prototype.AsCurrency_Integer;KismetTextLibrary.prototype.AsCurrency_Integer = function (Value, RoundingMode, bAlwaysSign = false, bUseGrouping = true, MinimumIntegralDigits = 1, MaximumIntegralDigits = 324, MinimumFractionalDigits = 0, MaximumFractionalDigits = 3, CurrencyCode) { return fnprepatch_479.call(this, Value, RoundingMode, bAlwaysSign, bUseGrouping, MinimumIntegralDigits, MaximumIntegralDigits, MinimumFractionalDigits, MaximumFractionalDigits, CurrencyCode) }; } catch (e) {};
try { let fnprepatch_480 = KismetTextLibrary.prototype.AsCurrency_Float;KismetTextLibrary.prototype.AsCurrency_Float = function (Value, RoundingMode, bAlwaysSign = false, bUseGrouping = true, MinimumIntegralDigits = 1, MaximumIntegralDigits = 324, MinimumFractionalDigits = 0, MaximumFractionalDigits = 3, CurrencyCode) { return fnprepatch_480.call(this, Value, RoundingMode, bAlwaysSign, bUseGrouping, MinimumIntegralDigits, MaximumIntegralDigits, MinimumFractionalDigits, MaximumFractionalDigits, CurrencyCode) }; } catch (e) {};
try { KismetTextLibrary.prototype.IsTextfromStringTable = KismetTextLibrary.prototype.TextIsFromStringTable; } catch (e) {};
try { KismetTextLibrary.IsTextfromStringTable = KismetTextLibrary.TextIsFromStringTable; } catch (e) {};
try { KismetTextLibrary.prototype.MakeTextfromStringTable = KismetTextLibrary.prototype.TextFromStringTable; } catch (e) {};
try { KismetTextLibrary.MakeTextfromStringTable = KismetTextLibrary.TextFromStringTable; } catch (e) {};
try { KismetTextLibrary.prototype.FindStringTableIDandKeyfromText = KismetTextLibrary.prototype.StringTableIdAndKeyFromText; } catch (e) {};
try { KismetTextLibrary.FindStringTableIDandKeyfromText = KismetTextLibrary.StringTableIdAndKeyFromText; } catch (e) {};
try { KismetTextLibrary.prototype.NotEqualExactly = KismetTextLibrary.prototype.NotEqual_TextText; } catch (e) {};
try { KismetTextLibrary.NotEqualExactly = KismetTextLibrary.NotEqual_TextText; } catch (e) {};
try { KismetTextLibrary.prototype.EqualExactly = KismetTextLibrary.prototype.EqualEqual_TextText; } catch (e) {};
try { KismetTextLibrary.EqualExactly = KismetTextLibrary.EqualEqual_TextText; } catch (e) {};
try { KismetTextLibrary.prototype.ToText = KismetTextLibrary.prototype.Conv_VectorToText; } catch (e) {};
try { KismetTextLibrary.ToText = KismetTextLibrary.Conv_VectorToText; } catch (e) {};
try { KismetTextLibrary.prototype.ToText = KismetTextLibrary.prototype.Conv_Vector2dToText; } catch (e) {};
try { KismetTextLibrary.ToText = KismetTextLibrary.Conv_Vector2dToText; } catch (e) {};
try { KismetTextLibrary.prototype.ToText = KismetTextLibrary.prototype.Conv_TransformToText; } catch (e) {};
try { KismetTextLibrary.ToText = KismetTextLibrary.Conv_TransformToText; } catch (e) {};
try { KismetTextLibrary.prototype.ToString = KismetTextLibrary.prototype.Conv_TextToString; } catch (e) {};
try { KismetTextLibrary.ToString = KismetTextLibrary.Conv_TextToString; } catch (e) {};
try { KismetTextLibrary.prototype.ToText = KismetTextLibrary.prototype.Conv_StringToText; } catch (e) {};
try { KismetTextLibrary.ToText = KismetTextLibrary.Conv_StringToText; } catch (e) {};
try { KismetTextLibrary.prototype.ToText = KismetTextLibrary.prototype.Conv_RotatorToText; } catch (e) {};
try { KismetTextLibrary.ToText = KismetTextLibrary.Conv_RotatorToText; } catch (e) {};
try { KismetTextLibrary.prototype.ToText = KismetTextLibrary.prototype.Conv_ObjectToText; } catch (e) {};
try { KismetTextLibrary.ToText = KismetTextLibrary.Conv_ObjectToText; } catch (e) {};
try { KismetTextLibrary.prototype.ToText = KismetTextLibrary.prototype.Conv_NameToText; } catch (e) {};
try { KismetTextLibrary.ToText = KismetTextLibrary.Conv_NameToText; } catch (e) {};
try { KismetTextLibrary.prototype.ToText = KismetTextLibrary.prototype.Conv_IntToText; } catch (e) {};
try { KismetTextLibrary.ToText = KismetTextLibrary.Conv_IntToText; } catch (e) {};
try { KismetTextLibrary.prototype.ToText = KismetTextLibrary.prototype.Conv_Int64ToText; } catch (e) {};
try { KismetTextLibrary.ToText = KismetTextLibrary.Conv_Int64ToText; } catch (e) {};
try { KismetTextLibrary.prototype.ToText = KismetTextLibrary.prototype.Conv_DoubleToText; } catch (e) {};
try { KismetTextLibrary.ToText = KismetTextLibrary.Conv_DoubleToText; } catch (e) {};
try { KismetTextLibrary.prototype.ToText = KismetTextLibrary.prototype.Conv_ColorToText; } catch (e) {};
try { KismetTextLibrary.ToText = KismetTextLibrary.Conv_ColorToText; } catch (e) {};
try { KismetTextLibrary.prototype.ToText = KismetTextLibrary.prototype.Conv_ByteToText; } catch (e) {};
try { KismetTextLibrary.ToText = KismetTextLibrary.Conv_ByteToText; } catch (e) {};
try { KismetTextLibrary.prototype.ToText = KismetTextLibrary.prototype.Conv_BoolToText; } catch (e) {};
try { KismetTextLibrary.ToText = KismetTextLibrary.Conv_BoolToText; } catch (e) {};
try { KismetTextLibrary.prototype.AsTime = KismetTextLibrary.prototype.AsTimeZoneTime_DateTime; } catch (e) {};
try { KismetTextLibrary.AsTime = KismetTextLibrary.AsTimeZoneTime_DateTime; } catch (e) {};
try { KismetTextLibrary.prototype.AsDateTime = KismetTextLibrary.prototype.AsTimeZoneDateTime_DateTime; } catch (e) {};
try { KismetTextLibrary.AsDateTime = KismetTextLibrary.AsTimeZoneDateTime_DateTime; } catch (e) {};
try { KismetTextLibrary.prototype.AsDate = KismetTextLibrary.prototype.AsTimeZoneDate_DateTime; } catch (e) {};
try { KismetTextLibrary.AsDate = KismetTextLibrary.AsTimeZoneDate_DateTime; } catch (e) {};
try { KismetTextLibrary.prototype.AsTimespan = KismetTextLibrary.prototype.AsTimespan_Timespan; } catch (e) {};
try { KismetTextLibrary.AsTimespan = KismetTextLibrary.AsTimespan_Timespan; } catch (e) {};
try { KismetTextLibrary.prototype.AsTime = KismetTextLibrary.prototype.AsTime_DateTime; } catch (e) {};
try { KismetTextLibrary.AsTime = KismetTextLibrary.AsTime_DateTime; } catch (e) {};
try { KismetTextLibrary.prototype.AsPercent = KismetTextLibrary.prototype.AsPercent_Float; } catch (e) {};
try { KismetTextLibrary.AsPercent = KismetTextLibrary.AsPercent_Float; } catch (e) {};
try { KismetTextLibrary.prototype.AsDateTime = KismetTextLibrary.prototype.AsDateTime_DateTime; } catch (e) {};
try { KismetTextLibrary.AsDateTime = KismetTextLibrary.AsDateTime_DateTime; } catch (e) {};
try { KismetTextLibrary.prototype.AsDate = KismetTextLibrary.prototype.AsDate_DateTime; } catch (e) {};
try { KismetTextLibrary.AsDate = KismetTextLibrary.AsDate_DateTime; } catch (e) {};
try { KismetTextLibrary.prototype.AsCurrency = KismetTextLibrary.prototype.AsCurrencyBase; } catch (e) {};
try { KismetTextLibrary.AsCurrency = KismetTextLibrary.AsCurrencyBase; } catch (e) {};
try { KismetTextLibrary.prototype.AsCurrency = KismetTextLibrary.prototype.AsCurrency_Integer; } catch (e) {};
try { KismetTextLibrary.AsCurrency = KismetTextLibrary.AsCurrency_Integer; } catch (e) {};
try { KismetTextLibrary.prototype.AsCurrency = KismetTextLibrary.prototype.AsCurrency_Float; } catch (e) {};
try { KismetTextLibrary.AsCurrency = KismetTextLibrary.AsCurrency_Float; } catch (e) {};
try { let fnprepatch_481 = LevelStreamingDynamic.prototype.LoadLevelInstanceBySoftObjectPtr;LevelStreamingDynamic.prototype.LoadLevelInstanceBySoftObjectPtr = function (WorldContextObject, Level, Location, Rotation, bOutSuccess, OptionalLevelNameOverride, OptionalLevelStreamingClass = null, bLoadAsTempPackage = false) { return fnprepatch_481.call(this, WorldContextObject, Level, Location, Rotation, bOutSuccess, OptionalLevelNameOverride, OptionalLevelStreamingClass, bLoadAsTempPackage) }; } catch (e) {};
try { let fnprepatch_482 = LevelStreamingDynamic.prototype.LoadLevelInstance;LevelStreamingDynamic.prototype.LoadLevelInstance = function (WorldContextObject, LevelName, Location, Rotation, bOutSuccess, OptionalLevelNameOverride, OptionalLevelStreamingClass = null, bLoadAsTempPackage = false) { return fnprepatch_482.call(this, WorldContextObject, LevelName, Location, Rotation, bOutSuccess, OptionalLevelNameOverride, OptionalLevelStreamingClass, bLoadAsTempPackage) }; } catch (e) {};
try { LevelStreamingDynamic.prototype.LoadLevelInstance = LevelStreamingDynamic.prototype.LoadLevelInstanceBySoftObjectPtr; } catch (e) {};
try { LevelStreamingDynamic.LoadLevelInstance = LevelStreamingDynamic.LoadLevelInstanceBySoftObjectPtr; } catch (e) {};
try { Texture2D.prototype.GetSizeY = Texture2D.prototype.Blueprint_GetSizeY; } catch (e) {};
try { Texture2D.prototype.GetSizeX = Texture2D.prototype.Blueprint_GetSizeX; } catch (e) {};
try { let fnprepatch_483 = ParticleSystemComponent.prototype.SetAutoAttachParams;ParticleSystemComponent.prototype.SetAutoAttachParams = function (Parent, SocketName = "None", LocationType = "KeepRelativeOffset") { return fnprepatch_483.call(this, Parent, SocketName, LocationType) }; } catch (e) {};
try { let fnprepatch_484 = ParticleSystemComponent.prototype.CreateNamedDynamicMaterialInstance;ParticleSystemComponent.prototype.CreateNamedDynamicMaterialInstance = function (InName, SourceMaterial = undefined) { return fnprepatch_484.call(this, InName, SourceMaterial) }; } catch (e) {};
try { let fnprepatch_485 = PhysicsThreadLibrary.prototype.AddForce;PhysicsThreadLibrary.prototype.AddForce = function (Handle, Force, bAccelChange = false) { return fnprepatch_485.call(this, Handle, Force, bAccelChange) }; } catch (e) {};
try { let fnprepatch_486 = SceneCaptureComponent.prototype.ShowOnlyActorComponents;SceneCaptureComponent.prototype.ShowOnlyActorComponents = function (InActor, bIncludeFromChildActors = false) { return fnprepatch_486.call(this, InActor, bIncludeFromChildActors) }; } catch (e) {};
try { let fnprepatch_487 = SceneCaptureComponent.prototype.RemoveShowOnlyActorComponents;SceneCaptureComponent.prototype.RemoveShowOnlyActorComponents = function (InActor, bIncludeFromChildActors = false) { return fnprepatch_487.call(this, InActor, bIncludeFromChildActors) }; } catch (e) {};
try { let fnprepatch_488 = SceneCaptureComponent.prototype.HideActorComponents;SceneCaptureComponent.prototype.HideActorComponents = function (InActor, bIncludeFromChildActors = false) { return fnprepatch_488.call(this, InActor, bIncludeFromChildActors) }; } catch (e) {};
try { let fnprepatch_489 = SceneCaptureComponent2D.prototype.AddOrUpdateBlendable;SceneCaptureComponent2D.prototype.AddOrUpdateBlendable = function (InBlendableObject, InWeight = 1) { return fnprepatch_489.call(this, InBlendableObject, InWeight) }; } catch (e) {};
try { SoundEffectPresetWidgetInterface.prototype.OnSoundEffectPresetWidgetConstructed = SoundEffectPresetWidgetInterface.prototype.OnConstructed; } catch (e) {};
try { SoundSubmixWidgetInterface.prototype.OnSoundSubmixWidgetConstructed = SoundSubmixWidgetInterface.prototype.OnConstructed; } catch (e) {};
try { TextRenderComponent.prototype.SetText = TextRenderComponent.prototype.K2_SetText; } catch (e) {};
try { let fnprepatch_490 = TimelineComponent.prototype.SetPlaybackPosition;TimelineComponent.prototype.SetPlaybackPosition = function (NewPosition, bFireEvents, bFireUpdate = true) { return fnprepatch_490.call(this, NewPosition, bFireEvents, bFireUpdate) }; } catch (e) {};
try { let fnprepatch_491 = TimelineComponent.prototype.AddInterpVector;TimelineComponent.prototype.AddInterpVector = function (VectorCurve, InterpFunc, PropertyName = "None", TrackName = "None") { return fnprepatch_491.call(this, VectorCurve, InterpFunc, PropertyName, TrackName) }; } catch (e) {};
try { let fnprepatch_492 = TimelineComponent.prototype.AddInterpLinearColor;TimelineComponent.prototype.AddInterpLinearColor = function (LinearColorCurve, InterpFunc, PropertyName = "None", TrackName = "None") { return fnprepatch_492.call(this, LinearColorCurve, InterpFunc, PropertyName, TrackName) }; } catch (e) {};
try { let fnprepatch_493 = TimelineComponent.prototype.AddInterpFloat;TimelineComponent.prototype.AddInterpFloat = function (FloatCurve, InterpFunc, PropertyName = "None", TrackName = "None") { return fnprepatch_493.call(this, FloatCurve, InterpFunc, PropertyName, TrackName) }; } catch (e) {};
try { let fnprepatch_494 = AvoidanceManager.prototype.RegisterMovementComponent;AvoidanceManager.prototype.RegisterMovementComponent = function (MovementComp, AvoidanceWeight = 0.5) { return fnprepatch_494.call(this, MovementComp, AvoidanceWeight) }; } catch (e) {};
try { let fnprepatch_495 = AmbientSound.prototype.Play;AmbientSound.prototype.Play = function (StartTime = 0) { return fnprepatch_495.call(this, StartTime) }; } catch (e) {};
try { let fnprepatch_496 = AmbientSound.prototype.FadeIn;AmbientSound.prototype.FadeIn = function (FadeInDuration, FadeVolumeLevel = 1) { return fnprepatch_496.call(this, FadeInDuration, FadeVolumeLevel) }; } catch (e) {};
try { let fnprepatch_497 = AnimMontage.prototype.CreateSlotAnimationAsDynamicMontage_WithBlendSettings;AnimMontage.prototype.CreateSlotAnimationAsDynamicMontage_WithBlendSettings = function (Asset, SlotNodeName, BlendInSettings, BlendOutSettings, InPlayRate = 1, LoopCount = 1, InBlendOutTriggerTime = -1) { return fnprepatch_497.call(this, Asset, SlotNodeName, BlendInSettings, BlendOutSettings, InPlayRate, LoopCount, InBlendOutTriggerTime) }; } catch (e) {};
try { let fnprepatch_498 = AnimationAttributeIdentifierExtensions.prototype.CreateAttributeIdentifier;AnimationAttributeIdentifierExtensions.prototype.CreateAttributeIdentifier = function (AnimationAsset, AttributeName, BoneName, AttributeType, bValidateExistsOnAsset = false) { return fnprepatch_498.call(this, AnimationAsset, AttributeName, BoneName, AttributeType, bValidateExistsOnAsset) }; } catch (e) {};
try { Skeleton.prototype.AddCompatibleSkeleton = Skeleton.prototype.AddCompatibleSkeletonSoft; } catch (e) {};
try { SkyAtmosphereComponent.prototype.SetAbsorptionScale = SkyAtmosphereComponent.prototype.SetOtherAbsorptionScale; } catch (e) {};
try { SkyAtmosphereComponent.prototype.SetAbsorption = SkyAtmosphereComponent.prototype.SetOtherAbsorption; } catch (e) {};
try { SkyAtmosphereComponent.prototype.SetGroundRadius = SkyAtmosphereComponent.prototype.SetBottomRadius; } catch (e) {};
try { ActorSoundParameterInterface.prototype.GetActorAudioParameters = ActorSoundParameterInterface.prototype.GetActorSoundParams; } catch (e) {};
try { BlueprintMapLibrary.prototype.Values = BlueprintMapLibrary.prototype.Map_Values; } catch (e) {};
try { BlueprintMapLibrary.Values = BlueprintMapLibrary.Map_Values; } catch (e) {};
try { BlueprintMapLibrary.prototype.Remove = BlueprintMapLibrary.prototype.Map_Remove; } catch (e) {};
try { BlueprintMapLibrary.Remove = BlueprintMapLibrary.Map_Remove; } catch (e) {};
try { BlueprintMapLibrary.prototype.Length = BlueprintMapLibrary.prototype.Map_Length; } catch (e) {};
try { BlueprintMapLibrary.Length = BlueprintMapLibrary.Map_Length; } catch (e) {};
try { BlueprintMapLibrary.prototype.Keys = BlueprintMapLibrary.prototype.Map_Keys; } catch (e) {};
try { BlueprintMapLibrary.Keys = BlueprintMapLibrary.Map_Keys; } catch (e) {};
try { BlueprintMapLibrary.prototype.IsNotEmpty = BlueprintMapLibrary.prototype.Map_IsNotEmpty; } catch (e) {};
try { BlueprintMapLibrary.IsNotEmpty = BlueprintMapLibrary.Map_IsNotEmpty; } catch (e) {};
try { BlueprintMapLibrary.prototype.IsEmpty = BlueprintMapLibrary.prototype.Map_IsEmpty; } catch (e) {};
try { BlueprintMapLibrary.IsEmpty = BlueprintMapLibrary.Map_IsEmpty; } catch (e) {};
try { BlueprintMapLibrary.prototype.Find = BlueprintMapLibrary.prototype.Map_Find; } catch (e) {};
try { BlueprintMapLibrary.Find = BlueprintMapLibrary.Map_Find; } catch (e) {};
try { BlueprintMapLibrary.prototype.Contains = BlueprintMapLibrary.prototype.Map_Contains; } catch (e) {};
try { BlueprintMapLibrary.Contains = BlueprintMapLibrary.Map_Contains; } catch (e) {};
try { BlueprintMapLibrary.prototype.Clear = BlueprintMapLibrary.prototype.Map_Clear; } catch (e) {};
try { BlueprintMapLibrary.Clear = BlueprintMapLibrary.Map_Clear; } catch (e) {};
try { BlueprintMapLibrary.prototype.Add = BlueprintMapLibrary.prototype.Map_Add; } catch (e) {};
try { BlueprintMapLibrary.Add = BlueprintMapLibrary.Map_Add; } catch (e) {};
try { BlueprintSetLibrary.prototype.Union = BlueprintSetLibrary.prototype.Set_Union; } catch (e) {};
try { BlueprintSetLibrary.Union = BlueprintSetLibrary.Set_Union; } catch (e) {};
try { BlueprintSetLibrary.prototype.ToArray = BlueprintSetLibrary.prototype.Set_ToArray; } catch (e) {};
try { BlueprintSetLibrary.ToArray = BlueprintSetLibrary.Set_ToArray; } catch (e) {};
try { BlueprintSetLibrary.prototype.RemoveItems = BlueprintSetLibrary.prototype.Set_RemoveItems; } catch (e) {};
try { BlueprintSetLibrary.RemoveItems = BlueprintSetLibrary.Set_RemoveItems; } catch (e) {};
try { BlueprintSetLibrary.prototype.Remove = BlueprintSetLibrary.prototype.Set_Remove; } catch (e) {};
try { BlueprintSetLibrary.Remove = BlueprintSetLibrary.Set_Remove; } catch (e) {};
try { BlueprintSetLibrary.prototype.Length = BlueprintSetLibrary.prototype.Set_Length; } catch (e) {};
try { BlueprintSetLibrary.Length = BlueprintSetLibrary.Set_Length; } catch (e) {};
try { BlueprintSetLibrary.prototype.IsNotEmpty = BlueprintSetLibrary.prototype.Set_IsNotEmpty; } catch (e) {};
try { BlueprintSetLibrary.IsNotEmpty = BlueprintSetLibrary.Set_IsNotEmpty; } catch (e) {};
try { BlueprintSetLibrary.prototype.IsEmpty = BlueprintSetLibrary.prototype.Set_IsEmpty; } catch (e) {};
try { BlueprintSetLibrary.IsEmpty = BlueprintSetLibrary.Set_IsEmpty; } catch (e) {};
try { BlueprintSetLibrary.prototype.Intersection = BlueprintSetLibrary.prototype.Set_Intersection; } catch (e) {};
try { BlueprintSetLibrary.Intersection = BlueprintSetLibrary.Set_Intersection; } catch (e) {};
try { BlueprintSetLibrary.prototype.Difference = BlueprintSetLibrary.prototype.Set_Difference; } catch (e) {};
try { BlueprintSetLibrary.Difference = BlueprintSetLibrary.Set_Difference; } catch (e) {};
try { BlueprintSetLibrary.prototype.ContainsItem = BlueprintSetLibrary.prototype.Set_Contains; } catch (e) {};
try { BlueprintSetLibrary.ContainsItem = BlueprintSetLibrary.Set_Contains; } catch (e) {};
try { BlueprintSetLibrary.prototype.Clear = BlueprintSetLibrary.prototype.Set_Clear; } catch (e) {};
try { BlueprintSetLibrary.Clear = BlueprintSetLibrary.Set_Clear; } catch (e) {};
try { BlueprintSetLibrary.prototype.AddItems = BlueprintSetLibrary.prototype.Set_AddItems; } catch (e) {};
try { BlueprintSetLibrary.AddItems = BlueprintSetLibrary.Set_AddItems; } catch (e) {};
try { BlueprintSetLibrary.prototype.Add = BlueprintSetLibrary.prototype.Set_Add; } catch (e) {};
try { BlueprintSetLibrary.Add = BlueprintSetLibrary.Set_Add; } catch (e) {};
try { CameraLensEffectInterfaceClassSupportLibrary.prototype.IsValidCameraLensClass = CameraLensEffectInterfaceClassSupportLibrary.prototype.IsInterfaceClassValid; } catch (e) {};
try { CameraLensEffectInterfaceClassSupportLibrary.IsValidCameraLensClass = CameraLensEffectInterfaceClassSupportLibrary.IsInterfaceClassValid; } catch (e) {};
try { let fnprepatch_499 = CameraModifier.prototype.DisableModifier;CameraModifier.prototype.DisableModifier = function (bImmediate = false) { return fnprepatch_499.call(this, bImmediate) }; } catch (e) {};
try { let fnprepatch_500 = CameraShakeSourceComponent.prototype.StopAllCameraShakesOfType;CameraShakeSourceComponent.prototype.StopAllCameraShakesOfType = function (InCameraShake, bImmediately = true) { return fnprepatch_500.call(this, InCameraShake, bImmediately) }; } catch (e) {};
try { let fnprepatch_501 = CameraShakeSourceComponent.prototype.StopAllCameraShakes;CameraShakeSourceComponent.prototype.StopAllCameraShakes = function (bImmediately = true) { return fnprepatch_501.call(this, bImmediately) }; } catch (e) {};
try { let fnprepatch_502 = CameraShakeSourceComponent.prototype.StartCameraShake;CameraShakeSourceComponent.prototype.StartCameraShake = function (InCameraShake, Scale = 1, PlaySpace = "CameraLocal", UserPlaySpaceRot) { return fnprepatch_502.call(this, InCameraShake, Scale, PlaySpace, UserPlaySpaceRot) }; } catch (e) {};
try { TextureRenderTarget2D.prototype.RenderTargetCreateStaticTextureEditorOnly = TextureRenderTarget2D.prototype.RenderTargetCreateStaticTexture2DEditorOnly; } catch (e) {};
try { let fnprepatch_503 = CanvasRenderTarget2D.prototype.CreateCanvasRenderTarget2D;CanvasRenderTarget2D.prototype.CreateCanvasRenderTarget2D = function (WorldContextObject, CanvasRenderTarget2DClass, Width = 1024, Height = 1024) { return fnprepatch_503.call(this, WorldContextObject, CanvasRenderTarget2DClass, Width, Height) }; } catch (e) {};
try { let fnprepatch_504 = PlayerController.prototype.StartFire;PlayerController.prototype.StartFire = function (FireModeNum = 0) { return fnprepatch_504.call(this, FireModeNum) }; } catch (e) {};
try { let fnprepatch_505 = PlayerController.prototype.SetViewTargetWithBlend;PlayerController.prototype.SetViewTargetWithBlend = function (NewViewTarget, BlendTime = 0, BlendFunc = "VTBlend_Linear", BlendExp = 0, bLockOutgoing = false) { return fnprepatch_505.call(this, NewViewTarget, BlendTime, BlendFunc, BlendExp, bLockOutgoing) }; } catch (e) {};
try { let fnprepatch_506 = PlayerController.prototype.ProjectWorldLocationToScreen;PlayerController.prototype.ProjectWorldLocationToScreen = function (WorldLocation, ScreenLocation, bPlayerViewportRelative = false) { return fnprepatch_506.call(this, WorldLocation, ScreenLocation, bPlayerViewportRelative) }; } catch (e) {};
try { let fnprepatch_507 = PlayerController.prototype.PlayHapticEffect;PlayerController.prototype.PlayHapticEffect = function (HapticEffect, Hand, Scale = 1, bLoop = false) { return fnprepatch_507.call(this, HapticEffect, Hand, Scale, bLoop) }; } catch (e) {};
try { let fnprepatch_508 = PlayerController.prototype.ClientStopCameraShakesFromSource;PlayerController.prototype.ClientStopCameraShakesFromSource = function (SourceComponent, bImmediately = true) { return fnprepatch_508.call(this, SourceComponent, bImmediately) }; } catch (e) {};
try { let fnprepatch_509 = PlayerController.prototype.ClientStopCameraShake;PlayerController.prototype.ClientStopCameraShake = function (Shake, bImmediately = true) { return fnprepatch_509.call(this, Shake, bImmediately) }; } catch (e) {};
try { let fnprepatch_510 = PlayerController.prototype.ClientStartCameraShake;PlayerController.prototype.ClientStartCameraShake = function (Shake, Scale = 1, PlaySpace = "CameraLocal", UserPlaySpaceRot) { return fnprepatch_510.call(this, Shake, Scale, PlaySpace, UserPlaySpaceRot) }; } catch (e) {};
try { PlayerController.prototype.GetLocalPlayerControllerID = PlayerController.prototype.GetPlayerControllerID; } catch (e) {};
try { PlayerController.prototype.RemoveLocalPlayer = PlayerController.prototype.RemovePlayer; } catch (e) {};
try { PlayerController.prototype.SetLocalPlayerControllerID = PlayerController.prototype.SetPlayerControllerID; } catch (e) {};
try { PlayerController.prototype.SetLocalPlayerControllerPlatformUserId = PlayerController.prototype.SetPlayerPlatformUserId; } catch (e) {};
try { PlayerController.prototype.SetInputModeGameAndUI = PlayerController.prototype.SetInputMode_GameAndUIEx; } catch (e) {};
try { PlayerController.prototype.SetInputModeUIOnly = PlayerController.prototype.SetInputMode_UIOnlyEx; } catch (e) {};
try { PlayerController.prototype.SetMousePosition = PlayerController.prototype.SetMouseLocation; } catch (e) {};
try { PlayerController.prototype.ConvertWorldLocationToScreenLocation = PlayerController.prototype.ProjectWorldLocationToScreen; } catch (e) {};
try { PlayerController.prototype.ClientPlayForceFeedback = PlayerController.prototype.K2_ClientPlayForceFeedback; } catch (e) {};
try { PlayerController.prototype.ConvertScreenLocationToWorldSpace = PlayerController.prototype.DeprojectScreenPositionToWorld; } catch (e) {};
try { PlayerController.prototype.ConvertMouseLocationToWorldSpace = PlayerController.prototype.DeprojectMousePositionToWorld; } catch (e) {};
try { CheatManager.prototype.InitCheatManager = CheatManager.prototype.ReceiveInitCheatManager; } catch (e) {};
try { CheatManager.prototype.Shutdown = CheatManager.prototype.ReceiveEndPlay; } catch (e) {};
try { let fnprepatch_511 = AudioComponent.prototype.SetModulationRouting;AudioComponent.prototype.SetModulationRouting = function (Modulators, Destination, RoutingMethod = "Disable") { return fnprepatch_511.call(this, Modulators, Destination, RoutingMethod) }; } catch (e) {};
try { let fnprepatch_512 = AudioComponent.prototype.PlayQuantized;AudioComponent.prototype.PlayQuantized = function (WorldContextObject, InClockHandle, InQuantizationBoundary, InDelegate, InStartTime = 0, InFadeInDuration = 0, InFadeVolumeLevel = 1, InFadeCurve = "Linear") { return fnprepatch_512.call(this, WorldContextObject, InClockHandle, InQuantizationBoundary, InDelegate, InStartTime, InFadeInDuration, InFadeVolumeLevel, InFadeCurve) }; } catch (e) {};
try { let fnprepatch_513 = AudioComponent.prototype.Play;AudioComponent.prototype.Play = function (StartTime = 0) { return fnprepatch_513.call(this, StartTime) }; } catch (e) {};
try { let fnprepatch_514 = AudioComponent.prototype.FadeOut;AudioComponent.prototype.FadeOut = function (FadeOutDuration, FadeVolumeLevel, FadeCurve = "Linear") { return fnprepatch_514.call(this, FadeOutDuration, FadeVolumeLevel, FadeCurve) }; } catch (e) {};
try { let fnprepatch_515 = AudioComponent.prototype.FadeIn;AudioComponent.prototype.FadeIn = function (FadeInDuration, FadeVolumeLevel = 1, StartTime = 0, FadeCurve = "Linear") { return fnprepatch_515.call(this, FadeInDuration, FadeVolumeLevel, StartTime, FadeCurve) }; } catch (e) {};
try { let fnprepatch_516 = AudioComponent.prototype.AdjustVolume;AudioComponent.prototype.AdjustVolume = function (AdjustVolumeDuration, AdjustVolumeLevel, FadeCurve = "Linear") { return fnprepatch_516.call(this, AdjustVolumeDuration, AdjustVolumeLevel, FadeCurve) }; } catch (e) {};
try { AudioComponent.prototype.SetIntegerParameter = AudioComponent.prototype.SetIntParameter; } catch (e) {};
try { AudioComponent.prototype.SetBooleanParameter = AudioComponent.prototype.SetBoolParameter; } catch (e) {};
try { AudioComponent.prototype.GetCookedAmplitudeEnvelopeDataForAllPlayingSounds = AudioComponent.prototype.GetCookedEnvelopeDataForAllPlayingSounds; } catch (e) {};
try { AudioComponent.prototype.GetCookedAmplitudeEnvelopeData = AudioComponent.prototype.GetCookedEnvelopeData; } catch (e) {};
try { AudioComponent.prototype.GetAttenuationSettingsToApply = AudioComponent.prototype.BP_GetAttenuationSettingsToApply; } catch (e) {};
try { BoundsCopyComponent.prototype.CopyBounds = BoundsCopyComponent.prototype.SetTransformToBounds; } catch (e) {};
try { BoundsCopyComponent.prototype.CopyRotation = BoundsCopyComponent.prototype.SetRotation; } catch (e) {};
try { let fnprepatch_517 = BoxComponent.prototype.SetBoxExtent;BoxComponent.prototype.SetBoxExtent = function (InBoxExtent, bUpdateOverlaps = true) { return fnprepatch_517.call(this, InBoxExtent, bUpdateOverlaps) }; } catch (e) {};
try { let fnprepatch_518 = CapsuleComponent.prototype.SetCapsuleSize;CapsuleComponent.prototype.SetCapsuleSize = function (InRadius, InHalfHeight, bUpdateOverlaps = true) { return fnprepatch_518.call(this, InRadius, InHalfHeight, bUpdateOverlaps) }; } catch (e) {};
try { let fnprepatch_519 = CapsuleComponent.prototype.SetCapsuleRadius;CapsuleComponent.prototype.SetCapsuleRadius = function (Radius, bUpdateOverlaps = true) { return fnprepatch_519.call(this, Radius, bUpdateOverlaps) }; } catch (e) {};
try { let fnprepatch_520 = CapsuleComponent.prototype.SetCapsuleHalfHeight;CapsuleComponent.prototype.SetCapsuleHalfHeight = function (HalfHeight, bUpdateOverlaps = true) { return fnprepatch_520.call(this, HalfHeight, bUpdateOverlaps) }; } catch (e) {};
try { let fnprepatch_521 = MovementComponent.prototype.K2_MoveUpdatedComponent;MovementComponent.prototype.K2_MoveUpdatedComponent = function (Delta, NewRotation, OutHit, bSweep = true, bTeleport = false) { return fnprepatch_521.call(this, Delta, NewRotation, OutHit, bSweep, bTeleport) }; } catch (e) {};
try { MovementComponent.prototype.MoveUpdatedComponent = MovementComponent.prototype.K2_MoveUpdatedComponent; } catch (e) {};
try { let fnprepatch_522 = PawnMovementComponent.prototype.AddInputVector;PawnMovementComponent.prototype.AddInputVector = function (WorldVector, bForce = false) { return fnprepatch_522.call(this, WorldVector, bForce) }; } catch (e) {};
try { let fnprepatch_523 = CharacterMovementComponent.prototype.SetMovementMode;CharacterMovementComponent.prototype.SetMovementMode = function (NewMovementMode, NewCustomMode = 0) { return fnprepatch_523.call(this, NewMovementMode, NewCustomMode) }; } catch (e) {};
try { let fnprepatch_524 = CharacterMovementComponent.prototype.AddImpulse;CharacterMovementComponent.prototype.AddImpulse = function (Impulse, bVelocityChange = false) { return fnprepatch_524.call(this, Impulse, bVelocityChange) }; } catch (e) {};
try { CharacterMovementComponent.prototype.GetWalkableFloorZ = CharacterMovementComponent.prototype.K2_GetWalkableFloorZ; } catch (e) {};
try { CharacterMovementComponent.prototype.GetWalkableFloorAngle = CharacterMovementComponent.prototype.K2_GetWalkableFloorAngle; } catch (e) {};
try { CharacterMovementComponent.prototype.FindFloor = CharacterMovementComponent.prototype.K2_FindFloor; } catch (e) {};
try { CharacterMovementComponent.prototype.ComputeFloorDistance = CharacterMovementComponent.prototype.K2_ComputeFloorDist; } catch (e) {};
try { let fnprepatch_525 = DecalComponent.prototype.SetFadeOut;DecalComponent.prototype.SetFadeOut = function (StartDelay, Duration, DestroyOwnerAfterFade = true) { return fnprepatch_525.call(this, StartDelay, Duration, DestroyOwnerAfterFade) }; } catch (e) {};
try { let fnprepatch_526 = LightComponent.prototype.SetLightColor;LightComponent.prototype.SetLightColor = function (NewLightColor, bSRGB = true) { return fnprepatch_526.call(this, NewLightColor, bSRGB) }; } catch (e) {};
try { LightComponent.prototype.SetUseIESIntensity = LightComponent.prototype.SetUseIESBrightness; } catch (e) {};
try { LightComponent.prototype.SetIESIntensityScale = LightComponent.prototype.SetIESBrightnessScale; } catch (e) {};
try { let fnprepatch_527 = SphereComponent.prototype.SetSphereRadius;SphereComponent.prototype.SetSphereRadius = function (InSphereRadius, bUpdateOverlaps = true) { return fnprepatch_527.call(this, InSphereRadius, bUpdateOverlaps) }; } catch (e) {};
try { let fnprepatch_528 = ForceFeedbackComponent.prototype.Play;ForceFeedbackComponent.prototype.Play = function (StartTime = 0) { return fnprepatch_528.call(this, StartTime) }; } catch (e) {};
try { ForceFeedbackComponent.prototype.GetAttenuationSettingsToApply = ForceFeedbackComponent.prototype.BP_GetAttenuationSettingsToApply; } catch (e) {};
try { let fnprepatch_529 = InterpToMovementComponent.prototype.RestartMovement;InterpToMovementComponent.prototype.RestartMovement = function (InitialDirection = 1) { return fnprepatch_529.call(this, InitialDirection) }; } catch (e) {};
try { let fnprepatch_530 = InterpToMovementComponent.prototype.AddControlPointPosition;InterpToMovementComponent.prototype.AddControlPointPosition = function (Pos, bPositionIsRelative = true) { return fnprepatch_530.call(this, Pos, bPositionIsRelative) }; } catch (e) {};
try { let fnprepatch_531 = LocalLightComponent.prototype.GetUnitsConversionFactor;LocalLightComponent.prototype.GetUnitsConversionFactor = function (SrcUnits, TargetUnits, CosHalfConeAngle = -1) { return fnprepatch_531.call(this, SrcUnits, TargetUnits, CosHalfConeAngle) }; } catch (e) {};
try { let fnprepatch_532 = PostProcessComponent.prototype.AddOrUpdateBlendable;PostProcessComponent.prototype.AddOrUpdateBlendable = function (InBlendableObject, InWeight = 1) { return fnprepatch_532.call(this, InBlendableObject, InWeight) }; } catch (e) {};
try { let fnprepatch_533 = SplineComponent.prototype.SetUpVectorAtSplinePoint;SplineComponent.prototype.SetUpVectorAtSplinePoint = function (PointIndex, InUpVector, CoordinateSpace, bUpdateSpline = true) { return fnprepatch_533.call(this, PointIndex, InUpVector, CoordinateSpace, bUpdateSpline) }; } catch (e) {};
try { let fnprepatch_534 = SplineComponent.prototype.SetTangentsAtSplinePoint;SplineComponent.prototype.SetTangentsAtSplinePoint = function (PointIndex, InArriveTangent, InLeaveTangent, CoordinateSpace, bUpdateSpline = true) { return fnprepatch_534.call(this, PointIndex, InArriveTangent, InLeaveTangent, CoordinateSpace, bUpdateSpline) }; } catch (e) {};
try { let fnprepatch_535 = SplineComponent.prototype.SetTangentAtSplinePoint;SplineComponent.prototype.SetTangentAtSplinePoint = function (PointIndex, InTangent, CoordinateSpace, bUpdateSpline = true) { return fnprepatch_535.call(this, PointIndex, InTangent, CoordinateSpace, bUpdateSpline) }; } catch (e) {};
try { let fnprepatch_536 = SplineComponent.prototype.SetSplinePointType;SplineComponent.prototype.SetSplinePointType = function (PointIndex, Type, bUpdateSpline = true) { return fnprepatch_536.call(this, PointIndex, Type, bUpdateSpline) }; } catch (e) {};
try { let fnprepatch_537 = SplineComponent.prototype.SetSplinePoints;SplineComponent.prototype.SetSplinePoints = function (Points, CoordinateSpace, bUpdateSpline = true) { return fnprepatch_537.call(this, Points, CoordinateSpace, bUpdateSpline) }; } catch (e) {};
try { let fnprepatch_538 = SplineComponent.prototype.SetScaleAtSplinePoint;SplineComponent.prototype.SetScaleAtSplinePoint = function (PointIndex, InScaleVector, bUpdateSpline = true) { return fnprepatch_538.call(this, PointIndex, InScaleVector, bUpdateSpline) }; } catch (e) {};
try { let fnprepatch_539 = SplineComponent.prototype.SetRotationAtSplinePoint;SplineComponent.prototype.SetRotationAtSplinePoint = function (PointIndex, InRotation, CoordinateSpace, bUpdateSpline = true) { return fnprepatch_539.call(this, PointIndex, InRotation, CoordinateSpace, bUpdateSpline) }; } catch (e) {};
try { let fnprepatch_540 = SplineComponent.prototype.SetLocationAtSplinePoint;SplineComponent.prototype.SetLocationAtSplinePoint = function (PointIndex, InLocation, CoordinateSpace, bUpdateSpline = true) { return fnprepatch_540.call(this, PointIndex, InLocation, CoordinateSpace, bUpdateSpline) }; } catch (e) {};
try { let fnprepatch_541 = SplineComponent.prototype.SetClosedLoopAtPosition;SplineComponent.prototype.SetClosedLoopAtPosition = function (bInClosedLoop, Key, bUpdateSpline = true) { return fnprepatch_541.call(this, bInClosedLoop, Key, bUpdateSpline) }; } catch (e) {};
try { let fnprepatch_542 = SplineComponent.prototype.SetClosedLoop;SplineComponent.prototype.SetClosedLoop = function (bInClosedLoop, bUpdateSpline = true) { return fnprepatch_542.call(this, bInClosedLoop, bUpdateSpline) }; } catch (e) {};
try { let fnprepatch_543 = SplineComponent.prototype.RemoveSplinePoint;SplineComponent.prototype.RemoveSplinePoint = function (Index, bUpdateSpline = true) { return fnprepatch_543.call(this, Index, bUpdateSpline) }; } catch (e) {};
try { let fnprepatch_544 = SplineComponent.prototype.GetWorldRotationAtTime;SplineComponent.prototype.GetWorldRotationAtTime = function (Time, bUseConstantVelocity = false) { return fnprepatch_544.call(this, Time, bUseConstantVelocity) }; } catch (e) {};
try { let fnprepatch_545 = SplineComponent.prototype.GetWorldLocationAtTime;SplineComponent.prototype.GetWorldLocationAtTime = function (Time, bUseConstantVelocity = false) { return fnprepatch_545.call(this, Time, bUseConstantVelocity) }; } catch (e) {};
try { let fnprepatch_546 = SplineComponent.prototype.GetWorldDirectionAtTime;SplineComponent.prototype.GetWorldDirectionAtTime = function (Time, bUseConstantVelocity = false) { return fnprepatch_546.call(this, Time, bUseConstantVelocity) }; } catch (e) {};
try { let fnprepatch_547 = SplineComponent.prototype.GetUpVectorAtTime;SplineComponent.prototype.GetUpVectorAtTime = function (Time, CoordinateSpace, bUseConstantVelocity = false) { return fnprepatch_547.call(this, Time, CoordinateSpace, bUseConstantVelocity) }; } catch (e) {};
try { let fnprepatch_548 = SplineComponent.prototype.GetTransformAtTime;SplineComponent.prototype.GetTransformAtTime = function (Time, CoordinateSpace, bUseConstantVelocity = false, bUseScale = false) { return fnprepatch_548.call(this, Time, CoordinateSpace, bUseConstantVelocity, bUseScale) }; } catch (e) {};
try { let fnprepatch_549 = SplineComponent.prototype.GetTransformAtSplinePoint;SplineComponent.prototype.GetTransformAtSplinePoint = function (PointIndex, CoordinateSpace, bUseScale = false) { return fnprepatch_549.call(this, PointIndex, CoordinateSpace, bUseScale) }; } catch (e) {};
try { let fnprepatch_550 = SplineComponent.prototype.GetTransformAtSplineInputKey;SplineComponent.prototype.GetTransformAtSplineInputKey = function (InKey, CoordinateSpace, bUseScale = false) { return fnprepatch_550.call(this, InKey, CoordinateSpace, bUseScale) }; } catch (e) {};
try { let fnprepatch_551 = SplineComponent.prototype.GetTransformAtDistanceAlongSpline;SplineComponent.prototype.GetTransformAtDistanceAlongSpline = function (Distance, CoordinateSpace, bUseScale = false) { return fnprepatch_551.call(this, Distance, CoordinateSpace, bUseScale) }; } catch (e) {};
try { let fnprepatch_552 = SplineComponent.prototype.GetTangentAtTime;SplineComponent.prototype.GetTangentAtTime = function (Time, CoordinateSpace, bUseConstantVelocity = false) { return fnprepatch_552.call(this, Time, CoordinateSpace, bUseConstantVelocity) }; } catch (e) {};
try { let fnprepatch_553 = SplineComponent.prototype.GetScaleAtTime;SplineComponent.prototype.GetScaleAtTime = function (Time, bUseConstantVelocity = false) { return fnprepatch_553.call(this, Time, bUseConstantVelocity) }; } catch (e) {};
try { let fnprepatch_554 = SplineComponent.prototype.GetRotationAtTime;SplineComponent.prototype.GetRotationAtTime = function (Time, CoordinateSpace, bUseConstantVelocity = false) { return fnprepatch_554.call(this, Time, CoordinateSpace, bUseConstantVelocity) }; } catch (e) {};
try { let fnprepatch_555 = SplineComponent.prototype.GetRollAtTime;SplineComponent.prototype.GetRollAtTime = function (Time, CoordinateSpace, bUseConstantVelocity = false) { return fnprepatch_555.call(this, Time, CoordinateSpace, bUseConstantVelocity) }; } catch (e) {};
try { let fnprepatch_556 = SplineComponent.prototype.GetRightVectorAtTime;SplineComponent.prototype.GetRightVectorAtTime = function (Time, CoordinateSpace, bUseConstantVelocity = false) { return fnprepatch_556.call(this, Time, CoordinateSpace, bUseConstantVelocity) }; } catch (e) {};
try { let fnprepatch_557 = SplineComponent.prototype.GetLocationAtTime;SplineComponent.prototype.GetLocationAtTime = function (Time, CoordinateSpace, bUseConstantVelocity = false) { return fnprepatch_557.call(this, Time, CoordinateSpace, bUseConstantVelocity) }; } catch (e) {};
try { let fnprepatch_558 = SplineComponent.prototype.GetDirectionAtTime;SplineComponent.prototype.GetDirectionAtTime = function (Time, CoordinateSpace, bUseConstantVelocity = false) { return fnprepatch_558.call(this, Time, CoordinateSpace, bUseConstantVelocity) }; } catch (e) {};
try { let fnprepatch_559 = SplineComponent.prototype.FindTransformClosestToWorldLocation;SplineComponent.prototype.FindTransformClosestToWorldLocation = function (WorldLocation, CoordinateSpace, bUseScale = false) { return fnprepatch_559.call(this, WorldLocation, CoordinateSpace, bUseScale) }; } catch (e) {};
try { let fnprepatch_560 = SplineComponent.prototype.ClearSplinePoints;SplineComponent.prototype.ClearSplinePoints = function (bUpdateSpline = true) { return fnprepatch_560.call(this, bUpdateSpline) }; } catch (e) {};
try { let fnprepatch_561 = SplineComponent.prototype.AddSplinePointAtIndex;SplineComponent.prototype.AddSplinePointAtIndex = function (Position, Index, CoordinateSpace, bUpdateSpline = true) { return fnprepatch_561.call(this, Position, Index, CoordinateSpace, bUpdateSpline) }; } catch (e) {};
try { let fnprepatch_562 = SplineComponent.prototype.AddSplinePoint;SplineComponent.prototype.AddSplinePoint = function (Position, CoordinateSpace, bUpdateSpline = true) { return fnprepatch_562.call(this, Position, CoordinateSpace, bUpdateSpline) }; } catch (e) {};
try { let fnprepatch_563 = SplineComponent.prototype.AddPoints;SplineComponent.prototype.AddPoints = function (Points, bUpdateSpline = true) { return fnprepatch_563.call(this, Points, bUpdateSpline) }; } catch (e) {};
try { let fnprepatch_564 = SplineComponent.prototype.AddPoint;SplineComponent.prototype.AddPoint = function (Point, bUpdateSpline = true) { return fnprepatch_564.call(this, Point, bUpdateSpline) }; } catch (e) {};
try { let fnprepatch_565 = SplineMeshComponent.prototype.SetStartTangent;SplineMeshComponent.prototype.SetStartTangent = function (StartTangent, bUpdateMesh = true) { return fnprepatch_565.call(this, StartTangent, bUpdateMesh) }; } catch (e) {};
try { let fnprepatch_566 = SplineMeshComponent.prototype.SetStartScale;SplineMeshComponent.prototype.SetStartScale = function (StartScale = {"X":1,"Y":1}, bUpdateMesh = true) { return fnprepatch_566.call(this, StartScale, bUpdateMesh) }; } catch (e) {};
try { let fnprepatch_567 = SplineMeshComponent.prototype.SetStartRollDegrees;SplineMeshComponent.prototype.SetStartRollDegrees = function (StartRollDegrees, bUpdateMesh = true) { return fnprepatch_567.call(this, StartRollDegrees, bUpdateMesh) }; } catch (e) {};
try { let fnprepatch_568 = SplineMeshComponent.prototype.SetStartRoll;SplineMeshComponent.prototype.SetStartRoll = function (StartRoll, bUpdateMesh = true) { return fnprepatch_568.call(this, StartRoll, bUpdateMesh) }; } catch (e) {};
try { let fnprepatch_569 = SplineMeshComponent.prototype.SetStartPosition;SplineMeshComponent.prototype.SetStartPosition = function (StartPos, bUpdateMesh = true) { return fnprepatch_569.call(this, StartPos, bUpdateMesh) }; } catch (e) {};
try { let fnprepatch_570 = SplineMeshComponent.prototype.SetStartOffset;SplineMeshComponent.prototype.SetStartOffset = function (StartOffset, bUpdateMesh = true) { return fnprepatch_570.call(this, StartOffset, bUpdateMesh) }; } catch (e) {};
try { let fnprepatch_571 = SplineMeshComponent.prototype.SetStartAndEnd;SplineMeshComponent.prototype.SetStartAndEnd = function (StartPos, StartTangent, EndPos, EndTangent, bUpdateMesh = true) { return fnprepatch_571.call(this, StartPos, StartTangent, EndPos, EndTangent, bUpdateMesh) }; } catch (e) {};
try { let fnprepatch_572 = SplineMeshComponent.prototype.SetSplineUpDir;SplineMeshComponent.prototype.SetSplineUpDir = function (InSplineUpDir, bUpdateMesh = true) { return fnprepatch_572.call(this, InSplineUpDir, bUpdateMesh) }; } catch (e) {};
try { let fnprepatch_573 = SplineMeshComponent.prototype.SetForwardAxis;SplineMeshComponent.prototype.SetForwardAxis = function (InForwardAxis, bUpdateMesh = true) { return fnprepatch_573.call(this, InForwardAxis, bUpdateMesh) }; } catch (e) {};
try { let fnprepatch_574 = SplineMeshComponent.prototype.SetEndTangent;SplineMeshComponent.prototype.SetEndTangent = function (EndTangent, bUpdateMesh = true) { return fnprepatch_574.call(this, EndTangent, bUpdateMesh) }; } catch (e) {};
try { let fnprepatch_575 = SplineMeshComponent.prototype.SetEndScale;SplineMeshComponent.prototype.SetEndScale = function (EndScale = {"X":1,"Y":1}, bUpdateMesh = true) { return fnprepatch_575.call(this, EndScale, bUpdateMesh) }; } catch (e) {};
try { let fnprepatch_576 = SplineMeshComponent.prototype.SetEndRollDegrees;SplineMeshComponent.prototype.SetEndRollDegrees = function (EndRollDegrees, bUpdateMesh = true) { return fnprepatch_576.call(this, EndRollDegrees, bUpdateMesh) }; } catch (e) {};
try { let fnprepatch_577 = SplineMeshComponent.prototype.SetEndRoll;SplineMeshComponent.prototype.SetEndRoll = function (EndRoll, bUpdateMesh = true) { return fnprepatch_577.call(this, EndRoll, bUpdateMesh) }; } catch (e) {};
try { let fnprepatch_578 = SplineMeshComponent.prototype.SetEndPosition;SplineMeshComponent.prototype.SetEndPosition = function (EndPos, bUpdateMesh = true) { return fnprepatch_578.call(this, EndPos, bUpdateMesh) }; } catch (e) {};
try { let fnprepatch_579 = SplineMeshComponent.prototype.SetEndOffset;SplineMeshComponent.prototype.SetEndOffset = function (EndOffset, bUpdateMesh = true) { return fnprepatch_579.call(this, EndOffset, bUpdateMesh) }; } catch (e) {};
try { let fnprepatch_580 = SplineMeshComponent.prototype.SetBoundaryMin;SplineMeshComponent.prototype.SetBoundaryMin = function (InBoundaryMin, bUpdateMesh = true) { return fnprepatch_580.call(this, InBoundaryMin, bUpdateMesh) }; } catch (e) {};
try { let fnprepatch_581 = SplineMeshComponent.prototype.SetBoundaryMax;SplineMeshComponent.prototype.SetBoundaryMax = function (InBoundaryMax, bUpdateMesh = true) { return fnprepatch_581.call(this, InBoundaryMax, bUpdateMesh) }; } catch (e) {};
try { SplineMeshComponent.prototype.SetStartRollRadians = SplineMeshComponent.prototype.SetStartRoll; } catch (e) {};
try { SplineMeshComponent.prototype.SetEndRollRadians = SplineMeshComponent.prototype.SetEndRoll; } catch (e) {};
try { VolumetricCloudComponent.prototype.SetUsePerSampleAtmosphericLightTransmittance = VolumetricCloudComponent.prototype.SetbUsePerSampleAtmosphericLightTransmittance; } catch (e) {};
try { let fnprepatch_582 = DataTableFunctionLibrary.prototype.FillDataTableFromJSONFile;DataTableFunctionLibrary.prototype.FillDataTableFromJSONFile = function (DataTable, JSONFilePath, ImportRowStruct = undefined) { return fnprepatch_582.call(this, DataTable, JSONFilePath, ImportRowStruct) }; } catch (e) {};
try { DebugCameraController.prototype.OnDeactivate = DebugCameraController.prototype.ReceiveOnDeactivate; } catch (e) {};
try { DebugCameraController.prototype.OnActorSelected = DebugCameraController.prototype.ReceiveOnActorSelected; } catch (e) {};
try { DebugCameraController.prototype.OnActivate = DebugCameraController.prototype.ReceiveOnActivate; } catch (e) {};
try { let fnprepatch_583 = HUD.prototype.ShowDebug;HUD.prototype.ShowDebug = function (DebugType = "None") { return fnprepatch_583.call(this, DebugType) }; } catch (e) {};
try { let fnprepatch_584 = HUD.prototype.Project;HUD.prototype.Project = function (Location, bClampToZeroPlane = true) { return fnprepatch_584.call(this, Location, bClampToZeroPlane) }; } catch (e) {};
try { let fnprepatch_585 = HUD.prototype.GetTextSize;HUD.prototype.GetTextSize = function (Text, OutWidth, OutHeight, Font = undefined, Scale = 1) { return fnprepatch_585.call(this, Text, OutWidth, OutHeight, Font, Scale) }; } catch (e) {};
try { let fnprepatch_586 = HUD.prototype.GetActorsInSelectionRectangle;HUD.prototype.GetActorsInSelectionRectangle = function (ClassFilter, FirstPoint, SecondPoint, OutActors, bIncludeNonCollidingComponents = true, bActorMustBeFullyEnclosed = false) { return fnprepatch_586.call(this, ClassFilter, FirstPoint, SecondPoint, OutActors, bIncludeNonCollidingComponents, bActorMustBeFullyEnclosed) }; } catch (e) {};
try { let fnprepatch_587 = HUD.prototype.DrawTextureSimple;HUD.prototype.DrawTextureSimple = function (Texture, ScreenX, ScreenY, Scale = 1, bScalePosition = false) { return fnprepatch_587.call(this, Texture, ScreenX, ScreenY, Scale, bScalePosition) }; } catch (e) {};
try { let fnprepatch_588 = HUD.prototype.DrawTexture;HUD.prototype.DrawTexture = function (Texture, ScreenX, ScreenY, ScreenW, ScreenH, TextureU, TextureV, TextureUWidth, TextureVHeight, TintColor = {"R":1,"G":1,"B":1,"A":1}, BlendMode = "BLEND_Translucent", Scale = 1, bScalePosition = false, Rotation = 0, RotPivot) { return fnprepatch_588.call(this, Texture, ScreenX, ScreenY, ScreenW, ScreenH, TextureU, TextureV, TextureUWidth, TextureVHeight, TintColor, BlendMode, Scale, bScalePosition, Rotation, RotPivot) }; } catch (e) {};
try { let fnprepatch_589 = HUD.prototype.DrawText;HUD.prototype.DrawText = function (Text, TextColor, ScreenX, ScreenY, Font = undefined, Scale = 1, bScalePosition = false) { return fnprepatch_589.call(this, Text, TextColor, ScreenX, ScreenY, Font, Scale, bScalePosition) }; } catch (e) {};
try { let fnprepatch_590 = HUD.prototype.DrawMaterialTriangle;HUD.prototype.DrawMaterialTriangle = function (Material, V0_Pos, V1_Pos, V2_Pos, V0_UV, V1_UV, V2_UV, V0_Color = {"R":1,"G":1,"B":1,"A":1}, V1_Color = {"R":1,"G":1,"B":1,"A":1}, V2_Color = {"R":1,"G":1,"B":1,"A":1}) { return fnprepatch_590.call(this, Material, V0_Pos, V1_Pos, V2_Pos, V0_UV, V1_UV, V2_UV, V0_Color, V1_Color, V2_Color) }; } catch (e) {};
try { let fnprepatch_591 = HUD.prototype.DrawMaterialSimple;HUD.prototype.DrawMaterialSimple = function (Material, ScreenX, ScreenY, ScreenW, ScreenH, Scale = 1, bScalePosition = false) { return fnprepatch_591.call(this, Material, ScreenX, ScreenY, ScreenW, ScreenH, Scale, bScalePosition) }; } catch (e) {};
try { let fnprepatch_592 = HUD.prototype.DrawMaterial;HUD.prototype.DrawMaterial = function (Material, ScreenX, ScreenY, ScreenW, ScreenH, MaterialU, MaterialV, MaterialUWidth, MaterialVHeight, Scale = 1, bScalePosition = false, Rotation = 0, RotPivot) { return fnprepatch_592.call(this, Material, ScreenX, ScreenY, ScreenW, ScreenH, MaterialU, MaterialV, MaterialUWidth, MaterialVHeight, Scale, bScalePosition, Rotation, RotPivot) }; } catch (e) {};
try { let fnprepatch_593 = HUD.prototype.DrawLine;HUD.prototype.DrawLine = function (StartScreenX, StartScreenY, EndScreenX, EndScreenY, LineColor, LineThickness = 0) { return fnprepatch_593.call(this, StartScreenX, StartScreenY, EndScreenX, EndScreenY, LineColor, LineThickness) }; } catch (e) {};
try { let fnprepatch_594 = HUD.prototype.AddHitBox;HUD.prototype.AddHitBox = function (Position, Size, InName, bConsumesInput, Priority = 0) { return fnprepatch_594.call(this, Position, Size, InName, bConsumesInput, Priority) }; } catch (e) {};
try { HUD.prototype.HitBoxReleased = HUD.prototype.ReceiveHitBoxRelease; } catch (e) {};
try { HUD.prototype.HitBoxEndCursorOver = HUD.prototype.ReceiveHitBoxEndCursorOver; } catch (e) {};
try { HUD.prototype.HitBoxClicked = HUD.prototype.ReceiveHitBoxClick; } catch (e) {};
try { HUD.prototype.HitBoxBeginCursorOver = HUD.prototype.ReceiveHitBoxBeginCursorOver; } catch (e) {};
try { let fnprepatch_595 = EngineElementsLibrary.prototype.K2_AcquireEditorSMInstanceElementHandle;EngineElementsLibrary.prototype.K2_AcquireEditorSMInstanceElementHandle = function (ISMComponent, InstanceIndex, bAllowCreate = true) { return fnprepatch_595.call(this, ISMComponent, InstanceIndex, bAllowCreate) }; } catch (e) {};
try { let fnprepatch_596 = EngineElementsLibrary.prototype.K2_AcquireEditorObjectElementHandle;EngineElementsLibrary.prototype.K2_AcquireEditorObjectElementHandle = function (Object, bAllowCreate = true) { return fnprepatch_596.call(this, Object, bAllowCreate) }; } catch (e) {};
try { let fnprepatch_597 = EngineElementsLibrary.prototype.K2_AcquireEditorComponentElementHandle;EngineElementsLibrary.prototype.K2_AcquireEditorComponentElementHandle = function (Component, bAllowCreate = true) { return fnprepatch_597.call(this, Component, bAllowCreate) }; } catch (e) {};
try { let fnprepatch_598 = EngineElementsLibrary.prototype.K2_AcquireEditorActorElementHandle;EngineElementsLibrary.prototype.K2_AcquireEditorActorElementHandle = function (Actor, bAllowCreate = true) { return fnprepatch_598.call(this, Actor, bAllowCreate) }; } catch (e) {};
try { EngineElementsLibrary.prototype.AcquireEditorSMInstanceElementHandle = EngineElementsLibrary.prototype.K2_AcquireEditorSMInstanceElementHandle; } catch (e) {};
try { EngineElementsLibrary.AcquireEditorSMInstanceElementHandle = EngineElementsLibrary.K2_AcquireEditorSMInstanceElementHandle; } catch (e) {};
try { EngineElementsLibrary.prototype.AcquireEditorObjectElementHandle = EngineElementsLibrary.prototype.K2_AcquireEditorObjectElementHandle; } catch (e) {};
try { EngineElementsLibrary.AcquireEditorObjectElementHandle = EngineElementsLibrary.K2_AcquireEditorObjectElementHandle; } catch (e) {};
try { EngineElementsLibrary.prototype.AcquireEditorComponentElementHandle = EngineElementsLibrary.prototype.K2_AcquireEditorComponentElementHandle; } catch (e) {};
try { EngineElementsLibrary.AcquireEditorComponentElementHandle = EngineElementsLibrary.K2_AcquireEditorComponentElementHandle; } catch (e) {};
try { EngineElementsLibrary.prototype.AcquireEditorActorElementHandle = EngineElementsLibrary.prototype.K2_AcquireEditorActorElementHandle; } catch (e) {};
try { EngineElementsLibrary.AcquireEditorActorElementHandle = EngineElementsLibrary.K2_AcquireEditorActorElementHandle; } catch (e) {};
try { TypedElementCommonActions.prototype.PasteNormalizedElements = TypedElementCommonActions.prototype.K2_PasteNormalizedElements; } catch (e) {};
try { TypedElementCommonActions.prototype.PasteElements = TypedElementCommonActions.prototype.K2_PasteElements; } catch (e) {};
try { TypedElementCommonActions.prototype.DuplicateSelectedElements = TypedElementCommonActions.prototype.K2_DuplicateSelectedElements; } catch (e) {};
try { let fnprepatch_599 = TypedElementWorldInterface.prototype.PromoteElement;TypedElementWorldInterface.prototype.PromoteElement = function (InElementHandle, OverrideWorld = undefined) { return fnprepatch_599.call(this, InElementHandle, OverrideWorld) }; } catch (e) {};
try { let fnprepatch_600 = ViewportStatsSubsystem.prototype.AddTimedDisplay;ViewportStatsSubsystem.prototype.AddTimedDisplay = function (Text, Color = {"R":1,"G":1,"B":1,"A":1}, Duration = 0, DisplayOffset) { return fnprepatch_600.call(this, Text, Color, Duration, DisplayOffset) }; } catch (e) {};
try { GameInstance.prototype.Shutdown = GameInstance.prototype.ReceiveShutdown; } catch (e) {};
try { GameInstance.prototype.Init = GameInstance.prototype.ReceiveInit; } catch (e) {};
try { GameInstance.prototype.TravelError = GameInstance.prototype.HandleTravelError; } catch (e) {};
try { GameInstance.prototype.NetworkError = GameInstance.prototype.HandleNetworkError; } catch (e) {};
try { GameModeBase.prototype.OnPostLogin = GameModeBase.prototype.K2_PostLogin; } catch (e) {};
try { GameModeBase.prototype.OnSwapPlayerControllers = GameModeBase.prototype.K2_OnSwapPlayerControllers; } catch (e) {};
try { GameModeBase.prototype.OnRestartPlayer = GameModeBase.prototype.K2_OnRestartPlayer; } catch (e) {};
try { GameModeBase.prototype.OnLogout = GameModeBase.prototype.K2_OnLogout; } catch (e) {};
try { GameModeBase.prototype.OnChangeName = GameModeBase.prototype.K2_OnChangeName; } catch (e) {};
try { GameModeBase.prototype.FindPlayerStart = GameModeBase.prototype.K2_FindPlayerStart; } catch (e) {};
try { GameMode.prototype.OnSetMatchState = GameMode.prototype.K2_OnSetMatchState; } catch (e) {};
try { let fnprepatch_601 = GameplayStatics.prototype.SuggestProjectileVelocity_MovingTarget;GameplayStatics.prototype.SuggestProjectileVelocity_MovingTarget = function (WorldContextObject, OutLaunchVelocity, ProjectileStartLocation, TargetActor, TargetLocationOffset, GravityZOverride = 0, TimeToTarget = 1, DrawDebugType = "None", DrawDebugTime = 3, DrawDebugColor = {"R":1,"G":0,"B":0,"A":1}) { return fnprepatch_601.call(this, WorldContextObject, OutLaunchVelocity, ProjectileStartLocation, TargetActor, TargetLocationOffset, GravityZOverride, TimeToTarget, DrawDebugType, DrawDebugTime, DrawDebugColor) }; } catch (e) {};
try { let fnprepatch_602 = GameplayStatics.prototype.SuggestProjectileVelocity_CustomArc;GameplayStatics.prototype.SuggestProjectileVelocity_CustomArc = function (WorldContextObject, OutLaunchVelocity, StartPos, EndPos, OverrideGravityZ = 0, ArcParam = 0.5) { return fnprepatch_602.call(this, WorldContextObject, OutLaunchVelocity, StartPos, EndPos, OverrideGravityZ, ArcParam) }; } catch (e) {};
try { let fnprepatch_603 = GameplayStatics.prototype.SpawnSoundAttached;GameplayStatics.prototype.SpawnSoundAttached = function (Sound, AttachToComponent, AttachPointName = "None", Location, Rotation, LocationType = "KeepRelativeOffset", bStopWhenAttachedToDestroyed = false, VolumeMultiplier = 1, PitchMultiplier = 1, StartTime = 0, AttenuationSettings = undefined, ConcurrencySettings = undefined, bAutoDestroy = true) { return fnprepatch_603.call(this, Sound, AttachToComponent, AttachPointName, Location, Rotation, LocationType, bStopWhenAttachedToDestroyed, VolumeMultiplier, PitchMultiplier, StartTime, AttenuationSettings, ConcurrencySettings, bAutoDestroy) }; } catch (e) {};
try { let fnprepatch_604 = GameplayStatics.prototype.SpawnSoundAtLocation;GameplayStatics.prototype.SpawnSoundAtLocation = function (WorldContextObject, Sound, Location, Rotation, VolumeMultiplier = 1, PitchMultiplier = 1, StartTime = 0, AttenuationSettings = undefined, ConcurrencySettings = undefined, bAutoDestroy = true) { return fnprepatch_604.call(this, WorldContextObject, Sound, Location, Rotation, VolumeMultiplier, PitchMultiplier, StartTime, AttenuationSettings, ConcurrencySettings, bAutoDestroy) }; } catch (e) {};
try { let fnprepatch_605 = GameplayStatics.prototype.SpawnSound2D;GameplayStatics.prototype.SpawnSound2D = function (WorldContextObject, Sound, VolumeMultiplier = 1, PitchMultiplier = 1, StartTime = 0, ConcurrencySettings = undefined, bPersistAcrossLevelTransition = false, bAutoDestroy = true) { return fnprepatch_605.call(this, WorldContextObject, Sound, VolumeMultiplier, PitchMultiplier, StartTime, ConcurrencySettings, bPersistAcrossLevelTransition, bAutoDestroy) }; } catch (e) {};
try { let fnprepatch_606 = GameplayStatics.prototype.SpawnForceFeedbackAttached;GameplayStatics.prototype.SpawnForceFeedbackAttached = function (ForceFeedbackEffect, AttachToComponent, AttachPointName = "None", Location, Rotation, LocationType = "KeepRelativeOffset", bStopWhenAttachedToDestroyed = false, bLooping = false, IntensityMultiplier = 1, StartTime = 0, AttenuationSettings = undefined, bAutoDestroy = true) { return fnprepatch_606.call(this, ForceFeedbackEffect, AttachToComponent, AttachPointName, Location, Rotation, LocationType, bStopWhenAttachedToDestroyed, bLooping, IntensityMultiplier, StartTime, AttenuationSettings, bAutoDestroy) }; } catch (e) {};
try { let fnprepatch_607 = GameplayStatics.prototype.SpawnForceFeedbackAtLocation;GameplayStatics.prototype.SpawnForceFeedbackAtLocation = function (WorldContextObject, ForceFeedbackEffect, Location, Rotation, bLooping = false, IntensityMultiplier = 1, StartTime = 0, AttenuationSettings = undefined, bAutoDestroy = true) { return fnprepatch_607.call(this, WorldContextObject, ForceFeedbackEffect, Location, Rotation, bLooping, IntensityMultiplier, StartTime, AttenuationSettings, bAutoDestroy) }; } catch (e) {};
try { let fnprepatch_608 = GameplayStatics.prototype.SpawnEmitterAttached;GameplayStatics.prototype.SpawnEmitterAttached = function (EmitterTemplate, AttachToComponent, AttachPointName = "None", Location, Rotation, Scale, LocationType = "KeepRelativeOffset", bAutoDestroy = true, PoolingMethod = "None", bAutoActivate = true) { return fnprepatch_608.call(this, EmitterTemplate, AttachToComponent, AttachPointName, Location, Rotation, Scale, LocationType, bAutoDestroy, PoolingMethod, bAutoActivate) }; } catch (e) {};
try { let fnprepatch_609 = GameplayStatics.prototype.SpawnEmitterAtLocation;GameplayStatics.prototype.SpawnEmitterAtLocation = function (WorldContextObject, EmitterTemplate, Location, Rotation, Scale, bAutoDestroy = true, PoolingMethod = "None", bAutoActivateSystem = true) { return fnprepatch_609.call(this, WorldContextObject, EmitterTemplate, Location, Rotation, Scale, bAutoDestroy, PoolingMethod, bAutoActivateSystem) }; } catch (e) {};
try { let fnprepatch_610 = GameplayStatics.prototype.SpawnDialogueAttached;GameplayStatics.prototype.SpawnDialogueAttached = function (Dialogue, Context, AttachToComponent, AttachPointName = "None", Location, Rotation, LocationType = "KeepRelativeOffset", bStopWhenAttachedToDestroyed = false, VolumeMultiplier = 1, PitchMultiplier = 1, StartTime = 0, AttenuationSettings = undefined, bAutoDestroy = true) { return fnprepatch_610.call(this, Dialogue, Context, AttachToComponent, AttachPointName, Location, Rotation, LocationType, bStopWhenAttachedToDestroyed, VolumeMultiplier, PitchMultiplier, StartTime, AttenuationSettings, bAutoDestroy) }; } catch (e) {};
try { let fnprepatch_611 = GameplayStatics.prototype.SpawnDialogueAtLocation;GameplayStatics.prototype.SpawnDialogueAtLocation = function (WorldContextObject, Dialogue, Context, Location, Rotation, VolumeMultiplier = 1, PitchMultiplier = 1, StartTime = 0, AttenuationSettings = undefined, bAutoDestroy = true) { return fnprepatch_611.call(this, WorldContextObject, Dialogue, Context, Location, Rotation, VolumeMultiplier, PitchMultiplier, StartTime, AttenuationSettings, bAutoDestroy) }; } catch (e) {};
try { let fnprepatch_612 = GameplayStatics.prototype.SpawnDialogue2D;GameplayStatics.prototype.SpawnDialogue2D = function (WorldContextObject, Dialogue, Context, VolumeMultiplier = 1, PitchMultiplier = 1, StartTime = 0, bAutoDestroy = true) { return fnprepatch_612.call(this, WorldContextObject, Dialogue, Context, VolumeMultiplier, PitchMultiplier, StartTime, bAutoDestroy) }; } catch (e) {};
try { let fnprepatch_613 = GameplayStatics.prototype.SpawnDecalAttached;GameplayStatics.prototype.SpawnDecalAttached = function (DecalMaterial, DecalSize, AttachToComponent, AttachPointName = "None", Location, Rotation, LocationType = "KeepRelativeOffset", LifeSpan = 0) { return fnprepatch_613.call(this, DecalMaterial, DecalSize, AttachToComponent, AttachPointName, Location, Rotation, LocationType, LifeSpan) }; } catch (e) {};
try { let fnprepatch_614 = GameplayStatics.prototype.SpawnDecalAtLocation;GameplayStatics.prototype.SpawnDecalAtLocation = function (WorldContextObject, DecalMaterial, DecalSize, Location, Rotation, LifeSpan = 0) { return fnprepatch_614.call(this, WorldContextObject, DecalMaterial, DecalSize, Location, Rotation, LifeSpan) }; } catch (e) {};
try { let fnprepatch_615 = GameplayStatics.prototype.SetSoundMixClassOverride;GameplayStatics.prototype.SetSoundMixClassOverride = function (WorldContextObject, InSoundMixModifier, InSoundClass, Volume = 1, Pitch = 1, FadeInTime = 1, bApplyToChildren = true) { return fnprepatch_615.call(this, WorldContextObject, InSoundMixModifier, InSoundClass, Volume, Pitch, FadeInTime, bApplyToChildren) }; } catch (e) {};
try { let fnprepatch_616 = GameplayStatics.prototype.SetSoundClassDistanceScale;GameplayStatics.prototype.SetSoundClassDistanceScale = function (WorldContextObject, SoundClass, DistanceAttenuationScale, TimeSec = 0) { return fnprepatch_616.call(this, WorldContextObject, SoundClass, DistanceAttenuationScale, TimeSec) }; } catch (e) {};
try { let fnprepatch_617 = GameplayStatics.prototype.SetGlobalListenerFocusParameters;GameplayStatics.prototype.SetGlobalListenerFocusParameters = function (WorldContextObject, FocusAzimuthScale = 1, NonFocusAzimuthScale = 1, FocusDistanceScale = 1, NonFocusDistanceScale = 1, FocusVolumeScale = 1, NonFocusVolumeScale = 1, FocusPriorityScale = 1, NonFocusPriorityScale = 1) { return fnprepatch_617.call(this, WorldContextObject, FocusAzimuthScale, NonFocusAzimuthScale, FocusDistanceScale, NonFocusDistanceScale, FocusVolumeScale, NonFocusVolumeScale, FocusPriorityScale, NonFocusPriorityScale) }; } catch (e) {};
try { let fnprepatch_618 = GameplayStatics.prototype.ProjectWorldToScreen;GameplayStatics.prototype.ProjectWorldToScreen = function (Player, WorldPosition, ScreenPosition, bPlayerViewportRelative = false) { return fnprepatch_618.call(this, Player, WorldPosition, ScreenPosition, bPlayerViewportRelative) }; } catch (e) {};
try { let fnprepatch_619 = GameplayStatics.prototype.PlayWorldCameraShake;GameplayStatics.prototype.PlayWorldCameraShake = function (WorldContextObject, Shake, Epicenter, InnerRadius, OuterRadius, Falloff = 1, bOrientShakeTowardsEpicenter = false) { return fnprepatch_619.call(this, WorldContextObject, Shake, Epicenter, InnerRadius, OuterRadius, Falloff, bOrientShakeTowardsEpicenter) }; } catch (e) {};
try { let fnprepatch_620 = GameplayStatics.prototype.PlaySoundAtLocation;GameplayStatics.prototype.PlaySoundAtLocation = function (WorldContextObject, Sound, Location, Rotation, VolumeMultiplier = 1, PitchMultiplier = 1, StartTime = 0, AttenuationSettings = undefined, ConcurrencySettings = undefined, OwningActor = undefined, InitialParams = undefined) { return fnprepatch_620.call(this, WorldContextObject, Sound, Location, Rotation, VolumeMultiplier, PitchMultiplier, StartTime, AttenuationSettings, ConcurrencySettings, OwningActor, InitialParams) }; } catch (e) {};
try { let fnprepatch_621 = GameplayStatics.prototype.PlaySound2D;GameplayStatics.prototype.PlaySound2D = function (WorldContextObject, Sound, VolumeMultiplier = 1, PitchMultiplier = 1, StartTime = 0, ConcurrencySettings = undefined, OwningActor = undefined, bIsUISound = true) { return fnprepatch_621.call(this, WorldContextObject, Sound, VolumeMultiplier, PitchMultiplier, StartTime, ConcurrencySettings, OwningActor, bIsUISound) }; } catch (e) {};
try { let fnprepatch_622 = GameplayStatics.prototype.PlayDialogueAtLocation;GameplayStatics.prototype.PlayDialogueAtLocation = function (WorldContextObject, Dialogue, Context, Location, Rotation, VolumeMultiplier = 1, PitchMultiplier = 1, StartTime = 0, AttenuationSettings = undefined) { return fnprepatch_622.call(this, WorldContextObject, Dialogue, Context, Location, Rotation, VolumeMultiplier, PitchMultiplier, StartTime, AttenuationSettings) }; } catch (e) {};
try { let fnprepatch_623 = GameplayStatics.prototype.PlayDialogue2D;GameplayStatics.prototype.PlayDialogue2D = function (WorldContextObject, Dialogue, Context, VolumeMultiplier = 1, PitchMultiplier = 1, StartTime = 0) { return fnprepatch_623.call(this, WorldContextObject, Dialogue, Context, VolumeMultiplier, PitchMultiplier, StartTime) }; } catch (e) {};
try { let fnprepatch_624 = GameplayStatics.prototype.OpenLevelBySoftObjectPtr;GameplayStatics.prototype.OpenLevelBySoftObjectPtr = function (WorldContextObject, Level, bAbsolute = true, Options) { return fnprepatch_624.call(this, WorldContextObject, Level, bAbsolute, Options) }; } catch (e) {};
try { let fnprepatch_625 = GameplayStatics.prototype.OpenLevel;GameplayStatics.prototype.OpenLevel = function (WorldContextObject, LevelName, bAbsolute = true, Options) { return fnprepatch_625.call(this, WorldContextObject, LevelName, bAbsolute, Options) }; } catch (e) {};
try { let fnprepatch_626 = GameplayStatics.prototype.GetCurrentLevelName;GameplayStatics.prototype.GetCurrentLevelName = function (WorldContextObject, bRemovePrefixString = true) { return fnprepatch_626.call(this, WorldContextObject, bRemovePrefixString) }; } catch (e) {};
try { let fnprepatch_627 = GameplayStatics.prototype.FinishSpawningActor;GameplayStatics.prototype.FinishSpawningActor = function (Actor, SpawnTransform, TransformScaleMethod = "OverrideRootScale") { return fnprepatch_627.call(this, Actor, SpawnTransform, TransformScaleMethod) }; } catch (e) {};
try { let fnprepatch_628 = GameplayStatics.prototype.CreateSound2D;GameplayStatics.prototype.CreateSound2D = function (WorldContextObject, Sound, VolumeMultiplier = 1, PitchMultiplier = 1, StartTime = 0, ConcurrencySettings = undefined, bPersistAcrossLevelTransition = false, bAutoDestroy = true) { return fnprepatch_628.call(this, WorldContextObject, Sound, VolumeMultiplier, PitchMultiplier, StartTime, ConcurrencySettings, bPersistAcrossLevelTransition, bAutoDestroy) }; } catch (e) {};
try { let fnprepatch_629 = GameplayStatics.prototype.CreatePlayerFromPlatformUser;GameplayStatics.prototype.CreatePlayerFromPlatformUser = function (WorldContextObject, UserId, bSpawnPlayerController = true) { return fnprepatch_629.call(this, WorldContextObject, UserId, bSpawnPlayerController) }; } catch (e) {};
try { let fnprepatch_630 = GameplayStatics.prototype.CreatePlayer;GameplayStatics.prototype.CreatePlayer = function (WorldContextObject, ControllerId = -1, bSpawnPlayerController = true) { return fnprepatch_630.call(this, WorldContextObject, ControllerId, bSpawnPlayerController) }; } catch (e) {};
try { let fnprepatch_631 = GameplayStatics.prototype.ClearSoundMixClassOverride;GameplayStatics.prototype.ClearSoundMixClassOverride = function (WorldContextObject, InSoundMixModifier, InSoundClass, FadeOutTime = 1) { return fnprepatch_631.call(this, WorldContextObject, InSoundMixModifier, InSoundClass, FadeOutTime) }; } catch (e) {};
try { let fnprepatch_632 = GameplayStatics.prototype.Blueprint_PredictProjectilePath_ByTraceChannel;GameplayStatics.prototype.Blueprint_PredictProjectilePath_ByTraceChannel = function (WorldContextObject, OutHit, OutPathPositions, OutLastTraceDestination, StartPos, LaunchVelocity, bTracePath, ProjectileRadius, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, DrawDebugTime, SimFrequency = 15, MaxSimTime = 2, OverrideGravityZ = 0) { return fnprepatch_632.call(this, WorldContextObject, OutHit, OutPathPositions, OutLastTraceDestination, StartPos, LaunchVelocity, bTracePath, ProjectileRadius, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, DrawDebugTime, SimFrequency, MaxSimTime, OverrideGravityZ) }; } catch (e) {};
try { let fnprepatch_633 = GameplayStatics.prototype.Blueprint_PredictProjectilePath_ByObjectType;GameplayStatics.prototype.Blueprint_PredictProjectilePath_ByObjectType = function (WorldContextObject, OutHit, OutPathPositions, OutLastTraceDestination, StartPos, LaunchVelocity, bTracePath, ProjectileRadius, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, DrawDebugTime, SimFrequency = 15, MaxSimTime = 2, OverrideGravityZ = 0) { return fnprepatch_633.call(this, WorldContextObject, OutHit, OutPathPositions, OutLastTraceDestination, StartPos, LaunchVelocity, bTracePath, ProjectileRadius, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, DrawDebugTime, SimFrequency, MaxSimTime, OverrideGravityZ) }; } catch (e) {};
try { let fnprepatch_634 = GameplayStatics.prototype.BeginDeferredActorSpawnFromClass;GameplayStatics.prototype.BeginDeferredActorSpawnFromClass = function (WorldContextObject, ActorClass, SpawnTransform, CollisionHandlingOverride = "Undefined", Owner = undefined, TransformScaleMethod = "OverrideRootScale") { return fnprepatch_634.call(this, WorldContextObject, ActorClass, SpawnTransform, CollisionHandlingOverride, Owner, TransformScaleMethod) }; } catch (e) {};
try { let fnprepatch_635 = GameplayStatics.prototype.ApplyRadialDamageWithFalloff;GameplayStatics.prototype.ApplyRadialDamageWithFalloff = function (WorldContextObject, BaseDamage, MinimumDamage, Origin, DamageInnerRadius, DamageOuterRadius, DamageFalloff, DamageTypeClass, IgnoreActors, DamageCauser = undefined, InstigatedByController = undefined, DamagePreventionChannel = "ECC_Visibility") { return fnprepatch_635.call(this, WorldContextObject, BaseDamage, MinimumDamage, Origin, DamageInnerRadius, DamageOuterRadius, DamageFalloff, DamageTypeClass, IgnoreActors, DamageCauser, InstigatedByController, DamagePreventionChannel) }; } catch (e) {};
try { let fnprepatch_636 = GameplayStatics.prototype.ApplyRadialDamage;GameplayStatics.prototype.ApplyRadialDamage = function (WorldContextObject, BaseDamage, Origin, DamageRadius, DamageTypeClass, IgnoreActors, DamageCauser = undefined, InstigatedByController = undefined, bDoFullDamage = false, DamagePreventionChannel = "ECC_Visibility") { return fnprepatch_636.call(this, WorldContextObject, BaseDamage, Origin, DamageRadius, DamageTypeClass, IgnoreActors, DamageCauser, InstigatedByController, bDoFullDamage, DamagePreventionChannel) }; } catch (e) {};
try { let fnprepatch_637 = GameplayStatics.prototype.ActivateReverbEffect;GameplayStatics.prototype.ActivateReverbEffect = function (WorldContextObject, ReverbEffect, TagName, Priority = 0, Volume = 0.5, FadeTime = 2) { return fnprepatch_637.call(this, WorldContextObject, ReverbEffect, TagName, Priority, Volume, FadeTime) }; } catch (e) {};
try { GameplayStatics.prototype.UnloadStreamLevel = GameplayStatics.prototype.UnloadStreamLevelBySoftObjectPtr; } catch (e) {};
try { GameplayStatics.UnloadStreamLevel = GameplayStatics.UnloadStreamLevelBySoftObjectPtr; } catch (e) {};
try { GameplayStatics.prototype.SuggestProjectileVelocityMovingTarget = GameplayStatics.prototype.SuggestProjectileVelocity_MovingTarget; } catch (e) {};
try { GameplayStatics.SuggestProjectileVelocityMovingTarget = GameplayStatics.SuggestProjectileVelocity_MovingTarget; } catch (e) {};
try { GameplayStatics.prototype.SuggestProjectileVelocityCustomArc = GameplayStatics.prototype.SuggestProjectileVelocity_CustomArc; } catch (e) {};
try { GameplayStatics.SuggestProjectileVelocityCustomArc = GameplayStatics.SuggestProjectileVelocity_CustomArc; } catch (e) {};
try { GameplayStatics.prototype.SetLocalPlayerControllerPlatformUserId = GameplayStatics.prototype.SetPlayerPlatformUserId; } catch (e) {};
try { GameplayStatics.SetLocalPlayerControllerPlatformUserId = GameplayStatics.SetPlayerPlatformUserId; } catch (e) {};
try { GameplayStatics.prototype.SetLocalPlayerControllerID = GameplayStatics.prototype.SetPlayerControllerID; } catch (e) {};
try { GameplayStatics.SetLocalPlayerControllerID = GameplayStatics.SetPlayerControllerID; } catch (e) {};
try { GameplayStatics.prototype.RemoveLocalPlayer = GameplayStatics.prototype.RemovePlayer; } catch (e) {};
try { GameplayStatics.RemoveLocalPlayer = GameplayStatics.RemovePlayer; } catch (e) {};
try { GameplayStatics.prototype.OpenLevel = GameplayStatics.prototype.OpenLevelBySoftObjectPtr; } catch (e) {};
try { GameplayStatics.OpenLevel = GameplayStatics.OpenLevelBySoftObjectPtr; } catch (e) {};
try { GameplayStatics.prototype.IsA = GameplayStatics.prototype.ObjectIsA; } catch (e) {};
try { GameplayStatics.IsA = GameplayStatics.ObjectIsA; } catch (e) {};
try { GameplayStatics.prototype.LoadStreamLevel = GameplayStatics.prototype.LoadStreamLevelBySoftObjectPtr; } catch (e) {};
try { GameplayStatics.LoadStreamLevel = GameplayStatics.LoadStreamLevelBySoftObjectPtr; } catch (e) {};
try { GameplayStatics.prototype.GetLocalPlayerControllerID = GameplayStatics.prototype.GetPlayerControllerID; } catch (e) {};
try { GameplayStatics.GetLocalPlayerControllerID = GameplayStatics.GetPlayerControllerID; } catch (e) {};
try { GameplayStatics.prototype.GetLocalPlayerControllerFromPlatformUser = GameplayStatics.prototype.GetPlayerControllerFromPlatformUser; } catch (e) {};
try { GameplayStatics.GetLocalPlayerControllerFromPlatformUser = GameplayStatics.GetPlayerControllerFromPlatformUser; } catch (e) {};
try { GameplayStatics.prototype.GetLocalPlayerControllerFromID = GameplayStatics.prototype.GetPlayerControllerFromID; } catch (e) {};
try { GameplayStatics.GetLocalPlayerControllerFromID = GameplayStatics.GetPlayerControllerFromID; } catch (e) {};
try { GameplayStatics.prototype.GetClass = GameplayStatics.prototype.GetObjectClass; } catch (e) {};
try { GameplayStatics.GetClass = GameplayStatics.GetObjectClass; } catch (e) {};
try { GameplayStatics.prototype.CreateLocalPlayerForPlatformUser = GameplayStatics.prototype.CreatePlayerFromPlatformUser; } catch (e) {};
try { GameplayStatics.CreateLocalPlayerForPlatformUser = GameplayStatics.CreatePlayerFromPlatformUser; } catch (e) {};
try { GameplayStatics.prototype.CreateLocalPlayer = GameplayStatics.prototype.CreatePlayer; } catch (e) {};
try { GameplayStatics.CreateLocalPlayer = GameplayStatics.CreatePlayer; } catch (e) {};
try { GameplayStatics.prototype.SuggestProjectileVelocity = GameplayStatics.prototype.BlueprintSuggestProjectileVelocity; } catch (e) {};
try { GameplayStatics.SuggestProjectileVelocity = GameplayStatics.BlueprintSuggestProjectileVelocity; } catch (e) {};
try { GameplayStatics.prototype.PredictProjectilePathByTraceChannel = GameplayStatics.prototype.Blueprint_PredictProjectilePath_ByTraceChannel; } catch (e) {};
try { GameplayStatics.PredictProjectilePathByTraceChannel = GameplayStatics.Blueprint_PredictProjectilePath_ByTraceChannel; } catch (e) {};
try { GameplayStatics.prototype.PredictProjectilePathByObjectType = GameplayStatics.prototype.Blueprint_PredictProjectilePath_ByObjectType; } catch (e) {};
try { GameplayStatics.PredictProjectilePathByObjectType = GameplayStatics.Blueprint_PredictProjectilePath_ByObjectType; } catch (e) {};
try { GameplayStatics.prototype.PredictProjectilePath = GameplayStatics.prototype.Blueprint_PredictProjectilePath_Advanced; } catch (e) {};
try { GameplayStatics.PredictProjectilePath = GameplayStatics.Blueprint_PredictProjectilePath_Advanced; } catch (e) {};
try { let fnprepatch_638 = GameUserSettings.prototype.RunHardwareBenchmark;GameUserSettings.prototype.RunHardwareBenchmark = function (WorkScale = 10, CPUMultiplier = 1, GPUMultiplier = 1) { return fnprepatch_638.call(this, WorkScale, CPUMultiplier, GPUMultiplier) }; } catch (e) {};
try { let fnprepatch_639 = GameUserSettings.prototype.LoadSettings;GameUserSettings.prototype.LoadSettings = function (bForceReload = false) { return fnprepatch_639.call(this, bForceReload) }; } catch (e) {};
try { let fnprepatch_640 = GameUserSettings.prototype.EnableHDRDisplayOutput;GameUserSettings.prototype.EnableHDRDisplayOutput = function (bEnable, DisplayNits = 1000) { return fnprepatch_640.call(this, bEnable, DisplayNits) }; } catch (e) {};
try { GameUserSettings.prototype.SetResolutionScaleValue = GameUserSettings.prototype.SetResolutionScaleValueEx; } catch (e) {};
try { GameUserSettings.prototype.GetResolutionScaleInformation = GameUserSettings.prototype.GetResolutionScaleInformationEx; } catch (e) {};
try { InputDeviceLibrary.prototype.NotEqual = InputDeviceLibrary.prototype.NotEqual_PlatformUserId; } catch (e) {};
try { InputDeviceLibrary.NotEqual = InputDeviceLibrary.NotEqual_PlatformUserId; } catch (e) {};
try { InputDeviceLibrary.prototype.NotEqual = InputDeviceLibrary.prototype.NotEqual_InputDeviceId; } catch (e) {};
try { InputDeviceLibrary.NotEqual = InputDeviceLibrary.NotEqual_InputDeviceId; } catch (e) {};
try { InputDeviceLibrary.prototype.Equal = InputDeviceLibrary.prototype.EqualEqual_PlatformUserId; } catch (e) {};
try { InputDeviceLibrary.Equal = InputDeviceLibrary.EqualEqual_PlatformUserId; } catch (e) {};
try { InputDeviceLibrary.prototype.Equal = InputDeviceLibrary.prototype.EqualEqual_InputDeviceId; } catch (e) {};
try { InputDeviceLibrary.Equal = InputDeviceLibrary.EqualEqual_InputDeviceId; } catch (e) {};
try { KismetArrayLibrary.prototype.SwapArrayElements = KismetArrayLibrary.prototype.Array_Swap; } catch (e) {};
try { KismetArrayLibrary.SwapArrayElements = KismetArrayLibrary.Array_Swap; } catch (e) {};
try { KismetArrayLibrary.prototype.ShufflefromStream = KismetArrayLibrary.prototype.Array_ShuffleFromStream; } catch (e) {};
try { KismetArrayLibrary.ShufflefromStream = KismetArrayLibrary.Array_ShuffleFromStream; } catch (e) {};
try { KismetArrayLibrary.prototype.Shuffle = KismetArrayLibrary.prototype.Array_Shuffle; } catch (e) {};
try { KismetArrayLibrary.Shuffle = KismetArrayLibrary.Array_Shuffle; } catch (e) {};
try { KismetArrayLibrary.prototype.SetArrayElem = KismetArrayLibrary.prototype.Array_Set; } catch (e) {};
try { KismetArrayLibrary.SetArrayElem = KismetArrayLibrary.Array_Set; } catch (e) {};
try { KismetArrayLibrary.prototype.Reverse = KismetArrayLibrary.prototype.Array_Reverse; } catch (e) {};
try { KismetArrayLibrary.Reverse = KismetArrayLibrary.Array_Reverse; } catch (e) {};
try { KismetArrayLibrary.prototype.Resize = KismetArrayLibrary.prototype.Array_Resize; } catch (e) {};
try { KismetArrayLibrary.Resize = KismetArrayLibrary.Array_Resize; } catch (e) {};
try { KismetArrayLibrary.prototype.RemoveItem = KismetArrayLibrary.prototype.Array_RemoveItem; } catch (e) {};
try { KismetArrayLibrary.RemoveItem = KismetArrayLibrary.Array_RemoveItem; } catch (e) {};
try { KismetArrayLibrary.prototype.RemoveIndex = KismetArrayLibrary.prototype.Array_Remove; } catch (e) {};
try { KismetArrayLibrary.RemoveIndex = KismetArrayLibrary.Array_Remove; } catch (e) {};
try { KismetArrayLibrary.prototype.RandomArrayItemfromStream = KismetArrayLibrary.prototype.Array_RandomFromStream; } catch (e) {};
try { KismetArrayLibrary.RandomArrayItemfromStream = KismetArrayLibrary.Array_RandomFromStream; } catch (e) {};
try { KismetArrayLibrary.prototype.RandomArrayItem = KismetArrayLibrary.prototype.Array_Random; } catch (e) {};
try { KismetArrayLibrary.RandomArrayItem = KismetArrayLibrary.Array_Random; } catch (e) {};
try { KismetArrayLibrary.prototype.Length = KismetArrayLibrary.prototype.Array_Length; } catch (e) {};
try { KismetArrayLibrary.Length = KismetArrayLibrary.Array_Length; } catch (e) {};
try { KismetArrayLibrary.prototype.LastIndex = KismetArrayLibrary.prototype.Array_LastIndex; } catch (e) {};
try { KismetArrayLibrary.LastIndex = KismetArrayLibrary.Array_LastIndex; } catch (e) {};
try { KismetArrayLibrary.prototype.IsValidIndex = KismetArrayLibrary.prototype.Array_IsValidIndex; } catch (e) {};
try { KismetArrayLibrary.IsValidIndex = KismetArrayLibrary.Array_IsValidIndex; } catch (e) {};
try { KismetArrayLibrary.prototype.IsNotEmpty = KismetArrayLibrary.prototype.Array_IsNotEmpty; } catch (e) {};
try { KismetArrayLibrary.IsNotEmpty = KismetArrayLibrary.Array_IsNotEmpty; } catch (e) {};
try { KismetArrayLibrary.prototype.IsEmpty = KismetArrayLibrary.prototype.Array_IsEmpty; } catch (e) {};
try { KismetArrayLibrary.IsEmpty = KismetArrayLibrary.Array_IsEmpty; } catch (e) {};
try { KismetArrayLibrary.prototype.Insert = KismetArrayLibrary.prototype.Array_Insert; } catch (e) {};
try { KismetArrayLibrary.Insert = KismetArrayLibrary.Array_Insert; } catch (e) {};
try { KismetArrayLibrary.prototype.Identical = KismetArrayLibrary.prototype.Array_Identical; } catch (e) {};
try { KismetArrayLibrary.Identical = KismetArrayLibrary.Array_Identical; } catch (e) {};
try { KismetArrayLibrary.prototype.Get = KismetArrayLibrary.prototype.Array_Get; } catch (e) {};
try { KismetArrayLibrary.Get = KismetArrayLibrary.Array_Get; } catch (e) {};
try { KismetArrayLibrary.prototype.FindItem = KismetArrayLibrary.prototype.Array_Find; } catch (e) {};
try { KismetArrayLibrary.FindItem = KismetArrayLibrary.Array_Find; } catch (e) {};
try { KismetArrayLibrary.prototype.ContainsItem = KismetArrayLibrary.prototype.Array_Contains; } catch (e) {};
try { KismetArrayLibrary.ContainsItem = KismetArrayLibrary.Array_Contains; } catch (e) {};
try { KismetArrayLibrary.prototype.Clear = KismetArrayLibrary.prototype.Array_Clear; } catch (e) {};
try { KismetArrayLibrary.Clear = KismetArrayLibrary.Array_Clear; } catch (e) {};
try { KismetArrayLibrary.prototype.AppendArray = KismetArrayLibrary.prototype.Array_Append; } catch (e) {};
try { KismetArrayLibrary.AppendArray = KismetArrayLibrary.Array_Append; } catch (e) {};
try { KismetArrayLibrary.prototype.AddUnique = KismetArrayLibrary.prototype.Array_AddUnique; } catch (e) {};
try { KismetArrayLibrary.AddUnique = KismetArrayLibrary.Array_AddUnique; } catch (e) {};
try { KismetArrayLibrary.prototype.Add = KismetArrayLibrary.prototype.Array_Add; } catch (e) {};
try { KismetArrayLibrary.Add = KismetArrayLibrary.Array_Add; } catch (e) {};
try { KismetGuidLibrary.prototype.ParseStringtoGuid = KismetGuidLibrary.prototype.Parse_StringToGuid; } catch (e) {};
try { KismetGuidLibrary.ParseStringtoGuid = KismetGuidLibrary.Parse_StringToGuid; } catch (e) {};
try { KismetGuidLibrary.prototype.NotEqual = KismetGuidLibrary.prototype.NotEqual_GuidGuid; } catch (e) {};
try { KismetGuidLibrary.NotEqual = KismetGuidLibrary.NotEqual_GuidGuid; } catch (e) {};
try { KismetGuidLibrary.prototype.IsValidGuid = KismetGuidLibrary.prototype.IsValid_Guid; } catch (e) {};
try { KismetGuidLibrary.IsValidGuid = KismetGuidLibrary.IsValid_Guid; } catch (e) {};
try { KismetGuidLibrary.prototype.InvalidateGuid = KismetGuidLibrary.prototype.Invalidate_Guid; } catch (e) {};
try { KismetGuidLibrary.InvalidateGuid = KismetGuidLibrary.Invalidate_Guid; } catch (e) {};
try { KismetGuidLibrary.prototype.Equal = KismetGuidLibrary.prototype.EqualEqual_GuidGuid; } catch (e) {};
try { KismetGuidLibrary.Equal = KismetGuidLibrary.EqualEqual_GuidGuid; } catch (e) {};
try { KismetGuidLibrary.prototype.ToString = KismetGuidLibrary.prototype.Conv_GuidToString; } catch (e) {};
try { KismetGuidLibrary.ToString = KismetGuidLibrary.Conv_GuidToString; } catch (e) {};
try { let fnprepatch_641 = KismetInputLibrary.prototype.Key_GetDisplayName;KismetInputLibrary.prototype.Key_GetDisplayName = function (Key, bLongDisplayName = true) { return fnprepatch_641.call(this, Key, bLongDisplayName) }; } catch (e) {};
try { KismetInputLibrary.prototype.IsTouchEvent = KismetInputLibrary.prototype.PointerEvent_IsTouchEvent; } catch (e) {};
try { KismetInputLibrary.IsTouchEvent = KismetInputLibrary.PointerEvent_IsTouchEvent; } catch (e) {};
try { KismetInputLibrary.prototype.IsMouseButtonDown = KismetInputLibrary.prototype.PointerEvent_IsMouseButtonDown; } catch (e) {};
try { KismetInputLibrary.IsMouseButtonDown = KismetInputLibrary.PointerEvent_IsMouseButtonDown; } catch (e) {};
try { KismetInputLibrary.prototype.GetWheelDelta = KismetInputLibrary.prototype.PointerEvent_GetWheelDelta; } catch (e) {};
try { KismetInputLibrary.GetWheelDelta = KismetInputLibrary.PointerEvent_GetWheelDelta; } catch (e) {};
try { KismetInputLibrary.prototype.GetUserIndex = KismetInputLibrary.prototype.PointerEvent_GetUserIndex; } catch (e) {};
try { KismetInputLibrary.GetUserIndex = KismetInputLibrary.PointerEvent_GetUserIndex; } catch (e) {};
try { KismetInputLibrary.prototype.GetTouchpadIndex = KismetInputLibrary.prototype.PointerEvent_GetTouchpadIndex; } catch (e) {};
try { KismetInputLibrary.GetTouchpadIndex = KismetInputLibrary.PointerEvent_GetTouchpadIndex; } catch (e) {};
try { KismetInputLibrary.prototype.GetScreenSpacePosition = KismetInputLibrary.prototype.PointerEvent_GetScreenSpacePosition; } catch (e) {};
try { KismetInputLibrary.GetScreenSpacePosition = KismetInputLibrary.PointerEvent_GetScreenSpacePosition; } catch (e) {};
try { KismetInputLibrary.prototype.GetPointerIndex = KismetInputLibrary.prototype.PointerEvent_GetPointerIndex; } catch (e) {};
try { KismetInputLibrary.GetPointerIndex = KismetInputLibrary.PointerEvent_GetPointerIndex; } catch (e) {};
try { KismetInputLibrary.prototype.GetLastScreenSpacePosition = KismetInputLibrary.prototype.PointerEvent_GetLastScreenSpacePosition; } catch (e) {};
try { KismetInputLibrary.GetLastScreenSpacePosition = KismetInputLibrary.PointerEvent_GetLastScreenSpacePosition; } catch (e) {};
try { KismetInputLibrary.prototype.GetGestureDelta = KismetInputLibrary.prototype.PointerEvent_GetGestureDelta; } catch (e) {};
try { KismetInputLibrary.GetGestureDelta = KismetInputLibrary.PointerEvent_GetGestureDelta; } catch (e) {};
try { KismetInputLibrary.prototype.GetEffectingButton = KismetInputLibrary.prototype.PointerEvent_GetEffectingButton; } catch (e) {};
try { KismetInputLibrary.GetEffectingButton = KismetInputLibrary.PointerEvent_GetEffectingButton; } catch (e) {};
try { KismetInputLibrary.prototype.GetCursorDelta = KismetInputLibrary.prototype.PointerEvent_GetCursorDelta; } catch (e) {};
try { KismetInputLibrary.GetCursorDelta = KismetInputLibrary.PointerEvent_GetCursorDelta; } catch (e) {};
try { KismetInputLibrary.prototype.IsShiftDown = KismetInputLibrary.prototype.ModifierKeysState_IsShiftDown; } catch (e) {};
try { KismetInputLibrary.IsShiftDown = KismetInputLibrary.ModifierKeysState_IsShiftDown; } catch (e) {};
try { KismetInputLibrary.prototype.IsControlDown = KismetInputLibrary.prototype.ModifierKeysState_IsControlDown; } catch (e) {};
try { KismetInputLibrary.IsControlDown = KismetInputLibrary.ModifierKeysState_IsControlDown; } catch (e) {};
try { KismetInputLibrary.prototype.IsCommandDown = KismetInputLibrary.prototype.ModifierKeysState_IsCommandDown; } catch (e) {};
try { KismetInputLibrary.IsCommandDown = KismetInputLibrary.ModifierKeysState_IsCommandDown; } catch (e) {};
try { KismetInputLibrary.prototype.IsAltDown = KismetInputLibrary.prototype.ModifierKeysState_IsAltDown; } catch (e) {};
try { KismetInputLibrary.IsAltDown = KismetInputLibrary.ModifierKeysState_IsAltDown; } catch (e) {};
try { KismetInputLibrary.prototype.IsVectorAxis = KismetInputLibrary.prototype.Key_IsVectorAxis; } catch (e) {};
try { KismetInputLibrary.IsVectorAxis = KismetInputLibrary.Key_IsVectorAxis; } catch (e) {};
try { KismetInputLibrary.prototype.IsValidKey = KismetInputLibrary.prototype.Key_IsValid; } catch (e) {};
try { KismetInputLibrary.IsValidKey = KismetInputLibrary.Key_IsValid; } catch (e) {};
try { KismetInputLibrary.prototype.IsMouseButton = KismetInputLibrary.prototype.Key_IsMouseButton; } catch (e) {};
try { KismetInputLibrary.IsMouseButton = KismetInputLibrary.Key_IsMouseButton; } catch (e) {};
try { KismetInputLibrary.prototype.IsModifierKey = KismetInputLibrary.prototype.Key_IsModifierKey; } catch (e) {};
try { KismetInputLibrary.IsModifierKey = KismetInputLibrary.Key_IsModifierKey; } catch (e) {};
try { KismetInputLibrary.prototype.IsKeyboardKey = KismetInputLibrary.prototype.Key_IsKeyboardKey; } catch (e) {};
try { KismetInputLibrary.IsKeyboardKey = KismetInputLibrary.Key_IsKeyboardKey; } catch (e) {};
try { KismetInputLibrary.prototype.IsGamepadKey = KismetInputLibrary.prototype.Key_IsGamepadKey; } catch (e) {};
try { KismetInputLibrary.IsGamepadKey = KismetInputLibrary.Key_IsGamepadKey; } catch (e) {};
try { KismetInputLibrary.prototype.IsDigital = KismetInputLibrary.prototype.Key_IsDigital; } catch (e) {};
try { KismetInputLibrary.IsDigital = KismetInputLibrary.Key_IsDigital; } catch (e) {};
try { KismetInputLibrary.prototype.IsButtonAxis = KismetInputLibrary.prototype.Key_IsButtonAxis; } catch (e) {};
try { KismetInputLibrary.IsButtonAxis = KismetInputLibrary.Key_IsButtonAxis; } catch (e) {};
try { KismetInputLibrary.prototype.IsAxis3D = KismetInputLibrary.prototype.Key_IsAxis3D; } catch (e) {};
try { KismetInputLibrary.IsAxis3D = KismetInputLibrary.Key_IsAxis3D; } catch (e) {};
try { KismetInputLibrary.prototype.IsAxis2D = KismetInputLibrary.prototype.Key_IsAxis2D; } catch (e) {};
try { KismetInputLibrary.IsAxis2D = KismetInputLibrary.Key_IsAxis2D; } catch (e) {};
try { KismetInputLibrary.prototype.IsAxis1D = KismetInputLibrary.prototype.Key_IsAxis1D; } catch (e) {};
try { KismetInputLibrary.IsAxis1D = KismetInputLibrary.Key_IsAxis1D; } catch (e) {};
try { KismetInputLibrary.prototype.IsAnalog = KismetInputLibrary.prototype.Key_IsAnalog; } catch (e) {};
try { KismetInputLibrary.IsAnalog = KismetInputLibrary.Key_IsAnalog; } catch (e) {};
try { KismetInputLibrary.prototype.GetKeyEventNavigationDirection = KismetInputLibrary.prototype.Key_GetNavigationDirectionFromKey; } catch (e) {};
try { KismetInputLibrary.GetKeyEventNavigationDirection = KismetInputLibrary.Key_GetNavigationDirectionFromKey; } catch (e) {};
try { KismetInputLibrary.prototype.GetAnalogEventNavigationDirection = KismetInputLibrary.prototype.Key_GetNavigationDirectionFromAnalog; } catch (e) {};
try { KismetInputLibrary.GetAnalogEventNavigationDirection = KismetInputLibrary.Key_GetNavigationDirectionFromAnalog; } catch (e) {};
try { KismetInputLibrary.prototype.GetKeyEventNavigationAction = KismetInputLibrary.prototype.Key_GetNavigationActionFromKey; } catch (e) {};
try { KismetInputLibrary.GetKeyEventNavigationAction = KismetInputLibrary.Key_GetNavigationActionFromKey; } catch (e) {};
try { KismetInputLibrary.prototype.GetKeyNavigationAction = KismetInputLibrary.prototype.Key_GetNavigationAction; } catch (e) {};
try { KismetInputLibrary.GetKeyNavigationAction = KismetInputLibrary.Key_GetNavigationAction; } catch (e) {};
try { KismetInputLibrary.prototype.GetKeyDisplayName = KismetInputLibrary.prototype.Key_GetDisplayName; } catch (e) {};
try { KismetInputLibrary.GetKeyDisplayName = KismetInputLibrary.Key_GetDisplayName; } catch (e) {};
try { KismetInputLibrary.prototype.IsShiftDown = KismetInputLibrary.prototype.InputEvent_IsShiftDown; } catch (e) {};
try { KismetInputLibrary.IsShiftDown = KismetInputLibrary.InputEvent_IsShiftDown; } catch (e) {};
try { KismetInputLibrary.prototype.IsRightShiftDown = KismetInputLibrary.prototype.InputEvent_IsRightShiftDown; } catch (e) {};
try { KismetInputLibrary.IsRightShiftDown = KismetInputLibrary.InputEvent_IsRightShiftDown; } catch (e) {};
try { KismetInputLibrary.prototype.IsRightControlDown = KismetInputLibrary.prototype.InputEvent_IsRightControlDown; } catch (e) {};
try { KismetInputLibrary.IsRightControlDown = KismetInputLibrary.InputEvent_IsRightControlDown; } catch (e) {};
try { KismetInputLibrary.prototype.IsRightCommandDown = KismetInputLibrary.prototype.InputEvent_IsRightCommandDown; } catch (e) {};
try { KismetInputLibrary.IsRightCommandDown = KismetInputLibrary.InputEvent_IsRightCommandDown; } catch (e) {};
try { KismetInputLibrary.prototype.IsRightAltDown = KismetInputLibrary.prototype.InputEvent_IsRightAltDown; } catch (e) {};
try { KismetInputLibrary.IsRightAltDown = KismetInputLibrary.InputEvent_IsRightAltDown; } catch (e) {};
try { KismetInputLibrary.prototype.IsRepeat = KismetInputLibrary.prototype.InputEvent_IsRepeat; } catch (e) {};
try { KismetInputLibrary.IsRepeat = KismetInputLibrary.InputEvent_IsRepeat; } catch (e) {};
try { KismetInputLibrary.prototype.IsLeftShiftDown = KismetInputLibrary.prototype.InputEvent_IsLeftShiftDown; } catch (e) {};
try { KismetInputLibrary.IsLeftShiftDown = KismetInputLibrary.InputEvent_IsLeftShiftDown; } catch (e) {};
try { KismetInputLibrary.prototype.IsLeftControlDown = KismetInputLibrary.prototype.InputEvent_IsLeftControlDown; } catch (e) {};
try { KismetInputLibrary.IsLeftControlDown = KismetInputLibrary.InputEvent_IsLeftControlDown; } catch (e) {};
try { KismetInputLibrary.prototype.IsLeftCommandDown = KismetInputLibrary.prototype.InputEvent_IsLeftCommandDown; } catch (e) {};
try { KismetInputLibrary.IsLeftCommandDown = KismetInputLibrary.InputEvent_IsLeftCommandDown; } catch (e) {};
try { KismetInputLibrary.prototype.IsLeftAltDown = KismetInputLibrary.prototype.InputEvent_IsLeftAltDown; } catch (e) {};
try { KismetInputLibrary.IsLeftAltDown = KismetInputLibrary.InputEvent_IsLeftAltDown; } catch (e) {};
try { KismetInputLibrary.prototype.IsControlDown = KismetInputLibrary.prototype.InputEvent_IsControlDown; } catch (e) {};
try { KismetInputLibrary.IsControlDown = KismetInputLibrary.InputEvent_IsControlDown; } catch (e) {};
try { KismetInputLibrary.prototype.IsCommandDown = KismetInputLibrary.prototype.InputEvent_IsCommandDown; } catch (e) {};
try { KismetInputLibrary.IsCommandDown = KismetInputLibrary.InputEvent_IsCommandDown; } catch (e) {};
try { KismetInputLibrary.prototype.IsAltDown = KismetInputLibrary.prototype.InputEvent_IsAltDown; } catch (e) {};
try { KismetInputLibrary.IsAltDown = KismetInputLibrary.InputEvent_IsAltDown; } catch (e) {};
try { KismetInputLibrary.prototype.GetInputChordDisplayName = KismetInputLibrary.prototype.InputChord_GetDisplayName; } catch (e) {};
try { KismetInputLibrary.GetInputChordDisplayName = KismetInputLibrary.InputChord_GetDisplayName; } catch (e) {};
try { KismetInputLibrary.prototype.Equal = KismetInputLibrary.prototype.EqualEqual_KeyKey; } catch (e) {};
try { KismetInputLibrary.Equal = KismetInputLibrary.EqualEqual_KeyKey; } catch (e) {};
try { KismetInputLibrary.prototype.Equal = KismetInputLibrary.prototype.EqualEqual_InputChordInputChord; } catch (e) {};
try { KismetInputLibrary.Equal = KismetInputLibrary.EqualEqual_InputChordInputChord; } catch (e) {};
try { let fnprepatch_642 = KismetInternationalizationLibrary.prototype.SetCurrentLocale;KismetInternationalizationLibrary.prototype.SetCurrentLocale = function (Culture, SaveToConfig = false) { return fnprepatch_642.call(this, Culture, SaveToConfig) }; } catch (e) {};
try { let fnprepatch_643 = KismetInternationalizationLibrary.prototype.SetCurrentLanguageAndLocale;KismetInternationalizationLibrary.prototype.SetCurrentLanguageAndLocale = function (Culture, SaveToConfig = false) { return fnprepatch_643.call(this, Culture, SaveToConfig) }; } catch (e) {};
try { let fnprepatch_644 = KismetInternationalizationLibrary.prototype.SetCurrentLanguage;KismetInternationalizationLibrary.prototype.SetCurrentLanguage = function (Culture, SaveToConfig = false) { return fnprepatch_644.call(this, Culture, SaveToConfig) }; } catch (e) {};
try { let fnprepatch_645 = KismetInternationalizationLibrary.prototype.SetCurrentCulture;KismetInternationalizationLibrary.prototype.SetCurrentCulture = function (Culture, SaveToConfig = false) { return fnprepatch_645.call(this, Culture, SaveToConfig) }; } catch (e) {};
try { let fnprepatch_646 = KismetInternationalizationLibrary.prototype.SetCurrentAssetGroupCulture;KismetInternationalizationLibrary.prototype.SetCurrentAssetGroupCulture = function (AssetGroup, Culture, SaveToConfig = false) { return fnprepatch_646.call(this, AssetGroup, Culture, SaveToConfig) }; } catch (e) {};
try { let fnprepatch_647 = KismetInternationalizationLibrary.prototype.GetSuitableCulture;KismetInternationalizationLibrary.prototype.GetSuitableCulture = function (AvailableCultures, CultureToMatch, FallbackCulture = "en") { return fnprepatch_647.call(this, AvailableCultures, CultureToMatch, FallbackCulture) }; } catch (e) {};
try { let fnprepatch_648 = KismetInternationalizationLibrary.prototype.GetLocalizedCultures;KismetInternationalizationLibrary.prototype.GetLocalizedCultures = function (IncludeGame = true, IncludeEngine = false, IncludeEditor = false, IncludeAdditional = false) { return fnprepatch_648.call(this, IncludeGame, IncludeEngine, IncludeEditor, IncludeAdditional) }; } catch (e) {};
try { let fnprepatch_649 = KismetInternationalizationLibrary.prototype.GetCultureDisplayName;KismetInternationalizationLibrary.prototype.GetCultureDisplayName = function (Culture, Localized = true) { return fnprepatch_649.call(this, Culture, Localized) }; } catch (e) {};
try { let fnprepatch_650 = KismetInternationalizationLibrary.prototype.ClearCurrentAssetGroupCulture;KismetInternationalizationLibrary.prototype.ClearCurrentAssetGroupCulture = function (AssetGroup, SaveToConfig = false) { return fnprepatch_650.call(this, AssetGroup, SaveToConfig) }; } catch (e) {};
try { let fnprepatch_651 = KismetMaterialLibrary.prototype.CreateDynamicMaterialInstance;KismetMaterialLibrary.prototype.CreateDynamicMaterialInstance = function (WorldContextObject, Parent, OptionalName = "None", CreationFlags = "None") { return fnprepatch_651.call(this, WorldContextObject, Parent, OptionalName, CreationFlags) }; } catch (e) {};
try { let fnprepatch_652 = KismetMathLibrary.prototype.VectorSpringInterp;KismetMathLibrary.prototype.VectorSpringInterp = function (Current, Target, SpringState, Stiffness, CriticalDampingFactor, DeltaTime, Mass = 1, TargetVelocityAmount = 1, bClamp = false, MinValue, MaxValue, bInitializeFromTarget = false) { return fnprepatch_652.call(this, Current, Target, SpringState, Stiffness, CriticalDampingFactor, DeltaTime, Mass, TargetVelocityAmount, bClamp, MinValue, MaxValue, bInitializeFromTarget) }; } catch (e) {};
try { let fnprepatch_653 = KismetMathLibrary.prototype.Vector_Normalize;KismetMathLibrary.prototype.Vector_Normalize = function (A, Tolerance = 0) { return fnprepatch_653.call(this, A, Tolerance) }; } catch (e) {};
try { let fnprepatch_654 = KismetMathLibrary.prototype.Vector_Normal2D;KismetMathLibrary.prototype.Vector_Normal2D = function (A, Tolerance = 0.00009999999747378752) { return fnprepatch_654.call(this, A, Tolerance) }; } catch (e) {};
try { let fnprepatch_655 = KismetMathLibrary.prototype.Vector_IsUnit;KismetMathLibrary.prototype.Vector_IsUnit = function (A, SquaredLenthTolerance = 0.00009999999747378752) { return fnprepatch_655.call(this, A, SquaredLenthTolerance) }; } catch (e) {};
try { let fnprepatch_656 = KismetMathLibrary.prototype.Vector_IsUniform;KismetMathLibrary.prototype.Vector_IsUniform = function (A, Tolerance = 0.00009999999747378752) { return fnprepatch_656.call(this, A, Tolerance) }; } catch (e) {};
try { let fnprepatch_657 = KismetMathLibrary.prototype.Vector_IsNearlyZero;KismetMathLibrary.prototype.Vector_IsNearlyZero = function (A, Tolerance = 0.00009999999747378752) { return fnprepatch_657.call(this, A, Tolerance) }; } catch (e) {};
try { let fnprepatch_658 = KismetMathLibrary.prototype.Vector4_Normalize3;KismetMathLibrary.prototype.Vector4_Normalize3 = function (A, Tolerance = 0) { return fnprepatch_658.call(this, A, Tolerance) }; } catch (e) {};
try { let fnprepatch_659 = KismetMathLibrary.prototype.Vector4_Normal3;KismetMathLibrary.prototype.Vector4_Normal3 = function (A, Tolerance = 0.00009999999747378752) { return fnprepatch_659.call(this, A, Tolerance) }; } catch (e) {};
try { let fnprepatch_660 = KismetMathLibrary.prototype.Vector4_IsUnit3;KismetMathLibrary.prototype.Vector4_IsUnit3 = function (A, SquaredLenthTolerance = 0.00009999999747378752) { return fnprepatch_660.call(this, A, SquaredLenthTolerance) }; } catch (e) {};
try { let fnprepatch_661 = KismetMathLibrary.prototype.Vector4_IsNearlyZero3;KismetMathLibrary.prototype.Vector4_IsNearlyZero3 = function (A, Tolerance = 0.00009999999747378752) { return fnprepatch_661.call(this, A, Tolerance) }; } catch (e) {};
try { let fnprepatch_662 = KismetMathLibrary.prototype.VEase;KismetMathLibrary.prototype.VEase = function (A, B, Alpha, EasingFunc, BlendExp = 2, Steps = 2) { return fnprepatch_662.call(this, A, B, Alpha, EasingFunc, BlendExp, Steps) }; } catch (e) {};
try { let fnprepatch_663 = KismetMathLibrary.prototype.TLerp;KismetMathLibrary.prototype.TLerp = function (A, B, Alpha, InterpMode = "QuatInterp") { return fnprepatch_663.call(this, A, B, Alpha, InterpMode) }; } catch (e) {};
try { let fnprepatch_664 = KismetMathLibrary.prototype.TEase;KismetMathLibrary.prototype.TEase = function (A, B, Alpha, EasingFunc, BlendExp = 2, Steps = 2) { return fnprepatch_664.call(this, A, B, Alpha, EasingFunc, BlendExp, Steps) }; } catch (e) {};
try { let fnprepatch_665 = KismetMathLibrary.prototype.Subtract_IntInt;KismetMathLibrary.prototype.Subtract_IntInt = function (A, B = 1) { return fnprepatch_665.call(this, A, B) }; } catch (e) {};
try { let fnprepatch_666 = KismetMathLibrary.prototype.Subtract_Int64Int64;KismetMathLibrary.prototype.Subtract_Int64Int64 = function (A, B = 1) { return fnprepatch_666.call(this, A, B) }; } catch (e) {};
try { let fnprepatch_667 = KismetMathLibrary.prototype.Subtract_DoubleDouble;KismetMathLibrary.prototype.Subtract_DoubleDouble = function (A, B = 1) { return fnprepatch_667.call(this, A, B) }; } catch (e) {};
try { let fnprepatch_668 = KismetMathLibrary.prototype.Subtract_ByteByte;KismetMathLibrary.prototype.Subtract_ByteByte = function (A, B = 1) { return fnprepatch_668.call(this, A, B) }; } catch (e) {};
try { let fnprepatch_669 = KismetMathLibrary.prototype.REase;KismetMathLibrary.prototype.REase = function (A, B, Alpha, bShortestPath, EasingFunc, BlendExp = 2, Steps = 2) { return fnprepatch_669.call(this, A, B, Alpha, bShortestPath, EasingFunc, BlendExp, Steps) }; } catch (e) {};
try { let fnprepatch_670 = KismetMathLibrary.prototype.RandomRotator;KismetMathLibrary.prototype.RandomRotator = function (bRoll = false) { return fnprepatch_670.call(this, bRoll) }; } catch (e) {};
try { let fnprepatch_671 = KismetMathLibrary.prototype.QuaternionSpringInterp;KismetMathLibrary.prototype.QuaternionSpringInterp = function (Current, Target, SpringState, Stiffness, CriticalDampingFactor, DeltaTime, Mass = 1, TargetVelocityAmount = 1, bInitializeFromTarget = false) { return fnprepatch_671.call(this, Current, Target, SpringState, Stiffness, CriticalDampingFactor, DeltaTime, Mass, TargetVelocityAmount, bInitializeFromTarget) }; } catch (e) {};
try { let fnprepatch_672 = KismetMathLibrary.prototype.Quat_Normalized;KismetMathLibrary.prototype.Quat_Normalized = function (Q, Tolerance = 0.00009999999747378752) { return fnprepatch_672.call(this, Q, Tolerance) }; } catch (e) {};
try { let fnprepatch_673 = KismetMathLibrary.prototype.Quat_Normalize;KismetMathLibrary.prototype.Quat_Normalize = function (Q, Tolerance = 0.00009999999747378752) { return fnprepatch_673.call(this, Q, Tolerance) }; } catch (e) {};
try { let fnprepatch_674 = KismetMathLibrary.prototype.Quat_IsIdentity;KismetMathLibrary.prototype.Quat_IsIdentity = function (Q, Tolerance = 0.00009999999747378752) { return fnprepatch_674.call(this, Q, Tolerance) }; } catch (e) {};
try { let fnprepatch_675 = KismetMathLibrary.prototype.PointsAreCoplanar;KismetMathLibrary.prototype.PointsAreCoplanar = function (Points, Tolerance = 0.10000000149011612) { return fnprepatch_675.call(this, Points, Tolerance) }; } catch (e) {};
try { let fnprepatch_676 = KismetMathLibrary.prototype.Percent_IntInt;KismetMathLibrary.prototype.Percent_IntInt = function (A, B = 1) { return fnprepatch_676.call(this, A, B) }; } catch (e) {};
try { let fnprepatch_677 = KismetMathLibrary.prototype.Percent_Int64Int64;KismetMathLibrary.prototype.Percent_Int64Int64 = function (A, B = 1) { return fnprepatch_677.call(this, A, B) }; } catch (e) {};
try { let fnprepatch_678 = KismetMathLibrary.prototype.Percent_FloatFloat;KismetMathLibrary.prototype.Percent_FloatFloat = function (A, B = 1) { return fnprepatch_678.call(this, A, B) }; } catch (e) {};
try { let fnprepatch_679 = KismetMathLibrary.prototype.Percent_ByteByte;KismetMathLibrary.prototype.Percent_ByteByte = function (A, B = 1) { return fnprepatch_679.call(this, A, B) }; } catch (e) {};
try { let fnprepatch_680 = KismetMathLibrary.prototype.NotEqual_VectorVector;KismetMathLibrary.prototype.NotEqual_VectorVector = function (A, B, ErrorTolerance = 0.00009999999747378752) { return fnprepatch_680.call(this, A, B, ErrorTolerance) }; } catch (e) {};
try { let fnprepatch_681 = KismetMathLibrary.prototype.NotEqual_Vector4Vector4;KismetMathLibrary.prototype.NotEqual_Vector4Vector4 = function (A, B, ErrorTolerance = 0.00009999999747378752) { return fnprepatch_681.call(this, A, B, ErrorTolerance) }; } catch (e) {};
try { let fnprepatch_682 = KismetMathLibrary.prototype.NotEqual_Vector2DVector2D;KismetMathLibrary.prototype.NotEqual_Vector2DVector2D = function (A, B, ErrorTolerance = 0.00009999999747378752) { return fnprepatch_682.call(this, A, B, ErrorTolerance) }; } catch (e) {};
try { let fnprepatch_683 = KismetMathLibrary.prototype.NotEqual_RotatorRotator;KismetMathLibrary.prototype.NotEqual_RotatorRotator = function (A, B, ErrorTolerance = 0.00009999999747378752) { return fnprepatch_683.call(this, A, B, ErrorTolerance) }; } catch (e) {};
try { let fnprepatch_684 = KismetMathLibrary.prototype.NotEqual_QuatQuat;KismetMathLibrary.prototype.NotEqual_QuatQuat = function (A, B, ErrorTolerance = 0.00009999999747378752) { return fnprepatch_684.call(this, A, B, ErrorTolerance) }; } catch (e) {};
try { let fnprepatch_685 = KismetMathLibrary.prototype.NotEqual_MatrixMatrix;KismetMathLibrary.prototype.NotEqual_MatrixMatrix = function (A, B, Tolerance = 0.00009999999747378752) { return fnprepatch_685.call(this, A, B, Tolerance) }; } catch (e) {};
try { let fnprepatch_686 = KismetMathLibrary.prototype.NormalSafe2D;KismetMathLibrary.prototype.NormalSafe2D = function (A, Tolerance = 0) { return fnprepatch_686.call(this, A, Tolerance) }; } catch (e) {};
try { let fnprepatch_687 = KismetMathLibrary.prototype.Normalize2D;KismetMathLibrary.prototype.Normalize2D = function (A, Tolerance = 0) { return fnprepatch_687.call(this, A, Tolerance) }; } catch (e) {};
try { let fnprepatch_688 = KismetMathLibrary.prototype.Normal;KismetMathLibrary.prototype.Normal = function (A, Tolerance = 0.00009999999747378752) { return fnprepatch_688.call(this, A, Tolerance) }; } catch (e) {};
try { let fnprepatch_689 = KismetMathLibrary.prototype.NearlyEqual_TransformTransform;KismetMathLibrary.prototype.NearlyEqual_TransformTransform = function (A, B, LocationTolerance = 0.00009999999747378752, RotationTolerance = 0.00009999999747378752, Scale3DTolerance = 0.00009999999747378752) { return fnprepatch_689.call(this, A, B, LocationTolerance, RotationTolerance, Scale3DTolerance) }; } catch (e) {};
try { let fnprepatch_690 = KismetMathLibrary.prototype.NearlyEqual_FloatFloat;KismetMathLibrary.prototype.NearlyEqual_FloatFloat = function (A, B, ErrorTolerance = 0.000001) { return fnprepatch_690.call(this, A, B, ErrorTolerance) }; } catch (e) {};
try { let fnprepatch_691 = KismetMathLibrary.prototype.MinimumAreaRectangle;KismetMathLibrary.prototype.MinimumAreaRectangle = function (WorldContextObject, InVerts, SampleSurfaceNormal, OutRectCenter, OutRectRotation, OutSideLengthX, OutSideLengthY, bDebugDraw = false) { return fnprepatch_691.call(this, WorldContextObject, InVerts, SampleSurfaceNormal, OutRectCenter, OutRectRotation, OutSideLengthX, OutSideLengthY, bDebugDraw) }; } catch (e) {};
try { let fnprepatch_692 = KismetMathLibrary.prototype.MinAreaRectangle;KismetMathLibrary.prototype.MinAreaRectangle = function (WorldContextObject, InPoints, SampleSurfaceNormal, OutRectCenter, OutRectRotation, OutRectLengthX, OutRectLengthY, bDebugDraw = false) { return fnprepatch_692.call(this, WorldContextObject, InPoints, SampleSurfaceNormal, OutRectCenter, OutRectRotation, OutRectLengthX, OutRectLengthY, bDebugDraw) }; } catch (e) {};
try { let fnprepatch_693 = KismetMathLibrary.prototype.Matrix_RemoveScaling;KismetMathLibrary.prototype.Matrix_RemoveScaling = function (M, Tolerance = 0) { return fnprepatch_693.call(this, M, Tolerance) }; } catch (e) {};
try { let fnprepatch_694 = KismetMathLibrary.prototype.Matrix_GetScaleVector;KismetMathLibrary.prototype.Matrix_GetScaleVector = function (M, Tolerance = 0) { return fnprepatch_694.call(this, M, Tolerance) }; } catch (e) {};
try { let fnprepatch_695 = KismetMathLibrary.prototype.Matrix_GetMatrixWithoutScale;KismetMathLibrary.prototype.Matrix_GetMatrixWithoutScale = function (M, Tolerance = 0) { return fnprepatch_695.call(this, M, Tolerance) }; } catch (e) {};
try { let fnprepatch_696 = KismetMathLibrary.prototype.MakeQualifiedFrameTime;KismetMathLibrary.prototype.MakeQualifiedFrameTime = function (Frame, FrameRate, SubFrame = 0) { return fnprepatch_696.call(this, Frame, FrameRate, SubFrame) }; } catch (e) {};
try { let fnprepatch_697 = KismetMathLibrary.prototype.MakePulsatingValue;KismetMathLibrary.prototype.MakePulsatingValue = function (InCurrentTime, InPulsesPerSecond = 1, InPhase = 0) { return fnprepatch_697.call(this, InCurrentTime, InPulsesPerSecond, InPhase) }; } catch (e) {};
try { let fnprepatch_698 = KismetMathLibrary.prototype.MakeFrameRate;KismetMathLibrary.prototype.MakeFrameRate = function (Numerator, Denominator = 1) { return fnprepatch_698.call(this, Numerator, Denominator) }; } catch (e) {};
try { let fnprepatch_699 = KismetMathLibrary.prototype.MakeDateTime;KismetMathLibrary.prototype.MakeDateTime = function (Year, Month, Day, Hour = 0, Minute = 0, Second = 0, Millisecond = 0) { return fnprepatch_699.call(this, Year, Month, Day, Hour, Minute, Second, Millisecond) }; } catch (e) {};
try { let fnprepatch_700 = KismetMathLibrary.prototype.MakeColor;KismetMathLibrary.prototype.MakeColor = function (R, G, B, A = 1) { return fnprepatch_700.call(this, R, G, B, A) }; } catch (e) {};
try { let fnprepatch_701 = KismetMathLibrary.prototype.Log;KismetMathLibrary.prototype.Log = function (A, Base = 1) { return fnprepatch_701.call(this, A, Base) }; } catch (e) {};
try { let fnprepatch_702 = KismetMathLibrary.prototype.LinearColor_SetRGBA;KismetMathLibrary.prototype.LinearColor_SetRGBA = function (InOutColor, R, G, B, A = 1) { return fnprepatch_702.call(this, InOutColor, R, G, B, A) }; } catch (e) {};
try { let fnprepatch_703 = KismetMathLibrary.prototype.LinearColor_SetFromHSV;KismetMathLibrary.prototype.LinearColor_SetFromHSV = function (InOutColor, H, S, V, A = 1) { return fnprepatch_703.call(this, InOutColor, H, S, V, A) }; } catch (e) {};
try { let fnprepatch_704 = KismetMathLibrary.prototype.LinearColor_IsNearEqual;KismetMathLibrary.prototype.LinearColor_IsNearEqual = function (A, B, Tolerance = 0.00009999999747378752) { return fnprepatch_704.call(this, A, B, Tolerance) }; } catch (e) {};
try { let fnprepatch_705 = KismetMathLibrary.prototype.IsNearlyZero2D;KismetMathLibrary.prototype.IsNearlyZero2D = function (A, Tolerance = 0.00009999999747378752) { return fnprepatch_705.call(this, A, Tolerance) }; } catch (e) {};
try { let fnprepatch_706 = KismetMathLibrary.prototype.InRange_IntInt;KismetMathLibrary.prototype.InRange_IntInt = function (Value, Min, Max, InclusiveMin = true, InclusiveMax = true) { return fnprepatch_706.call(this, Value, Min, Max, InclusiveMin, InclusiveMax) }; } catch (e) {};
try { let fnprepatch_707 = KismetMathLibrary.prototype.InRange_Int64Int64;KismetMathLibrary.prototype.InRange_Int64Int64 = function (Value, Min, Max, InclusiveMin = true, InclusiveMax = true) { return fnprepatch_707.call(this, Value, Min, Max, InclusiveMin, InclusiveMax) }; } catch (e) {};
try { let fnprepatch_708 = KismetMathLibrary.prototype.InRange_FloatFloat;KismetMathLibrary.prototype.InRange_FloatFloat = function (Value, Min, Max, InclusiveMin = true, InclusiveMax = true) { return fnprepatch_708.call(this, Value, Min, Max, InclusiveMin, InclusiveMax) }; } catch (e) {};
try { let fnprepatch_709 = KismetMathLibrary.prototype.HSVToRGB;KismetMathLibrary.prototype.HSVToRGB = function (H, S, V, A = 1) { return fnprepatch_709.call(this, H, S, V, A) }; } catch (e) {};
try { let fnprepatch_710 = KismetMathLibrary.prototype.FloatSpringInterp;KismetMathLibrary.prototype.FloatSpringInterp = function (Current, Target, SpringState, Stiffness, CriticalDampingFactor, DeltaTime, Mass = 1, TargetVelocityAmount = 1, bClamp = false, MinValue = -1, MaxValue = 1, bInitializeFromTarget = false) { return fnprepatch_710.call(this, Current, Target, SpringState, Stiffness, CriticalDampingFactor, DeltaTime, Mass, TargetVelocityAmount, bClamp, MinValue, MaxValue, bInitializeFromTarget) }; } catch (e) {};
try { let fnprepatch_711 = KismetMathLibrary.prototype.EqualEqual_VectorVector;KismetMathLibrary.prototype.EqualEqual_VectorVector = function (A, B, ErrorTolerance = 0.00009999999747378752) { return fnprepatch_711.call(this, A, B, ErrorTolerance) }; } catch (e) {};
try { let fnprepatch_712 = KismetMathLibrary.prototype.EqualEqual_Vector4Vector4;KismetMathLibrary.prototype.EqualEqual_Vector4Vector4 = function (A, B, ErrorTolerance = 0.00009999999747378752) { return fnprepatch_712.call(this, A, B, ErrorTolerance) }; } catch (e) {};
try { let fnprepatch_713 = KismetMathLibrary.prototype.EqualEqual_Vector2DVector2D;KismetMathLibrary.prototype.EqualEqual_Vector2DVector2D = function (A, B, ErrorTolerance = 0.00009999999747378752) { return fnprepatch_713.call(this, A, B, ErrorTolerance) }; } catch (e) {};
try { let fnprepatch_714 = KismetMathLibrary.prototype.EqualEqual_RotatorRotator;KismetMathLibrary.prototype.EqualEqual_RotatorRotator = function (A, B, ErrorTolerance = 0.00009999999747378752) { return fnprepatch_714.call(this, A, B, ErrorTolerance) }; } catch (e) {};
try { let fnprepatch_715 = KismetMathLibrary.prototype.EqualEqual_QuatQuat;KismetMathLibrary.prototype.EqualEqual_QuatQuat = function (A, B, Tolerance = 0.00009999999747378752) { return fnprepatch_715.call(this, A, B, Tolerance) }; } catch (e) {};
try { let fnprepatch_716 = KismetMathLibrary.prototype.EqualEqual_MatrixMatrix;KismetMathLibrary.prototype.EqualEqual_MatrixMatrix = function (A, B, Tolerance = 0.00009999999747378752) { return fnprepatch_716.call(this, A, B, Tolerance) }; } catch (e) {};
try { let fnprepatch_717 = KismetMathLibrary.prototype.Ease;KismetMathLibrary.prototype.Ease = function (A, B, Alpha, EasingFunc, BlendExp = 2, Steps = 2) { return fnprepatch_717.call(this, A, B, Alpha, EasingFunc, BlendExp, Steps) }; } catch (e) {};
try { let fnprepatch_718 = KismetMathLibrary.prototype.Divide_VectorInt;KismetMathLibrary.prototype.Divide_VectorInt = function (A, B = 1) { return fnprepatch_718.call(this, A, B) }; } catch (e) {};
try { let fnprepatch_719 = KismetMathLibrary.prototype.Divide_VectorFloat;KismetMathLibrary.prototype.Divide_VectorFloat = function (A, B = 1) { return fnprepatch_719.call(this, A, B) }; } catch (e) {};
try { let fnprepatch_720 = KismetMathLibrary.prototype.Divide_Vector2DFloat;KismetMathLibrary.prototype.Divide_Vector2DFloat = function (A, B = 1) { return fnprepatch_720.call(this, A, B) }; } catch (e) {};
try { let fnprepatch_721 = KismetMathLibrary.prototype.Divide_IntInt;KismetMathLibrary.prototype.Divide_IntInt = function (A, B = 1) { return fnprepatch_721.call(this, A, B) }; } catch (e) {};
try { let fnprepatch_722 = KismetMathLibrary.prototype.Divide_Int64Int64;KismetMathLibrary.prototype.Divide_Int64Int64 = function (A, B = 1) { return fnprepatch_722.call(this, A, B) }; } catch (e) {};
try { let fnprepatch_723 = KismetMathLibrary.prototype.Divide_DoubleDouble;KismetMathLibrary.prototype.Divide_DoubleDouble = function (A, B = 1) { return fnprepatch_723.call(this, A, B) }; } catch (e) {};
try { let fnprepatch_724 = KismetMathLibrary.prototype.Divide_ByteByte;KismetMathLibrary.prototype.Divide_ByteByte = function (A, B = 1) { return fnprepatch_724.call(this, A, B) }; } catch (e) {};
try { let fnprepatch_725 = KismetMathLibrary.prototype.CreateVectorFromYawPitch;KismetMathLibrary.prototype.CreateVectorFromYawPitch = function (Yaw, Pitch, Length = 1) { return fnprepatch_725.call(this, Yaw, Pitch, Length) }; } catch (e) {};
try { let fnprepatch_726 = KismetMathLibrary.prototype.Conv_Vector2DToVector;KismetMathLibrary.prototype.Conv_Vector2DToVector = function (InVector2D, Z = 0) { return fnprepatch_726.call(this, InVector2D, Z) }; } catch (e) {};
try { let fnprepatch_727 = KismetMathLibrary.prototype.Conv_LinearColorToColor;KismetMathLibrary.prototype.Conv_LinearColorToColor = function (InLinearColor, InUseSRGB = true) { return fnprepatch_727.call(this, InLinearColor, InUseSRGB) }; } catch (e) {};
try { let fnprepatch_728 = KismetMathLibrary.prototype.Add_IntInt;KismetMathLibrary.prototype.Add_IntInt = function (A, B = 1) { return fnprepatch_728.call(this, A, B) }; } catch (e) {};
try { let fnprepatch_729 = KismetMathLibrary.prototype.Add_Int64Int64;KismetMathLibrary.prototype.Add_Int64Int64 = function (A, B = 1) { return fnprepatch_729.call(this, A, B) }; } catch (e) {};
try { let fnprepatch_730 = KismetMathLibrary.prototype.Add_DoubleDouble;KismetMathLibrary.prototype.Add_DoubleDouble = function (A, B = 1) { return fnprepatch_730.call(this, A, B) }; } catch (e) {};
try { let fnprepatch_731 = KismetMathLibrary.prototype.Add_ByteByte;KismetMathLibrary.prototype.Add_ByteByte = function (A, B = 1) { return fnprepatch_731.call(this, A, B) }; } catch (e) {};
try { KismetMathLibrary.prototype.BitwiseXOR = KismetMathLibrary.prototype.Xor_IntInt; } catch (e) {};
try { KismetMathLibrary.BitwiseXOR = KismetMathLibrary.Xor_IntInt; } catch (e) {};
try { KismetMathLibrary.prototype.BitwiseXOR = KismetMathLibrary.prototype.Xor_Int64Int64; } catch (e) {};
try { KismetMathLibrary.BitwiseXOR = KismetMathLibrary.Xor_Int64Int64; } catch (e) {};
try { KismetMathLibrary.prototype.WeightedMovingAverageVector = KismetMathLibrary.prototype.WeightedMovingAverage_FVector; } catch (e) {};
try { KismetMathLibrary.WeightedMovingAverageVector = KismetMathLibrary.WeightedMovingAverage_FVector; } catch (e) {};
try { KismetMathLibrary.prototype.WeightedMovingAverageRotator = KismetMathLibrary.prototype.WeightedMovingAverage_FRotator; } catch (e) {};
try { KismetMathLibrary.WeightedMovingAverageRotator = KismetMathLibrary.WeightedMovingAverage_FRotator; } catch (e) {};
try { KismetMathLibrary.prototype.WeightedMovingAverageFloat = KismetMathLibrary.prototype.WeightedMovingAverage_Float; } catch (e) {};
try { KismetMathLibrary.WeightedMovingAverageFloat = KismetMathLibrary.WeightedMovingAverage_Float; } catch (e) {};
try { KismetMathLibrary.prototype.VectorLengthXYSquared = KismetMathLibrary.prototype.VSizeXYSquared; } catch (e) {};
try { KismetMathLibrary.VectorLengthXYSquared = KismetMathLibrary.VSizeXYSquared; } catch (e) {};
try { KismetMathLibrary.prototype.VectorLengthXY = KismetMathLibrary.prototype.VSizeXY; } catch (e) {};
try { KismetMathLibrary.VectorLengthXY = KismetMathLibrary.VSizeXY; } catch (e) {};
try { KismetMathLibrary.prototype.VectorLengthSquared = KismetMathLibrary.prototype.VSizeSquared; } catch (e) {};
try { KismetMathLibrary.VectorLengthSquared = KismetMathLibrary.VSizeSquared; } catch (e) {};
try { KismetMathLibrary.prototype.Vector2DLengthSquared = KismetMathLibrary.prototype.VSize2DSquared; } catch (e) {};
try { KismetMathLibrary.Vector2DLengthSquared = KismetMathLibrary.VSize2DSquared; } catch (e) {};
try { KismetMathLibrary.prototype.Vector2DLength = KismetMathLibrary.prototype.VSize2D; } catch (e) {};
try { KismetMathLibrary.Vector2DLength = KismetMathLibrary.VSize2D; } catch (e) {};
try { KismetMathLibrary.prototype.VectorLength = KismetMathLibrary.prototype.VSize; } catch (e) {};
try { KismetMathLibrary.VectorLength = KismetMathLibrary.VSize; } catch (e) {};
try { KismetMathLibrary.prototype.Lerp = KismetMathLibrary.prototype.VLerp; } catch (e) {};
try { KismetMathLibrary.Lerp = KismetMathLibrary.VLerp; } catch (e) {};
try { KismetMathLibrary.prototype.SlerpVectorToDirection = KismetMathLibrary.prototype.Vector_SlerpVectorToDirection; } catch (e) {};
try { KismetMathLibrary.SlerpVectorToDirection = KismetMathLibrary.Vector_SlerpVectorToDirection; } catch (e) {};
try { KismetMathLibrary.prototype.SlerpNormals = KismetMathLibrary.prototype.Vector_SlerpNormals; } catch (e) {};
try { KismetMathLibrary.SlerpNormals = KismetMathLibrary.Vector_SlerpNormals; } catch (e) {};
try { KismetMathLibrary.prototype.Reciprocal = KismetMathLibrary.prototype.Vector_Reciprocal; } catch (e) {};
try { KismetMathLibrary.Reciprocal = KismetMathLibrary.Vector_Reciprocal; } catch (e) {};
try { KismetMathLibrary.prototype.NormalUnsafe = KismetMathLibrary.prototype.Vector_NormalUnsafe; } catch (e) {};
try { KismetMathLibrary.NormalUnsafe = KismetMathLibrary.Vector_NormalUnsafe; } catch (e) {};
try { KismetMathLibrary.prototype.NormalizeInPlace = KismetMathLibrary.prototype.Vector_Normalize; } catch (e) {};
try { KismetMathLibrary.NormalizeInPlace = KismetMathLibrary.Vector_Normalize; } catch (e) {};
try { KismetMathLibrary.prototype.Normalize2D = KismetMathLibrary.prototype.Vector_Normal2D; } catch (e) {};
try { KismetMathLibrary.Normalize2D = KismetMathLibrary.Vector_Normal2D; } catch (e) {};
try { KismetMathLibrary.prototype.IsUnit = KismetMathLibrary.prototype.Vector_IsUnit; } catch (e) {};
try { KismetMathLibrary.IsUnit = KismetMathLibrary.Vector_IsUnit; } catch (e) {};
try { KismetMathLibrary.prototype.IsUniform = KismetMathLibrary.prototype.Vector_IsUniform; } catch (e) {};
try { KismetMathLibrary.IsUniform = KismetMathLibrary.Vector_IsUniform; } catch (e) {};
try { KismetMathLibrary.prototype.IsNormal = KismetMathLibrary.prototype.Vector_IsNormal; } catch (e) {};
try { KismetMathLibrary.IsNormal = KismetMathLibrary.Vector_IsNormal; } catch (e) {};
try { KismetMathLibrary.prototype.DistanceSquared = KismetMathLibrary.prototype.Vector_DistanceSquared; } catch (e) {};
try { KismetMathLibrary.DistanceSquared = KismetMathLibrary.Vector_DistanceSquared; } catch (e) {};
try { KismetMathLibrary.prototype.Distance2DSquared = KismetMathLibrary.prototype.Vector_Distance2DSquared; } catch (e) {};
try { KismetMathLibrary.Distance2DSquared = KismetMathLibrary.Vector_Distance2DSquared; } catch (e) {};
try { KismetMathLibrary.prototype.Distance2D = KismetMathLibrary.prototype.Vector_Distance2D; } catch (e) {};
try { KismetMathLibrary.Distance2D = KismetMathLibrary.Vector_Distance2D; } catch (e) {};
try { KismetMathLibrary.prototype.Distance = KismetMathLibrary.prototype.Vector_Distance; } catch (e) {};
try { KismetMathLibrary.Distance = KismetMathLibrary.Vector_Distance; } catch (e) {};
try { KismetMathLibrary.prototype.LengthXYZSquared = KismetMathLibrary.prototype.Vector4_SizeSquared3; } catch (e) {};
try { KismetMathLibrary.LengthXYZSquared = KismetMathLibrary.Vector4_SizeSquared3; } catch (e) {};
try { KismetMathLibrary.prototype.LengthSquared = KismetMathLibrary.prototype.Vector4_SizeSquared; } catch (e) {};
try { KismetMathLibrary.LengthSquared = KismetMathLibrary.Vector4_SizeSquared; } catch (e) {};
try { KismetMathLibrary.prototype.LengthXYZ = KismetMathLibrary.prototype.Vector4_Size3; } catch (e) {};
try { KismetMathLibrary.LengthXYZ = KismetMathLibrary.Vector4_Size3; } catch (e) {};
try { KismetMathLibrary.prototype.Length = KismetMathLibrary.prototype.Vector4_Size; } catch (e) {};
try { KismetMathLibrary.Length = KismetMathLibrary.Vector4_Size; } catch (e) {};
try { KismetMathLibrary.prototype.NormalUnsafeXYZ = KismetMathLibrary.prototype.Vector4_NormalUnsafe3; } catch (e) {};
try { KismetMathLibrary.NormalUnsafeXYZ = KismetMathLibrary.Vector4_NormalUnsafe3; } catch (e) {};
try { KismetMathLibrary.prototype.NormalizeInPlaceXYZ = KismetMathLibrary.prototype.Vector4_Normalize3; } catch (e) {};
try { KismetMathLibrary.NormalizeInPlaceXYZ = KismetMathLibrary.Vector4_Normalize3; } catch (e) {};
try { KismetMathLibrary.prototype.NormalizeXYZ = KismetMathLibrary.prototype.Vector4_Normal3; } catch (e) {};
try { KismetMathLibrary.NormalizeXYZ = KismetMathLibrary.Vector4_Normal3; } catch (e) {};
try { KismetMathLibrary.prototype.Negated = KismetMathLibrary.prototype.Vector4_Negated; } catch (e) {};
try { KismetMathLibrary.Negated = KismetMathLibrary.Vector4_Negated; } catch (e) {};
try { KismetMathLibrary.prototype.IsUnitXYZ = KismetMathLibrary.prototype.Vector4_IsUnit3; } catch (e) {};
try { KismetMathLibrary.IsUnitXYZ = KismetMathLibrary.Vector4_IsUnit3; } catch (e) {};
try { KismetMathLibrary.prototype.IsNormalXYZ = KismetMathLibrary.prototype.Vector4_IsNormal3; } catch (e) {};
try { KismetMathLibrary.IsNormalXYZ = KismetMathLibrary.Vector4_IsNormal3; } catch (e) {};
try { KismetMathLibrary.prototype.DotProductXYZ = KismetMathLibrary.prototype.Vector4_DotProduct3; } catch (e) {};
try { KismetMathLibrary.DotProductXYZ = KismetMathLibrary.Vector4_DotProduct3; } catch (e) {};
try { KismetMathLibrary.prototype.DotProduct = KismetMathLibrary.prototype.Vector4_DotProduct; } catch (e) {};
try { KismetMathLibrary.DotProduct = KismetMathLibrary.Vector4_DotProduct; } catch (e) {};
try { KismetMathLibrary.prototype.CrossProductXYZ = KismetMathLibrary.prototype.Vector4_CrossProduct3; } catch (e) {};
try { KismetMathLibrary.CrossProductXYZ = KismetMathLibrary.Vector4_CrossProduct3; } catch (e) {};
try { KismetMathLibrary.prototype.Ease = KismetMathLibrary.prototype.VEase; } catch (e) {};
try { KismetMathLibrary.Ease = KismetMathLibrary.VEase; } catch (e) {};
try { KismetMathLibrary.prototype.TransformVector4byMatrix = KismetMathLibrary.prototype.TransformVector4; } catch (e) {};
try { KismetMathLibrary.TransformVector4byMatrix = KismetMathLibrary.TransformVector4; } catch (e) {};
try { KismetMathLibrary.prototype.Determinant = KismetMathLibrary.prototype.Transform_Determinant; } catch (e) {};
try { KismetMathLibrary.Determinant = KismetMathLibrary.Transform_Determinant; } catch (e) {};
try { KismetMathLibrary.prototype.ToSign = KismetMathLibrary.prototype.ToSign2D; } catch (e) {};
try { KismetMathLibrary.ToSign = KismetMathLibrary.ToSign2D; } catch (e) {};
try { KismetMathLibrary.prototype.ToRounded = KismetMathLibrary.prototype.ToRounded2D; } catch (e) {};
try { KismetMathLibrary.ToRounded = KismetMathLibrary.ToRounded2D; } catch (e) {};
try { KismetMathLibrary.prototype.ToHex = KismetMathLibrary.prototype.ToHex_LinearColor; } catch (e) {};
try { KismetMathLibrary.ToHex = KismetMathLibrary.ToHex_LinearColor; } catch (e) {};
try { KismetMathLibrary.prototype.ToDirectionAndLength = KismetMathLibrary.prototype.ToDirectionAndLength2D; } catch (e) {};
try { KismetMathLibrary.ToDirectionAndLength = KismetMathLibrary.ToDirectionAndLength2D; } catch (e) {};
try { KismetMathLibrary.prototype.Lerp = KismetMathLibrary.prototype.TLerp; } catch (e) {};
try { KismetMathLibrary.Lerp = KismetMathLibrary.TLerp; } catch (e) {};
try { KismetMathLibrary.prototype.ZeroValue = KismetMathLibrary.prototype.TimespanZeroValue; } catch (e) {};
try { KismetMathLibrary.ZeroValue = KismetMathLibrary.TimespanZeroValue; } catch (e) {};
try { KismetMathLibrary.prototype.MinValue = KismetMathLibrary.prototype.TimespanMinValue; } catch (e) {};
try { KismetMathLibrary.MinValue = KismetMathLibrary.TimespanMinValue; } catch (e) {};
try { KismetMathLibrary.prototype.MaxValue = KismetMathLibrary.prototype.TimespanMaxValue; } catch (e) {};
try { KismetMathLibrary.MaxValue = KismetMathLibrary.TimespanMaxValue; } catch (e) {};
try { KismetMathLibrary.prototype.Ease = KismetMathLibrary.prototype.TEase; } catch (e) {};
try { KismetMathLibrary.Ease = KismetMathLibrary.TEase; } catch (e) {};
try { KismetMathLibrary.prototype.Sign = KismetMathLibrary.prototype.SignOfInteger64; } catch (e) {};
try { KismetMathLibrary.Sign = KismetMathLibrary.SignOfInteger64; } catch (e) {};
try { KismetMathLibrary.prototype.Sign = KismetMathLibrary.prototype.SignOfInteger; } catch (e) {};
try { KismetMathLibrary.Sign = KismetMathLibrary.SignOfInteger; } catch (e) {};
try { KismetMathLibrary.prototype.Sign = KismetMathLibrary.prototype.SignOfFloat; } catch (e) {};
try { KismetMathLibrary.Sign = KismetMathLibrary.SignOfFloat; } catch (e) {};
try { KismetMathLibrary.prototype.RoundtoInteger64 = KismetMathLibrary.prototype.Round64; } catch (e) {};
try { KismetMathLibrary.RoundtoInteger64 = KismetMathLibrary.Round64; } catch (e) {};
try { KismetMathLibrary.prototype.RotateVectorAroundAxis = KismetMathLibrary.prototype.RotateAngleAxis; } catch (e) {};
try { KismetMathLibrary.RotateVectorAroundAxis = KismetMathLibrary.RotateAngleAxis; } catch (e) {};
try { KismetMathLibrary.prototype.Lerp = KismetMathLibrary.prototype.RLerp; } catch (e) {};
try { KismetMathLibrary.Lerp = KismetMathLibrary.RLerp; } catch (e) {};
try { KismetMathLibrary.prototype.RGBtoHSV = KismetMathLibrary.prototype.RGBToHSV_Vector; } catch (e) {};
try { KismetMathLibrary.RGBtoHSV = KismetMathLibrary.RGBToHSV_Vector; } catch (e) {};
try { KismetMathLibrary.prototype.RGBtoHSV = KismetMathLibrary.prototype.RGBLinearToHSV; } catch (e) {};
try { KismetMathLibrary.RGBtoHSV = KismetMathLibrary.RGBLinearToHSV; } catch (e) {};
try { KismetMathLibrary.prototype.Ease = KismetMathLibrary.prototype.REase; } catch (e) {};
try { KismetMathLibrary.Ease = KismetMathLibrary.REase; } catch (e) {};
try { KismetMathLibrary.prototype.RandomPointInBoundingBoxFromStream = KismetMathLibrary.prototype.RandomPointInBoundingBoxFromStream_Box; } catch (e) {};
try { KismetMathLibrary.RandomPointInBoundingBoxFromStream = KismetMathLibrary.RandomPointInBoundingBoxFromStream_Box; } catch (e) {};
try { KismetMathLibrary.prototype.RandomPointInBoundingBox = KismetMathLibrary.prototype.RandomPointInBoundingBox_Box; } catch (e) {};
try { KismetMathLibrary.RandomPointInBoundingBox = KismetMathLibrary.RandomPointInBoundingBox_Box; } catch (e) {};
try { KismetMathLibrary.prototype.VectorUp = KismetMathLibrary.prototype.Quat_VectorUp; } catch (e) {};
try { KismetMathLibrary.VectorUp = KismetMathLibrary.Quat_VectorUp; } catch (e) {};
try { KismetMathLibrary.prototype.VectorRight = KismetMathLibrary.prototype.Quat_VectorRight; } catch (e) {};
try { KismetMathLibrary.VectorRight = KismetMathLibrary.Quat_VectorRight; } catch (e) {};
try { KismetMathLibrary.prototype.VectorForward = KismetMathLibrary.prototype.Quat_VectorForward; } catch (e) {};
try { KismetMathLibrary.VectorForward = KismetMathLibrary.Quat_VectorForward; } catch (e) {};
try { KismetMathLibrary.prototype.UnrotateVector = KismetMathLibrary.prototype.Quat_UnrotateVector; } catch (e) {};
try { KismetMathLibrary.UnrotateVector = KismetMathLibrary.Quat_UnrotateVector; } catch (e) {};
try { KismetMathLibrary.prototype.Slerp = KismetMathLibrary.prototype.Quat_Slerp; } catch (e) {};
try { KismetMathLibrary.Slerp = KismetMathLibrary.Quat_Slerp; } catch (e) {};
try { KismetMathLibrary.prototype.SizeSquared = KismetMathLibrary.prototype.Quat_SizeSquared; } catch (e) {};
try { KismetMathLibrary.SizeSquared = KismetMathLibrary.Quat_SizeSquared; } catch (e) {};
try { KismetMathLibrary.prototype.Size = KismetMathLibrary.prototype.Quat_Size; } catch (e) {};
try { KismetMathLibrary.Size = KismetMathLibrary.Quat_Size; } catch (e) {};
try { KismetMathLibrary.prototype.SetfromEuler = KismetMathLibrary.prototype.Quat_SetFromEuler; } catch (e) {};
try { KismetMathLibrary.SetfromEuler = KismetMathLibrary.Quat_SetFromEuler; } catch (e) {};
try { KismetMathLibrary.prototype.SetComponents = KismetMathLibrary.prototype.Quat_SetComponents; } catch (e) {};
try { KismetMathLibrary.SetComponents = KismetMathLibrary.Quat_SetComponents; } catch (e) {};
try { KismetMathLibrary.prototype.ToRotator = KismetMathLibrary.prototype.Quat_Rotator; } catch (e) {};
try { KismetMathLibrary.ToRotator = KismetMathLibrary.Quat_Rotator; } catch (e) {};
try { KismetMathLibrary.prototype.RotateVector = KismetMathLibrary.prototype.Quat_RotateVector; } catch (e) {};
try { KismetMathLibrary.RotateVector = KismetMathLibrary.Quat_RotateVector; } catch (e) {};
try { KismetMathLibrary.prototype.Normalized = KismetMathLibrary.prototype.Quat_Normalized; } catch (e) {};
try { KismetMathLibrary.Normalized = KismetMathLibrary.Quat_Normalized; } catch (e) {};
try { KismetMathLibrary.prototype.Normalize = KismetMathLibrary.prototype.Quat_Normalize; } catch (e) {};
try { KismetMathLibrary.Normalize = KismetMathLibrary.Quat_Normalize; } catch (e) {};
try { KismetMathLibrary.prototype.MakefromEuler = KismetMathLibrary.prototype.Quat_MakeFromEuler; } catch (e) {};
try { KismetMathLibrary.MakefromEuler = KismetMathLibrary.Quat_MakeFromEuler; } catch (e) {};
try { KismetMathLibrary.prototype.Log = KismetMathLibrary.prototype.Quat_Log; } catch (e) {};
try { KismetMathLibrary.Log = KismetMathLibrary.Quat_Log; } catch (e) {};
try { KismetMathLibrary.prototype.IsNormalized = KismetMathLibrary.prototype.Quat_IsNormalized; } catch (e) {};
try { KismetMathLibrary.IsNormalized = KismetMathLibrary.Quat_IsNormalized; } catch (e) {};
try { KismetMathLibrary.prototype.IsIdentity = KismetMathLibrary.prototype.Quat_IsIdentity; } catch (e) {};
try { KismetMathLibrary.IsIdentity = KismetMathLibrary.Quat_IsIdentity; } catch (e) {};
try { KismetMathLibrary.prototype.IsFinite = KismetMathLibrary.prototype.Quat_IsFinite; } catch (e) {};
try { KismetMathLibrary.IsFinite = KismetMathLibrary.Quat_IsFinite; } catch (e) {};
try { KismetMathLibrary.prototype.Inversed = KismetMathLibrary.prototype.Quat_Inversed; } catch (e) {};
try { KismetMathLibrary.Inversed = KismetMathLibrary.Quat_Inversed; } catch (e) {};
try { KismetMathLibrary.prototype.RotationAxis = KismetMathLibrary.prototype.Quat_GetRotationAxis; } catch (e) {};
try { KismetMathLibrary.RotationAxis = KismetMathLibrary.Quat_GetRotationAxis; } catch (e) {};
try { KismetMathLibrary.prototype.AxisZ = KismetMathLibrary.prototype.Quat_GetAxisZ; } catch (e) {};
try { KismetMathLibrary.AxisZ = KismetMathLibrary.Quat_GetAxisZ; } catch (e) {};
try { KismetMathLibrary.prototype.AxisY = KismetMathLibrary.prototype.Quat_GetAxisY; } catch (e) {};
try { KismetMathLibrary.AxisY = KismetMathLibrary.Quat_GetAxisY; } catch (e) {};
try { KismetMathLibrary.prototype.AxisX = KismetMathLibrary.prototype.Quat_GetAxisX; } catch (e) {};
try { KismetMathLibrary.AxisX = KismetMathLibrary.Quat_GetAxisX; } catch (e) {};
try { KismetMathLibrary.prototype.Angle = KismetMathLibrary.prototype.Quat_GetAngle; } catch (e) {};
try { KismetMathLibrary.Angle = KismetMathLibrary.Quat_GetAngle; } catch (e) {};
try { KismetMathLibrary.prototype.FindQuatBetweenVectors = KismetMathLibrary.prototype.Quat_FindBetweenVectors; } catch (e) {};
try { KismetMathLibrary.FindQuatBetweenVectors = KismetMathLibrary.Quat_FindBetweenVectors; } catch (e) {};
try { KismetMathLibrary.prototype.FindQuatBetweenNormals = KismetMathLibrary.prototype.Quat_FindBetweenNormals; } catch (e) {};
try { KismetMathLibrary.FindQuatBetweenNormals = KismetMathLibrary.Quat_FindBetweenNormals; } catch (e) {};
try { KismetMathLibrary.prototype.Exp = KismetMathLibrary.prototype.Quat_Exp; } catch (e) {};
try { KismetMathLibrary.Exp = KismetMathLibrary.Quat_Exp; } catch (e) {};
try { KismetMathLibrary.prototype.Euler = KismetMathLibrary.prototype.Quat_Euler; } catch (e) {};
try { KismetMathLibrary.Euler = KismetMathLibrary.Quat_Euler; } catch (e) {};
try { KismetMathLibrary.prototype.EnsureShortestArcTo = KismetMathLibrary.prototype.Quat_EnforceShortestArcWith; } catch (e) {};
try { KismetMathLibrary.EnsureShortestArcTo = KismetMathLibrary.Quat_EnforceShortestArcWith; } catch (e) {};
try { KismetMathLibrary.prototype.AngularDistance = KismetMathLibrary.prototype.Quat_AngularDistance; } catch (e) {};
try { KismetMathLibrary.AngularDistance = KismetMathLibrary.Quat_AngularDistance; } catch (e) {};
try { KismetMathLibrary.prototype.BitwiseOR = KismetMathLibrary.prototype.Or_IntInt; } catch (e) {};
try { KismetMathLibrary.BitwiseOR = KismetMathLibrary.Or_IntInt; } catch (e) {};
try { KismetMathLibrary.prototype.BitwiseOR = KismetMathLibrary.prototype.Or_Int64Int64; } catch (e) {};
try { KismetMathLibrary.BitwiseOR = KismetMathLibrary.Or_Int64Int64; } catch (e) {};
try { KismetMathLibrary.prototype.NotEqualExactly = KismetMathLibrary.prototype.NotEqualExactly_VectorVector; } catch (e) {};
try { KismetMathLibrary.NotEqualExactly = KismetMathLibrary.NotEqualExactly_VectorVector; } catch (e) {};
try { KismetMathLibrary.prototype.NotEqualExactly = KismetMathLibrary.prototype.NotEqualExactly_Vector4Vector4; } catch (e) {};
try { KismetMathLibrary.NotEqualExactly = KismetMathLibrary.NotEqualExactly_Vector4Vector4; } catch (e) {};
try { KismetMathLibrary.prototype.NotEqualExactly = KismetMathLibrary.prototype.NotEqualExactly_Vector2DVector2D; } catch (e) {};
try { KismetMathLibrary.NotEqualExactly = KismetMathLibrary.NotEqualExactly_Vector2DVector2D; } catch (e) {};
try { KismetMathLibrary.prototype.NotEqual = KismetMathLibrary.prototype.NotEqual_VectorVector; } catch (e) {};
try { KismetMathLibrary.NotEqual = KismetMathLibrary.NotEqual_VectorVector; } catch (e) {};
try { KismetMathLibrary.prototype.NotEqual = KismetMathLibrary.prototype.NotEqual_Vector4Vector4; } catch (e) {};
try { KismetMathLibrary.NotEqual = KismetMathLibrary.NotEqual_Vector4Vector4; } catch (e) {};
try { KismetMathLibrary.prototype.NotEqual = KismetMathLibrary.prototype.NotEqual_Vector2DVector2D; } catch (e) {};
try { KismetMathLibrary.NotEqual = KismetMathLibrary.NotEqual_Vector2DVector2D; } catch (e) {};
try { KismetMathLibrary.prototype.NotEqual = KismetMathLibrary.prototype.NotEqual_TimespanTimespan; } catch (e) {};
try { KismetMathLibrary.NotEqual = KismetMathLibrary.NotEqual_TimespanTimespan; } catch (e) {};
try { KismetMathLibrary.prototype.NotEqual = KismetMathLibrary.prototype.NotEqual_RotatorRotator; } catch (e) {};
try { KismetMathLibrary.NotEqual = KismetMathLibrary.NotEqual_RotatorRotator; } catch (e) {};
try { KismetMathLibrary.prototype.NotEqual = KismetMathLibrary.prototype.NotEqual_QuatQuat; } catch (e) {};
try { KismetMathLibrary.NotEqual = KismetMathLibrary.NotEqual_QuatQuat; } catch (e) {};
try { KismetMathLibrary.prototype.NotEqual = KismetMathLibrary.prototype.NotEqual_ObjectObject; } catch (e) {};
try { KismetMathLibrary.NotEqual = KismetMathLibrary.NotEqual_ObjectObject; } catch (e) {};
try { KismetMathLibrary.prototype.NotEqual = KismetMathLibrary.prototype.NotEqual_NameName; } catch (e) {};
try { KismetMathLibrary.NotEqual = KismetMathLibrary.NotEqual_NameName; } catch (e) {};
try { KismetMathLibrary.prototype.NotEqual = KismetMathLibrary.prototype.NotEqual_MatrixMatrix; } catch (e) {};
try { KismetMathLibrary.NotEqual = KismetMathLibrary.NotEqual_MatrixMatrix; } catch (e) {};
try { KismetMathLibrary.prototype.NotEqual = KismetMathLibrary.prototype.NotEqual_LinearColorLinearColor; } catch (e) {};
try { KismetMathLibrary.NotEqual = KismetMathLibrary.NotEqual_LinearColorLinearColor; } catch (e) {};
try { KismetMathLibrary.prototype.NotEqual = KismetMathLibrary.prototype.NotEqual_IntPointIntPoint; } catch (e) {};
try { KismetMathLibrary.NotEqual = KismetMathLibrary.NotEqual_IntPointIntPoint; } catch (e) {};
try { KismetMathLibrary.prototype.NotEqual = KismetMathLibrary.prototype.NotEqual_IntInt; } catch (e) {};
try { KismetMathLibrary.NotEqual = KismetMathLibrary.NotEqual_IntInt; } catch (e) {};
try { KismetMathLibrary.prototype.NotEqual = KismetMathLibrary.prototype.NotEqual_Int64Int64; } catch (e) {};
try { KismetMathLibrary.NotEqual = KismetMathLibrary.NotEqual_Int64Int64; } catch (e) {};
try { KismetMathLibrary.prototype.NotEqual = KismetMathLibrary.prototype.NotEqual_DoubleDouble; } catch (e) {};
try { KismetMathLibrary.NotEqual = KismetMathLibrary.NotEqual_DoubleDouble; } catch (e) {};
try { KismetMathLibrary.prototype.NotEqual = KismetMathLibrary.prototype.NotEqual_DateTimeDateTime; } catch (e) {};
try { KismetMathLibrary.NotEqual = KismetMathLibrary.NotEqual_DateTimeDateTime; } catch (e) {};
try { KismetMathLibrary.prototype.NotEqual = KismetMathLibrary.prototype.NotEqual_ClassClass; } catch (e) {};
try { KismetMathLibrary.NotEqual = KismetMathLibrary.NotEqual_ClassClass; } catch (e) {};
try { KismetMathLibrary.prototype.NotEqual = KismetMathLibrary.prototype.NotEqual_ByteByte; } catch (e) {};
try { KismetMathLibrary.NotEqual = KismetMathLibrary.NotEqual_ByteByte; } catch (e) {};
try { KismetMathLibrary.prototype.NotEqual = KismetMathLibrary.prototype.NotEqual_BoolBool; } catch (e) {};
try { KismetMathLibrary.NotEqual = KismetMathLibrary.NotEqual_BoolBool; } catch (e) {};
try { KismetMathLibrary.prototype.NOTBoolean = KismetMathLibrary.prototype.Not_PreBool; } catch (e) {};
try { KismetMathLibrary.NOTBoolean = KismetMathLibrary.Not_PreBool; } catch (e) {};
try { KismetMathLibrary.prototype.BitwiseNOT = KismetMathLibrary.prototype.Not_Int64; } catch (e) {};
try { KismetMathLibrary.BitwiseNOT = KismetMathLibrary.Not_Int64; } catch (e) {};
try { KismetMathLibrary.prototype.BitwiseNOT = KismetMathLibrary.prototype.Not_Int; } catch (e) {};
try { KismetMathLibrary.BitwiseNOT = KismetMathLibrary.Not_Int; } catch (e) {};
try { KismetMathLibrary.prototype.NormalSafe = KismetMathLibrary.prototype.NormalSafe2D; } catch (e) {};
try { KismetMathLibrary.NormalSafe = KismetMathLibrary.NormalSafe2D; } catch (e) {};
try { KismetMathLibrary.prototype.Delta = KismetMathLibrary.prototype.NormalizedDeltaRotator; } catch (e) {};
try { KismetMathLibrary.Delta = KismetMathLibrary.NormalizedDeltaRotator; } catch (e) {};
try { KismetMathLibrary.prototype.NormalizeInPlace = KismetMathLibrary.prototype.Normalize2D; } catch (e) {};
try { KismetMathLibrary.NormalizeInPlace = KismetMathLibrary.Normalize2D; } catch (e) {};
try { KismetMathLibrary.prototype.Normalize2D = KismetMathLibrary.prototype.Normal2D; } catch (e) {};
try { KismetMathLibrary.Normalize2D = KismetMathLibrary.Normal2D; } catch (e) {};
try { KismetMathLibrary.prototype.Normalize = KismetMathLibrary.prototype.Normal; } catch (e) {};
try { KismetMathLibrary.Normalize = KismetMathLibrary.Normal; } catch (e) {};
try { KismetMathLibrary.prototype.InvertRotator = KismetMathLibrary.prototype.NegateRotator; } catch (e) {};
try { KismetMathLibrary.InvertRotator = KismetMathLibrary.NegateRotator; } catch (e) {};
try { KismetMathLibrary.prototype.NearlyEqual = KismetMathLibrary.prototype.NearlyEqual_TransformTransform; } catch (e) {};
try { KismetMathLibrary.NearlyEqual = KismetMathLibrary.NearlyEqual_TransformTransform; } catch (e) {};
try { KismetMathLibrary.prototype.NearlyEqual = KismetMathLibrary.prototype.NearlyEqual_FloatFloat; } catch (e) {};
try { KismetMathLibrary.NearlyEqual = KismetMathLibrary.NearlyEqual_FloatFloat; } catch (e) {};
try { KismetMathLibrary.prototype.Power = KismetMathLibrary.prototype.MultiplyMultiply_FloatFloat; } catch (e) {};
try { KismetMathLibrary.Power = KismetMathLibrary.MultiplyMultiply_FloatFloat; } catch (e) {};
try { KismetMathLibrary.prototype.ScaleRotator = KismetMathLibrary.prototype.Multiply_RotatorInt; } catch (e) {};
try { KismetMathLibrary.ScaleRotator = KismetMathLibrary.Multiply_RotatorInt; } catch (e) {};
try { KismetMathLibrary.prototype.ScaleRotator = KismetMathLibrary.prototype.Multiply_RotatorFloat; } catch (e) {};
try { KismetMathLibrary.ScaleRotator = KismetMathLibrary.Multiply_RotatorFloat; } catch (e) {};
try { KismetMathLibrary.prototype.Min = KismetMathLibrary.prototype.MinInt64; } catch (e) {};
try { KismetMathLibrary.Min = KismetMathLibrary.MinInt64; } catch (e) {};
try { KismetMathLibrary.prototype.Max = KismetMathLibrary.prototype.MaxInt64; } catch (e) {};
try { KismetMathLibrary.Max = KismetMathLibrary.MaxInt64; } catch (e) {};
try { KismetMathLibrary.prototype.TransformVector4 = KismetMathLibrary.prototype.Matrix_TransformVector4; } catch (e) {};
try { KismetMathLibrary.TransformVector4 = KismetMathLibrary.Matrix_TransformVector4; } catch (e) {};
try { KismetMathLibrary.prototype.TransformVector = KismetMathLibrary.prototype.Matrix_TransformVector; } catch (e) {};
try { KismetMathLibrary.TransformVector = KismetMathLibrary.Matrix_TransformVector; } catch (e) {};
try { KismetMathLibrary.prototype.TransformPosition = KismetMathLibrary.prototype.Matrix_TransformPosition; } catch (e) {};
try { KismetMathLibrary.TransformPosition = KismetMathLibrary.Matrix_TransformPosition; } catch (e) {};
try { KismetMathLibrary.prototype.ToQuat = KismetMathLibrary.prototype.Matrix_ToQuat; } catch (e) {};
try { KismetMathLibrary.ToQuat = KismetMathLibrary.Matrix_ToQuat; } catch (e) {};
try { KismetMathLibrary.prototype.SetOrigin = KismetMathLibrary.prototype.Matrix_SetOrigin; } catch (e) {};
try { KismetMathLibrary.SetOrigin = KismetMathLibrary.Matrix_SetOrigin; } catch (e) {};
try { KismetMathLibrary.prototype.SetColumn = KismetMathLibrary.prototype.Matrix_SetColumn; } catch (e) {};
try { KismetMathLibrary.SetColumn = KismetMathLibrary.Matrix_SetColumn; } catch (e) {};
try { KismetMathLibrary.prototype.SetAxis = KismetMathLibrary.prototype.Matrix_SetAxis; } catch (e) {};
try { KismetMathLibrary.SetAxis = KismetMathLibrary.Matrix_SetAxis; } catch (e) {};
try { KismetMathLibrary.prototype.ScaleTranslation = KismetMathLibrary.prototype.Matrix_ScaleTranslation; } catch (e) {};
try { KismetMathLibrary.ScaleTranslation = KismetMathLibrary.Matrix_ScaleTranslation; } catch (e) {};
try { KismetMathLibrary.prototype.RemoveTranslation = KismetMathLibrary.prototype.Matrix_RemoveTranslation; } catch (e) {};
try { KismetMathLibrary.RemoveTranslation = KismetMathLibrary.Matrix_RemoveTranslation; } catch (e) {};
try { KismetMathLibrary.prototype.RemoveScaling = KismetMathLibrary.prototype.Matrix_RemoveScaling; } catch (e) {};
try { KismetMathLibrary.RemoveScaling = KismetMathLibrary.Matrix_RemoveScaling; } catch (e) {};
try { KismetMathLibrary.prototype.Mirror = KismetMathLibrary.prototype.Matrix_Mirror; } catch (e) {};
try { KismetMathLibrary.Mirror = KismetMathLibrary.Matrix_Mirror; } catch (e) {};
try { KismetMathLibrary.prototype.InverseTransformVector = KismetMathLibrary.prototype.Matrix_InverseTransformVector; } catch (e) {};
try { KismetMathLibrary.InverseTransformVector = KismetMathLibrary.Matrix_InverseTransformVector; } catch (e) {};
try { KismetMathLibrary.prototype.InverseTransformPosition = KismetMathLibrary.prototype.Matrix_InverseTransformPosition; } catch (e) {};
try { KismetMathLibrary.InverseTransformPosition = KismetMathLibrary.Matrix_InverseTransformPosition; } catch (e) {};
try { KismetMathLibrary.prototype.Identity = KismetMathLibrary.prototype.Matrix_Identity; } catch (e) {};
try { KismetMathLibrary.Identity = KismetMathLibrary.Matrix_Identity; } catch (e) {};
try { KismetMathLibrary.prototype.GetUnitAxis = KismetMathLibrary.prototype.Matrix_GetUnitAxis; } catch (e) {};
try { KismetMathLibrary.GetUnitAxis = KismetMathLibrary.Matrix_GetUnitAxis; } catch (e) {};
try { KismetMathLibrary.prototype.GetUnitAxes = KismetMathLibrary.prototype.Matrix_GetUnitAxes; } catch (e) {};
try { KismetMathLibrary.GetUnitAxes = KismetMathLibrary.Matrix_GetUnitAxes; } catch (e) {};
try { KismetMathLibrary.prototype.GetTransposed = KismetMathLibrary.prototype.Matrix_GetTransposed; } catch (e) {};
try { KismetMathLibrary.GetTransposed = KismetMathLibrary.Matrix_GetTransposed; } catch (e) {};
try { KismetMathLibrary.prototype.GetTransposeAdjoint = KismetMathLibrary.prototype.Matrix_GetTransposeAdjoint; } catch (e) {};
try { KismetMathLibrary.GetTransposeAdjoint = KismetMathLibrary.Matrix_GetTransposeAdjoint; } catch (e) {};
try { KismetMathLibrary.prototype.GetScaleVector = KismetMathLibrary.prototype.Matrix_GetScaleVector; } catch (e) {};
try { KismetMathLibrary.GetScaleVector = KismetMathLibrary.Matrix_GetScaleVector; } catch (e) {};
try { KismetMathLibrary.prototype.GetScaledAxis = KismetMathLibrary.prototype.Matrix_GetScaledAxis; } catch (e) {};
try { KismetMathLibrary.GetScaledAxis = KismetMathLibrary.Matrix_GetScaledAxis; } catch (e) {};
try { KismetMathLibrary.prototype.GetScaledAxes = KismetMathLibrary.prototype.Matrix_GetScaledAxes; } catch (e) {};
try { KismetMathLibrary.GetScaledAxes = KismetMathLibrary.Matrix_GetScaledAxes; } catch (e) {};
try { KismetMathLibrary.prototype.GetRotationDeterminant = KismetMathLibrary.prototype.Matrix_GetRotDeterminant; } catch (e) {};
try { KismetMathLibrary.GetRotationDeterminant = KismetMathLibrary.Matrix_GetRotDeterminant; } catch (e) {};
try { KismetMathLibrary.prototype.GetRotator = KismetMathLibrary.prototype.Matrix_GetRotator; } catch (e) {};
try { KismetMathLibrary.GetRotator = KismetMathLibrary.Matrix_GetRotator; } catch (e) {};
try { KismetMathLibrary.prototype.GetOrigin = KismetMathLibrary.prototype.Matrix_GetOrigin; } catch (e) {};
try { KismetMathLibrary.GetOrigin = KismetMathLibrary.Matrix_GetOrigin; } catch (e) {};
try { KismetMathLibrary.prototype.GetMaximumAxisScale = KismetMathLibrary.prototype.Matrix_GetMaximumAxisScale; } catch (e) {};
try { KismetMathLibrary.GetMaximumAxisScale = KismetMathLibrary.Matrix_GetMaximumAxisScale; } catch (e) {};
try { KismetMathLibrary.prototype.GetMatrixWithoutScale = KismetMathLibrary.prototype.Matrix_GetMatrixWithoutScale; } catch (e) {};
try { KismetMathLibrary.GetMatrixWithoutScale = KismetMathLibrary.Matrix_GetMatrixWithoutScale; } catch (e) {};
try { KismetMathLibrary.prototype.GetInverse = KismetMathLibrary.prototype.Matrix_GetInverse; } catch (e) {};
try { KismetMathLibrary.GetInverse = KismetMathLibrary.Matrix_GetInverse; } catch (e) {};
try { KismetMathLibrary.prototype.GetFrustumTopPlane = KismetMathLibrary.prototype.Matrix_GetFrustumTopPlane; } catch (e) {};
try { KismetMathLibrary.GetFrustumTopPlane = KismetMathLibrary.Matrix_GetFrustumTopPlane; } catch (e) {};
try { KismetMathLibrary.prototype.GetFrustumRightPlane = KismetMathLibrary.prototype.Matrix_GetFrustumRightPlane; } catch (e) {};
try { KismetMathLibrary.GetFrustumRightPlane = KismetMathLibrary.Matrix_GetFrustumRightPlane; } catch (e) {};
try { KismetMathLibrary.prototype.GetFrustumNearPlane = KismetMathLibrary.prototype.Matrix_GetFrustumNearPlane; } catch (e) {};
try { KismetMathLibrary.GetFrustumNearPlane = KismetMathLibrary.Matrix_GetFrustumNearPlane; } catch (e) {};
try { KismetMathLibrary.prototype.GetFrustumLeftPlane = KismetMathLibrary.prototype.Matrix_GetFrustumLeftPlane; } catch (e) {};
try { KismetMathLibrary.GetFrustumLeftPlane = KismetMathLibrary.Matrix_GetFrustumLeftPlane; } catch (e) {};
try { KismetMathLibrary.prototype.GetFrustumFarPlane = KismetMathLibrary.prototype.Matrix_GetFrustumFarPlane; } catch (e) {};
try { KismetMathLibrary.GetFrustumFarPlane = KismetMathLibrary.Matrix_GetFrustumFarPlane; } catch (e) {};
try { KismetMathLibrary.prototype.GetFrustumBottomPlane = KismetMathLibrary.prototype.Matrix_GetFrustumBottomPlane; } catch (e) {};
try { KismetMathLibrary.GetFrustumBottomPlane = KismetMathLibrary.Matrix_GetFrustumBottomPlane; } catch (e) {};
try { KismetMathLibrary.prototype.GetDeterminant = KismetMathLibrary.prototype.Matrix_GetDeterminant; } catch (e) {};
try { KismetMathLibrary.GetDeterminant = KismetMathLibrary.Matrix_GetDeterminant; } catch (e) {};
try { KismetMathLibrary.prototype.GetColumn = KismetMathLibrary.prototype.Matrix_GetColumn; } catch (e) {};
try { KismetMathLibrary.GetColumn = KismetMathLibrary.Matrix_GetColumn; } catch (e) {};
try { KismetMathLibrary.prototype.ContainsNaN = KismetMathLibrary.prototype.Matrix_ContainsNaN; } catch (e) {};
try { KismetMathLibrary.ContainsNaN = KismetMathLibrary.Matrix_ContainsNaN; } catch (e) {};
try { KismetMathLibrary.prototype.ConcatenateTranslation = KismetMathLibrary.prototype.Matrix_ConcatenateTranslation; } catch (e) {};
try { KismetMathLibrary.ConcatenateTranslation = KismetMathLibrary.Matrix_ConcatenateTranslation; } catch (e) {};
try { KismetMathLibrary.prototype.ApplyScale = KismetMathLibrary.prototype.Matrix_ApplyScale; } catch (e) {};
try { KismetMathLibrary.ApplyScale = KismetMathLibrary.Matrix_ApplyScale; } catch (e) {};
try { KismetMathLibrary.prototype.LinePlaneIntersection = KismetMathLibrary.prototype.LinePlaneIntersection_OriginNormal; } catch (e) {};
try { KismetMathLibrary.LinePlaneIntersection = KismetMathLibrary.LinePlaneIntersection_OriginNormal; } catch (e) {};
try { KismetMathLibrary.prototype.LerpUsingHSV = KismetMathLibrary.prototype.LinearColorLerpUsingHSV; } catch (e) {};
try { KismetMathLibrary.LerpUsingHSV = KismetMathLibrary.LinearColorLerpUsingHSV; } catch (e) {};
try { KismetMathLibrary.prototype.Lerp = KismetMathLibrary.prototype.LinearColorLerp; } catch (e) {};
try { KismetMathLibrary.Lerp = KismetMathLibrary.LinearColorLerp; } catch (e) {};
try { KismetMathLibrary.prototype.ToRGBE = KismetMathLibrary.prototype.LinearColor_ToRGBE; } catch (e) {};
try { KismetMathLibrary.ToRGBE = KismetMathLibrary.LinearColor_ToRGBE; } catch (e) {};
try { KismetMathLibrary.prototype.NewOpacity = KismetMathLibrary.prototype.LinearColor_ToNewOpacity; } catch (e) {};
try { KismetMathLibrary.NewOpacity = KismetMathLibrary.LinearColor_ToNewOpacity; } catch (e) {};
try { KismetMathLibrary.prototype.NearEqual = KismetMathLibrary.prototype.LinearColor_IsNearEqual; } catch (e) {};
try { KismetMathLibrary.NearEqual = KismetMathLibrary.LinearColor_IsNearEqual; } catch (e) {};
try { KismetMathLibrary.prototype.Min = KismetMathLibrary.prototype.LinearColor_GetMin; } catch (e) {};
try { KismetMathLibrary.Min = KismetMathLibrary.LinearColor_GetMin; } catch (e) {};
try { KismetMathLibrary.prototype.Max = KismetMathLibrary.prototype.LinearColor_GetMax; } catch (e) {};
try { KismetMathLibrary.Max = KismetMathLibrary.LinearColor_GetMax; } catch (e) {};
try { KismetMathLibrary.prototype.Luminance = KismetMathLibrary.prototype.LinearColor_GetLuminance; } catch (e) {};
try { KismetMathLibrary.Luminance = KismetMathLibrary.LinearColor_GetLuminance; } catch (e) {};
try { KismetMathLibrary.prototype.Distance = KismetMathLibrary.prototype.LinearColor_Distance; } catch (e) {};
try { KismetMathLibrary.Distance = KismetMathLibrary.LinearColor_Distance; } catch (e) {};
try { KismetMathLibrary.prototype.Desaturate = KismetMathLibrary.prototype.LinearColor_Desaturated; } catch (e) {};
try { KismetMathLibrary.Desaturate = KismetMathLibrary.LinearColor_Desaturated; } catch (e) {};
try { KismetMathLibrary.prototype.UnrotateVector = KismetMathLibrary.prototype.LessLess_VectorRotator; } catch (e) {};
try { KismetMathLibrary.UnrotateVector = KismetMathLibrary.LessLess_VectorRotator; } catch (e) {};
try { KismetMathLibrary.prototype.IsPointInBoxWithTransform = KismetMathLibrary.prototype.IsPointInBoxWithTransform_Box; } catch (e) {};
try { KismetMathLibrary.IsPointInBoxWithTransform = KismetMathLibrary.IsPointInBoxWithTransform_Box; } catch (e) {};
try { KismetMathLibrary.prototype.IsPointInBox = KismetMathLibrary.prototype.IsPointInBox_Box; } catch (e) {};
try { KismetMathLibrary.IsPointInBox = KismetMathLibrary.IsPointInBox_Box; } catch (e) {};
try { KismetMathLibrary.prototype.InRange = KismetMathLibrary.prototype.InRange_IntInt; } catch (e) {};
try { KismetMathLibrary.InRange = KismetMathLibrary.InRange_IntInt; } catch (e) {};
try { KismetMathLibrary.prototype.InRange = KismetMathLibrary.prototype.InRange_Int64Int64; } catch (e) {};
try { KismetMathLibrary.InRange = KismetMathLibrary.InRange_Int64Int64; } catch (e) {};
try { KismetMathLibrary.prototype.InRange = KismetMathLibrary.prototype.InRange_FloatFloat; } catch (e) {};
try { KismetMathLibrary.InRange = KismetMathLibrary.InRange_FloatFloat; } catch (e) {};
try { KismetMathLibrary.prototype.HSVtoRGBlinearcolor = KismetMathLibrary.prototype.HSVToRGBLinear; } catch (e) {};
try { KismetMathLibrary.HSVtoRGBlinearcolor = KismetMathLibrary.HSVToRGBLinear; } catch (e) {};
try { KismetMathLibrary.prototype.HSVtoRGB = KismetMathLibrary.prototype.HSVToRGB_Vector; } catch (e) {};
try { KismetMathLibrary.HSVtoRGB = KismetMathLibrary.HSVToRGB_Vector; } catch (e) {};
try { KismetMathLibrary.prototype.SnapToGrid = KismetMathLibrary.prototype.GridSnap_Float; } catch (e) {};
try { KismetMathLibrary.SnapToGrid = KismetMathLibrary.GridSnap_Float; } catch (e) {};
try { KismetMathLibrary.prototype.RotateVector = KismetMathLibrary.prototype.GreaterGreater_VectorRotator; } catch (e) {};
try { KismetMathLibrary.RotateVector = KismetMathLibrary.GreaterGreater_VectorRotator; } catch (e) {};
try { KismetMathLibrary.prototype.GetUnitDirection = KismetMathLibrary.prototype.GetDirectionUnitVector; } catch (e) {};
try { KismetMathLibrary.GetUnitDirection = KismetMathLibrary.GetDirectionUnitVector; } catch (e) {};
try { KismetMathLibrary.prototype.Wrap = KismetMathLibrary.prototype.FWrap; } catch (e) {};
try { KismetMathLibrary.Wrap = KismetMathLibrary.FWrap; } catch (e) {};
try { KismetMathLibrary.prototype.Truncate = KismetMathLibrary.prototype.FTruncVector; } catch (e) {};
try { KismetMathLibrary.Truncate = KismetMathLibrary.FTruncVector; } catch (e) {};
try { KismetMathLibrary.prototype.TruncatetoInteger64 = KismetMathLibrary.prototype.FTrunc64; } catch (e) {};
try { KismetMathLibrary.TruncatetoInteger64 = KismetMathLibrary.FTrunc64; } catch (e) {};
try { KismetMathLibrary.prototype.Truncate = KismetMathLibrary.prototype.FTrunc; } catch (e) {};
try { KismetMathLibrary.Truncate = KismetMathLibrary.FTrunc; } catch (e) {};
try { KismetMathLibrary.prototype.Division = KismetMathLibrary.prototype.FMod64; } catch (e) {};
try { KismetMathLibrary.Division = KismetMathLibrary.FMod64; } catch (e) {};
try { KismetMathLibrary.prototype.Division = KismetMathLibrary.prototype.FMod; } catch (e) {};
try { KismetMathLibrary.Division = KismetMathLibrary.FMod; } catch (e) {};
try { KismetMathLibrary.prototype.Min = KismetMathLibrary.prototype.FMin; } catch (e) {};
try { KismetMathLibrary.Min = KismetMathLibrary.FMin; } catch (e) {};
try { KismetMathLibrary.prototype.Max = KismetMathLibrary.prototype.FMax; } catch (e) {};
try { KismetMathLibrary.Max = KismetMathLibrary.FMax; } catch (e) {};
try { KismetMathLibrary.prototype.FloortoInteger64 = KismetMathLibrary.prototype.FFloor64; } catch (e) {};
try { KismetMathLibrary.FloortoInteger64 = KismetMathLibrary.FFloor64; } catch (e) {};
try { KismetMathLibrary.prototype.Floor = KismetMathLibrary.prototype.FFloor; } catch (e) {};
try { KismetMathLibrary.Floor = KismetMathLibrary.FFloor; } catch (e) {};
try { KismetMathLibrary.prototype.Clamp = KismetMathLibrary.prototype.FClamp; } catch (e) {};
try { KismetMathLibrary.Clamp = KismetMathLibrary.FClamp; } catch (e) {};
try { KismetMathLibrary.prototype.CeiltoInteger64 = KismetMathLibrary.prototype.FCeil64; } catch (e) {};
try { KismetMathLibrary.CeiltoInteger64 = KismetMathLibrary.FCeil64; } catch (e) {};
try { KismetMathLibrary.prototype.Ceil = KismetMathLibrary.prototype.FCeil; } catch (e) {};
try { KismetMathLibrary.Ceil = KismetMathLibrary.FCeil; } catch (e) {};
try { KismetMathLibrary.prototype.EqualExactly = KismetMathLibrary.prototype.EqualExactly_VectorVector; } catch (e) {};
try { KismetMathLibrary.EqualExactly = KismetMathLibrary.EqualExactly_VectorVector; } catch (e) {};
try { KismetMathLibrary.prototype.EqualExactly = KismetMathLibrary.prototype.EqualExactly_Vector4Vector4; } catch (e) {};
try { KismetMathLibrary.EqualExactly = KismetMathLibrary.EqualExactly_Vector4Vector4; } catch (e) {};
try { KismetMathLibrary.prototype.EqualExactly = KismetMathLibrary.prototype.EqualExactly_Vector2DVector2D; } catch (e) {};
try { KismetMathLibrary.EqualExactly = KismetMathLibrary.EqualExactly_Vector2DVector2D; } catch (e) {};
try { KismetMathLibrary.prototype.Equal = KismetMathLibrary.prototype.EqualEqual_VectorVector; } catch (e) {};
try { KismetMathLibrary.Equal = KismetMathLibrary.EqualEqual_VectorVector; } catch (e) {};
try { KismetMathLibrary.prototype.Equal = KismetMathLibrary.prototype.EqualEqual_Vector4Vector4; } catch (e) {};
try { KismetMathLibrary.Equal = KismetMathLibrary.EqualEqual_Vector4Vector4; } catch (e) {};
try { KismetMathLibrary.prototype.Equal = KismetMathLibrary.prototype.EqualEqual_Vector2DVector2D; } catch (e) {};
try { KismetMathLibrary.Equal = KismetMathLibrary.EqualEqual_Vector2DVector2D; } catch (e) {};
try { KismetMathLibrary.prototype.Equal = KismetMathLibrary.prototype.EqualEqual_TransformTransform; } catch (e) {};
try { KismetMathLibrary.Equal = KismetMathLibrary.EqualEqual_TransformTransform; } catch (e) {};
try { KismetMathLibrary.prototype.Equal = KismetMathLibrary.prototype.EqualEqual_TimespanTimespan; } catch (e) {};
try { KismetMathLibrary.Equal = KismetMathLibrary.EqualEqual_TimespanTimespan; } catch (e) {};
try { KismetMathLibrary.prototype.Equal = KismetMathLibrary.prototype.EqualEqual_RotatorRotator; } catch (e) {};
try { KismetMathLibrary.Equal = KismetMathLibrary.EqualEqual_RotatorRotator; } catch (e) {};
try { KismetMathLibrary.prototype.Equal = KismetMathLibrary.prototype.EqualEqual_QuatQuat; } catch (e) {};
try { KismetMathLibrary.Equal = KismetMathLibrary.EqualEqual_QuatQuat; } catch (e) {};
try { KismetMathLibrary.prototype.Equal = KismetMathLibrary.prototype.EqualEqual_ObjectObject; } catch (e) {};
try { KismetMathLibrary.Equal = KismetMathLibrary.EqualEqual_ObjectObject; } catch (e) {};
try { KismetMathLibrary.prototype.Equal = KismetMathLibrary.prototype.EqualEqual_NameName; } catch (e) {};
try { KismetMathLibrary.Equal = KismetMathLibrary.EqualEqual_NameName; } catch (e) {};
try { KismetMathLibrary.prototype.Equal = KismetMathLibrary.prototype.EqualEqual_MatrixMatrix; } catch (e) {};
try { KismetMathLibrary.Equal = KismetMathLibrary.EqualEqual_MatrixMatrix; } catch (e) {};
try { KismetMathLibrary.prototype.Equal = KismetMathLibrary.prototype.EqualEqual_LinearColorLinearColor; } catch (e) {};
try { KismetMathLibrary.Equal = KismetMathLibrary.EqualEqual_LinearColorLinearColor; } catch (e) {};
try { KismetMathLibrary.prototype.Equal = KismetMathLibrary.prototype.EqualEqual_IntInt; } catch (e) {};
try { KismetMathLibrary.Equal = KismetMathLibrary.EqualEqual_IntInt; } catch (e) {};
try { KismetMathLibrary.prototype.Equal = KismetMathLibrary.prototype.EqualEqual_Int64Int64; } catch (e) {};
try { KismetMathLibrary.Equal = KismetMathLibrary.EqualEqual_Int64Int64; } catch (e) {};
try { KismetMathLibrary.prototype.Equal = KismetMathLibrary.prototype.EqualEqual_DoubleDouble; } catch (e) {};
try { KismetMathLibrary.Equal = KismetMathLibrary.EqualEqual_DoubleDouble; } catch (e) {};
try { KismetMathLibrary.prototype.Equal = KismetMathLibrary.prototype.EqualEqual_DateTimeDateTime; } catch (e) {};
try { KismetMathLibrary.Equal = KismetMathLibrary.EqualEqual_DateTimeDateTime; } catch (e) {};
try { KismetMathLibrary.prototype.Equal = KismetMathLibrary.prototype.EqualEqual_ClassClass; } catch (e) {};
try { KismetMathLibrary.Equal = KismetMathLibrary.EqualEqual_ClassClass; } catch (e) {};
try { KismetMathLibrary.prototype.Equal = KismetMathLibrary.prototype.EqualEqual_ByteByte; } catch (e) {};
try { KismetMathLibrary.Equal = KismetMathLibrary.EqualEqual_ByteByte; } catch (e) {};
try { KismetMathLibrary.prototype.Equal = KismetMathLibrary.prototype.EqualEqual_BoolBool; } catch (e) {};
try { KismetMathLibrary.Equal = KismetMathLibrary.EqualEqual_BoolBool; } catch (e) {};
try { KismetMathLibrary.prototype.Equal = KismetMathLibrary.prototype.Equal_IntPointIntPoint; } catch (e) {};
try { KismetMathLibrary.Equal = KismetMathLibrary.Equal_IntPointIntPoint; } catch (e) {};
try { KismetMathLibrary.prototype.DynamicWeightedMovingAverageVector = KismetMathLibrary.prototype.DynamicWeightedMovingAverage_FVector; } catch (e) {};
try { KismetMathLibrary.DynamicWeightedMovingAverageVector = KismetMathLibrary.DynamicWeightedMovingAverage_FVector; } catch (e) {};
try { KismetMathLibrary.prototype.DynamicWeightedMovingAverageRotator = KismetMathLibrary.prototype.DynamicWeightedMovingAverage_FRotator; } catch (e) {};
try { KismetMathLibrary.DynamicWeightedMovingAverageRotator = KismetMathLibrary.DynamicWeightedMovingAverage_FRotator; } catch (e) {};
try { KismetMathLibrary.prototype.DynamicWeightedMovingAverageFloat = KismetMathLibrary.prototype.DynamicWeightedMovingAverage_Float; } catch (e) {};
try { KismetMathLibrary.DynamicWeightedMovingAverageFloat = KismetMathLibrary.DynamicWeightedMovingAverage_Float; } catch (e) {};
try { KismetMathLibrary.prototype.DotProduct = KismetMathLibrary.prototype.DotProduct2D; } catch (e) {};
try { KismetMathLibrary.DotProduct = KismetMathLibrary.DotProduct2D; } catch (e) {};
try { KismetMathLibrary.prototype.DotProduct = KismetMathLibrary.prototype.Dot_VectorVector; } catch (e) {};
try { KismetMathLibrary.DotProduct = KismetMathLibrary.Dot_VectorVector; } catch (e) {};
try { KismetMathLibrary.prototype.Tan = KismetMathLibrary.prototype.DegTan; } catch (e) {};
try { KismetMathLibrary.Tan = KismetMathLibrary.DegTan; } catch (e) {};
try { KismetMathLibrary.prototype.Sin = KismetMathLibrary.prototype.DegSin; } catch (e) {};
try { KismetMathLibrary.Sin = KismetMathLibrary.DegSin; } catch (e) {};
try { KismetMathLibrary.prototype.Cos = KismetMathLibrary.prototype.DegCos; } catch (e) {};
try { KismetMathLibrary.Cos = KismetMathLibrary.DegCos; } catch (e) {};
try { KismetMathLibrary.prototype.Atan2 = KismetMathLibrary.prototype.DegAtan2; } catch (e) {};
try { KismetMathLibrary.Atan2 = KismetMathLibrary.DegAtan2; } catch (e) {};
try { KismetMathLibrary.prototype.Atan = KismetMathLibrary.prototype.DegAtan; } catch (e) {};
try { KismetMathLibrary.Atan = KismetMathLibrary.DegAtan; } catch (e) {};
try { KismetMathLibrary.prototype.Asin = KismetMathLibrary.prototype.DegAsin; } catch (e) {};
try { KismetMathLibrary.Asin = KismetMathLibrary.DegAsin; } catch (e) {};
try { KismetMathLibrary.prototype.Acos = KismetMathLibrary.prototype.DegAcos; } catch (e) {};
try { KismetMathLibrary.Acos = KismetMathLibrary.DegAcos; } catch (e) {};
try { KismetMathLibrary.prototype.MinValue = KismetMathLibrary.prototype.DateTimeMinValue; } catch (e) {};
try { KismetMathLibrary.MinValue = KismetMathLibrary.DateTimeMinValue; } catch (e) {};
try { KismetMathLibrary.prototype.MaxValue = KismetMathLibrary.prototype.DateTimeMaxValue; } catch (e) {};
try { KismetMathLibrary.MaxValue = KismetMathLibrary.DateTimeMaxValue; } catch (e) {};
try { KismetMathLibrary.prototype.CrossProduct = KismetMathLibrary.prototype.CrossProduct2D; } catch (e) {};
try { KismetMathLibrary.CrossProduct = KismetMathLibrary.CrossProduct2D; } catch (e) {};
try { KismetMathLibrary.prototype.CrossProduct = KismetMathLibrary.prototype.Cross_VectorVector; } catch (e) {};
try { KismetMathLibrary.CrossProduct = KismetMathLibrary.Cross_VectorVector; } catch (e) {};
try { KismetMathLibrary.prototype.ToVector2D = KismetMathLibrary.prototype.Conv_VectorToVector2D; } catch (e) {};
try { KismetMathLibrary.ToVector2D = KismetMathLibrary.Conv_VectorToVector2D; } catch (e) {};
try { KismetMathLibrary.prototype.ToTransform = KismetMathLibrary.prototype.Conv_VectorToTransform; } catch (e) {};
try { KismetMathLibrary.ToTransform = KismetMathLibrary.Conv_VectorToTransform; } catch (e) {};
try { KismetMathLibrary.prototype.RotationFromXVector = KismetMathLibrary.prototype.Conv_VectorToRotator; } catch (e) {};
try { KismetMathLibrary.RotationFromXVector = KismetMathLibrary.Conv_VectorToRotator; } catch (e) {};
try { KismetMathLibrary.prototype.ToQuaternion = KismetMathLibrary.prototype.Conv_VectorToQuaternion; } catch (e) {};
try { KismetMathLibrary.ToQuaternion = KismetMathLibrary.Conv_VectorToQuaternion; } catch (e) {};
try { KismetMathLibrary.prototype.ToLinearColor = KismetMathLibrary.prototype.Conv_VectorToLinearColor; } catch (e) {};
try { KismetMathLibrary.ToLinearColor = KismetMathLibrary.Conv_VectorToLinearColor; } catch (e) {};
try { KismetMathLibrary.prototype.ToVector = KismetMathLibrary.prototype.Conv_Vector4ToVector; } catch (e) {};
try { KismetMathLibrary.ToVector = KismetMathLibrary.Conv_Vector4ToVector; } catch (e) {};
try { KismetMathLibrary.prototype.ToRotation = KismetMathLibrary.prototype.Conv_Vector4ToRotator; } catch (e) {};
try { KismetMathLibrary.ToRotation = KismetMathLibrary.Conv_Vector4ToRotator; } catch (e) {};
try { KismetMathLibrary.prototype.ToQuaternion = KismetMathLibrary.prototype.Conv_Vector4ToQuaternion; } catch (e) {};
try { KismetMathLibrary.ToQuaternion = KismetMathLibrary.Conv_Vector4ToQuaternion; } catch (e) {};
try { KismetMathLibrary.prototype.ToVector = KismetMathLibrary.prototype.Conv_Vector2DToVector; } catch (e) {};
try { KismetMathLibrary.ToVector = KismetMathLibrary.Conv_Vector2DToVector; } catch (e) {};
try { KismetMathLibrary.prototype.ToIntPoint = KismetMathLibrary.prototype.Conv_Vector2DToIntPoint; } catch (e) {};
try { KismetMathLibrary.ToIntPoint = KismetMathLibrary.Conv_Vector2DToIntPoint; } catch (e) {};
try { KismetMathLibrary.prototype.ToMatrix = KismetMathLibrary.prototype.Conv_TransformToMatrix; } catch (e) {};
try { KismetMathLibrary.ToMatrix = KismetMathLibrary.Conv_TransformToMatrix; } catch (e) {};
try { KismetMathLibrary.prototype.GetRotationXVector = KismetMathLibrary.prototype.Conv_RotatorToVector; } catch (e) {};
try { KismetMathLibrary.GetRotationXVector = KismetMathLibrary.Conv_RotatorToVector; } catch (e) {};
try { KismetMathLibrary.prototype.ToTransform = KismetMathLibrary.prototype.Conv_RotatorToTransform; } catch (e) {};
try { KismetMathLibrary.ToTransform = KismetMathLibrary.Conv_RotatorToTransform; } catch (e) {};
try { KismetMathLibrary.prototype.ToQuaternion = KismetMathLibrary.prototype.Conv_RotatorToQuaternion; } catch (e) {};
try { KismetMathLibrary.ToQuaternion = KismetMathLibrary.Conv_RotatorToQuaternion; } catch (e) {};
try { KismetMathLibrary.prototype.ToTransform = KismetMathLibrary.prototype.Conv_MatrixToTransform; } catch (e) {};
try { KismetMathLibrary.ToTransform = KismetMathLibrary.Conv_MatrixToTransform; } catch (e) {};
try { KismetMathLibrary.prototype.ToRotator = KismetMathLibrary.prototype.Conv_MatrixToRotator; } catch (e) {};
try { KismetMathLibrary.ToRotator = KismetMathLibrary.Conv_MatrixToRotator; } catch (e) {};
try { KismetMathLibrary.prototype.ToVector = KismetMathLibrary.prototype.Conv_LinearColorToVector; } catch (e) {};
try { KismetMathLibrary.ToVector = KismetMathLibrary.Conv_LinearColorToVector; } catch (e) {};
try { KismetMathLibrary.prototype.ToColor = KismetMathLibrary.prototype.Conv_LinearColorToColor; } catch (e) {};
try { KismetMathLibrary.ToColor = KismetMathLibrary.Conv_LinearColorToColor; } catch (e) {};
try { KismetMathLibrary.prototype.ToVector = KismetMathLibrary.prototype.Conv_IntVectorToVector; } catch (e) {};
try { KismetMathLibrary.ToVector = KismetMathLibrary.Conv_IntVectorToVector; } catch (e) {};
try { KismetMathLibrary.prototype.ToVector = KismetMathLibrary.prototype.Conv_IntToVector; } catch (e) {};
try { KismetMathLibrary.ToVector = KismetMathLibrary.Conv_IntToVector; } catch (e) {};
try { KismetMathLibrary.prototype.ToIntVector = KismetMathLibrary.prototype.Conv_IntToIntVector; } catch (e) {};
try { KismetMathLibrary.ToIntVector = KismetMathLibrary.Conv_IntToIntVector; } catch (e) {};
try { KismetMathLibrary.prototype.ToInteger64 = KismetMathLibrary.prototype.Conv_IntToInt64; } catch (e) {};
try { KismetMathLibrary.ToInteger64 = KismetMathLibrary.Conv_IntToInt64; } catch (e) {};
try { KismetMathLibrary.prototype.ToFloat = KismetMathLibrary.prototype.Conv_IntToDouble; } catch (e) {};
try { KismetMathLibrary.ToFloat = KismetMathLibrary.Conv_IntToDouble; } catch (e) {};
try { KismetMathLibrary.prototype.ToByte = KismetMathLibrary.prototype.Conv_IntToByte; } catch (e) {};
try { KismetMathLibrary.ToByte = KismetMathLibrary.Conv_IntToByte; } catch (e) {};
try { KismetMathLibrary.prototype.ToBoolean = KismetMathLibrary.prototype.Conv_IntToBool; } catch (e) {};
try { KismetMathLibrary.ToBoolean = KismetMathLibrary.Conv_IntToBool; } catch (e) {};
try { KismetMathLibrary.prototype.ToVector2D = KismetMathLibrary.prototype.Conv_IntPointToVector2D; } catch (e) {};
try { KismetMathLibrary.ToVector2D = KismetMathLibrary.Conv_IntPointToVector2D; } catch (e) {};
try { KismetMathLibrary.prototype.ToInteger = KismetMathLibrary.prototype.Conv_Int64ToInt; } catch (e) {};
try { KismetMathLibrary.ToInteger = KismetMathLibrary.Conv_Int64ToInt; } catch (e) {};
try { KismetMathLibrary.prototype.ToFloat = KismetMathLibrary.prototype.Conv_Int64ToDouble; } catch (e) {};
try { KismetMathLibrary.ToFloat = KismetMathLibrary.Conv_Int64ToDouble; } catch (e) {};
try { KismetMathLibrary.prototype.ToByte = KismetMathLibrary.prototype.Conv_Int64ToByte; } catch (e) {};
try { KismetMathLibrary.ToByte = KismetMathLibrary.Conv_Int64ToByte; } catch (e) {};
try { KismetMathLibrary.prototype.ToVector2D = KismetMathLibrary.prototype.Conv_DoubleToVector2D; } catch (e) {};
try { KismetMathLibrary.ToVector2D = KismetMathLibrary.Conv_DoubleToVector2D; } catch (e) {};
try { KismetMathLibrary.prototype.ToVector = KismetMathLibrary.prototype.Conv_DoubleToVector; } catch (e) {};
try { KismetMathLibrary.ToVector = KismetMathLibrary.Conv_DoubleToVector; } catch (e) {};
try { KismetMathLibrary.prototype.ToLinearColor = KismetMathLibrary.prototype.Conv_DoubleToLinearColor; } catch (e) {};
try { KismetMathLibrary.ToLinearColor = KismetMathLibrary.Conv_DoubleToLinearColor; } catch (e) {};
try { KismetMathLibrary.prototype.ToInteger64 = KismetMathLibrary.prototype.Conv_DoubleToInt64; } catch (e) {};
try { KismetMathLibrary.ToInteger64 = KismetMathLibrary.Conv_DoubleToInt64; } catch (e) {};
try { KismetMathLibrary.prototype.ToLinearColor = KismetMathLibrary.prototype.Conv_ColorToLinearColor; } catch (e) {};
try { KismetMathLibrary.ToLinearColor = KismetMathLibrary.Conv_ColorToLinearColor; } catch (e) {};
try { KismetMathLibrary.prototype.ToInteger64 = KismetMathLibrary.prototype.Conv_ByteToInt64; } catch (e) {};
try { KismetMathLibrary.ToInteger64 = KismetMathLibrary.Conv_ByteToInt64; } catch (e) {};
try { KismetMathLibrary.prototype.ToInteger = KismetMathLibrary.prototype.Conv_ByteToInt; } catch (e) {};
try { KismetMathLibrary.ToInteger = KismetMathLibrary.Conv_ByteToInt; } catch (e) {};
try { KismetMathLibrary.prototype.ToFloat = KismetMathLibrary.prototype.Conv_ByteToDouble; } catch (e) {};
try { KismetMathLibrary.ToFloat = KismetMathLibrary.Conv_ByteToDouble; } catch (e) {};
try { KismetMathLibrary.prototype.ToInteger = KismetMathLibrary.prototype.Conv_BoolToInt; } catch (e) {};
try { KismetMathLibrary.ToInteger = KismetMathLibrary.Conv_BoolToInt; } catch (e) {};
try { KismetMathLibrary.prototype.ToFloat = KismetMathLibrary.prototype.Conv_BoolToDouble; } catch (e) {};
try { KismetMathLibrary.ToFloat = KismetMathLibrary.Conv_BoolToDouble; } catch (e) {};
try { KismetMathLibrary.prototype.ToByte = KismetMathLibrary.prototype.Conv_BoolToByte; } catch (e) {};
try { KismetMathLibrary.ToByte = KismetMathLibrary.Conv_BoolToByte; } catch (e) {};
try { KismetMathLibrary.prototype.CombineRotators = KismetMathLibrary.prototype.ComposeRotators; } catch (e) {};
try { KismetMathLibrary.CombineRotators = KismetMathLibrary.ComposeRotators; } catch (e) {};
try { KismetMathLibrary.prototype.Clamp = KismetMathLibrary.prototype.ClampInt64; } catch (e) {};
try { KismetMathLibrary.Clamp = KismetMathLibrary.ClampInt64; } catch (e) {};
try { KismetMathLibrary.prototype.Interpolate = KismetMathLibrary.prototype.CInterpTo; } catch (e) {};
try { KismetMathLibrary.Interpolate = KismetMathLibrary.CInterpTo; } catch (e) {};
try { KismetMathLibrary.prototype.XORBoolean = KismetMathLibrary.prototype.BooleanXOR; } catch (e) {};
try { KismetMathLibrary.XORBoolean = KismetMathLibrary.BooleanXOR; } catch (e) {};
try { KismetMathLibrary.prototype.ORBoolean = KismetMathLibrary.prototype.BooleanOR; } catch (e) {};
try { KismetMathLibrary.ORBoolean = KismetMathLibrary.BooleanOR; } catch (e) {};
try { KismetMathLibrary.prototype.NORBoolean = KismetMathLibrary.prototype.BooleanNOR; } catch (e) {};
try { KismetMathLibrary.NORBoolean = KismetMathLibrary.BooleanNOR; } catch (e) {};
try { KismetMathLibrary.prototype.NANDBoolean = KismetMathLibrary.prototype.BooleanNAND; } catch (e) {};
try { KismetMathLibrary.NANDBoolean = KismetMathLibrary.BooleanNAND; } catch (e) {};
try { KismetMathLibrary.prototype.ANDBoolean = KismetMathLibrary.prototype.BooleanAND; } catch (e) {};
try { KismetMathLibrary.ANDBoolean = KismetMathLibrary.BooleanAND; } catch (e) {};
try { KismetMathLibrary.prototype.Min = KismetMathLibrary.prototype.BMin; } catch (e) {};
try { KismetMathLibrary.Min = KismetMathLibrary.BMin; } catch (e) {};
try { KismetMathLibrary.prototype.Max = KismetMathLibrary.prototype.BMax; } catch (e) {};
try { KismetMathLibrary.Max = KismetMathLibrary.BMax; } catch (e) {};
try { KismetMathLibrary.prototype.BitwiseAND = KismetMathLibrary.prototype.And_IntInt; } catch (e) {};
try { KismetMathLibrary.BitwiseAND = KismetMathLibrary.And_IntInt; } catch (e) {};
try { KismetMathLibrary.prototype.BitwiseAND = KismetMathLibrary.prototype.And_Int64Int64; } catch (e) {};
try { KismetMathLibrary.BitwiseAND = KismetMathLibrary.And_Int64Int64; } catch (e) {};
try { KismetMathLibrary.prototype.Absolute = KismetMathLibrary.prototype.Abs_Int64; } catch (e) {};
try { KismetMathLibrary.Absolute = KismetMathLibrary.Abs_Int64; } catch (e) {};
try { KismetMathLibrary.prototype.Absolute = KismetMathLibrary.prototype.Abs_Int; } catch (e) {};
try { KismetMathLibrary.Absolute = KismetMathLibrary.Abs_Int; } catch (e) {};
try { KismetMathLibrary.prototype.Absolute = KismetMathLibrary.prototype.Abs; } catch (e) {};
try { KismetMathLibrary.Absolute = KismetMathLibrary.Abs; } catch (e) {};
try { let fnprepatch_732 = KismetRenderingLibrary.prototype.ResizeRenderTarget2D;KismetRenderingLibrary.prototype.ResizeRenderTarget2D = function (TextureRenderTarget, Width = 256, Height = 256) { return fnprepatch_732.call(this, TextureRenderTarget, Width, Height) }; } catch (e) {};
try { let fnprepatch_733 = KismetRenderingLibrary.prototype.RenderTargetCreateStaticTexture2DEditorOnly;KismetRenderingLibrary.prototype.RenderTargetCreateStaticTexture2DEditorOnly = function (RenderTarget, Name = "Texture", CompressionSettings = "TC_Default", MipSettings = "TMGS_FromTextureGroup") { return fnprepatch_733.call(this, RenderTarget, Name, CompressionSettings, MipSettings) }; } catch (e) {};
try { let fnprepatch_734 = KismetRenderingLibrary.prototype.ReadRenderTargetRawUVArea;KismetRenderingLibrary.prototype.ReadRenderTargetRawUVArea = function (WorldContextObject, TextureRenderTarget, Area, bNormalize = true) { return fnprepatch_734.call(this, WorldContextObject, TextureRenderTarget, Area, bNormalize) }; } catch (e) {};
try { let fnprepatch_735 = KismetRenderingLibrary.prototype.ReadRenderTargetRawUV;KismetRenderingLibrary.prototype.ReadRenderTargetRawUV = function (WorldContextObject, TextureRenderTarget, U, V, bNormalize = true) { return fnprepatch_735.call(this, WorldContextObject, TextureRenderTarget, U, V, bNormalize) }; } catch (e) {};
try { let fnprepatch_736 = KismetRenderingLibrary.prototype.ReadRenderTargetRawPixelArea;KismetRenderingLibrary.prototype.ReadRenderTargetRawPixelArea = function (WorldContextObject, TextureRenderTarget, MinX, MinY, MaxX, MaxY, bNormalize = true) { return fnprepatch_736.call(this, WorldContextObject, TextureRenderTarget, MinX, MinY, MaxX, MaxY, bNormalize) }; } catch (e) {};
try { let fnprepatch_737 = KismetRenderingLibrary.prototype.ReadRenderTargetRawPixel;KismetRenderingLibrary.prototype.ReadRenderTargetRawPixel = function (WorldContextObject, TextureRenderTarget, X, Y, bNormalize = true) { return fnprepatch_737.call(this, WorldContextObject, TextureRenderTarget, X, Y, bNormalize) }; } catch (e) {};
try { let fnprepatch_738 = KismetRenderingLibrary.prototype.ReadRenderTargetRaw;KismetRenderingLibrary.prototype.ReadRenderTargetRaw = function (WorldContextObject, TextureRenderTarget, OutLinearSamples, bNormalize = true) { return fnprepatch_738.call(this, WorldContextObject, TextureRenderTarget, OutLinearSamples, bNormalize) }; } catch (e) {};
try { let fnprepatch_739 = KismetRenderingLibrary.prototype.ReadRenderTarget;KismetRenderingLibrary.prototype.ReadRenderTarget = function (WorldContextObject, TextureRenderTarget, OutSamples, bNormalize = true) { return fnprepatch_739.call(this, WorldContextObject, TextureRenderTarget, OutSamples, bNormalize) }; } catch (e) {};
try { let fnprepatch_740 = KismetRenderingLibrary.prototype.CreateRenderTargetVolume;KismetRenderingLibrary.prototype.CreateRenderTargetVolume = function (WorldContextObject, Width = 16, Height = 16, Depth = 16, Format = "RTF_RGBA16f", ClearColor = {"R":0,"G":0,"B":0,"A":1}, bAutoGenerateMipMaps = false, bSupportUAVs = false) { return fnprepatch_740.call(this, WorldContextObject, Width, Height, Depth, Format, ClearColor, bAutoGenerateMipMaps, bSupportUAVs) }; } catch (e) {};
try { let fnprepatch_741 = KismetRenderingLibrary.prototype.CreateRenderTarget2DArray;KismetRenderingLibrary.prototype.CreateRenderTarget2DArray = function (WorldContextObject, Width = 256, Height = 256, Slices = 1, Format = "RTF_RGBA16f", ClearColor = {"R":0,"G":0,"B":0,"A":1}, bAutoGenerateMipMaps = false, bSupportUAVs = false) { return fnprepatch_741.call(this, WorldContextObject, Width, Height, Slices, Format, ClearColor, bAutoGenerateMipMaps, bSupportUAVs) }; } catch (e) {};
try { let fnprepatch_742 = KismetRenderingLibrary.prototype.CreateRenderTarget2D;KismetRenderingLibrary.prototype.CreateRenderTarget2D = function (WorldContextObject, Width = 256, Height = 256, Format = "RTF_RGBA16f", ClearColor = {"R":0,"G":0,"B":0,"A":1}, bAutoGenerateMipMaps = false, bSupportUAVs = false) { return fnprepatch_742.call(this, WorldContextObject, Width, Height, Format, ClearColor, bAutoGenerateMipMaps, bSupportUAVs) }; } catch (e) {};
try { let fnprepatch_743 = KismetRenderingLibrary.prototype.ClearRenderTarget2D;KismetRenderingLibrary.prototype.ClearRenderTarget2D = function (WorldContextObject, TextureRenderTarget, ClearColor = {"R":0,"G":0,"B":0,"A":1}) { return fnprepatch_743.call(this, WorldContextObject, TextureRenderTarget, ClearColor) }; } catch (e) {};
try { KismetRenderingLibrary.prototype.RenderTargetCreateStaticTextureEditorOnly = KismetRenderingLibrary.prototype.RenderTargetCreateStaticTexture2DEditorOnly; } catch (e) {};
try { KismetRenderingLibrary.RenderTargetCreateStaticTextureEditorOnly = KismetRenderingLibrary.RenderTargetCreateStaticTexture2DEditorOnly; } catch (e) {};
try { let fnprepatch_744 = KismetStringLibrary.prototype.StartsWith;KismetStringLibrary.prototype.StartsWith = function (SourceString, InPrefix, SearchCase = "IgnoreCase") { return fnprepatch_744.call(this, SourceString, InPrefix, SearchCase) }; } catch (e) {};
try { let fnprepatch_745 = KismetStringLibrary.prototype.Split;KismetStringLibrary.prototype.Split = function (SourceString, InStr, LeftS, RightS, SearchCase = "IgnoreCase", SearchDir = "FromStart") { return fnprepatch_745.call(this, SourceString, InStr, LeftS, RightS, SearchCase, SearchDir) }; } catch (e) {};
try { let fnprepatch_746 = KismetStringLibrary.prototype.ReplaceInline;KismetStringLibrary.prototype.ReplaceInline = function (SourceString, SearchText, ReplacementText, SearchCase = "IgnoreCase") { return fnprepatch_746.call(this, SourceString, SearchText, ReplacementText, SearchCase) }; } catch (e) {};
try { let fnprepatch_747 = KismetStringLibrary.prototype.Replace;KismetStringLibrary.prototype.Replace = function (SourceString, From, To, SearchCase = "IgnoreCase") { return fnprepatch_747.call(this, SourceString, From, To, SearchCase) }; } catch (e) {};
try { let fnprepatch_748 = KismetStringLibrary.prototype.ParseIntoArray;KismetStringLibrary.prototype.ParseIntoArray = function (SourceString, Delimiter = " ", CullEmptyStrings = true) { return fnprepatch_748.call(this, SourceString, Delimiter, CullEmptyStrings) }; } catch (e) {};
try { let fnprepatch_749 = KismetStringLibrary.prototype.MatchesWildcard;KismetStringLibrary.prototype.MatchesWildcard = function (SourceString, Wildcard, SearchCase = "IgnoreCase") { return fnprepatch_749.call(this, SourceString, Wildcard, SearchCase) }; } catch (e) {};
try { let fnprepatch_750 = KismetStringLibrary.prototype.JoinStringArray;KismetStringLibrary.prototype.JoinStringArray = function (SourceArray, Separator = " ") { return fnprepatch_750.call(this, SourceArray, Separator) }; } catch (e) {};
try { let fnprepatch_751 = KismetStringLibrary.prototype.GetSubstring;KismetStringLibrary.prototype.GetSubstring = function (SourceString, StartIndex = 0, Length = 1) { return fnprepatch_751.call(this, SourceString, StartIndex, Length) }; } catch (e) {};
try { let fnprepatch_752 = KismetStringLibrary.prototype.GetCharacterAsNumber;KismetStringLibrary.prototype.GetCharacterAsNumber = function (SourceString, Index = 0) { return fnprepatch_752.call(this, SourceString, Index) }; } catch (e) {};
try { let fnprepatch_753 = KismetStringLibrary.prototype.FindSubstring;KismetStringLibrary.prototype.FindSubstring = function (SearchIn, Substring, bUseCase = false, bSearchFromEnd = false, StartPosition = -1) { return fnprepatch_753.call(this, SearchIn, Substring, bUseCase, bSearchFromEnd, StartPosition) }; } catch (e) {};
try { let fnprepatch_754 = KismetStringLibrary.prototype.EndsWith;KismetStringLibrary.prototype.EndsWith = function (SourceString, InSuffix, SearchCase = "IgnoreCase") { return fnprepatch_754.call(this, SourceString, InSuffix, SearchCase) }; } catch (e) {};
try { let fnprepatch_755 = KismetStringLibrary.prototype.Contains;KismetStringLibrary.prototype.Contains = function (SearchIn, Substring, bUseCase = false, bSearchFromEnd = false) { return fnprepatch_755.call(this, SearchIn, Substring, bUseCase, bSearchFromEnd) }; } catch (e) {};
try { KismetStringLibrary.prototype.NotEqualExactly = KismetStringLibrary.prototype.NotEqual_StrStr; } catch (e) {};
try { KismetStringLibrary.NotEqualExactly = KismetStringLibrary.NotEqual_StrStr; } catch (e) {};
try { KismetStringLibrary.prototype.EqualExactly = KismetStringLibrary.prototype.EqualEqual_StrStr; } catch (e) {};
try { KismetStringLibrary.EqualExactly = KismetStringLibrary.EqualEqual_StrStr; } catch (e) {};
try { KismetStringLibrary.prototype.ToString = KismetStringLibrary.prototype.Conv_VectorToString; } catch (e) {};
try { KismetStringLibrary.ToString = KismetStringLibrary.Conv_VectorToString; } catch (e) {};
try { KismetStringLibrary.prototype.ToString = KismetStringLibrary.prototype.Conv_Vector3fToString; } catch (e) {};
try { KismetStringLibrary.ToString = KismetStringLibrary.Conv_Vector3fToString; } catch (e) {};
try { KismetStringLibrary.prototype.ToString = KismetStringLibrary.prototype.Conv_Vector2dToString; } catch (e) {};
try { KismetStringLibrary.ToString = KismetStringLibrary.Conv_Vector2dToString; } catch (e) {};
try { KismetStringLibrary.prototype.ToString = KismetStringLibrary.prototype.Conv_TransformToString; } catch (e) {};
try { KismetStringLibrary.ToString = KismetStringLibrary.Conv_TransformToString; } catch (e) {};
try { KismetStringLibrary.prototype.StringToFloatVector = KismetStringLibrary.prototype.Conv_StringToVector3f; } catch (e) {};
try { KismetStringLibrary.StringToFloatVector = KismetStringLibrary.Conv_StringToVector3f; } catch (e) {};
try { KismetStringLibrary.prototype.StringToVector2D = KismetStringLibrary.prototype.Conv_StringToVector2D; } catch (e) {};
try { KismetStringLibrary.StringToVector2D = KismetStringLibrary.Conv_StringToVector2D; } catch (e) {};
try { KismetStringLibrary.prototype.StringToVector = KismetStringLibrary.prototype.Conv_StringToVector; } catch (e) {};
try { KismetStringLibrary.StringToVector = KismetStringLibrary.Conv_StringToVector; } catch (e) {};
try { KismetStringLibrary.prototype.StringToRotator = KismetStringLibrary.prototype.Conv_StringToRotator; } catch (e) {};
try { KismetStringLibrary.StringToRotator = KismetStringLibrary.Conv_StringToRotator; } catch (e) {};
try { KismetStringLibrary.prototype.StringToName = KismetStringLibrary.prototype.Conv_StringToName; } catch (e) {};
try { KismetStringLibrary.StringToName = KismetStringLibrary.Conv_StringToName; } catch (e) {};
try { KismetStringLibrary.prototype.StringToInteger64 = KismetStringLibrary.prototype.Conv_StringToInt64; } catch (e) {};
try { KismetStringLibrary.StringToInteger64 = KismetStringLibrary.Conv_StringToInt64; } catch (e) {};
try { KismetStringLibrary.prototype.StringToInteger = KismetStringLibrary.prototype.Conv_StringToInt; } catch (e) {};
try { KismetStringLibrary.StringToInteger = KismetStringLibrary.Conv_StringToInt; } catch (e) {};
try { KismetStringLibrary.prototype.StringToFloat = KismetStringLibrary.prototype.Conv_StringToDouble; } catch (e) {};
try { KismetStringLibrary.StringToFloat = KismetStringLibrary.Conv_StringToDouble; } catch (e) {};
try { KismetStringLibrary.prototype.StringToColor = KismetStringLibrary.prototype.Conv_StringToColor; } catch (e) {};
try { KismetStringLibrary.StringToColor = KismetStringLibrary.Conv_StringToColor; } catch (e) {};
try { KismetStringLibrary.prototype.ToString = KismetStringLibrary.prototype.Conv_RotatorToString; } catch (e) {};
try { KismetStringLibrary.ToString = KismetStringLibrary.Conv_RotatorToString; } catch (e) {};
try { KismetStringLibrary.prototype.ToString = KismetStringLibrary.prototype.Conv_PlatformUserIdToString; } catch (e) {};
try { KismetStringLibrary.ToString = KismetStringLibrary.Conv_PlatformUserIdToString; } catch (e) {};
try { KismetStringLibrary.prototype.ToString = KismetStringLibrary.prototype.Conv_ObjectToString; } catch (e) {};
try { KismetStringLibrary.ToString = KismetStringLibrary.Conv_ObjectToString; } catch (e) {};
try { KismetStringLibrary.prototype.ToString = KismetStringLibrary.prototype.Conv_NameToString; } catch (e) {};
try { KismetStringLibrary.ToString = KismetStringLibrary.Conv_NameToString; } catch (e) {};
try { KismetStringLibrary.prototype.ToString = KismetStringLibrary.prototype.Conv_MatrixToString; } catch (e) {};
try { KismetStringLibrary.ToString = KismetStringLibrary.Conv_MatrixToString; } catch (e) {};
try { KismetStringLibrary.prototype.ToString = KismetStringLibrary.prototype.Conv_IntVectorToString; } catch (e) {};
try { KismetStringLibrary.ToString = KismetStringLibrary.Conv_IntVectorToString; } catch (e) {};
try { KismetStringLibrary.prototype.ToString = KismetStringLibrary.prototype.Conv_IntToString; } catch (e) {};
try { KismetStringLibrary.ToString = KismetStringLibrary.Conv_IntToString; } catch (e) {};
try { KismetStringLibrary.prototype.ToString = KismetStringLibrary.prototype.Conv_IntPointToString; } catch (e) {};
try { KismetStringLibrary.ToString = KismetStringLibrary.Conv_IntPointToString; } catch (e) {};
try { KismetStringLibrary.prototype.ToString = KismetStringLibrary.prototype.Conv_Int64ToString; } catch (e) {};
try { KismetStringLibrary.ToString = KismetStringLibrary.Conv_Int64ToString; } catch (e) {};
try { KismetStringLibrary.prototype.ToString = KismetStringLibrary.prototype.Conv_InputDeviceIdToString; } catch (e) {};
try { KismetStringLibrary.ToString = KismetStringLibrary.Conv_InputDeviceIdToString; } catch (e) {};
try { KismetStringLibrary.prototype.ToString = KismetStringLibrary.prototype.Conv_DoubleToString; } catch (e) {};
try { KismetStringLibrary.ToString = KismetStringLibrary.Conv_DoubleToString; } catch (e) {};
try { KismetStringLibrary.prototype.ToString = KismetStringLibrary.prototype.Conv_ColorToString; } catch (e) {};
try { KismetStringLibrary.ToString = KismetStringLibrary.Conv_ColorToString; } catch (e) {};
try { KismetStringLibrary.prototype.ToString = KismetStringLibrary.prototype.Conv_ByteToString; } catch (e) {};
try { KismetStringLibrary.ToString = KismetStringLibrary.Conv_ByteToString; } catch (e) {};
try { KismetStringLibrary.prototype.ToString = KismetStringLibrary.prototype.Conv_BoolToString; } catch (e) {};
try { KismetStringLibrary.ToString = KismetStringLibrary.Conv_BoolToString; } catch (e) {};
try { KismetStringLibrary.prototype.Append = KismetStringLibrary.prototype.Concat_StrStr; } catch (e) {};
try { KismetStringLibrary.Append = KismetStringLibrary.Concat_StrStr; } catch (e) {};
try { KismetStringLibrary.prototype.BuildString = KismetStringLibrary.prototype.BuildString_Vector2d; } catch (e) {};
try { KismetStringLibrary.BuildString = KismetStringLibrary.BuildString_Vector2d; } catch (e) {};
try { KismetStringLibrary.prototype.BuildString = KismetStringLibrary.prototype.BuildString_Vector; } catch (e) {};
try { KismetStringLibrary.BuildString = KismetStringLibrary.BuildString_Vector; } catch (e) {};
try { KismetStringLibrary.prototype.BuildString = KismetStringLibrary.prototype.BuildString_Rotator; } catch (e) {};
try { KismetStringLibrary.BuildString = KismetStringLibrary.BuildString_Rotator; } catch (e) {};
try { KismetStringLibrary.prototype.BuildString = KismetStringLibrary.prototype.BuildString_Object; } catch (e) {};
try { KismetStringLibrary.BuildString = KismetStringLibrary.BuildString_Object; } catch (e) {};
try { KismetStringLibrary.prototype.BuildString = KismetStringLibrary.prototype.BuildString_Name; } catch (e) {};
try { KismetStringLibrary.BuildString = KismetStringLibrary.BuildString_Name; } catch (e) {};
try { KismetStringLibrary.prototype.BuildString = KismetStringLibrary.prototype.BuildString_IntVector; } catch (e) {};
try { KismetStringLibrary.BuildString = KismetStringLibrary.BuildString_IntVector; } catch (e) {};
try { KismetStringLibrary.prototype.BuildString = KismetStringLibrary.prototype.BuildString_Int; } catch (e) {};
try { KismetStringLibrary.BuildString = KismetStringLibrary.BuildString_Int; } catch (e) {};
try { KismetStringLibrary.prototype.BuildString = KismetStringLibrary.prototype.BuildString_Double; } catch (e) {};
try { KismetStringLibrary.BuildString = KismetStringLibrary.BuildString_Double; } catch (e) {};
try { KismetStringLibrary.prototype.BuildString = KismetStringLibrary.prototype.BuildString_Color; } catch (e) {};
try { KismetStringLibrary.BuildString = KismetStringLibrary.BuildString_Color; } catch (e) {};
try { KismetStringLibrary.prototype.BuildString = KismetStringLibrary.prototype.BuildString_Bool; } catch (e) {};
try { KismetStringLibrary.BuildString = KismetStringLibrary.BuildString_Bool; } catch (e) {};
try { KismetStringTableLibrary.prototype.IsStringTableRegistered = KismetStringTableLibrary.prototype.IsRegisteredTableId; } catch (e) {};
try { KismetStringTableLibrary.IsStringTableRegistered = KismetStringTableLibrary.IsRegisteredTableId; } catch (e) {};
try { KismetStringTableLibrary.prototype.IsStringTableEntryRegistered = KismetStringTableLibrary.prototype.IsRegisteredTableEntry; } catch (e) {};
try { KismetStringTableLibrary.IsStringTableEntryRegistered = KismetStringTableLibrary.IsRegisteredTableEntry; } catch (e) {};
try { KismetStringTableLibrary.prototype.GetStringTableNamespace = KismetStringTableLibrary.prototype.GetTableNamespace; } catch (e) {};
try { KismetStringTableLibrary.GetStringTableNamespace = KismetStringTableLibrary.GetTableNamespace; } catch (e) {};
try { KismetStringTableLibrary.prototype.GetStringTableEntrySourceString = KismetStringTableLibrary.prototype.GetTableEntrySourceString; } catch (e) {};
try { KismetStringTableLibrary.GetStringTableEntrySourceString = KismetStringTableLibrary.GetTableEntrySourceString; } catch (e) {};
try { let fnprepatch_756 = KismetSystemLibrary.prototype.SphereTraceSingleForObjects;KismetSystemLibrary.prototype.SphereTraceSingleForObjects = function (WorldContextObject, Start, End, Radius, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_756.call(this, WorldContextObject, Start, End, Radius, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
try { let fnprepatch_757 = KismetSystemLibrary.prototype.SphereTraceSingleByProfile;KismetSystemLibrary.prototype.SphereTraceSingleByProfile = function (WorldContextObject, Start, End, Radius, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_757.call(this, WorldContextObject, Start, End, Radius, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
try { let fnprepatch_758 = KismetSystemLibrary.prototype.SphereTraceSingle;KismetSystemLibrary.prototype.SphereTraceSingle = function (WorldContextObject, Start, End, Radius, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_758.call(this, WorldContextObject, Start, End, Radius, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
try { let fnprepatch_759 = KismetSystemLibrary.prototype.SphereTraceMultiForObjects;KismetSystemLibrary.prototype.SphereTraceMultiForObjects = function (WorldContextObject, Start, End, Radius, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_759.call(this, WorldContextObject, Start, End, Radius, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
try { let fnprepatch_760 = KismetSystemLibrary.prototype.SphereTraceMultiByProfile;KismetSystemLibrary.prototype.SphereTraceMultiByProfile = function (WorldContextObject, Start, End, Radius, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_760.call(this, WorldContextObject, Start, End, Radius, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
try { let fnprepatch_761 = KismetSystemLibrary.prototype.SphereTraceMulti;KismetSystemLibrary.prototype.SphereTraceMulti = function (WorldContextObject, Start, End, Radius, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_761.call(this, WorldContextObject, Start, End, Radius, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
try { let fnprepatch_762 = KismetSystemLibrary.prototype.PrintText;KismetSystemLibrary.prototype.PrintText = function (WorldContextObject, InText = "Hello", bPrintToScreen = true, bPrintToLog = true, TextColor = {"R":0,"G":0.6600000262260437,"B":1,"A":1}, Duration = 2, Key = "None") { return fnprepatch_762.call(this, WorldContextObject, InText, bPrintToScreen, bPrintToLog, TextColor, Duration, Key) }; } catch (e) {};
try { let fnprepatch_763 = KismetSystemLibrary.prototype.PrintString;KismetSystemLibrary.prototype.PrintString = function (WorldContextObject, InString = "Hello", bPrintToScreen = true, bPrintToLog = true, TextColor = {"R":0,"G":0.6600000262260437,"B":1,"A":1}, Duration = 2, Key = "None") { return fnprepatch_763.call(this, WorldContextObject, InString, bPrintToScreen, bPrintToLog, TextColor, Duration, Key) }; } catch (e) {};
try { let fnprepatch_764 = KismetSystemLibrary.prototype.MakeARFilter;KismetSystemLibrary.prototype.MakeARFilter = function (PackageNames, PackagePaths, SoftObjectPaths, ClassPaths, RecursiveClassPathsExclusionSet, ClassNames, RecursiveClassesExclusionSet, bRecursivePaths = false, bRecursiveClasses = false, bIncludeOnlyOnDiskAssets = false) { return fnprepatch_764.call(this, PackageNames, PackagePaths, SoftObjectPaths, ClassPaths, RecursiveClassPathsExclusionSet, ClassNames, RecursiveClassesExclusionSet, bRecursivePaths, bRecursiveClasses, bIncludeOnlyOnDiskAssets) }; } catch (e) {};
try { let fnprepatch_765 = KismetSystemLibrary.prototype.LogString;KismetSystemLibrary.prototype.LogString = function (InString = "Hello", bPrintToLog = true) { return fnprepatch_765.call(this, InString, bPrintToLog) }; } catch (e) {};
try { let fnprepatch_766 = KismetSystemLibrary.prototype.LineTraceSingleForObjects;KismetSystemLibrary.prototype.LineTraceSingleForObjects = function (WorldContextObject, Start, End, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_766.call(this, WorldContextObject, Start, End, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
try { let fnprepatch_767 = KismetSystemLibrary.prototype.LineTraceSingleByProfile;KismetSystemLibrary.prototype.LineTraceSingleByProfile = function (WorldContextObject, Start, End, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_767.call(this, WorldContextObject, Start, End, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
try { let fnprepatch_768 = KismetSystemLibrary.prototype.LineTraceSingle;KismetSystemLibrary.prototype.LineTraceSingle = function (WorldContextObject, Start, End, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_768.call(this, WorldContextObject, Start, End, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
try { let fnprepatch_769 = KismetSystemLibrary.prototype.LineTraceMultiForObjects;KismetSystemLibrary.prototype.LineTraceMultiForObjects = function (WorldContextObject, Start, End, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_769.call(this, WorldContextObject, Start, End, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
try { let fnprepatch_770 = KismetSystemLibrary.prototype.LineTraceMultiByProfile;KismetSystemLibrary.prototype.LineTraceMultiByProfile = function (WorldContextObject, Start, End, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_770.call(this, WorldContextObject, Start, End, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
try { let fnprepatch_771 = KismetSystemLibrary.prototype.LineTraceMulti;KismetSystemLibrary.prototype.LineTraceMulti = function (WorldContextObject, Start, End, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_771.call(this, WorldContextObject, Start, End, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
try { let fnprepatch_772 = KismetSystemLibrary.prototype.K2_SetTimerDelegate;KismetSystemLibrary.prototype.K2_SetTimerDelegate = function (Delegate, Time, bLooping, InitialStartDelay = 0, InitialStartDelayVariance = 0) { return fnprepatch_772.call(this, Delegate, Time, bLooping, InitialStartDelay, InitialStartDelayVariance) }; } catch (e) {};
try { let fnprepatch_773 = KismetSystemLibrary.prototype.K2_SetTimer;KismetSystemLibrary.prototype.K2_SetTimer = function (Object, FunctionName, Time, bLooping, InitialStartDelay = 0, InitialStartDelayVariance = 0) { return fnprepatch_773.call(this, Object, FunctionName, Time, bLooping, InitialStartDelay, InitialStartDelayVariance) }; } catch (e) {};
try { let fnprepatch_774 = KismetSystemLibrary.prototype.ExecuteConsoleCommand;KismetSystemLibrary.prototype.ExecuteConsoleCommand = function (WorldContextObject, Command, SpecificPlayer = undefined) { return fnprepatch_774.call(this, WorldContextObject, Command, SpecificPlayer) }; } catch (e) {};
try { let fnprepatch_775 = KismetSystemLibrary.prototype.DrawDebugString;KismetSystemLibrary.prototype.DrawDebugString = function (WorldContextObject, TextLocation, Text, TestBaseActor = undefined, TextColor = {"R":1,"G":1,"B":1,"A":1}, Duration = 0) { return fnprepatch_775.call(this, WorldContextObject, TextLocation, Text, TestBaseActor, TextColor, Duration) }; } catch (e) {};
try { let fnprepatch_776 = KismetSystemLibrary.prototype.DrawDebugSphere;KismetSystemLibrary.prototype.DrawDebugSphere = function (WorldContextObject, Center, Radius = 100, Segments = 12, LineColor = {"R":1,"G":1,"B":1,"A":1}, Duration = 0, Thickness = 0) { return fnprepatch_776.call(this, WorldContextObject, Center, Radius, Segments, LineColor, Duration, Thickness) }; } catch (e) {};
try { let fnprepatch_777 = KismetSystemLibrary.prototype.DrawDebugPoint;KismetSystemLibrary.prototype.DrawDebugPoint = function (WorldContextObject, Position, Size, PointColor, Duration = 0) { return fnprepatch_777.call(this, WorldContextObject, Position, Size, PointColor, Duration) }; } catch (e) {};
try { let fnprepatch_778 = KismetSystemLibrary.prototype.DrawDebugPlane;KismetSystemLibrary.prototype.DrawDebugPlane = function (WorldContextObject, PlaneCoordinates, Location, Size, PlaneColor = {"R":1,"G":1,"B":1,"A":1}, Duration = 0) { return fnprepatch_778.call(this, WorldContextObject, PlaneCoordinates, Location, Size, PlaneColor, Duration) }; } catch (e) {};
try { let fnprepatch_779 = KismetSystemLibrary.prototype.DrawDebugLine;KismetSystemLibrary.prototype.DrawDebugLine = function (WorldContextObject, LineStart, LineEnd, LineColor, Duration = 0, Thickness = 0) { return fnprepatch_779.call(this, WorldContextObject, LineStart, LineEnd, LineColor, Duration, Thickness) }; } catch (e) {};
try { let fnprepatch_780 = KismetSystemLibrary.prototype.DrawDebugFrustum;KismetSystemLibrary.prototype.DrawDebugFrustum = function (WorldContextObject, FrustumTransform, FrustumColor = {"R":1,"G":1,"B":1,"A":1}, Duration = 0, Thickness = 0) { return fnprepatch_780.call(this, WorldContextObject, FrustumTransform, FrustumColor, Duration, Thickness) }; } catch (e) {};
try { let fnprepatch_781 = KismetSystemLibrary.prototype.DrawDebugFloatHistoryTransform;KismetSystemLibrary.prototype.DrawDebugFloatHistoryTransform = function (WorldContextObject, FloatHistory, DrawTransform, DrawSize, DrawColor = {"R":1,"G":1,"B":1,"A":1}, Duration = 0) { return fnprepatch_781.call(this, WorldContextObject, FloatHistory, DrawTransform, DrawSize, DrawColor, Duration) }; } catch (e) {};
try { let fnprepatch_782 = KismetSystemLibrary.prototype.DrawDebugFloatHistoryLocation;KismetSystemLibrary.prototype.DrawDebugFloatHistoryLocation = function (WorldContextObject, FloatHistory, DrawLocation, DrawSize, DrawColor = {"R":1,"G":1,"B":1,"A":1}, Duration = 0) { return fnprepatch_782.call(this, WorldContextObject, FloatHistory, DrawLocation, DrawSize, DrawColor, Duration) }; } catch (e) {};
try { let fnprepatch_783 = KismetSystemLibrary.prototype.DrawDebugCylinder;KismetSystemLibrary.prototype.DrawDebugCylinder = function (WorldContextObject, Start, End, Radius = 100, Segments = 12, LineColor = {"R":1,"G":1,"B":1,"A":1}, Duration = 0, Thickness = 0) { return fnprepatch_783.call(this, WorldContextObject, Start, End, Radius, Segments, LineColor, Duration, Thickness) }; } catch (e) {};
try { let fnprepatch_784 = KismetSystemLibrary.prototype.DrawDebugCoordinateSystem;KismetSystemLibrary.prototype.DrawDebugCoordinateSystem = function (WorldContextObject, AxisLoc, AxisRot, Scale = 1, Duration = 0, Thickness = 0) { return fnprepatch_784.call(this, WorldContextObject, AxisLoc, AxisRot, Scale, Duration, Thickness) }; } catch (e) {};
try { let fnprepatch_785 = KismetSystemLibrary.prototype.DrawDebugConeInDegrees;KismetSystemLibrary.prototype.DrawDebugConeInDegrees = function (WorldContextObject, Origin, Direction, Length = 100, AngleWidth = 45, AngleHeight = 45, NumSides = 12, LineColor = {"R":1,"G":1,"B":1,"A":1}, Duration = 0, Thickness = 0) { return fnprepatch_785.call(this, WorldContextObject, Origin, Direction, Length, AngleWidth, AngleHeight, NumSides, LineColor, Duration, Thickness) }; } catch (e) {};
try { let fnprepatch_786 = KismetSystemLibrary.prototype.DrawDebugCone;KismetSystemLibrary.prototype.DrawDebugCone = function (WorldContextObject, Origin, Direction, Length, AngleWidth, AngleHeight, NumSides, LineColor, Duration = 0, Thickness = 0) { return fnprepatch_786.call(this, WorldContextObject, Origin, Direction, Length, AngleWidth, AngleHeight, NumSides, LineColor, Duration, Thickness) }; } catch (e) {};
try { let fnprepatch_787 = KismetSystemLibrary.prototype.DrawDebugCircle;KismetSystemLibrary.prototype.DrawDebugCircle = function (WorldContextObject, Center, Radius, NumSegments = 12, LineColor = {"R":1,"G":1,"B":1,"A":1}, Duration = 0, Thickness = 0, YAxis, ZAxis, bDrawAxis = false) { return fnprepatch_787.call(this, WorldContextObject, Center, Radius, NumSegments, LineColor, Duration, Thickness, YAxis, ZAxis, bDrawAxis) }; } catch (e) {};
try { let fnprepatch_788 = KismetSystemLibrary.prototype.DrawDebugCapsule;KismetSystemLibrary.prototype.DrawDebugCapsule = function (WorldContextObject, Center, HalfHeight, Radius, Rotation, LineColor = {"R":1,"G":1,"B":1,"A":1}, Duration = 0, Thickness = 0) { return fnprepatch_788.call(this, WorldContextObject, Center, HalfHeight, Radius, Rotation, LineColor, Duration, Thickness) }; } catch (e) {};
try { let fnprepatch_789 = KismetSystemLibrary.prototype.DrawDebugCamera;KismetSystemLibrary.prototype.DrawDebugCamera = function (CameraActor, CameraColor = {"R":1,"G":1,"B":1,"A":1}, Duration = 0) { return fnprepatch_789.call(this, CameraActor, CameraColor, Duration) }; } catch (e) {};
try { let fnprepatch_790 = KismetSystemLibrary.prototype.DrawDebugBox;KismetSystemLibrary.prototype.DrawDebugBox = function (WorldContextObject, Center, Extent, LineColor, Rotation, Duration = 0, Thickness = 0) { return fnprepatch_790.call(this, WorldContextObject, Center, Extent, LineColor, Rotation, Duration, Thickness) }; } catch (e) {};
try { let fnprepatch_791 = KismetSystemLibrary.prototype.DrawDebugArrow;KismetSystemLibrary.prototype.DrawDebugArrow = function (WorldContextObject, LineStart, LineEnd, ArrowSize, LineColor, Duration = 0, Thickness = 0) { return fnprepatch_791.call(this, WorldContextObject, LineStart, LineEnd, ArrowSize, LineColor, Duration, Thickness) }; } catch (e) {};
try { let fnprepatch_792 = KismetSystemLibrary.prototype.CapsuleTraceSingleForObjects;KismetSystemLibrary.prototype.CapsuleTraceSingleForObjects = function (WorldContextObject, Start, End, Radius, HalfHeight, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_792.call(this, WorldContextObject, Start, End, Radius, HalfHeight, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
try { let fnprepatch_793 = KismetSystemLibrary.prototype.CapsuleTraceSingleByProfile;KismetSystemLibrary.prototype.CapsuleTraceSingleByProfile = function (WorldContextObject, Start, End, Radius, HalfHeight, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_793.call(this, WorldContextObject, Start, End, Radius, HalfHeight, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
try { let fnprepatch_794 = KismetSystemLibrary.prototype.CapsuleTraceSingle;KismetSystemLibrary.prototype.CapsuleTraceSingle = function (WorldContextObject, Start, End, Radius, HalfHeight, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_794.call(this, WorldContextObject, Start, End, Radius, HalfHeight, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
try { let fnprepatch_795 = KismetSystemLibrary.prototype.CapsuleTraceMultiForObjects;KismetSystemLibrary.prototype.CapsuleTraceMultiForObjects = function (WorldContextObject, Start, End, Radius, HalfHeight, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_795.call(this, WorldContextObject, Start, End, Radius, HalfHeight, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
try { let fnprepatch_796 = KismetSystemLibrary.prototype.CapsuleTraceMultiByProfile;KismetSystemLibrary.prototype.CapsuleTraceMultiByProfile = function (WorldContextObject, Start, End, Radius, HalfHeight, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_796.call(this, WorldContextObject, Start, End, Radius, HalfHeight, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
try { let fnprepatch_797 = KismetSystemLibrary.prototype.CapsuleTraceMulti;KismetSystemLibrary.prototype.CapsuleTraceMulti = function (WorldContextObject, Start, End, Radius, HalfHeight, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_797.call(this, WorldContextObject, Start, End, Radius, HalfHeight, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
try { let fnprepatch_798 = KismetSystemLibrary.prototype.BoxTraceSingleForObjects;KismetSystemLibrary.prototype.BoxTraceSingleForObjects = function (WorldContextObject, Start, End, HalfSize, Orientation, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_798.call(this, WorldContextObject, Start, End, HalfSize, Orientation, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
try { let fnprepatch_799 = KismetSystemLibrary.prototype.BoxTraceSingleByProfile;KismetSystemLibrary.prototype.BoxTraceSingleByProfile = function (WorldContextObject, Start, End, HalfSize, Orientation, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_799.call(this, WorldContextObject, Start, End, HalfSize, Orientation, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
try { let fnprepatch_800 = KismetSystemLibrary.prototype.BoxTraceSingle;KismetSystemLibrary.prototype.BoxTraceSingle = function (WorldContextObject, Start, End, HalfSize, Orientation, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_800.call(this, WorldContextObject, Start, End, HalfSize, Orientation, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHit, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
try { let fnprepatch_801 = KismetSystemLibrary.prototype.BoxTraceMultiForObjects;KismetSystemLibrary.prototype.BoxTraceMultiForObjects = function (WorldContextObject, Start, End, HalfSize, Orientation, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_801.call(this, WorldContextObject, Start, End, HalfSize, Orientation, ObjectTypes, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
try { let fnprepatch_802 = KismetSystemLibrary.prototype.BoxTraceMultiByProfile;KismetSystemLibrary.prototype.BoxTraceMultiByProfile = function (WorldContextObject, Start, End, HalfSize, Orientation, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_802.call(this, WorldContextObject, Start, End, HalfSize, Orientation, ProfileName, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
try { let fnprepatch_803 = KismetSystemLibrary.prototype.BoxTraceMulti;KismetSystemLibrary.prototype.BoxTraceMulti = function (WorldContextObject, Start, End, HalfSize, Orientation, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_803.call(this, WorldContextObject, Start, End, HalfSize, Orientation, TraceChannel, bTraceComplex, ActorsToIgnore, DrawDebugType, OutHits, bIgnoreSelf, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
try { KismetSystemLibrary.prototype.SphereTraceForObjects = KismetSystemLibrary.prototype.SphereTraceSingleForObjects; } catch (e) {};
try { KismetSystemLibrary.SphereTraceForObjects = KismetSystemLibrary.SphereTraceSingleForObjects; } catch (e) {};
try { KismetSystemLibrary.prototype.SphereTraceByProfile = KismetSystemLibrary.prototype.SphereTraceSingleByProfile; } catch (e) {};
try { KismetSystemLibrary.SphereTraceByProfile = KismetSystemLibrary.SphereTraceSingleByProfile; } catch (e) {};
try { KismetSystemLibrary.prototype.SphereTraceByChannel = KismetSystemLibrary.prototype.SphereTraceSingle; } catch (e) {};
try { KismetSystemLibrary.SphereTraceByChannel = KismetSystemLibrary.SphereTraceSingle; } catch (e) {};
try { KismetSystemLibrary.prototype.MultiSphereTraceForObjects = KismetSystemLibrary.prototype.SphereTraceMultiForObjects; } catch (e) {};
try { KismetSystemLibrary.MultiSphereTraceForObjects = KismetSystemLibrary.SphereTraceMultiForObjects; } catch (e) {};
try { KismetSystemLibrary.prototype.MultiSphereTraceByProfile = KismetSystemLibrary.prototype.SphereTraceMultiByProfile; } catch (e) {};
try { KismetSystemLibrary.MultiSphereTraceByProfile = KismetSystemLibrary.SphereTraceMultiByProfile; } catch (e) {};
try { KismetSystemLibrary.prototype.MultiSphereTraceByChannel = KismetSystemLibrary.prototype.SphereTraceMulti; } catch (e) {};
try { KismetSystemLibrary.MultiSphereTraceByChannel = KismetSystemLibrary.SphereTraceMulti; } catch (e) {};
try { KismetSystemLibrary.prototype.NotEqual = KismetSystemLibrary.prototype.NotEqual_SoftObjectReference; } catch (e) {};
try { KismetSystemLibrary.NotEqual = KismetSystemLibrary.NotEqual_SoftObjectReference; } catch (e) {};
try { KismetSystemLibrary.prototype.NotEqual = KismetSystemLibrary.prototype.NotEqual_SoftClassReference; } catch (e) {};
try { KismetSystemLibrary.NotEqual = KismetSystemLibrary.NotEqual_SoftClassReference; } catch (e) {};
try { KismetSystemLibrary.prototype.NotEqual = KismetSystemLibrary.prototype.NotEqual_PrimaryAssetType; } catch (e) {};
try { KismetSystemLibrary.NotEqual = KismetSystemLibrary.NotEqual_PrimaryAssetType; } catch (e) {};
try { KismetSystemLibrary.prototype.NotEqual = KismetSystemLibrary.prototype.NotEqual_PrimaryAssetId; } catch (e) {};
try { KismetSystemLibrary.NotEqual = KismetSystemLibrary.NotEqual_PrimaryAssetId; } catch (e) {};
try { KismetSystemLibrary.prototype.MakeLiteralFloat = KismetSystemLibrary.prototype.MakeLiteralDouble; } catch (e) {};
try { KismetSystemLibrary.MakeLiteralFloat = KismetSystemLibrary.MakeLiteralDouble; } catch (e) {};
try { KismetSystemLibrary.prototype.LineTraceForObjects = KismetSystemLibrary.prototype.LineTraceSingleForObjects; } catch (e) {};
try { KismetSystemLibrary.LineTraceForObjects = KismetSystemLibrary.LineTraceSingleForObjects; } catch (e) {};
try { KismetSystemLibrary.prototype.LineTraceByProfile = KismetSystemLibrary.prototype.LineTraceSingleByProfile; } catch (e) {};
try { KismetSystemLibrary.LineTraceByProfile = KismetSystemLibrary.LineTraceSingleByProfile; } catch (e) {};
try { KismetSystemLibrary.prototype.LineTraceByChannel = KismetSystemLibrary.prototype.LineTraceSingle; } catch (e) {};
try { KismetSystemLibrary.LineTraceByChannel = KismetSystemLibrary.LineTraceSingle; } catch (e) {};
try { KismetSystemLibrary.prototype.MultiLineTraceForObjects = KismetSystemLibrary.prototype.LineTraceMultiForObjects; } catch (e) {};
try { KismetSystemLibrary.MultiLineTraceForObjects = KismetSystemLibrary.LineTraceMultiForObjects; } catch (e) {};
try { KismetSystemLibrary.prototype.MultiLineTraceByProfile = KismetSystemLibrary.prototype.LineTraceMultiByProfile; } catch (e) {};
try { KismetSystemLibrary.MultiLineTraceByProfile = KismetSystemLibrary.LineTraceMultiByProfile; } catch (e) {};
try { KismetSystemLibrary.prototype.MultiLineTraceByChannel = KismetSystemLibrary.prototype.LineTraceMulti; } catch (e) {};
try { KismetSystemLibrary.MultiLineTraceByChannel = KismetSystemLibrary.LineTraceMulti; } catch (e) {};
try { KismetSystemLibrary.prototype.UnpauseTimerbyHandle = KismetSystemLibrary.prototype.K2_UnPauseTimerHandle; } catch (e) {};
try { KismetSystemLibrary.UnpauseTimerbyHandle = KismetSystemLibrary.K2_UnPauseTimerHandle; } catch (e) {};
try { KismetSystemLibrary.prototype.UnpauseTimerbyFunctionName = KismetSystemLibrary.prototype.K2_UnPauseTimer; } catch (e) {};
try { KismetSystemLibrary.UnpauseTimerbyFunctionName = KismetSystemLibrary.K2_UnPauseTimer; } catch (e) {};
try { KismetSystemLibrary.prototype.DoesTimerExistbyHandle = KismetSystemLibrary.prototype.K2_TimerExistsHandle; } catch (e) {};
try { KismetSystemLibrary.DoesTimerExistbyHandle = KismetSystemLibrary.K2_TimerExistsHandle; } catch (e) {};
try { KismetSystemLibrary.prototype.DoesTimerExistbyFunctionName = KismetSystemLibrary.prototype.K2_TimerExists; } catch (e) {};
try { KismetSystemLibrary.DoesTimerExistbyFunctionName = KismetSystemLibrary.K2_TimerExists; } catch (e) {};
try { KismetSystemLibrary.prototype.SetTimerforNextTickbyFunctionName = KismetSystemLibrary.prototype.K2_SetTimerForNextTick; } catch (e) {};
try { KismetSystemLibrary.SetTimerforNextTickbyFunctionName = KismetSystemLibrary.K2_SetTimerForNextTick; } catch (e) {};
try { KismetSystemLibrary.prototype.SetTimerbyFunctionName = KismetSystemLibrary.prototype.K2_SetTimer; } catch (e) {};
try { KismetSystemLibrary.SetTimerbyFunctionName = KismetSystemLibrary.K2_SetTimer; } catch (e) {};
try { KismetSystemLibrary.prototype.PauseTimerbyHandle = KismetSystemLibrary.prototype.K2_PauseTimerHandle; } catch (e) {};
try { KismetSystemLibrary.PauseTimerbyHandle = KismetSystemLibrary.K2_PauseTimerHandle; } catch (e) {};
try { KismetSystemLibrary.prototype.PauseTimerbyFunctionName = KismetSystemLibrary.prototype.K2_PauseTimer; } catch (e) {};
try { KismetSystemLibrary.PauseTimerbyFunctionName = KismetSystemLibrary.K2_PauseTimer; } catch (e) {};
try { KismetSystemLibrary.prototype.IsValidTimerHandle = KismetSystemLibrary.prototype.K2_IsValidTimerHandle; } catch (e) {};
try { KismetSystemLibrary.IsValidTimerHandle = KismetSystemLibrary.K2_IsValidTimerHandle; } catch (e) {};
try { KismetSystemLibrary.prototype.IsTimerPausedbyHandle = KismetSystemLibrary.prototype.K2_IsTimerPausedHandle; } catch (e) {};
try { KismetSystemLibrary.IsTimerPausedbyHandle = KismetSystemLibrary.K2_IsTimerPausedHandle; } catch (e) {};
try { KismetSystemLibrary.prototype.IsTimerPausedbyFunctionName = KismetSystemLibrary.prototype.K2_IsTimerPaused; } catch (e) {};
try { KismetSystemLibrary.IsTimerPausedbyFunctionName = KismetSystemLibrary.K2_IsTimerPaused; } catch (e) {};
try { KismetSystemLibrary.prototype.IsTimerActivebyHandle = KismetSystemLibrary.prototype.K2_IsTimerActiveHandle; } catch (e) {};
try { KismetSystemLibrary.IsTimerActivebyHandle = KismetSystemLibrary.K2_IsTimerActiveHandle; } catch (e) {};
try { KismetSystemLibrary.prototype.IsTimerActivebyFunctionName = KismetSystemLibrary.prototype.K2_IsTimerActive; } catch (e) {};
try { KismetSystemLibrary.IsTimerActivebyFunctionName = KismetSystemLibrary.K2_IsTimerActive; } catch (e) {};
try { KismetSystemLibrary.prototype.InvalidateTimerHandle = KismetSystemLibrary.prototype.K2_InvalidateTimerHandle; } catch (e) {};
try { KismetSystemLibrary.InvalidateTimerHandle = KismetSystemLibrary.K2_InvalidateTimerHandle; } catch (e) {};
try { KismetSystemLibrary.prototype.GetTimerRemainingTimebyHandle = KismetSystemLibrary.prototype.K2_GetTimerRemainingTimeHandle; } catch (e) {};
try { KismetSystemLibrary.GetTimerRemainingTimebyHandle = KismetSystemLibrary.K2_GetTimerRemainingTimeHandle; } catch (e) {};
try { KismetSystemLibrary.prototype.GetTimerRemainingTimebyFunctionName = KismetSystemLibrary.prototype.K2_GetTimerRemainingTime; } catch (e) {};
try { KismetSystemLibrary.GetTimerRemainingTimebyFunctionName = KismetSystemLibrary.K2_GetTimerRemainingTime; } catch (e) {};
try { KismetSystemLibrary.prototype.GetTimerElapsedTimebyHandle = KismetSystemLibrary.prototype.K2_GetTimerElapsedTimeHandle; } catch (e) {};
try { KismetSystemLibrary.GetTimerElapsedTimebyHandle = KismetSystemLibrary.K2_GetTimerElapsedTimeHandle; } catch (e) {};
try { KismetSystemLibrary.prototype.GetTimerElapsedTimebyFunctionName = KismetSystemLibrary.prototype.K2_GetTimerElapsedTime; } catch (e) {};
try { KismetSystemLibrary.GetTimerElapsedTimebyFunctionName = KismetSystemLibrary.K2_GetTimerElapsedTime; } catch (e) {};
try { KismetSystemLibrary.prototype.ClearTimerbyHandle = KismetSystemLibrary.prototype.K2_ClearTimerHandle; } catch (e) {};
try { KismetSystemLibrary.ClearTimerbyHandle = KismetSystemLibrary.K2_ClearTimerHandle; } catch (e) {};
try { KismetSystemLibrary.prototype.ClearTimerbyFunctionName = KismetSystemLibrary.prototype.K2_ClearTimer; } catch (e) {};
try { KismetSystemLibrary.ClearTimerbyFunctionName = KismetSystemLibrary.K2_ClearTimer; } catch (e) {};
try { KismetSystemLibrary.prototype.ClearandInvalidateTimerbyHandle = KismetSystemLibrary.prototype.K2_ClearAndInvalidateTimerHandle; } catch (e) {};
try { KismetSystemLibrary.ClearandInvalidateTimerbyHandle = KismetSystemLibrary.K2_ClearAndInvalidateTimerHandle; } catch (e) {};
try { KismetSystemLibrary.prototype.GetStructPathName = KismetSystemLibrary.prototype.GetStructTopLevelAssetPath; } catch (e) {};
try { KismetSystemLibrary.GetStructPathName = KismetSystemLibrary.GetStructTopLevelAssetPath; } catch (e) {};
try { KismetSystemLibrary.prototype.GetObjectPathString = KismetSystemLibrary.prototype.GetPathName; } catch (e) {};
try { KismetSystemLibrary.GetObjectPathString = KismetSystemLibrary.GetPathName; } catch (e) {};
try { KismetSystemLibrary.prototype.GetEnumPathName = KismetSystemLibrary.prototype.GetEnumTopLevelAssetPath; } catch (e) {};
try { KismetSystemLibrary.GetEnumPathName = KismetSystemLibrary.GetEnumTopLevelAssetPath; } catch (e) {};
try { KismetSystemLibrary.prototype.GetClassPathName = KismetSystemLibrary.prototype.GetClassTopLevelAssetPath; } catch (e) {};
try { KismetSystemLibrary.GetClassPathName = KismetSystemLibrary.GetClassTopLevelAssetPath; } catch (e) {};
try { KismetSystemLibrary.prototype.Equal = KismetSystemLibrary.prototype.EqualEqual_SoftObjectReference; } catch (e) {};
try { KismetSystemLibrary.Equal = KismetSystemLibrary.EqualEqual_SoftObjectReference; } catch (e) {};
try { KismetSystemLibrary.prototype.Equal = KismetSystemLibrary.prototype.EqualEqual_SoftClassReference; } catch (e) {};
try { KismetSystemLibrary.Equal = KismetSystemLibrary.EqualEqual_SoftClassReference; } catch (e) {};
try { KismetSystemLibrary.prototype.Equal = KismetSystemLibrary.prototype.EqualEqual_PrimaryAssetType; } catch (e) {};
try { KismetSystemLibrary.Equal = KismetSystemLibrary.EqualEqual_PrimaryAssetType; } catch (e) {};
try { KismetSystemLibrary.prototype.Equal = KismetSystemLibrary.prototype.EqualEqual_PrimaryAssetId; } catch (e) {};
try { KismetSystemLibrary.Equal = KismetSystemLibrary.EqualEqual_PrimaryAssetId; } catch (e) {};
try { KismetSystemLibrary.prototype.DrawDebugCone = KismetSystemLibrary.prototype.DrawDebugConeInDegrees; } catch (e) {};
try { KismetSystemLibrary.DrawDebugCone = KismetSystemLibrary.DrawDebugConeInDegrees; } catch (e) {};
try { KismetSystemLibrary.prototype.ToSoftObjectPath = KismetSystemLibrary.prototype.Conv_SoftObjRefToSoftObjPath; } catch (e) {};
try { KismetSystemLibrary.ToSoftObjectPath = KismetSystemLibrary.Conv_SoftObjRefToSoftObjPath; } catch (e) {};
try { KismetSystemLibrary.prototype.ToSoftClassPath = KismetSystemLibrary.prototype.Conv_SoftObjRefToSoftClassPath; } catch (e) {};
try { KismetSystemLibrary.ToSoftClassPath = KismetSystemLibrary.Conv_SoftObjRefToSoftClassPath; } catch (e) {};
try { KismetSystemLibrary.prototype.ToSoftObjectReference = KismetSystemLibrary.prototype.Conv_SoftObjPathToSoftObjRef; } catch (e) {};
try { KismetSystemLibrary.ToSoftObjectReference = KismetSystemLibrary.Conv_SoftObjPathToSoftObjRef; } catch (e) {};
try { KismetSystemLibrary.prototype.ToString = KismetSystemLibrary.prototype.Conv_SoftObjectReferenceToString; } catch (e) {};
try { KismetSystemLibrary.ToString = KismetSystemLibrary.Conv_SoftObjectReferenceToString; } catch (e) {};
try { KismetSystemLibrary.prototype.ToString = KismetSystemLibrary.prototype.Conv_SoftClassReferenceToString; } catch (e) {};
try { KismetSystemLibrary.ToString = KismetSystemLibrary.Conv_SoftClassReferenceToString; } catch (e) {};
try { KismetSystemLibrary.prototype.ToSoftClassReference = KismetSystemLibrary.prototype.Conv_SoftClassPathToSoftClassRef; } catch (e) {};
try { KismetSystemLibrary.ToSoftClassReference = KismetSystemLibrary.Conv_SoftClassPathToSoftClassRef; } catch (e) {};
try { KismetSystemLibrary.prototype.ToString = KismetSystemLibrary.prototype.Conv_PrimaryAssetTypeToString; } catch (e) {};
try { KismetSystemLibrary.ToString = KismetSystemLibrary.Conv_PrimaryAssetTypeToString; } catch (e) {};
try { KismetSystemLibrary.prototype.ToString = KismetSystemLibrary.prototype.Conv_PrimaryAssetIdToString; } catch (e) {};
try { KismetSystemLibrary.ToString = KismetSystemLibrary.Conv_PrimaryAssetIdToString; } catch (e) {};
try { KismetSystemLibrary.prototype.CastToClass = KismetSystemLibrary.prototype.Conv_ObjectToClass; } catch (e) {};
try { KismetSystemLibrary.CastToClass = KismetSystemLibrary.Conv_ObjectToClass; } catch (e) {};
try { KismetSystemLibrary.prototype.CapsuleTraceForObjects = KismetSystemLibrary.prototype.CapsuleTraceSingleForObjects; } catch (e) {};
try { KismetSystemLibrary.CapsuleTraceForObjects = KismetSystemLibrary.CapsuleTraceSingleForObjects; } catch (e) {};
try { KismetSystemLibrary.prototype.CapsuleTraceByProfile = KismetSystemLibrary.prototype.CapsuleTraceSingleByProfile; } catch (e) {};
try { KismetSystemLibrary.CapsuleTraceByProfile = KismetSystemLibrary.CapsuleTraceSingleByProfile; } catch (e) {};
try { KismetSystemLibrary.prototype.CapsuleTraceByChannel = KismetSystemLibrary.prototype.CapsuleTraceSingle; } catch (e) {};
try { KismetSystemLibrary.CapsuleTraceByChannel = KismetSystemLibrary.CapsuleTraceSingle; } catch (e) {};
try { KismetSystemLibrary.prototype.MultiCapsuleTraceForObjects = KismetSystemLibrary.prototype.CapsuleTraceMultiForObjects; } catch (e) {};
try { KismetSystemLibrary.MultiCapsuleTraceForObjects = KismetSystemLibrary.CapsuleTraceMultiForObjects; } catch (e) {};
try { KismetSystemLibrary.prototype.MultiCapsuleTraceByProfile = KismetSystemLibrary.prototype.CapsuleTraceMultiByProfile; } catch (e) {};
try { KismetSystemLibrary.MultiCapsuleTraceByProfile = KismetSystemLibrary.CapsuleTraceMultiByProfile; } catch (e) {};
try { KismetSystemLibrary.prototype.MultiCapsuleTraceByChannel = KismetSystemLibrary.prototype.CapsuleTraceMulti; } catch (e) {};
try { KismetSystemLibrary.MultiCapsuleTraceByChannel = KismetSystemLibrary.CapsuleTraceMulti; } catch (e) {};
try { KismetSystemLibrary.prototype.BoxTraceForObjects = KismetSystemLibrary.prototype.BoxTraceSingleForObjects; } catch (e) {};
try { KismetSystemLibrary.BoxTraceForObjects = KismetSystemLibrary.BoxTraceSingleForObjects; } catch (e) {};
try { KismetSystemLibrary.prototype.BoxTraceByProfile = KismetSystemLibrary.prototype.BoxTraceSingleByProfile; } catch (e) {};
try { KismetSystemLibrary.BoxTraceByProfile = KismetSystemLibrary.BoxTraceSingleByProfile; } catch (e) {};
try { KismetSystemLibrary.prototype.BoxTraceByChannel = KismetSystemLibrary.prototype.BoxTraceSingle; } catch (e) {};
try { KismetSystemLibrary.BoxTraceByChannel = KismetSystemLibrary.BoxTraceSingle; } catch (e) {};
try { KismetSystemLibrary.prototype.MultiBoxTraceForObjects = KismetSystemLibrary.prototype.BoxTraceMultiForObjects; } catch (e) {};
try { KismetSystemLibrary.MultiBoxTraceForObjects = KismetSystemLibrary.BoxTraceMultiForObjects; } catch (e) {};
try { KismetSystemLibrary.prototype.MultiBoxTraceByProfile = KismetSystemLibrary.prototype.BoxTraceMultiByProfile; } catch (e) {};
try { KismetSystemLibrary.MultiBoxTraceByProfile = KismetSystemLibrary.BoxTraceMultiByProfile; } catch (e) {};
try { KismetSystemLibrary.prototype.MultiBoxTraceByChannel = KismetSystemLibrary.prototype.BoxTraceMulti; } catch (e) {};
try { KismetSystemLibrary.MultiBoxTraceByChannel = KismetSystemLibrary.BoxTraceMulti; } catch (e) {};
try { let fnprepatch_804 = BlueprintPathsLibrary.prototype.GetExtension;BlueprintPathsLibrary.prototype.GetExtension = function (InPath, bIncludeDot = false) { return fnprepatch_804.call(this, InPath, bIncludeDot) }; } catch (e) {};
try { let fnprepatch_805 = BlueprintPathsLibrary.prototype.GetBaseFilename;BlueprintPathsLibrary.prototype.GetBaseFilename = function (InPath, bRemovePath = true) { return fnprepatch_805.call(this, InPath, bRemovePath) }; } catch (e) {};
try { let fnprepatch_806 = BlueprintPathsLibrary.prototype.CreateTempFilename;BlueprintPathsLibrary.prototype.CreateTempFilename = function (Path, Prefix, Extension = ".tmp") { return fnprepatch_806.call(this, Path, Prefix, Extension) }; } catch (e) {};
try { let fnprepatch_807 = ImportanceSamplingLibrary.prototype.RandomSobolCell3D;ImportanceSamplingLibrary.prototype.RandomSobolCell3D = function (Index, NumCells = 1, Cell, Seed) { return fnprepatch_807.call(this, Index, NumCells, Cell, Seed) }; } catch (e) {};
try { let fnprepatch_808 = ImportanceSamplingLibrary.prototype.RandomSobolCell2D;ImportanceSamplingLibrary.prototype.RandomSobolCell2D = function (Index, NumCells = 1, Cell = {"X":0,"Y":0}, Seed = {"X":0,"Y":0}) { return fnprepatch_808.call(this, Index, NumCells, Cell, Seed) }; } catch (e) {};
try { let fnprepatch_809 = ImportanceSamplingLibrary.prototype.NextSobolCell3D;ImportanceSamplingLibrary.prototype.NextSobolCell3D = function (Index, NumCells = 1, PreviousValue) { return fnprepatch_809.call(this, Index, NumCells, PreviousValue) }; } catch (e) {};
try { let fnprepatch_810 = ImportanceSamplingLibrary.prototype.NextSobolCell2D;ImportanceSamplingLibrary.prototype.NextSobolCell2D = function (Index, NumCells = 1, PreviousValue = {"X":0,"Y":0}) { return fnprepatch_810.call(this, Index, NumCells, PreviousValue) }; } catch (e) {};
try { let fnprepatch_811 = LevelScriptActor.prototype.SetCinematicMode;LevelScriptActor.prototype.SetCinematicMode = function (bCinematicMode, bHidePlayer = true, bAffectsHUD = true, bAffectsMovement = false, bAffectsTurning = false) { return fnprepatch_811.call(this, bCinematicMode, bHidePlayer, bAffectsHUD, bAffectsMovement, bAffectsTurning) }; } catch (e) {};
try { let fnprepatch_812 = MaterialInstanceDynamic.prototype.K2_CopyMaterialInstanceParameters;MaterialInstanceDynamic.prototype.K2_CopyMaterialInstanceParameters = function (Source, bQuickParametersOnly = false) { return fnprepatch_812.call(this, Source, bQuickParametersOnly) }; } catch (e) {};
try { MaterialInstanceDynamic.prototype.InterpolateMaterialInstanceParameters = MaterialInstanceDynamic.prototype.K2_InterpolateMaterialInstanceParams; } catch (e) {};
try { MaterialInstanceDynamic.prototype.GetVectorParameterValueByInfo = MaterialInstanceDynamic.prototype.K2_GetVectorParameterValueByInfo; } catch (e) {};
try { MaterialInstanceDynamic.prototype.GetVectorParameterValue = MaterialInstanceDynamic.prototype.K2_GetVectorParameterValue; } catch (e) {};
try { MaterialInstanceDynamic.prototype.GetTextureParameterValueByInfo = MaterialInstanceDynamic.prototype.K2_GetTextureParameterValueByInfo; } catch (e) {};
try { MaterialInstanceDynamic.prototype.GetTextureParameterValue = MaterialInstanceDynamic.prototype.K2_GetTextureParameterValue; } catch (e) {};
try { MaterialInstanceDynamic.prototype.GetScalarParameterValueByInfo = MaterialInstanceDynamic.prototype.K2_GetScalarParameterValueByInfo; } catch (e) {};
try { MaterialInstanceDynamic.prototype.GetScalarParameterValue = MaterialInstanceDynamic.prototype.K2_GetScalarParameterValue; } catch (e) {};
try { MaterialInstanceDynamic.prototype.CopyMaterialInstanceParameters = MaterialInstanceDynamic.prototype.K2_CopyMaterialInstanceParameters; } catch (e) {};
try { let fnprepatch_813 = MeshVertexPainterKismetLibrary.prototype.PaintVerticesSingleColor;MeshVertexPainterKismetLibrary.prototype.PaintVerticesSingleColor = function (StaticMeshComponent, FillColor, bConvertToSRGB = true) { return fnprepatch_813.call(this, StaticMeshComponent, FillColor, bConvertToSRGB) }; } catch (e) {};
try { let fnprepatch_814 = MeshVertexPainterKismetLibrary.prototype.PaintVerticesLerpAlongAxis;MeshVertexPainterKismetLibrary.prototype.PaintVerticesLerpAlongAxis = function (StaticMeshComponent, StartColor, EndColor, Axis, bConvertToSRGB = true) { return fnprepatch_814.call(this, StaticMeshComponent, StartColor, EndColor, Axis, bConvertToSRGB) }; } catch (e) {};
try { let fnprepatch_815 = ConstraintInstanceBlueprintLibrary.prototype.CopyParams;ConstraintInstanceBlueprintLibrary.prototype.CopyParams = function (Accessor, SourceAccessor, bKeepPosition = true, bKeepRotation = true) { return fnprepatch_815.call(this, Accessor, SourceAccessor, bKeepPosition, bKeepRotation) }; } catch (e) {};
try { let fnprepatch_816 = PhysicalAnimationComponent.prototype.ApplyPhysicalAnimationSettingsBelow;PhysicalAnimationComponent.prototype.ApplyPhysicalAnimationSettingsBelow = function (BodyName, PhysicalAnimationData, bIncludeSelf = true) { return fnprepatch_816.call(this, BodyName, PhysicalAnimationData, bIncludeSelf) }; } catch (e) {};
try { let fnprepatch_817 = PhysicalAnimationComponent.prototype.ApplyPhysicalAnimationProfileBelow;PhysicalAnimationComponent.prototype.ApplyPhysicalAnimationProfileBelow = function (BodyName, ProfileName, bIncludeSelf = true, bClearNotFound = false) { return fnprepatch_817.call(this, BodyName, ProfileName, bIncludeSelf, bClearNotFound) }; } catch (e) {};
try { PlayerState.prototype.OverrideWith = PlayerState.prototype.ReceiveOverrideWith; } catch (e) {};
try { PlayerState.prototype.CopyProperties = PlayerState.prototype.ReceiveCopyProperties; } catch (e) {};
try { PlayerState.prototype.GetUniqueNetId = PlayerState.prototype.BP_GetUniqueId; } catch (e) {};
try { let fnprepatch_818 = PostProcessVolume.prototype.AddOrUpdateBlendable;PostProcessVolume.prototype.AddOrUpdateBlendable = function (InBlendableObject, InWeight = 1) { return fnprepatch_818.call(this, InBlendableObject, InWeight) }; } catch (e) {};
try { let fnprepatch_819 = HealthSnapshotBlueprintLibrary.prototype.LogPerformanceSnapshot;HealthSnapshotBlueprintLibrary.prototype.LogPerformanceSnapshot = function (SnapshotTitle, bResetStats = true) { return fnprepatch_819.call(this, SnapshotTitle, bResetStats) }; } catch (e) {};
try { let fnprepatch_820 = SkeletalMesh.prototype.SetMinLODForQualityLevels;SkeletalMesh.prototype.SetMinLODForQualityLevels = function (QualityLevelMinimumLODs, Default = -1) { return fnprepatch_820.call(this, QualityLevelMinimumLODs, Default) }; } catch (e) {};
try { let fnprepatch_821 = SkeletalMesh.prototype.IsSectionUsingCloth;SkeletalMesh.prototype.IsSectionUsingCloth = function (InSectionIndex, bCheckCorrespondingSections = true) { return fnprepatch_821.call(this, InSectionIndex, bCheckCorrespondingSections) }; } catch (e) {};
try { let fnprepatch_822 = SkeletalMesh.prototype.AddSocket;SkeletalMesh.prototype.AddSocket = function (InSocket, bAddToSkeleton = false) { return fnprepatch_822.call(this, InSocket, bAddToSkeleton) }; } catch (e) {};
try { SkeletalMesh.prototype.GetAllMorphTargetNames = SkeletalMesh.prototype.K2_GetAllMorphTargetNames; } catch (e) {};
try { let fnprepatch_823 = SoundSubmix.prototype.StopRecordingOutput;SoundSubmix.prototype.StopRecordingOutput = function (WorldContextObject, ExportType, Name, Path, ExistingSoundWaveToOverwrite = undefined) { return fnprepatch_823.call(this, WorldContextObject, ExportType, Name, Path, ExistingSoundWaveToOverwrite) }; } catch (e) {};
try { let fnprepatch_824 = SoundSubmix.prototype.StartSpectralAnalysis;SoundSubmix.prototype.StartSpectralAnalysis = function (WorldContextObject, FFTSize = "DefaultSize", InterpolationMethod = "NearestNeighbor", WindowType = "None", HopSize = 0, SpectrumType = "MagnitudeSpectrum") { return fnprepatch_824.call(this, WorldContextObject, FFTSize, InterpolationMethod, WindowType, HopSize, SpectrumType) }; } catch (e) {};
try { let fnprepatch_825 = SoundSubmix.prototype.AddSpectralAnalysisDelegate;SoundSubmix.prototype.AddSpectralAnalysisDelegate = function (WorldContextObject, InBandSettings, OnSubmixSpectralAnalysisBP, UpdateRate = 10, DecibelNoiseFloor = -40, bDoNormalize = true, bDoAutoRange = false, AutoRangeAttackTime = 0.10000000149011612, AutoRangeReleaseTime = 60) { return fnprepatch_825.call(this, WorldContextObject, InBandSettings, OnSubmixSpectralAnalysisBP, UpdateRate, DecibelNoiseFloor, bDoNormalize, bDoAutoRange, AutoRangeAttackTime, AutoRangeReleaseTime) }; } catch (e) {};
try { SoundSubmix.prototype.FinishRecordingSubmixOutput = SoundSubmix.prototype.StopRecordingOutput; } catch (e) {};
try { SoundSubmix.prototype.StartRecordingSubmixOutput = SoundSubmix.prototype.StartRecordingOutput; } catch (e) {};
try { let fnprepatch_826 = StaticMesh.prototype.SetMinLODForQualityLevels;StaticMesh.prototype.SetMinLODForQualityLevels = function (QualityLevelMinimumLODs, Default = -1) { return fnprepatch_826.call(this, QualityLevelMinimumLODs, Default) }; } catch (e) {};
try { let fnprepatch_827 = StaticMesh.prototype.CreateStaticMeshDescription;StaticMesh.prototype.CreateStaticMeshDescription = function (Outer = undefined) { return fnprepatch_827.call(this, Outer) }; } catch (e) {};
try { let fnprepatch_828 = StaticMesh.prototype.BuildFromStaticMeshDescriptions;StaticMesh.prototype.BuildFromStaticMeshDescriptions = function (StaticMeshDescriptions, bBuildSimpleCollision = false, bFastBuild = true) { return fnprepatch_828.call(this, StaticMeshDescriptions, bBuildSimpleCollision, bFastBuild) }; } catch (e) {};
try { let fnprepatch_829 = StereoLayerFunctionLibrary.prototype.SetSplashScreen;StereoLayerFunctionLibrary.prototype.SetSplashScreen = function (Texture, Scale = {"X":1,"Y":1}, Offset, bShowLoadingMovie = false, bShowOnSet = false) { return fnprepatch_829.call(this, Texture, Scale, Offset, bShowLoadingMovie, bShowOnSet) }; } catch (e) {};
try { let fnprepatch_830 = Canvas.prototype.K2_TextSize;Canvas.prototype.K2_TextSize = function (RenderFont, RenderText, Scale = {"X":1,"Y":1}) { return fnprepatch_830.call(this, RenderFont, RenderText, Scale) }; } catch (e) {};
try { let fnprepatch_831 = Canvas.prototype.K2_DrawTexture;Canvas.prototype.K2_DrawTexture = function (RenderTexture, ScreenPosition, ScreenSize, CoordinatePosition, CoordinateSize = {"X":1,"Y":1}, RenderColor = {"R":1,"G":1,"B":1,"A":1}, BlendMode = "BLEND_Translucent", Rotation = 0, PivotPoint = {"X":0.5,"Y":0.5}) { return fnprepatch_831.call(this, RenderTexture, ScreenPosition, ScreenSize, CoordinatePosition, CoordinateSize, RenderColor, BlendMode, Rotation, PivotPoint) }; } catch (e) {};
try { let fnprepatch_832 = Canvas.prototype.K2_DrawText;Canvas.prototype.K2_DrawText = function (RenderFont, RenderText, ScreenPosition, Scale = {"X":1,"Y":1}, RenderColor = {"R":1,"G":1,"B":1,"A":1}, Kerning = 0, ShadowColor = {"R":0,"G":0,"B":0,"A":1}, ShadowOffset = {"X":1,"Y":1}, bCentreX = false, bCentreY = false, bOutlined = false, OutlineColor = {"R":0,"G":0,"B":0,"A":1}) { return fnprepatch_832.call(this, RenderFont, RenderText, ScreenPosition, Scale, RenderColor, Kerning, ShadowColor, ShadowOffset, bCentreX, bCentreY, bOutlined, OutlineColor) }; } catch (e) {};
try { let fnprepatch_833 = Canvas.prototype.K2_DrawPolygon;Canvas.prototype.K2_DrawPolygon = function (RenderTexture, ScreenPosition, Radius = {"X":1,"Y":1}, NumberOfSides = 3, RenderColor = {"R":1,"G":1,"B":1,"A":1}) { return fnprepatch_833.call(this, RenderTexture, ScreenPosition, Radius, NumberOfSides, RenderColor) }; } catch (e) {};
try { let fnprepatch_834 = Canvas.prototype.K2_DrawMaterial;Canvas.prototype.K2_DrawMaterial = function (RenderMaterial, ScreenPosition, ScreenSize, CoordinatePosition, CoordinateSize = {"X":1,"Y":1}, Rotation = 0, PivotPoint = {"X":0.5,"Y":0.5}) { return fnprepatch_834.call(this, RenderMaterial, ScreenPosition, ScreenSize, CoordinatePosition, CoordinateSize, Rotation, PivotPoint) }; } catch (e) {};
try { let fnprepatch_835 = Canvas.prototype.K2_DrawLine;Canvas.prototype.K2_DrawLine = function (ScreenPositionA, ScreenPositionB, Thickness = 1, RenderColor = {"R":1,"G":1,"B":1,"A":1}) { return fnprepatch_835.call(this, ScreenPositionA, ScreenPositionB, Thickness, RenderColor) }; } catch (e) {};
try { let fnprepatch_836 = Canvas.prototype.K2_DrawBox;Canvas.prototype.K2_DrawBox = function (ScreenPosition, ScreenSize, Thickness = 1, RenderColor = {"R":1,"G":1,"B":1,"A":1}) { return fnprepatch_836.call(this, ScreenPosition, ScreenSize, Thickness, RenderColor) }; } catch (e) {};
try { let fnprepatch_837 = Canvas.prototype.K2_DrawBorder;Canvas.prototype.K2_DrawBorder = function (BorderTexture, BackgroundTexture, LeftBorderTexture, RightBorderTexture, TopBorderTexture, BottomBorderTexture, ScreenPosition, ScreenSize, CoordinatePosition, CoordinateSize = {"X":1,"Y":1}, RenderColor = {"R":1,"G":1,"B":1,"A":1}, BorderScale = {"X":0.1,"Y":0.1}, BackgroundScale = {"X":0.1,"Y":0.1}, Rotation = 0, PivotPoint = {"X":0.5,"Y":0.5}, CornerSize) { return fnprepatch_837.call(this, BorderTexture, BackgroundTexture, LeftBorderTexture, RightBorderTexture, TopBorderTexture, BottomBorderTexture, ScreenPosition, ScreenSize, CoordinatePosition, CoordinateSize, RenderColor, BorderScale, BackgroundScale, Rotation, PivotPoint, CornerSize) }; } catch (e) {};
try { Canvas.prototype.ClippedTextSize = Canvas.prototype.K2_TextSize; } catch (e) {};
try { Canvas.prototype.WrappedTextSize = Canvas.prototype.K2_StrLen; } catch (e) {};
try { Canvas.prototype.Project = Canvas.prototype.K2_Project; } catch (e) {};
try { Canvas.prototype.DrawTriangles = Canvas.prototype.K2_DrawTriangle; } catch (e) {};
try { Canvas.prototype.DrawTexture = Canvas.prototype.K2_DrawTexture; } catch (e) {};
try { Canvas.prototype.DrawText = Canvas.prototype.K2_DrawText; } catch (e) {};
try { Canvas.prototype.DrawPolygon = Canvas.prototype.K2_DrawPolygon; } catch (e) {};
try { Canvas.prototype.DrawMaterialTriangles = Canvas.prototype.K2_DrawMaterialTriangle; } catch (e) {};
try { Canvas.prototype.DrawMaterial = Canvas.prototype.K2_DrawMaterial; } catch (e) {};
try { Canvas.prototype.DrawLine = Canvas.prototype.K2_DrawLine; } catch (e) {};
try { Canvas.prototype.DrawBox = Canvas.prototype.K2_DrawBox; } catch (e) {};
try { Canvas.prototype.DrawBorder = Canvas.prototype.K2_DrawBorder; } catch (e) {};
try { Canvas.prototype.Deproject = Canvas.prototype.K2_Deproject; } catch (e) {};
try { let fnprepatch_838 = InputSettings.prototype.RemoveAxisMapping;InputSettings.prototype.RemoveAxisMapping = function (KeyMapping, bForceRebuildKeymaps = true) { return fnprepatch_838.call(this, KeyMapping, bForceRebuildKeymaps) }; } catch (e) {};
try { let fnprepatch_839 = InputSettings.prototype.RemoveActionMapping;InputSettings.prototype.RemoveActionMapping = function (KeyMapping, bForceRebuildKeymaps = true) { return fnprepatch_839.call(this, KeyMapping, bForceRebuildKeymaps) }; } catch (e) {};
try { let fnprepatch_840 = InputSettings.prototype.AddAxisMapping;InputSettings.prototype.AddAxisMapping = function (KeyMapping, bForceRebuildKeymaps = true) { return fnprepatch_840.call(this, KeyMapping, bForceRebuildKeymaps) }; } catch (e) {};
try { let fnprepatch_841 = InputSettings.prototype.AddActionMapping;InputSettings.prototype.AddActionMapping = function (KeyMapping, bForceRebuildKeymaps = true) { return fnprepatch_841.call(this, KeyMapping, bForceRebuildKeymaps) }; } catch (e) {};
try { let fnprepatch_842 = VisualLoggerKismetLibrary.prototype.LogText;VisualLoggerKismetLibrary.prototype.LogText = function (WorldContextObject, Text, LogCategory = "VisLogBP", bAddToMessageLog = false) { return fnprepatch_842.call(this, WorldContextObject, Text, LogCategory, bAddToMessageLog) }; } catch (e) {};
try { let fnprepatch_843 = VisualLoggerKismetLibrary.prototype.LogSegment;VisualLoggerKismetLibrary.prototype.LogSegment = function (WorldContextObject, SegmentStart, SegmentEnd, Text, ObjectColor = {"R":0,"G":0,"B":1,"A":1}, Thickness = 0, CategoryName = "VisLogBP", bAddToMessageLog = false) { return fnprepatch_843.call(this, WorldContextObject, SegmentStart, SegmentEnd, Text, ObjectColor, Thickness, CategoryName, bAddToMessageLog) }; } catch (e) {};
try { let fnprepatch_844 = VisualLoggerKismetLibrary.prototype.LogLocation;VisualLoggerKismetLibrary.prototype.LogLocation = function (WorldContextObject, Location, Text, ObjectColor = {"R":0,"G":0,"B":1,"A":1}, Radius = 10, LogCategory = "VisLogBP", bAddToMessageLog = false) { return fnprepatch_844.call(this, WorldContextObject, Location, Text, ObjectColor, Radius, LogCategory, bAddToMessageLog) }; } catch (e) {};
try { let fnprepatch_845 = VisualLoggerKismetLibrary.prototype.LogBox;VisualLoggerKismetLibrary.prototype.LogBox = function (WorldContextObject, BoxShape, Text, ObjectColor = {"R":0,"G":0,"B":1,"A":1}, LogCategory = "VisLogBP", bAddToMessageLog = false) { return fnprepatch_845.call(this, WorldContextObject, BoxShape, Text, ObjectColor, LogCategory, bAddToMessageLog) }; } catch (e) {};
try { VisualLoggerKismetLibrary.prototype.VisLogText = VisualLoggerKismetLibrary.prototype.LogText; } catch (e) {};
try { VisualLoggerKismetLibrary.VisLogText = VisualLoggerKismetLibrary.LogText; } catch (e) {};
try { VisualLoggerKismetLibrary.prototype.VisLogSegment = VisualLoggerKismetLibrary.prototype.LogSegment; } catch (e) {};
try { VisualLoggerKismetLibrary.VisLogSegment = VisualLoggerKismetLibrary.LogSegment; } catch (e) {};
try { VisualLoggerKismetLibrary.prototype.VisLogLocation = VisualLoggerKismetLibrary.prototype.LogLocation; } catch (e) {};
try { VisualLoggerKismetLibrary.VisLogLocation = VisualLoggerKismetLibrary.LogLocation; } catch (e) {};
try { VisualLoggerKismetLibrary.prototype.VisLogBoxShape = VisualLoggerKismetLibrary.prototype.LogBox; } catch (e) {};
try { VisualLoggerKismetLibrary.VisLogBoxShape = VisualLoggerKismetLibrary.LogBox; } catch (e) {};
try { VisualLoggerKismetLibrary.prototype.EnableVisLogRecording = VisualLoggerKismetLibrary.prototype.EnableRecording; } catch (e) {};
try { VisualLoggerKismetLibrary.EnableVisLogRecording = VisualLoggerKismetLibrary.EnableRecording; } catch (e) {};
try { VOIPTalker.prototype.EndTalking = VOIPTalker.prototype.BPOnTalkingEnd; } catch (e) {};
try { VOIPTalker.prototype.BeginTalking = VOIPTalker.prototype.BPOnTalkingBegin; } catch (e) {};
try { let fnprepatch_846 = DataLayerSubsystem.prototype.SetDataLayerRuntimeStateByLabel;DataLayerSubsystem.prototype.SetDataLayerRuntimeStateByLabel = function (InDataLayerLabel, InState, bInIsRecursive = false) { return fnprepatch_846.call(this, InDataLayerLabel, InState, bInIsRecursive) }; } catch (e) {};
try { let fnprepatch_847 = DataLayerSubsystem.prototype.SetDataLayerRuntimeState;DataLayerSubsystem.prototype.SetDataLayerRuntimeState = function (InDataLayer, InState, bInIsRecursive = false) { return fnprepatch_847.call(this, InDataLayer, InState, bInIsRecursive) }; } catch (e) {};
try { let fnprepatch_848 = DataLayerSubsystem.prototype.SetDataLayerInstanceRuntimeState;DataLayerSubsystem.prototype.SetDataLayerInstanceRuntimeState = function (InDataLayerAsset, InState, bInIsRecursive = false) { return fnprepatch_848.call(this, InDataLayerAsset, InState, bInIsRecursive) }; } catch (e) {};
try { let fnprepatch_849 = AnimationCompressionLibraryDatabase.prototype.SetVisualFidelity;AnimationCompressionLibraryDatabase.prototype.SetVisualFidelity = function (WorldContextObject, LatentInfo, DatabaseAsset, Result, VisualFidelity = "Highest") { return fnprepatch_849.call(this, WorldContextObject, LatentInfo, DatabaseAsset, Result, VisualFidelity) }; } catch (e) {};
try { AnimationCompressionLibraryDatabase.prototype.SetDatabaseVisualFidelity = AnimationCompressionLibraryDatabase.prototype.SetVisualFidelity; } catch (e) {};
try { AnimationCompressionLibraryDatabase.SetDatabaseVisualFidelity = AnimationCompressionLibraryDatabase.SetVisualFidelity; } catch (e) {};
try { AnimationCompressionLibraryDatabase.prototype.GetDatabaseVisualFidelity = AnimationCompressionLibraryDatabase.prototype.GetVisualFidelity; } catch (e) {};
try { AnimationCompressionLibraryDatabase.GetDatabaseVisualFidelity = AnimationCompressionLibraryDatabase.GetVisualFidelity; } catch (e) {};
try { let fnprepatch_850 = AchievementWriteCallbackProxy.prototype.WriteAchievementProgress;AchievementWriteCallbackProxy.prototype.WriteAchievementProgress = function (WorldContextObject, PlayerController, AchievementName, Progress = 100, UserTag = 0) { return fnprepatch_850.call(this, WorldContextObject, PlayerController, AchievementName, Progress, UserTag) }; } catch (e) {};
try { InAppPurchaseCallbackProxy2.prototype.ProcessanyNewUnprocessedPurchasesv2 = InAppPurchaseCallbackProxy2.prototype.CreateProxyObjectForInAppPurchaseUnprocessedPurchases; } catch (e) {};
try { InAppPurchaseCallbackProxy2.ProcessanyNewUnprocessedPurchasesv2 = InAppPurchaseCallbackProxy2.CreateProxyObjectForInAppPurchaseUnprocessedPurchases; } catch (e) {};
try { InAppPurchaseCallbackProxy2.prototype.QueryforOwnedPurchases = InAppPurchaseCallbackProxy2.prototype.CreateProxyObjectForInAppPurchaseQueryOwned; } catch (e) {};
try { InAppPurchaseCallbackProxy2.QueryforOwnedPurchases = InAppPurchaseCallbackProxy2.CreateProxyObjectForInAppPurchaseQueryOwned; } catch (e) {};
try { InAppPurchaseQueryCallbackProxy2.prototype.ReadInAppPurchaseInformation2 = InAppPurchaseQueryCallbackProxy2.prototype.CreateProxyObjectForInAppPurchaseQuery; } catch (e) {};
try { InAppPurchaseQueryCallbackProxy2.ReadInAppPurchaseInformation2 = InAppPurchaseQueryCallbackProxy2.CreateProxyObjectForInAppPurchaseQuery; } catch (e) {};
try { LeaderboardQueryCallbackProxy.prototype.ReadLeaderboardInteger = LeaderboardQueryCallbackProxy.prototype.CreateProxyObjectForIntQuery; } catch (e) {};
try { LeaderboardQueryCallbackProxy.ReadLeaderboardInteger = LeaderboardQueryCallbackProxy.CreateProxyObjectForIntQuery; } catch (e) {};
try { let fnprepatch_851 = LevelVariantSetsActor.prototype.GetLevelVariantSets;LevelVariantSetsActor.prototype.GetLevelVariantSets = function (bLoad = false) { return fnprepatch_851.call(this, bLoad) }; } catch (e) {};
try { let fnprepatch_852 = Variant.prototype.SetThumbnailFromCamera;Variant.prototype.SetThumbnailFromCamera = function (WorldContextObject, CameraTransform, FOVDegrees = 50, MinZ = 50, Gamma = 2.200000047683716) { return fnprepatch_852.call(this, WorldContextObject, CameraTransform, FOVDegrees, MinZ, Gamma) }; } catch (e) {};
try { let fnprepatch_853 = VariantSet.prototype.SetThumbnailFromCamera;VariantSet.prototype.SetThumbnailFromCamera = function (WorldContextObject, CameraTransform, FOVDegrees = 50, MinZ = 50, Gamma = 2.200000047683716) { return fnprepatch_853.call(this, WorldContextObject, CameraTransform, FOVDegrees, MinZ, Gamma) }; } catch (e) {};
try { let fnprepatch_854 = DatasmithContentBlueprintLibrary.prototype.GetDatasmithUserDataValuesForKey;DatasmithContentBlueprintLibrary.prototype.GetDatasmithUserDataValuesForKey = function (Object, Key, bPartialMatchKey = false) { return fnprepatch_854.call(this, Object, Key, bPartialMatchKey) }; } catch (e) {};
try { let fnprepatch_855 = DatasmithContentBlueprintLibrary.prototype.GetDatasmithUserDataValueForKey;DatasmithContentBlueprintLibrary.prototype.GetDatasmithUserDataValueForKey = function (Object, Key, bPartialMatchKey = false) { return fnprepatch_855.call(this, Object, Key, bPartialMatchKey) }; } catch (e) {};
try { let fnprepatch_856 = ChaosClothingInteractor.prototype.SetWind;ChaosClothingInteractor.prototype.SetWind = function (Drag = {"X":0.07,"Y":0.5}, Lift = {"X":0.07,"Y":0.5}, AirDensity = 9.999999974752427e-7, WindVelocity) { return fnprepatch_856.call(this, Drag, Lift, AirDensity, WindVelocity) }; } catch (e) {};
try { let fnprepatch_857 = ChaosClothingInteractor.prototype.SetVelocityScale;ChaosClothingInteractor.prototype.SetVelocityScale = function (LinearVelocityScale, AngularVelocityScale = 0.75, FictitiousAngularScale = 1) { return fnprepatch_857.call(this, LinearVelocityScale, AngularVelocityScale, FictitiousAngularScale) }; } catch (e) {};
try { let fnprepatch_858 = ChaosClothingInteractor.prototype.SetPressure;ChaosClothingInteractor.prototype.SetPressure = function (Pressure = {"X":0,"Y":1}) { return fnprepatch_858.call(this, Pressure) }; } catch (e) {};
try { let fnprepatch_859 = ChaosClothingInteractor.prototype.SetMaterialLinear;ChaosClothingInteractor.prototype.SetMaterialLinear = function (EdgeStiffness = 1, BendingStiffness = 1, AreaStiffness = 1) { return fnprepatch_859.call(this, EdgeStiffness, BendingStiffness, AreaStiffness) }; } catch (e) {};
try { let fnprepatch_860 = ChaosClothingInteractor.prototype.SetMaterial;ChaosClothingInteractor.prototype.SetMaterial = function (EdgeStiffness = {"X":1,"Y":1}, BendingStiffness = {"X":1,"Y":1}, AreaStiffness = {"X":1,"Y":1}) { return fnprepatch_860.call(this, EdgeStiffness, BendingStiffness, AreaStiffness) }; } catch (e) {};
try { let fnprepatch_861 = ChaosClothingInteractor.prototype.SetLongRangeAttachmentLinear;ChaosClothingInteractor.prototype.SetLongRangeAttachmentLinear = function (TetherStiffness = 1, TetherScale = 1) { return fnprepatch_861.call(this, TetherStiffness, TetherScale) }; } catch (e) {};
try { let fnprepatch_862 = ChaosClothingInteractor.prototype.SetLongRangeAttachment;ChaosClothingInteractor.prototype.SetLongRangeAttachment = function (TetherStiffness = {"X":1,"Y":1}, TetherScale = {"X":1,"Y":1}) { return fnprepatch_862.call(this, TetherStiffness, TetherScale) }; } catch (e) {};
try { let fnprepatch_863 = ChaosClothingInteractor.prototype.SetGravity;ChaosClothingInteractor.prototype.SetGravity = function (GravityScale = 1, bIsGravityOverridden = false, GravityOverride) { return fnprepatch_863.call(this, GravityScale, bIsGravityOverridden, GravityOverride) }; } catch (e) {};
try { let fnprepatch_864 = ChaosClothingInteractor.prototype.SetDamping;ChaosClothingInteractor.prototype.SetDamping = function (DampingCoefficient = 0.009999999776482582, LocalDampingCoefficient = 0) { return fnprepatch_864.call(this, DampingCoefficient, LocalDampingCoefficient) }; } catch (e) {};
try { let fnprepatch_865 = ChaosClothingInteractor.prototype.SetCollision;ChaosClothingInteractor.prototype.SetCollision = function (CollisionThickness = 1, FrictionCoefficient = 0.800000011920929, bUseCCD = false, SelfCollisionThickness = 2) { return fnprepatch_865.call(this, CollisionThickness, FrictionCoefficient, bUseCCD, SelfCollisionThickness) }; } catch (e) {};
try { let fnprepatch_866 = ChaosClothingInteractor.prototype.SetBackstop;ChaosClothingInteractor.prototype.SetBackstop = function (bEnabled = true) { return fnprepatch_866.call(this, bEnabled) }; } catch (e) {};
try { let fnprepatch_867 = ChaosClothingInteractor.prototype.SetAnimDriveLinear;ChaosClothingInteractor.prototype.SetAnimDriveLinear = function (AnimDriveStiffness = 0) { return fnprepatch_867.call(this, AnimDriveStiffness) }; } catch (e) {};
try { let fnprepatch_868 = ChaosClothingInteractor.prototype.SetAnimDrive;ChaosClothingInteractor.prototype.SetAnimDrive = function (AnimDriveStiffness = {"X":0,"Y":1}, AnimDriveDamping = {"X":0,"Y":1}) { return fnprepatch_868.call(this, AnimDriveStiffness, AnimDriveDamping) }; } catch (e) {};
try { let fnprepatch_869 = ChaosClothingInteractor.prototype.SetAerodynamics;ChaosClothingInteractor.prototype.SetAerodynamics = function (DragCoefficient = 0.07000000029802322, LiftCoefficient = 0.03500000014901161, WindVelocity) { return fnprepatch_869.call(this, DragCoefficient, LiftCoefficient, WindVelocity) }; } catch (e) {};
try { let fnprepatch_870 = ChaosClothingInteractor.prototype.ResetAndTeleport;ChaosClothingInteractor.prototype.ResetAndTeleport = function (bReset = false, bTeleport = false) { return fnprepatch_870.call(this, bReset, bTeleport) }; } catch (e) {};
try { let fnprepatch_871 = AutomationBlueprintFunctionLibrary.prototype.TakeHighResScreenshot;AutomationBlueprintFunctionLibrary.prototype.TakeHighResScreenshot = function (ResX, ResY, Filename, Camera = undefined, bMaskEnabled = false, bCaptureHDR = false, ComparisonTolerance = "Zero", ComparisonNotes, Delay = 0) { return fnprepatch_871.call(this, ResX, ResY, Filename, Camera, bMaskEnabled, bCaptureHDR, ComparisonTolerance, ComparisonNotes, Delay) }; } catch (e) {};
try { let fnprepatch_872 = AutomationBlueprintFunctionLibrary.prototype.SetScalabilityQualityLevelRelativeToMax;AutomationBlueprintFunctionLibrary.prototype.SetScalabilityQualityLevelRelativeToMax = function (WorldContextObject, Value = 1) { return fnprepatch_872.call(this, WorldContextObject, Value) }; } catch (e) {};
try { let fnprepatch_873 = AutomationBlueprintFunctionLibrary.prototype.GetDefaultScreenshotOptionsForRendering;AutomationBlueprintFunctionLibrary.prototype.GetDefaultScreenshotOptionsForRendering = function (Tolerance = "Low", Delay = 0.20000000298023224) { return fnprepatch_873.call(this, Tolerance, Delay) }; } catch (e) {};
try { let fnprepatch_874 = AutomationBlueprintFunctionLibrary.prototype.GetDefaultScreenshotOptionsForGameplay;AutomationBlueprintFunctionLibrary.prototype.GetDefaultScreenshotOptionsForGameplay = function (Tolerance = "Low", Delay = 0.20000000298023224) { return fnprepatch_874.call(this, Tolerance, Delay) }; } catch (e) {};
try { let fnprepatch_875 = AutomationBlueprintFunctionLibrary.prototype.CompareImageAgainstReference;AutomationBlueprintFunctionLibrary.prototype.CompareImageAgainstReference = function (ImageFilePath, ComparisonName, ComparisonTolerance = "Zero", ComparisonNotes, WorldContextObject = undefined) { return fnprepatch_875.call(this, ImageFilePath, ComparisonName, ComparisonTolerance, ComparisonNotes, WorldContextObject) }; } catch (e) {};
try { let fnprepatch_876 = AutomationBlueprintFunctionLibrary.prototype.AddExpectedLogError;AutomationBlueprintFunctionLibrary.prototype.AddExpectedLogError = function (ExpectedPatternString, Occurrences = 1, ExactMatch = false) { return fnprepatch_876.call(this, ExpectedPatternString, Occurrences, ExactMatch) }; } catch (e) {};
try { let fnprepatch_877 = FunctionalTest.prototype.AssertValue_Int;FunctionalTest.prototype.AssertValue_Int = function (Actual, ShouldBe, Expected, What, ContextObject = undefined) { return fnprepatch_877.call(this, Actual, ShouldBe, Expected, What, ContextObject) }; } catch (e) {};
try { let fnprepatch_878 = FunctionalTest.prototype.AssertValue_Float;FunctionalTest.prototype.AssertValue_Float = function (Actual, ShouldBe, Expected, What, ContextObject = undefined) { return fnprepatch_878.call(this, Actual, ShouldBe, Expected, What, ContextObject) }; } catch (e) {};
try { let fnprepatch_879 = FunctionalTest.prototype.AssertValue_Double;FunctionalTest.prototype.AssertValue_Double = function (Actual, ShouldBe, Expected, What, ContextObject = undefined) { return fnprepatch_879.call(this, Actual, ShouldBe, Expected, What, ContextObject) }; } catch (e) {};
try { let fnprepatch_880 = FunctionalTest.prototype.AssertValue_DateTime;FunctionalTest.prototype.AssertValue_DateTime = function (Actual, ShouldBe, Expected, What, ContextObject = undefined) { return fnprepatch_880.call(this, Actual, ShouldBe, Expected, What, ContextObject) }; } catch (e) {};
try { let fnprepatch_881 = FunctionalTest.prototype.AssertTrue;FunctionalTest.prototype.AssertTrue = function (Condition, Message, ContextObject = undefined) { return fnprepatch_881.call(this, Condition, Message, ContextObject) }; } catch (e) {};
try { let fnprepatch_882 = FunctionalTest.prototype.AssertNotEqual_Vector4;FunctionalTest.prototype.AssertNotEqual_Vector4 = function (Actual, NotExpected, What, ContextObject = undefined) { return fnprepatch_882.call(this, Actual, NotExpected, What, ContextObject) }; } catch (e) {};
try { let fnprepatch_883 = FunctionalTest.prototype.AssertNotEqual_Vector2D;FunctionalTest.prototype.AssertNotEqual_Vector2D = function (Actual, NotExpected, What, ContextObject = undefined) { return fnprepatch_883.call(this, Actual, NotExpected, What, ContextObject) }; } catch (e) {};
try { let fnprepatch_884 = FunctionalTest.prototype.AssertNotEqual_Vector;FunctionalTest.prototype.AssertNotEqual_Vector = function (Actual, NotExpected, What, ContextObject = undefined) { return fnprepatch_884.call(this, Actual, NotExpected, What, ContextObject) }; } catch (e) {};
try { let fnprepatch_885 = FunctionalTest.prototype.AssertNotEqual_Transform;FunctionalTest.prototype.AssertNotEqual_Transform = function (Actual, NotExpected, What, ContextObject = undefined) { return fnprepatch_885.call(this, Actual, NotExpected, What, ContextObject) }; } catch (e) {};
try { let fnprepatch_886 = FunctionalTest.prototype.AssertNotEqual_String;FunctionalTest.prototype.AssertNotEqual_String = function (Actual, NotExpected, What, ContextObject = undefined) { return fnprepatch_886.call(this, Actual, NotExpected, What, ContextObject) }; } catch (e) {};
try { let fnprepatch_887 = FunctionalTest.prototype.AssertNotEqual_Rotator;FunctionalTest.prototype.AssertNotEqual_Rotator = function (Actual, NotExpected, What, ContextObject = undefined) { return fnprepatch_887.call(this, Actual, NotExpected, What, ContextObject) }; } catch (e) {};
try { let fnprepatch_888 = FunctionalTest.prototype.AssertNotEqual_Quat;FunctionalTest.prototype.AssertNotEqual_Quat = function (Actual, NotExpected, What, ContextObject = undefined) { return fnprepatch_888.call(this, Actual, NotExpected, What, ContextObject) }; } catch (e) {};
try { let fnprepatch_889 = FunctionalTest.prototype.AssertNotEqual_Plane;FunctionalTest.prototype.AssertNotEqual_Plane = function (Actual, NotExpected, What, ContextObject = undefined) { return fnprepatch_889.call(this, Actual, NotExpected, What, ContextObject) }; } catch (e) {};
try { let fnprepatch_890 = FunctionalTest.prototype.AssertNotEqual_Matrix;FunctionalTest.prototype.AssertNotEqual_Matrix = function (Actual, NotExpected, What, ContextObject = undefined) { return fnprepatch_890.call(this, Actual, NotExpected, What, ContextObject) }; } catch (e) {};
try { let fnprepatch_891 = FunctionalTest.prototype.AssertNotEqual_Box2D;FunctionalTest.prototype.AssertNotEqual_Box2D = function (Actual, NotExpected, What, ContextObject = undefined) { return fnprepatch_891.call(this, Actual, NotExpected, What, ContextObject) }; } catch (e) {};
try { let fnprepatch_892 = FunctionalTest.prototype.AssertIsValid;FunctionalTest.prototype.AssertIsValid = function (Object, Message, ContextObject = undefined) { return fnprepatch_892.call(this, Object, Message, ContextObject) }; } catch (e) {};
try { let fnprepatch_893 = FunctionalTest.prototype.AssertFalse;FunctionalTest.prototype.AssertFalse = function (Condition, Message, ContextObject = undefined) { return fnprepatch_893.call(this, Condition, Message, ContextObject) }; } catch (e) {};
try { let fnprepatch_894 = FunctionalTest.prototype.AssertEqual_Vector4;FunctionalTest.prototype.AssertEqual_Vector4 = function (Actual, Expected, What, Tolerance = 0.00009999999747378752, ContextObject = undefined) { return fnprepatch_894.call(this, Actual, Expected, What, Tolerance, ContextObject) }; } catch (e) {};
try { let fnprepatch_895 = FunctionalTest.prototype.AssertEqual_Vector2D;FunctionalTest.prototype.AssertEqual_Vector2D = function (Actual, Expected, What, Tolerance = 0.00009999999747378752, ContextObject = undefined) { return fnprepatch_895.call(this, Actual, Expected, What, Tolerance, ContextObject) }; } catch (e) {};
try { let fnprepatch_896 = FunctionalTest.prototype.AssertEqual_Vector;FunctionalTest.prototype.AssertEqual_Vector = function (Actual, Expected, What, Tolerance = 0.00009999999747378752, ContextObject = undefined) { return fnprepatch_896.call(this, Actual, Expected, What, Tolerance, ContextObject) }; } catch (e) {};
try { let fnprepatch_897 = FunctionalTest.prototype.AssertEqual_Transform;FunctionalTest.prototype.AssertEqual_Transform = function (Actual, Expected, What, Tolerance = 0.00009999999747378752, ContextObject = undefined) { return fnprepatch_897.call(this, Actual, Expected, What, Tolerance, ContextObject) }; } catch (e) {};
try { let fnprepatch_898 = FunctionalTest.prototype.AssertEqual_TraceQueryResults;FunctionalTest.prototype.AssertEqual_TraceQueryResults = function (Actual, Expected, What, ContextObject = undefined) { return fnprepatch_898.call(this, Actual, Expected, What, ContextObject) }; } catch (e) {};
try { let fnprepatch_899 = FunctionalTest.prototype.AssertEqual_String;FunctionalTest.prototype.AssertEqual_String = function (Actual, Expected, What, ContextObject = undefined) { return fnprepatch_899.call(this, Actual, Expected, What, ContextObject) }; } catch (e) {};
try { let fnprepatch_900 = FunctionalTest.prototype.AssertEqual_Rotator;FunctionalTest.prototype.AssertEqual_Rotator = function (Actual, Expected, What, Tolerance = 0.00009999999747378752, ContextObject = undefined) { return fnprepatch_900.call(this, Actual, Expected, What, Tolerance, ContextObject) }; } catch (e) {};
try { let fnprepatch_901 = FunctionalTest.prototype.AssertEqual_Quat;FunctionalTest.prototype.AssertEqual_Quat = function (Actual, Expected, What, Tolerance = 0.00009999999747378752, ContextObject = undefined) { return fnprepatch_901.call(this, Actual, Expected, What, Tolerance, ContextObject) }; } catch (e) {};
try { let fnprepatch_902 = FunctionalTest.prototype.AssertEqual_Plane;FunctionalTest.prototype.AssertEqual_Plane = function (Actual, Expected, What, Tolerance = 0.00009999999747378752, ContextObject = undefined) { return fnprepatch_902.call(this, Actual, Expected, What, Tolerance, ContextObject) }; } catch (e) {};
try { let fnprepatch_903 = FunctionalTest.prototype.AssertEqual_Object;FunctionalTest.prototype.AssertEqual_Object = function (Actual, Expected, What, ContextObject = undefined) { return fnprepatch_903.call(this, Actual, Expected, What, ContextObject) }; } catch (e) {};
try { let fnprepatch_904 = FunctionalTest.prototype.AssertEqual_Name;FunctionalTest.prototype.AssertEqual_Name = function (Actual, Expected, What, ContextObject = undefined) { return fnprepatch_904.call(this, Actual, Expected, What, ContextObject) }; } catch (e) {};
try { let fnprepatch_905 = FunctionalTest.prototype.AssertEqual_Matrix;FunctionalTest.prototype.AssertEqual_Matrix = function (Actual, Expected, What, Tolerance = 0.00009999999747378752, ContextObject = undefined) { return fnprepatch_905.call(this, Actual, Expected, What, Tolerance, ContextObject) }; } catch (e) {};
try { let fnprepatch_906 = FunctionalTest.prototype.AssertEqual_Int;FunctionalTest.prototype.AssertEqual_Int = function (Actual, Expected, What, ContextObject = undefined) { return fnprepatch_906.call(this, Actual, Expected, What, ContextObject) }; } catch (e) {};
try { let fnprepatch_907 = FunctionalTest.prototype.AssertEqual_Float;FunctionalTest.prototype.AssertEqual_Float = function (Actual, Expected, What, Tolerance = 0.00009999999747378752, ContextObject = undefined) { return fnprepatch_907.call(this, Actual, Expected, What, Tolerance, ContextObject) }; } catch (e) {};
try { let fnprepatch_908 = FunctionalTest.prototype.AssertEqual_Double;FunctionalTest.prototype.AssertEqual_Double = function (Actual, Expected, What, Tolerance = 0.0001, ContextObject = undefined) { return fnprepatch_908.call(this, Actual, Expected, What, Tolerance, ContextObject) }; } catch (e) {};
try { let fnprepatch_909 = FunctionalTest.prototype.AssertEqual_Box2D;FunctionalTest.prototype.AssertEqual_Box2D = function (Actual, Expected, What, Tolerance = 0.00009999999747378752, ContextObject = undefined) { return fnprepatch_909.call(this, Actual, Expected, What, Tolerance, ContextObject) }; } catch (e) {};
try { let fnprepatch_910 = FunctionalTest.prototype.AssertEqual_Bool;FunctionalTest.prototype.AssertEqual_Bool = function (Actual, Expected, What, ContextObject = undefined) { return fnprepatch_910.call(this, Actual, Expected, What, ContextObject) }; } catch (e) {};
try { FunctionalTest.prototype.StartTest = FunctionalTest.prototype.ReceiveStartTest; } catch (e) {};
try { FunctionalTest.prototype.PrepareTest = FunctionalTest.prototype.ReceivePrepareTest; } catch (e) {};
try { FunctionalTest.prototype.AssertValue = FunctionalTest.prototype.AssertValue_Int; } catch (e) {};
try { FunctionalTest.prototype.AssertValue = FunctionalTest.prototype.AssertValue_Float; } catch (e) {};
try { FunctionalTest.prototype.AssertValue = FunctionalTest.prototype.AssertValue_Double; } catch (e) {};
try { FunctionalTest.prototype.AssertValue = FunctionalTest.prototype.AssertValue_DateTime; } catch (e) {};
try { FunctionalTest.prototype.AssertNotEqual = FunctionalTest.prototype.AssertNotEqual_Vector4; } catch (e) {};
try { FunctionalTest.prototype.AssertNotEqual = FunctionalTest.prototype.AssertNotEqual_Vector2D; } catch (e) {};
try { FunctionalTest.prototype.AssertNotEqual = FunctionalTest.prototype.AssertNotEqual_Vector; } catch (e) {};
try { FunctionalTest.prototype.AssertNotEqual = FunctionalTest.prototype.AssertNotEqual_Transform; } catch (e) {};
try { FunctionalTest.prototype.AssertNotEqual = FunctionalTest.prototype.AssertNotEqual_String; } catch (e) {};
try { FunctionalTest.prototype.AssertNotEqual = FunctionalTest.prototype.AssertNotEqual_Rotator; } catch (e) {};
try { FunctionalTest.prototype.AssertNotEqual = FunctionalTest.prototype.AssertNotEqual_Quat; } catch (e) {};
try { FunctionalTest.prototype.AssertNotEqual = FunctionalTest.prototype.AssertNotEqual_Plane; } catch (e) {};
try { FunctionalTest.prototype.AssertNotEqual = FunctionalTest.prototype.AssertNotEqual_Matrix; } catch (e) {};
try { FunctionalTest.prototype.AssertNotEqual = FunctionalTest.prototype.AssertNotEqual_Box2D; } catch (e) {};
try { FunctionalTest.prototype.AssertEqual = FunctionalTest.prototype.AssertEqual_Vector4; } catch (e) {};
try { FunctionalTest.prototype.AssertEqual = FunctionalTest.prototype.AssertEqual_Vector2D; } catch (e) {};
try { FunctionalTest.prototype.AssertEqual = FunctionalTest.prototype.AssertEqual_Vector; } catch (e) {};
try { FunctionalTest.prototype.AssertEqual = FunctionalTest.prototype.AssertEqual_Transform; } catch (e) {};
try { FunctionalTest.prototype.AssertEqual = FunctionalTest.prototype.AssertEqual_TraceQueryResults; } catch (e) {};
try { FunctionalTest.prototype.AssertEqual = FunctionalTest.prototype.AssertEqual_String; } catch (e) {};
try { FunctionalTest.prototype.AssertEqual = FunctionalTest.prototype.AssertEqual_Rotator; } catch (e) {};
try { FunctionalTest.prototype.AssertEqual = FunctionalTest.prototype.AssertEqual_Quat; } catch (e) {};
try { FunctionalTest.prototype.AssertEqual = FunctionalTest.prototype.AssertEqual_Plane; } catch (e) {};
try { FunctionalTest.prototype.AssertEqual = FunctionalTest.prototype.AssertEqual_Object; } catch (e) {};
try { FunctionalTest.prototype.AssertEqual = FunctionalTest.prototype.AssertEqual_Name; } catch (e) {};
try { FunctionalTest.prototype.AssertEqual = FunctionalTest.prototype.AssertEqual_Matrix; } catch (e) {};
try { FunctionalTest.prototype.AssertEqual = FunctionalTest.prototype.AssertEqual_Int; } catch (e) {};
try { FunctionalTest.prototype.AssertEqual = FunctionalTest.prototype.AssertEqual_Float; } catch (e) {};
try { FunctionalTest.prototype.AssertEqual = FunctionalTest.prototype.AssertEqual_Double; } catch (e) {};
try { FunctionalTest.prototype.AssertEqual = FunctionalTest.prototype.AssertEqual_Box2D; } catch (e) {};
try { FunctionalTest.prototype.AssertEqual = FunctionalTest.prototype.AssertEqual_Bool; } catch (e) {};
try { let fnprepatch_911 = FunctionalTestingManager.prototype.RunAllFunctionalTests;FunctionalTestingManager.prototype.RunAllFunctionalTests = function (WorldContextObject, bNewLog = true, bRunLooped = false, FailedTestsReproString) { return fnprepatch_911.call(this, WorldContextObject, bNewLog, bRunLooped, FailedTestsReproString) }; } catch (e) {};
try { let fnprepatch_912 = FunctionalTestUtilityLibrary.prototype.TraceChannelTestUtil;FunctionalTestUtilityLibrary.prototype.TraceChannelTestUtil = function (WorldContextObject, BatchOptions, Start, End, SphereCapsuleRadius, CapsuleHalfHeight, BoxHalfSize, Orientation, TraceChannel, ObjectTypes, ProfileName, bTraceComplex, ActorsToIgnore, bIgnoreSelf, DrawDebugType, TraceColor = {"R":1,"G":0,"B":0,"A":1}, TraceHitColor = {"R":0,"G":1,"B":0,"A":1}, DrawTime = 5) { return fnprepatch_912.call(this, WorldContextObject, BatchOptions, Start, End, SphereCapsuleRadius, CapsuleHalfHeight, BoxHalfSize, Orientation, TraceChannel, ObjectTypes, ProfileName, bTraceComplex, ActorsToIgnore, bIgnoreSelf, DrawDebugType, TraceColor, TraceHitColor, DrawTime) }; } catch (e) {};
try { let fnprepatch_913 = AndroidFileServerBPLibrary.prototype.StopFileServer;AndroidFileServerBPLibrary.prototype.StopFileServer = function (bUSB = true, bNetwork = true) { return fnprepatch_913.call(this, bUSB, bNetwork) }; } catch (e) {};
try { let fnprepatch_914 = AndroidFileServerBPLibrary.prototype.StartFileServer;AndroidFileServerBPLibrary.prototype.StartFileServer = function (bUSB = true, bNetwork = false, Port = 57099) { return fnprepatch_914.call(this, bUSB, bNetwork, Port) }; } catch (e) {};
try { EnhancedPlayerMappableKeyProfile.prototype.FindKeyMapping = EnhancedPlayerMappableKeyProfile.prototype.K2_FindKeyMapping; } catch (e) {};
try { let fnprepatch_915 = EnhancedInputLibrary.prototype.RequestRebuildControlMappingsUsingContext;EnhancedInputLibrary.prototype.RequestRebuildControlMappingsUsingContext = function (Context, bForceImmediately = false) { return fnprepatch_915.call(this, Context, bForceImmediately) }; } catch (e) {};
try { EnhancedInputLibrary.prototype.ToString = EnhancedInputLibrary.prototype.Conv_InputActionValueToString; } catch (e) {};
try { EnhancedInputLibrary.ToString = EnhancedInputLibrary.Conv_InputActionValueToString; } catch (e) {};
try { let fnprepatch_916 = EnhancedInputSubsystemInterface.prototype.RequestRebuildControlMappings;EnhancedInputSubsystemInterface.prototype.RequestRebuildControlMappings = function (Options = {"bIgnoreAllPressedKeysUntilRelease":false,"bForceImmediately":false,"bNotifyUserSettings":false}, RebuildType = "None") { return fnprepatch_916.call(this, Options, RebuildType) }; } catch (e) {};
try { let fnprepatch_917 = EnhancedInputSubsystemInterface.prototype.RemovePlayerMappableConfig;EnhancedInputSubsystemInterface.prototype.RemovePlayerMappableConfig = function (Config, Options = {"bIgnoreAllPressedKeysUntilRelease":false,"bForceImmediately":false,"bNotifyUserSettings":false}) { return fnprepatch_917.call(this, Config, Options) }; } catch (e) {};
try { let fnprepatch_918 = EnhancedInputSubsystemInterface.prototype.RemoveMappingContext;EnhancedInputSubsystemInterface.prototype.RemoveMappingContext = function (MappingContext, Options = {"bIgnoreAllPressedKeysUntilRelease":false,"bForceImmediately":false,"bNotifyUserSettings":false}) { return fnprepatch_918.call(this, MappingContext, Options) }; } catch (e) {};
try { let fnprepatch_919 = EnhancedInputSubsystemInterface.prototype.RemoveAllPlayerMappedKeysForMapping;EnhancedInputSubsystemInterface.prototype.RemoveAllPlayerMappedKeysForMapping = function (MappingName, Options = {"bIgnoreAllPressedKeysUntilRelease":false,"bForceImmediately":false,"bNotifyUserSettings":false}) { return fnprepatch_919.call(this, MappingName, Options) }; } catch (e) {};
try { let fnprepatch_920 = EnhancedInputSubsystemInterface.prototype.RemoveAllPlayerMappedKeys;EnhancedInputSubsystemInterface.prototype.RemoveAllPlayerMappedKeys = function (Options = {"bIgnoreAllPressedKeysUntilRelease":false,"bForceImmediately":false,"bNotifyUserSettings":false}) { return fnprepatch_920.call(this, Options) }; } catch (e) {};
try { let fnprepatch_921 = EnhancedInputSubsystemInterface.prototype.K2_RemovePlayerMappedKeyInSlot;EnhancedInputSubsystemInterface.prototype.K2_RemovePlayerMappedKeyInSlot = function (MappingName, KeySlot = {"SlotNumber":0}, Options = {"bIgnoreAllPressedKeysUntilRelease":false,"bForceImmediately":false,"bNotifyUserSettings":false}) { return fnprepatch_921.call(this, MappingName, KeySlot, Options) }; } catch (e) {};
try { let fnprepatch_922 = EnhancedInputSubsystemInterface.prototype.K2_GetPlayerMappedKeyInSlot;EnhancedInputSubsystemInterface.prototype.K2_GetPlayerMappedKeyInSlot = function (MappingName, KeySlot = {"SlotNumber":0}) { return fnprepatch_922.call(this, MappingName, KeySlot) }; } catch (e) {};
try { let fnprepatch_923 = EnhancedInputSubsystemInterface.prototype.K2_AddPlayerMappedKeyInSlot;EnhancedInputSubsystemInterface.prototype.K2_AddPlayerMappedKeyInSlot = function (MappingName, NewKey, KeySlot = {"SlotNumber":0}, Options = {"bIgnoreAllPressedKeysUntilRelease":false,"bForceImmediately":false,"bNotifyUserSettings":false}) { return fnprepatch_923.call(this, MappingName, NewKey, KeySlot, Options) }; } catch (e) {};
try { let fnprepatch_924 = EnhancedInputSubsystemInterface.prototype.AddPlayerMappableConfig;EnhancedInputSubsystemInterface.prototype.AddPlayerMappableConfig = function (Config, Options = {"bIgnoreAllPressedKeysUntilRelease":false,"bForceImmediately":false,"bNotifyUserSettings":false}) { return fnprepatch_924.call(this, Config, Options) }; } catch (e) {};
try { let fnprepatch_925 = EnhancedInputSubsystemInterface.prototype.AddMappingContext;EnhancedInputSubsystemInterface.prototype.AddMappingContext = function (MappingContext, Priority, Options = {"bIgnoreAllPressedKeysUntilRelease":false,"bForceImmediately":false,"bNotifyUserSettings":false}) { return fnprepatch_925.call(this, MappingContext, Priority, Options) }; } catch (e) {};
try { EnhancedInputSubsystemInterface.prototype.RemovePlayerMappedKeyInSlot = EnhancedInputSubsystemInterface.prototype.K2_RemovePlayerMappedKeyInSlot; } catch (e) {};
try { EnhancedInputSubsystemInterface.prototype.GetPlayerMappedKeyInSlot = EnhancedInputSubsystemInterface.prototype.K2_GetPlayerMappedKeyInSlot; } catch (e) {};
try { EnhancedInputSubsystemInterface.prototype.AddPlayerMappedKeyInSlot = EnhancedInputSubsystemInterface.prototype.K2_AddPlayerMappedKeyInSlot; } catch (e) {};
try { EnhancedInputSubsystemInterface.prototype.GetEnhancedInputUserSettings = EnhancedInputSubsystemInterface.prototype.GetUserSettings; } catch (e) {};
try { AnimationSharingManager.prototype.RegisterActor = AnimationSharingManager.prototype.RegisterActorWithSkeletonBP; } catch (e) {};
try { let fnprepatch_926 = RigVM.prototype.SetParameterValueVector2D;RigVM.prototype.SetParameterValueVector2D = function (InParameterName, InValue, InArrayIndex = 0) { return fnprepatch_926.call(this, InParameterName, InValue, InArrayIndex) }; } catch (e) {};
try { let fnprepatch_927 = RigVM.prototype.SetParameterValueVector;RigVM.prototype.SetParameterValueVector = function (InParameterName, InValue, InArrayIndex = 0) { return fnprepatch_927.call(this, InParameterName, InValue, InArrayIndex) }; } catch (e) {};
try { let fnprepatch_928 = RigVM.prototype.SetParameterValueTransform;RigVM.prototype.SetParameterValueTransform = function (InParameterName, InValue, InArrayIndex = 0) { return fnprepatch_928.call(this, InParameterName, InValue, InArrayIndex) }; } catch (e) {};
try { let fnprepatch_929 = RigVM.prototype.SetParameterValueString;RigVM.prototype.SetParameterValueString = function (InParameterName, InValue, InArrayIndex = 0) { return fnprepatch_929.call(this, InParameterName, InValue, InArrayIndex) }; } catch (e) {};
try { let fnprepatch_930 = RigVM.prototype.SetParameterValueQuat;RigVM.prototype.SetParameterValueQuat = function (InParameterName, InValue, InArrayIndex = 0) { return fnprepatch_930.call(this, InParameterName, InValue, InArrayIndex) }; } catch (e) {};
try { let fnprepatch_931 = RigVM.prototype.SetParameterValueName;RigVM.prototype.SetParameterValueName = function (InParameterName, InValue, InArrayIndex = 0) { return fnprepatch_931.call(this, InParameterName, InValue, InArrayIndex) }; } catch (e) {};
try { let fnprepatch_932 = RigVM.prototype.SetParameterValueInt;RigVM.prototype.SetParameterValueInt = function (InParameterName, InValue, InArrayIndex = 0) { return fnprepatch_932.call(this, InParameterName, InValue, InArrayIndex) }; } catch (e) {};
try { let fnprepatch_933 = RigVM.prototype.SetParameterValueFloat;RigVM.prototype.SetParameterValueFloat = function (InParameterName, InValue, InArrayIndex = 0) { return fnprepatch_933.call(this, InParameterName, InValue, InArrayIndex) }; } catch (e) {};
try { let fnprepatch_934 = RigVM.prototype.SetParameterValueDouble;RigVM.prototype.SetParameterValueDouble = function (InParameterName, InValue, InArrayIndex = 0) { return fnprepatch_934.call(this, InParameterName, InValue, InArrayIndex) }; } catch (e) {};
try { let fnprepatch_935 = RigVM.prototype.SetParameterValueBool;RigVM.prototype.SetParameterValueBool = function (InParameterName, InValue, InArrayIndex = 0) { return fnprepatch_935.call(this, InParameterName, InValue, InArrayIndex) }; } catch (e) {};
try { let fnprepatch_936 = RigVM.prototype.GetParameterValueVector2D;RigVM.prototype.GetParameterValueVector2D = function (InParameterName, InArrayIndex = 0) { return fnprepatch_936.call(this, InParameterName, InArrayIndex) }; } catch (e) {};
try { let fnprepatch_937 = RigVM.prototype.GetParameterValueVector;RigVM.prototype.GetParameterValueVector = function (InParameterName, InArrayIndex = 0) { return fnprepatch_937.call(this, InParameterName, InArrayIndex) }; } catch (e) {};
try { let fnprepatch_938 = RigVM.prototype.GetParameterValueTransform;RigVM.prototype.GetParameterValueTransform = function (InParameterName, InArrayIndex = 0) { return fnprepatch_938.call(this, InParameterName, InArrayIndex) }; } catch (e) {};
try { let fnprepatch_939 = RigVM.prototype.GetParameterValueString;RigVM.prototype.GetParameterValueString = function (InParameterName, InArrayIndex = 0) { return fnprepatch_939.call(this, InParameterName, InArrayIndex) }; } catch (e) {};
try { let fnprepatch_940 = RigVM.prototype.GetParameterValueQuat;RigVM.prototype.GetParameterValueQuat = function (InParameterName, InArrayIndex = 0) { return fnprepatch_940.call(this, InParameterName, InArrayIndex) }; } catch (e) {};
try { let fnprepatch_941 = RigVM.prototype.GetParameterValueName;RigVM.prototype.GetParameterValueName = function (InParameterName, InArrayIndex = 0) { return fnprepatch_941.call(this, InParameterName, InArrayIndex) }; } catch (e) {};
try { let fnprepatch_942 = RigVM.prototype.GetParameterValueInt;RigVM.prototype.GetParameterValueInt = function (InParameterName, InArrayIndex = 0) { return fnprepatch_942.call(this, InParameterName, InArrayIndex) }; } catch (e) {};
try { let fnprepatch_943 = RigVM.prototype.GetParameterValueFloat;RigVM.prototype.GetParameterValueFloat = function (InParameterName, InArrayIndex = 0) { return fnprepatch_943.call(this, InParameterName, InArrayIndex) }; } catch (e) {};
try { let fnprepatch_944 = RigVM.prototype.GetParameterValueDouble;RigVM.prototype.GetParameterValueDouble = function (InParameterName, InArrayIndex = 0) { return fnprepatch_944.call(this, InParameterName, InArrayIndex) }; } catch (e) {};
try { let fnprepatch_945 = RigVM.prototype.GetParameterValueBool;RigVM.prototype.GetParameterValueBool = function (InParameterName, InArrayIndex = 0) { return fnprepatch_945.call(this, InParameterName, InArrayIndex) }; } catch (e) {};
try { let fnprepatch_946 = RigVM.prototype.Execute;RigVM.prototype.Execute = function (Context, InEntryName = "None") { return fnprepatch_946.call(this, Context, InEntryName) }; } catch (e) {};
try { let fnprepatch_947 = RigVMHost.prototype.SetAbsoluteTime;RigVMHost.prototype.SetAbsoluteTime = function (InAbsoluteTime, InSetDeltaTimeZero = false) { return fnprepatch_947.call(this, InAbsoluteTime, InSetDeltaTimeZero) }; } catch (e) {};
try { let fnprepatch_948 = RigVMHost.prototype.RequestRunOnceEvent;RigVMHost.prototype.RequestRunOnceEvent = function (InEventName, InEventIndex = -1) { return fnprepatch_948.call(this, InEventName, InEventIndex) }; } catch (e) {};
try { RigVMHost.prototype.GetVariables = RigVMHost.prototype.GetScriptAccessibleVariables; } catch (e) {};
try { let fnprepatch_949 = RigVMBlueprint.prototype.RemoveModel;RigVMBlueprint.prototype.RemoveModel = function (InName = "Rig Graph", bSetupUndoRedo = true, bPrintPythonCommand = true) { return fnprepatch_949.call(this, InName, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_950 = RigVMBlueprint.prototype.GetOrCreateController;RigVMBlueprint.prototype.GetOrCreateController = function (InGraph = undefined) { return fnprepatch_950.call(this, InGraph) }; } catch (e) {};
try { let fnprepatch_951 = RigVMBlueprint.prototype.GetModel;RigVMBlueprint.prototype.GetModel = function (InEdGraph = undefined) { return fnprepatch_951.call(this, InEdGraph) }; } catch (e) {};
try { let fnprepatch_952 = RigVMBlueprint.prototype.GetController;RigVMBlueprint.prototype.GetController = function (InGraph = undefined) { return fnprepatch_952.call(this, InGraph) }; } catch (e) {};
try { let fnprepatch_953 = RigVMBlueprint.prototype.ChangeMemberVariableType;RigVMBlueprint.prototype.ChangeMemberVariableType = function (InName, InCPPType, bIsPublic = false, bIsReadOnly = false, InDefaultValue) { return fnprepatch_953.call(this, InName, InCPPType, bIsPublic, bIsReadOnly, InDefaultValue) }; } catch (e) {};
try { let fnprepatch_954 = RigVMBlueprint.prototype.AddModel;RigVMBlueprint.prototype.AddModel = function (InName = "Rig Graph", bSetupUndoRedo = true, bPrintPythonCommand = true) { return fnprepatch_954.call(this, InName, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_955 = RigVMBlueprint.prototype.AddMemberVariable;RigVMBlueprint.prototype.AddMemberVariable = function (InName, InCPPType, bIsPublic = false, bIsReadOnly = false, InDefaultValue) { return fnprepatch_955.call(this, InName, InCPPType, bIsPublic, bIsReadOnly, InDefaultValue) }; } catch (e) {};
try { let fnprepatch_956 = RigVMNode.prototype.HasOutputPin;RigVMNode.prototype.HasOutputPin = function (bIncludeIO = true) { return fnprepatch_956.call(this, bIncludeIO) }; } catch (e) {};
try { let fnprepatch_957 = RigVMNode.prototype.HasLazyPin;RigVMNode.prototype.HasLazyPin = function (bOnlyConsiderPinsWithLinks = false) { return fnprepatch_957.call(this, bOnlyConsiderPinsWithLinks) }; } catch (e) {};
try { let fnprepatch_958 = RigVMNode.prototype.HasInputPin;RigVMNode.prototype.HasInputPin = function (bIncludeIO = true) { return fnprepatch_958.call(this, bIncludeIO) }; } catch (e) {};
try { let fnprepatch_959 = RigVMNode.prototype.GetNodePath;RigVMNode.prototype.GetNodePath = function (bRecursive = false) { return fnprepatch_959.call(this, bRecursive) }; } catch (e) {};
try { let fnprepatch_960 = RigVMController.prototype.UpgradeNodes;RigVMController.prototype.UpgradeNodes = function (InNodeNames, bRecursive = true, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_960.call(this, InNodeNames, bRecursive, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_961 = RigVMController.prototype.UnresolveTemplateNodes;RigVMController.prototype.UnresolveTemplateNodes = function (InNodeNames, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_961.call(this, InNodeNames, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_962 = RigVMController.prototype.UnbindPinFromVariable;RigVMController.prototype.UnbindPinFromVariable = function (InPinPath, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_962.call(this, InPinPath, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_963 = RigVMController.prototype.SetUnitNodeDefaults;RigVMController.prototype.SetUnitNodeDefaults = function (InNode, InDefaults, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_963.call(this, InNode, InDefaults, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_964 = RigVMController.prototype.SetRemappedVariable;RigVMController.prototype.SetRemappedVariable = function (InFunctionRefNode, InInnerVariableName, InOuterVariableName, bSetupUndoRedo = true) { return fnprepatch_964.call(this, InFunctionRefNode, InInnerVariableName, InOuterVariableName, bSetupUndoRedo) }; } catch (e) {};
try { let fnprepatch_965 = RigVMController.prototype.SetPinIsWatched;RigVMController.prototype.SetPinIsWatched = function (InPinPath, bIsWatched, bSetupUndoRedo = true) { return fnprepatch_965.call(this, InPinPath, bIsWatched, bSetupUndoRedo) }; } catch (e) {};
try { let fnprepatch_966 = RigVMController.prototype.SetPinExpansion;RigVMController.prototype.SetPinExpansion = function (InPinPath, bIsExpanded, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_966.call(this, InPinPath, bIsExpanded, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_967 = RigVMController.prototype.SetPinDefaultValue;RigVMController.prototype.SetPinDefaultValue = function (InPinPath, InDefaultValue, bResizeArrays = true, bSetupUndoRedo = true, bMergeUndoAction = false, bPrintPythonCommand = false) { return fnprepatch_967.call(this, InPinPath, InDefaultValue, bResizeArrays, bSetupUndoRedo, bMergeUndoAction, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_968 = RigVMController.prototype.SetNodeSizeByName;RigVMController.prototype.SetNodeSizeByName = function (InNodeName, InSize, bSetupUndoRedo = true, bMergeUndoAction = false, bPrintPythonCommand = false) { return fnprepatch_968.call(this, InNodeName, InSize, bSetupUndoRedo, bMergeUndoAction, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_969 = RigVMController.prototype.SetNodeSize;RigVMController.prototype.SetNodeSize = function (InNode, InSize, bSetupUndoRedo = true, bMergeUndoAction = false, bPrintPythonCommand = false) { return fnprepatch_969.call(this, InNode, InSize, bSetupUndoRedo, bMergeUndoAction, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_970 = RigVMController.prototype.SetNodeSelection;RigVMController.prototype.SetNodeSelection = function (InNodeNames, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_970.call(this, InNodeNames, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_971 = RigVMController.prototype.SetNodePositionByName;RigVMController.prototype.SetNodePositionByName = function (InNodeName, InPosition, bSetupUndoRedo = true, bMergeUndoAction = false, bPrintPythonCommand = false) { return fnprepatch_971.call(this, InNodeName, InPosition, bSetupUndoRedo, bMergeUndoAction, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_972 = RigVMController.prototype.SetNodePosition;RigVMController.prototype.SetNodePosition = function (InNode, InPosition, bSetupUndoRedo = true, bMergeUndoAction = false, bPrintPythonCommand = false) { return fnprepatch_972.call(this, InNode, InPosition, bSetupUndoRedo, bMergeUndoAction, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_973 = RigVMController.prototype.SetNodeKeywordsByName;RigVMController.prototype.SetNodeKeywordsByName = function (InNodeName, InKeywords, bSetupUndoRedo = true, bMergeUndoAction = false) { return fnprepatch_973.call(this, InNodeName, InKeywords, bSetupUndoRedo, bMergeUndoAction) }; } catch (e) {};
try { let fnprepatch_974 = RigVMController.prototype.SetNodeKeywords;RigVMController.prototype.SetNodeKeywords = function (InNode, InKeywords, bSetupUndoRedo = true, bMergeUndoAction = false, bPrintPythonCommand = false) { return fnprepatch_974.call(this, InNode, InKeywords, bSetupUndoRedo, bMergeUndoAction, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_975 = RigVMController.prototype.SetNodeDescriptionByName;RigVMController.prototype.SetNodeDescriptionByName = function (InNodeName, InDescription, bSetupUndoRedo = true, bMergeUndoAction = false) { return fnprepatch_975.call(this, InNodeName, InDescription, bSetupUndoRedo, bMergeUndoAction) }; } catch (e) {};
try { let fnprepatch_976 = RigVMController.prototype.SetNodeDescription;RigVMController.prototype.SetNodeDescription = function (InNode, InDescription, bSetupUndoRedo = true, bMergeUndoAction = false, bPrintPythonCommand = false) { return fnprepatch_976.call(this, InNode, InDescription, bSetupUndoRedo, bMergeUndoAction, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_977 = RigVMController.prototype.SetNodeColorByName;RigVMController.prototype.SetNodeColorByName = function (InNodeName, InColor, bSetupUndoRedo = true, bMergeUndoAction = false) { return fnprepatch_977.call(this, InNodeName, InColor, bSetupUndoRedo, bMergeUndoAction) }; } catch (e) {};
try { let fnprepatch_978 = RigVMController.prototype.SetNodeColor;RigVMController.prototype.SetNodeColor = function (InNode, InColor, bSetupUndoRedo = true, bMergeUndoAction = false, bPrintPythonCommand = false) { return fnprepatch_978.call(this, InNode, InColor, bSetupUndoRedo, bMergeUndoAction, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_979 = RigVMController.prototype.SetNodeCategoryByName;RigVMController.prototype.SetNodeCategoryByName = function (InNodeName, InCategory, bSetupUndoRedo = true, bMergeUndoAction = false) { return fnprepatch_979.call(this, InNodeName, InCategory, bSetupUndoRedo, bMergeUndoAction) }; } catch (e) {};
try { let fnprepatch_980 = RigVMController.prototype.SetNodeCategory;RigVMController.prototype.SetNodeCategory = function (InNode, InCategory, bSetupUndoRedo = true, bMergeUndoAction = false, bPrintPythonCommand = false) { return fnprepatch_980.call(this, InNode, InCategory, bSetupUndoRedo, bMergeUndoAction, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_981 = RigVMController.prototype.SetLocalVariableTypeFromObjectPath;RigVMController.prototype.SetLocalVariableTypeFromObjectPath = function (InVariableName, InCPPType, InCPPTypeObjectPath, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_981.call(this, InVariableName, InCPPType, InCPPTypeObjectPath, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_982 = RigVMController.prototype.SetLocalVariableType;RigVMController.prototype.SetLocalVariableType = function (InVariableName, InCPPType, InCPPTypeObject, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_982.call(this, InVariableName, InCPPType, InCPPTypeObject, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_983 = RigVMController.prototype.SetLocalVariableDefaultValue;RigVMController.prototype.SetLocalVariableDefaultValue = function (InVariableName, InDefaultValue, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_983.call(this, InVariableName, InDefaultValue, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_984 = RigVMController.prototype.SetExposedPinIndex;RigVMController.prototype.SetExposedPinIndex = function (InPinName, InNewIndex, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_984.call(this, InPinName, InNewIndex, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_985 = RigVMController.prototype.SetCommentTextByName;RigVMController.prototype.SetCommentTextByName = function (InNodeName, InCommentText, InCommentFontSize, bInCommentBubbleVisible, bInCommentColorBubble, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_985.call(this, InNodeName, InCommentText, InCommentFontSize, bInCommentBubbleVisible, bInCommentColorBubble, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_986 = RigVMController.prototype.SetCommentText;RigVMController.prototype.SetCommentText = function (InNode, InCommentText, InCommentFontSize, bInCommentBubbleVisible, bInCommentColorBubble, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_986.call(this, InNode, InCommentText, InCommentFontSize, bInCommentBubbleVisible, bInCommentColorBubble, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_987 = RigVMController.prototype.SetArrayPinSize;RigVMController.prototype.SetArrayPinSize = function (InArrayPinPath, InSize, InDefaultValue, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_987.call(this, InArrayPinPath, InSize, InDefaultValue, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_988 = RigVMController.prototype.SelectNodeByName;RigVMController.prototype.SelectNodeByName = function (InNodeName, bSelect = true, bSetupUndoRedo = true) { return fnprepatch_988.call(this, InNodeName, bSelect, bSetupUndoRedo) }; } catch (e) {};
try { let fnprepatch_989 = RigVMController.prototype.SelectNode;RigVMController.prototype.SelectNode = function (InNode, bSelect = true, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_989.call(this, InNode, bSelect, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_990 = RigVMController.prototype.ResolveWildCardPin;RigVMController.prototype.ResolveWildCardPin = function (InPinPath, InCPPType, InCPPTypeObjectPath, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_990.call(this, InPinPath, InCPPType, InCPPTypeObjectPath, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_991 = RigVMController.prototype.ResetPinDefaultValue;RigVMController.prototype.ResetPinDefaultValue = function (InPinPath, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_991.call(this, InPinPath, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_992 = RigVMController.prototype.RenameVariable;RigVMController.prototype.RenameVariable = function (InOldName, InNewName, bSetupUndoRedo = true) { return fnprepatch_992.call(this, InOldName, InNewName, bSetupUndoRedo) }; } catch (e) {};
try { let fnprepatch_993 = RigVMController.prototype.RenameParameter;RigVMController.prototype.RenameParameter = function (InOldName, InNewName, bSetupUndoRedo = true) { return fnprepatch_993.call(this, InOldName, InNewName, bSetupUndoRedo) }; } catch (e) {};
try { let fnprepatch_994 = RigVMController.prototype.RenameNode;RigVMController.prototype.RenameNode = function (InNode, InNewName, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_994.call(this, InNode, InNewName, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_995 = RigVMController.prototype.RenameLocalVariable;RigVMController.prototype.RenameLocalVariable = function (InVariableName, InNewVariableName, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_995.call(this, InVariableName, InNewVariableName, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_996 = RigVMController.prototype.RenameFunction;RigVMController.prototype.RenameFunction = function (InOldFunctionName, InNewFunctionName, bSetupUndoRedo = true) { return fnprepatch_996.call(this, InOldFunctionName, InNewFunctionName, bSetupUndoRedo) }; } catch (e) {};
try { let fnprepatch_997 = RigVMController.prototype.RenameExposedPin;RigVMController.prototype.RenameExposedPin = function (InOldPinName, InNewPinName, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_997.call(this, InOldPinName, InNewPinName, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_998 = RigVMController.prototype.RemoveNodesByName;RigVMController.prototype.RemoveNodesByName = function (InNodeNames, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_998.call(this, InNodeNames, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_999 = RigVMController.prototype.RemoveNodes;RigVMController.prototype.RemoveNodes = function (InNodes, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_999.call(this, InNodes, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1000 = RigVMController.prototype.RemoveNodeByName;RigVMController.prototype.RemoveNodeByName = function (InNodeName, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1000.call(this, InNodeName, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1001 = RigVMController.prototype.RemoveNode;RigVMController.prototype.RemoveNode = function (InNode, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1001.call(this, InNode, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1002 = RigVMController.prototype.RemoveLocalVariable;RigVMController.prototype.RemoveLocalVariable = function (InVariableName, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1002.call(this, InVariableName, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1003 = RigVMController.prototype.RemoveInjectedNode;RigVMController.prototype.RemoveInjectedNode = function (InPinPath, bAsInput, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1003.call(this, InPinPath, bAsInput, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1004 = RigVMController.prototype.RemoveFunctionFromLibrary;RigVMController.prototype.RemoveFunctionFromLibrary = function (InFunctionName, bSetupUndoRedo = true) { return fnprepatch_1004.call(this, InFunctionName, bSetupUndoRedo) }; } catch (e) {};
try { let fnprepatch_1005 = RigVMController.prototype.RemoveExposedPin;RigVMController.prototype.RemoveExposedPin = function (InPinName, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1005.call(this, InPinName, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1006 = RigVMController.prototype.RemoveDecorator;RigVMController.prototype.RemoveDecorator = function (InNodeName, InDecoratorName, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1006.call(this, InNodeName, InDecoratorName, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1007 = RigVMController.prototype.RemoveArrayPin;RigVMController.prototype.RemoveArrayPin = function (InArrayElementPinPath, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1007.call(this, InArrayElementPinPath, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1008 = RigVMController.prototype.RemoveAggregatePin;RigVMController.prototype.RemoveAggregatePin = function (InPinPath, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1008.call(this, InPinPath, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1009 = RigVMController.prototype.RefreshVariableNode;RigVMController.prototype.RefreshVariableNode = function (InNodeName, InVariableName, InCPPType, InCPPTypeObject, bSetupUndoRedo, bSetupOrphanPins = true) { return fnprepatch_1009.call(this, InNodeName, InVariableName, InCPPType, InCPPTypeObject, bSetupUndoRedo, bSetupOrphanPins) }; } catch (e) {};
try { let fnprepatch_1010 = RigVMController.prototype.PushGraph;RigVMController.prototype.PushGraph = function (InGraph, bSetupUndoRedo = true) { return fnprepatch_1010.call(this, InGraph, bSetupUndoRedo) }; } catch (e) {};
try { let fnprepatch_1011 = RigVMController.prototype.PromotePinToVariable;RigVMController.prototype.PromotePinToVariable = function (InPinPath, bCreateVariableNode, InNodePosition, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1011.call(this, InPinPath, bCreateVariableNode, InNodePosition, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1012 = RigVMController.prototype.PromoteFunctionReferenceNodeToCollapseNode;RigVMController.prototype.PromoteFunctionReferenceNodeToCollapseNode = function (InNodeName, bSetupUndoRedo = true, bPrintPythonCommand = false, bRemoveFunctionDefinition = false) { return fnprepatch_1012.call(this, InNodeName, bSetupUndoRedo, bPrintPythonCommand, bRemoveFunctionDefinition) }; } catch (e) {};
try { let fnprepatch_1013 = RigVMController.prototype.PromoteCollapseNodeToFunctionReferenceNode;RigVMController.prototype.PromoteCollapseNodeToFunctionReferenceNode = function (InNodeName, bSetupUndoRedo = true, bPrintPythonCommand = false, InExistingFunctionDefinitionPath) { return fnprepatch_1013.call(this, InNodeName, bSetupUndoRedo, bPrintPythonCommand, InExistingFunctionDefinitionPath) }; } catch (e) {};
try { let fnprepatch_1014 = RigVMController.prototype.PopGraph;RigVMController.prototype.PopGraph = function (bSetupUndoRedo = true) { return fnprepatch_1014.call(this, bSetupUndoRedo) }; } catch (e) {};
try { let fnprepatch_1015 = RigVMController.prototype.PerformUserWorkflow;RigVMController.prototype.PerformUserWorkflow = function (InWorkflow, InOptions, bSetupUndoRedo = true) { return fnprepatch_1015.call(this, InWorkflow, InOptions, bSetupUndoRedo) }; } catch (e) {};
try { let fnprepatch_1016 = RigVMController.prototype.MarkFunctionAsPublic;RigVMController.prototype.MarkFunctionAsPublic = function (InFunctionName, bInIsPublic, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1016.call(this, InFunctionName, bInIsPublic, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1017 = RigVMController.prototype.MakeVariableNodeFromBinding;RigVMController.prototype.MakeVariableNodeFromBinding = function (InPinPath, InNodePosition, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1017.call(this, InPinPath, InNodePosition, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1018 = RigVMController.prototype.MakeBindingsFromVariableNode;RigVMController.prototype.MakeBindingsFromVariableNode = function (InNodeName, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1018.call(this, InNodeName, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1019 = RigVMController.prototype.LocalizeFunctions;RigVMController.prototype.LocalizeFunctions = function (InFunctionDefinitions, bLocalizeDependentPrivateFunctions = true, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1019.call(this, InFunctionDefinitions, bLocalizeDependentPrivateFunctions, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1020 = RigVMController.prototype.LocalizeFunctionFromPath;RigVMController.prototype.LocalizeFunctionFromPath = function (InHostPath, InFunctionName, bLocalizeDependentPrivateFunctions = true, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1020.call(this, InHostPath, InFunctionName, bLocalizeDependentPrivateFunctions, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1021 = RigVMController.prototype.LocalizeFunction;RigVMController.prototype.LocalizeFunction = function (InFunctionDefinition, bLocalizeDependentPrivateFunctions = true, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1021.call(this, InFunctionDefinition, bLocalizeDependentPrivateFunctions, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1022 = RigVMController.prototype.InsertArrayPin;RigVMController.prototype.InsertArrayPin = function (InArrayPinPath, InIndex = -1, InDefaultValue, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1022.call(this, InArrayPinPath, InIndex, InDefaultValue, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1023 = RigVMController.prototype.ImportNodesFromText;RigVMController.prototype.ImportNodesFromText = function (InText, bSetupUndoRedo = true, bPrintPythonCommands = false) { return fnprepatch_1023.call(this, InText, bSetupUndoRedo, bPrintPythonCommands) }; } catch (e) {};
try { let fnprepatch_1024 = RigVMController.prototype.GetTemplateForUnitStruct;RigVMController.prototype.GetTemplateForUnitStruct = function (InFunction, InMethodName = "Execute") { return fnprepatch_1024.call(this, InFunction, InMethodName) }; } catch (e) {};
try { let fnprepatch_1025 = RigVMController.prototype.ExportSelectedNodesToText;RigVMController.prototype.ExportSelectedNodesToText = function (bIncludeExteriorLinks = false) { return fnprepatch_1025.call(this, bIncludeExteriorLinks) }; } catch (e) {};
try { let fnprepatch_1026 = RigVMController.prototype.ExportNodesToText;RigVMController.prototype.ExportNodesToText = function (InNodeNames, bIncludeExteriorLinks = false) { return fnprepatch_1026.call(this, InNodeNames, bIncludeExteriorLinks) }; } catch (e) {};
try { let fnprepatch_1027 = RigVMController.prototype.ExpandLibraryNode;RigVMController.prototype.ExpandLibraryNode = function (InNodeName, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1027.call(this, InNodeName, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1028 = RigVMController.prototype.EnableReporting;RigVMController.prototype.EnableReporting = function (bEnabled = true) { return fnprepatch_1028.call(this, bEnabled) }; } catch (e) {};
try { let fnprepatch_1029 = RigVMController.prototype.EjectNodeFromPin;RigVMController.prototype.EjectNodeFromPin = function (InPinPath, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1029.call(this, InPinPath, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1030 = RigVMController.prototype.DuplicateArrayPin;RigVMController.prototype.DuplicateArrayPin = function (InArrayElementPinPath, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1030.call(this, InArrayElementPinPath, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1031 = RigVMController.prototype.CollapseNodes;RigVMController.prototype.CollapseNodes = function (InNodeNames, InCollapseNodeName, bSetupUndoRedo = true, bPrintPythonCommand = false, bIsAggregate = false) { return fnprepatch_1031.call(this, InNodeNames, InCollapseNodeName, bSetupUndoRedo, bPrintPythonCommand, bIsAggregate) }; } catch (e) {};
try { let fnprepatch_1032 = RigVMController.prototype.ClearNodeSelection;RigVMController.prototype.ClearNodeSelection = function (bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1032.call(this, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1033 = RigVMController.prototype.ClearArrayPin;RigVMController.prototype.ClearArrayPin = function (InArrayPinPath, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1033.call(this, InArrayPinPath, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1034 = RigVMController.prototype.ChangeExposedPinType;RigVMController.prototype.ChangeExposedPinType = function (InPinName, InCPPType, InCPPTypeObjectPath, bSetupUndoRedo, bSetupOrphanPins = true, bPrintPythonCommand = false) { return fnprepatch_1034.call(this, InPinName, InCPPType, InCPPTypeObjectPath, bSetupUndoRedo, bSetupOrphanPins, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1035 = RigVMController.prototype.BreakLink;RigVMController.prototype.BreakLink = function (InOutputPinPath, InInputPinPath, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1035.call(this, InOutputPinPath, InInputPinPath, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1036 = RigVMController.prototype.BreakAllLinks;RigVMController.prototype.BreakAllLinks = function (InPinPath, bAsInput = true, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1036.call(this, InPinPath, bAsInput, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1037 = RigVMController.prototype.BindPinToVariable;RigVMController.prototype.BindPinToVariable = function (InPinPath, InNewBoundVariablePath, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1037.call(this, InPinPath, InNewBoundVariablePath, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1038 = RigVMController.prototype.AddVariableNodeFromObjectPath;RigVMController.prototype.AddVariableNodeFromObjectPath = function (InVariableName, InCPPType, InCPPTypeObjectPath, bIsGetter, InDefaultValue, InPosition, InNodeName, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1038.call(this, InVariableName, InCPPType, InCPPTypeObjectPath, bIsGetter, InDefaultValue, InPosition, InNodeName, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1039 = RigVMController.prototype.AddVariableNode;RigVMController.prototype.AddVariableNode = function (InVariableName, InCPPType, InCPPTypeObject, bIsGetter, InDefaultValue, InPosition, InNodeName, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1039.call(this, InVariableName, InCPPType, InCPPTypeObject, bIsGetter, InDefaultValue, InPosition, InNodeName, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1040 = RigVMController.prototype.AddUnitNodeWithDefaults;RigVMController.prototype.AddUnitNodeWithDefaults = function (InScriptStruct, InDefaults, InMethodName = "Execute", InPosition, InNodeName, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1040.call(this, InScriptStruct, InDefaults, InMethodName, InPosition, InNodeName, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1041 = RigVMController.prototype.AddUnitNodeFromStructPath;RigVMController.prototype.AddUnitNodeFromStructPath = function (InScriptStructPath, InMethodName = "Execute", InPosition, InNodeName, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1041.call(this, InScriptStructPath, InMethodName, InPosition, InNodeName, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1042 = RigVMController.prototype.AddUnitNode;RigVMController.prototype.AddUnitNode = function (InScriptStruct, InMethodName = "Execute", InPosition, InNodeName, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1042.call(this, InScriptStruct, InMethodName, InPosition, InNodeName, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1043 = RigVMController.prototype.AddTemplateNode;RigVMController.prototype.AddTemplateNode = function (InNotation, InPosition, InNodeName, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1043.call(this, InNotation, InPosition, InNodeName, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1044 = RigVMController.prototype.AddSelectNodeFromStruct;RigVMController.prototype.AddSelectNodeFromStruct = function (InScriptStruct, InPosition, InNodeName, bSetupUndoRedo = true) { return fnprepatch_1044.call(this, InScriptStruct, InPosition, InNodeName, bSetupUndoRedo) }; } catch (e) {};
try { let fnprepatch_1045 = RigVMController.prototype.AddSelectNode;RigVMController.prototype.AddSelectNode = function (InCPPType, InCPPTypeObjectPath, InPosition, InNodeName, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1045.call(this, InCPPType, InCPPTypeObjectPath, InPosition, InNodeName, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1046 = RigVMController.prototype.AddRerouteNodeOnPin;RigVMController.prototype.AddRerouteNodeOnPin = function (InPinPath, bAsInput, InPosition, InNodeName, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1046.call(this, InPinPath, bAsInput, InPosition, InNodeName, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1047 = RigVMController.prototype.AddRerouteNodeOnLinkPath;RigVMController.prototype.AddRerouteNodeOnLinkPath = function (InLinkPinPathRepresentation, InPosition, InNodeName, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1047.call(this, InLinkPinPathRepresentation, InPosition, InNodeName, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1048 = RigVMController.prototype.AddRerouteNodeOnLink;RigVMController.prototype.AddRerouteNodeOnLink = function (InLink, InPosition, InNodeName, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1048.call(this, InLink, InPosition, InNodeName, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1049 = RigVMController.prototype.AddParameterNodeFromObjectPath;RigVMController.prototype.AddParameterNodeFromObjectPath = function (InParameterName, InCPPType, InCPPTypeObjectPath, bIsInput, InDefaultValue, InPosition, InNodeName, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1049.call(this, InParameterName, InCPPType, InCPPTypeObjectPath, bIsInput, InDefaultValue, InPosition, InNodeName, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1050 = RigVMController.prototype.AddParameterNode;RigVMController.prototype.AddParameterNode = function (InParameterName, InCPPType, InCPPTypeObject, bIsInput, InDefaultValue, InPosition, InNodeName, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1050.call(this, InParameterName, InCPPType, InCPPTypeObject, bIsInput, InDefaultValue, InPosition, InNodeName, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1051 = RigVMController.prototype.AddLocalVariableFromObjectPath;RigVMController.prototype.AddLocalVariableFromObjectPath = function (InVariableName, InCPPType, InCPPTypeObjectPath, InDefaultValue, bSetupUndoRedo = true) { return fnprepatch_1051.call(this, InVariableName, InCPPType, InCPPTypeObjectPath, InDefaultValue, bSetupUndoRedo) }; } catch (e) {};
try { let fnprepatch_1052 = RigVMController.prototype.AddLocalVariable;RigVMController.prototype.AddLocalVariable = function (InVariableName, InCPPType, InCPPTypeObject, InDefaultValue, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1052.call(this, InVariableName, InCPPType, InCPPTypeObject, InDefaultValue, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1053 = RigVMController.prototype.AddLink;RigVMController.prototype.AddLink = function (InOutputPinPath, InInputPinPath, bSetupUndoRedo = true, bPrintPythonCommand = false, InUserDirection = "Input", bCreateCastNode = false) { return fnprepatch_1053.call(this, InOutputPinPath, InInputPinPath, bSetupUndoRedo, bPrintPythonCommand, InUserDirection, bCreateCastNode) }; } catch (e) {};
try { let fnprepatch_1054 = RigVMController.prototype.AddInvokeEntryNode;RigVMController.prototype.AddInvokeEntryNode = function (InEntryName, InPosition, InNodeName, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1054.call(this, InEntryName, InPosition, InNodeName, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1055 = RigVMController.prototype.AddInjectedNodeFromStructPath;RigVMController.prototype.AddInjectedNodeFromStructPath = function (InPinPath, bAsInput, InScriptStructPath, InMethodName, InInputPinName, InOutputPinName, InNodeName, bSetupUndoRedo = true) { return fnprepatch_1055.call(this, InPinPath, bAsInput, InScriptStructPath, InMethodName, InInputPinName, InOutputPinName, InNodeName, bSetupUndoRedo) }; } catch (e) {};
try { let fnprepatch_1056 = RigVMController.prototype.AddInjectedNode;RigVMController.prototype.AddInjectedNode = function (InPinPath, bAsInput, InScriptStruct, InMethodName, InInputPinName, InOutputPinName, InNodeName, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1056.call(this, InPinPath, bAsInput, InScriptStruct, InMethodName, InInputPinName, InOutputPinName, InNodeName, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1057 = RigVMController.prototype.AddIfNodeFromStruct;RigVMController.prototype.AddIfNodeFromStruct = function (InScriptStruct, InPosition, InNodeName, bSetupUndoRedo = true) { return fnprepatch_1057.call(this, InScriptStruct, InPosition, InNodeName, bSetupUndoRedo) }; } catch (e) {};
try { let fnprepatch_1058 = RigVMController.prototype.AddIfNode;RigVMController.prototype.AddIfNode = function (InCPPType, InCPPTypeObjectPath, InPosition, InNodeName, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1058.call(this, InCPPType, InCPPTypeObjectPath, InPosition, InNodeName, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1059 = RigVMController.prototype.AddFunctionToLibrary;RigVMController.prototype.AddFunctionToLibrary = function (InFunctionName, bMutable, InNodePosition, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1059.call(this, InFunctionName, bMutable, InNodePosition, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1060 = RigVMController.prototype.AddFunctionReferenceNodeFromDescription;RigVMController.prototype.AddFunctionReferenceNodeFromDescription = function (InFunctionDefinition, InNodePosition, InNodeName, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1060.call(this, InFunctionDefinition, InNodePosition, InNodeName, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1061 = RigVMController.prototype.AddFunctionReferenceNode;RigVMController.prototype.AddFunctionReferenceNode = function (InFunctionDefinition, InNodePosition, InNodeName, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1061.call(this, InFunctionDefinition, InNodePosition, InNodeName, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1062 = RigVMController.prototype.AddFreeRerouteNode;RigVMController.prototype.AddFreeRerouteNode = function (InCPPType, InCPPTypeObjectPath, bIsConstant, InCustomWidgetName, InDefaultValue, InPosition, InNodeName, bSetupUndoRedo = true) { return fnprepatch_1062.call(this, InCPPType, InCPPTypeObjectPath, bIsConstant, InCustomWidgetName, InDefaultValue, InPosition, InNodeName, bSetupUndoRedo) }; } catch (e) {};
try { let fnprepatch_1063 = RigVMController.prototype.AddExternalFunctionReferenceNode;RigVMController.prototype.AddExternalFunctionReferenceNode = function (InHostPath, InFunctionName, InNodePosition, InNodeName, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1063.call(this, InHostPath, InFunctionName, InNodePosition, InNodeName, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1064 = RigVMController.prototype.AddExposedPin;RigVMController.prototype.AddExposedPin = function (InPinName, InDirection, InCPPType, InCPPTypeObjectPath, InDefaultValue, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1064.call(this, InPinName, InDirection, InCPPType, InCPPTypeObjectPath, InDefaultValue, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1065 = RigVMController.prototype.AddEnumNode;RigVMController.prototype.AddEnumNode = function (InCPPTypeObjectPath, InPosition, InNodeName, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1065.call(this, InCPPTypeObjectPath, InPosition, InNodeName, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1066 = RigVMController.prototype.AddDecorator;RigVMController.prototype.AddDecorator = function (InNodeName, InDecoratorTypeObjectPath, InDecoratorName = "None", InDefaultValue, InPinIndex = -1, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1066.call(this, InNodeName, InDecoratorTypeObjectPath, InDecoratorName, InDefaultValue, InPinIndex, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1067 = RigVMController.prototype.AddCommentNode;RigVMController.prototype.AddCommentNode = function (InCommentText, InPosition, InSize = {"X":400,"Y":300}, InColor = {"R":0,"G":0,"B":0,"A":1}, InNodeName, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1067.call(this, InCommentText, InPosition, InSize, InColor, InNodeName, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1068 = RigVMController.prototype.AddBranchNode;RigVMController.prototype.AddBranchNode = function (InPosition, InNodeName, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1068.call(this, InPosition, InNodeName, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1069 = RigVMController.prototype.AddArrayPin;RigVMController.prototype.AddArrayPin = function (InArrayPinPath, InDefaultValue, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1069.call(this, InArrayPinPath, InDefaultValue, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1070 = RigVMController.prototype.AddArrayNodeFromObjectPath;RigVMController.prototype.AddArrayNodeFromObjectPath = function (InOpCode, InCPPType, InCPPTypeObjectPath, InPosition, InNodeName, bSetupUndoRedo = true, bPrintPythonCommand = false, bIsPatching = false) { return fnprepatch_1070.call(this, InOpCode, InCPPType, InCPPTypeObjectPath, InPosition, InNodeName, bSetupUndoRedo, bPrintPythonCommand, bIsPatching) }; } catch (e) {};
try { let fnprepatch_1071 = RigVMController.prototype.AddArrayNode;RigVMController.prototype.AddArrayNode = function (InOpCode, InCPPType, InCPPTypeObject, InPosition, InNodeName, bSetupUndoRedo = true, bPrintPythonCommand = false, bIsPatching = false) { return fnprepatch_1071.call(this, InOpCode, InCPPType, InCPPTypeObject, InPosition, InNodeName, bSetupUndoRedo, bPrintPythonCommand, bIsPatching) }; } catch (e) {};
try { let fnprepatch_1072 = RigVMController.prototype.AddAggregatePin;RigVMController.prototype.AddAggregatePin = function (InNodeName, InPinName, InDefaultValue, bSetupUndoRedo = true, bPrintPythonCommand = false) { return fnprepatch_1072.call(this, InNodeName, InPinName, InDefaultValue, bSetupUndoRedo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1073 = RigVMGraph.prototype.GetLocalVariables;RigVMGraph.prototype.GetLocalVariables = function (bIncludeInputArguments = false) { return fnprepatch_1073.call(this, bIncludeInputArguments) }; } catch (e) {};
try { let fnprepatch_1074 = RigVMGraph.prototype.GetContainedGraphs;RigVMGraph.prototype.GetContainedGraphs = function (bRecursive = false) { return fnprepatch_1074.call(this, bRecursive) }; } catch (e) {};
try { let fnprepatch_1075 = RigVMPin.prototype.RequiresWatch;RigVMPin.prototype.RequiresWatch = function (bCheckExposedPinChain = false) { return fnprepatch_1075.call(this, bCheckExposedPinChain) }; } catch (e) {};
try { let fnprepatch_1076 = RigVMPin.prototype.GetTargetLinks;RigVMPin.prototype.GetTargetLinks = function (bRecursive = false) { return fnprepatch_1076.call(this, bRecursive) }; } catch (e) {};
try { let fnprepatch_1077 = RigVMPin.prototype.GetSubPinPath;RigVMPin.prototype.GetSubPinPath = function (InParentPin, bIncludeParentPinName = false) { return fnprepatch_1077.call(this, InParentPin, bIncludeParentPinName) }; } catch (e) {};
try { let fnprepatch_1078 = RigVMPin.prototype.GetSourceLinks;RigVMPin.prototype.GetSourceLinks = function (bRecursive = false) { return fnprepatch_1078.call(this, bRecursive) }; } catch (e) {};
try { let fnprepatch_1079 = RigVMPin.prototype.GetSegmentPath;RigVMPin.prototype.GetSegmentPath = function (bIncludeRootPin = false) { return fnprepatch_1079.call(this, bIncludeRootPin) }; } catch (e) {};
try { let fnprepatch_1080 = RigVMPin.prototype.GetPinPath;RigVMPin.prototype.GetPinPath = function (bUseNodePath = false) { return fnprepatch_1080.call(this, bUseNodePath) }; } catch (e) {};
try { let fnprepatch_1081 = RigVMPin.prototype.GetLinkedTargetPins;RigVMPin.prototype.GetLinkedTargetPins = function (bRecursive = false) { return fnprepatch_1081.call(this, bRecursive) }; } catch (e) {};
try { let fnprepatch_1082 = RigVMPin.prototype.GetLinkedSourcePins;RigVMPin.prototype.GetLinkedSourcePins = function (bRecursive = false) { return fnprepatch_1082.call(this, bRecursive) }; } catch (e) {};
try { let fnprepatch_1083 = RigHierarchy.prototype.UnsetCurveValueByIndex;RigHierarchy.prototype.UnsetCurveValueByIndex = function (InElementIndex, bSetupUndo = false) { return fnprepatch_1083.call(this, InElementIndex, bSetupUndo) }; } catch (e) {};
try { let fnprepatch_1084 = RigHierarchy.prototype.UnsetCurveValue;RigHierarchy.prototype.UnsetCurveValue = function (InKey, bSetupUndo = false) { return fnprepatch_1084.call(this, InKey, bSetupUndo) }; } catch (e) {};
try { let fnprepatch_1085 = RigHierarchy.prototype.SwitchToWorldSpace;RigHierarchy.prototype.SwitchToWorldSpace = function (InChild, bInitial = false, bAffectChildren = true) { return fnprepatch_1085.call(this, InChild, bInitial, bAffectChildren) }; } catch (e) {};
try { let fnprepatch_1086 = RigHierarchy.prototype.SwitchToParent;RigHierarchy.prototype.SwitchToParent = function (InChild, InParent, bInitial = false, bAffectChildren = true) { return fnprepatch_1086.call(this, InChild, InParent, bInitial, bAffectChildren) }; } catch (e) {};
try { let fnprepatch_1087 = RigHierarchy.prototype.SwitchToDefaultParent;RigHierarchy.prototype.SwitchToDefaultParent = function (InChild, bInitial = false, bAffectChildren = true) { return fnprepatch_1087.call(this, InChild, bInitial, bAffectChildren) }; } catch (e) {};
try { let fnprepatch_1088 = RigHierarchy.prototype.SetParentWeightArray;RigHierarchy.prototype.SetParentWeightArray = function (InChild, InWeights, bInitial = false, bAffectChildren = true) { return fnprepatch_1088.call(this, InChild, InWeights, bInitial, bAffectChildren) }; } catch (e) {};
try { let fnprepatch_1089 = RigHierarchy.prototype.SetParentWeight;RigHierarchy.prototype.SetParentWeight = function (InChild, InParent, InWeight, bInitial = false, bAffectChildren = true) { return fnprepatch_1089.call(this, InChild, InParent, InWeight, bInitial, bAffectChildren) }; } catch (e) {};
try { let fnprepatch_1090 = RigHierarchy.prototype.SetLocalTransformByIndex;RigHierarchy.prototype.SetLocalTransformByIndex = function (InElementIndex, InTransform, bInitial = false, bAffectChildren = true, bSetupUndo = false, bPrintPythonCommands = false) { return fnprepatch_1090.call(this, InElementIndex, InTransform, bInitial, bAffectChildren, bSetupUndo, bPrintPythonCommands) }; } catch (e) {};
try { let fnprepatch_1091 = RigHierarchy.prototype.SetLocalTransform;RigHierarchy.prototype.SetLocalTransform = function (InKey, InTransform, bInitial = false, bAffectChildren = true, bSetupUndo = false, bPrintPythonCommands = false) { return fnprepatch_1091.call(this, InKey, InTransform, bInitial, bAffectChildren, bSetupUndo, bPrintPythonCommands) }; } catch (e) {};
try { let fnprepatch_1092 = RigHierarchy.prototype.SetGlobalTransformByIndex;RigHierarchy.prototype.SetGlobalTransformByIndex = function (InElementIndex, InTransform, bInitial = false, bAffectChildren = true, bSetupUndo = false, bPrintPythonCommand = false) { return fnprepatch_1092.call(this, InElementIndex, InTransform, bInitial, bAffectChildren, bSetupUndo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1093 = RigHierarchy.prototype.SetGlobalTransform;RigHierarchy.prototype.SetGlobalTransform = function (InKey, InTransform, bInitial = false, bAffectChildren = true, bSetupUndo = false, bPrintPythonCommand = false) { return fnprepatch_1093.call(this, InKey, InTransform, bInitial, bAffectChildren, bSetupUndo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1094 = RigHierarchy.prototype.SetCurveValueByIndex;RigHierarchy.prototype.SetCurveValueByIndex = function (InElementIndex, InValue, bSetupUndo = false) { return fnprepatch_1094.call(this, InElementIndex, InValue, bSetupUndo) }; } catch (e) {};
try { let fnprepatch_1095 = RigHierarchy.prototype.SetCurveValue;RigHierarchy.prototype.SetCurveValue = function (InKey, InValue, bSetupUndo = false) { return fnprepatch_1095.call(this, InKey, InValue, bSetupUndo) }; } catch (e) {};
try { let fnprepatch_1096 = RigHierarchy.prototype.SetControlValueByIndex;RigHierarchy.prototype.SetControlValueByIndex = function (InElementIndex, InValue, InValueType = "Initial", bSetupUndo = false, bPrintPythonCommands = false) { return fnprepatch_1096.call(this, InElementIndex, InValue, InValueType, bSetupUndo, bPrintPythonCommands) }; } catch (e) {};
try { let fnprepatch_1097 = RigHierarchy.prototype.SetControlValue;RigHierarchy.prototype.SetControlValue = function (InKey, InValue, InValueType = "Initial", bSetupUndo = false, bPrintPythonCommands = false) { return fnprepatch_1097.call(this, InKey, InValue, InValueType, bSetupUndo, bPrintPythonCommands) }; } catch (e) {};
try { let fnprepatch_1098 = RigHierarchy.prototype.SetControlShapeTransformByIndex;RigHierarchy.prototype.SetControlShapeTransformByIndex = function (InElementIndex, InTransform, bInitial = false, bSetupUndo = false) { return fnprepatch_1098.call(this, InElementIndex, InTransform, bInitial, bSetupUndo) }; } catch (e) {};
try { let fnprepatch_1099 = RigHierarchy.prototype.SetControlShapeTransform;RigHierarchy.prototype.SetControlShapeTransform = function (InKey, InTransform, bInitial = false, bSetupUndo = false) { return fnprepatch_1099.call(this, InKey, InTransform, bInitial, bSetupUndo) }; } catch (e) {};
try { let fnprepatch_1100 = RigHierarchy.prototype.SetControlSettingsByIndex;RigHierarchy.prototype.SetControlSettingsByIndex = function (InElementIndex, InSettings, bSetupUndo = false, bForce = false, bPrintPythonCommands = false) { return fnprepatch_1100.call(this, InElementIndex, InSettings, bSetupUndo, bForce, bPrintPythonCommands) }; } catch (e) {};
try { let fnprepatch_1101 = RigHierarchy.prototype.SetControlSettings;RigHierarchy.prototype.SetControlSettings = function (InKey, InSettings, bSetupUndo = false, bForce = false, bPrintPythonCommands = false) { return fnprepatch_1101.call(this, InKey, InSettings, bSetupUndo, bForce, bPrintPythonCommands) }; } catch (e) {};
try { let fnprepatch_1102 = RigHierarchy.prototype.SetControlPreferredRotatorByIndex;RigHierarchy.prototype.SetControlPreferredRotatorByIndex = function (InElementIndex, InRotator, bInitial = false, bFixEulerFlips = false) { return fnprepatch_1102.call(this, InElementIndex, InRotator, bInitial, bFixEulerFlips) }; } catch (e) {};
try { let fnprepatch_1103 = RigHierarchy.prototype.SetControlPreferredRotator;RigHierarchy.prototype.SetControlPreferredRotator = function (InKey, InRotator, bInitial = false, bFixEulerFlips = false) { return fnprepatch_1103.call(this, InKey, InRotator, bInitial, bFixEulerFlips) }; } catch (e) {};
try { let fnprepatch_1104 = RigHierarchy.prototype.SetControlPreferredEulerAnglesByIndex;RigHierarchy.prototype.SetControlPreferredEulerAnglesByIndex = function (InElementIndex, InEulerAngles, InRotationOrder, bInitial = false, bFixEulerFlips = false) { return fnprepatch_1104.call(this, InElementIndex, InEulerAngles, InRotationOrder, bInitial, bFixEulerFlips) }; } catch (e) {};
try { let fnprepatch_1105 = RigHierarchy.prototype.SetControlPreferredEulerAngles;RigHierarchy.prototype.SetControlPreferredEulerAngles = function (InKey, InEulerAngles, InRotationOrder, bInitial = false, bFixEulerFlips = false) { return fnprepatch_1105.call(this, InKey, InEulerAngles, InRotationOrder, bInitial, bFixEulerFlips) }; } catch (e) {};
try { let fnprepatch_1106 = RigHierarchy.prototype.SetControlOffsetTransformByIndex;RigHierarchy.prototype.SetControlOffsetTransformByIndex = function (InElementIndex, InTransform, bInitial = false, bAffectChildren = true, bSetupUndo = false, bPrintPythonCommands = false) { return fnprepatch_1106.call(this, InElementIndex, InTransform, bInitial, bAffectChildren, bSetupUndo, bPrintPythonCommands) }; } catch (e) {};
try { let fnprepatch_1107 = RigHierarchy.prototype.SetControlOffsetTransform;RigHierarchy.prototype.SetControlOffsetTransform = function (InKey, InTransform, bInitial = false, bAffectChildren = true, bSetupUndo = false, bPrintPythonCommands = false) { return fnprepatch_1107.call(this, InKey, InTransform, bInitial, bAffectChildren, bSetupUndo, bPrintPythonCommands) }; } catch (e) {};
try { let fnprepatch_1108 = RigHierarchy.prototype.SendAutoKeyEvent;RigHierarchy.prototype.SendAutoKeyEvent = function (InElement, InOffsetInSeconds = 0, bAsynchronous = true) { return fnprepatch_1108.call(this, InElement, InOffsetInSeconds, bAsynchronous) }; } catch (e) {};
try { let fnprepatch_1109 = RigHierarchy.prototype.GetSelectedKeys;RigHierarchy.prototype.GetSelectedKeys = function (InTypeFilter = "") { return fnprepatch_1109.call(this, InTypeFilter) }; } catch (e) {};
try { let fnprepatch_1110 = RigHierarchy.prototype.GetRigidBodyKeys;RigHierarchy.prototype.GetRigidBodyKeys = function (bTraverse = true) { return fnprepatch_1110.call(this, bTraverse) }; } catch (e) {};
try { let fnprepatch_1111 = RigHierarchy.prototype.GetReferenceKeys;RigHierarchy.prototype.GetReferenceKeys = function (bTraverse = true) { return fnprepatch_1111.call(this, bTraverse) }; } catch (e) {};
try { let fnprepatch_1112 = RigHierarchy.prototype.GetPose;RigHierarchy.prototype.GetPose = function (bInitial = false) { return fnprepatch_1112.call(this, bInitial) }; } catch (e) {};
try { let fnprepatch_1113 = RigHierarchy.prototype.GetParentWeightArray;RigHierarchy.prototype.GetParentWeightArray = function (InChild, bInitial = false) { return fnprepatch_1113.call(this, InChild, bInitial) }; } catch (e) {};
try { let fnprepatch_1114 = RigHierarchy.prototype.GetParentWeight;RigHierarchy.prototype.GetParentWeight = function (InChild, InParent, bInitial = false) { return fnprepatch_1114.call(this, InChild, InParent, bInitial) }; } catch (e) {};
try { let fnprepatch_1115 = RigHierarchy.prototype.GetParentTransformByIndex;RigHierarchy.prototype.GetParentTransformByIndex = function (InElementIndex, bInitial = false) { return fnprepatch_1115.call(this, InElementIndex, bInitial) }; } catch (e) {};
try { let fnprepatch_1116 = RigHierarchy.prototype.GetParentTransform;RigHierarchy.prototype.GetParentTransform = function (InKey, bInitial = false) { return fnprepatch_1116.call(this, InKey, bInitial) }; } catch (e) {};
try { let fnprepatch_1117 = RigHierarchy.prototype.GetParents;RigHierarchy.prototype.GetParents = function (InKey, bRecursive = false) { return fnprepatch_1117.call(this, InKey, bRecursive) }; } catch (e) {};
try { let fnprepatch_1118 = RigHierarchy.prototype.GetNullKeys;RigHierarchy.prototype.GetNullKeys = function (bTraverse = true) { return fnprepatch_1118.call(this, bTraverse) }; } catch (e) {};
try { let fnprepatch_1119 = RigHierarchy.prototype.GetLocalTransformByIndex;RigHierarchy.prototype.GetLocalTransformByIndex = function (InElementIndex, bInitial = false) { return fnprepatch_1119.call(this, InElementIndex, bInitial) }; } catch (e) {};
try { let fnprepatch_1120 = RigHierarchy.prototype.GetLocalTransform;RigHierarchy.prototype.GetLocalTransform = function (InKey, bInitial = false) { return fnprepatch_1120.call(this, InKey, bInitial) }; } catch (e) {};
try { let fnprepatch_1121 = RigHierarchy.prototype.GetLocalControlShapeTransformByIndex;RigHierarchy.prototype.GetLocalControlShapeTransformByIndex = function (InElementIndex, bInitial = false) { return fnprepatch_1121.call(this, InElementIndex, bInitial) }; } catch (e) {};
try { let fnprepatch_1122 = RigHierarchy.prototype.GetLocalControlShapeTransform;RigHierarchy.prototype.GetLocalControlShapeTransform = function (InKey, bInitial = false) { return fnprepatch_1122.call(this, InKey, bInitial) }; } catch (e) {};
try { let fnprepatch_1123 = RigHierarchy.prototype.GetGlobalTransformByIndex;RigHierarchy.prototype.GetGlobalTransformByIndex = function (InElementIndex, bInitial = false) { return fnprepatch_1123.call(this, InElementIndex, bInitial) }; } catch (e) {};
try { let fnprepatch_1124 = RigHierarchy.prototype.GetGlobalTransform;RigHierarchy.prototype.GetGlobalTransform = function (InKey, bInitial = false) { return fnprepatch_1124.call(this, InKey, bInitial) }; } catch (e) {};
try { let fnprepatch_1125 = RigHierarchy.prototype.GetGlobalControlShapeTransformByIndex;RigHierarchy.prototype.GetGlobalControlShapeTransformByIndex = function (InElementIndex, bInitial = false) { return fnprepatch_1125.call(this, InElementIndex, bInitial) }; } catch (e) {};
try { let fnprepatch_1126 = RigHierarchy.prototype.GetGlobalControlShapeTransform;RigHierarchy.prototype.GetGlobalControlShapeTransform = function (InKey, bInitial = false) { return fnprepatch_1126.call(this, InKey, bInitial) }; } catch (e) {};
try { let fnprepatch_1127 = RigHierarchy.prototype.GetGlobalControlOffsetTransformByIndex;RigHierarchy.prototype.GetGlobalControlOffsetTransformByIndex = function (InElementIndex, bInitial = false) { return fnprepatch_1127.call(this, InElementIndex, bInitial) }; } catch (e) {};
try { let fnprepatch_1128 = RigHierarchy.prototype.GetGlobalControlOffsetTransform;RigHierarchy.prototype.GetGlobalControlOffsetTransform = function (InKey, bInitial = false) { return fnprepatch_1128.call(this, InKey, bInitial) }; } catch (e) {};
try { let fnprepatch_1129 = RigHierarchy.prototype.GetControlValueByIndex;RigHierarchy.prototype.GetControlValueByIndex = function (InElementIndex, InValueType = "Initial") { return fnprepatch_1129.call(this, InElementIndex, InValueType) }; } catch (e) {};
try { let fnprepatch_1130 = RigHierarchy.prototype.GetControlValue;RigHierarchy.prototype.GetControlValue = function (InKey, InValueType = "Initial") { return fnprepatch_1130.call(this, InKey, InValueType) }; } catch (e) {};
try { let fnprepatch_1131 = RigHierarchy.prototype.GetControlPreferredRotatorByIndex;RigHierarchy.prototype.GetControlPreferredRotatorByIndex = function (InElementIndex, bInitial = false) { return fnprepatch_1131.call(this, InElementIndex, bInitial) }; } catch (e) {};
try { let fnprepatch_1132 = RigHierarchy.prototype.GetControlPreferredRotator;RigHierarchy.prototype.GetControlPreferredRotator = function (InKey, bInitial = false) { return fnprepatch_1132.call(this, InKey, bInitial) }; } catch (e) {};
try { let fnprepatch_1133 = RigHierarchy.prototype.GetControlPreferredEulerRotationOrderByIndex;RigHierarchy.prototype.GetControlPreferredEulerRotationOrderByIndex = function (InElementIndex, bFromSettings = true) { return fnprepatch_1133.call(this, InElementIndex, bFromSettings) }; } catch (e) {};
try { let fnprepatch_1134 = RigHierarchy.prototype.GetControlPreferredEulerRotationOrder;RigHierarchy.prototype.GetControlPreferredEulerRotationOrder = function (InKey, bFromSettings = true) { return fnprepatch_1134.call(this, InKey, bFromSettings) }; } catch (e) {};
try { let fnprepatch_1135 = RigHierarchy.prototype.GetControlPreferredEulerAnglesByIndex;RigHierarchy.prototype.GetControlPreferredEulerAnglesByIndex = function (InElementIndex, InRotationOrder, bInitial = false) { return fnprepatch_1135.call(this, InElementIndex, InRotationOrder, bInitial) }; } catch (e) {};
try { let fnprepatch_1136 = RigHierarchy.prototype.GetControlPreferredEulerAngles;RigHierarchy.prototype.GetControlPreferredEulerAngles = function (InKey, InRotationOrder, bInitial = false) { return fnprepatch_1136.call(this, InKey, InRotationOrder, bInitial) }; } catch (e) {};
try { let fnprepatch_1137 = RigHierarchy.prototype.GetController;RigHierarchy.prototype.GetController = function (bCreateIfNeeded = true) { return fnprepatch_1137.call(this, bCreateIfNeeded) }; } catch (e) {};
try { let fnprepatch_1138 = RigHierarchy.prototype.GetControlKeys;RigHierarchy.prototype.GetControlKeys = function (bTraverse = true) { return fnprepatch_1138.call(this, bTraverse) }; } catch (e) {};
try { let fnprepatch_1139 = RigHierarchy.prototype.GetChildren;RigHierarchy.prototype.GetChildren = function (InKey, bRecursive = false) { return fnprepatch_1139.call(this, InKey, bRecursive) }; } catch (e) {};
try { let fnprepatch_1140 = RigHierarchy.prototype.GetBoneKeys;RigHierarchy.prototype.GetBoneKeys = function (bTraverse = true) { return fnprepatch_1140.call(this, bTraverse) }; } catch (e) {};
try { let fnprepatch_1141 = RigHierarchy.prototype.GetAllKeys_ForBlueprint;RigHierarchy.prototype.GetAllKeys_ForBlueprint = function (bTraverse = true) { return fnprepatch_1141.call(this, bTraverse) }; } catch (e) {};
try { let fnprepatch_1142 = RigHierarchy.prototype.CopyPose;RigHierarchy.prototype.CopyPose = function (InHierarchy, bCurrent, bInitial, bWeights, bMatchPoseInGlobalIfNeeded = false) { return fnprepatch_1142.call(this, InHierarchy, bCurrent, bInitial, bWeights, bMatchPoseInGlobalIfNeeded) }; } catch (e) {};
try { RigHierarchy.prototype.SetPose = RigHierarchy.prototype.SetPose_ForBlueprint; } catch (e) {};
try { RigHierarchy.prototype.GetRootElements = RigHierarchy.prototype.GetRootElementKeys; } catch (e) {};
try { RigHierarchy.prototype.GetRigidBodies = RigHierarchy.prototype.GetRigidBodyKeys; } catch (e) {};
try { RigHierarchy.prototype.GetReferences = RigHierarchy.prototype.GetReferenceKeys; } catch (e) {};
try { RigHierarchy.prototype.GetNulls = RigHierarchy.prototype.GetNullKeys; } catch (e) {};
try { RigHierarchy.prototype.GetLocalIndex = RigHierarchy.prototype.GetLocalIndex_ForBlueprint; } catch (e) {};
try { RigHierarchy.prototype.GetIndex = RigHierarchy.prototype.GetIndex_ForBlueprint; } catch (e) {};
try { RigHierarchy.prototype.GetCurves = RigHierarchy.prototype.GetCurveKeys; } catch (e) {};
try { RigHierarchy.prototype.GetControls = RigHierarchy.prototype.GetControlKeys; } catch (e) {};
try { RigHierarchy.prototype.GetBones = RigHierarchy.prototype.GetBoneKeys; } catch (e) {};
try { RigHierarchy.prototype.GetAllKeys = RigHierarchy.prototype.GetAllKeys_ForBlueprint; } catch (e) {};
try { RigHierarchy.prototype.FindNull = RigHierarchy.prototype.FindNull_ForBlueprintOnly; } catch (e) {};
try { RigHierarchy.prototype.FindControl = RigHierarchy.prototype.FindControl_ForBlueprintOnly; } catch (e) {};
try { RigHierarchy.prototype.FindBone = RigHierarchy.prototype.FindBone_ForBlueprintOnly; } catch (e) {};
try { RigHierarchy.prototype.Contains = RigHierarchy.prototype.Contains_ForBlueprint; } catch (e) {};
try { let fnprepatch_1143 = ControlRig.prototype.SelectControl;ControlRig.prototype.SelectControl = function (InControlName, bSelect = true) { return fnprepatch_1143.call(this, InControlName, bSelect) }; } catch (e) {};
try { let fnprepatch_1144 = ControlRigComponent.prototype.Update;ControlRigComponent.prototype.Update = function (DeltaTime = 0) { return fnprepatch_1144.call(this, DeltaTime) }; } catch (e) {};
try { let fnprepatch_1145 = ControlRigComponent.prototype.SetInitialSpaceTransform;ControlRigComponent.prototype.SetInitialSpaceTransform = function (SpaceName, InitialTransform, Space = "WorldSpace") { return fnprepatch_1145.call(this, SpaceName, InitialTransform, Space) }; } catch (e) {};
try { let fnprepatch_1146 = ControlRigComponent.prototype.SetInitialBoneTransform;ControlRigComponent.prototype.SetInitialBoneTransform = function (BoneName, InitialTransform, Space = "WorldSpace", bPropagateToChildren = false) { return fnprepatch_1146.call(this, BoneName, InitialTransform, Space, bPropagateToChildren) }; } catch (e) {};
try { let fnprepatch_1147 = ControlRigComponent.prototype.SetControlTransform;ControlRigComponent.prototype.SetControlTransform = function (ControlName, Value, Space = "WorldSpace") { return fnprepatch_1147.call(this, ControlName, Value, Space) }; } catch (e) {};
try { let fnprepatch_1148 = ControlRigComponent.prototype.SetControlScale;ControlRigComponent.prototype.SetControlScale = function (ControlName, Value, Space = "WorldSpace") { return fnprepatch_1148.call(this, ControlName, Value, Space) }; } catch (e) {};
try { let fnprepatch_1149 = ControlRigComponent.prototype.SetControlRotator;ControlRigComponent.prototype.SetControlRotator = function (ControlName, Value, Space = "WorldSpace") { return fnprepatch_1149.call(this, ControlName, Value, Space) }; } catch (e) {};
try { let fnprepatch_1150 = ControlRigComponent.prototype.SetControlPosition;ControlRigComponent.prototype.SetControlPosition = function (ControlName, Value, Space = "WorldSpace") { return fnprepatch_1150.call(this, ControlName, Value, Space) }; } catch (e) {};
try { let fnprepatch_1151 = ControlRigComponent.prototype.SetControlOffset;ControlRigComponent.prototype.SetControlOffset = function (ControlName, OffsetTransform, Space = "WorldSpace") { return fnprepatch_1151.call(this, ControlName, OffsetTransform, Space) }; } catch (e) {};
try { let fnprepatch_1152 = ControlRigComponent.prototype.SetBoneTransform;ControlRigComponent.prototype.SetBoneTransform = function (BoneName, Transform, Space = "WorldSpace", Weight = 1, bPropagateToChildren = true) { return fnprepatch_1152.call(this, BoneName, Transform, Space, Weight, bPropagateToChildren) }; } catch (e) {};
try { let fnprepatch_1153 = ControlRigComponent.prototype.GetSpaceTransform;ControlRigComponent.prototype.GetSpaceTransform = function (SpaceName, Space = "WorldSpace") { return fnprepatch_1153.call(this, SpaceName, Space) }; } catch (e) {};
try { let fnprepatch_1154 = ControlRigComponent.prototype.GetInitialSpaceTransform;ControlRigComponent.prototype.GetInitialSpaceTransform = function (SpaceName, Space = "WorldSpace") { return fnprepatch_1154.call(this, SpaceName, Space) }; } catch (e) {};
try { let fnprepatch_1155 = ControlRigComponent.prototype.GetInitialBoneTransform;ControlRigComponent.prototype.GetInitialBoneTransform = function (BoneName, Space = "WorldSpace") { return fnprepatch_1155.call(this, BoneName, Space) }; } catch (e) {};
try { let fnprepatch_1156 = ControlRigComponent.prototype.GetElementNames;ControlRigComponent.prototype.GetElementNames = function (ElementType = "Bone") { return fnprepatch_1156.call(this, ElementType) }; } catch (e) {};
try { let fnprepatch_1157 = ControlRigComponent.prototype.GetControlTransform;ControlRigComponent.prototype.GetControlTransform = function (ControlName, Space = "WorldSpace") { return fnprepatch_1157.call(this, ControlName, Space) }; } catch (e) {};
try { let fnprepatch_1158 = ControlRigComponent.prototype.GetControlScale;ControlRigComponent.prototype.GetControlScale = function (ControlName, Space = "WorldSpace") { return fnprepatch_1158.call(this, ControlName, Space) }; } catch (e) {};
try { let fnprepatch_1159 = ControlRigComponent.prototype.GetControlRotator;ControlRigComponent.prototype.GetControlRotator = function (ControlName, Space = "WorldSpace") { return fnprepatch_1159.call(this, ControlName, Space) }; } catch (e) {};
try { let fnprepatch_1160 = ControlRigComponent.prototype.GetControlPosition;ControlRigComponent.prototype.GetControlPosition = function (ControlName, Space = "WorldSpace") { return fnprepatch_1160.call(this, ControlName, Space) }; } catch (e) {};
try { let fnprepatch_1161 = ControlRigComponent.prototype.GetControlOffset;ControlRigComponent.prototype.GetControlOffset = function (ControlName, Space = "WorldSpace") { return fnprepatch_1161.call(this, ControlName, Space) }; } catch (e) {};
try { let fnprepatch_1162 = ControlRigComponent.prototype.GetBoneTransform;ControlRigComponent.prototype.GetBoneTransform = function (BoneName, Space = "WorldSpace") { return fnprepatch_1162.call(this, BoneName, Space) }; } catch (e) {};
try { let fnprepatch_1163 = ControlRigComponent.prototype.DoesElementExist;ControlRigComponent.prototype.DoesElementExist = function (Name, ElementType = "None") { return fnprepatch_1163.call(this, Name, ElementType) }; } catch (e) {};
try { ControlRigComponent.prototype.AddMappedSkeletalMeshBoneArray = ControlRigComponent.prototype.AddMappedSkeletalMesh; } catch (e) {};
try { ControlRigComponent.prototype.AddMappedSkeletalMesh = ControlRigComponent.prototype.AddMappedCompleteSkeletalMesh; } catch (e) {};
try { ControlRigControlActor.prototype.Reset = ControlRigControlActor.prototype.ResetControlActor; } catch (e) {};
try { let fnprepatch_1164 = ControlRigTestData.prototype.SetupReplay;ControlRigTestData.prototype.SetupReplay = function (InControlRig, bGroundTruth = true) { return fnprepatch_1164.call(this, InControlRig, bGroundTruth) }; } catch (e) {};
try { let fnprepatch_1165 = ControlRigTestData.prototype.Record;ControlRigTestData.prototype.Record = function (InControlRig, InRecordingDuration = 0) { return fnprepatch_1165.call(this, InControlRig, InRecordingDuration) }; } catch (e) {};
try { let fnprepatch_1166 = ControlRigTestData.prototype.GetTimeRange;ControlRigTestData.prototype.GetTimeRange = function (bInput = false) { return fnprepatch_1166.call(this, bInput) }; } catch (e) {};
try { let fnprepatch_1167 = ControlRigTestData.prototype.GetFrameIndexForTime;ControlRigTestData.prototype.GetFrameIndexForTime = function (InSeconds, bInput = false) { return fnprepatch_1167.call(this, InSeconds, bInput) }; } catch (e) {};
try { let fnprepatch_1168 = RigHierarchyController.prototype.SetSelection;RigHierarchyController.prototype.SetSelection = function (InKeys, bPrintPythonCommand = false) { return fnprepatch_1168.call(this, InKeys, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1169 = RigHierarchyController.prototype.SetParent;RigHierarchyController.prototype.SetParent = function (InChild, InParent, bMaintainGlobalTransform = true, bSetupUndo = false, bPrintPythonCommand = false) { return fnprepatch_1169.call(this, InChild, InParent, bMaintainGlobalTransform, bSetupUndo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1170 = RigHierarchyController.prototype.SetDisplayName;RigHierarchyController.prototype.SetDisplayName = function (InControl, InDisplayName, bRenameElement = false, bSetupUndo = false, bPrintPythonCommand = false) { return fnprepatch_1170.call(this, InControl, InDisplayName, bRenameElement, bSetupUndo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1171 = RigHierarchyController.prototype.SetControlSettings;RigHierarchyController.prototype.SetControlSettings = function (InKey, InSettings, bSetupUndo = false) { return fnprepatch_1171.call(this, InKey, InSettings, bSetupUndo) }; } catch (e) {};
try { let fnprepatch_1172 = RigHierarchyController.prototype.SelectElement;RigHierarchyController.prototype.SelectElement = function (InKey, bSelect = true, bClearSelection = false) { return fnprepatch_1172.call(this, InKey, bSelect, bClearSelection) }; } catch (e) {};
try { let fnprepatch_1173 = RigHierarchyController.prototype.ReorderElement;RigHierarchyController.prototype.ReorderElement = function (InElement, InIndex, bSetupUndo = false, bPrintPythonCommand = false) { return fnprepatch_1173.call(this, InElement, InIndex, bSetupUndo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1174 = RigHierarchyController.prototype.RenameElement;RigHierarchyController.prototype.RenameElement = function (InElement, InName, bSetupUndo = false, bPrintPythonCommand = false, bClearSelection = true) { return fnprepatch_1174.call(this, InElement, InName, bSetupUndo, bPrintPythonCommand, bClearSelection) }; } catch (e) {};
try { let fnprepatch_1175 = RigHierarchyController.prototype.RemoveParent;RigHierarchyController.prototype.RemoveParent = function (InChild, InParent, bMaintainGlobalTransform = true, bSetupUndo = false, bPrintPythonCommand = false) { return fnprepatch_1175.call(this, InChild, InParent, bMaintainGlobalTransform, bSetupUndo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1176 = RigHierarchyController.prototype.RemoveElement;RigHierarchyController.prototype.RemoveElement = function (InElement, bSetupUndo = false, bPrintPythonCommand = false) { return fnprepatch_1176.call(this, InElement, bSetupUndo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1177 = RigHierarchyController.prototype.RemoveAllParents;RigHierarchyController.prototype.RemoveAllParents = function (InChild, bMaintainGlobalTransform = true, bSetupUndo = false, bPrintPythonCommand = false) { return fnprepatch_1177.call(this, InChild, bMaintainGlobalTransform, bSetupUndo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1178 = RigHierarchyController.prototype.MirrorElements;RigHierarchyController.prototype.MirrorElements = function (InKeys, InSettings, bSelectNewElements = true, bSetupUndo = false, bPrintPythonCommands = false) { return fnprepatch_1178.call(this, InKeys, InSettings, bSelectNewElements, bSetupUndo, bPrintPythonCommands) }; } catch (e) {};
try { let fnprepatch_1179 = RigHierarchyController.prototype.ImportFromText;RigHierarchyController.prototype.ImportFromText = function (InContent, bReplaceExistingElements = false, bSelectNewElements = true, bSetupUndo = false, bPrintPythonCommands = false) { return fnprepatch_1179.call(this, InContent, bReplaceExistingElements, bSelectNewElements, bSetupUndo, bPrintPythonCommands) }; } catch (e) {};
try { let fnprepatch_1180 = RigHierarchyController.prototype.ImportCurvesFromAsset;RigHierarchyController.prototype.ImportCurvesFromAsset = function (InAssetPath, InNameSpace = "None", bSelectCurves = false, bSetupUndo = false) { return fnprepatch_1180.call(this, InAssetPath, InNameSpace, bSelectCurves, bSetupUndo) }; } catch (e) {};
try { let fnprepatch_1181 = RigHierarchyController.prototype.ImportCurves;RigHierarchyController.prototype.ImportCurves = function (InSkeleton, InNameSpace = "None", bSelectCurves = false, bSetupUndo = false, bPrintPythonCommand = false) { return fnprepatch_1181.call(this, InSkeleton, InNameSpace, bSelectCurves, bSetupUndo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1182 = RigHierarchyController.prototype.ImportBonesFromAsset;RigHierarchyController.prototype.ImportBonesFromAsset = function (InAssetPath, InNameSpace = "None", bReplaceExistingBones = true, bRemoveObsoleteBones = true, bSelectBones = false, bSetupUndo = false) { return fnprepatch_1182.call(this, InAssetPath, InNameSpace, bReplaceExistingBones, bRemoveObsoleteBones, bSelectBones, bSetupUndo) }; } catch (e) {};
try { let fnprepatch_1183 = RigHierarchyController.prototype.ImportBones;RigHierarchyController.prototype.ImportBones = function (InSkeleton, InNameSpace = "None", bReplaceExistingBones = true, bRemoveObsoleteBones = true, bSelectBones = false, bSetupUndo = false, bPrintPythonCommand = false) { return fnprepatch_1183.call(this, InSkeleton, InNameSpace, bReplaceExistingBones, bRemoveObsoleteBones, bSelectBones, bSetupUndo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1184 = RigHierarchyController.prototype.DuplicateElements;RigHierarchyController.prototype.DuplicateElements = function (InKeys, bSelectNewElements = true, bSetupUndo = false, bPrintPythonCommands = false) { return fnprepatch_1184.call(this, InKeys, bSelectNewElements, bSetupUndo, bPrintPythonCommands) }; } catch (e) {};
try { let fnprepatch_1185 = RigHierarchyController.prototype.AddRigidBody;RigHierarchyController.prototype.AddRigidBody = function (InName, InParent, InSettings, InLocalTransform, bSetupUndo = false, bPrintPythonCommand = false) { return fnprepatch_1185.call(this, InName, InParent, InSettings, InLocalTransform, bSetupUndo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1186 = RigHierarchyController.prototype.AddParent;RigHierarchyController.prototype.AddParent = function (InChild, InParent, InWeight = 0, bMaintainGlobalTransform = true, bSetupUndo = false) { return fnprepatch_1186.call(this, InChild, InParent, InWeight, bMaintainGlobalTransform, bSetupUndo) }; } catch (e) {};
try { let fnprepatch_1187 = RigHierarchyController.prototype.AddNull;RigHierarchyController.prototype.AddNull = function (InName, InParent, InTransform, bTransformInGlobal = true, bSetupUndo = false, bPrintPythonCommand = false) { return fnprepatch_1187.call(this, InName, InParent, InTransform, bTransformInGlobal, bSetupUndo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1188 = RigHierarchyController.prototype.AddCurve;RigHierarchyController.prototype.AddCurve = function (InName, InValue = 0, bSetupUndo = true, bPrintPythonCommand = false) { return fnprepatch_1188.call(this, InName, InValue, bSetupUndo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1189 = RigHierarchyController.prototype.AddControl_ForBlueprint;RigHierarchyController.prototype.AddControl_ForBlueprint = function (InName, InParent, InSettings, InValue, bSetupUndo = true, bPrintPythonCommand = false) { return fnprepatch_1189.call(this, InName, InParent, InSettings, InValue, bSetupUndo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1190 = RigHierarchyController.prototype.AddBone;RigHierarchyController.prototype.AddBone = function (InName, InParent, InTransform, bTransformInGlobal = true, InBoneType = "Imported", bSetupUndo = false, bPrintPythonCommand = false) { return fnprepatch_1190.call(this, InName, InParent, InTransform, bTransformInGlobal, InBoneType, bSetupUndo, bPrintPythonCommand) }; } catch (e) {};
try { let fnprepatch_1191 = RigHierarchyController.prototype.AddAnimationChannel_ForBlueprint;RigHierarchyController.prototype.AddAnimationChannel_ForBlueprint = function (InName, InParentControl, InSettings, bSetupUndo = true, bPrintPythonCommand = false) { return fnprepatch_1191.call(this, InName, InParentControl, InSettings, bSetupUndo, bPrintPythonCommand) }; } catch (e) {};
try { RigHierarchyController.prototype.AddControl = RigHierarchyController.prototype.AddControl_ForBlueprint; } catch (e) {};
try { RigHierarchyController.prototype.AddControl = RigHierarchyController.prototype.AddAnimationChannel_ForBlueprint; } catch (e) {};
try { let fnprepatch_1192 = ControlRigPoseAsset.prototype.SelectControls;ControlRigPoseAsset.prototype.SelectControls = function (InControlRig, bDoMirror = false) { return fnprepatch_1192.call(this, InControlRig, bDoMirror) }; } catch (e) {};
try { let fnprepatch_1193 = ControlRigPoseAsset.prototype.PastePose;ControlRigPoseAsset.prototype.PastePose = function (InControlRig, bDoKey = false, bDoMirror = false) { return fnprepatch_1193.call(this, InControlRig, bDoKey, bDoMirror) }; } catch (e) {};
try { let fnprepatch_1194 = ControlRigBlueprint.prototype.SetPreviewMesh;ControlRigBlueprint.prototype.SetPreviewMesh = function (PreviewMesh, bMarkAsDirty = true) { return fnprepatch_1194.call(this, PreviewMesh, bMarkAsDirty) }; } catch (e) {};
try { let fnprepatch_1195 = InterchangeSceneNode.prototype.SetCustomTimeZeroLocalTransform;InterchangeSceneNode.prototype.SetCustomTimeZeroLocalTransform = function (BaseNodeContainer, AttributeValue, bResetCache = true) { return fnprepatch_1195.call(this, BaseNodeContainer, AttributeValue, bResetCache) }; } catch (e) {};
try { let fnprepatch_1196 = InterchangeSceneNode.prototype.SetCustomLocalTransform;InterchangeSceneNode.prototype.SetCustomLocalTransform = function (BaseNodeContainer, AttributeValue, bResetCache = true) { return fnprepatch_1196.call(this, BaseNodeContainer, AttributeValue, bResetCache) }; } catch (e) {};
try { let fnprepatch_1197 = InterchangeSceneNode.prototype.SetCustomBindPoseLocalTransform;InterchangeSceneNode.prototype.SetCustomBindPoseLocalTransform = function (BaseNodeContainer, AttributeValue, bResetCache = true) { return fnprepatch_1197.call(this, BaseNodeContainer, AttributeValue, bResetCache) }; } catch (e) {};
try { let fnprepatch_1198 = InterchangeSceneNode.prototype.GetCustomTimeZeroGlobalTransform;InterchangeSceneNode.prototype.GetCustomTimeZeroGlobalTransform = function (BaseNodeContainer, GlobalOffsetTransform, AttributeValue, bForceRecache = false) { return fnprepatch_1198.call(this, BaseNodeContainer, GlobalOffsetTransform, AttributeValue, bForceRecache) }; } catch (e) {};
try { let fnprepatch_1199 = InterchangeSceneNode.prototype.GetCustomGlobalTransform;InterchangeSceneNode.prototype.GetCustomGlobalTransform = function (BaseNodeContainer, GlobalOffsetTransform, AttributeValue, bForceRecache = false) { return fnprepatch_1199.call(this, BaseNodeContainer, GlobalOffsetTransform, AttributeValue, bForceRecache) }; } catch (e) {};
try { let fnprepatch_1200 = InterchangeSceneNode.prototype.GetCustomBindPoseGlobalTransform;InterchangeSceneNode.prototype.GetCustomBindPoseGlobalTransform = function (BaseNodeContainer, GlobalOffsetTransform, AttributeValue, bForceRecache = false) { return fnprepatch_1200.call(this, BaseNodeContainer, GlobalOffsetTransform, AttributeValue, bForceRecache) }; } catch (e) {};
try { let fnprepatch_1201 = InterchangeShaderGraphNode.prototype.SetCustomOpacityMaskClipValue;InterchangeShaderGraphNode.prototype.SetCustomOpacityMaskClipValue = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1201.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1202 = InterchangeActorFactoryNode.prototype.SetCustomMobility;InterchangeActorFactoryNode.prototype.SetCustomMobility = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1202.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1203 = InterchangeActorFactoryNode.prototype.SetCustomGlobalTransform;InterchangeActorFactoryNode.prototype.SetCustomGlobalTransform = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1203.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1204 = InterchangePhysicalCameraFactoryNode.prototype.SetCustomSensorWidth;InterchangePhysicalCameraFactoryNode.prototype.SetCustomSensorWidth = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1204.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1205 = InterchangePhysicalCameraFactoryNode.prototype.SetCustomSensorHeight;InterchangePhysicalCameraFactoryNode.prototype.SetCustomSensorHeight = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1205.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1206 = InterchangePhysicalCameraFactoryNode.prototype.SetCustomFocusMethod;InterchangePhysicalCameraFactoryNode.prototype.SetCustomFocusMethod = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1206.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1207 = InterchangePhysicalCameraFactoryNode.prototype.SetCustomFocalLength;InterchangePhysicalCameraFactoryNode.prototype.SetCustomFocalLength = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1207.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1208 = InterchangeStandardCameraFactoryNode.prototype.SetCustomWidth;InterchangeStandardCameraFactoryNode.prototype.SetCustomWidth = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1208.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1209 = InterchangeStandardCameraFactoryNode.prototype.SetCustomProjectionMode;InterchangeStandardCameraFactoryNode.prototype.SetCustomProjectionMode = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1209.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1210 = InterchangeStandardCameraFactoryNode.prototype.SetCustomNearClipPlane;InterchangeStandardCameraFactoryNode.prototype.SetCustomNearClipPlane = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1210.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1211 = InterchangeStandardCameraFactoryNode.prototype.SetCustomFieldOfView;InterchangeStandardCameraFactoryNode.prototype.SetCustomFieldOfView = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1211.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1212 = InterchangeStandardCameraFactoryNode.prototype.SetCustomFarClipPlane;InterchangeStandardCameraFactoryNode.prototype.SetCustomFarClipPlane = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1212.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1213 = InterchangeStandardCameraFactoryNode.prototype.SetCustomAspectRatio;InterchangeStandardCameraFactoryNode.prototype.SetCustomAspectRatio = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1213.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1214 = InterchangeBaseLightFactoryNode.prototype.SetCustomUseTemperature;InterchangeBaseLightFactoryNode.prototype.SetCustomUseTemperature = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1214.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1215 = InterchangeBaseLightFactoryNode.prototype.SetCustomTemperature;InterchangeBaseLightFactoryNode.prototype.SetCustomTemperature = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1215.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1216 = InterchangeBaseLightFactoryNode.prototype.SetCustomLightColor;InterchangeBaseLightFactoryNode.prototype.SetCustomLightColor = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1216.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1217 = InterchangeBaseLightFactoryNode.prototype.SetCustomIntensity;InterchangeBaseLightFactoryNode.prototype.SetCustomIntensity = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1217.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1218 = InterchangeLightFactoryNode.prototype.SetCustomIntensityUnits;InterchangeLightFactoryNode.prototype.SetCustomIntensityUnits = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1218.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1219 = InterchangeLightFactoryNode.prototype.SetCustomAttenuationRadius;InterchangeLightFactoryNode.prototype.SetCustomAttenuationRadius = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1219.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1220 = InterchangeRectLightFactoryNode.prototype.SetCustomSourceWidth;InterchangeRectLightFactoryNode.prototype.SetCustomSourceWidth = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1220.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1221 = InterchangeRectLightFactoryNode.prototype.SetCustomSourceHeight;InterchangeRectLightFactoryNode.prototype.SetCustomSourceHeight = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1221.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1222 = InterchangePointLightFactoryNode.prototype.SetCustomUseInverseSquaredFalloff;InterchangePointLightFactoryNode.prototype.SetCustomUseInverseSquaredFalloff = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1222.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1223 = InterchangePointLightFactoryNode.prototype.SetCustomLightFalloffExponent;InterchangePointLightFactoryNode.prototype.SetCustomLightFalloffExponent = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1223.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1224 = InterchangeSpotLightFactoryNode.prototype.SetCustomOuterConeAngle;InterchangeSpotLightFactoryNode.prototype.SetCustomOuterConeAngle = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1224.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1225 = InterchangeSpotLightFactoryNode.prototype.SetCustomInnerConeAngle;InterchangeSpotLightFactoryNode.prototype.SetCustomInnerConeAngle = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1225.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1226 = InterchangeTextureFactoryNode.prototype.SetCustomVirtualTextureStreaming;InterchangeTextureFactoryNode.prototype.SetCustomVirtualTextureStreaming = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1226.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1227 = InterchangeTextureFactoryNode.prototype.SetCustomSRGB;InterchangeTextureFactoryNode.prototype.SetCustomSRGB = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1227.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1228 = InterchangeTextureFactoryNode.prototype.SetCustomPowerOfTwoMode;InterchangeTextureFactoryNode.prototype.SetCustomPowerOfTwoMode = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1228.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1229 = InterchangeTextureFactoryNode.prototype.SetCustomPaddingColor;InterchangeTextureFactoryNode.prototype.SetCustomPaddingColor = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1229.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1230 = InterchangeTextureFactoryNode.prototype.SetCustomMipLoadOptions;InterchangeTextureFactoryNode.prototype.SetCustomMipLoadOptions = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1230.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1231 = InterchangeTextureFactoryNode.prototype.SetCustomMipGenSettings;InterchangeTextureFactoryNode.prototype.SetCustomMipGenSettings = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1231.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1232 = InterchangeTextureFactoryNode.prototype.SetCustomMaxTextureSize;InterchangeTextureFactoryNode.prototype.SetCustomMaxTextureSize = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1232.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1233 = InterchangeTextureFactoryNode.prototype.SetCustomLossyCompressionAmount;InterchangeTextureFactoryNode.prototype.SetCustomLossyCompressionAmount = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1233.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1234 = InterchangeTextureFactoryNode.prototype.SetCustomLODGroup;InterchangeTextureFactoryNode.prototype.SetCustomLODGroup = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1234.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1235 = InterchangeTextureFactoryNode.prototype.SetCustomLODBias;InterchangeTextureFactoryNode.prototype.SetCustomLODBias = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1235.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1236 = InterchangeTextureFactoryNode.prototype.SetCustomFilter;InterchangeTextureFactoryNode.prototype.SetCustomFilter = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1236.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1237 = InterchangeTextureFactoryNode.prototype.SetCustomDownscaleOptions;InterchangeTextureFactoryNode.prototype.SetCustomDownscaleOptions = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1237.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1238 = InterchangeTextureFactoryNode.prototype.SetCustomDownscale;InterchangeTextureFactoryNode.prototype.SetCustomDownscale = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1238.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1239 = InterchangeTextureFactoryNode.prototype.SetCustomDeferCompression;InterchangeTextureFactoryNode.prototype.SetCustomDeferCompression = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1239.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1240 = InterchangeTextureFactoryNode.prototype.SetCustomCompressionSettings;InterchangeTextureFactoryNode.prototype.SetCustomCompressionSettings = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1240.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1241 = InterchangeTextureFactoryNode.prototype.SetCustomCompressionQuality;InterchangeTextureFactoryNode.prototype.SetCustomCompressionQuality = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1241.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1242 = InterchangeTextureFactoryNode.prototype.SetCustomCompressionNoAlpha;InterchangeTextureFactoryNode.prototype.SetCustomCompressionNoAlpha = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1242.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1243 = InterchangeTextureFactoryNode.prototype.SetCustomCompositeTextureMode;InterchangeTextureFactoryNode.prototype.SetCustomCompositeTextureMode = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1243.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1244 = InterchangeTextureFactoryNode.prototype.SetCustomCompositePower;InterchangeTextureFactoryNode.prototype.SetCustomCompositePower = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1244.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1245 = InterchangeTextureFactoryNode.prototype.SetCustomChromaKeyThreshold;InterchangeTextureFactoryNode.prototype.SetCustomChromaKeyThreshold = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1245.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1246 = InterchangeTextureFactoryNode.prototype.SetCustomChromaKeyColor;InterchangeTextureFactoryNode.prototype.SetCustomChromaKeyColor = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1246.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1247 = InterchangeTextureFactoryNode.prototype.SetCustombUseLegacyGamma;InterchangeTextureFactoryNode.prototype.SetCustombUseLegacyGamma = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1247.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1248 = InterchangeTextureFactoryNode.prototype.SetCustombPreserveBorder;InterchangeTextureFactoryNode.prototype.SetCustombPreserveBorder = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1248.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1249 = InterchangeTextureFactoryNode.prototype.SetCustombFlipGreenChannel;InterchangeTextureFactoryNode.prototype.SetCustombFlipGreenChannel = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1249.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1250 = InterchangeTextureFactoryNode.prototype.SetCustombDoScaleMipsForAlphaCoverage;InterchangeTextureFactoryNode.prototype.SetCustombDoScaleMipsForAlphaCoverage = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1250.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1251 = InterchangeTextureFactoryNode.prototype.SetCustombChromaKeyTexture;InterchangeTextureFactoryNode.prototype.SetCustombChromaKeyTexture = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1251.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1252 = InterchangeTextureFactoryNode.prototype.SetCustomAlphaCoverageThresholds;InterchangeTextureFactoryNode.prototype.SetCustomAlphaCoverageThresholds = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1252.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1253 = InterchangeTextureFactoryNode.prototype.SetCustomAdjustVibrance;InterchangeTextureFactoryNode.prototype.SetCustomAdjustVibrance = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1253.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1254 = InterchangeTextureFactoryNode.prototype.SetCustomAdjustSaturation;InterchangeTextureFactoryNode.prototype.SetCustomAdjustSaturation = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1254.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1255 = InterchangeTextureFactoryNode.prototype.SetCustomAdjustRGBCurve;InterchangeTextureFactoryNode.prototype.SetCustomAdjustRGBCurve = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1255.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1256 = InterchangeTextureFactoryNode.prototype.SetCustomAdjustMinAlpha;InterchangeTextureFactoryNode.prototype.SetCustomAdjustMinAlpha = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1256.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1257 = InterchangeTextureFactoryNode.prototype.SetCustomAdjustMaxAlpha;InterchangeTextureFactoryNode.prototype.SetCustomAdjustMaxAlpha = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1257.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1258 = InterchangeTextureFactoryNode.prototype.SetCustomAdjustHue;InterchangeTextureFactoryNode.prototype.SetCustomAdjustHue = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1258.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1259 = InterchangeTextureFactoryNode.prototype.SetCustomAdjustBrightnessCurve;InterchangeTextureFactoryNode.prototype.SetCustomAdjustBrightnessCurve = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1259.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1260 = InterchangeTextureFactoryNode.prototype.SetCustomAdjustBrightness;InterchangeTextureFactoryNode.prototype.SetCustomAdjustBrightness = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1260.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1261 = InterchangeTexture2DArrayFactoryNode.prototype.SetCustomAddressZ;InterchangeTexture2DArrayFactoryNode.prototype.SetCustomAddressZ = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1261.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1262 = InterchangeTexture2DFactoryNode.prototype.SetCustomAddressY;InterchangeTexture2DFactoryNode.prototype.SetCustomAddressY = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1262.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1263 = InterchangeTexture2DFactoryNode.prototype.SetCustomAddressX;InterchangeTexture2DFactoryNode.prototype.SetCustomAddressX = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1263.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1264 = InterchangeTextureLightProfileFactoryNode.prototype.SetCustomTextureMultiplier;InterchangeTextureLightProfileFactoryNode.prototype.SetCustomTextureMultiplier = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1264.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1265 = InterchangeTextureLightProfileFactoryNode.prototype.SetCustomBrightness;InterchangeTextureLightProfileFactoryNode.prototype.SetCustomBrightness = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1265.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1266 = InterchangeMaterialFactoryNode.prototype.SetCustomTwoSided;InterchangeMaterialFactoryNode.prototype.SetCustomTwoSided = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1266.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1267 = InterchangeMaterialFactoryNode.prototype.SetCustomTranslucencyLightingMode;InterchangeMaterialFactoryNode.prototype.SetCustomTranslucencyLightingMode = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1267.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1268 = InterchangeMaterialFactoryNode.prototype.SetCustomShadingModel;InterchangeMaterialFactoryNode.prototype.SetCustomShadingModel = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1268.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1269 = InterchangeMaterialFactoryNode.prototype.SetCustomRefractionMethod;InterchangeMaterialFactoryNode.prototype.SetCustomRefractionMethod = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1269.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1270 = InterchangeMaterialFactoryNode.prototype.SetCustomOpacityMaskClipValue;InterchangeMaterialFactoryNode.prototype.SetCustomOpacityMaskClipValue = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1270.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1271 = InterchangeMaterialFactoryNode.prototype.SetCustomBlendMode;InterchangeMaterialFactoryNode.prototype.SetCustomBlendMode = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1271.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1272 = InterchangeMeshFactoryNode.prototype.SetCustomUseMikkTSpace;InterchangeMeshFactoryNode.prototype.SetCustomUseMikkTSpace = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1272.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1273 = InterchangeMeshFactoryNode.prototype.SetCustomUseHighPrecisionTangentBasis;InterchangeMeshFactoryNode.prototype.SetCustomUseHighPrecisionTangentBasis = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1273.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1274 = InterchangeMeshFactoryNode.prototype.SetCustomUseFullPrecisionUVs;InterchangeMeshFactoryNode.prototype.SetCustomUseFullPrecisionUVs = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1274.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1275 = InterchangeMeshFactoryNode.prototype.SetCustomUseBackwardsCompatibleF16TruncUVs;InterchangeMeshFactoryNode.prototype.SetCustomUseBackwardsCompatibleF16TruncUVs = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1275.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1276 = InterchangeMeshFactoryNode.prototype.SetCustomRemoveDegenerates;InterchangeMeshFactoryNode.prototype.SetCustomRemoveDegenerates = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1276.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1277 = InterchangeMeshFactoryNode.prototype.SetCustomRecomputeTangents;InterchangeMeshFactoryNode.prototype.SetCustomRecomputeTangents = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1277.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1278 = InterchangeMeshFactoryNode.prototype.SetCustomRecomputeNormals;InterchangeMeshFactoryNode.prototype.SetCustomRecomputeNormals = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1278.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1279 = InterchangeMeshFactoryNode.prototype.SetCustomLODGroup;InterchangeMeshFactoryNode.prototype.SetCustomLODGroup = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1279.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1280 = InterchangeMeshFactoryNode.prototype.SetCustomComputeWeightedNormals;InterchangeMeshFactoryNode.prototype.SetCustomComputeWeightedNormals = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1280.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1281 = InterchangeSkeletalMeshFactoryNode.prototype.SetCustomUseHighPrecisionSkinWeights;InterchangeSkeletalMeshFactoryNode.prototype.SetCustomUseHighPrecisionSkinWeights = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1281.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1282 = InterchangeSkeletalMeshFactoryNode.prototype.SetCustomThresholdUV;InterchangeSkeletalMeshFactoryNode.prototype.SetCustomThresholdUV = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1282.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1283 = InterchangeSkeletalMeshFactoryNode.prototype.SetCustomThresholdTangentNormal;InterchangeSkeletalMeshFactoryNode.prototype.SetCustomThresholdTangentNormal = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1283.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1284 = InterchangeSkeletalMeshFactoryNode.prototype.SetCustomThresholdPosition;InterchangeSkeletalMeshFactoryNode.prototype.SetCustomThresholdPosition = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1284.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1285 = InterchangeSkeletalMeshFactoryNode.prototype.SetCustomMorphThresholdPosition;InterchangeSkeletalMeshFactoryNode.prototype.SetCustomMorphThresholdPosition = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1285.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1286 = InterchangeSkeletalMeshFactoryNode.prototype.SetCustomBoneInfluenceLimit;InterchangeSkeletalMeshFactoryNode.prototype.SetCustomBoneInfluenceLimit = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1286.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1287 = InterchangeStaticMeshFactoryNode.prototype.SetCustomSupportFaceRemap;InterchangeStaticMeshFactoryNode.prototype.SetCustomSupportFaceRemap = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1287.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1288 = InterchangeStaticMeshFactoryNode.prototype.SetCustomSrcLightmapIndex;InterchangeStaticMeshFactoryNode.prototype.SetCustomSrcLightmapIndex = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1288.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1289 = InterchangeStaticMeshFactoryNode.prototype.SetCustomMinLightmapResolution;InterchangeStaticMeshFactoryNode.prototype.SetCustomMinLightmapResolution = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1289.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1290 = InterchangeStaticMeshFactoryNode.prototype.SetCustomMaxLumenMeshCards;InterchangeStaticMeshFactoryNode.prototype.SetCustomMaxLumenMeshCards = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1290.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1291 = InterchangeStaticMeshFactoryNode.prototype.SetCustomGenerateLightmapUVs;InterchangeStaticMeshFactoryNode.prototype.SetCustomGenerateLightmapUVs = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1291.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1292 = InterchangeStaticMeshFactoryNode.prototype.SetCustomGenerateDistanceFieldAsIfTwoSided;InterchangeStaticMeshFactoryNode.prototype.SetCustomGenerateDistanceFieldAsIfTwoSided = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1292.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1293 = InterchangeStaticMeshFactoryNode.prototype.SetCustomDstLightmapIndex;InterchangeStaticMeshFactoryNode.prototype.SetCustomDstLightmapIndex = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1293.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1294 = InterchangeStaticMeshFactoryNode.prototype.SetCustomDistanceFieldResolutionScale;InterchangeStaticMeshFactoryNode.prototype.SetCustomDistanceFieldResolutionScale = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1294.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1295 = InterchangeStaticMeshFactoryNode.prototype.SetCustomDistanceFieldReplacementMesh;InterchangeStaticMeshFactoryNode.prototype.SetCustomDistanceFieldReplacementMesh = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1295.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1296 = InterchangeStaticMeshFactoryNode.prototype.SetCustomBuildScale3D;InterchangeStaticMeshFactoryNode.prototype.SetCustomBuildScale3D = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1296.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1297 = InterchangeStaticMeshFactoryNode.prototype.SetCustomBuildReversedIndexBuffer;InterchangeStaticMeshFactoryNode.prototype.SetCustomBuildReversedIndexBuffer = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1297.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1298 = InterchangeStaticMeshFactoryNode.prototype.SetCustomBuildNanite;InterchangeStaticMeshFactoryNode.prototype.SetCustomBuildNanite = function (AttributeValue, bAddApplyDelegate = true) { return fnprepatch_1298.call(this, AttributeValue, bAddApplyDelegate) }; } catch (e) {};
try { let fnprepatch_1299 = TemplateSequenceActor.prototype.SetBinding;TemplateSequenceActor.prototype.SetBinding = function (Actor, bOverridesDefault = true) { return fnprepatch_1299.call(this, Actor, bOverridesDefault) }; } catch (e) {};
try { let fnprepatch_1300 = LegacyCameraShake.prototype.StartLegacyCameraShakeFromSource;LegacyCameraShake.prototype.StartLegacyCameraShakeFromSource = function (PlayerCameraManager, ShakeClass, SourceComponent, Scale = 1, PlaySpace = "CameraLocal", UserPlaySpaceRot) { return fnprepatch_1300.call(this, PlayerCameraManager, ShakeClass, SourceComponent, Scale, PlaySpace, UserPlaySpaceRot) }; } catch (e) {};
try { let fnprepatch_1301 = LegacyCameraShake.prototype.StartLegacyCameraShake;LegacyCameraShake.prototype.StartLegacyCameraShake = function (PlayerCameraManager, ShakeClass, Scale = 1, PlaySpace = "CameraLocal", UserPlaySpaceRot) { return fnprepatch_1301.call(this, PlayerCameraManager, ShakeClass, Scale, PlaySpace, UserPlaySpaceRot) }; } catch (e) {};
try { let fnprepatch_1302 = CameraAnimationCameraModifier.prototype.StopCameraAnimation;CameraAnimationCameraModifier.prototype.StopCameraAnimation = function (Handle, bImmediate = false) { return fnprepatch_1302.call(this, Handle, bImmediate) }; } catch (e) {};
try { let fnprepatch_1303 = CameraAnimationCameraModifier.prototype.StopAllCameraAnimationsOf;CameraAnimationCameraModifier.prototype.StopAllCameraAnimationsOf = function (Sequence, bImmediate = false) { return fnprepatch_1303.call(this, Sequence, bImmediate) }; } catch (e) {};
try { let fnprepatch_1304 = CameraAnimationCameraModifier.prototype.StopAllCameraAnimations;CameraAnimationCameraModifier.prototype.StopAllCameraAnimations = function (bImmediate = false) { return fnprepatch_1304.call(this, bImmediate) }; } catch (e) {};
try { let fnprepatch_1305 = GameplayCamerasSubsystem.prototype.StopCameraAnimation;GameplayCamerasSubsystem.prototype.StopCameraAnimation = function (PlayerController, Handle, bImmediate = false) { return fnprepatch_1305.call(this, PlayerController, Handle, bImmediate) }; } catch (e) {};
try { let fnprepatch_1306 = GameplayCamerasSubsystem.prototype.StopAllCameraAnimationsOf;GameplayCamerasSubsystem.prototype.StopAllCameraAnimationsOf = function (PlayerController, Sequence, bImmediate = false) { return fnprepatch_1306.call(this, PlayerController, Sequence, bImmediate) }; } catch (e) {};
try { let fnprepatch_1307 = GameplayCamerasSubsystem.prototype.StopAllCameraAnimations;GameplayCamerasSubsystem.prototype.StopAllCameraAnimations = function (PlayerController, bImmediate = false) { return fnprepatch_1307.call(this, PlayerController, bImmediate) }; } catch (e) {};
try { let fnprepatch_1308 = TakeMetaData.prototype.SetTakeNumber;TakeMetaData.prototype.SetTakeNumber = function (InTakeNumber, bEmitChanged = true) { return fnprepatch_1308.call(this, InTakeNumber, bEmitChanged) }; } catch (e) {};
try { let fnprepatch_1309 = TakeMetaData.prototype.SetSlate;TakeMetaData.prototype.SetSlate = function (InSlate, bEmitChanged = true) { return fnprepatch_1309.call(this, InSlate, bEmitChanged) }; } catch (e) {};
try { TakeRecorderSources.prototype.GetSources = TakeRecorderSources.prototype.GetSourcesCopy; } catch (e) {};
try { let fnprepatch_1310 = TakesCoreBlueprintLibrary.prototype.FindTakes;TakesCoreBlueprintLibrary.prototype.FindTakes = function (Slate, TakeNumber = 0) { return fnprepatch_1310.call(this, Slate, TakeNumber) }; } catch (e) {};
try { TakeRecorderPanel.prototype.SetMode = TakeRecorderPanel.prototype.SetupForViewing; } catch (e) {};
try { TakeRecorderPanel.prototype.SetMode = TakeRecorderPanel.prototype.SetupForRecordingInto_LevelSequence; } catch (e) {};
try { TakeRecorderPanel.prototype.SetMode = TakeRecorderPanel.prototype.SetupForRecording_TakePreset; } catch (e) {};
try { TakeRecorderPanel.prototype.SetMode = TakeRecorderPanel.prototype.SetupForRecording_LevelSequence; } catch (e) {};
try { TakeRecorderPanel.prototype.SetMode = TakeRecorderPanel.prototype.SetupForEditing; } catch (e) {};
try { let fnprepatch_1311 = PyTestObject.prototype.FuncTakingPyTestStructDefault;PyTestObject.prototype.FuncTakingPyTestStructDefault = function (InStruct = {"Bool":false,"Int":0,"Float":0,"Enum":"One","String":"","Name":"None","Text":"EmptyString","FieldPath":"<Unsupported type>","StructFieldPath":"<Unsupported type>","StringArray":[],"StringSet":[],"StringIntMap":{},"LegacyInt":0,"BoolInstanceOnly":false,"BoolDefaultsOnly":false,"BoolMutable":false}) { return fnprepatch_1311.call(this, InStruct) }; } catch (e) {};
try { let fnprepatch_1312 = PyTestTypeHint.prototype.CheckTextTypeHints;PyTestTypeHint.prototype.CheckTextTypeHints = function (Param1, Param2 = "Hi") { return fnprepatch_1312.call(this, Param1, Param2) }; } catch (e) {};
try { let fnprepatch_1313 = PyTestTypeHint.prototype.CheckStructTypeHints;PyTestTypeHint.prototype.CheckStructTypeHints = function (Param1, Param2 = {"Bool":false,"Int":0,"Float":0,"Enum":"One","String":"","Name":"None","Text":"EmptyString","FieldPath":"<Unsupported type>","StructFieldPath":"<Unsupported type>","StringArray":[],"StringSet":[],"StringIntMap":{},"LegacyInt":0,"BoolInstanceOnly":false,"BoolDefaultsOnly":false,"BoolMutable":false}) { return fnprepatch_1313.call(this, Param1, Param2) }; } catch (e) {};
try { let fnprepatch_1314 = PyTestTypeHint.prototype.CheckStringTypeHints;PyTestTypeHint.prototype.CheckStringTypeHints = function (Param1, Param2 = "Hi") { return fnprepatch_1314.call(this, Param1, Param2) }; } catch (e) {};
try { let fnprepatch_1315 = PyTestTypeHint.prototype.CheckObjectTypeHints;PyTestTypeHint.prototype.CheckObjectTypeHints = function (Param1, Param4 = undefined) { return fnprepatch_1315.call(this, Param1, Param4) }; } catch (e) {};
try { let fnprepatch_1316 = PyTestTypeHint.prototype.CheckNameTypeHints;PyTestTypeHint.prototype.CheckNameTypeHints = function (Param1, Param2 = "Hi") { return fnprepatch_1316.call(this, Param1, Param2) }; } catch (e) {};
try { let fnprepatch_1317 = PyTestTypeHint.prototype.CheckIntegerTypeHints;PyTestTypeHint.prototype.CheckIntegerTypeHints = function (Param1, Param2 = 4, Param3 = 5) { return fnprepatch_1317.call(this, Param1, Param2, Param3) }; } catch (e) {};
try { let fnprepatch_1318 = PyTestTypeHint.prototype.CheckFloatTypeHints;PyTestTypeHint.prototype.CheckFloatTypeHints = function (Param1, Param2, Param3 = -3.299999952316284, Param4 = 4.4) { return fnprepatch_1318.call(this, Param1, Param2, Param3, Param4) }; } catch (e) {};
try { let fnprepatch_1319 = PyTestTypeHint.prototype.CheckEnumTypeHints;PyTestTypeHint.prototype.CheckEnumTypeHints = function (Param1, Param2 = "One") { return fnprepatch_1319.call(this, Param1, Param2) }; } catch (e) {};
try { let fnprepatch_1320 = PyTestTypeHint.prototype.CheckBoolTypeHints;PyTestTypeHint.prototype.CheckBoolTypeHints = function (bParam1, bParam2 = true, bParam3 = false) { return fnprepatch_1320.call(this, bParam1, bParam2, bParam3) }; } catch (e) {};
try { let fnprepatch_1321 = PythonScriptLibrary.prototype.ExecutePythonCommandEx;PythonScriptLibrary.prototype.ExecutePythonCommandEx = function (PythonCommand, CommandResult, LogOutput, ExecutionMode = "ExecuteFile", FileExecutionScope = "Private") { return fnprepatch_1321.call(this, PythonCommand, CommandResult, LogOutput, ExecutionMode, FileExecutionScope) }; } catch (e) {};
try { PythonScriptLibrary.prototype.ExecutePythonCommand = PythonScriptLibrary.prototype.ExecutePythonCommandEx; } catch (e) {};
try { PythonScriptLibrary.ExecutePythonCommand = PythonScriptLibrary.ExecutePythonCommandEx; } catch (e) {};
try { let fnprepatch_1322 = PaperFlipbook.prototype.GetSpriteAtTime;PaperFlipbook.prototype.GetSpriteAtTime = function (Time, bClampToEnds = false) { return fnprepatch_1322.call(this, Time, bClampToEnds) }; } catch (e) {};
try { let fnprepatch_1323 = PaperFlipbook.prototype.GetKeyFrameIndexAtTime;PaperFlipbook.prototype.GetKeyFrameIndexAtTime = function (Time, bClampToEnds = false) { return fnprepatch_1323.call(this, Time, bClampToEnds) }; } catch (e) {};
try { let fnprepatch_1324 = PaperGroupedSpriteComponent.prototype.UpdateInstanceTransform;PaperGroupedSpriteComponent.prototype.UpdateInstanceTransform = function (InstanceIndex, NewInstanceTransform, bWorldSpace = false, bMarkRenderStateDirty = true, bTeleport = false) { return fnprepatch_1324.call(this, InstanceIndex, NewInstanceTransform, bWorldSpace, bMarkRenderStateDirty, bTeleport) }; } catch (e) {};
try { let fnprepatch_1325 = PaperGroupedSpriteComponent.prototype.UpdateInstanceColor;PaperGroupedSpriteComponent.prototype.UpdateInstanceColor = function (InstanceIndex, NewInstanceColor, bMarkRenderStateDirty = true) { return fnprepatch_1325.call(this, InstanceIndex, NewInstanceColor, bMarkRenderStateDirty) }; } catch (e) {};
try { let fnprepatch_1326 = PaperGroupedSpriteComponent.prototype.GetInstanceTransform;PaperGroupedSpriteComponent.prototype.GetInstanceTransform = function (InstanceIndex, OutInstanceTransform, bWorldSpace = false) { return fnprepatch_1326.call(this, InstanceIndex, OutInstanceTransform, bWorldSpace) }; } catch (e) {};
try { let fnprepatch_1327 = PaperGroupedSpriteComponent.prototype.AddInstance;PaperGroupedSpriteComponent.prototype.AddInstance = function (Transform, Sprite, bWorldSpace = false, Color = {"R":1,"G":1,"B":1,"A":1}) { return fnprepatch_1327.call(this, Transform, Sprite, bWorldSpace, Color) }; } catch (e) {};
try { let fnprepatch_1328 = PaperTileMapComponent.prototype.SetLayerColor;PaperTileMapComponent.prototype.SetLayerColor = function (NewColor, Layer = 0) { return fnprepatch_1328.call(this, NewColor, Layer) }; } catch (e) {};
try { let fnprepatch_1329 = PaperTileMapComponent.prototype.SetLayerCollision;PaperTileMapComponent.prototype.SetLayerCollision = function (Layer = 0, bHasCollision = true, bOverrideThickness = true, CustomThickness = 50, bOverrideOffset = false, CustomOffset = 0, bRebuildCollision = true) { return fnprepatch_1329.call(this, Layer, bHasCollision, bOverrideThickness, CustomThickness, bOverrideOffset, CustomOffset, bRebuildCollision) }; } catch (e) {};
try { let fnprepatch_1330 = PaperTileMapComponent.prototype.SetDefaultCollisionThickness;PaperTileMapComponent.prototype.SetDefaultCollisionThickness = function (Thickness, bRebuildCollision = true) { return fnprepatch_1330.call(this, Thickness, bRebuildCollision) }; } catch (e) {};
try { let fnprepatch_1331 = PaperTileMapComponent.prototype.GetTilePolygon;PaperTileMapComponent.prototype.GetTilePolygon = function (TileX, TileY, Points, LayerIndex = 0, bWorldSpace = false) { return fnprepatch_1331.call(this, TileX, TileY, Points, LayerIndex, bWorldSpace) }; } catch (e) {};
try { let fnprepatch_1332 = PaperTileMapComponent.prototype.GetTileCornerPosition;PaperTileMapComponent.prototype.GetTileCornerPosition = function (TileX, TileY, LayerIndex = 0, bWorldSpace = false) { return fnprepatch_1332.call(this, TileX, TileY, LayerIndex, bWorldSpace) }; } catch (e) {};
try { let fnprepatch_1333 = PaperTileMapComponent.prototype.GetTileCenterPosition;PaperTileMapComponent.prototype.GetTileCenterPosition = function (TileX, TileY, LayerIndex = 0, bWorldSpace = false) { return fnprepatch_1333.call(this, TileX, TileY, LayerIndex, bWorldSpace) }; } catch (e) {};
try { let fnprepatch_1334 = PaperTileMapComponent.prototype.GetLayerColor;PaperTileMapComponent.prototype.GetLayerColor = function (Layer = 0) { return fnprepatch_1334.call(this, Layer) }; } catch (e) {};
try { let fnprepatch_1335 = PaperTileMapComponent.prototype.CreateNewTileMap;PaperTileMapComponent.prototype.CreateNewTileMap = function (MapWidth = 4, MapHeight = 4, TileWidth = 32, TileHeight = 32, PixelsPerUnrealUnit = 1, bCreateLayer = true) { return fnprepatch_1335.call(this, MapWidth, MapHeight, TileWidth, TileHeight, PixelsPerUnrealUnit, bCreateLayer) }; } catch (e) {};
try { let fnprepatch_1336 = AsyncImageExport.prototype.ExportImageAsync;AsyncImageExport.prototype.ExportImageAsync = function (Texture, OutputFile, Quality = 100) { return fnprepatch_1336.call(this, Texture, OutputFile, Quality) }; } catch (e) {};
try { let fnprepatch_1337 = AsyncRegisterAndExecuteTask.prototype.RegisterAndExecuteTask;AsyncRegisterAndExecuteTask.prototype.RegisterAndExecuteTask = function (Task, OptionalParentTask = undefined) { return fnprepatch_1337.call(this, Task, OptionalParentTask) }; } catch (e) {};
try { let fnprepatch_1338 = AsyncEditorDelay.prototype.AsyncEditorDelay;AsyncEditorDelay.prototype.AsyncEditorDelay = function (Seconds, MinimumFrames = 30) { return fnprepatch_1338.call(this, Seconds, MinimumFrames) }; } catch (e) {};
try { let fnprepatch_1339 = AsyncEditorWaitForGameWorld.prototype.AsyncWaitForGameWorld;AsyncEditorWaitForGameWorld.prototype.AsyncWaitForGameWorld = function (Index = 0, Server = false) { return fnprepatch_1339.call(this, Index, Server) }; } catch (e) {};
try { let fnprepatch_1340 = EditorUtilitySubsystem.prototype.RegisterAndExecuteTask;EditorUtilitySubsystem.prototype.RegisterAndExecuteTask = function (NewTask, OptionalParentTask = undefined) { return fnprepatch_1340.call(this, NewTask, OptionalParentTask) }; } catch (e) {};
try { EditorUtilityTask.prototype.CancelRequested = EditorUtilityTask.prototype.ReceiveCancelRequested; } catch (e) {};
try { EditorUtilityTask.prototype.BeginExecution = EditorUtilityTask.prototype.ReceiveBeginExecution; } catch (e) {};
try { let fnprepatch_1341 = EditorValidatorSubsystem.prototype.ValidateAssets;EditorValidatorSubsystem.prototype.ValidateAssets = function (AssetDataList, bSkipExcludedDirectories = true, bShowIfNoFailures = true) { return fnprepatch_1341.call(this, AssetDataList, bSkipExcludedDirectories, bShowIfNoFailures) }; } catch (e) {};
try { let fnprepatch_1342 = NiagaraDataChannelWriter.prototype.InitWrite;NiagaraDataChannelWriter.prototype.InitWrite = function (SearchParams, Count, bVisibleToGame = true, bVisibleToCPU = true, bVisibleToGPU = true) { return fnprepatch_1342.call(this, SearchParams, Count, bVisibleToGame, bVisibleToCPU, bVisibleToGPU) }; } catch (e) {};
try { let fnprepatch_1343 = NiagaraComponent.prototype.SetSimCache;NiagaraComponent.prototype.SetSimCache = function (SimCache, bResetSystem = false) { return fnprepatch_1343.call(this, SimCache, bResetSystem) }; } catch (e) {};
try { let fnprepatch_1344 = NiagaraComponent.prototype.SetCustomTimeDilation;NiagaraComponent.prototype.SetCustomTimeDilation = function (Dilation = 1) { return fnprepatch_1344.call(this, Dilation) }; } catch (e) {};
try { let fnprepatch_1345 = NiagaraComponent.prototype.SetAsset;NiagaraComponent.prototype.SetAsset = function (InAsset, bResetExistingOverrideParameters = true) { return fnprepatch_1345.call(this, InAsset, bResetExistingOverrideParameters) }; } catch (e) {};
try { let fnprepatch_1346 = NiagaraComponent.prototype.ClearSimCache;NiagaraComponent.prototype.ClearSimCache = function (bResetSystem = false) { return fnprepatch_1346.call(this, bResetSystem) }; } catch (e) {};
try { NiagaraComponent.prototype.SetNiagaraSkeletalMeshComponent = NiagaraComponent.prototype.OverrideSystemUserVariableSkeletalMeshComponent; } catch (e) {};
try { NiagaraComponent.prototype.SetNiagaraStaticMeshDirectly = NiagaraComponent.prototype.OverrideSystemUserVariableStaticMesh; } catch (e) {};
try { NiagaraComponent.prototype.SetNiagaraStaticMeshComponent = NiagaraComponent.prototype.OverrideSystemUserVariableStaticMeshComponent; } catch (e) {};
try { NiagaraComponent.prototype.NiagaraSetSourceActors = NiagaraComponent.prototype.SetSourceActors; } catch (e) {};
try { NiagaraComponent.prototype.NiagaraGetBoolArray = NiagaraComponent.prototype.GetNiagaraArrayBool; } catch (e) {};
try { NiagaraComponent.prototype.NiagaraGetBoolArrayValue = NiagaraComponent.prototype.GetNiagaraArrayBoolValue; } catch (e) {};
try { NiagaraComponent.prototype.NiagaraGetColorArray = NiagaraComponent.prototype.GetNiagaraArrayColor; } catch (e) {};
try { NiagaraComponent.prototype.NiagaraGetColorArrayValue = NiagaraComponent.prototype.GetNiagaraArrayColorValue; } catch (e) {};
try { NiagaraComponent.prototype.NiagaraGetFloatArray = NiagaraComponent.prototype.GetNiagaraArrayFloat; } catch (e) {};
try { NiagaraComponent.prototype.NiagaraGetFloatArrayValue = NiagaraComponent.prototype.GetNiagaraArrayFloatValue; } catch (e) {};
try { NiagaraComponent.prototype.NiagaraGetInt32Array = NiagaraComponent.prototype.GetNiagaraArrayInt32; } catch (e) {};
try { NiagaraComponent.prototype.NiagaraGetInt32ArrayValue = NiagaraComponent.prototype.GetNiagaraArrayInt32Value; } catch (e) {};
try { NiagaraComponent.prototype.NiagaraGetMatrixArray = NiagaraComponent.prototype.GetNiagaraArrayMatrix; } catch (e) {};
try { NiagaraComponent.prototype.NiagaraGetMatrixArrayValue = NiagaraComponent.prototype.GetNiagaraArrayMatrixValue; } catch (e) {};
try { NiagaraComponent.prototype.NiagaraGetPositionArray = NiagaraComponent.prototype.GetNiagaraArrayPosition; } catch (e) {};
try { NiagaraComponent.prototype.NiagaraGetPositionArrayValue = NiagaraComponent.prototype.GetNiagaraArrayPositionValue; } catch (e) {};
try { NiagaraComponent.prototype.NiagaraGetQuaternionArray = NiagaraComponent.prototype.GetNiagaraArrayQuat; } catch (e) {};
try { NiagaraComponent.prototype.NiagaraGetQuaternionArrayValue = NiagaraComponent.prototype.GetNiagaraArrayQuatValue; } catch (e) {};
try { NiagaraComponent.prototype.NiagaraGetUInt8Array = NiagaraComponent.prototype.GetNiagaraArrayUInt8; } catch (e) {};
try { NiagaraComponent.prototype.NiagaraGetUInt8ArrayValue = NiagaraComponent.prototype.GetNiagaraArrayUInt8Value; } catch (e) {};
try { NiagaraComponent.prototype.NiagaraGetVectorArray = NiagaraComponent.prototype.GetNiagaraArrayVector; } catch (e) {};
try { NiagaraComponent.prototype.NiagaraGetVector2DArray = NiagaraComponent.prototype.GetNiagaraArrayVector2D; } catch (e) {};
try { NiagaraComponent.prototype.NiagaraGetVector2DArrayValue = NiagaraComponent.prototype.GetNiagaraArrayVector2DValue; } catch (e) {};
try { NiagaraComponent.prototype.NiagaraGetVector4Array = NiagaraComponent.prototype.GetNiagaraArrayVector4; } catch (e) {};
try { NiagaraComponent.prototype.NiagaraGetVector4ArrayValue = NiagaraComponent.prototype.GetNiagaraArrayVector4Value; } catch (e) {};
try { NiagaraComponent.prototype.NiagaraGetVectorArrayValue = NiagaraComponent.prototype.GetNiagaraArrayVectorValue; } catch (e) {};
try { NiagaraComponent.prototype.NiagaraSetBoolArray = NiagaraComponent.prototype.SetNiagaraArrayBool; } catch (e) {};
try { NiagaraComponent.prototype.NiagaraSetBoolArrayValue = NiagaraComponent.prototype.SetNiagaraArrayBoolValue; } catch (e) {};
try { NiagaraComponent.prototype.NiagaraSetColorArray = NiagaraComponent.prototype.SetNiagaraArrayColor; } catch (e) {};
try { NiagaraComponent.prototype.NiagaraSetColorArrayValue = NiagaraComponent.prototype.SetNiagaraArrayColorValue; } catch (e) {};
try { NiagaraComponent.prototype.NiagaraSetFloatArray = NiagaraComponent.prototype.SetNiagaraArrayFloat; } catch (e) {};
try { NiagaraComponent.prototype.NiagaraSetFloatArrayValue = NiagaraComponent.prototype.SetNiagaraArrayFloatValue; } catch (e) {};
try { NiagaraComponent.prototype.NiagaraSetInt32Array = NiagaraComponent.prototype.SetNiagaraArrayInt32; } catch (e) {};
try { NiagaraComponent.prototype.NiagaraSetInt32ArrayValue = NiagaraComponent.prototype.SetNiagaraArrayInt32Value; } catch (e) {};
try { NiagaraComponent.prototype.NiagaraSetMatrixArray = NiagaraComponent.prototype.SetNiagaraArrayMatrix; } catch (e) {};
try { NiagaraComponent.prototype.NiagaraSetMatrixArrayValue = NiagaraComponent.prototype.SetNiagaraArrayMatrixValue; } catch (e) {};
try { NiagaraComponent.prototype.NiagaraSetPositionArray = NiagaraComponent.prototype.SetNiagaraArrayPosition; } catch (e) {};
try { NiagaraComponent.prototype.NiagaraSetPositionArrayValue = NiagaraComponent.prototype.SetNiagaraArrayPositionValue; } catch (e) {};
try { NiagaraComponent.prototype.NiagaraSetQuaternionArray = NiagaraComponent.prototype.SetNiagaraArrayQuat; } catch (e) {};
try { NiagaraComponent.prototype.NiagaraSetQuaternionArrayValue = NiagaraComponent.prototype.SetNiagaraArrayQuatValue; } catch (e) {};
try { NiagaraComponent.prototype.NiagaraSetUInt8Array = NiagaraComponent.prototype.SetNiagaraArrayUInt8; } catch (e) {};
try { NiagaraComponent.prototype.NiagaraSetUInt8ArrayValue = NiagaraComponent.prototype.SetNiagaraArrayUInt8Value; } catch (e) {};
try { NiagaraComponent.prototype.NiagaraSetVectorArray = NiagaraComponent.prototype.SetNiagaraArrayVector; } catch (e) {};
try { NiagaraComponent.prototype.NiagaraSetVector2DArray = NiagaraComponent.prototype.SetNiagaraArrayVector2D; } catch (e) {};
try { NiagaraComponent.prototype.NiagaraSetVector2DArrayValue = NiagaraComponent.prototype.SetNiagaraArrayVector2DValue; } catch (e) {};
try { NiagaraComponent.prototype.NiagaraSetVector4Array = NiagaraComponent.prototype.SetNiagaraArrayVector4; } catch (e) {};
try { NiagaraComponent.prototype.NiagaraSetVector4ArrayValue = NiagaraComponent.prototype.SetNiagaraArrayVector4Value; } catch (e) {};
try { NiagaraComponent.prototype.NiagaraSetVectorArrayValue = NiagaraComponent.prototype.SetNiagaraArrayVectorValue; } catch (e) {};
try { NiagaraComponent.prototype.SetNiagaraVariable = NiagaraComponent.prototype.SetVariableVec4; } catch (e) {};
try { NiagaraComponent.prototype.SetNiagaraVariable = NiagaraComponent.prototype.SetVariableVec3; } catch (e) {};
try { NiagaraComponent.prototype.SetNiagaraVariable = NiagaraComponent.prototype.SetVariableVec2; } catch (e) {};
try { NiagaraComponent.prototype.SetNiagaraVariable = NiagaraComponent.prototype.SetVariableTextureRenderTarget; } catch (e) {};
try { NiagaraComponent.prototype.SetNiagaraVariable = NiagaraComponent.prototype.SetVariableTexture; } catch (e) {};
try { NiagaraComponent.prototype.SetNiagaraVariable = NiagaraComponent.prototype.SetVariableStaticMesh; } catch (e) {};
try { NiagaraComponent.prototype.SetNiagaraVariable = NiagaraComponent.prototype.SetVariableQuat; } catch (e) {};
try { NiagaraComponent.prototype.SetNiagaraVariable = NiagaraComponent.prototype.SetVariablePosition; } catch (e) {};
try { NiagaraComponent.prototype.SetNiagaraVariable = NiagaraComponent.prototype.SetVariableObject; } catch (e) {};
try { NiagaraComponent.prototype.SetNiagaraVariable = NiagaraComponent.prototype.SetVariableMatrix; } catch (e) {};
try { NiagaraComponent.prototype.SetNiagaraVariable = NiagaraComponent.prototype.SetVariableMaterial; } catch (e) {};
try { NiagaraComponent.prototype.SetNiagaraVariable = NiagaraComponent.prototype.SetVariableLinearColor; } catch (e) {};
try { NiagaraComponent.prototype.SetNiagaraVariable = NiagaraComponent.prototype.SetVariableInt; } catch (e) {};
try { NiagaraComponent.prototype.SetNiagaraVariable = NiagaraComponent.prototype.SetVariableFloat; } catch (e) {};
try { NiagaraComponent.prototype.SetNiagaraVariable = NiagaraComponent.prototype.SetVariableBool; } catch (e) {};
try { NiagaraComponent.prototype.SetNiagaraVariable = NiagaraComponent.prototype.SetVariableActor; } catch (e) {};
try { NiagaraComponent.prototype.SetDesiredAgeSeekDelta = NiagaraComponent.prototype.SetSeekDelta; } catch (e) {};
try { NiagaraComponent.prototype.SetNiagaraVariableByString = NiagaraComponent.prototype.SetNiagaraVariableVec4; } catch (e) {};
try { NiagaraComponent.prototype.SetNiagaraVariableByString = NiagaraComponent.prototype.SetNiagaraVariableVec3; } catch (e) {};
try { NiagaraComponent.prototype.SetNiagaraVariableByString = NiagaraComponent.prototype.SetNiagaraVariableVec2; } catch (e) {};
try { NiagaraComponent.prototype.SetNiagaraVariableByString = NiagaraComponent.prototype.SetNiagaraVariableQuat; } catch (e) {};
try { NiagaraComponent.prototype.SetNiagaraVariableByString = NiagaraComponent.prototype.SetNiagaraVariablePosition; } catch (e) {};
try { NiagaraComponent.prototype.SetNiagaraVariableByString = NiagaraComponent.prototype.SetNiagaraVariableObject; } catch (e) {};
try { NiagaraComponent.prototype.SetNiagaraVariableByString = NiagaraComponent.prototype.SetNiagaraVariableMatrix; } catch (e) {};
try { NiagaraComponent.prototype.SetNiagaraVariableByString = NiagaraComponent.prototype.SetNiagaraVariableLinearColor; } catch (e) {};
try { NiagaraComponent.prototype.SetNiagaraVariableByString = NiagaraComponent.prototype.SetNiagaraVariableInt; } catch (e) {};
try { NiagaraComponent.prototype.SetNiagaraVariableByString = NiagaraComponent.prototype.SetNiagaraVariableFloat; } catch (e) {};
try { NiagaraComponent.prototype.SetNiagaraVariableByString = NiagaraComponent.prototype.SetNiagaraVariableBool; } catch (e) {};
try { NiagaraComponent.prototype.SetNiagaraVariableByString = NiagaraComponent.prototype.SetNiagaraVariableActor; } catch (e) {};
try { NiagaraComponent.prototype.SetMaxDesiredAgeTickDelta = NiagaraComponent.prototype.SetMaxSimTime; } catch (e) {};
try { NiagaraComponent.prototype.SetForcedSoloMode = NiagaraComponent.prototype.SetForceSolo; } catch (e) {};
try { NiagaraComponent.prototype.SetNiagaraSystemAsset = NiagaraComponent.prototype.SetAsset; } catch (e) {};
try { NiagaraComponent.prototype.GetDesiredAgeSeekDelta = NiagaraComponent.prototype.GetSeekDelta; } catch (e) {};
try { NiagaraComponent.prototype.GetNiagaraEmitterVec3Attrib = NiagaraComponent.prototype.GetNiagaraParticleValueVec3_DebugOnly; } catch (e) {};
try { NiagaraComponent.prototype.GetNiagaraEmitterFloatAttrib = NiagaraComponent.prototype.GetNiagaraParticleValues_DebugOnly; } catch (e) {};
try { NiagaraComponent.prototype.GetNiagaraEmitterPositions = NiagaraComponent.prototype.GetNiagaraParticlePositions_DebugOnly; } catch (e) {};
try { NiagaraComponent.prototype.GetMaxDesiredAgeTickDelta = NiagaraComponent.prototype.GetMaxSimTime; } catch (e) {};
try { NiagaraComponent.prototype.IsInForcedSoloMode = NiagaraComponent.prototype.GetForceSolo; } catch (e) {};
try { NiagaraComponent.prototype.GetNiagaraSystemAsset = NiagaraComponent.prototype.GetAsset; } catch (e) {};
try { let fnprepatch_1347 = NiagaraDataInterfaceArrayFunctionLibrary.prototype.SetNiagaraArrayMatrixValue;NiagaraDataInterfaceArrayFunctionLibrary.prototype.SetNiagaraArrayMatrixValue = function (NiagaraSystem, OverrideName, Index, Value, bSizeToFit, bApplyLWCRebase = true) { return fnprepatch_1347.call(this, NiagaraSystem, OverrideName, Index, Value, bSizeToFit, bApplyLWCRebase) }; } catch (e) {};
try { let fnprepatch_1348 = NiagaraDataInterfaceArrayFunctionLibrary.prototype.SetNiagaraArrayMatrix;NiagaraDataInterfaceArrayFunctionLibrary.prototype.SetNiagaraArrayMatrix = function (NiagaraSystem, OverrideName, ArrayData, bApplyLWCRebase = true) { return fnprepatch_1348.call(this, NiagaraSystem, OverrideName, ArrayData, bApplyLWCRebase) }; } catch (e) {};
try { let fnprepatch_1349 = NiagaraDataInterfaceArrayFunctionLibrary.prototype.GetNiagaraArrayMatrixValue;NiagaraDataInterfaceArrayFunctionLibrary.prototype.GetNiagaraArrayMatrixValue = function (NiagaraSystem, OverrideName, Index, bApplyLWCRebase = true) { return fnprepatch_1349.call(this, NiagaraSystem, OverrideName, Index, bApplyLWCRebase) }; } catch (e) {};
try { let fnprepatch_1350 = NiagaraDataInterfaceArrayFunctionLibrary.prototype.GetNiagaraArrayMatrix;NiagaraDataInterfaceArrayFunctionLibrary.prototype.GetNiagaraArrayMatrix = function (NiagaraSystem, OverrideName, bApplyLWCRebase = true) { return fnprepatch_1350.call(this, NiagaraSystem, OverrideName, bApplyLWCRebase) }; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.prototype.NiagaraSetVectorArrayValue = NiagaraDataInterfaceArrayFunctionLibrary.prototype.SetNiagaraArrayVectorValue; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.NiagaraSetVectorArrayValue = NiagaraDataInterfaceArrayFunctionLibrary.SetNiagaraArrayVectorValue; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.prototype.NiagaraSetVector4ArrayValue = NiagaraDataInterfaceArrayFunctionLibrary.prototype.SetNiagaraArrayVector4Value; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.NiagaraSetVector4ArrayValue = NiagaraDataInterfaceArrayFunctionLibrary.SetNiagaraArrayVector4Value; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.prototype.NiagaraSetVector4Array = NiagaraDataInterfaceArrayFunctionLibrary.prototype.SetNiagaraArrayVector4; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.NiagaraSetVector4Array = NiagaraDataInterfaceArrayFunctionLibrary.SetNiagaraArrayVector4; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.prototype.NiagaraSetVector2DArrayValue = NiagaraDataInterfaceArrayFunctionLibrary.prototype.SetNiagaraArrayVector2DValue; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.NiagaraSetVector2DArrayValue = NiagaraDataInterfaceArrayFunctionLibrary.SetNiagaraArrayVector2DValue; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.prototype.NiagaraSetVector2DArray = NiagaraDataInterfaceArrayFunctionLibrary.prototype.SetNiagaraArrayVector2D; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.NiagaraSetVector2DArray = NiagaraDataInterfaceArrayFunctionLibrary.SetNiagaraArrayVector2D; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.prototype.NiagaraSetVectorArray = NiagaraDataInterfaceArrayFunctionLibrary.prototype.SetNiagaraArrayVector; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.NiagaraSetVectorArray = NiagaraDataInterfaceArrayFunctionLibrary.SetNiagaraArrayVector; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.prototype.NiagaraSetUInt8ArrayValue = NiagaraDataInterfaceArrayFunctionLibrary.prototype.SetNiagaraArrayUInt8Value; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.NiagaraSetUInt8ArrayValue = NiagaraDataInterfaceArrayFunctionLibrary.SetNiagaraArrayUInt8Value; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.prototype.NiagaraSetUInt8Array = NiagaraDataInterfaceArrayFunctionLibrary.prototype.SetNiagaraArrayUInt8; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.NiagaraSetUInt8Array = NiagaraDataInterfaceArrayFunctionLibrary.SetNiagaraArrayUInt8; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.prototype.NiagaraSetQuaternionArrayValue = NiagaraDataInterfaceArrayFunctionLibrary.prototype.SetNiagaraArrayQuatValue; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.NiagaraSetQuaternionArrayValue = NiagaraDataInterfaceArrayFunctionLibrary.SetNiagaraArrayQuatValue; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.prototype.NiagaraSetQuaternionArray = NiagaraDataInterfaceArrayFunctionLibrary.prototype.SetNiagaraArrayQuat; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.NiagaraSetQuaternionArray = NiagaraDataInterfaceArrayFunctionLibrary.SetNiagaraArrayQuat; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.prototype.NiagaraSetPositionArrayValue = NiagaraDataInterfaceArrayFunctionLibrary.prototype.SetNiagaraArrayPositionValue; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.NiagaraSetPositionArrayValue = NiagaraDataInterfaceArrayFunctionLibrary.SetNiagaraArrayPositionValue; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.prototype.NiagaraSetPositionArray = NiagaraDataInterfaceArrayFunctionLibrary.prototype.SetNiagaraArrayPosition; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.NiagaraSetPositionArray = NiagaraDataInterfaceArrayFunctionLibrary.SetNiagaraArrayPosition; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.prototype.NiagaraSetMatrixArrayValue = NiagaraDataInterfaceArrayFunctionLibrary.prototype.SetNiagaraArrayMatrixValue; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.NiagaraSetMatrixArrayValue = NiagaraDataInterfaceArrayFunctionLibrary.SetNiagaraArrayMatrixValue; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.prototype.NiagaraSetMatrixArray = NiagaraDataInterfaceArrayFunctionLibrary.prototype.SetNiagaraArrayMatrix; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.NiagaraSetMatrixArray = NiagaraDataInterfaceArrayFunctionLibrary.SetNiagaraArrayMatrix; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.prototype.NiagaraSetInt32ArrayValue = NiagaraDataInterfaceArrayFunctionLibrary.prototype.SetNiagaraArrayInt32Value; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.NiagaraSetInt32ArrayValue = NiagaraDataInterfaceArrayFunctionLibrary.SetNiagaraArrayInt32Value; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.prototype.NiagaraSetInt32Array = NiagaraDataInterfaceArrayFunctionLibrary.prototype.SetNiagaraArrayInt32; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.NiagaraSetInt32Array = NiagaraDataInterfaceArrayFunctionLibrary.SetNiagaraArrayInt32; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.prototype.NiagaraSetFloatArrayValue = NiagaraDataInterfaceArrayFunctionLibrary.prototype.SetNiagaraArrayFloatValue; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.NiagaraSetFloatArrayValue = NiagaraDataInterfaceArrayFunctionLibrary.SetNiagaraArrayFloatValue; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.prototype.NiagaraSetFloatArray = NiagaraDataInterfaceArrayFunctionLibrary.prototype.SetNiagaraArrayFloat; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.NiagaraSetFloatArray = NiagaraDataInterfaceArrayFunctionLibrary.SetNiagaraArrayFloat; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.prototype.NiagaraSetColorArrayValue = NiagaraDataInterfaceArrayFunctionLibrary.prototype.SetNiagaraArrayColorValue; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.NiagaraSetColorArrayValue = NiagaraDataInterfaceArrayFunctionLibrary.SetNiagaraArrayColorValue; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.prototype.NiagaraSetColorArray = NiagaraDataInterfaceArrayFunctionLibrary.prototype.SetNiagaraArrayColor; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.NiagaraSetColorArray = NiagaraDataInterfaceArrayFunctionLibrary.SetNiagaraArrayColor; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.prototype.NiagaraSetBoolArrayValue = NiagaraDataInterfaceArrayFunctionLibrary.prototype.SetNiagaraArrayBoolValue; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.NiagaraSetBoolArrayValue = NiagaraDataInterfaceArrayFunctionLibrary.SetNiagaraArrayBoolValue; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.prototype.NiagaraSetBoolArray = NiagaraDataInterfaceArrayFunctionLibrary.prototype.SetNiagaraArrayBool; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.NiagaraSetBoolArray = NiagaraDataInterfaceArrayFunctionLibrary.SetNiagaraArrayBool; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.prototype.NiagaraGetVectorArrayValue = NiagaraDataInterfaceArrayFunctionLibrary.prototype.GetNiagaraArrayVectorValue; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.NiagaraGetVectorArrayValue = NiagaraDataInterfaceArrayFunctionLibrary.GetNiagaraArrayVectorValue; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.prototype.NiagaraGetVector4ArrayValue = NiagaraDataInterfaceArrayFunctionLibrary.prototype.GetNiagaraArrayVector4Value; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.NiagaraGetVector4ArrayValue = NiagaraDataInterfaceArrayFunctionLibrary.GetNiagaraArrayVector4Value; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.prototype.NiagaraGetVector4Array = NiagaraDataInterfaceArrayFunctionLibrary.prototype.GetNiagaraArrayVector4; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.NiagaraGetVector4Array = NiagaraDataInterfaceArrayFunctionLibrary.GetNiagaraArrayVector4; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.prototype.NiagaraGetVector2DArrayValue = NiagaraDataInterfaceArrayFunctionLibrary.prototype.GetNiagaraArrayVector2DValue; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.NiagaraGetVector2DArrayValue = NiagaraDataInterfaceArrayFunctionLibrary.GetNiagaraArrayVector2DValue; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.prototype.NiagaraGetVector2DArray = NiagaraDataInterfaceArrayFunctionLibrary.prototype.GetNiagaraArrayVector2D; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.NiagaraGetVector2DArray = NiagaraDataInterfaceArrayFunctionLibrary.GetNiagaraArrayVector2D; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.prototype.NiagaraGetVectorArray = NiagaraDataInterfaceArrayFunctionLibrary.prototype.GetNiagaraArrayVector; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.NiagaraGetVectorArray = NiagaraDataInterfaceArrayFunctionLibrary.GetNiagaraArrayVector; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.prototype.NiagaraGetUInt8ArrayValue = NiagaraDataInterfaceArrayFunctionLibrary.prototype.GetNiagaraArrayUInt8Value; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.NiagaraGetUInt8ArrayValue = NiagaraDataInterfaceArrayFunctionLibrary.GetNiagaraArrayUInt8Value; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.prototype.NiagaraGetUInt8Array = NiagaraDataInterfaceArrayFunctionLibrary.prototype.GetNiagaraArrayUInt8; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.NiagaraGetUInt8Array = NiagaraDataInterfaceArrayFunctionLibrary.GetNiagaraArrayUInt8; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.prototype.NiagaraGetQuaternionArrayValue = NiagaraDataInterfaceArrayFunctionLibrary.prototype.GetNiagaraArrayQuatValue; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.NiagaraGetQuaternionArrayValue = NiagaraDataInterfaceArrayFunctionLibrary.GetNiagaraArrayQuatValue; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.prototype.NiagaraGetQuaternionArray = NiagaraDataInterfaceArrayFunctionLibrary.prototype.GetNiagaraArrayQuat; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.NiagaraGetQuaternionArray = NiagaraDataInterfaceArrayFunctionLibrary.GetNiagaraArrayQuat; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.prototype.NiagaraGetPositionArrayValue = NiagaraDataInterfaceArrayFunctionLibrary.prototype.GetNiagaraArrayPositionValue; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.NiagaraGetPositionArrayValue = NiagaraDataInterfaceArrayFunctionLibrary.GetNiagaraArrayPositionValue; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.prototype.NiagaraGetPositionArray = NiagaraDataInterfaceArrayFunctionLibrary.prototype.GetNiagaraArrayPosition; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.NiagaraGetPositionArray = NiagaraDataInterfaceArrayFunctionLibrary.GetNiagaraArrayPosition; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.prototype.NiagaraGetMatrixArrayValue = NiagaraDataInterfaceArrayFunctionLibrary.prototype.GetNiagaraArrayMatrixValue; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.NiagaraGetMatrixArrayValue = NiagaraDataInterfaceArrayFunctionLibrary.GetNiagaraArrayMatrixValue; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.prototype.NiagaraGetMatrixArray = NiagaraDataInterfaceArrayFunctionLibrary.prototype.GetNiagaraArrayMatrix; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.NiagaraGetMatrixArray = NiagaraDataInterfaceArrayFunctionLibrary.GetNiagaraArrayMatrix; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.prototype.NiagaraGetInt32ArrayValue = NiagaraDataInterfaceArrayFunctionLibrary.prototype.GetNiagaraArrayInt32Value; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.NiagaraGetInt32ArrayValue = NiagaraDataInterfaceArrayFunctionLibrary.GetNiagaraArrayInt32Value; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.prototype.NiagaraGetInt32Array = NiagaraDataInterfaceArrayFunctionLibrary.prototype.GetNiagaraArrayInt32; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.NiagaraGetInt32Array = NiagaraDataInterfaceArrayFunctionLibrary.GetNiagaraArrayInt32; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.prototype.NiagaraGetFloatArrayValue = NiagaraDataInterfaceArrayFunctionLibrary.prototype.GetNiagaraArrayFloatValue; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.NiagaraGetFloatArrayValue = NiagaraDataInterfaceArrayFunctionLibrary.GetNiagaraArrayFloatValue; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.prototype.NiagaraGetFloatArray = NiagaraDataInterfaceArrayFunctionLibrary.prototype.GetNiagaraArrayFloat; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.NiagaraGetFloatArray = NiagaraDataInterfaceArrayFunctionLibrary.GetNiagaraArrayFloat; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.prototype.NiagaraGetColorArrayValue = NiagaraDataInterfaceArrayFunctionLibrary.prototype.GetNiagaraArrayColorValue; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.NiagaraGetColorArrayValue = NiagaraDataInterfaceArrayFunctionLibrary.GetNiagaraArrayColorValue; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.prototype.NiagaraGetColorArray = NiagaraDataInterfaceArrayFunctionLibrary.prototype.GetNiagaraArrayColor; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.NiagaraGetColorArray = NiagaraDataInterfaceArrayFunctionLibrary.GetNiagaraArrayColor; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.prototype.NiagaraGetBoolArrayValue = NiagaraDataInterfaceArrayFunctionLibrary.prototype.GetNiagaraArrayBoolValue; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.NiagaraGetBoolArrayValue = NiagaraDataInterfaceArrayFunctionLibrary.GetNiagaraArrayBoolValue; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.prototype.NiagaraGetBoolArray = NiagaraDataInterfaceArrayFunctionLibrary.prototype.GetNiagaraArrayBool; } catch (e) {};
try { NiagaraDataInterfaceArrayFunctionLibrary.NiagaraGetBoolArray = NiagaraDataInterfaceArrayFunctionLibrary.GetNiagaraArrayBool; } catch (e) {};
try { NiagaraDIRigidMeshCollisionFunctionLibrary.prototype.NiagaraSetSourceActors = NiagaraDIRigidMeshCollisionFunctionLibrary.prototype.SetSourceActors; } catch (e) {};
try { NiagaraDIRigidMeshCollisionFunctionLibrary.NiagaraSetSourceActors = NiagaraDIRigidMeshCollisionFunctionLibrary.SetSourceActors; } catch (e) {};
try { let fnprepatch_1351 = NiagaraFunctionLibrary.prototype.SpawnSystemAttached;NiagaraFunctionLibrary.prototype.SpawnSystemAttached = function (SystemTemplate, AttachToComponent, AttachPointName, Location, Rotation, LocationType, bAutoDestroy, bAutoActivate = true, PoolingMethod = "None", bPreCullCheck = true) { return fnprepatch_1351.call(this, SystemTemplate, AttachToComponent, AttachPointName, Location, Rotation, LocationType, bAutoDestroy, bAutoActivate, PoolingMethod, bPreCullCheck) }; } catch (e) {};
try { let fnprepatch_1352 = NiagaraFunctionLibrary.prototype.SpawnSystemAtLocation;NiagaraFunctionLibrary.prototype.SpawnSystemAtLocation = function (WorldContextObject, SystemTemplate, Location, Rotation, Scale, bAutoDestroy = true, bAutoActivate = true, PoolingMethod = "None", bPreCullCheck = true) { return fnprepatch_1352.call(this, WorldContextObject, SystemTemplate, Location, Rotation, Scale, bAutoDestroy, bAutoActivate, PoolingMethod, bPreCullCheck) }; } catch (e) {};
try { NiagaraFunctionLibrary.prototype.SetNiagaraStaticMeshComponent = NiagaraFunctionLibrary.prototype.OverrideSystemUserVariableStaticMeshComponent; } catch (e) {};
try { NiagaraFunctionLibrary.SetNiagaraStaticMeshComponent = NiagaraFunctionLibrary.OverrideSystemUserVariableStaticMeshComponent; } catch (e) {};
try { NiagaraFunctionLibrary.prototype.SetNiagaraStaticMeshDirectly = NiagaraFunctionLibrary.prototype.OverrideSystemUserVariableStaticMesh; } catch (e) {};
try { NiagaraFunctionLibrary.SetNiagaraStaticMeshDirectly = NiagaraFunctionLibrary.OverrideSystemUserVariableStaticMesh; } catch (e) {};
try { NiagaraFunctionLibrary.prototype.SetNiagaraSkeletalMeshComponent = NiagaraFunctionLibrary.prototype.OverrideSystemUserVariableSkeletalMeshComponent; } catch (e) {};
try { NiagaraFunctionLibrary.SetNiagaraSkeletalMeshComponent = NiagaraFunctionLibrary.OverrideSystemUserVariableSkeletalMeshComponent; } catch (e) {};
try { NiagaraParameterCollectionInstance.prototype.SetQuaternionParameter = NiagaraParameterCollectionInstance.prototype.SetQuatParameter; } catch (e) {};
try { NiagaraParameterCollectionInstance.prototype.GetQuaternionParameter = NiagaraParameterCollectionInstance.prototype.GetQuatParameter; } catch (e) {};
try { let fnprepatch_1353 = NiagaraSimCache.prototype.ReadVectorAttribute;NiagaraSimCache.prototype.ReadVectorAttribute = function (OutValues, AttributeName, EmitterName, FrameIndex = 0) { return fnprepatch_1353.call(this, OutValues, AttributeName, EmitterName, FrameIndex) }; } catch (e) {};
try { let fnprepatch_1354 = NiagaraSimCache.prototype.ReadVector4Attribute;NiagaraSimCache.prototype.ReadVector4Attribute = function (OutValues, AttributeName, EmitterName, FrameIndex = 0) { return fnprepatch_1354.call(this, OutValues, AttributeName, EmitterName, FrameIndex) }; } catch (e) {};
try { let fnprepatch_1355 = NiagaraSimCache.prototype.ReadVector2Attribute;NiagaraSimCache.prototype.ReadVector2Attribute = function (OutValues, AttributeName, EmitterName, FrameIndex = 0) { return fnprepatch_1355.call(this, OutValues, AttributeName, EmitterName, FrameIndex) }; } catch (e) {};
try { let fnprepatch_1356 = NiagaraSimCache.prototype.ReadQuatAttributeWithRebase;NiagaraSimCache.prototype.ReadQuatAttributeWithRebase = function (OutValues, Quat, AttributeName = "MeshOrientation", EmitterName = "None", FrameIndex = 0) { return fnprepatch_1356.call(this, OutValues, Quat, AttributeName, EmitterName, FrameIndex) }; } catch (e) {};
try { let fnprepatch_1357 = NiagaraSimCache.prototype.ReadQuatAttribute;NiagaraSimCache.prototype.ReadQuatAttribute = function (OutValues, AttributeName = "MeshOrientation", EmitterName = "None", bLocalSpaceToWorld = true, FrameIndex = 0) { return fnprepatch_1357.call(this, OutValues, AttributeName, EmitterName, bLocalSpaceToWorld, FrameIndex) }; } catch (e) {};
try { let fnprepatch_1358 = NiagaraSimCache.prototype.ReadPositionAttributeWithRebase;NiagaraSimCache.prototype.ReadPositionAttributeWithRebase = function (OutValues, Transform, AttributeName = "Position", EmitterName = "None", FrameIndex = 0) { return fnprepatch_1358.call(this, OutValues, Transform, AttributeName, EmitterName, FrameIndex) }; } catch (e) {};
try { let fnprepatch_1359 = NiagaraSimCache.prototype.ReadPositionAttribute;NiagaraSimCache.prototype.ReadPositionAttribute = function (OutValues, AttributeName = "Position", EmitterName = "None", bLocalSpaceToWorld = true, FrameIndex = 0) { return fnprepatch_1359.call(this, OutValues, AttributeName, EmitterName, bLocalSpaceToWorld, FrameIndex) }; } catch (e) {};
try { let fnprepatch_1360 = NiagaraSimCache.prototype.ReadIntAttribute;NiagaraSimCache.prototype.ReadIntAttribute = function (OutValues, AttributeName, EmitterName, FrameIndex = 0) { return fnprepatch_1360.call(this, OutValues, AttributeName, EmitterName, FrameIndex) }; } catch (e) {};
try { let fnprepatch_1361 = NiagaraSimCache.prototype.ReadIDAttribute;NiagaraSimCache.prototype.ReadIDAttribute = function (OutValues, AttributeName, EmitterName, FrameIndex = 0) { return fnprepatch_1361.call(this, OutValues, AttributeName, EmitterName, FrameIndex) }; } catch (e) {};
try { let fnprepatch_1362 = NiagaraSimCache.prototype.ReadFloatAttribute;NiagaraSimCache.prototype.ReadFloatAttribute = function (OutValues, AttributeName, EmitterName, FrameIndex = 0) { return fnprepatch_1362.call(this, OutValues, AttributeName, EmitterName, FrameIndex) }; } catch (e) {};
try { let fnprepatch_1363 = NiagaraSimCache.prototype.ReadColorAttribute;NiagaraSimCache.prototype.ReadColorAttribute = function (OutValues, AttributeName = "Color", EmitterName = "None", FrameIndex = 0) { return fnprepatch_1363.call(this, OutValues, AttributeName, EmitterName, FrameIndex) }; } catch (e) {};
try { NiagaraSimCache.prototype.IsValid = NiagaraSimCache.prototype.IsCacheValid; } catch (e) {};
try { let fnprepatch_1364 = AsyncNiagaraCaptureSimCache.prototype.CaptureNiagaraSimCacheUntilComplete;AsyncNiagaraCaptureSimCache.prototype.CaptureNiagaraSimCacheUntilComplete = function (SimCache, CreateParameters, NiagaraComponent, OutSimCache, CaptureRate = 1, bAdvanceSimulation = false, AdvanceDeltaTime = 0.016659999266266823) { return fnprepatch_1364.call(this, SimCache, CreateParameters, NiagaraComponent, OutSimCache, CaptureRate, bAdvanceSimulation, AdvanceDeltaTime) }; } catch (e) {};
try { let fnprepatch_1365 = AsyncNiagaraCaptureSimCache.prototype.CaptureNiagaraSimCacheMultiFrame;AsyncNiagaraCaptureSimCache.prototype.CaptureNiagaraSimCacheMultiFrame = function (SimCache, CreateParameters, NiagaraComponent, OutSimCache, NumFrames = 16, CaptureRate = 1, bAdvanceSimulation = false, AdvanceDeltaTime = 0.016659999266266823) { return fnprepatch_1365.call(this, SimCache, CreateParameters, NiagaraComponent, OutSimCache, NumFrames, CaptureRate, bAdvanceSimulation, AdvanceDeltaTime) }; } catch (e) {};
try { let fnprepatch_1366 = NiagaraSimCacheFunctionLibrary.prototype.CaptureNiagaraSimCacheImmediate;NiagaraSimCacheFunctionLibrary.prototype.CaptureNiagaraSimCacheImmediate = function (SimCache, CreateParameters, NiagaraComponent, OutSimCache, bAdvanceSimulation = false, AdvanceDeltaTime = 0.016659999266266823) { return fnprepatch_1366.call(this, SimCache, CreateParameters, NiagaraComponent, OutSimCache, bAdvanceSimulation, AdvanceDeltaTime) }; } catch (e) {};
try { let fnprepatch_1367 = NiagaraClipboardEditorScriptingUtilities.prototype.TrySetLocalValueAsInt;NiagaraClipboardEditorScriptingUtilities.prototype.TrySetLocalValueAsInt = function (InInput, bOutSucceeded, InValue, bLooseTyping = true) { return fnprepatch_1367.call(this, InInput, bOutSucceeded, InValue, bLooseTyping) }; } catch (e) {};
try { let fnprepatch_1368 = CableComponent.prototype.SetAttachEndToComponent;CableComponent.prototype.SetAttachEndToComponent = function (Component, SocketName = "None") { return fnprepatch_1368.call(this, Component, SocketName) }; } catch (e) {};
try { let fnprepatch_1369 = CableComponent.prototype.SetAttachEndTo;CableComponent.prototype.SetAttachEndTo = function (Actor, ComponentProperty, SocketName = "None") { return fnprepatch_1369.call(this, Actor, ComponentProperty, SocketName) }; } catch (e) {};
try { let fnprepatch_1370 = AudioAnalyzer.prototype.StopAnalyzing;AudioAnalyzer.prototype.StopAnalyzing = function (WorldContextObject = undefined) { return fnprepatch_1370.call(this, WorldContextObject) }; } catch (e) {};
try { let fnprepatch_1371 = MetasoundParameterPack.prototype.SetTrigger;MetasoundParameterPack.prototype.SetTrigger = function (ParameterName, OnlyIfExists = true) { return fnprepatch_1371.call(this, ParameterName, OnlyIfExists) }; } catch (e) {};
try { let fnprepatch_1372 = MetasoundParameterPack.prototype.SetString;MetasoundParameterPack.prototype.SetString = function (ParameterName, InValue, OnlyIfExists = true) { return fnprepatch_1372.call(this, ParameterName, InValue, OnlyIfExists) }; } catch (e) {};
try { let fnprepatch_1373 = MetasoundParameterPack.prototype.SetInt;MetasoundParameterPack.prototype.SetInt = function (ParameterName, InValue, OnlyIfExists = true) { return fnprepatch_1373.call(this, ParameterName, InValue, OnlyIfExists) }; } catch (e) {};
try { let fnprepatch_1374 = MetasoundParameterPack.prototype.SetFloat;MetasoundParameterPack.prototype.SetFloat = function (ParameterName, InValue, OnlyIfExists = true) { return fnprepatch_1374.call(this, ParameterName, InValue, OnlyIfExists) }; } catch (e) {};
try { let fnprepatch_1375 = MetasoundParameterPack.prototype.SetBool;MetasoundParameterPack.prototype.SetBool = function (ParameterName, InValue, OnlyIfExists = true) { return fnprepatch_1375.call(this, ParameterName, InValue, OnlyIfExists) }; } catch (e) {};
try { let fnprepatch_1376 = MetasoundGeneratorHandle.prototype.WatchOutput;MetasoundGeneratorHandle.prototype.WatchOutput = function (OutputName, OnOutputValueChanged, AnalyzerName = "None", AnalyzerOutputName = "None") { return fnprepatch_1376.call(this, OutputName, OnOutputValueChanged, AnalyzerName, AnalyzerOutputName) }; } catch (e) {};
try { let fnprepatch_1377 = MetaSoundOutputSubsystem.prototype.WatchOutput;MetaSoundOutputSubsystem.prototype.WatchOutput = function (AudioComponent, OutputName, OnOutputValueChanged, AnalyzerName = "None", AnalyzerOutputName = "None") { return fnprepatch_1377.call(this, AudioComponent, OutputName, OnOutputValueChanged, AnalyzerName, AnalyzerOutputName) }; } catch (e) {};
try { let fnprepatch_1378 = MetaSoundBuilderBase.prototype.AddGraphOutputNode;MetaSoundBuilderBase.prototype.AddGraphOutputNode = function (Name, DataType, DefaultValue, OutResult, bIsConstructorOutput = false) { return fnprepatch_1378.call(this, Name, DataType, DefaultValue, OutResult, bIsConstructorOutput) }; } catch (e) {};
try { let fnprepatch_1379 = MetaSoundBuilderBase.prototype.AddGraphInputNode;MetaSoundBuilderBase.prototype.AddGraphInputNode = function (Name, DataType, DefaultValue, OutResult, bIsConstructorInput = false) { return fnprepatch_1379.call(this, Name, DataType, DefaultValue, OutResult, bIsConstructorInput) }; } catch (e) {};
try { MetaSoundBuilderBase.prototype.AddMetaSoundNodeByClassName = MetaSoundBuilderBase.prototype.AddNodeByClassName; } catch (e) {};
try { let fnprepatch_1380 = MetaSoundSourceBuilder.prototype.Audition;MetaSoundSourceBuilder.prototype.Audition = function (Parent, AudioComponent, OnCreateGenerator, bLiveUpdatesEnabled = false) { return fnprepatch_1380.call(this, Parent, AudioComponent, OnCreateGenerator, bLiveUpdatesEnabled) }; } catch (e) {};
try { let fnprepatch_1381 = MetaSoundBuilderSubsystem.prototype.CreateSourceBuilder;MetaSoundBuilderSubsystem.prototype.CreateSourceBuilder = function (BuilderName, OnPlayNodeOutput, OnFinishedNodeInput, AudioOutNodeInputs, OutResult, OutputFormat = "Mono", bIsOneShot = true) { return fnprepatch_1381.call(this, BuilderName, OnPlayNodeOutput, OnFinishedNodeInput, AudioOutNodeInputs, OutResult, OutputFormat, bIsOneShot) }; } catch (e) {};
try { MetaSoundBuilderSubsystem.prototype.CreateMetaSoundStringLiteral = MetaSoundBuilderSubsystem.prototype.CreateStringMetaSoundLiteral; } catch (e) {};
try { MetaSoundBuilderSubsystem.prototype.CreateMetaSoundStringArrayLiteral = MetaSoundBuilderSubsystem.prototype.CreateStringArrayMetaSoundLiteral; } catch (e) {};
try { MetaSoundBuilderSubsystem.prototype.CreateMetaSoundObjectLiteral = MetaSoundBuilderSubsystem.prototype.CreateObjectMetaSoundLiteral; } catch (e) {};
try { MetaSoundBuilderSubsystem.prototype.CreateMetaSoundObjectArrayLiteral = MetaSoundBuilderSubsystem.prototype.CreateObjectArrayMetaSoundLiteral; } catch (e) {};
try { MetaSoundBuilderSubsystem.prototype.CreateMetaSoundLiteralFromAudioParameter = MetaSoundBuilderSubsystem.prototype.CreateMetaSoundLiteralFromParam; } catch (e) {};
try { MetaSoundBuilderSubsystem.prototype.CreateMetaSoundIntLiteral = MetaSoundBuilderSubsystem.prototype.CreateIntMetaSoundLiteral; } catch (e) {};
try { MetaSoundBuilderSubsystem.prototype.CreateMetaSoundIntArrayLiteral = MetaSoundBuilderSubsystem.prototype.CreateIntArrayMetaSoundLiteral; } catch (e) {};
try { MetaSoundBuilderSubsystem.prototype.CreateMetaSoundFloatLiteral = MetaSoundBuilderSubsystem.prototype.CreateFloatMetaSoundLiteral; } catch (e) {};
try { MetaSoundBuilderSubsystem.prototype.CreateMetaSoundFloatArrayLiteral = MetaSoundBuilderSubsystem.prototype.CreateFloatArrayMetaSoundLiteral; } catch (e) {};
try { MetaSoundBuilderSubsystem.prototype.CreateMetaSoundBoolLiteral = MetaSoundBuilderSubsystem.prototype.CreateBoolMetaSoundLiteral; } catch (e) {};
try { MetaSoundBuilderSubsystem.prototype.CreateMetaSoundBoolArrayLiteral = MetaSoundBuilderSubsystem.prototype.CreateBoolArrayMetaSoundLiteral; } catch (e) {};
try { let fnprepatch_1382 = MetaSoundEditorSubsystem.prototype.BuildToAsset;MetaSoundEditorSubsystem.prototype.BuildToAsset = function (InBuilder, Author, AssetName, PackagePath, OutResult, TemplateSoundWave = undefined) { return fnprepatch_1382.call(this, InBuilder, Author, AssetName, PackagePath, OutResult, TemplateSoundWave) }; } catch (e) {};
try { let fnprepatch_1383 = KismetProceduralMeshLibrary.prototype.CreateGridMeshWelded;KismetProceduralMeshLibrary.prototype.CreateGridMeshWelded = function (NumX, NumY, Triangles, Vertices, UVs, GridSpacing = 16) { return fnprepatch_1383.call(this, NumX, NumY, Triangles, Vertices, UVs, GridSpacing) }; } catch (e) {};
try { let fnprepatch_1384 = KismetProceduralMeshLibrary.prototype.CreateGridMeshSplit;KismetProceduralMeshLibrary.prototype.CreateGridMeshSplit = function (NumX, NumY, Triangles, Vertices, UVs, UV1s, GridSpacing = 16) { return fnprepatch_1384.call(this, NumX, NumY, Triangles, Vertices, UVs, UV1s, GridSpacing) }; } catch (e) {};
try { let fnprepatch_1385 = ProceduralMeshComponent.prototype.UpdateMeshSection_LinearColor;ProceduralMeshComponent.prototype.UpdateMeshSection_LinearColor = function (SectionIndex, Vertices, Normals, UV0, UV1, UV2, UV3, VertexColors, Tangents, bSRGBConversion = true) { return fnprepatch_1385.call(this, SectionIndex, Vertices, Normals, UV0, UV1, UV2, UV3, VertexColors, Tangents, bSRGBConversion) }; } catch (e) {};
try { let fnprepatch_1386 = ProceduralMeshComponent.prototype.CreateMeshSection_LinearColor;ProceduralMeshComponent.prototype.CreateMeshSection_LinearColor = function (SectionIndex, Vertices, Triangles, Normals, UV0, UV1, UV2, UV3, VertexColors, Tangents, bCreateCollision, bSRGBConversion = false) { return fnprepatch_1386.call(this, SectionIndex, Vertices, Triangles, Normals, UV0, UV1, UV2, UV3, VertexColors, Tangents, bCreateCollision, bSRGBConversion) }; } catch (e) {};
try { ProceduralMeshComponent.prototype.UpdateMeshSection = ProceduralMeshComponent.prototype.UpdateMeshSection_LinearColor; } catch (e) {};
try { ProceduralMeshComponent.prototype.UpdateMeshSectionFColor = ProceduralMeshComponent.prototype.UpdateMeshSection; } catch (e) {};
try { ProceduralMeshComponent.prototype.CreateMeshSection = ProceduralMeshComponent.prototype.CreateMeshSection_LinearColor; } catch (e) {};
try { ProceduralMeshComponent.prototype.CreateMeshSectionFColor = ProceduralMeshComponent.prototype.CreateMeshSection; } catch (e) {};
try { let fnprepatch_1387 = ModularSynthComponent.prototype.NoteOn;ModularSynthComponent.prototype.NoteOn = function (Note, Velocity, Duration = -1) { return fnprepatch_1387.call(this, Note, Velocity, Duration) }; } catch (e) {};
try { let fnprepatch_1388 = ModularSynthComponent.prototype.NoteOff;ModularSynthComponent.prototype.NoteOff = function (Note, bAllNotesOff = false, bKillAllNotes = false) { return fnprepatch_1388.call(this, Note, bAllNotesOff, bKillAllNotes) }; } catch (e) {};
try { ModularSynthComponent.prototype.SetGain = ModularSynthComponent.prototype.SetGainDb; } catch (e) {};
try { SubmixEffectDelayPreset.prototype.SetDynamicSettings = SubmixEffectDelayPreset.prototype.SetSettings; } catch (e) {};
try { let fnprepatch_1389 = GranularSynth.prototype.SetPlayheadTime;GranularSynth.prototype.SetPlayheadTime = function (InPositionSec, LerpTimeSec = 0, SeekType = "FromBeginning") { return fnprepatch_1389.call(this, InPositionSec, LerpTimeSec, SeekType) }; } catch (e) {};
try { let fnprepatch_1390 = GranularSynth.prototype.NoteOn;GranularSynth.prototype.NoteOn = function (Note, Velocity, Duration = -1) { return fnprepatch_1390.call(this, Note, Velocity, Duration) }; } catch (e) {};
try { let fnprepatch_1391 = GranularSynth.prototype.NoteOff;GranularSynth.prototype.NoteOff = function (Note, bKill = false) { return fnprepatch_1391.call(this, Note, bKill) }; } catch (e) {};
try { let fnprepatch_1392 = SynthSamplePlayer.prototype.SeekToTime;SynthSamplePlayer.prototype.SeekToTime = function (TimeSec, SeekType, bWrap = true) { return fnprepatch_1392.call(this, TimeSec, SeekType, bWrap) }; } catch (e) {};
try { let fnprepatch_1393 = JavascriptComponent.prototype.ResolveAsset;JavascriptComponent.prototype.ResolveAsset = function (Name, bTryLoad = true) { return fnprepatch_1393.call(this, Name, bTryLoad) }; } catch (e) {};
try { let fnprepatch_1394 = JavascriptContext.prototype.RunScript;JavascriptContext.prototype.RunScript = function (Script, bOutput = true) { return fnprepatch_1394.call(this, Script, bOutput) }; } catch (e) {};
try { let fnprepatch_1395 = JavascriptContext.prototype.CreateInspector;JavascriptContext.prototype.CreateInspector = function (Port = 9229) { return fnprepatch_1395.call(this, Port) }; } catch (e) {};
try { let fnprepatch_1396 = JavascriptLibrary.prototype.ReadStringFromFile;JavascriptLibrary.prototype.ReadStringFromFile = function (Object, Filename, ReadFlags = "FILEREAD_None") { return fnprepatch_1396.call(this, Object, Filename, ReadFlags) }; } catch (e) {};
try { let fnprepatch_1397 = JavascriptLibrary.prototype.DeleteFile;JavascriptLibrary.prototype.DeleteFile = function (Filename, ReadOnly = false) { return fnprepatch_1397.call(this, Filename, ReadOnly) }; } catch (e) {};
try { let fnprepatch_1398 = JavascriptLibrary.prototype.CreateSocket;JavascriptLibrary.prototype.CreateSocket = function (SocketType, Description, bForceUDP = false) { return fnprepatch_1398.call(this, SocketType, Description, bForceUDP) }; } catch (e) {};
try { let fnprepatch_1399 = JavascriptProcess.prototype.Terminate;JavascriptProcess.prototype.Terminate = function (KillTree = false) { return fnprepatch_1399.call(this, KillTree) }; } catch (e) {};
try { let fnprepatch_1400 = JavascriptUMGLibrary.prototype.AddWindow;JavascriptUMGLibrary.prototype.AddWindow = function (NewWindow, bShowImmediately = true) { return fnprepatch_1400.call(this, NewWindow, bShowImmediately) }; } catch (e) {};
try { let fnprepatch_1401 = JavascriptWebSocket.prototype.RemoteEndPoint;JavascriptWebSocket.prototype.RemoteEndPoint = function (bAppendPort = true) { return fnprepatch_1401.call(this, bAppendPort) }; } catch (e) {};
try { let fnprepatch_1402 = JavascriptWebSocket.prototype.LocalEndPoint;JavascriptWebSocket.prototype.LocalEndPoint = function (bAppendPort = true) { return fnprepatch_1402.call(this, bAppendPort) }; } catch (e) {};
try { let fnprepatch_1403 = KotlinComponent.prototype.ResolveAsset;KotlinComponent.prototype.ResolveAsset = function (Name, bTryLoad = true) { return fnprepatch_1403.call(this, Name, bTryLoad) }; } catch (e) {};
try { let fnprepatch_1404 = MotionExtractorUtilityLibrary.prototype.GetStoppedRangesFromRootMotion;MotionExtractorUtilityLibrary.prototype.GetStoppedRangesFromRootMotion = function (AnimSequence, StopSpeedThreshold = 10, SampleRate = 120) { return fnprepatch_1404.call(this, AnimSequence, StopSpeedThreshold, SampleRate) }; } catch (e) {};
try { let fnprepatch_1405 = MotionExtractorUtilityLibrary.prototype.GetMovingRangesFromRootMotion;MotionExtractorUtilityLibrary.prototype.GetMovingRangesFromRootMotion = function (AnimSequence, StopSpeedThreshold = 10, SampleRate = 120) { return fnprepatch_1405.call(this, AnimSequence, StopSpeedThreshold, SampleRate) }; } catch (e) {};
try { let fnprepatch_1406 = MediaPlateComponent.prototype.GetMediaTexture;MediaPlateComponent.prototype.GetMediaTexture = function (Index = 0) { return fnprepatch_1406.call(this, Index) }; } catch (e) {};
try { let fnprepatch_1407 = DynamicMeshComponent.prototype.ValidateMaterialSlots;DynamicMeshComponent.prototype.ValidateMaterialSlots = function (bCreateIfMissing = true, bDeleteExtraSlots = true) { return fnprepatch_1407.call(this, bCreateIfMissing, bDeleteExtraSlots) }; } catch (e) {};
try { let fnprepatch_1408 = DynamicMeshComponent.prototype.UpdateCollision;DynamicMeshComponent.prototype.UpdateCollision = function (bOnlyIfPending = true) { return fnprepatch_1408.call(this, bOnlyIfPending) }; } catch (e) {};
try { let fnprepatch_1409 = DynamicMeshComponent.prototype.SetDeferredCollisionUpdatesEnabled;DynamicMeshComponent.prototype.SetDeferredCollisionUpdatesEnabled = function (bEnabled, bImmediateUpdate = true) { return fnprepatch_1409.call(this, bEnabled, bImmediateUpdate) }; } catch (e) {};
try { let fnprepatch_1410 = DynamicMeshComponent.prototype.SetComplexAsSimpleCollisionEnabled;DynamicMeshComponent.prototype.SetComplexAsSimpleCollisionEnabled = function (bEnabled, bImmediateUpdate = true) { return fnprepatch_1410.call(this, bEnabled, bImmediateUpdate) }; } catch (e) {};
try { let fnprepatch_1411 = DynamicMeshComponent.prototype.NotifyMeshVertexAttributesModified;DynamicMeshComponent.prototype.NotifyMeshVertexAttributesModified = function (bPositions = true, bNormals = true, bUVs = true, bColors = true) { return fnprepatch_1411.call(this, bPositions, bNormals, bUVs, bColors) }; } catch (e) {};
try { DynamicMeshComponent.prototype.NotifyVertexAttributesUpdated = DynamicMeshComponent.prototype.NotifyMeshVertexAttributesModified; } catch (e) {};
try { DynamicMeshComponent.prototype.NotifyMeshUpdated = DynamicMeshComponent.prototype.NotifyMeshModified; } catch (e) {};
try { let fnprepatch_1412 = MovieSceneScriptingActorReferenceKey.prototype.SetTime;MovieSceneScriptingActorReferenceKey.prototype.SetTime = function (NewFrameNumber, SubFrame = 0, TimeUnit = "DisplayRate") { return fnprepatch_1412.call(this, NewFrameNumber, SubFrame, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1413 = MovieSceneScriptingActorReferenceKey.prototype.GetTime;MovieSceneScriptingActorReferenceKey.prototype.GetTime = function (TimeUnit = "DisplayRate") { return fnprepatch_1413.call(this, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1414 = MovieSceneScriptingActorReferenceChannel.prototype.AddKey;MovieSceneScriptingActorReferenceChannel.prototype.AddKey = function (InTime, NewValue, SubFrame = 0, TimeUnit = "DisplayRate") { return fnprepatch_1414.call(this, InTime, NewValue, SubFrame, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1415 = MovieSceneScriptingBoolKey.prototype.SetTime;MovieSceneScriptingBoolKey.prototype.SetTime = function (NewFrameNumber, SubFrame = 0, TimeUnit = "DisplayRate") { return fnprepatch_1415.call(this, NewFrameNumber, SubFrame, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1416 = MovieSceneScriptingBoolKey.prototype.GetTime;MovieSceneScriptingBoolKey.prototype.GetTime = function (TimeUnit = "DisplayRate") { return fnprepatch_1416.call(this, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1417 = MovieSceneScriptingBoolChannel.prototype.AddKey;MovieSceneScriptingBoolChannel.prototype.AddKey = function (InTime, NewValue, SubFrame = 0, TimeUnit = "DisplayRate") { return fnprepatch_1417.call(this, InTime, NewValue, SubFrame, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1418 = MovieSceneScriptingByteKey.prototype.SetTime;MovieSceneScriptingByteKey.prototype.SetTime = function (NewFrameNumber, SubFrame = 0, TimeUnit = "DisplayRate") { return fnprepatch_1418.call(this, NewFrameNumber, SubFrame, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1419 = MovieSceneScriptingByteKey.prototype.GetTime;MovieSceneScriptingByteKey.prototype.GetTime = function (TimeUnit = "DisplayRate") { return fnprepatch_1419.call(this, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1420 = MovieSceneScriptingByteChannel.prototype.AddKey;MovieSceneScriptingByteChannel.prototype.AddKey = function (InTime, NewValue, SubFrame = 0, TimeUnit = "DisplayRate", InInterpolation = "Auto") { return fnprepatch_1420.call(this, InTime, NewValue, SubFrame, TimeUnit, InInterpolation) }; } catch (e) {};
try { let fnprepatch_1421 = MovieSceneScriptingDoubleKey.prototype.SetTime;MovieSceneScriptingDoubleKey.prototype.SetTime = function (NewFrameNumber, SubFrame = 0, TimeUnit = "DisplayRate") { return fnprepatch_1421.call(this, NewFrameNumber, SubFrame, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1422 = MovieSceneScriptingDoubleKey.prototype.GetTime;MovieSceneScriptingDoubleKey.prototype.GetTime = function (TimeUnit = "DisplayRate") { return fnprepatch_1422.call(this, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1423 = MovieSceneScriptingDoubleChannel.prototype.AddKey;MovieSceneScriptingDoubleChannel.prototype.AddKey = function (InTime, NewValue, SubFrame = 0, TimeUnit = "DisplayRate", InInterpolation = "Auto") { return fnprepatch_1423.call(this, InTime, NewValue, SubFrame, TimeUnit, InInterpolation) }; } catch (e) {};
try { let fnprepatch_1424 = MovieSceneScriptingEventKey.prototype.SetTime;MovieSceneScriptingEventKey.prototype.SetTime = function (NewFrameNumber, SubFrame = 0, TimeUnit = "DisplayRate") { return fnprepatch_1424.call(this, NewFrameNumber, SubFrame, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1425 = MovieSceneScriptingEventKey.prototype.GetTime;MovieSceneScriptingEventKey.prototype.GetTime = function (TimeUnit = "DisplayRate") { return fnprepatch_1425.call(this, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1426 = MovieSceneScriptingEventChannel.prototype.AddKey;MovieSceneScriptingEventChannel.prototype.AddKey = function (InTime, NewValue, SubFrame = 0, TimeUnit = "DisplayRate") { return fnprepatch_1426.call(this, InTime, NewValue, SubFrame, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1427 = MovieSceneScriptingFloatKey.prototype.SetTime;MovieSceneScriptingFloatKey.prototype.SetTime = function (NewFrameNumber, SubFrame = 0, TimeUnit = "DisplayRate") { return fnprepatch_1427.call(this, NewFrameNumber, SubFrame, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1428 = MovieSceneScriptingFloatKey.prototype.GetTime;MovieSceneScriptingFloatKey.prototype.GetTime = function (TimeUnit = "DisplayRate") { return fnprepatch_1428.call(this, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1429 = MovieSceneScriptingFloatChannel.prototype.AddKey;MovieSceneScriptingFloatChannel.prototype.AddKey = function (InTime, NewValue, SubFrame = 0, TimeUnit = "DisplayRate", InInterpolation = "Auto") { return fnprepatch_1429.call(this, InTime, NewValue, SubFrame, TimeUnit, InInterpolation) }; } catch (e) {};
try { let fnprepatch_1430 = MovieSceneScriptingIntegerKey.prototype.SetTime;MovieSceneScriptingIntegerKey.prototype.SetTime = function (NewFrameNumber, SubFrame = 0, TimeUnit = "DisplayRate") { return fnprepatch_1430.call(this, NewFrameNumber, SubFrame, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1431 = MovieSceneScriptingIntegerKey.prototype.GetTime;MovieSceneScriptingIntegerKey.prototype.GetTime = function (TimeUnit = "DisplayRate") { return fnprepatch_1431.call(this, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1432 = MovieSceneScriptingIntegerChannel.prototype.AddKey;MovieSceneScriptingIntegerChannel.prototype.AddKey = function (InTime, NewValue, SubFrame = 0, TimeUnit = "DisplayRate") { return fnprepatch_1432.call(this, InTime, NewValue, SubFrame, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1433 = MovieSceneScriptingObjectPathKey.prototype.SetTime;MovieSceneScriptingObjectPathKey.prototype.SetTime = function (NewFrameNumber, SubFrame = 0, TimeUnit = "DisplayRate") { return fnprepatch_1433.call(this, NewFrameNumber, SubFrame, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1434 = MovieSceneScriptingObjectPathKey.prototype.GetTime;MovieSceneScriptingObjectPathKey.prototype.GetTime = function (TimeUnit = "DisplayRate") { return fnprepatch_1434.call(this, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1435 = MovieSceneScriptingObjectPathChannel.prototype.AddKey;MovieSceneScriptingObjectPathChannel.prototype.AddKey = function (InTime, NewValue, SubFrame = 0, TimeUnit = "DisplayRate") { return fnprepatch_1435.call(this, InTime, NewValue, SubFrame, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1436 = MovieSceneScriptingStringKey.prototype.SetTime;MovieSceneScriptingStringKey.prototype.SetTime = function (NewFrameNumber, SubFrame = 0, TimeUnit = "DisplayRate") { return fnprepatch_1436.call(this, NewFrameNumber, SubFrame, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1437 = MovieSceneScriptingStringKey.prototype.GetTime;MovieSceneScriptingStringKey.prototype.GetTime = function (TimeUnit = "DisplayRate") { return fnprepatch_1437.call(this, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1438 = MovieSceneScriptingStringChannel.prototype.AddKey;MovieSceneScriptingStringChannel.prototype.AddKey = function (InTime, NewValue, SubFrame = 0, TimeUnit = "DisplayRate") { return fnprepatch_1438.call(this, InTime, NewValue, SubFrame, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1439 = StaticMeshImportTestFunctions.prototype.CheckAgainstGroundTruth;StaticMeshImportTestFunctions.prototype.CheckAgainstGroundTruth = function (Mesh, MeshToCompare, bCheckVertexCountEqual = true, bCheckTriangleCountEqual = true, bCheckUVChannelCountEqual = true, bCheckCollisionPrimitiveCountEqual = true, bCheckVertexPositionsEqual = true, bCheckNormalsEqual = true) { return fnprepatch_1439.call(this, Mesh, MeshToCompare, bCheckVertexCountEqual, bCheckTriangleCountEqual, bCheckUVChannelCountEqual, bCheckCollisionPrimitiveCountEqual, bCheckVertexPositionsEqual, bCheckNormalsEqual) }; } catch (e) {};
try { let fnprepatch_1440 = AutomationUtilsBlueprintLibrary.prototype.TakeGameplayAutomationScreenshot;AutomationUtilsBlueprintLibrary.prototype.TakeGameplayAutomationScreenshot = function (ScreenshotName, MaxGlobalError = 0.019999999552965164, MaxLocalError = 0.11999999731779099, MapNameOverride) { return fnprepatch_1440.call(this, ScreenshotName, MaxGlobalError, MaxLocalError, MapNameOverride) }; } catch (e) {};
try { let fnprepatch_1441 = SkeletalMeshEditorSubsystem.prototype.RegenerateLOD;SkeletalMeshEditorSubsystem.prototype.RegenerateLOD = function (SkeletalMesh, NewLODCount = 0, bRegenerateEvenIfImported = false, bGenerateBaseLOD = false) { return fnprepatch_1441.call(this, SkeletalMesh, NewLODCount, bRegenerateEvenIfImported, bGenerateBaseLOD) }; } catch (e) {};
try { let fnprepatch_1442 = StaticMeshEditorSubsystem.prototype.SetNaniteSettings;StaticMeshEditorSubsystem.prototype.SetNaniteSettings = function (StaticMesh, NaniteSettings, bApplyChanges = true) { return fnprepatch_1442.call(this, StaticMesh, NaniteSettings, bApplyChanges) }; } catch (e) {};
try { let fnprepatch_1443 = StaticMeshEditorSubsystem.prototype.SetLODGroup;StaticMeshEditorSubsystem.prototype.SetLODGroup = function (StaticMesh, LODGroup, bRebuildImmediately = true) { return fnprepatch_1443.call(this, StaticMesh, LODGroup, bRebuildImmediately) }; } catch (e) {};
try { let fnprepatch_1444 = EditorAssetLibrary.prototype.SaveLoadedAssets;EditorAssetLibrary.prototype.SaveLoadedAssets = function (AssetsToSave, bOnlyIfIsDirty = true) { return fnprepatch_1444.call(this, AssetsToSave, bOnlyIfIsDirty) }; } catch (e) {};
try { let fnprepatch_1445 = EditorAssetLibrary.prototype.SaveLoadedAsset;EditorAssetLibrary.prototype.SaveLoadedAsset = function (AssetToSave, bOnlyIfIsDirty = true) { return fnprepatch_1445.call(this, AssetToSave, bOnlyIfIsDirty) }; } catch (e) {};
try { let fnprepatch_1446 = EditorAssetLibrary.prototype.SaveDirectory;EditorAssetLibrary.prototype.SaveDirectory = function (DirectoryPath, bOnlyIfIsDirty = true, bRecursive = true) { return fnprepatch_1446.call(this, DirectoryPath, bOnlyIfIsDirty, bRecursive) }; } catch (e) {};
try { let fnprepatch_1447 = EditorAssetLibrary.prototype.SaveAsset;EditorAssetLibrary.prototype.SaveAsset = function (AssetToSave, bOnlyIfIsDirty = true) { return fnprepatch_1447.call(this, AssetToSave, bOnlyIfIsDirty) }; } catch (e) {};
try { let fnprepatch_1448 = EditorAssetLibrary.prototype.ListAssets;EditorAssetLibrary.prototype.ListAssets = function (DirectoryPath, bRecursive = true, bIncludeFolder = false) { return fnprepatch_1448.call(this, DirectoryPath, bRecursive, bIncludeFolder) }; } catch (e) {};
try { let fnprepatch_1449 = EditorAssetLibrary.prototype.FindPackageReferencersForAsset;EditorAssetLibrary.prototype.FindPackageReferencersForAsset = function (AssetPath, bLoadAssetsToConfirm = false) { return fnprepatch_1449.call(this, AssetPath, bLoadAssetsToConfirm) }; } catch (e) {};
try { let fnprepatch_1450 = EditorAssetLibrary.prototype.DoesDirectoryHaveAssets;EditorAssetLibrary.prototype.DoesDirectoryHaveAssets = function (DirectoryPath, bRecursive = true) { return fnprepatch_1450.call(this, DirectoryPath, bRecursive) }; } catch (e) {};
try { let fnprepatch_1451 = EditorAssetLibrary.prototype.CheckoutDirectory;EditorAssetLibrary.prototype.CheckoutDirectory = function (DirectoryPath, bRecursive = true) { return fnprepatch_1451.call(this, DirectoryPath, bRecursive) }; } catch (e) {};
try { let fnprepatch_1452 = EditorDialogLibrary.prototype.ShowSuppressableWarningDialog;EditorDialogLibrary.prototype.ShowSuppressableWarningDialog = function (Title, Message, InIniSettingName, InIniSettingFileNameOverride, bDefaultValue = true) { return fnprepatch_1452.call(this, Title, Message, InIniSettingName, InIniSettingFileNameOverride, bDefaultValue) }; } catch (e) {};
try { let fnprepatch_1453 = EditorDialogLibrary.prototype.ShowObjectsDetailsView;EditorDialogLibrary.prototype.ShowObjectsDetailsView = function (Title, InOutObjects, Options = {"bShowObjectName":false,"bAllowSearch":false,"MinWidth":0,"MinHeight":0,"ValueColumnWidthRatio":0}) { return fnprepatch_1453.call(this, Title, InOutObjects, Options) }; } catch (e) {};
try { let fnprepatch_1454 = EditorDialogLibrary.prototype.ShowObjectDetailsView;EditorDialogLibrary.prototype.ShowObjectDetailsView = function (Title, InOutObject, Options = {"bShowObjectName":false,"bAllowSearch":false,"MinWidth":0,"MinHeight":0,"ValueColumnWidthRatio":0}) { return fnprepatch_1454.call(this, Title, InOutObject, Options) }; } catch (e) {};
try { let fnprepatch_1455 = EditorDialogLibrary.prototype.ShowMessage;EditorDialogLibrary.prototype.ShowMessage = function (Title, Message, MessageType, DefaultValue = "No", MessageCategory = "Warning") { return fnprepatch_1455.call(this, Title, Message, MessageType, DefaultValue, MessageCategory) }; } catch (e) {};
try { EditorDialogLibrary.prototype.ShowObjectsDialog = EditorDialogLibrary.prototype.ShowObjectsDetailsView; } catch (e) {};
try { EditorDialogLibrary.ShowObjectsDialog = EditorDialogLibrary.ShowObjectsDetailsView; } catch (e) {};
try { EditorDialogLibrary.prototype.ShowObjectDialog = EditorDialogLibrary.prototype.ShowObjectDetailsView; } catch (e) {};
try { EditorDialogLibrary.ShowObjectDialog = EditorDialogLibrary.ShowObjectDetailsView; } catch (e) {};
try { EditorDialogLibrary.prototype.ShowMessageDialog = EditorDialogLibrary.prototype.ShowMessage; } catch (e) {};
try { EditorDialogLibrary.ShowMessageDialog = EditorDialogLibrary.ShowMessage; } catch (e) {};
try { let fnprepatch_1456 = EditorFilterLibrary.prototype.BySelection;EditorFilterLibrary.prototype.BySelection = function (TargetArray, FilterType = "Include") { return fnprepatch_1456.call(this, TargetArray, FilterType) }; } catch (e) {};
try { let fnprepatch_1457 = EditorFilterLibrary.prototype.ByLevelName;EditorFilterLibrary.prototype.ByLevelName = function (TargetArray, LevelName, FilterType = "Include") { return fnprepatch_1457.call(this, TargetArray, LevelName, FilterType) }; } catch (e) {};
try { let fnprepatch_1458 = EditorFilterLibrary.prototype.ByLayer;EditorFilterLibrary.prototype.ByLayer = function (TargetArray, LayerName, FilterType = "Include") { return fnprepatch_1458.call(this, TargetArray, LayerName, FilterType) }; } catch (e) {};
try { let fnprepatch_1459 = EditorFilterLibrary.prototype.ByIDName;EditorFilterLibrary.prototype.ByIDName = function (TargetArray, NameSubString, StringMatch = "Contains", FilterType = "Include") { return fnprepatch_1459.call(this, TargetArray, NameSubString, StringMatch, FilterType) }; } catch (e) {};
try { let fnprepatch_1460 = EditorFilterLibrary.prototype.ByClass;EditorFilterLibrary.prototype.ByClass = function (TargetArray, ObjectClass, FilterType = "Include") { return fnprepatch_1460.call(this, TargetArray, ObjectClass, FilterType) }; } catch (e) {};
try { let fnprepatch_1461 = EditorFilterLibrary.prototype.ByActorTag;EditorFilterLibrary.prototype.ByActorTag = function (TargetArray, Tag, FilterType = "Include") { return fnprepatch_1461.call(this, TargetArray, Tag, FilterType) }; } catch (e) {};
try { let fnprepatch_1462 = EditorFilterLibrary.prototype.ByActorLabel;EditorFilterLibrary.prototype.ByActorLabel = function (TargetArray, NameSubString, StringMatch = "Contains", FilterType = "Include", bIgnoreCase = true) { return fnprepatch_1462.call(this, TargetArray, NameSubString, StringMatch, FilterType, bIgnoreCase) }; } catch (e) {};
try { EditorFilterLibrary.prototype.FilterbySelection = EditorFilterLibrary.prototype.BySelection; } catch (e) {};
try { EditorFilterLibrary.FilterbySelection = EditorFilterLibrary.BySelection; } catch (e) {};
try { EditorFilterLibrary.prototype.FilterbyLevelName = EditorFilterLibrary.prototype.ByLevelName; } catch (e) {};
try { EditorFilterLibrary.FilterbyLevelName = EditorFilterLibrary.ByLevelName; } catch (e) {};
try { EditorFilterLibrary.prototype.FilterbyLayer = EditorFilterLibrary.prototype.ByLayer; } catch (e) {};
try { EditorFilterLibrary.FilterbyLayer = EditorFilterLibrary.ByLayer; } catch (e) {};
try { EditorFilterLibrary.prototype.FilterbyIDName = EditorFilterLibrary.prototype.ByIDName; } catch (e) {};
try { EditorFilterLibrary.FilterbyIDName = EditorFilterLibrary.ByIDName; } catch (e) {};
try { EditorFilterLibrary.prototype.FilterbyClass = EditorFilterLibrary.prototype.ByClass; } catch (e) {};
try { EditorFilterLibrary.FilterbyClass = EditorFilterLibrary.ByClass; } catch (e) {};
try { EditorFilterLibrary.prototype.FilterbyActorTag = EditorFilterLibrary.prototype.ByActorTag; } catch (e) {};
try { EditorFilterLibrary.FilterbyActorTag = EditorFilterLibrary.ByActorTag; } catch (e) {};
try { EditorFilterLibrary.prototype.FilterbyActorLabel = EditorFilterLibrary.prototype.ByActorLabel; } catch (e) {};
try { EditorFilterLibrary.FilterbyActorLabel = EditorFilterLibrary.ByActorLabel; } catch (e) {};
try { let fnprepatch_1463 = EditorLevelLibrary.prototype.SpawnActorFromObject;EditorLevelLibrary.prototype.SpawnActorFromObject = function (ObjectToUse, Location, Rotation, bTransient = false) { return fnprepatch_1463.call(this, ObjectToUse, Location, Rotation, bTransient) }; } catch (e) {};
try { let fnprepatch_1464 = EditorLevelLibrary.prototype.SpawnActorFromClass;EditorLevelLibrary.prototype.SpawnActorFromClass = function (ActorClass, Location, Rotation, bTransient = false) { return fnprepatch_1464.call(this, ActorClass, Location, Rotation, bTransient) }; } catch (e) {};
try { let fnprepatch_1465 = EditorSkeletalMeshLibrary.prototype.RegenerateLOD;EditorSkeletalMeshLibrary.prototype.RegenerateLOD = function (SkeletalMesh, NewLODCount = 0, bRegenerateEvenIfImported = false, bGenerateBaseLOD = false) { return fnprepatch_1465.call(this, SkeletalMesh, NewLODCount, bRegenerateEvenIfImported, bGenerateBaseLOD) }; } catch (e) {};
try { EditMeshPolygonsToolCancelAction.prototype.Cancel = EditMeshPolygonsToolCancelAction.prototype.Done; } catch (e) {};
try { SimpleCollisionEditorToolActionProperties.prototype.DeleteSelected = SimpleCollisionEditorToolActionProperties.prototype.Delete; } catch (e) {};
try { let fnprepatch_1466 = SkeletonModifier.prototype.OrientBones;SkeletonModifier.prototype.OrientBones = function (InBoneNames, InOptions = {"Primary":"None","Secondary":"None","bUsePlaneAsSecondary":false,"SecondaryTarget":{"X":0,"Y":0,"Z":0},"bOrientChildren":false}) { return fnprepatch_1466.call(this, InBoneNames, InOptions) }; } catch (e) {};
try { let fnprepatch_1467 = SkeletonModifier.prototype.OrientBone;SkeletonModifier.prototype.OrientBone = function (InBoneName, InOptions = {"Primary":"None","Secondary":"None","bUsePlaneAsSecondary":false,"SecondaryTarget":{"X":0,"Y":0,"Z":0},"bOrientChildren":false}) { return fnprepatch_1467.call(this, InBoneName, InOptions) }; } catch (e) {};
try { let fnprepatch_1468 = SkeletonModifier.prototype.MirrorBones;SkeletonModifier.prototype.MirrorBones = function (InBonesName, InOptions = {"MirrorAxis":"None","bMirrorRotation":false,"LeftString":"","RightString":"","bMirrorChildren":false}) { return fnprepatch_1468.call(this, InBonesName, InOptions) }; } catch (e) {};
try { let fnprepatch_1469 = SkeletonModifier.prototype.MirrorBone;SkeletonModifier.prototype.MirrorBone = function (InBoneName, InOptions = {"MirrorAxis":"None","bMirrorRotation":false,"LeftString":"","RightString":"","bMirrorChildren":false}) { return fnprepatch_1469.call(this, InBoneName, InOptions) }; } catch (e) {};
try { let fnprepatch_1470 = SkeletonModifier.prototype.GetChildrenNames;SkeletonModifier.prototype.GetChildrenNames = function (InBoneName, bRecursive = false) { return fnprepatch_1470.call(this, InBoneName, bRecursive) }; } catch (e) {};
try { let fnprepatch_1471 = SkeletonModifier.prototype.GetBoneTransform;SkeletonModifier.prototype.GetBoneTransform = function (InBoneName, bGlobal = false) { return fnprepatch_1471.call(this, InBoneName, bGlobal) }; } catch (e) {};
try { let fnprepatch_1472 = SkinWeightModifier.prototype.SetVertexWeights;SkinWeightModifier.prototype.SetVertexWeights = function (VertexID, InWeights, bReplaceAll = false) { return fnprepatch_1472.call(this, VertexID, InWeights, bReplaceAll) }; } catch (e) {};
try { let fnprepatch_1473 = SkinWeightModifier.prototype.EnforceMaxInfluences;SkinWeightModifier.prototype.EnforceMaxInfluences = function (MaxInfluences = -1) { return fnprepatch_1473.call(this, MaxInfluences) }; } catch (e) {};
try { let fnprepatch_1474 = StructUtilsFunctionLibrary.prototype.Reset;StructUtilsFunctionLibrary.prototype.Reset = function (InstancedStruct, StructType = undefined) { return fnprepatch_1474.call(this, InstancedStruct, StructType) }; } catch (e) {};
try { StructUtilsFunctionLibrary.prototype.NotEqual = StructUtilsFunctionLibrary.prototype.NotEqual_InstancedStruct; } catch (e) {};
try { StructUtilsFunctionLibrary.NotEqual = StructUtilsFunctionLibrary.NotEqual_InstancedStruct; } catch (e) {};
try { StructUtilsFunctionLibrary.prototype.IsValid = StructUtilsFunctionLibrary.prototype.IsValid_InstancedStruct; } catch (e) {};
try { StructUtilsFunctionLibrary.IsValid = StructUtilsFunctionLibrary.IsValid_InstancedStruct; } catch (e) {};
try { StructUtilsFunctionLibrary.prototype.IsValid = StructUtilsFunctionLibrary.prototype.IsInstancedStructValid; } catch (e) {};
try { StructUtilsFunctionLibrary.IsValid = StructUtilsFunctionLibrary.IsInstancedStructValid; } catch (e) {};
try { StructUtilsFunctionLibrary.prototype.Equal = StructUtilsFunctionLibrary.prototype.EqualEqual_InstancedStruct; } catch (e) {};
try { StructUtilsFunctionLibrary.Equal = StructUtilsFunctionLibrary.EqualEqual_InstancedStruct; } catch (e) {};
try { let fnprepatch_1475 = LevelSequenceEditorSubsystem.prototype.BakeTransformWithSettings;LevelSequenceEditorSubsystem.prototype.BakeTransformWithSettings = function (ObjectBindings, InSettings, Params = {"TimeUnit":"DisplayRate"}) { return fnprepatch_1475.call(this, ObjectBindings, InSettings, Params) }; } catch (e) {};
try { let fnprepatch_1476 = LevelSequenceEditorSubsystem.prototype.BakeTransform;LevelSequenceEditorSubsystem.prototype.BakeTransform = function (ObjectBindings, BakeInTime, BakeOutTime, BakeInterval, Params = {"TimeUnit":"DisplayRate"}) { return fnprepatch_1476.call(this, ObjectBindings, BakeInTime, BakeOutTime, BakeInterval, Params) }; } catch (e) {};
try { let fnprepatch_1477 = ControlRigBlueprintEditorLibrary.prototype.SetPreviewMesh;ControlRigBlueprintEditorLibrary.prototype.SetPreviewMesh = function (InRigBlueprint, PreviewMesh, bMarkAsDirty = true) { return fnprepatch_1477.call(this, InRigBlueprint, PreviewMesh, bMarkAsDirty) }; } catch (e) {};
try { let fnprepatch_1478 = ControlRigSequencerEditorLibrary.prototype.SnapControlRig;ControlRigSequencerEditorLibrary.prototype.SnapControlRig = function (LevelSequence, StartFrame, EndFrame, ChildrenToSnap, ParentToSnap, SnapSettings, TimeUnit = "DisplayRate") { return fnprepatch_1478.call(this, LevelSequence, StartFrame, EndFrame, ChildrenToSnap, ParentToSnap, SnapSettings, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1479 = ControlRigSequencerEditorLibrary.prototype.SetLocalControlRigVector2Ds;ControlRigSequencerEditorLibrary.prototype.SetLocalControlRigVector2Ds = function (LevelSequence, ControlRig, ControlName, Frames, Values, TimeUnit = "DisplayRate") { return fnprepatch_1479.call(this, LevelSequence, ControlRig, ControlName, Frames, Values, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1480 = ControlRigSequencerEditorLibrary.prototype.SetLocalControlRigVector2D;ControlRigSequencerEditorLibrary.prototype.SetLocalControlRigVector2D = function (LevelSequence, ControlRig, ControlName, Frame, Value, TimeUnit = "DisplayRate", bSetKey = true) { return fnprepatch_1480.call(this, LevelSequence, ControlRig, ControlName, Frame, Value, TimeUnit, bSetKey) }; } catch (e) {};
try { let fnprepatch_1481 = ControlRigSequencerEditorLibrary.prototype.SetLocalControlRigTransforms;ControlRigSequencerEditorLibrary.prototype.SetLocalControlRigTransforms = function (LevelSequence, ControlRig, ControlName, Frames, Values, TimeUnit = "DisplayRate") { return fnprepatch_1481.call(this, LevelSequence, ControlRig, ControlName, Frames, Values, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1482 = ControlRigSequencerEditorLibrary.prototype.SetLocalControlRigTransformNoScales;ControlRigSequencerEditorLibrary.prototype.SetLocalControlRigTransformNoScales = function (LevelSequence, ControlRig, ControlName, Frames, Values, TimeUnit = "DisplayRate") { return fnprepatch_1482.call(this, LevelSequence, ControlRig, ControlName, Frames, Values, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1483 = ControlRigSequencerEditorLibrary.prototype.SetLocalControlRigTransformNoScale;ControlRigSequencerEditorLibrary.prototype.SetLocalControlRigTransformNoScale = function (LevelSequence, ControlRig, ControlName, Frame, Value, TimeUnit = "DisplayRate", bSetKey = true) { return fnprepatch_1483.call(this, LevelSequence, ControlRig, ControlName, Frame, Value, TimeUnit, bSetKey) }; } catch (e) {};
try { let fnprepatch_1484 = ControlRigSequencerEditorLibrary.prototype.SetLocalControlRigTransform;ControlRigSequencerEditorLibrary.prototype.SetLocalControlRigTransform = function (LevelSequence, ControlRig, ControlName, Frame, Value, TimeUnit = "DisplayRate", bSetKey = true) { return fnprepatch_1484.call(this, LevelSequence, ControlRig, ControlName, Frame, Value, TimeUnit, bSetKey) }; } catch (e) {};
try { let fnprepatch_1485 = ControlRigSequencerEditorLibrary.prototype.SetLocalControlRigScales;ControlRigSequencerEditorLibrary.prototype.SetLocalControlRigScales = function (LevelSequence, ControlRig, ControlName, Frames, Values, TimeUnit = "DisplayRate") { return fnprepatch_1485.call(this, LevelSequence, ControlRig, ControlName, Frames, Values, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1486 = ControlRigSequencerEditorLibrary.prototype.SetLocalControlRigScale;ControlRigSequencerEditorLibrary.prototype.SetLocalControlRigScale = function (LevelSequence, ControlRig, ControlName, Frame, Value, TimeUnit = "DisplayRate", bSetKey = true) { return fnprepatch_1486.call(this, LevelSequence, ControlRig, ControlName, Frame, Value, TimeUnit, bSetKey) }; } catch (e) {};
try { let fnprepatch_1487 = ControlRigSequencerEditorLibrary.prototype.SetLocalControlRigRotators;ControlRigSequencerEditorLibrary.prototype.SetLocalControlRigRotators = function (LevelSequence, ControlRig, ControlName, Frames, Values, TimeUnit = "DisplayRate") { return fnprepatch_1487.call(this, LevelSequence, ControlRig, ControlName, Frames, Values, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1488 = ControlRigSequencerEditorLibrary.prototype.SetLocalControlRigRotator;ControlRigSequencerEditorLibrary.prototype.SetLocalControlRigRotator = function (LevelSequence, ControlRig, ControlName, Frame, Value, TimeUnit = "DisplayRate", bSetKey = true) { return fnprepatch_1488.call(this, LevelSequence, ControlRig, ControlName, Frame, Value, TimeUnit, bSetKey) }; } catch (e) {};
try { let fnprepatch_1489 = ControlRigSequencerEditorLibrary.prototype.SetLocalControlRigPositions;ControlRigSequencerEditorLibrary.prototype.SetLocalControlRigPositions = function (LevelSequence, ControlRig, ControlName, Frames, Values, TimeUnit = "DisplayRate") { return fnprepatch_1489.call(this, LevelSequence, ControlRig, ControlName, Frames, Values, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1490 = ControlRigSequencerEditorLibrary.prototype.SetLocalControlRigPosition;ControlRigSequencerEditorLibrary.prototype.SetLocalControlRigPosition = function (LevelSequence, ControlRig, ControlName, Frame, Value, TimeUnit = "DisplayRate", bSetKey = true) { return fnprepatch_1490.call(this, LevelSequence, ControlRig, ControlName, Frame, Value, TimeUnit, bSetKey) }; } catch (e) {};
try { let fnprepatch_1491 = ControlRigSequencerEditorLibrary.prototype.SetLocalControlRigInts;ControlRigSequencerEditorLibrary.prototype.SetLocalControlRigInts = function (LevelSequence, ControlRig, ControlName, Frames, Values, TimeUnit = "DisplayRate") { return fnprepatch_1491.call(this, LevelSequence, ControlRig, ControlName, Frames, Values, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1492 = ControlRigSequencerEditorLibrary.prototype.SetLocalControlRigInt;ControlRigSequencerEditorLibrary.prototype.SetLocalControlRigInt = function (LevelSequence, ControlRig, ControlName, Frame, Value, TimeUnit = "DisplayRate", bSetKey = true) { return fnprepatch_1492.call(this, LevelSequence, ControlRig, ControlName, Frame, Value, TimeUnit, bSetKey) }; } catch (e) {};
try { let fnprepatch_1493 = ControlRigSequencerEditorLibrary.prototype.SetLocalControlRigFloats;ControlRigSequencerEditorLibrary.prototype.SetLocalControlRigFloats = function (LevelSequence, ControlRig, ControlName, Frames, Values, TimeUnit = "DisplayRate") { return fnprepatch_1493.call(this, LevelSequence, ControlRig, ControlName, Frames, Values, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1494 = ControlRigSequencerEditorLibrary.prototype.SetLocalControlRigFloat;ControlRigSequencerEditorLibrary.prototype.SetLocalControlRigFloat = function (LevelSequence, ControlRig, ControlName, Frame, Value, TimeUnit = "DisplayRate", bSetKey = true) { return fnprepatch_1494.call(this, LevelSequence, ControlRig, ControlName, Frame, Value, TimeUnit, bSetKey) }; } catch (e) {};
try { let fnprepatch_1495 = ControlRigSequencerEditorLibrary.prototype.SetLocalControlRigEulerTransforms;ControlRigSequencerEditorLibrary.prototype.SetLocalControlRigEulerTransforms = function (LevelSequence, ControlRig, ControlName, Frames, Values, TimeUnit = "DisplayRate") { return fnprepatch_1495.call(this, LevelSequence, ControlRig, ControlName, Frames, Values, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1496 = ControlRigSequencerEditorLibrary.prototype.SetLocalControlRigEulerTransform;ControlRigSequencerEditorLibrary.prototype.SetLocalControlRigEulerTransform = function (LevelSequence, ControlRig, ControlName, Frame, Value, TimeUnit = "DisplayRate", bSetKey = true) { return fnprepatch_1496.call(this, LevelSequence, ControlRig, ControlName, Frame, Value, TimeUnit, bSetKey) }; } catch (e) {};
try { let fnprepatch_1497 = ControlRigSequencerEditorLibrary.prototype.SetLocalControlRigBools;ControlRigSequencerEditorLibrary.prototype.SetLocalControlRigBools = function (LevelSequence, ControlRig, ControlName, Frames, Values, TimeUnit = "DisplayRate") { return fnprepatch_1497.call(this, LevelSequence, ControlRig, ControlName, Frames, Values, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1498 = ControlRigSequencerEditorLibrary.prototype.SetLocalControlRigBool;ControlRigSequencerEditorLibrary.prototype.SetLocalControlRigBool = function (LevelSequence, ControlRig, ControlName, Frame, Value, TimeUnit = "DisplayRate", bSetKey = true) { return fnprepatch_1498.call(this, LevelSequence, ControlRig, ControlName, Frame, Value, TimeUnit, bSetKey) }; } catch (e) {};
try { let fnprepatch_1499 = ControlRigSequencerEditorLibrary.prototype.SetControlRigWorldTransforms;ControlRigSequencerEditorLibrary.prototype.SetControlRigWorldTransforms = function (LevelSequence, ControlRig, ControlName, Frames, WorldTransforms, TimeUnit = "DisplayRate") { return fnprepatch_1499.call(this, LevelSequence, ControlRig, ControlName, Frames, WorldTransforms, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1500 = ControlRigSequencerEditorLibrary.prototype.SetControlRigWorldTransform;ControlRigSequencerEditorLibrary.prototype.SetControlRigWorldTransform = function (LevelSequence, ControlRig, ControlName, Frame, WorldTransform, TimeUnit = "DisplayRate", bSetKey = true) { return fnprepatch_1500.call(this, LevelSequence, ControlRig, ControlName, Frame, WorldTransform, TimeUnit, bSetKey) }; } catch (e) {};
try { let fnprepatch_1501 = ControlRigSequencerEditorLibrary.prototype.SetControlRigSpace;ControlRigSequencerEditorLibrary.prototype.SetControlRigSpace = function (InSequence, InControlRig, InControlName, InSpaceKey, InTime, TimeUnit = "DisplayRate") { return fnprepatch_1501.call(this, InSequence, InControlRig, InControlName, InSpaceKey, InTime, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1502 = ControlRigSequencerEditorLibrary.prototype.SetConstraintActiveKey;ControlRigSequencerEditorLibrary.prototype.SetConstraintActiveKey = function (InConstraint, bActive, InFrame, TimeUnit = "DisplayRate") { return fnprepatch_1502.call(this, InConstraint, bActive, InFrame, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1503 = ControlRigSequencerEditorLibrary.prototype.MoveControlRigSpace;ControlRigSequencerEditorLibrary.prototype.MoveControlRigSpace = function (InSequence, InControlRig, InControlName, InTime, InNewTime, TimeUnit = "DisplayRate") { return fnprepatch_1503.call(this, InSequence, InControlRig, InControlName, InTime, InNewTime, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1504 = ControlRigSequencerEditorLibrary.prototype.MoveConstraintKey;ControlRigSequencerEditorLibrary.prototype.MoveConstraintKey = function (Constraint, ConstraintSection, InTime, InNewTime, TimeUnit = "DisplayRate") { return fnprepatch_1504.call(this, Constraint, ConstraintSection, InTime, InNewTime, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1505 = ControlRigSequencerEditorLibrary.prototype.LoadAnimSequenceIntoControlRigSection;ControlRigSequencerEditorLibrary.prototype.LoadAnimSequenceIntoControlRigSection = function (MovieSceneSection, AnimSequence, SkelMeshComp, InStartFrame, TimeUnit = "DisplayRate", bKeyReduce = false, Tolerance = 0.0010000000474974513) { return fnprepatch_1505.call(this, MovieSceneSection, AnimSequence, SkelMeshComp, InStartFrame, TimeUnit, bKeyReduce, Tolerance) }; } catch (e) {};
try { let fnprepatch_1506 = ControlRigSequencerEditorLibrary.prototype.GetSkeletalMeshComponentWorldTransforms;ControlRigSequencerEditorLibrary.prototype.GetSkeletalMeshComponentWorldTransforms = function (LevelSequence, SkeletalMeshComponent, Frames, TimeUnit = "DisplayRate", ReferenceName = "None") { return fnprepatch_1506.call(this, LevelSequence, SkeletalMeshComponent, Frames, TimeUnit, ReferenceName) }; } catch (e) {};
try { let fnprepatch_1507 = ControlRigSequencerEditorLibrary.prototype.GetSkeletalMeshComponentWorldTransform;ControlRigSequencerEditorLibrary.prototype.GetSkeletalMeshComponentWorldTransform = function (LevelSequence, SkeletalMeshComponent, Frame, TimeUnit = "DisplayRate", ReferenceName = "None") { return fnprepatch_1507.call(this, LevelSequence, SkeletalMeshComponent, Frame, TimeUnit, ReferenceName) }; } catch (e) {};
try { let fnprepatch_1508 = ControlRigSequencerEditorLibrary.prototype.GetLocalControlRigVector2Ds;ControlRigSequencerEditorLibrary.prototype.GetLocalControlRigVector2Ds = function (LevelSequence, ControlRig, ControlName, Frames, TimeUnit = "DisplayRate") { return fnprepatch_1508.call(this, LevelSequence, ControlRig, ControlName, Frames, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1509 = ControlRigSequencerEditorLibrary.prototype.GetLocalControlRigVector2D;ControlRigSequencerEditorLibrary.prototype.GetLocalControlRigVector2D = function (LevelSequence, ControlRig, ControlName, Frame, TimeUnit = "DisplayRate") { return fnprepatch_1509.call(this, LevelSequence, ControlRig, ControlName, Frame, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1510 = ControlRigSequencerEditorLibrary.prototype.GetLocalControlRigTransforms;ControlRigSequencerEditorLibrary.prototype.GetLocalControlRigTransforms = function (LevelSequence, ControlRig, ControlName, Frames, TimeUnit = "DisplayRate") { return fnprepatch_1510.call(this, LevelSequence, ControlRig, ControlName, Frames, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1511 = ControlRigSequencerEditorLibrary.prototype.GetLocalControlRigTransformNoScales;ControlRigSequencerEditorLibrary.prototype.GetLocalControlRigTransformNoScales = function (LevelSequence, ControlRig, ControlName, Frames, TimeUnit = "DisplayRate") { return fnprepatch_1511.call(this, LevelSequence, ControlRig, ControlName, Frames, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1512 = ControlRigSequencerEditorLibrary.prototype.GetLocalControlRigTransformNoScale;ControlRigSequencerEditorLibrary.prototype.GetLocalControlRigTransformNoScale = function (LevelSequence, ControlRig, ControlName, Frame, TimeUnit = "DisplayRate") { return fnprepatch_1512.call(this, LevelSequence, ControlRig, ControlName, Frame, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1513 = ControlRigSequencerEditorLibrary.prototype.GetLocalControlRigTransform;ControlRigSequencerEditorLibrary.prototype.GetLocalControlRigTransform = function (LevelSequence, ControlRig, ControlName, Frame, TimeUnit = "DisplayRate") { return fnprepatch_1513.call(this, LevelSequence, ControlRig, ControlName, Frame, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1514 = ControlRigSequencerEditorLibrary.prototype.GetLocalControlRigScales;ControlRigSequencerEditorLibrary.prototype.GetLocalControlRigScales = function (LevelSequence, ControlRig, ControlName, Frames, TimeUnit = "DisplayRate") { return fnprepatch_1514.call(this, LevelSequence, ControlRig, ControlName, Frames, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1515 = ControlRigSequencerEditorLibrary.prototype.GetLocalControlRigScale;ControlRigSequencerEditorLibrary.prototype.GetLocalControlRigScale = function (LevelSequence, ControlRig, ControlName, Frame, TimeUnit = "DisplayRate") { return fnprepatch_1515.call(this, LevelSequence, ControlRig, ControlName, Frame, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1516 = ControlRigSequencerEditorLibrary.prototype.GetLocalControlRigRotators;ControlRigSequencerEditorLibrary.prototype.GetLocalControlRigRotators = function (LevelSequence, ControlRig, ControlName, Frames, TimeUnit = "DisplayRate") { return fnprepatch_1516.call(this, LevelSequence, ControlRig, ControlName, Frames, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1517 = ControlRigSequencerEditorLibrary.prototype.GetLocalControlRigRotator;ControlRigSequencerEditorLibrary.prototype.GetLocalControlRigRotator = function (LevelSequence, ControlRig, ControlName, Frame, TimeUnit = "DisplayRate") { return fnprepatch_1517.call(this, LevelSequence, ControlRig, ControlName, Frame, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1518 = ControlRigSequencerEditorLibrary.prototype.GetLocalControlRigPositions;ControlRigSequencerEditorLibrary.prototype.GetLocalControlRigPositions = function (LevelSequence, ControlRig, ControlName, Frames, TimeUnit = "DisplayRate") { return fnprepatch_1518.call(this, LevelSequence, ControlRig, ControlName, Frames, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1519 = ControlRigSequencerEditorLibrary.prototype.GetLocalControlRigPosition;ControlRigSequencerEditorLibrary.prototype.GetLocalControlRigPosition = function (LevelSequence, ControlRig, ControlName, Frame, TimeUnit = "DisplayRate") { return fnprepatch_1519.call(this, LevelSequence, ControlRig, ControlName, Frame, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1520 = ControlRigSequencerEditorLibrary.prototype.GetLocalControlRigInts;ControlRigSequencerEditorLibrary.prototype.GetLocalControlRigInts = function (LevelSequence, ControlRig, ControlName, Frames, TimeUnit = "DisplayRate") { return fnprepatch_1520.call(this, LevelSequence, ControlRig, ControlName, Frames, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1521 = ControlRigSequencerEditorLibrary.prototype.GetLocalControlRigInt;ControlRigSequencerEditorLibrary.prototype.GetLocalControlRigInt = function (LevelSequence, ControlRig, ControlName, Frame, TimeUnit = "DisplayRate") { return fnprepatch_1521.call(this, LevelSequence, ControlRig, ControlName, Frame, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1522 = ControlRigSequencerEditorLibrary.prototype.GetLocalControlRigFloats;ControlRigSequencerEditorLibrary.prototype.GetLocalControlRigFloats = function (LevelSequence, ControlRig, ControlName, Frames, TimeUnit = "DisplayRate") { return fnprepatch_1522.call(this, LevelSequence, ControlRig, ControlName, Frames, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1523 = ControlRigSequencerEditorLibrary.prototype.GetLocalControlRigFloat;ControlRigSequencerEditorLibrary.prototype.GetLocalControlRigFloat = function (LevelSequence, ControlRig, ControlName, Frame, TimeUnit = "DisplayRate") { return fnprepatch_1523.call(this, LevelSequence, ControlRig, ControlName, Frame, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1524 = ControlRigSequencerEditorLibrary.prototype.GetLocalControlRigEulerTransforms;ControlRigSequencerEditorLibrary.prototype.GetLocalControlRigEulerTransforms = function (LevelSequence, ControlRig, ControlName, Frames, TimeUnit = "DisplayRate") { return fnprepatch_1524.call(this, LevelSequence, ControlRig, ControlName, Frames, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1525 = ControlRigSequencerEditorLibrary.prototype.GetLocalControlRigEulerTransform;ControlRigSequencerEditorLibrary.prototype.GetLocalControlRigEulerTransform = function (LevelSequence, ControlRig, ControlName, Frame, TimeUnit = "DisplayRate") { return fnprepatch_1525.call(this, LevelSequence, ControlRig, ControlName, Frame, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1526 = ControlRigSequencerEditorLibrary.prototype.GetLocalControlRigBools;ControlRigSequencerEditorLibrary.prototype.GetLocalControlRigBools = function (LevelSequence, ControlRig, ControlName, Frames, TimeUnit = "DisplayRate") { return fnprepatch_1526.call(this, LevelSequence, ControlRig, ControlName, Frames, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1527 = ControlRigSequencerEditorLibrary.prototype.GetLocalControlRigBool;ControlRigSequencerEditorLibrary.prototype.GetLocalControlRigBool = function (LevelSequence, ControlRig, ControlName, Frame, TimeUnit = "DisplayRate") { return fnprepatch_1527.call(this, LevelSequence, ControlRig, ControlName, Frame, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1528 = ControlRigSequencerEditorLibrary.prototype.GetControlRigWorldTransforms;ControlRigSequencerEditorLibrary.prototype.GetControlRigWorldTransforms = function (LevelSequence, ControlRig, ControlName, Frames, TimeUnit = "DisplayRate") { return fnprepatch_1528.call(this, LevelSequence, ControlRig, ControlName, Frames, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1529 = ControlRigSequencerEditorLibrary.prototype.GetControlRigWorldTransform;ControlRigSequencerEditorLibrary.prototype.GetControlRigWorldTransform = function (LevelSequence, ControlRig, ControlName, Frame, TimeUnit = "DisplayRate") { return fnprepatch_1529.call(this, LevelSequence, ControlRig, ControlName, Frame, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1530 = ControlRigSequencerEditorLibrary.prototype.GetConstraintKeys;ControlRigSequencerEditorLibrary.prototype.GetConstraintKeys = function (InConstraint, ConstraintSection, OutBools, OutFrames, TimeUnit = "DisplayRate") { return fnprepatch_1530.call(this, InConstraint, ConstraintSection, OutBools, OutFrames, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1531 = ControlRigSequencerEditorLibrary.prototype.GetActorWorldTransforms;ControlRigSequencerEditorLibrary.prototype.GetActorWorldTransforms = function (LevelSequence, Actor, Frames, TimeUnit = "DisplayRate") { return fnprepatch_1531.call(this, LevelSequence, Actor, Frames, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1532 = ControlRigSequencerEditorLibrary.prototype.GetActorWorldTransform;ControlRigSequencerEditorLibrary.prototype.GetActorWorldTransform = function (LevelSequence, Actor, Frame, TimeUnit = "DisplayRate") { return fnprepatch_1532.call(this, LevelSequence, Actor, Frame, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1533 = ControlRigSequencerEditorLibrary.prototype.DeleteControlRigSpace;ControlRigSequencerEditorLibrary.prototype.DeleteControlRigSpace = function (InSequence, InControlRig, InControlName, InTime, TimeUnit = "DisplayRate") { return fnprepatch_1533.call(this, InSequence, InControlRig, InControlName, InTime, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1534 = ControlRigSequencerEditorLibrary.prototype.DeleteConstraintKey;ControlRigSequencerEditorLibrary.prototype.DeleteConstraintKey = function (Constraint, ConstraintSection, InTime, TimeUnit = "DisplayRate") { return fnprepatch_1534.call(this, Constraint, ConstraintSection, InTime, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1535 = ControlRigSequencerEditorLibrary.prototype.Compensate;ControlRigSequencerEditorLibrary.prototype.Compensate = function (InConstraint, InTime, TimeUnit = "DisplayRate") { return fnprepatch_1535.call(this, InConstraint, InTime, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1536 = ControlRigSequencerEditorLibrary.prototype.CollapseControlRigAnimLayers;ControlRigSequencerEditorLibrary.prototype.CollapseControlRigAnimLayers = function (InSequence, InTrack, bKeyReduce = false, Tolerance = 0.0010000000474974513) { return fnprepatch_1536.call(this, InSequence, InTrack, bKeyReduce, Tolerance) }; } catch (e) {};
try { let fnprepatch_1537 = ControlRigSequencerEditorLibrary.prototype.BakeControlRigSpace;ControlRigSequencerEditorLibrary.prototype.BakeControlRigSpace = function (InSequence, InControlRig, InControlNames, InSettings, TimeUnit = "DisplayRate") { return fnprepatch_1537.call(this, InSequence, InControlRig, InControlNames, InSettings, TimeUnit) }; } catch (e) {};
try { let fnprepatch_1538 = ControlRigSequencerEditorLibrary.prototype.BakeConstraint;ControlRigSequencerEditorLibrary.prototype.BakeConstraint = function (World, Constraint, Frames, TimeUnit = "DisplayRate") { return fnprepatch_1538.call(this, World, Constraint, Frames, TimeUnit) }; } catch (e) {};
try { AndroidPermissionFunctionLibrary.prototype.CheckAndroidPermission = AndroidPermissionFunctionLibrary.prototype.CheckPermission; } catch (e) {};
try { AndroidPermissionFunctionLibrary.CheckAndroidPermission = AndroidPermissionFunctionLibrary.CheckPermission; } catch (e) {};
try { AndroidPermissionFunctionLibrary.prototype.RequestAndroidPermissions = AndroidPermissionFunctionLibrary.prototype.AcquirePermissions; } catch (e) {};
try { AndroidPermissionFunctionLibrary.RequestAndroidPermissions = AndroidPermissionFunctionLibrary.AcquirePermissions; } catch (e) {};
try { let fnprepatch_1539 = AppleImageUtilsBaseAsyncTaskBlueprintProxy.prototype.CreateProxyObjectForConvertToTIFF;AppleImageUtilsBaseAsyncTaskBlueprintProxy.prototype.CreateProxyObjectForConvertToTIFF = function (SourceImage, bWantColor = true, bUseGpu = true, Scale = 1, Rotate = "None") { return fnprepatch_1539.call(this, SourceImage, bWantColor, bUseGpu, Scale, Rotate) }; } catch (e) {};
try { let fnprepatch_1540 = AppleImageUtilsBaseAsyncTaskBlueprintProxy.prototype.CreateProxyObjectForConvertToPNG;AppleImageUtilsBaseAsyncTaskBlueprintProxy.prototype.CreateProxyObjectForConvertToPNG = function (SourceImage, bWantColor = true, bUseGpu = true, Scale = 1, Rotate = "None") { return fnprepatch_1540.call(this, SourceImage, bWantColor, bUseGpu, Scale, Rotate) }; } catch (e) {};
try { let fnprepatch_1541 = AppleImageUtilsBaseAsyncTaskBlueprintProxy.prototype.CreateProxyObjectForConvertToJPEG;AppleImageUtilsBaseAsyncTaskBlueprintProxy.prototype.CreateProxyObjectForConvertToJPEG = function (SourceImage, Quality = 85, bWantColor = true, bUseGpu = true, Scale = 1, Rotate = "None") { return fnprepatch_1541.call(this, SourceImage, Quality, bWantColor, bUseGpu, Scale, Rotate) }; } catch (e) {};
try { let fnprepatch_1542 = AppleImageUtilsBaseAsyncTaskBlueprintProxy.prototype.CreateProxyObjectForConvertToHEIF;AppleImageUtilsBaseAsyncTaskBlueprintProxy.prototype.CreateProxyObjectForConvertToHEIF = function (SourceImage, Quality = 85, bWantColor = true, bUseGpu = true, Scale = 1, Rotate = "None") { return fnprepatch_1542.call(this, SourceImage, Quality, bWantColor, bUseGpu, Scale, Rotate) }; } catch (e) {};
try { AppleImageUtilsBaseAsyncTaskBlueprintProxy.prototype.ConvertToTIFF = AppleImageUtilsBaseAsyncTaskBlueprintProxy.prototype.CreateProxyObjectForConvertToTIFF; } catch (e) {};
try { AppleImageUtilsBaseAsyncTaskBlueprintProxy.ConvertToTIFF = AppleImageUtilsBaseAsyncTaskBlueprintProxy.CreateProxyObjectForConvertToTIFF; } catch (e) {};
try { AppleImageUtilsBaseAsyncTaskBlueprintProxy.prototype.ConvertToPNG = AppleImageUtilsBaseAsyncTaskBlueprintProxy.prototype.CreateProxyObjectForConvertToPNG; } catch (e) {};
try { AppleImageUtilsBaseAsyncTaskBlueprintProxy.ConvertToPNG = AppleImageUtilsBaseAsyncTaskBlueprintProxy.CreateProxyObjectForConvertToPNG; } catch (e) {};
try { AppleImageUtilsBaseAsyncTaskBlueprintProxy.prototype.ConvertToJPEG = AppleImageUtilsBaseAsyncTaskBlueprintProxy.prototype.CreateProxyObjectForConvertToJPEG; } catch (e) {};
try { AppleImageUtilsBaseAsyncTaskBlueprintProxy.ConvertToJPEG = AppleImageUtilsBaseAsyncTaskBlueprintProxy.CreateProxyObjectForConvertToJPEG; } catch (e) {};
try { AppleImageUtilsBaseAsyncTaskBlueprintProxy.prototype.ConvertToHEIF = AppleImageUtilsBaseAsyncTaskBlueprintProxy.prototype.CreateProxyObjectForConvertToHEIF; } catch (e) {};
try { AppleImageUtilsBaseAsyncTaskBlueprintProxy.ConvertToHEIF = AppleImageUtilsBaseAsyncTaskBlueprintProxy.CreateProxyObjectForConvertToHEIF; } catch (e) {};
try { AssetTagsSubsystem.prototype.RemoveAssetsFromCollection = AssetTagsSubsystem.prototype.K2_RemoveAssetsFromCollection; } catch (e) {};
try { AssetTagsSubsystem.prototype.RemoveAssetFromCollection = AssetTagsSubsystem.prototype.K2_RemoveAssetFromCollection; } catch (e) {};
try { AssetTagsSubsystem.prototype.GetCollectionsContainingAsset = AssetTagsSubsystem.prototype.K2_GetCollectionsContainingAsset; } catch (e) {};
try { AssetTagsSubsystem.prototype.AddAssetToCollection = AssetTagsSubsystem.prototype.K2_AddAssetToCollection; } catch (e) {};
try { AssetTagsSubsystem.prototype.AddAssetsToCollection = AssetTagsSubsystem.prototype.K2_AddAssetsToCollection; } catch (e) {};
try { AudioCaptureBlueprintLibrary.prototype.AudioInputDeviceInfoToString = AudioCaptureBlueprintLibrary.prototype.Conv_AudioInputDeviceInfoToString; } catch (e) {};
try { AudioCaptureBlueprintLibrary.AudioInputDeviceInfoToString = AudioCaptureBlueprintLibrary.Conv_AudioInputDeviceInfoToString; } catch (e) {};
try { GooglePADFunctionLibrary.prototype.GetCellularDataConfirmationStatus = GooglePADFunctionLibrary.prototype.GetShowCellularDataConfirmationStatus; } catch (e) {};
try { GooglePADFunctionLibrary.GetCellularDataConfirmationStatus = GooglePADFunctionLibrary.GetShowCellularDataConfirmationStatus; } catch (e) {};
try { let fnprepatch_1543 = JavascriptEditorEngineLibrary.prototype.SelectNone;JavascriptEditorEngineLibrary.prototype.SelectNone = function (Engine, bNoteSelectionChange, bDeselectBSPSurfs, WarnAboutManyActors = true) { return fnprepatch_1543.call(this, Engine, bNoteSelectionChange, bDeselectBSPSurfs, WarnAboutManyActors) }; } catch (e) {};
try { let fnprepatch_1544 = JavascriptEditorEngineLibrary.prototype.SelectGroup;JavascriptEditorEngineLibrary.prototype.SelectGroup = function (Engine, InGroupActor, bForceSelection = false, bInSelected = true, bNotify = true) { return fnprepatch_1544.call(this, Engine, InGroupActor, bForceSelection, bInSelected, bNotify) }; } catch (e) {};
try { let fnprepatch_1545 = JavascriptEditorEngineLibrary.prototype.SelectComponent;JavascriptEditorEngineLibrary.prototype.SelectComponent = function (Engine, Component, bInSelected, bNotify, bSelectEvenIfHidden = false) { return fnprepatch_1545.call(this, Engine, Component, bInSelected, bNotify, bSelectEvenIfHidden) }; } catch (e) {};
try { let fnprepatch_1546 = JavascriptEditorEngineLibrary.prototype.SelectActor;JavascriptEditorEngineLibrary.prototype.SelectActor = function (Engine, Actor, bInSelected, bNotify, bSelectEvenIfHidden = false, bForceRefresh = false) { return fnprepatch_1546.call(this, Engine, Actor, bInSelected, bNotify, bSelectEvenIfHidden, bForceRefresh) }; } catch (e) {};
try { let fnprepatch_1547 = JavascriptEditorEngineLibrary.prototype.CanSelectActor;JavascriptEditorEngineLibrary.prototype.CanSelectActor = function (Engine, Actor, bInSelected, bSelectEvenIfHidden = false, bWarnIfLevelLocked = false) { return fnprepatch_1547.call(this, Engine, Actor, bInSelected, bSelectEvenIfHidden, bWarnIfLevelLocked) }; } catch (e) {};
try { let fnprepatch_1548 = JavascriptEditorEngineLibrary.prototype.bspBrushCSG;JavascriptEditorEngineLibrary.prototype.bspBrushCSG = function (Engine, Actor, Model, PolyFlags, BrushType, CSGOper, bBuildBounds, bMergePolys, bReplaceNULLMaterialRefs, bShowProgressBar = true) { return fnprepatch_1548.call(this, Engine, Actor, Model, PolyFlags, BrushType, CSGOper, bBuildBounds, bMergePolys, bReplaceNULLMaterialRefs, bShowProgressBar) }; } catch (e) {};
try { let fnprepatch_1549 = JavascriptEditorLibrary.prototype.SetAlphamapDataFromMemory;JavascriptEditorLibrary.prototype.SetAlphamapDataFromMemory = function (LandscapeInfo, LayerInfo, MinX, MinY, MaxX, MaxY, PaintingRestriction = "None") { return fnprepatch_1549.call(this, LandscapeInfo, LayerInfo, MinX, MinY, MaxX, MaxY, PaintingRestriction) }; } catch (e) {};
try { let fnprepatch_1550 = JavascriptEditorLibrary.prototype.RemoveComponentFromBlueprint;JavascriptEditorLibrary.prototype.RemoveComponentFromBlueprint = function (Blueprint, RemoveComponent, bPromoteChildren = false) { return fnprepatch_1550.call(this, Blueprint, RemoveComponent, bPromoteChildren) }; } catch (e) {};
try { let fnprepatch_1551 = JavascriptEditorLibrary.prototype.ModifyObject;JavascriptEditorLibrary.prototype.ModifyObject = function (Object, bAlwaysMarkDirty = false) { return fnprepatch_1551.call(this, Object, bAlwaysMarkDirty) }; } catch (e) {};
try { let fnprepatch_1552 = JavascriptEditorLibrary.prototype.GetLayerInfoByName;JavascriptEditorLibrary.prototype.GetLayerInfoByName = function (LandscapeInfo, LayerName, Owner = undefined) { return fnprepatch_1552.call(this, LandscapeInfo, LayerName, Owner) }; } catch (e) {};
try { let fnprepatch_1553 = JavascriptEditorLibrary.prototype.GetDataTableAsJSON;JavascriptEditorLibrary.prototype.GetDataTableAsJSON = function (InDataTable, InDTExportFlags = 0) { return fnprepatch_1553.call(this, InDataTable, InDTExportFlags) }; } catch (e) {};
try { let fnprepatch_1554 = JavascriptEditorLibrary.prototype.GetAssetsByType;JavascriptEditorLibrary.prototype.GetAssetsByType = function (Types, bRecursiveClasses = true) { return fnprepatch_1554.call(this, Types, bRecursiveClasses) }; } catch (e) {};
try { let fnprepatch_1555 = JavascriptEditorLibrary.prototype.DeselectAll;JavascriptEditorLibrary.prototype.DeselectAll = function (Selection, InClass = null) { return fnprepatch_1555.call(this, Selection, InClass) }; } catch (e) {};
try { let fnprepatch_1556 = JavascriptEditorLibrary.prototype.Build;JavascriptEditorLibrary.prototype.Build = function (Builder, InWorld, InBrush = undefined) { return fnprepatch_1556.call(this, Builder, InWorld, InBrush) }; } catch (e) {};
try { let fnprepatch_1557 = JavascriptEditorLibrary.prototype.AddComponentsToBlueprint;JavascriptEditorLibrary.prototype.AddComponentsToBlueprint = function (Blueprint, Components, bHarvesting = false, OptionalNewRootComponent = undefined, bKeepMobility = false) { return fnprepatch_1557.call(this, Blueprint, Components, bHarvesting, OptionalNewRootComponent, bKeepMobility) }; } catch (e) {};
try { let fnprepatch_1558 = JavascriptPropertyCustomizationLibrary.prototype.AddExternalObjects;JavascriptPropertyCustomizationLibrary.prototype.AddExternalObjects = function (ChildBuilder, Objects, UniqueIdName = "None") { return fnprepatch_1558.call(this, ChildBuilder, Objects, UniqueIdName) }; } catch (e) {};
try { let fnprepatch_1559 = JavascriptPropertyCustomizationLibrary.prototype.AddExternalObjectProperty;JavascriptPropertyCustomizationLibrary.prototype.AddExternalObjectProperty = function (ChildBuilder, Objects, PropertyName, UniqueIdName = "None", bAllowChildrenOverride = false, bCreateCategoryNodesOverride = false) { return fnprepatch_1559.call(this, ChildBuilder, Objects, PropertyName, UniqueIdName, bAllowChildrenOverride, bCreateCategoryNodesOverride) }; } catch (e) {};
try { let fnprepatch_1560 = JavascriptGraphEditorLibrary.prototype.NodeCreator;JavascriptGraphEditorLibrary.prototype.NodeCreator = function (Graph, bSelectNewNode = true) { return fnprepatch_1560.call(this, Graph, bSelectNewNode) }; } catch (e) {};
try { let fnprepatch_1561 = JavascriptGraphEditorLibrary.prototype.CommentNodeCreator;JavascriptGraphEditorLibrary.prototype.CommentNodeCreator = function (Graph, bSelectNewNode = true) { return fnprepatch_1561.call(this, Graph, bSelectNewNode) }; } catch (e) {};
try { let fnprepatch_1562 = JavascriptGraphEditorWidget.prototype.JumpToNode;JavascriptGraphEditorWidget.prototype.JumpToNode = function (JumpToMe, bRequestRename = false, bSelectNode = true) { return fnprepatch_1562.call(this, JumpToMe, bRequestRename, bSelectNode) }; } catch (e) {};
try { let fnprepatch_1563 = JavascriptGraphEdNode.prototype.GetNumOfPins;JavascriptGraphEdNode.prototype.GetNumOfPins = function (Direction = "EGPD_MAX") { return fnprepatch_1563.call(this, Direction) }; } catch (e) {};
try { SoftObjectPath.prototype.ToSoftObjectReference = SoftObjectPath.prototype.Conv_SoftObjPathToSoftObjRef; } catch (e) {};
try { Guid.prototype.ToString = Guid.prototype.Conv_GuidToString; } catch (e) {};
try { Guid.prototype.Equal = Guid.prototype.EqualEqual_GuidGuid; } catch (e) {};
try { Guid.prototype.InvalidateGuid = Guid.prototype.Invalidate_Guid; } catch (e) {};
try { Guid.prototype.IsValidGuid = Guid.prototype.IsValid_Guid; } catch (e) {};
try { Guid.prototype.NotEqual = Guid.prototype.NotEqual_GuidGuid; } catch (e) {};
try { DateTime.prototype.Equal = DateTime.prototype.EqualEqual_DateTimeDateTime; } catch (e) {};
try { DateTime.prototype.NotEqual = DateTime.prototype.NotEqual_DateTimeDateTime; } catch (e) {};
try { DateTime.prototype.AsDate = DateTime.prototype.AsDate_DateTime; } catch (e) {};
try { DateTime.prototype.AsDateTime = DateTime.prototype.AsDateTime_DateTime; } catch (e) {};
try { DateTime.prototype.AsTime = DateTime.prototype.AsTime_DateTime; } catch (e) {};
try { DateTime.prototype.AsDate = DateTime.prototype.AsTimeZoneDate_DateTime; } catch (e) {};
try { DateTime.prototype.AsDateTime = DateTime.prototype.AsTimeZoneDateTime_DateTime; } catch (e) {};
try { DateTime.prototype.AsTime = DateTime.prototype.AsTimeZoneTime_DateTime; } catch (e) {};
try { Box.prototype.RandomPointInBoundingBox = Box.prototype.RandomPointInBoundingBox_Box; } catch (e) {};
try { Vector.prototype.ToString = Vector.prototype.Conv_VectorToString; } catch (e) {};
try { Vector.prototype.ToLinearColor = Vector.prototype.Conv_VectorToLinearColor; } catch (e) {};
try { Vector.prototype.ToQuaternion = Vector.prototype.Conv_VectorToQuaternion; } catch (e) {};
try { Vector.prototype.RotationFromXVector = Vector.prototype.Conv_VectorToRotator; } catch (e) {};
try { Vector.prototype.ToTransform = Vector.prototype.Conv_VectorToTransform; } catch (e) {};
try { Vector.prototype.ToVector2D = Vector.prototype.Conv_VectorToVector2D; } catch (e) {};
try { Vector.prototype.CrossProduct = Vector.prototype.Cross_VectorVector; } catch (e) {};
try { Vector.prototype.DotProduct = Vector.prototype.Dot_VectorVector; } catch (e) {};
try { Vector.prototype.DynamicWeightedMovingAverageVector = Vector.prototype.DynamicWeightedMovingAverage_FVector; } catch (e) {};
try { Vector.prototype.Equal = Vector.prototype.EqualEqual_VectorVector; } catch (e) {};
try { Vector.prototype.EqualExactly = Vector.prototype.EqualExactly_VectorVector; } catch (e) {};
try { Vector.prototype.Truncate = Vector.prototype.FTruncVector; } catch (e) {};
try { Vector.prototype.GetUnitDirection = Vector.prototype.GetDirectionUnitVector; } catch (e) {};
try { Vector.prototype.RotateVector = Vector.prototype.GreaterGreater_VectorRotator; } catch (e) {};
try { Vector.prototype.IsPointInBox = Vector.prototype.IsPointInBox_Box; } catch (e) {};
try { Vector.prototype.IsPointInBoxWithTransform = Vector.prototype.IsPointInBoxWithTransform_Box; } catch (e) {};
try { Vector.prototype.UnrotateVector = Vector.prototype.LessLess_VectorRotator; } catch (e) {};
try { Vector.prototype.LinePlaneIntersection = Vector.prototype.LinePlaneIntersection_OriginNormal; } catch (e) {};
try { Vector.prototype.Normalize = Vector.prototype.Normal; } catch (e) {};
try { Vector.prototype.NotEqual = Vector.prototype.NotEqual_VectorVector; } catch (e) {};
try { Vector.prototype.NotEqualExactly = Vector.prototype.NotEqualExactly_VectorVector; } catch (e) {};
try { Vector.prototype.FindQuatBetweenNormals = Vector.prototype.Quat_FindBetweenNormals; } catch (e) {};
try { Vector.prototype.FindQuatBetweenVectors = Vector.prototype.Quat_FindBetweenVectors; } catch (e) {};
try { Vector.prototype.MakefromEuler = Vector.prototype.Quat_MakeFromEuler; } catch (e) {};
try { Vector.prototype.RotateVectorAroundAxis = Vector.prototype.RotateAngleAxis; } catch (e) {};
try { Vector.prototype.Ease = Vector.prototype.VEase; } catch (e) {};
try { Vector.prototype.Distance = Vector.prototype.Vector_Distance; } catch (e) {};
try { Vector.prototype.Distance2D = Vector.prototype.Vector_Distance2D; } catch (e) {};
try { Vector.prototype.Distance2DSquared = Vector.prototype.Vector_Distance2DSquared; } catch (e) {};
try { Vector.prototype.DistanceSquared = Vector.prototype.Vector_DistanceSquared; } catch (e) {};
try { Vector.prototype.IsNormal = Vector.prototype.Vector_IsNormal; } catch (e) {};
try { Vector.prototype.IsUniform = Vector.prototype.Vector_IsUniform; } catch (e) {};
try { Vector.prototype.IsUnit = Vector.prototype.Vector_IsUnit; } catch (e) {};
try { Vector.prototype.Normalize2D = Vector.prototype.Vector_Normal2D; } catch (e) {};
try { Vector.prototype.NormalizeInPlace = Vector.prototype.Vector_Normalize; } catch (e) {};
try { Vector.prototype.NormalUnsafe = Vector.prototype.Vector_NormalUnsafe; } catch (e) {};
try { Vector.prototype.Reciprocal = Vector.prototype.Vector_Reciprocal; } catch (e) {};
try { Vector.prototype.SlerpNormals = Vector.prototype.Vector_SlerpNormals; } catch (e) {};
try { Vector.prototype.SlerpVectorToDirection = Vector.prototype.Vector_SlerpVectorToDirection; } catch (e) {};
try { Vector.prototype.Lerp = Vector.prototype.VLerp; } catch (e) {};
try { Vector.prototype.VectorLength = Vector.prototype.VSize; } catch (e) {};
try { Vector.prototype.VectorLengthSquared = Vector.prototype.VSizeSquared; } catch (e) {};
try { Vector.prototype.VectorLengthXY = Vector.prototype.VSizeXY; } catch (e) {};
try { Vector.prototype.VectorLengthXYSquared = Vector.prototype.VSizeXYSquared; } catch (e) {};
try { Vector.prototype.WeightedMovingAverageVector = Vector.prototype.WeightedMovingAverage_FVector; } catch (e) {};
try { Vector.prototype.ToText = Vector.prototype.Conv_VectorToText; } catch (e) {};
try { Vector.prototype.TwoBoneIKFunction = Vector.prototype.K2_TwoBoneIK; } catch (e) {};
try { Vector2D.prototype.ToString = Vector2D.prototype.Conv_Vector2dToString; } catch (e) {};
try { Vector2D.prototype.ToIntPoint = Vector2D.prototype.Conv_Vector2DToIntPoint; } catch (e) {};
try { Vector2D.prototype.ToVector = Vector2D.prototype.Conv_Vector2DToVector; } catch (e) {};
try { Vector2D.prototype.CrossProduct = Vector2D.prototype.CrossProduct2D; } catch (e) {};
try { Vector2D.prototype.DotProduct = Vector2D.prototype.DotProduct2D; } catch (e) {};
try { Vector2D.prototype.Equal = Vector2D.prototype.EqualEqual_Vector2DVector2D; } catch (e) {};
try { Vector2D.prototype.EqualExactly = Vector2D.prototype.EqualExactly_Vector2DVector2D; } catch (e) {};
try { Vector2D.prototype.Normalize2D = Vector2D.prototype.Normal2D; } catch (e) {};
try { Vector2D.prototype.NormalizeInPlace = Vector2D.prototype.Normalize2D; } catch (e) {};
try { Vector2D.prototype.NormalSafe = Vector2D.prototype.NormalSafe2D; } catch (e) {};
try { Vector2D.prototype.NotEqual = Vector2D.prototype.NotEqual_Vector2DVector2D; } catch (e) {};
try { Vector2D.prototype.NotEqualExactly = Vector2D.prototype.NotEqualExactly_Vector2DVector2D; } catch (e) {};
try { Vector2D.prototype.ToDirectionAndLength = Vector2D.prototype.ToDirectionAndLength2D; } catch (e) {};
try { Vector2D.prototype.ToRounded = Vector2D.prototype.ToRounded2D; } catch (e) {};
try { Vector2D.prototype.ToSign = Vector2D.prototype.ToSign2D; } catch (e) {};
try { Vector2D.prototype.Vector2DLength = Vector2D.prototype.VSize2D; } catch (e) {};
try { Vector2D.prototype.Vector2DLengthSquared = Vector2D.prototype.VSize2DSquared; } catch (e) {};
try { Vector2D.prototype.ToText = Vector2D.prototype.Conv_Vector2dToText; } catch (e) {};
try { Vector3f.prototype.ToString = Vector3f.prototype.Conv_Vector3fToString; } catch (e) {};
try { Color.prototype.ToLinearColor = Color.prototype.Conv_ColorToLinearColor; } catch (e) {};
try { FrameNumber.prototype.FrameNumbertoInteger = FrameNumber.prototype.Conv_FrameNumberToInteger; } catch (e) {};
try { FrameRate.prototype.FrameRateToInterval = FrameRate.prototype.Conv_FrameRateToInterval; } catch (e) {};
try { FrameRate.prototype.FrameRateToSeconds = FrameRate.prototype.Conv_FrameRateToSeconds; } catch (e) {};
try { FrameRate.prototype.IsValidFrameRate = FrameRate.prototype.IsValid_Framerate; } catch (e) {};
try { FrameRate.prototype.IsMultipleOf = FrameRate.prototype.IsValid_MultipleOf; } catch (e) {};
try { FrameTime.prototype.SnapFrameTime = FrameTime.prototype.SnapFrameTimeToRate; } catch (e) {};
try { FrameTime.prototype.TransformFrameTime = FrameTime.prototype.TransformTime; } catch (e) {};
try { InputDeviceId.prototype.ToString = InputDeviceId.prototype.Conv_InputDeviceIdToString; } catch (e) {};
try { InputDeviceId.prototype.Equal = InputDeviceId.prototype.EqualEqual_InputDeviceId; } catch (e) {};
try { InputDeviceId.prototype.NotEqual = InputDeviceId.prototype.NotEqual_InputDeviceId; } catch (e) {};
try { LinearColor.prototype.ToString = LinearColor.prototype.Conv_ColorToString; } catch (e) {};
try { LinearColor.prototype.Interpolate = LinearColor.prototype.CInterpTo; } catch (e) {};
try { LinearColor.prototype.ToColor = LinearColor.prototype.Conv_LinearColorToColor; } catch (e) {};
try { LinearColor.prototype.ToVector = LinearColor.prototype.Conv_LinearColorToVector; } catch (e) {};
try { LinearColor.prototype.Equal = LinearColor.prototype.EqualEqual_LinearColorLinearColor; } catch (e) {};
try { LinearColor.prototype.HSVtoRGB = LinearColor.prototype.HSVToRGB_Vector; } catch (e) {};
try { LinearColor.prototype.HSVtoRGBlinearcolor = LinearColor.prototype.HSVToRGBLinear; } catch (e) {};
try { LinearColor.prototype.Desaturate = LinearColor.prototype.LinearColor_Desaturated; } catch (e) {};
try { LinearColor.prototype.Distance = LinearColor.prototype.LinearColor_Distance; } catch (e) {};
try { LinearColor.prototype.Luminance = LinearColor.prototype.LinearColor_GetLuminance; } catch (e) {};
try { LinearColor.prototype.Max = LinearColor.prototype.LinearColor_GetMax; } catch (e) {};
try { LinearColor.prototype.Min = LinearColor.prototype.LinearColor_GetMin; } catch (e) {};
try { LinearColor.prototype.NearEqual = LinearColor.prototype.LinearColor_IsNearEqual; } catch (e) {};
try { LinearColor.prototype.NewOpacity = LinearColor.prototype.LinearColor_ToNewOpacity; } catch (e) {};
try { LinearColor.prototype.ToRGBE = LinearColor.prototype.LinearColor_ToRGBE; } catch (e) {};
try { LinearColor.prototype.Lerp = LinearColor.prototype.LinearColorLerp; } catch (e) {};
try { LinearColor.prototype.LerpUsingHSV = LinearColor.prototype.LinearColorLerpUsingHSV; } catch (e) {};
try { LinearColor.prototype.NotEqual = LinearColor.prototype.NotEqual_LinearColorLinearColor; } catch (e) {};
try { LinearColor.prototype.RGBtoHSV = LinearColor.prototype.RGBLinearToHSV; } catch (e) {};
try { LinearColor.prototype.RGBtoHSV = LinearColor.prototype.RGBToHSV_Vector; } catch (e) {};
try { LinearColor.prototype.ToHex = LinearColor.prototype.ToHex_LinearColor; } catch (e) {};
try { LinearColor.prototype.ToText = LinearColor.prototype.Conv_ColorToText; } catch (e) {};
try { Quat.prototype.Equal = Quat.prototype.EqualEqual_QuatQuat; } catch (e) {};
try { Quat.prototype.NotEqual = Quat.prototype.NotEqual_QuatQuat; } catch (e) {};
try { Quat.prototype.AngularDistance = Quat.prototype.Quat_AngularDistance; } catch (e) {};
try { Quat.prototype.EnsureShortestArcTo = Quat.prototype.Quat_EnforceShortestArcWith; } catch (e) {};
try { Quat.prototype.Euler = Quat.prototype.Quat_Euler; } catch (e) {};
try { Quat.prototype.Exp = Quat.prototype.Quat_Exp; } catch (e) {};
try { Quat.prototype.Angle = Quat.prototype.Quat_GetAngle; } catch (e) {};
try { Quat.prototype.AxisX = Quat.prototype.Quat_GetAxisX; } catch (e) {};
try { Quat.prototype.AxisY = Quat.prototype.Quat_GetAxisY; } catch (e) {};
try { Quat.prototype.AxisZ = Quat.prototype.Quat_GetAxisZ; } catch (e) {};
try { Quat.prototype.RotationAxis = Quat.prototype.Quat_GetRotationAxis; } catch (e) {};
try { Quat.prototype.Inversed = Quat.prototype.Quat_Inversed; } catch (e) {};
try { Quat.prototype.IsFinite = Quat.prototype.Quat_IsFinite; } catch (e) {};
try { Quat.prototype.IsIdentity = Quat.prototype.Quat_IsIdentity; } catch (e) {};
try { Quat.prototype.IsNormalized = Quat.prototype.Quat_IsNormalized; } catch (e) {};
try { Quat.prototype.Log = Quat.prototype.Quat_Log; } catch (e) {};
try { Quat.prototype.Normalize = Quat.prototype.Quat_Normalize; } catch (e) {};
try { Quat.prototype.Normalized = Quat.prototype.Quat_Normalized; } catch (e) {};
try { Quat.prototype.RotateVector = Quat.prototype.Quat_RotateVector; } catch (e) {};
try { Quat.prototype.ToRotator = Quat.prototype.Quat_Rotator; } catch (e) {};
try { Quat.prototype.SetComponents = Quat.prototype.Quat_SetComponents; } catch (e) {};
try { Quat.prototype.SetfromEuler = Quat.prototype.Quat_SetFromEuler; } catch (e) {};
try { Quat.prototype.Size = Quat.prototype.Quat_Size; } catch (e) {};
try { Quat.prototype.SizeSquared = Quat.prototype.Quat_SizeSquared; } catch (e) {};
try { Quat.prototype.Slerp = Quat.prototype.Quat_Slerp; } catch (e) {};
try { Quat.prototype.UnrotateVector = Quat.prototype.Quat_UnrotateVector; } catch (e) {};
try { Quat.prototype.VectorForward = Quat.prototype.Quat_VectorForward; } catch (e) {};
try { Quat.prototype.VectorRight = Quat.prototype.Quat_VectorRight; } catch (e) {};
try { Quat.prototype.VectorUp = Quat.prototype.Quat_VectorUp; } catch (e) {};
try { IntPoint.prototype.ToString = IntPoint.prototype.Conv_IntPointToString; } catch (e) {};
try { IntPoint.prototype.ToVector2D = IntPoint.prototype.Conv_IntPointToVector2D; } catch (e) {};
try { IntPoint.prototype.Equal = IntPoint.prototype.Equal_IntPointIntPoint; } catch (e) {};
try { IntPoint.prototype.NotEqual = IntPoint.prototype.NotEqual_IntPointIntPoint; } catch (e) {};
try { IntVector.prototype.ToString = IntVector.prototype.Conv_IntVectorToString; } catch (e) {};
try { IntVector.prototype.ToVector = IntVector.prototype.Conv_IntVectorToVector; } catch (e) {};
try { Matrix.prototype.ToString = Matrix.prototype.Conv_MatrixToString; } catch (e) {};
try { Matrix.prototype.ToRotator = Matrix.prototype.Conv_MatrixToRotator; } catch (e) {};
try { Matrix.prototype.ToTransform = Matrix.prototype.Conv_MatrixToTransform; } catch (e) {};
try { Matrix.prototype.Equal = Matrix.prototype.EqualEqual_MatrixMatrix; } catch (e) {};
try { Matrix.prototype.ApplyScale = Matrix.prototype.Matrix_ApplyScale; } catch (e) {};
try { Matrix.prototype.ConcatenateTranslation = Matrix.prototype.Matrix_ConcatenateTranslation; } catch (e) {};
try { Matrix.prototype.ContainsNaN = Matrix.prototype.Matrix_ContainsNaN; } catch (e) {};
try { Matrix.prototype.GetColumn = Matrix.prototype.Matrix_GetColumn; } catch (e) {};
try { Matrix.prototype.GetDeterminant = Matrix.prototype.Matrix_GetDeterminant; } catch (e) {};
try { Matrix.prototype.GetFrustumBottomPlane = Matrix.prototype.Matrix_GetFrustumBottomPlane; } catch (e) {};
try { Matrix.prototype.GetFrustumFarPlane = Matrix.prototype.Matrix_GetFrustumFarPlane; } catch (e) {};
try { Matrix.prototype.GetFrustumLeftPlane = Matrix.prototype.Matrix_GetFrustumLeftPlane; } catch (e) {};
try { Matrix.prototype.GetFrustumNearPlane = Matrix.prototype.Matrix_GetFrustumNearPlane; } catch (e) {};
try { Matrix.prototype.GetFrustumRightPlane = Matrix.prototype.Matrix_GetFrustumRightPlane; } catch (e) {};
try { Matrix.prototype.GetFrustumTopPlane = Matrix.prototype.Matrix_GetFrustumTopPlane; } catch (e) {};
try { Matrix.prototype.GetInverse = Matrix.prototype.Matrix_GetInverse; } catch (e) {};
try { Matrix.prototype.GetMatrixWithoutScale = Matrix.prototype.Matrix_GetMatrixWithoutScale; } catch (e) {};
try { Matrix.prototype.GetMaximumAxisScale = Matrix.prototype.Matrix_GetMaximumAxisScale; } catch (e) {};
try { Matrix.prototype.GetOrigin = Matrix.prototype.Matrix_GetOrigin; } catch (e) {};
try { Matrix.prototype.GetRotator = Matrix.prototype.Matrix_GetRotator; } catch (e) {};
try { Matrix.prototype.GetRotationDeterminant = Matrix.prototype.Matrix_GetRotDeterminant; } catch (e) {};
try { Matrix.prototype.GetScaledAxes = Matrix.prototype.Matrix_GetScaledAxes; } catch (e) {};
try { Matrix.prototype.GetScaledAxis = Matrix.prototype.Matrix_GetScaledAxis; } catch (e) {};
try { Matrix.prototype.GetScaleVector = Matrix.prototype.Matrix_GetScaleVector; } catch (e) {};
try { Matrix.prototype.GetTransposeAdjoint = Matrix.prototype.Matrix_GetTransposeAdjoint; } catch (e) {};
try { Matrix.prototype.GetTransposed = Matrix.prototype.Matrix_GetTransposed; } catch (e) {};
try { Matrix.prototype.GetUnitAxes = Matrix.prototype.Matrix_GetUnitAxes; } catch (e) {};
try { Matrix.prototype.GetUnitAxis = Matrix.prototype.Matrix_GetUnitAxis; } catch (e) {};
try { Matrix.prototype.InverseTransformPosition = Matrix.prototype.Matrix_InverseTransformPosition; } catch (e) {};
try { Matrix.prototype.InverseTransformVector = Matrix.prototype.Matrix_InverseTransformVector; } catch (e) {};
try { Matrix.prototype.Mirror = Matrix.prototype.Matrix_Mirror; } catch (e) {};
try { Matrix.prototype.RemoveScaling = Matrix.prototype.Matrix_RemoveScaling; } catch (e) {};
try { Matrix.prototype.RemoveTranslation = Matrix.prototype.Matrix_RemoveTranslation; } catch (e) {};
try { Matrix.prototype.ScaleTranslation = Matrix.prototype.Matrix_ScaleTranslation; } catch (e) {};
try { Matrix.prototype.SetAxis = Matrix.prototype.Matrix_SetAxis; } catch (e) {};
try { Matrix.prototype.SetColumn = Matrix.prototype.Matrix_SetColumn; } catch (e) {};
try { Matrix.prototype.SetOrigin = Matrix.prototype.Matrix_SetOrigin; } catch (e) {};
try { Matrix.prototype.ToQuat = Matrix.prototype.Matrix_ToQuat; } catch (e) {};
try { Matrix.prototype.TransformPosition = Matrix.prototype.Matrix_TransformPosition; } catch (e) {};
try { Matrix.prototype.TransformVector = Matrix.prototype.Matrix_TransformVector; } catch (e) {};
try { Matrix.prototype.TransformVector4 = Matrix.prototype.Matrix_TransformVector4; } catch (e) {};
try { Matrix.prototype.NotEqual = Matrix.prototype.NotEqual_MatrixMatrix; } catch (e) {};
try { Matrix.prototype.TransformVector4byMatrix = Matrix.prototype.TransformVector4; } catch (e) {};
try { PlatformUserId.prototype.ToString = PlatformUserId.prototype.Conv_PlatformUserIdToString; } catch (e) {};
try { PlatformUserId.prototype.Equal = PlatformUserId.prototype.EqualEqual_PlatformUserId; } catch (e) {};
try { PlatformUserId.prototype.NotEqual = PlatformUserId.prototype.NotEqual_PlatformUserId; } catch (e) {};
try { PrimaryAssetId.prototype.ToString = PrimaryAssetId.prototype.Conv_PrimaryAssetIdToString; } catch (e) {};
try { PrimaryAssetId.prototype.Equal = PrimaryAssetId.prototype.EqualEqual_PrimaryAssetId; } catch (e) {};
try { PrimaryAssetId.prototype.NotEqual = PrimaryAssetId.prototype.NotEqual_PrimaryAssetId; } catch (e) {};
try { PrimaryAssetType.prototype.ToString = PrimaryAssetType.prototype.Conv_PrimaryAssetTypeToString; } catch (e) {};
try { PrimaryAssetType.prototype.Equal = PrimaryAssetType.prototype.EqualEqual_PrimaryAssetType; } catch (e) {};
try { PrimaryAssetType.prototype.NotEqual = PrimaryAssetType.prototype.NotEqual_PrimaryAssetType; } catch (e) {};
try { QualifiedFrameTime.prototype.QualifiedFrameTimeToSeconds = QualifiedFrameTime.prototype.Conv_QualifiedFrameTimeToSeconds; } catch (e) {};
try { RandomStream.prototype.RandomPointInBoundingBoxFromStream = RandomStream.prototype.RandomPointInBoundingBoxFromStream_Box; } catch (e) {};
try { Rotator.prototype.ToString = Rotator.prototype.Conv_RotatorToString; } catch (e) {};
try { Rotator.prototype.CombineRotators = Rotator.prototype.ComposeRotators; } catch (e) {};
try { Rotator.prototype.ToQuaternion = Rotator.prototype.Conv_RotatorToQuaternion; } catch (e) {};
try { Rotator.prototype.ToTransform = Rotator.prototype.Conv_RotatorToTransform; } catch (e) {};
try { Rotator.prototype.GetRotationXVector = Rotator.prototype.Conv_RotatorToVector; } catch (e) {};
try { Rotator.prototype.DynamicWeightedMovingAverageRotator = Rotator.prototype.DynamicWeightedMovingAverage_FRotator; } catch (e) {};
try { Rotator.prototype.Equal = Rotator.prototype.EqualEqual_RotatorRotator; } catch (e) {};
try { Rotator.prototype.ScaleRotator = Rotator.prototype.Multiply_RotatorFloat; } catch (e) {};
try { Rotator.prototype.ScaleRotator = Rotator.prototype.Multiply_RotatorInt; } catch (e) {};
try { Rotator.prototype.InvertRotator = Rotator.prototype.NegateRotator; } catch (e) {};
try { Rotator.prototype.Delta = Rotator.prototype.NormalizedDeltaRotator; } catch (e) {};
try { Rotator.prototype.NotEqual = Rotator.prototype.NotEqual_RotatorRotator; } catch (e) {};
try { Rotator.prototype.Ease = Rotator.prototype.REase; } catch (e) {};
try { Rotator.prototype.Lerp = Rotator.prototype.RLerp; } catch (e) {};
try { Rotator.prototype.WeightedMovingAverageRotator = Rotator.prototype.WeightedMovingAverage_FRotator; } catch (e) {};
try { Rotator.prototype.ToText = Rotator.prototype.Conv_RotatorToText; } catch (e) {};
try { SoftClassPath.prototype.ToSoftClassReference = SoftClassPath.prototype.Conv_SoftClassPathToSoftClassRef; } catch (e) {};
try { Timecode.prototype.TimecodeToString = Timecode.prototype.Conv_TimecodeToString; } catch (e) {};
try { Timespan.prototype.Equal = Timespan.prototype.EqualEqual_TimespanTimespan; } catch (e) {};
try { Timespan.prototype.NotEqual = Timespan.prototype.NotEqual_TimespanTimespan; } catch (e) {};
try { Timespan.prototype.AsTimespan = Timespan.prototype.AsTimespan_Timespan; } catch (e) {};
try { Transform.prototype.ToString = Transform.prototype.Conv_TransformToString; } catch (e) {};
try { Transform.prototype.ToMatrix = Transform.prototype.Conv_TransformToMatrix; } catch (e) {};
try { Transform.prototype.Equal = Transform.prototype.EqualEqual_TransformTransform; } catch (e) {};
try { Transform.prototype.NearlyEqual = Transform.prototype.NearlyEqual_TransformTransform; } catch (e) {};
try { Transform.prototype.Ease = Transform.prototype.TEase; } catch (e) {};
try { Transform.prototype.Lerp = Transform.prototype.TLerp; } catch (e) {};
try { Transform.prototype.Determinant = Transform.prototype.Transform_Determinant; } catch (e) {};
try { Transform.prototype.ToText = Transform.prototype.Conv_TransformToText; } catch (e) {};
try { Transform.prototype.LookAtFunction = Transform.prototype.K2_LookAt; } catch (e) {};
try { Vector4.prototype.ToQuaternion = Vector4.prototype.Conv_Vector4ToQuaternion; } catch (e) {};
try { Vector4.prototype.ToRotation = Vector4.prototype.Conv_Vector4ToRotator; } catch (e) {};
try { Vector4.prototype.ToVector = Vector4.prototype.Conv_Vector4ToVector; } catch (e) {};
try { Vector4.prototype.Equal = Vector4.prototype.EqualEqual_Vector4Vector4; } catch (e) {};
try { Vector4.prototype.EqualExactly = Vector4.prototype.EqualExactly_Vector4Vector4; } catch (e) {};
try { Vector4.prototype.NotEqual = Vector4.prototype.NotEqual_Vector4Vector4; } catch (e) {};
try { Vector4.prototype.NotEqualExactly = Vector4.prototype.NotEqualExactly_Vector4Vector4; } catch (e) {};
try { Vector4.prototype.CrossProductXYZ = Vector4.prototype.Vector4_CrossProduct3; } catch (e) {};
try { Vector4.prototype.DotProduct = Vector4.prototype.Vector4_DotProduct; } catch (e) {};
try { Vector4.prototype.DotProductXYZ = Vector4.prototype.Vector4_DotProduct3; } catch (e) {};
try { Vector4.prototype.IsNormalXYZ = Vector4.prototype.Vector4_IsNormal3; } catch (e) {};
try { Vector4.prototype.IsUnitXYZ = Vector4.prototype.Vector4_IsUnit3; } catch (e) {};
try { Vector4.prototype.Negated = Vector4.prototype.Vector4_Negated; } catch (e) {};
try { Vector4.prototype.NormalizeXYZ = Vector4.prototype.Vector4_Normal3; } catch (e) {};
try { Vector4.prototype.NormalizeInPlaceXYZ = Vector4.prototype.Vector4_Normalize3; } catch (e) {};
try { Vector4.prototype.NormalUnsafeXYZ = Vector4.prototype.Vector4_NormalUnsafe3; } catch (e) {};
try { Vector4.prototype.Length = Vector4.prototype.Vector4_Size; } catch (e) {};
try { Vector4.prototype.LengthXYZ = Vector4.prototype.Vector4_Size3; } catch (e) {};
try { Vector4.prototype.LengthSquared = Vector4.prototype.Vector4_SizeSquared; } catch (e) {};
try { Vector4.prototype.LengthXYZSquared = Vector4.prototype.Vector4_SizeSquared3; } catch (e) {};
try { Key.prototype.Equal = Key.prototype.EqualEqual_KeyKey; } catch (e) {};
try { Key.prototype.GetKeyDisplayName = Key.prototype.Key_GetDisplayName; } catch (e) {};
try { Key.prototype.GetKeyNavigationAction = Key.prototype.Key_GetNavigationAction; } catch (e) {};
try { Key.prototype.IsAnalog = Key.prototype.Key_IsAnalog; } catch (e) {};
try { Key.prototype.IsAxis1D = Key.prototype.Key_IsAxis1D; } catch (e) {};
try { Key.prototype.IsAxis2D = Key.prototype.Key_IsAxis2D; } catch (e) {};
try { Key.prototype.IsAxis3D = Key.prototype.Key_IsAxis3D; } catch (e) {};
try { Key.prototype.IsButtonAxis = Key.prototype.Key_IsButtonAxis; } catch (e) {};
try { Key.prototype.IsDigital = Key.prototype.Key_IsDigital; } catch (e) {};
try { Key.prototype.IsGamepadKey = Key.prototype.Key_IsGamepadKey; } catch (e) {};
try { Key.prototype.IsKeyboardKey = Key.prototype.Key_IsKeyboardKey; } catch (e) {};
try { Key.prototype.IsModifierKey = Key.prototype.Key_IsModifierKey; } catch (e) {};
try { Key.prototype.IsMouseButton = Key.prototype.Key_IsMouseButton; } catch (e) {};
try { Key.prototype.IsValidKey = Key.prototype.Key_IsValid; } catch (e) {};
try { Key.prototype.IsVectorAxis = Key.prototype.Key_IsVectorAxis; } catch (e) {};
try { TimerHandle.prototype.InvalidateTimerHandle = TimerHandle.prototype.K2_InvalidateTimerHandle; } catch (e) {};
try { TimerHandle.prototype.IsValidTimerHandle = TimerHandle.prototype.K2_IsValidTimerHandle; } catch (e) {};
try { SlateBrush.prototype.Equal = SlateBrush.prototype.EqualEqual_SlateBrush; } catch (e) {};
try { InputEvent.prototype.IsAltDown = InputEvent.prototype.InputEvent_IsAltDown; } catch (e) {};
try { InputEvent.prototype.IsCommandDown = InputEvent.prototype.InputEvent_IsCommandDown; } catch (e) {};
try { InputEvent.prototype.IsControlDown = InputEvent.prototype.InputEvent_IsControlDown; } catch (e) {};
try { InputEvent.prototype.IsLeftAltDown = InputEvent.prototype.InputEvent_IsLeftAltDown; } catch (e) {};
try { InputEvent.prototype.IsLeftCommandDown = InputEvent.prototype.InputEvent_IsLeftCommandDown; } catch (e) {};
try { InputEvent.prototype.IsLeftControlDown = InputEvent.prototype.InputEvent_IsLeftControlDown; } catch (e) {};
try { InputEvent.prototype.IsLeftShiftDown = InputEvent.prototype.InputEvent_IsLeftShiftDown; } catch (e) {};
try { InputEvent.prototype.IsRepeat = InputEvent.prototype.InputEvent_IsRepeat; } catch (e) {};
try { InputEvent.prototype.IsRightAltDown = InputEvent.prototype.InputEvent_IsRightAltDown; } catch (e) {};
try { InputEvent.prototype.IsRightCommandDown = InputEvent.prototype.InputEvent_IsRightCommandDown; } catch (e) {};
try { InputEvent.prototype.IsRightControlDown = InputEvent.prototype.InputEvent_IsRightControlDown; } catch (e) {};
try { InputEvent.prototype.IsRightShiftDown = InputEvent.prototype.InputEvent_IsRightShiftDown; } catch (e) {};
try { InputEvent.prototype.IsShiftDown = InputEvent.prototype.InputEvent_IsShiftDown; } catch (e) {};
try { UPointerEvent.prototype.GetCursorDelta = UPointerEvent.prototype.PointerEvent_GetCursorDelta; } catch (e) {};
try { UPointerEvent.prototype.GetEffectingButton = UPointerEvent.prototype.PointerEvent_GetEffectingButton; } catch (e) {};
try { UPointerEvent.prototype.GetGestureDelta = UPointerEvent.prototype.PointerEvent_GetGestureDelta; } catch (e) {};
try { UPointerEvent.prototype.GetLastScreenSpacePosition = UPointerEvent.prototype.PointerEvent_GetLastScreenSpacePosition; } catch (e) {};
try { UPointerEvent.prototype.GetPointerIndex = UPointerEvent.prototype.PointerEvent_GetPointerIndex; } catch (e) {};
try { UPointerEvent.prototype.GetScreenSpacePosition = UPointerEvent.prototype.PointerEvent_GetScreenSpacePosition; } catch (e) {};
try { UPointerEvent.prototype.GetTouchpadIndex = UPointerEvent.prototype.PointerEvent_GetTouchpadIndex; } catch (e) {};
try { UPointerEvent.prototype.GetUserIndex = UPointerEvent.prototype.PointerEvent_GetUserIndex; } catch (e) {};
try { UPointerEvent.prototype.GetWheelDelta = UPointerEvent.prototype.PointerEvent_GetWheelDelta; } catch (e) {};
try { UPointerEvent.prototype.IsMouseButtonDown = UPointerEvent.prototype.PointerEvent_IsMouseButtonDown; } catch (e) {};
try { UPointerEvent.prototype.IsTouchEvent = UPointerEvent.prototype.PointerEvent_IsTouchEvent; } catch (e) {};
try { InputChord.prototype.Equal = InputChord.prototype.EqualEqual_InputChordInputChord; } catch (e) {};
try { InputChord.prototype.GetInputChordDisplayName = InputChord.prototype.InputChord_GetDisplayName; } catch (e) {};
try { PaintContext.prototype.DrawString = PaintContext.prototype.DrawText; } catch (e) {};
try { PaintContext.prototype.DrawText = PaintContext.prototype.DrawTextFormatted; } catch (e) {};
try { KeyEvent.prototype.GetKeyEventNavigationAction = KeyEvent.prototype.Key_GetNavigationActionFromKey; } catch (e) {};
try { KeyEvent.prototype.GetKeyEventNavigationDirection = KeyEvent.prototype.Key_GetNavigationDirectionFromKey; } catch (e) {};
try { AnalogInputEvent.prototype.GetAnalogEventNavigationDirection = AnalogInputEvent.prototype.Key_GetNavigationDirectionFromAnalog; } catch (e) {};
try { AudioOutputDeviceInfo.prototype.AudioOutputDeviceInfoToString = AudioOutputDeviceInfo.prototype.Conv_AudioOutputDeviceInfoToString; } catch (e) {};
try { GameplayTag.prototype.Equal = GameplayTag.prototype.EqualEqual_GameplayTag; } catch (e) {};
try { GameplayTag.prototype.NotEqual = GameplayTag.prototype.NotEqual_GameplayTag; } catch (e) {};
try { GameplayTagContainer.prototype.Equal = GameplayTagContainer.prototype.EqualEqual_GameplayTagContainer; } catch (e) {};
try { GameplayTagContainer.prototype.NotEqual = GameplayTagContainer.prototype.NotEqual_GameplayTagContainer; } catch (e) {};
try { AnimNodeReference.prototype.ConverttoSkeletalControl = AnimNodeReference.prototype.ConvertToSkeletalControlPure; } catch (e) {};
try { AnimNodeReference.prototype.ConverttoSequencePlayer = AnimNodeReference.prototype.ConvertToSequencePlayerPure; } catch (e) {};
try { AnimNodeReference.prototype.ConverttoSequenceEvaluator = AnimNodeReference.prototype.ConvertToSequenceEvaluatorPure; } catch (e) {};
try { AnimNodeReference.prototype.ConverttoLinkedAnimGraph = AnimNodeReference.prototype.ConvertToLinkedAnimGraphPure; } catch (e) {};
try { AnimNodeReference.prototype.ConverttoLayeredBoneBlend = AnimNodeReference.prototype.ConvertToLayeredBlendPerBonePure; } catch (e) {};
try { AnimNodeReference.prototype.ConverttoBlendSpacePlayer = AnimNodeReference.prototype.ConvertToBlendSpacePlayerPure; } catch (e) {};
try { AnimNodeReference.prototype.ConverttoAnimationStateMachine = AnimNodeReference.prototype.ConvertToAnimationStateMachinePure; } catch (e) {};
try { AnimNodeReference.prototype.ConverttoAnimationState = AnimNodeReference.prototype.ConvertToAnimationStateResult; } catch (e) {};
try { AnimNodeReference.prototype.ConverttoAnimationState = AnimNodeReference.prototype.ConvertToAnimationStateResultPure; } catch (e) {};
try { AnimNodeReference.prototype.ConverttoBlendSpace = AnimNodeReference.prototype.ConvertToBlendSpacePure; } catch (e) {};
try { SequencePlayerReference.prototype.GetSequence = SequencePlayerReference.prototype.GetSequencePure; } catch (e) {};
try { CameraLensInterfaceClassSupport.prototype.IsValidCameraLensClass = CameraLensInterfaceClassSupport.prototype.IsInterfaceClassValid; } catch (e) {};
try { SlateModifierKeysState.prototype.IsAltDown = SlateModifierKeysState.prototype.ModifierKeysState_IsAltDown; } catch (e) {};
try { SlateModifierKeysState.prototype.IsCommandDown = SlateModifierKeysState.prototype.ModifierKeysState_IsCommandDown; } catch (e) {};
try { SlateModifierKeysState.prototype.IsControlDown = SlateModifierKeysState.prototype.ModifierKeysState_IsControlDown; } catch (e) {};
try { SlateModifierKeysState.prototype.IsShiftDown = SlateModifierKeysState.prototype.ModifierKeysState_IsShiftDown; } catch (e) {};
try { InputActionValue.prototype.ToString = InputActionValue.prototype.Conv_InputActionValueToString; } catch (e) {};
try { InstancedStruct.prototype.Equal = InstancedStruct.prototype.EqualEqual_InstancedStruct; } catch (e) {};
try { InstancedStruct.prototype.IsValid = InstancedStruct.prototype.IsInstancedStructValid; } catch (e) {};
try { InstancedStruct.prototype.IsValid = InstancedStruct.prototype.IsValid_InstancedStruct; } catch (e) {};
try { InstancedStruct.prototype.NotEqual = InstancedStruct.prototype.NotEqual_InstancedStruct; } catch (e) {};
try { AudioInputDeviceInfo.prototype.AudioInputDeviceInfoToString = AudioInputDeviceInfo.prototype.Conv_AudioInputDeviceInfoToString; } catch (e) {};
